äñ
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Actores\GrupoClientes_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class  
GrupoClientes_Logica -
:. /!
IGrupoClientes_Logica0 E
{ 
private 
readonly 
IActor_Repositorio +
_actor_Repositorio, >
;> ?
private 
readonly %
IVinculoActor_Repositorio 2%
_vinculoActor_Repositorio3 L
;L M
private 
readonly &
IConsultaActor_Repositorio 3&
_consultaActor_Repositorio4 N
;N O
public  
GrupoClientes_Logica #
(# $
IActor_Repositorio$ 6
actor_Repositorio7 H
,H I%
IVinculoActor_RepositorioJ c$
vinculoActor_Repositoriod |
,| }'
IConsultaActor_Repositorio	~ ò'
consultaActor_Repositorio
ô ≤
)
≤ ≥
{ 	
_actor_Repositorio 
=  
actor_Repositorio! 2
;2 3%
_vinculoActor_Repositorio %
=& '$
vinculoActor_Repositorio( @
;@ A&
_consultaActor_Repositorio &
=' (%
consultaActor_Repositorio) B
;B C
} 	
public!!  
GrupoClientes_Logica!! #
(!!# $
)!!$ %
{"" 	
}## 	
public$$ 
OperationResult$$ 
CrearGrupoClientes$$ 1
($$1 2
GrupoClientes$$2 ?
grupoClientes$$@ M
)$$M N
{%% 	
try&& 
{'' 
if(( 
((( %
_vinculoActor_Repositorio(( -
.((- .%
ExisteCodigoGrupoClientes((. G
(((G H
(((H I
int((I L
)((L M
TipoVinculo((M X
.((X Y
MiembroGrupo((Y e
,((e f
grupoClientes((g t
.((t u
Codigo((u {
)(({ |
)((| }
{)) 
throw** 
new** 
LogicaException** -
(**- .
$str	**. á
)
**á à
;
**à â
}++ 
if,, 
(,, %
_vinculoActor_Repositorio,, -
.,,- .=
1ExisteNombreGrupoClientesEnGruposClientesVigentes,,. _
(,,_ `
(,,` a
int,,a d
),,d e
TipoVinculo,,e p
.,,p q
MiembroGrupo,,q }
,,,} ~
grupoClientes	,, å
.
,,å ç
Nombre
,,ç ì
)
,,ì î
)
,,î ï
{-- 
throw.. 
new.. 
LogicaException.. -
(..- .
$str	... á
)
..á à
;
..à â
}// 
var00 
grupoActorNegocio00 %
=00& ',
 GenerarGrupoClientesActorNegocio00( H
(00H I
grupoClientes00I V
)00V W
;00W X
var11 
	resultado11 
=11 
_actor_Repositorio11  2
.112 3
CrearActorNegocio113 D
(11D E
grupoActorNegocio11E V
)11V W
;11W X
return22 
	resultado22  
;22  !
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{44  !
throw44" '
e44( )
;44) *
}44+ ,
}55 	
public66 
OperationResult66 #
ActualizarGrupoClientes66 6
(666 7
GrupoClientes667 D
grupoClientes66E R
)66R S
{77 	
try88 
{99 
if:: 
(:: %
_vinculoActor_Repositorio:: -
.::- .9
-ExisteCodigoGrupoClientesExceptoGrupoClientes::. [
(::[ \
(::\ ]
int::] `
)::` a
TipoVinculo::a l
.::l m
MiembroGrupo::m y
,::y z
grupoClientes	::{ à
.
::à â
Codigo
::â è
,
::è ê
grupoClientes
::ë û
.
::û ü
Id
::ü °
)
::° ¢
)
::¢ £
{;; 
throw<< 
new<< 
LogicaException<< -
(<<- .
$str	<<. á
)
<<á à
;
<<à â
}== 
if>> 
(>> %
_vinculoActor_Repositorio>> -
.>>- .Q
EExisteNombreGrupoClientesEnGruposClientesVigentesExceptoGrupoClientes>>. s
(>>s t
(>>t u
int>>u x
)>>x y
TipoVinculo	>>y Ñ
.
>>Ñ Ö
MiembroGrupo
>>Ö ë
,
>>ë í
grupoClientes
>>ì †
.
>>† °
Nombre
>>° ß
,
>>ß ®
grupoClientes
>>© ∂
.
>>∂ ∑
Id
>>∑ π
)
>>π ∫
)
>>∫ ª
{?? 
throw@@ 
new@@ 
LogicaException@@ -
(@@- .
$str	@@. á
)
@@á à
;
@@à â
}AA -
!ValidarActualizacionGrupoClientesBB 1
(BB1 2
grupoClientesBB2 ?
)BB? @
;BB@ A
varCC 
grupoActorNegocioCC %
=CC& ',
 GenerarGrupoClientesActorNegocioCC( H
(CCH I
grupoClientesCCI V
)CCV W
;CCW X
grupoActorNegocioDD !
.DD! "
idDD" $
=DD% &
grupoClientesDD' 4
.DD4 5
IdDD5 7
;DD7 8
grupoActorNegocioEE !
.EE! "
id_actorEE" *
=EE+ ,
grupoClientesEE- :
.EE: ;
IdActorEE; B
;EEB C
grupoActorNegocioFF !
.FF! "
ActorFF" '
.FF' (
idFF( *
=FF+ ,
grupoClientesFF- :
.FF: ;
IdActorFF; B
;FFB C
returnGG %
_vinculoActor_RepositorioGG 0
.GG0 1;
/ActualizarActorPrincipalConVinculosActorNegocioGG1 `
(GG` a
grupoActorNegocioGGa r
)GGr s
;GGs t
}HH 
catchII 
(II 
	ExceptionII 
eII 
)II 
{II  !
throwII" '
eII( )
;II) *
}II+ ,
}JJ 	
publicKK 
voidKK -
!ValidarActualizacionGrupoClientesKK 5
(KK5 6
GrupoClientesKK6 C
grupoClientesKKD Q
)KKQ R
{LL 	
varMM 
grupoClientesActualMM #
=MM$ % 
ObtenerGrupoClientesMM& :
(MM: ;
grupoClientesMM; H
.MMH I
IdMMI K
)MMK L
;MML M
foreachNN 
(NN 
varNN 
clienteNN  
inNN! #
grupoClientesActualNN$ 7
.NN7 8
ClientesNN8 @
)NN@ A
{OO 
ifPP 
(PP 
!PP 
grupoClientesPP "
.PP" #
ClientesPP# +
.PP+ ,
SelectPP, 2
(PP2 3
cPP3 4
=>PP5 7
cPP8 9
.PP9 :
IdPP: <
)PP< =
.PP= >
ContainsPP> F
(PPF G
clientePPG N
.PPN O
IdPPO Q
)PPQ R
)PPR S
{QQ 
ifRR 
(RR %
_vinculoActor_RepositorioRR 1
.RR1 2B
6ExisteDeudaDeClienteEnOperacionesVentaConGrupoClientesRR2 h
(RRh i
clienteRRi p
.RRp q
IdRRq s
,RRs t
grupoClientes	RRu Ç
.
RRÇ É
Id
RRÉ Ö
)
RRÖ Ü
)
RRÜ á
{SS 
throwTT 
newTT !
LogicaExceptionTT" 1
(TT1 2
$strTT2 r
+TTs t
clienteTTu |
.TT| }
Nombre	TT} É
+
TTÑ Ö
$str
TTÜ ü
)
TTü †
;
TT† °
}UU 
}VV 
}WW 
}XX 	
privateYY 
Actor_negocioYY ,
 GenerarGrupoClientesActorNegocioYY >
(YY> ?
GrupoClientesYY? L
grupoClientesYYM Z
)YYZ [
{ZZ 	
try[[ 
{\\ 
DateTime]] 
fechaActual]] $
=]]% &
DateTimeUtil]]' 3
.]]3 4
FechaActual]]4 ?
(]]? @
)]]@ A
;]]A B
DateTime^^ 
fechaFin^^ !
=^^" #
fechaActual^^$ /
.^^/ 0
AddYears^^0 8
(^^8 9
ActorSettings^^9 F
.^^F G
Default^^G N
.^^N OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	^^O Ü
)
^^Ü á
;
^^á à
Actor_negocio`` 
grupoActorNegocio`` /
=``0 1
new``2 5
Actor_negocio``6 C
(``C D
ActorSettings``D Q
.``Q R
Default``R Y
.``Y Z
IdRolGrupoClientes``Z l
,``l m
fechaActual``n y
,``y z
fechaFin	``{ É
,
``É Ñ
$str
``Ö á
,
``á à
true
``â ç
,
``ç é
false
``è î
,
``î ï
$str
``ñ ò
)
``ò ô
;
``ô ö
Actorbb 
actorbb 
=bb 
newbb !
Actorbb" '
(bb' (
ActorSettingsbb( 5
.bb5 6
Defaultbb6 =
.bb= >;
/IdDetalleMaestroDocumentoIdentidadGrupoClientesbb> m
,bbm n
fechaActualbbo z
,bbz {
grupoClientes	bb| â
.
bbâ ä
Codigo
bbä ê
,
bbê ë
grupoClientes
bbí ü
.
bbü †
Nombre
bb† ¶
,
bb¶ ß
$str
bb® ™
,
bb™ ´
$str
bb¨ Æ
,
bbÆ Ø
ActorSettings
bb∞ Ω
.
bbΩ æ
Default
bbæ ≈
.
bb≈ ∆&
IdTipoActorGrupoClientes
bb∆ ﬁ
,
bbﬁ ﬂ
ActorSettings
bb‡ Ì
.
bbÌ Ó
Default
bbÓ ı
.
bbı ˆ#
IdFotoActorPorDefecto
bbˆ ã
,
bbã å
ActorSettings
bbç ö
.
bbö õ
Default
bbõ ¢
.
bb¢ £'
IdClaseActorGrupoClientes
bb£ º
,
bbº Ω
ActorSettings
bbæ À
.
bbÀ Ã
Default
bbÃ ”
.
bb” ‘(
IdEstadoLegalGrupoClientes
bb‘ Ó
,
bbÓ Ô
$str
bb Ú
,
bbÚ Û
$str
bbÙ ˆ
,
bbˆ ˜
$str
bb¯ ˙
)
bb˙ ˚
{cc %
id_detalle_multipropositodd -
=dd. /
grupoClientesdd0 =
.dd= >
Tipodd> B
.ddB C
IdddC E
,ddE F&
id_detalle_multiproposito1ee .
=ee/ 0
grupoClientesee1 >
.ee> ?
Clasificacionee? L
.eeL M
IdeeM O
}ff 
;ff 
grupoActorNegociohh !
.hh! "
Actorhh" '
=hh( )
actorhh* /
;hh/ 0
grupoActorNegociojj !
.jj! ""
Vinculo_Actor_Negocio1jj" 8
=jj9 :
newjj; >
Listjj? C
<jjC D!
Vinculo_Actor_NegociojjD Y
>jjY Z
{jj[ \
newjj] `!
Vinculo_Actor_Negociojja v
{kk &
id_actor_negocio_principalll .
=ll/ 0
grupoClientesll1 >
.ll> ?
Responsablell? J
.llJ K
IdllK M
,llM N
desdemm 
=mm 
fechaActualmm '
,mm' (
hastann 
=nn 
fechaFinnn $
,nn$ %
descripcionoo 
=oo  !
$stroo" $
,oo$ %
tipo_vinculopp  
=pp! "
(pp# $
intpp$ '
)pp' (
TipoVinculopp( 3
.pp3 4
ResponsableGrupopp4 D
,ppD E

es_vigenteqq 
=qq  
trueqq! %
}rr 
}rr 
;rr 
grupoActorNegociott !
.tt! "!
Vinculo_Actor_Negociott" 7
=tt8 9
newtt: =
Listtt> B
<ttB C!
Vinculo_Actor_NegociottC X
>ttX Y
(ttY Z
)ttZ [
;tt[ \
ifuu 
(uu 
grupoClientesuu !
.uu! "
Clientesuu" *
!=uu+ -
nulluu. 2
&&uu3 5
grupoClientesuu6 C
.uuC D
ClientesuuD L
.uuL M
CountuuM R
>uuS T
$numuuU V
)uuV W
{vv 
foreachww 
(ww 
varww  
clienteww! (
inww) +
grupoClientesww, 9
.ww9 :
Clientesww: B
)wwB C
{xx 
varyy 
vinculoyy #
=yy$ %
newyy& )!
Vinculo_Actor_Negocioyy* ?
{zz &
id_actor_negocio_principal{{ 6
={{7 8
grupoClientes{{9 F
.{{F G
Id{{G I
,{{I J&
id_actor_negocio_vinculado|| 6
=||7 8
cliente||9 @
.||@ A
Id||A C
,||C D
desde}} !
=}}" #
fechaActual}}$ /
,}}/ 0
hasta~~ !
=~~" #
fechaFin~~$ ,
,~~, -
descripcion '
=( )
$str* ,
,, -
tipo_vinculo
ÄÄ (
=
ÄÄ) *
(
ÄÄ+ ,
int
ÄÄ, /
)
ÄÄ/ 0
TipoVinculo
ÄÄ0 ;
.
ÄÄ; <
MiembroGrupo
ÄÄ< H
,
ÄÄH I

es_vigente
ÅÅ &
=
ÅÅ' (
true
ÅÅ) -
}
ÇÇ 
;
ÇÇ 
grupoActorNegocio
ÉÉ )
.
ÉÉ) *#
Vinculo_Actor_Negocio
ÉÉ* ?
.
ÉÉ? @
Add
ÉÉ@ C
(
ÉÉC D
vinculo
ÉÉD K
)
ÉÉK L
;
ÉÉL M
}
ÑÑ 
}
ÖÖ 
return
ÜÜ 
grupoActorNegocio
ÜÜ (
;
ÜÜ( )
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
new
ää 
LogicaException
ää )
(
ää) *
$str
ää* ^
,
ää^ _
e
ää` a
)
ääa b
;
ääb c
}
ãã 
}
åå 	
public
çç 
List
çç 
<
çç "
GrupoClientesResumen
çç (
>
çç( )#
ObtenerGruposClientes
çç* ?
(
çç? @
)
çç@ A
{
éé 	
try
èè 
{
êê 
var
ëë 
gruposClientes
ëë "
=
ëë# $'
_vinculoActor_Repositorio
ëë% >
.
ëë> ?#
ObtenerGruposClientes
ëë? T
(
ëëT U
)
ëëU V
.
ëëV W
ToList
ëëW ]
(
ëë] ^
)
ëë^ _
;
ëë_ `
return
íí 
gruposClientes
íí %
;
íí% &
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ )
(
ññ) *
$str
ññ* X
,
ññX Y
e
ññZ [
)
ññ[ \
;
ññ\ ]
}
óó 
}
òò 	
public
ôô 
GrupoClientes
ôô "
ObtenerGrupoClientes
ôô 1
(
ôô1 2
int
ôô2 5
idGrupoClientes
ôô6 E
)
ôôE F
{
öö 	
try
õõ 
{
úú 
var
ùù 
grupoClientes
ùù !
=
ùù" #'
_vinculoActor_Repositorio
ùù$ =
.
ùù= >"
ObtenerGrupoClientes
ùù> R
(
ùùR S
(
ùùS T
int
ùùT W
)
ùùW X
TipoVinculo
ùùX c
.
ùùc d
MiembroGrupo
ùùd p
,
ùùp q
idGrupoClientesùùr Å
)ùùÅ Ç
;ùùÇ É
grupoClientes
ûû 
.
ûû 
Responsable
ûû )
=
ûû* +(
_consultaActor_Repositorio
ûû, F
.
ûûF G$
ObtenerActorComercial_
ûûG ]
(
ûû] ^
ActorSettings
ûû^ k
.
ûûk l
Default
ûûl s
.
ûûs t
IdRolClienteûût Ä
,ûûÄ Å
grupoClientesûûÇ è
.ûûè ê
Responsableûûê õ
.ûûõ ú
Idûûú û
)ûûû ü
;ûûü †
return
üü 
grupoClientes
üü $
;
üü$ %
}
†† 
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
¢¢ 
throw
££ 
new
££ 
LogicaException
££ )
(
££) *
$str
££* W
,
££W X
e
££Y Z
)
££Z [
;
££[ \
}
§§ 
}
•• 	
public
¶¶ 
OperationResult
¶¶ "
DarBajaGrupoClientes
¶¶ 3
(
¶¶3 4
int
¶¶4 7
idGrupoClientes
¶¶8 G
)
¶¶G H
{
ßß 	
try
®® 
{
©© 
DateTime
™™ 
fechaActual
™™ $
=
™™% &
DateTimeUtil
™™' 3
.
™™3 4
FechaActual
™™4 ?
(
™™? @
)
™™@ A
;
™™A B
DateTime
´´ 
fechaFin
´´ !
=
´´" #
fechaActual
´´$ /
.
´´/ 0
AddYears
´´0 8
(
´´8 9
$num
´´9 ;
)
´´; <
;
´´< =
if
¨¨ 
(
¨¨ '
_vinculoActor_Repositorio
¨¨ -
.
¨¨- .:
,ExisteDeudaDeGrupoClientesEnOperacionesVenta
¨¨. Z
(
¨¨Z [
idGrupoClientes
¨¨[ j
)
¨¨j k
)
¨¨k l
{
≠≠ 
throw
ÆÆ 
new
ÆÆ 
LogicaException
ÆÆ -
(
ÆÆ- .
$str
ÆÆ. }
)
ÆÆ} ~
;
ÆÆ~ 
}
ØØ 
var
∞∞ 
grupoClientes
∞∞ !
=
∞∞" #"
ObtenerGrupoClientes
∞∞$ 8
(
∞∞8 9
idGrupoClientes
∞∞9 H
)
∞∞H I
;
∞∞I J
var
±± 
grupoActorNegocio
±± %
=
±±& '.
 GenerarGrupoClientesActorNegocio
±±( H
(
±±H I
grupoClientes
±±I V
)
±±V W
;
±±W X
grupoActorNegocio
≤≤ !
.
≤≤! "
id
≤≤" $
=
≤≤% &
grupoClientes
≤≤' 4
.
≤≤4 5
Id
≤≤5 7
;
≤≤7 8
grupoActorNegocio
≥≥ !
.
≥≥! "
id_actor
≥≥" *
=
≥≥+ ,
grupoClientes
≥≥- :
.
≥≥: ;
IdActor
≥≥; B
;
≥≥B C
grupoActorNegocio
¥¥ !
.
¥¥! "
Actor
¥¥" '
.
¥¥' (
id
¥¥( *
=
¥¥+ ,
grupoClientes
¥¥- :
.
¥¥: ;
IdActor
¥¥; B
;
¥¥B C
grupoActorNegocio
µµ !
.
µµ! "

es_vigente
µµ" ,
=
µµ- .
false
µµ/ 4
;
µµ4 5
grupoActorNegocio
∂∂ !
.
∂∂! "
	fecha_fin
∂∂" +
=
∂∂, -
fechaActual
∂∂. 9
;
∂∂9 :
return
∑∑ '
_vinculoActor_Repositorio
∑∑ 0
.
∑∑0 1=
/ActualizarActorPrincipalConVinculosActorNegocio
∑∑1 `
(
∑∑` a
grupoActorNegocio
∑∑a r
)
∑∑r s
;
∑∑s t
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* ^
,
ªª^ _
e
ªª` a
)
ªªa b
;
ªªb c
}
ºº 
}
ΩΩ 	
}
øø 
}¿¿ √h
YD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Actores\ValidacionActorNegocio_Logica.cs
	namespace		 	
Tsp		
 
.		 
Sigescom		 
.		 
Logica		 
.		 
Core		 "
.		" #
Actores		# *
{

 
public 

partial 
class )
ValidacionActorNegocio_Logica 6
:6 7*
IValidacionActorNegocio_Logica8 V
{ 
private 
readonly 
IActor_Repositorio +
_actorRepositorio, =
;= >
public )
ValidacionActorNegocio_Logica ,
(, -
IActor_Repositorio- ?
actorRepositorio@ P
)P Q
{ 	
_actorRepositorio 
= 
actorRepositorio  0
;0 1
} 	
public 
bool 

ValidarDNI 
( 
string %
dni& )
)) *
{ 	
return 
dni 
. 
Trim 
( 
) 
. 
Length $
==% '
$num( )
;) *
} 	
public 
void (
ValidarExistenciaDeDocumento 0
(0 1
int1 4$
idTipoDocumentoIdentidad5 M
,M N
stringO U$
numeroDocumentoIdentidadV n
)n o
{ 	
bool 

validacion 
= 
_actorRepositorio /
./ 0
ExisteDocumento0 ?
(? @$
idTipoDocumentoIdentidad@ X
,X Y$
numeroDocumentoIdentidadZ r
)r s
;s t
if 
( 

validacion 
) 
{ 
throw 
new 
	Exception #
(# $
$str$ J
+K L$
numeroDocumentoIdentidadM e
+f g
$strh x
)x y
;y z
} 
}   	
public!! 
bool!! 

ValidarRUC!! 
(!! 
string!! %
ruc!!& )
)!!) *
{"" 	
if## 
(## 
ruc## 
.## 
Length## 
!=## 
$num##  
)##  !
{$$ 
return%% 
false%% 
;%% 
}&& 
int'' 
dig01'' 
='' 
Convert'' 
.''  
ToInt32''  '
(''' (
ruc''( +
.''+ ,
	Substring'', 5
(''5 6
$num''6 7
,''7 8
$num''9 :
)'': ;
)''; <
*''= >
$num''? @
;''@ A
int(( 
dig02(( 
=(( 
Convert(( 
.((  
ToInt32((  '
(((' (
ruc((( +
.((+ ,
	Substring((, 5
(((5 6
$num((6 7
,((7 8
$num((9 :
)((: ;
)((; <
*((= >
$num((? @
;((@ A
int)) 
dig03)) 
=)) 
Convert)) 
.))  
ToInt32))  '
())' (
ruc))( +
.))+ ,
	Substring)), 5
())5 6
$num))6 7
,))7 8
$num))9 :
))): ;
))); <
*))= >
$num))? @
;))@ A
int** 
dig04** 
=** 
Convert** 
.**  
ToInt32**  '
(**' (
ruc**( +
.**+ ,
	Substring**, 5
(**5 6
$num**6 7
,**7 8
$num**9 :
)**: ;
)**; <
***= >
$num**? @
;**@ A
int++ 
dig05++ 
=++ 
Convert++ 
.++  
ToInt32++  '
(++' (
ruc++( +
.+++ ,
	Substring++, 5
(++5 6
$num++6 7
,++7 8
$num++9 :
)++: ;
)++; <
*++= >
$num++? @
;++@ A
int,, 
dig06,, 
=,, 
Convert,, 
.,,  
ToInt32,,  '
(,,' (
ruc,,( +
.,,+ ,
	Substring,,, 5
(,,5 6
$num,,6 7
,,,7 8
$num,,9 :
),,: ;
),,; <
*,,= >
$num,,? @
;,,@ A
int-- 
dig07-- 
=-- 
Convert-- 
.--  
ToInt32--  '
(--' (
ruc--( +
.--+ ,
	Substring--, 5
(--5 6
$num--6 7
,--7 8
$num--9 :
)--: ;
)--; <
*--= >
$num--? @
;--@ A
int.. 
dig08.. 
=.. 
Convert.. 
...  
ToInt32..  '
(..' (
ruc..( +
...+ ,
	Substring.., 5
(..5 6
$num..6 7
,..7 8
$num..9 :
)..: ;
)..; <
*..= >
$num..? @
;..@ A
int// 
dig09// 
=// 
Convert// 
.//  
ToInt32//  '
(//' (
ruc//( +
.//+ ,
	Substring//, 5
(//5 6
$num//6 7
,//7 8
$num//9 :
)//: ;
)//; <
*//= >
$num//? @
;//@ A
int00 
dig1000 
=00 
Convert00 
.00  
ToInt3200  '
(00' (
ruc00( +
.00+ ,
	Substring00, 5
(005 6
$num006 7
,007 8
$num009 :
)00: ;
)00; <
*00= >
$num00? @
;00@ A
int11 
dig1111 
=11 
Convert11 
.11  
ToInt3211  '
(11' (
ruc11( +
.11+ ,
	Substring11, 5
(115 6
$num116 8
,118 9
$num11: ;
)11; <
)11< =
;11= >
int33 
suma33 
=33 
dig0133 
+33 
dig0233 $
+33% &
dig0333' ,
+33- .
dig0433/ 4
+335 6
dig05337 <
+33= >
dig0633? D
+33E F
dig0733G L
+33M N
dig0833O T
+33U V
dig0933W \
+33] ^
dig1033_ d
;33d e
int44 
residuo44 
=44 
suma44 
%44  
$num44! #
;44# $
int55 
resta55 
=55 
$num55 
-55 
residuo55 $
;55$ %
int77 
digChk77 
=77 
$num77 
;77 
if88 
(88 
resta88 
==88 
$num88 
)88 
{99 
digChk:: 
=:: 
$num:: 
;:: 
};; 
else<< 
if<< 
(<< 
resta<< 
==<< 
$num<<  
)<<  !
{== 
digChk>> 
=>> 
$num>> 
;>> 
}?? 
else@@ 
{AA 
digChkBB 
=BB 
restaBB 
;BB 
}CC 
ifEE 
(EE 
dig11EE 
==EE 
digChkEE 
)EE  
{FF 
returnGG 
trueGG 
;GG 
}HH 
elseII 
{JJ 
returnKK 
falseKK 
;KK 
}LL 
}MM 	
publicNN 
boolNN 
ValidarClienteYRUCNN &
(NN& '
intNN' *
	idClienteNN+ 4
)NN4 5
{OO 	
ClientePP 
clientePP 
=PP 
newPP !
ClientePP" )
(PP) *
_actorRepositorioPP* ;
.PP; <!
ObtenerActorDeNegocioPP< Q
(PPQ R
	idClientePPR [
)PP[ \
)PP\ ]
;PP] ^
returnQQ 
clienteQQ 
.QQ $
IdTipoDocumentoIdentidadQQ 3
==QQ4 6
ActorSettingsQQ7 D
.QQD E
DefaultQQE L
.QQL M'
IdTipoDocumentoIdentidadRucQQM h
;QQh i
}RR 	
publicSS 
boolSS  
ValidarProveedorYRUCSS (
(SS( )
intSS) ,
idProveedorSS- 8
)SS8 9
{TT 	
	ProveedorUU 
	proveedorUU 
=UU  !
newUU" %
	ProveedorUU& /
(UU/ 0
_actorRepositorioUU0 A
.UUA B!
ObtenerActorDeNegocioUUB W
(UUW X
idProveedorUUX c
)UUc d
)UUd e
;UUe f
returnVV 
	proveedorVV 
.VV $
IdTipoDocumentoIdentidadVV 5
==VV6 8
ActorSettingsVV9 F
.VVF G
DefaultVVG N
.VVN O'
IdTipoDocumentoIdentidadRucVVO j
;VVj k
}WW 	
publicXX 
voidXX %
ValidarDocumentoIdentidadXX -
(XX- .
stringXX. 4
documentoIdentidadXX5 G
,XXG H
ItemGenericoXXI U"
tipoDocumentoIdentidadXXV l
)XXl m
{YY 	
ifZZ 
(ZZ "
tipoDocumentoIdentidadZZ &
.ZZ& '
IdZZ' )
==ZZ* ,
ActorSettingsZZ- :
.ZZ: ;
DefaultZZ; B
.ZZB C'
IdTipoDocumentoIdentidadDniZZC ^
)ZZ^ _
{[[ 
if\\ 
(\\ 
!\\ 

ValidarDNI\\ 
(\\  
documentoIdentidad\\  2
)\\2 3
)\\3 4
throw\\5 :
new\\; >
	Exception\\? H
(\\H I
$str\\I X
)\\X Y
;\\Y Z
}]] 
else^^ 
if^^ 
(^^ "
tipoDocumentoIdentidad^^ +
.^^+ ,
Id^^, .
==^^/ 1
ActorSettings^^2 ?
.^^? @
Default^^@ G
.^^G H'
IdTipoDocumentoIdentidadRuc^^H c
)^^c d
{__ 
if`` 
(`` 
!`` 

ValidarRUC`` 
(``  
documentoIdentidad``  2
)``2 3
)``3 4
throw``5 :
new``; >
	Exception``? H
(``H I
$str``I Y
)``Y Z
;``Z [
}aa 
}bb 	
publiccc 
voidcc <
0ValidarExisteActorConElMismoDocumentoYDistintoIdcc D
(ccD E
intccE H
idccI K
,ccK L
stringccM S
NumeroDeDocumentoccT e
)cce f
{dd 	
ifee 
(ee 
_actorRepositorioee !
.ee! "5
)ExisteActorConElMismoDocumentoYDistintoIdee" K
(eeK L
ideeL N
,eeN O
NumeroDeDocumentoeeP a
)eea b
)eeb c
{ff 
throwgg 
newgg 
LogicaExceptiongg )
(gg) *
$strgg* j
)ggj k
;ggk l
}hh 
}ii 	
publicjj 
voidjj A
5ValidarExisteActorComercialConElMismoDocumentoVigentejj I
(jjI J
intjjJ M
idRoljjN S
,jjS T
stringjjU [
NumeroDeDocumentojj\ m
,jjm n
intjjo r
idActorComercial	jjs É
)
jjÉ Ñ
{kk 	
ifll 
(ll 
idActorComercialll  
>ll! "
$numll# $
)ll$ %
{mm 
ifnn 
(nn 
_actorRepositorionn %
.nn% &:
.ExisteActorComercialConElMismoDocumentoVigentenn& T
(nnT U
idActorComercialnnU e
,nne f
idRolnng l
,nnl m
NumeroDeDocumentonnn 
)	nn Ä
)
nnÄ Å
{oo 
throwpp 
newpp 
LogicaExceptionpp -
(pp- .
$strpp. x
)ppx y
;ppy z
}qq 
}rr 
elsess 
{tt 
ifuu 
(uu 
_actorRepositoriouu %
.uu% &:
.ExisteActorComercialConElMismoDocumentoVigenteuu& T
(uuT U
idRoluuU Z
,uuZ [
NumeroDeDocumentouu\ m
)uum n
)uun o
{vv 
throwww 
newww 
LogicaExceptionww -
(ww- .
$strww. x
)wwx y
;wwy z
}xx 
}yy 
}{{ 	
public|| 
void|| /
#ValidarOperaciondesDeActorComercial|| 7
(||7 8
int||8 ;
idRol||< A
,||A B
int||C F
id||G I
,||I J
string||K Q
numeroDeDocumento||R c
)||c d
{}} 	
var~~ 
actorComercial~~ 
=~~  
_actorRepositorio~~! 2
.~~2 3!
ObtenerActorComercial~~3 H
(~~H I
id~~I K
)~~K L
;~~L M
if 
( 
actorComercial 
. $
NumeroDocumentoIdentidad 7
!=8 :
numeroDeDocumento; L
)L M
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
_actorRepositorio
ÅÅ %
.
ÅÅ% &+
ActorParticipaEnTransacciones
ÅÅ& C
(
ÅÅC D
id
ÅÅD F
)
ÅÅF G
)
ÅÅG H
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
LogicaException
ÉÉ -
(
ÉÉ- .
$strÉÉ. ä
)ÉÉä ã
;ÉÉã å
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
}
áá 
}àà äò
OD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Almacen\OrdenAlmacen_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Almacen# *
{ 
public 

class 
OrdenAlmacen_Logica $
:% & 
IOrdenAlmacen_Logica' ;
{ 
	protected 
readonly %
IOrdenAlmacen_Repositorio 4
_ordenAlmacenDatos5 G
;G H
	protected 
readonly $
ICentroDeAtencion_Logica 3#
_centroDeAtencionLogica4 K
;K L
	protected 
readonly 
IActorNegocioLogica .
_actorNegocioLogica/ B
;B C
	protected 
readonly 
IOperacionLogica +
_operacionLogica, <
;< =
	protected 
readonly #
ITransaccionRepositorio 2#
_transaccionRepositorio3 J
;J K
public 
OrdenAlmacen_Logica "
(" #%
IOrdenAlmacen_Repositorio# <
ordenAlmacenDatos= N
,N O$
ICentroDeAtencion_LogicaP h"
centroDeAtencionLogicai 
,	 Ä!
IActorNegocioLogica
Å î 
actorNegocioLogica
ï ß
,
ß ®
IOperacionLogica
© π
operacionLogica
∫ …
,
…  %
ITransaccionRepositorio
À ‚$
transaccionRepositorio
„ ˘
)
˘ ˙
{ 	
_ordenAlmacenDatos 
=  
ordenAlmacenDatos! 2
;2 3#
_centroDeAtencionLogica   #
=  $ %"
centroDeAtencionLogica  & <
;  < =
_actorNegocioLogica!! 
=!!  !
actorNegocioLogica!!" 4
;!!4 5
_operacionLogica"" 
="" 
operacionLogica"" .
;"". /#
_transaccionRepositorio## #
=##$ %"
transaccionRepositorio##& <
;##< =
}$$ 	
public&& %
PrincipalOrdenAlmacenData&& (1
%ObtenerDatosParaOrdenAlmacenPrincipal&&) N
(&&N O"
UserProfileSessionData&&O e
profileData&&f q
)&&q r
{'' 	
var(( *
tieneRolAdministradorDeNegocio(( .
=((/ 0
profileData((1 <
.((< =
Empleado((= E
.((E F
TieneRol((F N
(((N O
ActorSettings((O \
.((\ ]
Default((] d
.((d e(
idRolAdministradorDeNegocio	((e Ä
)
((Ä Å
;
((Å Ç
var** 
data** 
=** 
new** %
PrincipalOrdenAlmacenData** 4
(**4 5
)**5 6
{++ 
FechaActual,, 
=,, 
DateTimeUtil,, *
.,,* +
FechaActual,,+ 6
(,,6 7
),,7 8
,,,8 9
EsAdministrador-- 
=--  !*
tieneRolAdministradorDeNegocio--" @
,--@ A
	Almacenes.. 
=.. *
tieneRolAdministradorDeNegocio.. :
?..; <
ItemGenerico..= I
...I J@
4ConvertirCentroDeAtencionConEstablecimientoComercial..J ~
(..~ $
_centroDeAtencionLogica	.. ñ
.
..ñ ó&
ObtenerAlmacenesVigentes
..ó Ø
(
..Ø ∞
)
..∞ ±
.
..± ≤
ToList
..≤ ∏
(
..∏ π
)
..π ∫
)
..∫ ª
:
..º Ω
new
..æ ¡
List
..¬ ∆
<
..∆ «
ItemGenerico
..« ”
>
..” ‘
(
..‘ ’
)
..’ ÷
{
..◊ ÿ
profileData
..Ÿ ‰
.
..‰ Â*
CentroDeAtencionSeleccionado
..Â Å
.
..Å Ç
ToItemGenerico
..Ç ê
(
..ê ë
)
..ë í
}
..ì î
,
..î ï
AlmacenSesion// 
=// 
profileData//  +
.//+ ,(
CentroDeAtencionSeleccionado//, H
.//H I
ToItemGenerico//I W
(//W X
)//X Y
,//Y Z
}00 
;00 
return11 
data11 
;11 
}22 	
public44 
List44 
<44 
OrdenAlmacenResumen44 '
>44' (!
ObtenerOrdenesAlmacen44) >
(44> ?
DateTime44? G

fechaDesde44H R
,44R S
DateTime44T \

fechaHasta44] g
,44g h
bool44i m
porIngresar44n y
,44y z
bool44{ 
entregaInmediata
44Ä ê
,
44ê ë
bool
44í ñ
entregaDiferida
44ó ¶
,
44¶ ß
bool
44® ¨
estadoPendiente
44≠ º
,
44º Ω
bool
44æ ¬
estadoParcial
44√ –
,
44– —
bool
44“ ÷
estadoCompletada
44◊ Á
,
44Á Ë
int
44È Ï
[
44Ï Ì
]
44Ì Ó
idsAlmacenes
44Ô ˚
,
44˚ ¸$
UserProfileSessionData
44˝ ì
profileData
44î ü
)
44ü †
{55 	
try66 
{77 
List88 
<88 
int88 
>88 
idsModoEntrega88 (
=88) *
new88+ .
List88/ 3
<883 4
int884 7
>887 8
(888 9
)889 :
;88: ;
if99 
(99 
entregaInmediata99 $
)99$ %
idsModoEntrega99& 4
.994 5
Add995 8
(998 9
(999 :
int99: =
)99= >#
IndicadorImpactoAlmacen99> U
.99U V
	Inmediata99V _
)99_ `
;99` a
if:: 
(:: 
entregaDiferida:: #
)::# $
idsModoEntrega::% 3
.::3 4
Add::4 7
(::7 8
(::8 9
int::9 <
)::< =#
IndicadorImpactoAlmacen::= T
.::T U
Diferida::U ]
)::] ^
;::^ _
List;; 
<;; 
int;; 
>;; 
	idsEstado;; #
=;;$ %
new;;& )
List;;* .
<;;. /
int;;/ 2
>;;2 3
(;;3 4
);;4 5
;;;5 6
if<< 
(<< 
estadoPendiente<< #
)<<# $
	idsEstado<<% .
.<<. /
Add<</ 2
(<<2 3
MaestroSettings<<3 B
.<<B C
Default<<C J
.<<J K+
IdDetalleMaestroEstadoPendiente<<K j
)<<j k
;<<k l
if== 
(== 
estadoParcial== !
)==! "
	idsEstado==# ,
.==, -
Add==- 0
(==0 1
MaestroSettings==1 @
.==@ A
Default==A H
.==H I)
IdDetalleMaestroEstadoParcial==I f
)==f g
;==g h
if>> 
(>> 
estadoCompletada>> $
)>>$ %
	idsEstado>>& /
.>>/ 0
Add>>0 3
(>>3 4
MaestroSettings>>4 C
.>>C D
Default>>D K
.>>K L,
 IdDetalleMaestroEstadoCompletada>>L l
)>>l m
;>>m n
var?? 
ordenesAlmacen?? "
=??# $
_ordenAlmacenDatos??% 7
.??7 8!
ObtenerOrdenesAlmacen??8 M
(??M N

fechaDesde??N X
,??X Y

fechaHasta??Z d
,??d e
porIngresar??f q
,??q r
idsModoEntrega	??s Å
.
??Å Ç
ToArray
??Ç â
(
??â ä
)
??ä ã
,
??ã å
	idsEstado
??ç ñ
.
??ñ ó
ToArray
??ó û
(
??û ü
)
??ü †
,
??† °
idsAlmacenes
??¢ Æ
)
??Æ Ø
.
??Ø ∞
ToList
??∞ ∂
(
??∂ ∑
)
??∑ ∏
;
??∏ π
ordenesAlmacen@@ 
.@@ 
AddRange@@ '
(@@' (
_ordenAlmacenDatos@@( :
.@@: ;.
"ObtenerOrdenesAlmacenBidireccional@@; ]
(@@] ^

fechaDesde@@^ h
,@@h i

fechaHasta@@j t
,@@t u
porIngresar	@@v Å
,
@@Å Ç
idsModoEntrega
@@É ë
.
@@ë í
ToArray
@@í ô
(
@@ô ö
)
@@ö õ
,
@@õ ú
	idsEstado
@@ù ¶
.
@@¶ ß
ToArray
@@ß Æ
(
@@Æ Ø
)
@@Ø ∞
,
@@∞ ±
idsAlmacenes
@@≤ æ
)
@@æ ø
.
@@ø ¿
ToList
@@¿ ∆
(
@@∆ «
)
@@« »
)
@@» …
;
@@…  
returnAA 
ordenesAlmacenAA %
;AA% &
}BB 
catchCC 
(CC 
	ExceptionCC 
eCC 
)CC 
{DD 
throwEE 
newEE 
LogicaExceptionEE )
(EE) *
$strEE* S
,EES T
eEEU V
)EEV W
;EEW X
}FF 
}GG 	
publicII 
OrdenAlmacenII 
ObtenerOrdenAlmacenII /
(II/ 0
longII0 4
idOrdenAlmacenII5 C
)IIC D
{JJ 	
tryKK 
{LL 
varMM 
ordenAlmacenMM  
=MM! "
_ordenAlmacenDatosMM# 5
.MM5 6
ObtenerOrdenAlmacenMM6 I
(MMI J
idOrdenAlmacenMMJ X
)MMX Y
;MMY Z
ordenAlmacenNN 
.NN 

IdsOrdenesNN '
.NN' (
InsertNN( .
(NN. /
$numNN/ 0
,NN0 1
ordenAlmacenNN2 >
.NN> ?
IdNN? A
)NNA B
;NNB C
ordenAlmacenOO 
.OO 
OrdenesOO $
=OO% &(
ObtenerOrdenesDeOrdenAlmacenOO' C
(OOC D
ordenAlmacenOOD P
.OOP Q

IdsOrdenesOOQ [
.OO[ \
ToArrayOO\ c
(OOc d
)OOd e
)OOe f
;OOf g
ordenAlmacenPP 
.PP 
MovimientosPP (
=PP) *,
 ObtenerMovimientosDeOrdenAlmacenPP+ K
(PPK L
ordenAlmacenPPL X
.PPX Y

IdsOrdenesPPY c
.PPc d
ToArrayPPd k
(PPk l
)PPl m
)PPm n
;PPn o
varQQ 
detallesNotasQQ !
=QQ" #
_ordenAlmacenDatosQQ$ 6
.QQ6 7-
!ObtenerNotasCreditoDeOrdenAlmacenQQ7 X
(QQX Y
ordenAlmacenQQY e
.QQe f
IdQQf h
)QQh i
.QQi j

SelectManyQQj t
(QQt u
nQQu v
=>QQw y
nQQz {
.QQ{ |
Detalles	QQ| Ñ
)
QQÑ Ö
.
QQÖ Ü
ToList
QQÜ å
(
QQå ç
)
QQç é
;
QQé è
varRR 
detallesMovimientosRR '
=RR( )
ordenAlmacenRR* 6
.RR6 7
MovimientosRR7 B
.RRB C
WhereRRC H
(RRH I
mRRI J
=>RRK M
mRRN O
.RRO P
	EsVigenteRRP Y
)RRY Z
.RRZ [

SelectManyRR[ e
(RRe f
mRRf g
=>RRh j
mRRk l
.RRl m
DetallesRRm u
)RRu v
.RRv w
ToListRRw }
(RR} ~
)RR~ 
;	RR Ä
foreachSS 
(SS 
varSS 
detalleSS $
inSS% '
ordenAlmacenSS( 4
.SS4 5
DetallesSS5 =
)SS= >
{TT 
detalleUU 
.UU 
	EntregadoUU %
=UU& '
detallesMovimientosUU( ;
.UU; <
WhereUU< A
(UUA B
dmoUUB E
=>UUF H
dmoUUI L
.UUL M

IdConceptoUUM W
==UUX Z
detalleUU[ b
.UUb c

IdConceptoUUc m
)UUm n
.UUn o
SumUUo r
(UUr s
dUUs t
=>UUu w
dUUx y
.UUy z
Cantidad	UUz Ç
)
UUÇ É
;
UUÉ Ñ
detalleVV 
.VV 
	PendienteVV %
=VV& '
detalleVV( /
.VV/ 0
OrdenadoVV0 8
-VV9 :
detalleVV; B
.VVB C
RevocadoVVC K
-VVL M
detalleVVN U
.VVU V
	EntregadoVVV _
;VV_ `
detalleWW 
.WW 
DevueltoWW $
=WW% &
detallesNotasWW' 4
.WW4 5
WhereWW5 :
(WW: ;
dmoWW; >
=>WW? A
dmoWWB E
.WWE F

IdConceptoWWF P
==WWQ S
detalleWWT [
.WW[ \

IdConceptoWW\ f
)WWf g
.WWg h
SumWWh k
(WWk l
dWWl m
=>WWn p
dWWq r
.WWr s
CantidadWWs {
)WW{ |
;WW| }
}XX 
returnYY 
ordenAlmacenYY #
;YY# $
}ZZ 
catch[[ 
([[ 
	Exception[[ 
e[[ 
)[[ 
{\\ 
throw]] 
new]] 
LogicaException]] )
(]]) *
$str]]* P
,]]P Q
e]]R S
)]]S T
;]]T U
}^^ 
}__ 	
publicaa 
OrdenAlmacenaa 
ObtenerOrdenAlmacenaa /
(aa/ 0
longaa0 4
idOrdenAlmacenaa5 C
,aaC D
boolaaE I
porIngresaraaJ U
)aaU V
{bb 	
trycc 
{dd 
varee %
ordenAlmacenBidireccionalee -
=ee. /
_ordenAlmacenDatosee0 B
.eeB C.
"VerificarOrdenAlmacenBidireccionaleeC e
(eee f
idOrdenAlmaceneef t
)eet u
;eeu v
varff 
ordenAlmacenff  
=ff! "%
ordenAlmacenBidireccionalff# <
?ff= >
_ordenAlmacenDatosff? Q
.ffQ R*
ObtenerOrdenAlmacenBireccionalffR p
(ffp q
idOrdenAlmacenffq 
,	ff Ä
porIngresar
ffÅ å
)
ffå ç
:
ffé è 
_ordenAlmacenDatos
ffê ¢
.
ff¢ £!
ObtenerOrdenAlmacen
ff£ ∂
(
ff∂ ∑
idOrdenAlmacen
ff∑ ≈
)
ff≈ ∆
;
ff∆ «
ordenAlmacengg 
.gg 

IdsOrdenesgg '
.gg' (
Insertgg( .
(gg. /
$numgg/ 0
,gg0 1
ordenAlmacengg2 >
.gg> ?
Idgg? A
)ggA B
;ggB C
ordenAlmacenhh 
.hh 
Ordeneshh $
=hh% &(
ObtenerOrdenesDeOrdenAlmacenhh' C
(hhC D
ordenAlmacenhhD P
.hhP Q

IdsOrdeneshhQ [
.hh[ \
ToArrayhh\ c
(hhc d
)hhd e
)hhe f
;hhf g
ordenAlmacenii 
.ii 
Movimientosii (
=ii) *,
 ObtenerMovimientosDeOrdenAlmacenii+ K
(iiK L
ordenAlmaceniiL X
.iiX Y

IdsOrdenesiiY c
.iic d
ToArrayiid k
(iik l
)iil m
,iim n
porIngresariio z
)iiz {
;ii{ |
varjj 
detallesMovimientosjj '
=jj( )
ordenAlmacenjj* 6
.jj6 7
Movimientosjj7 B
.jjB C
WherejjC H
(jjH I
mjjI J
=>jjK M
mjjN O
.jjO P
	EsVigentejjP Y
)jjY Z
.jjZ [

SelectManyjj[ e
(jje f
mjjf g
=>jjh j
mjjk l
.jjl m
Detallesjjm u
)jju v
.jjv w
ToListjjw }
(jj} ~
)jj~ 
;	jj Ä
foreachkk 
(kk 
varkk 
detallekk $
inkk% '
ordenAlmacenkk( 4
.kk4 5
Detalleskk5 =
)kk= >
{ll 
detallemm 
.mm 
	Entregadomm %
=mm& '
detallesMovimientosmm( ;
.mm; <
Wheremm< A
(mmA B
dmommB E
=>mmF H
dmommI L
.mmL M

IdConceptommM W
==mmX Z
detallemm[ b
.mmb c

IdConceptommc m
)mmm n
.mmn o
Summmo r
(mmr s
dmms t
=>mmu w
dmmx y
.mmy z
Cantidad	mmz Ç
)
mmÇ É
;
mmÉ Ñ
detallenn 
.nn 
	Pendientenn %
=nn& '
detallenn( /
.nn/ 0
Ordenadonn0 8
-nn9 :
detallenn; B
.nnB C
RevocadonnC K
-nnL M
detallennN U
.nnU V
	EntregadonnV _
;nn_ `
}oo 
returnpp 
ordenAlmacenpp #
;pp# $
}qq 
catchrr 
(rr 
	Exceptionrr 
err 
)rr 
{ss 
throwtt 
newtt 
LogicaExceptiontt )
(tt) *
$strtt* P
,ttP Q
ettR S
)ttS T
;ttT U
}uu 
}vv 	
publicxx 
Listxx 
<xx 
OrdenDeOrdenAlmacenxx '
>xx' ((
ObtenerOrdenesDeOrdenAlmacenxx) E
(xxE F
longxxF J
[xxJ K
]xxK L

idsOrdenesxxM W
)xxW X
{yy 	
tryzz 
{{{ 
var|| !
ordenesDeOrdenAlmacen|| )
=||* +
_ordenAlmacenDatos||, >
.||> ?(
ObtenerOrdenesDeOrdenAlmacen||? [
(||[ \

idsOrdenes||\ f
)||f g
.||g h
ToList||h n
(||n o
)||o p
;||p q!
ordenesDeOrdenAlmacen}} %
.}}% &
ForEach}}& -
(}}- .
o}}. /
=>}}0 2
o}}3 4
.}}4 5
Comprobante}}5 @
=}}A B
new}}C F 
ComprobanteDeAlmacen}}G [
(}}[ \
)}}\ ]
{}}^ _
Id}}` b
=}}c d
o}}e f
.}}f g
Id}}g i
}}}j k
)}}k l
;}}l m
return~~ !
ordenesDeOrdenAlmacen~~ ,
;~~, -
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* \
,
ÇÇ\ ]
e
ÇÇ^ _
)
ÇÇ_ `
;
ÇÇ` a
}
ÉÉ 
}
ÑÑ 	
public
ÖÖ 
List
ÖÖ 
<
ÖÖ &
MovimientoDeOrdenAlmacen
ÖÖ ,
>
ÖÖ, -.
 ObtenerMovimientosDeOrdenAlmacen
ÖÖ. N
(
ÖÖN O
long
ÖÖO S
[
ÖÖS T
]
ÖÖT U

idsOrdenes
ÖÖV `
)
ÖÖ` a
{
ÜÜ 	
try
áá 
{
àà 
var
ââ '
movimientosDeOrdenAlmacen
ââ -
=
ââ. / 
_ordenAlmacenDatos
ââ0 B
.
ââB C.
 ObtenerMovimientosDeOrdenAlmacen
ââC c
(
ââc d

idsOrdenes
ââd n
)
âân o
.
ââo p
ToList
ââp v
(
ââv w
)
ââw x
;
ââx y'
movimientosDeOrdenAlmacen
ää )
.
ää) *
ForEach
ää* 1
(
ää1 2
o
ää2 3
=>
ää4 6
o
ää7 8
.
ää8 9
Comprobante
ää9 D
=
ääE F
new
ääG J"
ComprobanteDeAlmacen
ääK _
(
ää_ `
)
ää` a
{
ääb c
Id
ääd f
=
ääg h
o
ääi j
.
ääj k
Id
ääk m
}
ään o
)
ääo p
;
ääp q
return
ãã '
movimientosDeOrdenAlmacen
ãã 0
;
ãã0 1
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* `
,
èè` a
e
èèb c
)
èèc d
;
èèd e
}
êê 
}
ëë 	
public
íí 
List
íí 
<
íí &
MovimientoDeOrdenAlmacen
íí ,
>
íí, -.
 ObtenerMovimientosDeOrdenAlmacen
íí. N
(
ííN O
long
ííO S
[
ííS T
]
ííT U

idsOrdenes
ííV `
,
íí` a
bool
ííb f
porIngresar
ííg r
)
íír s
{
ìì 	
try
îî 
{
ïï 
var
ññ '
movimientosDeOrdenAlmacen
ññ -
=
ññ. / 
_ordenAlmacenDatos
ññ0 B
.
ññB C.
 ObtenerMovimientosDeOrdenAlmacen
ññC c
(
ññc d

idsOrdenes
ññd n
,
ññn o
porIngresar
ññp {
)
ññ{ |
.
ññ| }
ToListññ} É
(ññÉ Ñ
)ññÑ Ö
;ññÖ Ü'
movimientosDeOrdenAlmacen
óó )
.
óó) *
ForEach
óó* 1
(
óó1 2
o
óó2 3
=>
óó4 6
o
óó7 8
.
óó8 9
Comprobante
óó9 D
=
óóE F
new
óóG J"
ComprobanteDeAlmacen
óóK _
(
óó_ `
)
óó` a
{
óób c
Id
óód f
=
óóg h
o
óói j
.
óój k
Id
óók m
}
óón o
)
óóo p
;
óóp q
return
òò '
movimientosDeOrdenAlmacen
òò 0
;
òò0 1
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
$str
úú* `
,
úú` a
e
úúb c
)
úúc d
;
úúd e
}
ùù 
}
ûû 	
public
üü 
List
üü 
<
üü &
MovimientoDeOrdenAlmacen
üü ,
>
üü, -9
+ObtenerMovimientosConfirmadosDeOrdenAlmacen
üü. Y
(
üüY Z
long
üüZ ^
[
üü^ _
]
üü_ `

idsOrdenes
üüa k
)
üük l
{
†† 	
try
°° 
{
¢¢ 
var
££ '
movimientosDeOrdenAlmacen
££ -
=
££. / 
_ordenAlmacenDatos
££0 B
.
££B C9
+ObtenerMovimientosConfirmadosDeOrdenAlmacen
££C n
(
££n o

idsOrdenes
££o y
)
££y z
.
££z {
ToList££{ Å
(££Å Ç
)££Ç É
;££É Ñ'
movimientosDeOrdenAlmacen
§§ )
.
§§) *
ForEach
§§* 1
(
§§1 2
o
§§2 3
=>
§§4 6
o
§§7 8
.
§§8 9
Comprobante
§§9 D
=
§§E F
new
§§G J"
ComprobanteDeAlmacen
§§K _
(
§§_ `
)
§§` a
{
§§b c
Id
§§d f
=
§§g h
o
§§i j
.
§§j k
Id
§§k m
}
§§n o
)
§§o p
;
§§p q
return
•• '
movimientosDeOrdenAlmacen
•• 0
;
••0 1
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
new
©© 
LogicaException
©© )
(
©©) *
$str
©©* `
,
©©` a
e
©©b c
)
©©c d
;
©©d e
}
™™ 
}
´´ 	
public
¨¨ '
RegistroMovimientoAlmacen
¨¨ (3
%ObtenerRegistroMovimientoOrdenAlmacen
¨¨) N
(
¨¨N O
long
¨¨O S
idOrdenAlmacen
¨¨T b
,
¨¨b c
bool
¨¨d h
porIngresar
¨¨i t
,
¨¨t u%
UserProfileSessionData¨¨v å
profileData¨¨ç ò
)¨¨ò ô
{
≠≠ 	
try
ÆÆ 
{
ØØ 
var
∞∞ ,
registroMovimientoOrdenAlmacen
∞∞ 2
=
∞∞3 4
new
∞∞5 8'
RegistroMovimientoAlmacen
∞∞9 R
(
∞∞R S
)
∞∞S T
;
∞∞T U
var
±± 
ordenAlmacen
±±  
=
±±! "!
ObtenerOrdenAlmacen
±±# 6
(
±±6 7
idOrdenAlmacen
±±7 E
)
±±E F
;
±±F G
var
≤≤ !
detallesStockActual
≤≤ '
=
≤≤( ) 
_ordenAlmacenDatos
≤≤* <
.
≤≤< =4
&ObtenerStockActualDetallesOrdenAlmacen
≤≤= c
(
≤≤c d
ordenAlmacen
≤≤d p
.
≤≤p q
Detalles
≤≤q y
.
≤≤y z
Select≤≤z Ä
(≤≤Ä Å
d≤≤Å Ç
=>≤≤É Ö
d≤≤Ü á
.≤≤á à

IdConcepto≤≤à í
)≤≤í ì
.≤≤ì î
ToArray≤≤î õ
(≤≤õ ú
)≤≤ú ù
,≤≤ù û
ordenAlmacen≤≤ü ´
.≤≤´ ¨
	IdAlmacen≤≤¨ µ
)≤≤µ ∂
;≤≤∂ ∑
foreach
≥≥ 
(
≥≥ 
var
≥≥ 
detalle
≥≥ $
in
≥≥% '
ordenAlmacen
≥≥( 4
.
≥≥4 5
Detalles
≥≥5 =
)
≥≥= >
{
¥¥ ,
registroMovimientoOrdenAlmacen
µµ 2
.
µµ2 3
Detalles
µµ3 ;
.
µµ; <
Add
µµ< ?
(
µµ? @
new
µµ@ C(
DetalleMovimientoDeAlmacen
µµD ^
{
∂∂ 

IdProducto
∑∑ "
=
∑∑# $
detalle
∑∑% ,
.
∑∑, -

IdConcepto
∑∑- 7
,
∑∑7 8
Descripcion
∏∏ #
=
∏∏$ %
detalle
∏∏& -
.
∏∏- .
Concepto
∏∏. 6
,
∏∏6 7
StockActual
ππ #
=
ππ$ %!
detallesStockActual
ππ& 9
.
ππ9 :
Single
ππ: @
(
ππ@ A
d
ππA B
=>
ππC E
d
ππF G
.
ππG H

IdConcepto
ππH R
==
ππS U
detalle
ππV ]
.
ππ] ^

IdConcepto
ππ^ h
)
ππh i
.
ππi j
StockActual
ππj u
,
ππu v
	Pendiente
∫∫ !
=
∫∫" #
detalle
∫∫$ +
.
∫∫+ ,
	Pendiente
∫∫, 5
,
∫∫5 6!
IngresoSalidaActual
ªª +
=
ªª, -
detalle
ªª. 5
.
ªª5 6
	Pendiente
ªª6 ?
}
ºº 
)
ºº 
;
ºº 
}
ΩΩ ,
registroMovimientoOrdenAlmacen
ææ .
.
ææ. /
IdOrdenDeAlmacen
ææ/ ?
=
ææ@ A
ordenAlmacen
ææB N
.
ææN O
Id
ææO Q
;
ææQ R,
registroMovimientoOrdenAlmacen
øø .
.
øø. /
Tercero
øø/ 6
.
øø6 7
Id
øø7 9
=
øø: ;
ordenAlmacen
øø< H
.
øøH I
IdOrigenDestino
øøI X
;
øøX Y,
registroMovimientoOrdenAlmacen
¿¿ .
.
¿¿. /
UbigeoOrigen
¿¿/ ;
=
¿¿< =
porIngresar
¿¿> I
?
¿¿J K!
_actorNegocioLogica
¿¿L _
.
¿¿_ `3
$ObtenerUbigeoDireccionActorComercial¿¿` Ñ
(¿¿Ñ Ö.
registroMovimientoOrdenAlmacen¿¿Ö £
.¿¿£ §
Tercero¿¿§ ´
.¿¿´ ¨
Id¿¿¨ Æ
)¿¿Æ Ø
:¿¿∞ ±
profileData¿¿≤ Ω
.¿¿Ω æ
Sede¿¿æ ¬
.¿¿¬ √
DomicilioFiscal¿¿√ “
.¿¿“ ”
Ubigeo¿¿” Ÿ
;¿¿Ÿ ⁄,
registroMovimientoOrdenAlmacen
¡¡ .
.
¡¡. /
DireccionOrigen
¡¡/ >
=
¡¡? @
porIngresar
¡¡A L
?
¡¡M N!
_actorNegocioLogica
¡¡O b
.
¡¡b c4
%ObtenerDetalleDireccionActorComercial¡¡c à
(¡¡à â.
registroMovimientoOrdenAlmacen¡¡â ß
.¡¡ß ®
Tercero¡¡® Ø
.¡¡Ø ∞
Id¡¡∞ ≤
)¡¡≤ ≥
:¡¡¥ µ
profileData¡¡∂ ¡
.¡¡¡ ¬
Sede¡¡¬ ∆
.¡¡∆ «
DomicilioFiscal¡¡« ÷
.¡¡÷ ◊
Detalle¡¡◊ ﬁ
;¡¡ﬁ ﬂ,
registroMovimientoOrdenAlmacen
¬¬ .
.
¬¬. /
UbigeoDestino
¬¬/ <
=
¬¬= >
porIngresar
¬¬? J
?
¬¬K L
profileData
¬¬M X
.
¬¬X Y
Sede
¬¬Y ]
.
¬¬] ^
DomicilioFiscal
¬¬^ m
.
¬¬m n
Ubigeo
¬¬n t
:
¬¬u v"
_actorNegocioLogica¬¬w ä
.¬¬ä ã4
$ObtenerUbigeoDireccionActorComercial¬¬ã Ø
(¬¬Ø ∞.
registroMovimientoOrdenAlmacen¬¬∞ Œ
.¬¬Œ œ
Tercero¬¬œ ÷
.¬¬÷ ◊
Id¬¬◊ Ÿ
)¬¬Ÿ ⁄
;¬¬⁄ €,
registroMovimientoOrdenAlmacen
√√ .
.
√√. /
DireccionDestino
√√/ ?
=
√√@ A
porIngresar
√√B M
?
√√N O
profileData
√√P [
.
√√[ \
Sede
√√\ `
.
√√` a
DomicilioFiscal
√√a p
.
√√p q
Detalle
√√q x
:
√√y z"
_actorNegocioLogica√√{ é
.√√é è5
%ObtenerDetalleDireccionActorComercial√√è ¥
(√√¥ µ.
registroMovimientoOrdenAlmacen√√µ ”
.√√” ‘
Tercero√√‘ €
.√√€ ‹
Id√√‹ ﬁ
)√√ﬁ ﬂ
;√√ﬂ ‡
return
ƒƒ ,
registroMovimientoOrdenAlmacen
ƒƒ 5
;
ƒƒ5 6
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* P
,
»»P Q
e
»»R S
)
»»S T
;
»»T U
}
…… 
}
   	
public
ÃÃ 
OperationResult
ÃÃ +
GuardarMovimientoOrdenAlmacen
ÃÃ <
(
ÃÃ< ='
RegistroMovimientoAlmacen
ÃÃ= V$
movimientoOrdenAlmacen
ÃÃW m
,
ÃÃm n%
UserProfileSessionDataÃÃo Ö
sesionUsuarioÃÃÜ ì
)ÃÃì î
{
ÕÕ 	
try
ŒŒ 
{
œœ 
return
–– 
_operacionLogica
–– '
.
––' (+
GuardarMovimientoOrdenAlmacen
––( E
(
––E F$
movimientoOrdenAlmacen
––F \
,
––\ ]
sesionUsuario
––^ k
)
––k l
;
––l m
}
—— 
catch
““ 
(
““ 
	Exception
““ 
e
““ 
)
““ 
{
”” 
throw
‘‘ 
new
‘‘ 
LogicaException
‘‘ )
(
‘‘) *
$str
‘‘* j
,
‘‘j k
e
‘‘l m
)
‘‘m n
;
‘‘n o
}
’’ 
}
÷÷ 	
public
ÿÿ 
OperationResult
ÿÿ -
InvalidarMovimientoOrdenAlmacen
ÿÿ >
(
ÿÿ> ?
long
ÿÿ? C&
idMovimientoOrdenAlmacen
ÿÿD \
,
ÿÿ\ ]
string
ÿÿ^ d
observacion
ÿÿe p
,
ÿÿp q%
UserProfileSessionDataÿÿr à
sesionUsuarioÿÿâ ñ
)ÿÿñ ó
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
var
‹‹ 
fechaActual
‹‹ 
=
‹‹  !
DateTimeUtil
‹‹" .
.
‹‹. /
FechaActual
‹‹/ :
(
‹‹: ;
)
‹‹; <
;
‹‹< =
var
›› 
ordenAlmacen
››  
=
››! " 
_ordenAlmacenDatos
››# 5
.
››5 6<
.ObtenerOrdenAlmacenConIdMovimientoOrdenAlmacen
››6 d
(
››d e&
idMovimientoOrdenAlmacen
››e }
)
››} ~
;
››~ 
var
ﬁﬁ 
movimientos
ﬁﬁ 
=
ﬁﬁ  !9
+ObtenerMovimientosConfirmadosDeOrdenAlmacen
ﬁﬁ" M
(
ﬁﬁM N
new
ﬁﬁN Q
long
ﬁﬁR V
[
ﬁﬁV W
]
ﬁﬁW X
{
ﬁﬁY Z
ordenAlmacen
ﬁﬁ[ g
.
ﬁﬁg h
Id
ﬁﬁh j
}
ﬁﬁk l
)
ﬁﬁl m
;
ﬁﬁm n
var
ﬂﬂ "
estadosTransacciones
ﬂﬂ (
=
ﬂﬂ) *
new
ﬂﬂ+ .
List
ﬂﬂ/ 3
<
ﬂﬂ3 4 
Estado_transaccion
ﬂﬂ4 F
>
ﬂﬂF G
(
ﬂﬂG H
)
ﬂﬂH I
;
ﬂﬂI J
if
‡‡ 
(
‡‡ 
movimientos
‡‡ 
.
‡‡  
Where
‡‡  %
(
‡‡% &
m
‡‡& '
=>
‡‡( *
m
‡‡+ ,
.
‡‡, -
	EsVigente
‡‡- 6
)
‡‡6 7
.
‡‡7 8
Count
‡‡8 =
(
‡‡= >
)
‡‡> ?
>
‡‡@ A
$num
‡‡B C
)
‡‡C D
{
·· 
if
‚‚ 
(
‚‚ 
!
‚‚ 
ordenAlmacen
‚‚ %
.
‚‚% &
EstaParcial
‚‚& 1
)
‚‚1 2
{
„„ "
estadosTransacciones
‰‰ ,
.
‰‰, -
Add
‰‰- 0
(
‰‰0 1
new
‰‰1 4 
Estado_transaccion
‰‰5 G
(
‰‰G H
ordenAlmacen
‰‰H T
.
‰‰T U
Id
‰‰U W
,
‰‰W X
sesionUsuario
‰‰Y f
.
‰‰f g
Empleado
‰‰g o
.
‰‰o p
Id
‰‰p r
,
‰‰r s
MaestroSettings‰‰t É
.‰‰É Ñ
Default‰‰Ñ ã
.‰‰ã å-
IdDetalleMaestroEstadoParcial‰‰å ©
,‰‰© ™
fechaActual‰‰´ ∂
,‰‰∂ ∑
$str‰‰∏ ã
)‰‰ã å
)‰‰å ç
;‰‰ç é
}
ÂÂ 
}
ÊÊ 
else
ÁÁ 
{
ËË 
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
ordenAlmacen
ÈÈ %
.
ÈÈ% &
EstaPendiente
ÈÈ& 3
)
ÈÈ3 4
{
ÍÍ "
estadosTransacciones
ÎÎ ,
.
ÎÎ, -
Add
ÎÎ- 0
(
ÎÎ0 1
new
ÎÎ1 4 
Estado_transaccion
ÎÎ5 G
(
ÎÎG H
ordenAlmacen
ÎÎH T
.
ÎÎT U
Id
ÎÎU W
,
ÎÎW X
sesionUsuario
ÎÎY f
.
ÎÎf g
Empleado
ÎÎg o
.
ÎÎo p
Id
ÎÎp r
,
ÎÎr s
MaestroSettingsÎÎt É
.ÎÎÉ Ñ
DefaultÎÎÑ ã
.ÎÎã å/
IdDetalleMaestroEstadoPendienteÎÎå ´
,ÎÎ´ ¨
fechaActualÎÎ≠ ∏
,ÎÎ∏ π
$strÎÎ∫ á
)ÎÎá à
)ÎÎà â
;ÎÎâ ä
}
ÏÏ 
}
ÌÌ 
var
ÓÓ .
 movimientoOrdenAlmacenAInvalidar
ÓÓ 4
=
ÓÓ5 6%
_transaccionRepositorio
ÓÓ7 N
.
ÓÓN ON
?ObtenerTransaccionInclusiveEstadoTransaccionYDetalleTransaccionÓÓO é
(ÓÓé è(
idMovimientoOrdenAlmacenÓÓè ß
)ÓÓß ®
;ÓÓ® ©.
 movimientoOrdenAlmacenAInvalidar
ÔÔ 0
.
ÔÔ0 1!
id_tipo_transaccion
ÔÔ1 D
=
ÔÔE F.
 movimientoOrdenAlmacenAInvalidar
ÔÔG g
.
ÔÔg h
Tipo_transaccion
ÔÔh x
.
ÔÔx y5
&Accion_de_negocio_por_tipo_transaccionÔÔy ü
.ÔÔü †
FirstÔÔ† •
(ÔÔ• ¶
)ÔÔ¶ ß
.ÔÔß ®
valorÔÔ® ≠
?ÔÔÆ Ø#
TransaccionSettingsÔÔ∞ √
.ÔÔ√ ƒ
DefaultÔÔƒ À
.ÔÔÀ Ã=
-IdTipoTransaccionSalidaBienesAjusteInventarioÔÔÃ ˘
:ÔÔ˙ ˚#
TransaccionSettingsÔÔ¸ è
.ÔÔè ê
DefaultÔÔê ó
.ÔÔó ò>
.IdTipoTransaccionEntradaBienesAjusteInventarioÔÔò ∆
;ÔÔ∆ «"
estadosTransacciones
 $
.
$ %
Add
% (
(
( )
new
) , 
Estado_transaccion
- ?
(
? @.
 movimientoOrdenAlmacenAInvalidar
@ `
.
` a
id
a c
,
c d
sesionUsuario
e r
.
r s
Empleado
s {
.
{ |
Id
| ~
,
~ 
MaestroSettingsÄ è
.è ê
Defaultê ó
.ó ò0
 IdDetalleMaestroEstadoInvalidadoò ∏
,∏ π
fechaActual∫ ≈
,≈ ∆
observacion« “
)“ ”
)” ‘
;‘ ’
return
ÒÒ 
_operacionLogica
ÒÒ '
.
ÒÒ' (K
=AfectarInventarioFisicoYGuardarInventarioEstadosTransacciones
ÒÒ( e
(
ÒÒe f/
 movimientoOrdenAlmacenAInvalidarÒÒf Ü
,ÒÒÜ á$
estadosTransaccionesÒÒà ú
,ÒÒú ù
sesionUsuarioÒÒû ´
)ÒÒ´ ¨
;ÒÒ¨ ≠
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* i
,
ııi j
e
ıık l
)
ııl m
;
ıım n
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
}˘˘ “≠
SD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Almacen\AjusteInventario_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Almacen# *
{ 
public 

class #
AjusteInventario_Logica (
:) *$
IAjusteInventario_Logica+ C
{ 
	protected 
readonly (
IInventarioActualRepositorio 7"
_inventarioActualDatos8 N
;N O
	protected 
readonly $
IMovimientos_Repositorio 3
_movimientosDatos4 E
;E F
	protected 
readonly (
IMaestrosAlmacen_Repositorio 7!
_maestrosAlmacenDatos8 M
;M N
	protected 
readonly 
IPermisos_Logica +
_permisosLogica, ;
;; <
	protected 
readonly $
ICodigosOperacion_Logica 3#
_codigosOperacionLogica4 K
;K L
	protected 
readonly )
ICrearTransaccion_Repositorio 8$
_crearTransaccionesDatos9 Q
;Q R
	protected 
readonly ,
 IConsultaTransaccion_Repositorio ;%
_consultaTransaccionDatos< U
;U V
	protected 
readonly (
IConsultaCompras_Repositorio 7!
_consultaComprasDatos8 M
;M N
	protected 
readonly 5
)IActualizarDetalleTransaccion_Repositorio D/
#_actualizarDetallesTransaccionDatosE h
;h i
const"" 
string""  
PrefijoCodigoEntrada"" )
=""* +
$str"", 1
;""1 2
const## 
string## 
PrefijoCodigoSalida## (
=##) *
$str##+ 0
;##0 1
public&& #
AjusteInventario_Logica&& &
(&&& '(
IInventarioActualRepositorio&&' C!
inventarioActualDatos&&D Y
,&&Y Z(
IMaestrosAlmacen_Repositorio&&[ w!
maestrosAlmacenDatos	&&x å
,
&&å ç&
IMovimientos_Repositorio
&&é ¶
movimientosDatos
&&ß ∑
,
&&∑ ∏+
ICrearTransaccion_Repositorio
&&π ÷%
crearTransaccionesDatos
&&◊ Ó
,
&&Ó Ô.
 IConsultaTransaccion_Repositorio
&& ê&
consultaTransaccionDatos
&&ë ©
,
&&© ™*
IConsultaCompras_Repositorio
&&´ «"
consultaComprasDatos
&&» ‹
,
&&‹ ›
IPermisos_Logica
&&ﬁ Ó
permiso_logica
&&Ô ˝
,
&&˝ ˛&
ICodigosOperacion_Logica
&&ˇ ó$
codigosOperacionLogica
&&ò Æ
,
&&Æ Ø7
)IActualizarDetalleTransaccion_Repositorio
&&∞ Ÿ0
"actualizarDetallesTransaccionDatos
&&⁄ ¸
)
&&¸ ˝
{'' 	"
_inventarioActualDatos(( "
=((# $!
inventarioActualDatos((% :
;((: ;
_movimientosDatos)) 
=)) 
movimientosDatos))  0
;))0 1
_permisosLogica** 
=** 
permiso_logica** ,
;**, -#
_codigosOperacionLogica++ #
=++$ %"
codigosOperacionLogica++& <
;++< =!
_maestrosAlmacenDatos,, !
=,," # 
maestrosAlmacenDatos,,$ 8
;,,8 9$
_crearTransaccionesDatos-- $
=--% &#
crearTransaccionesDatos--' >
;--> ?%
_consultaTransaccionDatos.. %
=..& '$
consultaTransaccionDatos..( @
;..@ A!
_consultaComprasDatos// !
=//" # 
consultaComprasDatos//$ 8
;//8 9/
#_actualizarDetallesTransaccionDatos00 /
=000 1.
"actualizarDetallesTransaccionDatos002 T
;00T U
}11 	
public44 
OperationResult44 ?
3CuadrarStockFisicoEntreInventarioActualYMovimientos44 R
(44R S
)44S T
{55 	
try66 
{77 
var88 

idEmpleado88 
=88  
ActorSettings88! .
.88. /
Default88/ 6
.886 7,
 IdActorNegocioEmpleadoPorDefecto887 W
;88W X
var99 
idsAlmacenes99  
=99! "!
_maestrosAlmacenDatos99# 8
.998 9
ObtenerIdsAlmacenes999 L
(99L M
)99M N
;99N O
var:: 
inventariosActuales:: '
=::( )"
_inventarioActualDatos::* @
.::@ A1
%ObtenerInventariosValorizadosActuales::A f
(::f g
idsAlmacenes::g s
)::s t
.::t u
ToList::u {
(::{ |
)::| }
;::} ~
var;; $
idsConceptosEnInventario;; ,
=;;- .
inventariosActuales;;/ B
.;;B C
Select;;C I
(;;I J
i;;J K
=>;;L N
i;;O P
.;;P Q

IdConcepto;;Q [
);;[ \
.;;\ ]
ToArray;;] d
(;;d e
);;e f
;;;f g
var<< 
saldosMovimientos<< %
=<<& '
(<<( )
AplicacionSettings<<) ;
.<<; <
Default<<< C
.<<C D"
PermitirGestionDeLotes<<D Z
?<<[ \
_movimientosDatos<<] n
.<<n o7
*ObtenerSaldosDeMovimientosPorConceptoYLote	<<o ô
(
<<ô ö&
idsConceptosEnInventario
<<ö ≤
,
<<≤ ≥
idsAlmacenes
<<¥ ¿
)
<<¿ ¡
:
<<¬ √
_movimientosDatos
<<ƒ ’
.
<<’ ÷3
%ObtenerSaldosDeMovimientosPorConcepto
<<÷ ˚
(
<<˚ ¸&
idsConceptosEnInventario
<<¸ î
,
<<î ï
idsAlmacenes
<<ñ ¢
)
<<¢ £
)
<<£ §
.
<<§ •
ToList
<<• ´
(
<<´ ¨
)
<<¨ ≠
;
<<≠ Æ
List== 
<==  
InventarioValorizado== )
>==) *
ajustesEntradas==+ :
===; <
new=== @
List==A E
<==E F 
InventarioValorizado==F Z
>==Z [
(==[ \
)==\ ]
;==] ^
List>> 
<>>  
InventarioValorizado>> )
>>>) *
ajustesSalidas>>+ 9
=>>: ;
new>>< ?
List>>@ D
<>>D E 
InventarioValorizado>>E Y
>>>Y Z
(>>Z [
)>>[ \
;>>\ ]
foreach?? 
(?? 
var?? 
inventarioActual?? -
in??. 0
inventariosActuales??1 D
)??D E
{@@ 
varAA 
saldo_movimientoAA (
=AA) *
saldosMovimientosAA+ <
.AA< =
SingleOrDefaultAA= L
(AAL M
smAAM O
=>AAP R
smAAS U
.AAU V
	IdAlmacenAAV _
==AA` b
inventarioActualAAc s
.AAs t
	IdAlmacenAAt }
&&	AA~ Ä
sm
AAÅ É
.
AAÉ Ñ

IdConcepto
AAÑ é
==
AAè ë
inventarioActual
AAí ¢
.
AA¢ £

IdConcepto
AA£ ≠
&&
AAÆ ∞
sm
AA± ≥
.
AA≥ ¥
Lote
AA¥ ∏
==
AAπ ª
inventarioActual
AAº Ã
.
AAÃ Õ
Lote
AAÕ —
)
AA— “
;
AA“ ”
ifCC 
(CC 
saldo_movimientoCC '
==CC( *
nullCC+ /
)CC/ 0
{DD 
ifEE 
(EE 
inventarioActualEE ,
.EE, -
CantidadEE- 5
>EE6 7
$numEE8 9
)EE9 :
{FF 
ajustesEntradasGG +
.GG+ ,
AddGG, /
(GG/ 0
newGG0 3 
InventarioValorizadoGG4 H
(GGH I
)GGI J
{GGK L
	IdAlmacenGGM V
=GGW X
inventarioActualGGY i
.GGi j
	IdAlmacenGGj s
,GGs t

IdConceptoGGu 
=
GGÄ Å
inventarioActual
GGÇ í
.
GGí ì

IdConcepto
GGì ù
,
GGù û
Lote
GGü £
=
GG§ •
inventarioActual
GG¶ ∂
.
GG∂ ∑
Lote
GG∑ ª
,
GGª º
Cantidad
GGΩ ≈
=
GG∆ «
inventarioActual
GG» ÿ
.
GGÿ Ÿ
Cantidad
GGŸ ·
,
GG· ‚ 
CantidadSecundaria
GG„ ı
=
GGˆ ˜
inventarioActual
GG¯ à
.
GGà â 
CantidadSecundaria
GGâ õ
}
GGú ù
)
GGù û
;
GGû ü
}HH 
elseII 
{JJ 
ajustesSalidasKK *
.KK* +
AddKK+ .
(KK. /
newKK/ 2 
InventarioValorizadoKK3 G
(KKG H
)KKH I
{KKJ K
	IdAlmacenKKL U
=KKV W
inventarioActualKKX h
.KKh i
	IdAlmacenKKi r
,KKr s

IdConceptoKKt ~
=	KK Ä
inventarioActual
KKÅ ë
.
KKë í

IdConcepto
KKí ú
,
KKú ù
Lote
KKû ¢
=
KK£ §
inventarioActual
KK• µ
.
KKµ ∂
Lote
KK∂ ∫
,
KK∫ ª
Cantidad
KKº ƒ
=
KK≈ ∆
inventarioActual
KK« ◊
.
KK◊ ÿ
Cantidad
KKÿ ‡
,
KK‡ · 
CantidadSecundaria
KK‚ Ù
=
KKı ˆ
inventarioActual
KK˜ á
.
KKá à 
CantidadSecundaria
KKà ö
}
KKõ ú
)
KKú ù
;
KKù û
}LL 
}MM 
elseNN 
ifNN 
(NN 
saldo_movimientoNN -
.NN- .
CantidadNN. 6
<NN7 8
inventarioActualNN9 I
.NNI J
CantidadNNJ R
)NNR S
{OO 
ajustesEntradasPP '
.PP' (
AddPP( +
(PP+ ,
newPP, / 
InventarioValorizadoPP0 D
(PPD E
)PPE F
{PPG H
	IdAlmacenPPI R
=PPS T
saldo_movimientoPPU e
.PPe f
	IdAlmacenPPf o
,PPo p

IdConceptoPPq {
=PP| }
saldo_movimiento	PP~ é
.
PPé è

IdConcepto
PPè ô
,
PPô ö
Lote
PPõ ü
=
PP† °
saldo_movimiento
PP¢ ≤
.
PP≤ ≥
Lote
PP≥ ∑
,
PP∑ ∏
Cantidad
PPπ ¡
=
PP¬ √
inventarioActual
PPƒ ‘
.
PP‘ ’
Cantidad
PP’ ›
-
PPﬁ ﬂ
saldo_movimiento
PP‡ 
.
PP Ò
Cantidad
PPÒ ˘
,
PP˘ ˙ 
CantidadSecundaria
PP˚ ç
=
PPé è
inventarioActual
PPê †
.
PP† ° 
CantidadSecundaria
PP° ≥
-
PP¥ µ
saldo_movimiento
PP∂ ∆
.
PP∆ « 
CantidadSecundaria
PP« Ÿ
}
PP⁄ €
)
PP€ ‹
;
PP‹ ›
}QQ 
elseRR 
ifRR 
(RR 
saldo_movimientoRR -
.RR- .
CantidadRR. 6
>RR7 8
inventarioActualRR9 I
.RRI J
CantidadRRJ R
)RRR S
{SS 
ajustesSalidasTT &
.TT& '
AddTT' *
(TT* +
newTT+ . 
InventarioValorizadoTT/ C
(TTC D
)TTD E
{TTF G
	IdAlmacenTTH Q
=TTR S
saldo_movimientoTTT d
.TTd e
	IdAlmacenTTe n
,TTn o

IdConceptoTTp z
=TT{ |
saldo_movimiento	TT} ç
.
TTç é

IdConcepto
TTé ò
,
TTò ô
Lote
TTö û
=
TTü †
saldo_movimiento
TT° ±
.
TT± ≤
Lote
TT≤ ∂
,
TT∂ ∑
Cantidad
TT∏ ¿
=
TT¡ ¬
saldo_movimiento
TT√ ”
.
TT” ‘
Cantidad
TT‘ ‹
-
TT› ﬁ
inventarioActual
TTﬂ Ô
.
TTÔ 
Cantidad
TT ¯
,
TT¯ ˘ 
CantidadSecundaria
TT˙ å
=
TTç é
saldo_movimiento
TTè ü
.
TTü † 
CantidadSecundaria
TT† ≤
-
TT≥ ¥
inventarioActual
TTµ ≈
.
TT≈ ∆ 
CantidadSecundaria
TT∆ ÿ
}
TTŸ ⁄
)
TT⁄ €
;
TT€ ‹
}UU 
}VV 
varWW "
costosUnitariosComprasWW *
=WW+ ,!
_consultaComprasDatosWW- B
.WWB CJ
=ObtenerValorUnitarioDePrimeraOrdenDeCompraConPrecioMayorACero	WWC Ä
(
WWÄ Å
ajustesEntradas
WWÅ ê
.
WWê ë
Union
WWë ñ
(
WWñ ó
ajustesSalidas
WWó •
)
WW• ¶
.
WW¶ ß
Select
WWß ≠
(
WW≠ Æ
a
WWÆ Ø
=>
WW∞ ≤
a
WW≥ ¥
.
WW¥ µ

IdConcepto
WWµ ø
)
WWø ¿
.
WW¿ ¡
Distinct
WW¡ …
(
WW…  
)
WW  À
.
WWÀ Ã
ToArray
WWÃ ”
(
WW” ‘
)
WW‘ ’
)
WW’ ÷
.
WW÷ ◊
ToList
WW◊ ›
(
WW› ﬁ
)
WWﬁ ﬂ
;
WWﬂ ‡
ajustesEntradasXX 
.XX  
ForEachXX  '
(XX' (
aeXX( *
=>XX+ -
{XX. /
aeXX0 2
.XX2 3
ValorUnitarioXX3 @
=XXA B
(XXC D
inventariosActualesXXD W
.XXW X
SingleOrDefaultXXX g
(XXg h
iaXXh j
=>XXj l
iaXXm o
.XXo p

IdConceptoXXp z
==XXz |
aeXX} 
.	XX Ä

IdConcepto
XXÄ ä
&&
XXã ç
ia
XXé ê
.
XXê ë
	IdAlmacen
XXë ö
==
XXö ú
ae
XXù ü
.
XXü †
	IdAlmacen
XX† ©
)
XX© ™
.
XX™ ´
ValorUnitario
XX´ ∏
!=
XX∏ ∫
$num
XX∫ ª
?
XXª º!
inventariosActuales
XXΩ –
.
XX– —
SingleOrDefault
XX— ‡
(
XX‡ ·
ia
XX· „
=>
XX‰ Ê
ia
XXÁ È
.
XXÈ Í

IdConcepto
XXÍ Ù
==
XXı ˜
ae
XX¯ ˙
.
XX˙ ˚

IdConcepto
XX˚ Ö
&&
XXÜ à
ia
XXâ ã
.
XXã å
	IdAlmacen
XXå ï
==
XXñ ò
ae
XXô õ
.
XXõ ú
	IdAlmacen
XXú •
)
XX• ¶
.
XX¶ ß
ValorUnitario
XXß ¥
:
XX¥ µ
(
XXµ ∂"
costosUnitariosComprasYY *
.YY* +
FirstOrDefaultYY+ 9
(YY9 :
cuYY: <
=>YY= ?
cuYY@ B
.YYB C

IdConceptoYYC M
==YYN P
aeYYQ S
.YYS T

IdConceptoYYT ^
)YY^ _
!=YY_ a
nullYYa e
?YYe f"
costosUnitariosComprasYYg }
.YY} ~
FirstOrDefault	YY~ å
(
YYå ç
cu
YYç è
=>
YYê í
cu
YYì ï
.
YYï ñ

IdConcepto
YYñ †
==
YY° £
ae
YY§ ¶
.
YY¶ ß

IdConcepto
YYß ±
)
YY± ≤
.
YY≤ ≥
Precio
YY≥ π
:
YYπ ∫
$num
YY∫ ª
)
YYª º
)
YYº Ω
;
YYΩ æ
ae
YYø ¡
.
YY¡ ¬

ValorTotal
YY¬ Ã
=
YYÕ Œ
ae
YYœ —
.
YY— “
Cantidad
YY“ ⁄
*
YY€ ‹
ae
YY› ﬂ
.
YYﬂ ‡
ValorUnitario
YY‡ Ì
;
YYÌ Ó
}
YYÔ 
)
YY Ò
;
YYÒ Ú
returnZZ 7
+GenerarYCrearTransaccionesAjustesInventarioZZ B
(ZZB C
idsAlmacenesZZC O
,ZZO P

idEmpleadoZZQ [
,ZZ[ \
ajustesEntradasZZ] l
,ZZl m
ajustesSalidasZZn |
)ZZ| }
;ZZ} ~
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* o
+__p q
e__r s
.__s t
Message__t {
,__{ |
e__} ~
)__~ 
;	__ Ä
}`` 
}aa 	
privatecc 
OperationResultcc 7
+GenerarYCrearTransaccionesAjustesInventariocc  K
(ccK L
intccL O
[ccO P
]ccP Q
idsAlmacenesccR ^
,cc^ _
intcc` c

idEmpleadoccd n
,cco p
Listccp t
<cct u!
InventarioValorizado	ccu â
>
ccâ ä
ajustesEntradas
ccã ö
,
ccö õ
List
ccú †
<
cc† °"
InventarioValorizado
cc° µ
>
ccµ ∂
ajustesSalidas
cc∑ ≈
)
cc≈ ∆
{dd 	
tryee 
{ff 
Listgg 
<gg 
Transacciongg  
>gg  ! 
transaccionesAjustesgg" 6
=gg7 8
newgg9 <
Listgg= A
<ggA B
TransaccionggB M
>ggM N
(ggN O
)ggO P
;ggP Q
foreachhh 
(hh 
varhh 
	idAlmacenhh &
inhh' )
idsAlmaceneshh* 6
)hh6 7
{ii 
varjj 
hayAjustesEntradasjj *
=jj+ ,
ajustesEntradasjj- <
.jj< =
Wherejj= B
(jjB C
aejjC E
=>jjF H
aejjI K
.jjK L
	IdAlmacenjjL U
==jjV X
	idAlmacenjjY b
)jjb c
.jjc d
Anyjjd g
(jjg h
)jjh i
;jji j
varkk 
hayAjustesSalidaskk )
=kk* +
ajustesSalidaskk, :
.kk: ;
Wherekk; @
(kk@ A
aekkA C
=>kkD F
aekkG I
.kkI J
	IdAlmacenkkJ S
==kkT V
	idAlmacenkkW `
)kk` a
.kka b
Anykkb e
(kke f
)kkf g
;kkg h
varll 
codigoEntradall %
=ll& '#
_codigosOperacionLogicall( ?
.ll? @.
"ObtenerMaximoCodigoParaTransaccionll@ b
(llb c 
PrefijoCodigoEntradallc w
,llw x 
TransaccionSettings	lly å
.
llå ç
Default
llç î
.
llî ï<
.IdTipoTransaccionEntradaBienesAjusteInventario
llï √
)
ll√ ƒ
;
llƒ ≈
varmm 
codigoSalidamm $
=mm% &#
_codigosOperacionLogicamm' >
.mm> ?.
"ObtenerMaximoCodigoParaTransaccionmm? a
(mma b
PrefijoCodigoSalidammb u
,mmu v 
TransaccionSettings	mmw ä
.
mmä ã
Default
mmã í
.
mmí ì;
-IdTipoTransaccionSalidaBienesAjusteInventario
mmì ¿
)
mm¿ ¡
;
mm¡ ¬
ifnn 
(nn 
hayAjustesEntradasnn *
)nn* +
{oo  
transaccionesAjustespp ,
.pp, -
Addpp- 0
(pp0 1#
GenerarAjusteInventariopp1 H
(ppH I

idEmpleadoppI S
,ppS T
	idAlmacenppU ^
,pp^ _
truepp` d
,ppd e
codigoEntradappf s
,pps t
ajustesEntradas	ppu Ñ
.
ppÑ Ö
Where
ppÖ ä
(
ppä ã
ae
ppã ç
=>
ppé ê
ae
ppë ì
.
ppì î
	IdAlmacen
ppî ù
==
ppû †
	idAlmacen
pp° ™
)
pp™ ´
.
pp´ ¨
ToList
pp¨ ≤
(
pp≤ ≥
)
pp≥ ¥
)
pp¥ µ
)
ppµ ∂
;
pp∂ ∑
}qq 
ifrr 
(rr 
hayAjustesSalidasrr )
)rr) *
{ss  
transaccionesAjustestt ,
.tt, -
Addtt- 0
(tt0 1#
GenerarAjusteInventariott1 H
(ttH I

idEmpleadottI S
,ttS T
	idAlmacenttU ^
,tt^ _
falsett` e
,tte f
codigoSalidattg s
,tts t
ajustesSalidas	ttu É
.
ttÉ Ñ
Where
ttÑ â
(
ttâ ä
a
ttä ã
=>
ttå é
a
ttè ê
.
ttê ë
	IdAlmacen
ttë ö
==
ttõ ù
	idAlmacen
ttû ß
)
ttß ®
.
tt® ©
ToList
tt© Ø
(
ttØ ∞
)
tt∞ ±
)
tt± ≤
)
tt≤ ≥
;
tt≥ ¥
}uu 
}vv 
returnww $
_crearTransaccionesDatosww /
.ww/ 0
CrearTransaccionesww0 B
(wwB C 
transaccionesAjusteswwC W
)wwW X
;wwX Y
}xx 
catchyy 
(yy 
	Exceptionyy 
eyy 
)yy 
{zz 
throw{{ 
new{{ 
LogicaException{{ )
({{) *
$str{{* T
+{{U V
e{{W X
.{{X Y
Message{{Y `
,{{` a
e{{b c
){{c d
;{{d e
}|| 
}}} 	
private 
Transaccion #
GenerarAjusteInventario 3
(3 4
int4 7

idEmpleado8 B
,B C
intD G
	idAlmacenH Q
,Q R
boolS W
	esEntradaX a
,a b
intc f
maximoCodigog s
,t u
Listu y
<y z!
InventarioValorizado	z é
>
é è
detalles
ê ò
)
ò ô
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
var
ÑÑ 
fechaActual
ÑÑ 
=
ÑÑ  !
DateTimeUtil
ÑÑ" .
.
ÑÑ. /
FechaActual
ÑÑ/ :
(
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
var
ÖÖ %
fechaPrimeraTransaccion
ÖÖ +
=
ÖÖ, -'
_consultaTransaccionDatos
ÖÖ. G
.
ÖÖG H,
ObtenerFechaPrimeraTransaccion
ÖÖH f
(
ÖÖf g
	idAlmacen
ÖÖg p
)
ÖÖp q
??
ÖÖq s
fechaActual
ÖÖt 
;ÖÖ Ä
var
ÜÜ 
observacion
ÜÜ 
=
ÜÜ  !
$str
ÜÜ" $
;
ÜÜ$ %
var
áá 
prefijoCodigo
áá !
=
áá" #
	esEntrada
áá$ -
?
áá- ."
PrefijoCodigoEntrada
áá. B
:
ááB C!
PrefijoCodigoSalida
ááC V
;
ááV W
var
àà 
idTipoTransaccion
àà %
=
àà& '
	esEntrada
àà( 1
?
àà2 3!
TransaccionSettings
àà4 G
.
ààG H
Default
ààH O
.
ààO P<
.IdTipoTransaccionEntradaBienesAjusteInventario
ààP ~
:àà Ä#
TransaccionSettingsààÅ î
.ààî ï
Defaultààï ú
.ààú ù=
-IdTipoTransaccionSalidaBienesAjusteInventarioààù  
;àà  À
int
ââ 
idMoneda
ââ 
=
ââ 
MaestroSettings
ââ .
.
ââ. /
Default
ââ/ 6
.
ââ6 7)
IdDetalleMaestroMonedaSoles
ââ7 R
;
ââR S
int
ää 
idUnidadNegocio
ää #
=
ää$ %
MaestroSettings
ää& 5
.
ää5 6
Default
ää6 =
.
ää= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
ää> h
;
ääh i
decimal
ãã 
tipoDeCambio
ãã $
=
ãã% &
$num
ãã' (
;
ãã( )
string
åå 
codigo
åå 
=
åå 
prefijoCodigo
åå  -
+
åå. /
(
åå0 1
++
åå1 3
maximoCodigo
åå3 ?
)
åå? @
.
åå@ A
ToString
ååA I
(
ååI J
)
ååJ K
;
ååK L
Transaccion
éé 
ajusteInventario
éé ,
=
éé- .
new
éé/ 2
Transaccion
éé3 >
(
éé> ?
codigo
éé? E
,
ééE F
null
ééG K
,
ééK L
fechaActual
ééM X
,
ééX Y
idTipoTransaccion
ééZ k
,
éék l
idUnidadNegocio
éém |
,
éé| }
trueéé~ Ç
,ééÇ É'
fechaPrimeraTransaccionééÑ õ
,ééõ ú'
fechaPrimeraTransaccionééù ¥
,éé¥ µ
observacionéé∂ ¡
,éé¡ ¬'
fechaPrimeraTransaccionéé√ ⁄
,éé⁄ €

idEmpleadoéé‹ Ê
,ééÊ Á
$numééË È
,ééÈ Í
	idAlmacenééÎ Ù
,ééÙ ı
idMonedaééˆ ˛
,éé˛ ˇ
tipoDeCambioééÄ å
,ééå ç
nullééé í
,ééí ì
	idAlmacenééî ù
)ééù û
;ééû ü
ajusteInventario
èè  
.
èè  !
id_comprobante
èè! /
=
èè0 1!
TransaccionSettings
èè2 E
.
èèE F
Default
èèF M
.
èèM N#
IdComprobanteGenerico
èèN c
;
èèc d
ajusteInventario
êê  
.
êê  !!
Detalle_transaccion
êê! 4
=
êê5 6"
InventarioValorizado
êê7 K
.
êêK L#
ToDetallesTransaccion
êêL a
(
êêa b
detalles
êêb j
.
êêj k
Where
êêk p
(
êêp q
ae
êêq s
=>
êêt v
ae
êêw y
.
êêy z
	IdAlmacenêêz É
==êêÑ Ü
	idAlmacenêêá ê
)êêê ë
.êêë í
ToListêêí ò
(êêò ô
)êêô ö
,êêö õ
$strêêú Ø
)êêØ ∞
;êê∞ ±
return
ëë 
ajusteInventario
ëë '
;
ëë' (
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï )
(
ïï) *
$str
ïï* R
,
ïïR S
e
ïïT U
)
ïïU V
;
ïïV W
}
ññ 
}
óó 	
public
õõ 
OperationResult
õõ 8
*RecalcularCostoUnitarioYTotalEnMovimientos
õõ I
(
õõI J
)
õõJ K
{
úú 	
try
ùù 
{
ûû 
var
üü 
idsAlmacenes
üü  
=
üü! "#
_maestrosAlmacenDatos
üü# 8
.
üü8 9!
ObtenerIdsAlmacenes
üü9 L
(
üüL M
)
üüM N
;
üüN O
var
†† !
inventariosActuales
†† '
=
††( )$
_inventarioActualDatos
††* @
.
††@ A3
%ObtenerInventariosValorizadosActuales
††A f
(
††f g
idsAlmacenes
††g s
)
††s t
.
††t u
ToList
††u {
(
††{ |
)
††| }
;
††} ~
var
°° &
idsConceptosEnInventario
°° ,
=
°°- .!
inventariosActuales
°°/ B
.
°°B C
Select
°°C I
(
°°I J
i
°°J K
=>
°°L N
i
°°O P
.
°°P Q

IdConcepto
°°Q [
)
°°[ \
.
°°\ ]
Distinct
°°] e
(
°°e f
)
°°f g
.
°°g h
ToArray
°°h o
(
°°o p
)
°°p q
;
°°q r
var
¢¢ 
fechaActual
¢¢ 
=
¢¢  !
DateTimeUtil
¢¢" .
.
¢¢. /
FechaActual
¢¢/ :
(
¢¢: ;
)
¢¢; <
;
¢¢< =
var
££ +
tiposOperacionSegunInventario
££ 1
=
££2 3
Diccionario
££4 ?
.
££? @R
CTiposDeTransaccionMovimientoDeBienesConCostoUnitarioSegunInventario££@ É
;££É Ñ
var
§§ &
tiposOperacionSegunOrden
§§ ,
=
§§- .
Diccionario
§§/ :
.
§§: ;T
ETiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeLaOrden§§; Ä
;§§Ä Å
var
•• 2
$tiposOperacionSegunTransaccionOrigen
•• 8
=
••9 :
Diccionario
••; F
.
••F Gj
[TiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeMovimientoDeTransaccionOrigen••G ¢
;••¢ £
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
	idAlmacen
¶¶ &
in
¶¶' )
idsAlmacenes
¶¶* 6
)
¶¶6 7
{
ßß 
var
®® %
fechaPrimeraTransaccion
®® /
=
®®0 1'
_consultaTransaccionDatos
®®2 K
.
®®K L,
ObtenerFechaPrimeraTransaccion
®®L j
(
®®j k
	idAlmacen
®®k t
)
®®t u
??
®®v x
fechaActual®®y Ñ
;®®Ñ Ö
var
©© 
movimientos
©© #
=
©©$ %
_movimientosDatos
©©& 7
.
©©7 8:
,ObtenerMovimientosDeAlmacenesConOrdenYOrigen
©©8 d
(
©©d e
	idAlmacen
©©e n
,
©©n o'
idsConceptosEnInventario©©p à
,©©à â'
fechaPrimeraTransaccion©©ä °
,©©° ¢
fechaActual©©£ Æ
)©©Æ Ø
.©©Ø ∞
ToList©©∞ ∂
(©©∂ ∑
)©©∑ ∏
;©©∏ π
if
™™ 
(
™™ 
movimientos
™™ "
.
™™" #
Count
™™# (
>
™™( )
$num
™™) *
)
™™* +
{
´´ 
foreach
¨¨ 
(
¨¨  !
var
¨¨! $

idConcepto
¨¨% /
in
¨¨0 2&
idsConceptosEnInventario
¨¨3 K
)
¨¨K L
{
≠≠ 
var
ØØ &
entradaAjustesInventario
ØØ  8
=
ØØ9 :
movimientos
ØØ; F
.
ØØF G
SingleOrDefault
ØØG V
(
ØØV W
m
ØØW X
=>
ØØY [
m
ØØ\ ]
.
ØØ] ^
IdTipoTransaccion
ØØ^ o
==
ØØp r"
TransaccionSettingsØØs Ü
.ØØÜ á
DefaultØØá é
.ØØé è>
.IdTipoTransaccionEntradaBienesAjusteInventarioØØè Ω
&&ØØæ ¿
mØØ¡ ¬
.ØØ¬ √

IdConceptoØØ√ Õ
==ØØÕ œ

idConceptoØØ– ⁄
)ØØ⁄ €
;ØØ€ ‹
decimal
±± #
saldoImporte
±±$ 0
=
±±1 2&
entradaAjustesInventario
±±3 K
!=
±±K M
null
±±M Q
?
±±Q R&
entradaAjustesInventario
±±S k
.
±±k l
ImporteTotal
±±l x
:
±±x y
$num
±±y z
;
±±z {
decimal
≤≤ #
saldoCantidad
≤≤$ 1
=
≤≤2 3&
entradaAjustesInventario
≤≤4 L
!=
≤≤M O
null
≤≤P T
?
≤≤U V&
entradaAjustesInventario
≤≤W o
.
≤≤o p
Cantidad
≤≤p x
:
≤≤y z
$num
≤≤{ |
;
≤≤| }
decimal
≥≥ ##
costoUnitarioPromedio
≥≥$ 9
=
≥≥: ;&
entradaAjustesInventario
≥≥< T
!=
≥≥U W
null
≥≥X \
?
≥≥] ^&
entradaAjustesInventario
≥≥_ w
.
≥≥w x
ImporteUnitario≥≥x á
:≥≥à â
$num≥≥ä ã
;≥≥ã å
var
¥¥ !
movimientosConcepto
¥¥  3
=
¥¥4 5
movimientos
¥¥6 A
.
¥¥A B
Where
¥¥B G
(
¥¥G H
m
¥¥H I
=>
¥¥J L
m
¥¥M N
.
¥¥N O

IdConcepto
¥¥O Y
==
¥¥Z \

idConcepto
¥¥] g
&&
¥¥h j
(
¥¥k l
(
¥¥m n'
entradaAjustesInventario¥¥n Ü
!=¥¥á â
null¥¥ä é
&&¥¥ê í
m¥¥ì î
.¥¥î ï$
IdDetalleTransaccion¥¥ï ©
!=¥¥© ´(
entradaAjustesInventario¥¥´ √
.¥¥√ ƒ$
IdDetalleTransaccion¥¥ƒ ÿ
)¥¥ÿ Ÿ
||¥¥Ÿ €(
entradaAjustesInventario¥¥‹ Ù
==¥¥ı ˜
null¥¥¯ ¸
)¥¥¸ ˝
)¥¥˝ ˛
.¥¥˛ ˇ
OrderBy¥¥ˇ Ü
(¥¥Ü á
m¥¥á à
=>¥¥à ä
m¥¥ã å
.¥¥å ç
Fecha¥¥ç í
)¥¥í ì
.¥¥ì î
ToList¥¥î ö
(¥¥ö õ
)¥¥õ ú
;¥¥ú ù
foreach
µµ #
(
µµ$ %
var
µµ% (

movimiento
µµ) 3
in
µµ4 6!
movimientosConcepto
µµ7 J
)
µµJ K
{
∂∂ 
var
∑∑  #
factor
∑∑$ *
=
∑∑+ ,

movimiento
∑∑- 7
.
∑∑7 8
	EsEntrada
∑∑8 A
?
∑∑B C
$num
∑∑D E
:
∑∑F G
-
∑∑H I
$num
∑∑I J
;
∑∑J K
saldoCantidad
∏∏  -
+=
∏∏. 0

movimiento
∏∏1 ;
.
∏∏; <
Cantidad
∏∏< D
*
∏∏E F
factor
∏∏G M
;
∏∏M N
if
∫∫  "
(
∫∫# $+
tiposOperacionSegunInventario
∫∫$ A
.
∫∫A B
Contains
∫∫B J
(
∫∫J K

movimiento
∫∫K U
.
∫∫U V
IdTipoTransaccion
∫∫V g
)
∫∫g h
)
∫∫h i
{
ªª  !

movimiento
ºº$ .
.
ºº. /
ImporteUnitario
ºº/ >
=
ºº? @#
costoUnitarioPromedio
ººA V
;
ººV W

movimiento
ΩΩ$ .
.
ΩΩ. /
ImporteTotal
ΩΩ/ ;
=
ΩΩ< =

movimiento
ΩΩ> H
.
ΩΩH I
Cantidad
ΩΩI Q
*
ΩΩR S

movimiento
ΩΩT ^
.
ΩΩ^ _
ImporteUnitario
ΩΩ_ n
;
ΩΩn o
}
ææ  !
else
øø  $
if
øø% '
(
øø( )&
tiposOperacionSegunOrden
øø) A
.
øøA B
Contains
øøB J
(
øøJ K

movimiento
øøK U
.
øøU V
IdTipoTransaccion
øøV g
)
øøg h
)
øøh i
{
¿¿  !

movimiento
¡¡$ .
.
¡¡. /
ImporteTotal
¡¡/ ;
=
¡¡< =!
TransaccionSettings
¡¡> Q
.
¡¡Q R
Default
¡¡R Y
.
¡¡Y Z
AplicaLeyAmazonia
¡¡Z k
?
¡¡l m

movimiento
¡¡n x
.
¡¡x y 
ImporteTotalOrden¡¡y ä
:¡¡ã å

movimiento¡¡ç ó
.¡¡ó ò!
ImporteTotalOrden¡¡ò ©
-¡¡™ ´

movimiento¡¡¨ ∂
.¡¡∂ ∑
IgvOrden¡¡∑ ø
;¡¡ø ¿

movimiento
¬¬$ .
.
¬¬. /
ImporteUnitario
¬¬/ >
=
¬¬? @

movimiento
¬¬A K
.
¬¬K L
Cantidad
¬¬L T
!=
¬¬T V
$num
¬¬V W
?
¬¬W X

movimiento
¬¬Y c
.
¬¬c d
ImporteTotal
¬¬d p
/
¬¬q r

movimiento
¬¬s }
.
¬¬} ~
Cantidad¬¬~ Ü
:¬¬Ü á
$num¬¬á à
;¬¬à â
}
√√  !
else
ƒƒ  $
if
ƒƒ% '
(
ƒƒ( )2
$tiposOperacionSegunTransaccionOrigen
ƒƒ) M
.
ƒƒM N
Contains
ƒƒN V
(
ƒƒV W

movimiento
ƒƒW a
.
ƒƒa b
IdTipoTransaccion
ƒƒb s
)
ƒƒs t
)
ƒƒt u
{
≈≈  !
var
∆∆$ '
movimientoOrigen
∆∆( 8
=
∆∆9 :

movimiento
∆∆; E
.
∆∆E F+
IdTransaccionMovimientoOrigen
∆∆F c
!=
∆∆d f
null
∆∆g k
?
∆∆l m
movimientos
∆∆n y
.
∆∆y z
FirstOrDefault∆∆z à
(∆∆à â
m∆∆â ä
=>∆∆ã ç
m∆∆é è
.∆∆è ê
IdTransaccion∆∆ê ù
==∆∆û †

movimiento∆∆° ´
.∆∆´ ¨-
IdTransaccionMovimientoOrigen∆∆¨ …
&&∆∆  Ã
m∆∆Õ Œ
.∆∆Œ œ

IdConcepto∆∆œ Ÿ
==∆∆⁄ ‹

idConcepto∆∆› Á
)∆∆Á Ë
:∆∆Ë È
null∆∆Í Ó
;∆∆Ó Ô

movimiento
««$ .
.
««. /
ImporteUnitario
««/ >
=
««? @
movimientoOrigen
««A Q
!=
««Q S
null
««S W
?
««W X
movimientos
««Y d
.
««d e
FirstOrDefault
««e s
(
««s t
m
««t u
=>
««v x
m
««y z
.
««z {
IdTransaccion««{ à
==««â ã

movimiento««å ñ
.««ñ ó-
IdTransaccionMovimientoOrigen««ó ¥
&&««µ ∑
m««∏ π
.««π ∫

IdConcepto««∫ ƒ
==««≈ «

idConcepto««» “
)««” ‘
.««‘ ’
ImporteUnitario««’ ‰
:««‰ Â%
costoUnitarioPromedio««Ê ˚
;««˚ ¸

movimiento
»»$ .
.
»». /
ImporteTotal
»»/ ;
=
»»< =

movimiento
»»> H
.
»»H I
ImporteUnitario
»»I X
*
»»Y Z

movimiento
»»[ e
.
»»e f
Cantidad
»»f n
;
»»n o
}
……  !
saldoImporte
    ,
+=
  - /

movimiento
  0 :
.
  : ;
ImporteTotal
  ; G
*
  H I
factor
  J P
;
  P Q#
costoUnitarioPromedio
ÀÀ  5
=
ÀÀ6 7
saldoCantidad
ÀÀ8 E
!=
ÀÀE G
$num
ÀÀG H
?
ÀÀH I
saldoImporte
ÀÀJ V
/
ÀÀW X
saldoCantidad
ÀÀY f
:
ÀÀf g
$num
ÀÀg h
;
ÀÀh i
}
ÕÕ 
var
ŒŒ &
inventarioActualConcepto
ŒŒ  8
=
ŒŒ9 :!
inventariosActuales
ŒŒ; N
.
ŒŒN O
SingleOrDefault
ŒŒO ^
(
ŒŒ^ _
i
ŒŒ_ `
=>
ŒŒa c
i
ŒŒd e
.
ŒŒe f
	IdAlmacen
ŒŒf o
==
ŒŒp r
	idAlmacen
ŒŒs |
&&
ŒŒ} 
iŒŒÄ Å
.ŒŒÅ Ç

IdConceptoŒŒÇ å
==ŒŒç è

idConceptoŒŒê ö
)ŒŒö õ
;ŒŒõ ú
if
œœ 
(
œœ &
inventarioActualConcepto
œœ 7
!=
œœ7 9
null
œœ: >
)
œœ> ?
{
–– &
inventarioActualConcepto
——  8
.
——8 9
ValorUnitario
——9 F
=
——G H#
costoUnitarioPromedio
——I ^
;
——^ _&
inventarioActualConcepto
““  8
.
““8 9

ValorTotal
““9 C
=
““D E
saldoImporte
““F R
;
““R S
}
”” 
}
’’ !
inventariosActuales
÷÷ +
.
÷÷+ ,
ForEach
÷÷, 3
(
÷÷3 4
i
÷÷4 5
=>
÷÷6 8
movimientos
÷÷9 D
.
÷÷D E
Add
÷÷E H
(
÷÷H I
new
÷÷I L
MovimientoAlmacen
÷÷M ^
(
÷÷^ _
)
÷÷_ `
{
÷÷a b"
IdDetalleTransaccion
÷÷c w
=
÷÷x y
i
÷÷z {
.
÷÷{ |#
IdDetalleTransaccion÷÷| ê
,÷÷ê ë
ImporteUnitario÷÷í °
=÷÷¢ £
i÷÷§ •
.÷÷• ¶
ValorUnitario÷÷¶ ≥
,÷÷≥ ¥
ImporteTotal÷÷µ ¡
=÷÷¬ √
i÷÷ƒ ≈
.÷÷≈ ∆

ValorTotal÷÷∆ –
}÷÷— “
)÷÷“ ”
)÷÷” ‘
;÷÷‘ ’1
#_actualizarDetallesTransaccionDatos
◊◊ ;
.
◊◊; <0
"ActualizarValorUnitarioyValorTotal
◊◊< ^
(
◊◊^ _
movimientos
◊◊_ j
)
◊◊j k
;
◊◊k l
}
ÿÿ 
}
ŸŸ 
return
⁄⁄ 
new
⁄⁄ 
OperationResult
⁄⁄ *
(
⁄⁄* +!
OperationResultEnum
⁄⁄+ >
.
⁄⁄> ?
Success
⁄⁄? F
)
⁄⁄F G
;
⁄⁄G H
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
e
‹‹ 
)
‹‹ 
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
LogicaException
ﬁﬁ )
(
ﬁﬁ) *
$str
ﬁﬁ* s
,
ﬁﬁs t
e
ﬁﬁu v
)
ﬁﬁv w
;
ﬁﬁw x
}
ﬂﬂ 
}
·· 	
}
‰‰ 
}ÂÂ î©
SD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Almacen\InventarioActual_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Almacen# *
{ 
public 

class #
InventarioActual_Logica (
:( )$
IInventarioActual_Logica* B
{ 
	protected 
readonly (
IInventarioActualRepositorio 7"
_inventarioActualDatos8 N
;N O
	protected 
readonly (
IMaestrosAlmacen_Repositorio 7!
_maestrosAlmacenDatos8 M
;M N
	protected 
readonly 
IPermisos_Logica +
_permisosLogica, ;
;; <
	protected 
readonly $
ICodigosOperacion_Logica 3#
_codigosOperacionLogica4 K
;K L
	protected 
readonly )
ICrearTransaccion_Repositorio 8!
_crearTranaccionDatos9 N
;N O
	protected 
readonly !
IConcepto_Repositorio 0
_conceptoDatos1 ?
;? @
	protected 
readonly 
IActor_Repositorio -
_actorDatos. 9
;9 :
	protected!! 
readonly!! 0
$ICrearDetalleTransaccion_Repositorio!! ?*
_crearDetallesTransaccionDatos!!@ ^
;!!^ _
	protected"" 
readonly"" 3
'IConsultaDetalleTransaccion_Repositorio"" B-
!_consultaDetallesTransaccionDatos""C d
;""d e
	protected## 
readonly## 3
'IEliminarDetalleTransaccion_Repositorio## B-
!_eliminarDetallesTransaccionDatos##C d
;##d e
public(( #
InventarioActual_Logica(( &
(((& '(
IInventarioActualRepositorio((' C!
inventarioActualDatos((D Y
,((Y Z
IPermisos_Logica(([ k
permiso_logica((l z
,((z {%
ICodigosOperacion_Logica	((| î$
codigosOperacionLogica
((ï ´
,
((´ ¨*
IMaestrosAlmacen_Repositorio
((≠ …"
maestrosAlmacenDatos
((  ﬁ
,
((ﬁ ﬂ+
ICrearTransaccion_Repositorio
((‡ ˝"
crearTranaccionDatos
((˛ í
,
((í ì#
IConcepto_Repositorio
((î ©
conceptoDatos
((™ ∑
,
((∑ ∏ 
IActor_Repositorio
((π À

actorDatos
((Ã ÷
,
((÷ ◊2
$ICrearDetalleTransaccion_Repositorio
((ÿ ¸+
crearDetallesTransaccionDatos
((˝ ö
,
((ö õ5
'IConsultaDetalleTransaccion_Repositorio
((ú √.
 consultaDetallesTransaccionDatos
((ƒ ‰
,
((‰ Â5
'IEliminarDetalleTransaccion_Repositorio
((Ê ç.
 eliminarDetallesTransaccionDatos
((é Æ
)
((Æ Ø
{)) 	"
_inventarioActualDatos** "
=**# $!
inventarioActualDatos**% :
;**: ;
_permisosLogica++ 
=++ 
permiso_logica++ ,
;++, -#
_codigosOperacionLogica,, #
=,,$ %"
codigosOperacionLogica,,& <
;,,< =!
_maestrosAlmacenDatos-- !
=--" # 
maestrosAlmacenDatos--$ 8
;--8 9!
_crearTranaccionDatos.. !
=.." # 
crearTranaccionDatos..$ 8
;..8 9
_conceptoDatos// 
=// 
conceptoDatos// *
;//* +
_actorDatos00 
=00 

actorDatos00 $
;00$ %*
_crearDetallesTransaccionDatos11 *
=11+ ,)
crearDetallesTransaccionDatos11- J
;11J K-
!_consultaDetallesTransaccionDatos22 -
=22. /,
 consultaDetallesTransaccionDatos220 P
;22P Q-
!_eliminarDetallesTransaccionDatos33 -
=33. /,
 eliminarDetallesTransaccionDatos330 P
;33P Q
}44 	
public77 
Transaccion77 #
GenerarInventarioActual77 2
(772 3
int773 6

idEmpleado777 A
,77A B
int77C F
idCentroDeAtencion77G Y
)77Y Z
{88 	
try99 
{:: 
	Operacion;; %
operacionInventarioActual;; 3
=;;4 5
new;;6 9
	Operacion;;: C
(;;C D"
_inventarioActualDatos;;D Z
.;;Z [3
&ObtenerUltimaOperacionInventarioActual	;;[ Å
(
;;Å Ç
)
;;Ç É
)
;;É Ñ
;
;;Ñ Ö
var<< 
fechaActual<< 
=<<  !
DateTimeUtil<<" .
.<<. /
FechaActual<</ :
(<<: ;
)<<; <
;<<< =
Transaccion== 
inventarioFisico== ,
===- .!
CrearInventarioActual==/ D
(==D E%
operacionInventarioActual==E ^
.==^ _
Id==_ a
,==a b%
operacionInventarioActual==c |
.==| }
IdComprobante	==} ä
,
==ä ã

idEmpleado
==å ñ
,
==ñ ó
fechaActual
==ò £
,
==£ §
$str
==• ß
,
==ß ® 
idCentroDeAtencion
==© ª
)
==ª º
;
==º Ω
return>> 
inventarioFisico>> '
;>>' (
}?? 
catch@@ 
(@@ 
	Exception@@ 
e@@ 
)@@ 
{AA 
throwBB 
newBB 
LogicaExceptionBB )
(BB) *
$strBB* X
,BBX Y
eBBZ [
)BB[ \
;BB\ ]
}CC 
}DD 	
publicGG 
TransaccionGG !
CrearInventarioActualGG 0
(GG0 1
longGG1 5'
idOperacionInventarioActualGG6 Q
,GGQ R
longGGS W
idComprobanteGGX e
,GGe f
intGGg j

idEmpleadoGGk u
,GGu v
DateTimeGGw 
fechaRegistro
GGÄ ç
,
GGç é
string
GGè ï
observacion
GGñ °
,
GG° ¢
int
GG£ ¶ 
idCentroDeAtencion
GGß π
)
GGπ ∫
{HH 	
tryII 
{JJ 
varKK 
sufijoCodigoKK  
=KK! "
$strKK# '
;KK' (
varLL 
accionARealizarLL #
=LL$ %
MaestroSettingsLL& 5
.LL5 6
DefaultLL6 =
.LL= >+
IdDetalleMaestroAccionConfirmarLL> ]
;LL] ^
intMM 
idMonedaMM 
=MM 
MaestroSettingsMM .
.MM. /
DefaultMM/ 6
.MM6 7'
IdDetalleMaestroMonedaSolesMM7 R
;MMR S
intNN 
idUnidadNegocioNN #
=NN$ %
MaestroSettingsNN& 5
.NN5 6
DefaultNN6 =
.NN= >6
*IdDetalleMaestroUnidadDeNegocioTransversalNN> h
;NNh i
decimalOO 
tipoDeCambioOO $
=OO% &
$numOO' (
;OO( )
_permisosLogicaQQ 
.QQ  
ValidarAccionQQ  -
(QQ- .

idEmpleadoQQ. 8
,QQ8 9
accionARealizarQQ: I
,QQI J
TransaccionSettingsQQK ^
.QQ^ _
DefaultQQ_ f
.QQf g.
!IdTipoTransaccionInventarioActual	QQg à
,
QQà â
idUnidadNegocio
QQä ô
)
QQô ö
;
QQö õ
stringSS 
codigoSS 
=SS #
_codigosOperacionLogicaSS  7
.SS7 81
%ObtenerSiguienteCodigoParaFacturacionSS8 ]
(SS] ^
sufijoCodigoSS^ j
,SSj k
TransaccionSettingsSSl 
.	SS Ä
Default
SSÄ á
.
SSá à/
!IdTipoTransaccionInventarioActual
SSà ©
)
SS© ™
;
SS™ ´
TransaccionUU 
inventarioFisicoUU ,
=UU- .
newUU/ 2
TransaccionUU3 >
(UU> ?
codigoUU? E
,UUE F'
idOperacionInventarioActualUUG b
,UUb c
fechaRegistroUUd q
,UUq r 
TransaccionSettings	UUs Ü
.
UUÜ á
Default
UUá é
.
UUé è/
!IdTipoTransaccionInventarioActual
UUè ∞
,
UU∞ ±
idUnidadNegocio
UU≤ ¡
,
UU¡ ¬
true
UU√ «
,
UU« »
fechaRegistro
UU… ÷
,
UU÷ ◊
fechaRegistro
UUÿ Â
,
UUÂ Ê
observacion
UUÁ Ú
,
UUÚ Û
fechaRegistro
UUÙ Å
,
UUÅ Ç

idEmpleado
UUÉ ç
,
UUç é
$num
UUè ê
,
UUê ë 
idCentroDeAtencion
UUí §
,
UU§ •
idMoneda
UU¶ Æ
,
UUÆ Ø
tipoDeCambio
UU∞ º
,
UUº Ω
null
UUæ ¬
,
UU¬ √ 
idCentroDeAtencion
UUƒ ÷
)
UU÷ ◊
;
UU◊ ÿ
inventarioFisicoVV  
.VV  !
id_comprobanteVV! /
=VV0 1
idComprobanteVV2 ?
;VV? @
Estado_transaccionWW "
estadoWW# )
=WW* +
newWW, /
Estado_transaccionWW0 B
(WWB C

idEmpleadoWWC M
,WWM N
MaestroSettingsWWO ^
.WW^ _
DefaultWW_ f
.WWf g-
 IdDetalleMaestroEstadoConfirmado	WWg á
,
WWá à
fechaRegistro
WWâ ñ
,
WWñ ó
$str
WWò ’
)
WW’ ÷
;
WW÷ ◊
inventarioFisicoXX  
.XX  !
Estado_transaccionXX! 3
.XX3 4
AddXX4 7
(XX7 8
estadoXX8 >
)XX> ?
;XX? @
returnZZ 
inventarioFisicoZZ '
;ZZ' (
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* L
,__L M
e__N O
)__O P
;__P Q
}`` 
}aa 	
publiccc 
Listcc 
<cc 
Detalle_transaccioncc '
>cc' (4
(ResolverYCrearDetallesDeInventarioActualcc) Q
(ccQ R
intccR U
idCentroDeAtencionccV h
)cch i
{dd 	
tryee 
{ff 
Listgg 
<gg 
Detalle_transacciongg (
>gg( )
detallesgg* 2
=gg3 4
newgg5 8
Listgg9 =
<gg= >
Detalle_transacciongg> Q
>ggQ R
(ggR S
)ggS T
;ggT U
Listii 
<ii 
Detalle_transaccionii (
>ii( )$
detallesInventarioFisicoii* B
=iiC D"
_inventarioActualDatosiiE [
.ii[ \E
8ObtenerDetallesInventarioActualIncluyendoConceptoNegocio	ii\ î
(
iiî ï 
idCentroDeAtencion
iiï ß
)
iiß ®
.
ii® ©
ToList
ii© Ø
(
iiØ ∞
)
ii∞ ±
;
ii± ≤
varkk $
conceptosDeNegocioActualkk ,
=kk- .!
_maestrosAlmacenDatoskk/ D
.kkD E*
ObtenerIdsConceptosComercialeskkE c
(kkc d
)kkd e
;kke f
Listll 
<ll 
intll 
>ll 
idConceptosAAgregarll -
=ll. /$
detallesInventarioFisicoll0 H
!=llI K
nullllL P
?llQ R$
conceptosDeNegocioActualllS k
.llk l
Exceptlll r
(llr s%
detallesInventarioFisico	lls ã
.
llã å
Select
llå í
(
llí ì
dt
llì ï
=>
llñ ò
dt
llô õ
.
llõ ú!
id_concepto_negocio
llú Ø
)
llØ ∞
)
ll∞ ±
.
ll± ≤
ToList
ll≤ ∏
(
ll∏ π
)
llπ ∫
:
llª º&
conceptosDeNegocioActual
llΩ ’
.
ll’ ÷
ToList
ll÷ ‹
(
ll‹ ›
)
ll› ﬁ
;
llﬁ ﬂ
foreachoo 
(oo 
varoo 

idConceptooo '
inoo( *
idConceptosAAgregaroo+ >
)oo> ?
{pp 
detallesqq 
.qq 
Addqq  
(qq  !
newqq! $
Detalle_transaccionqq% 8
(qq8 9
$numqq9 :
,qq: ;

idConceptoqq< F
,qqF G
$strqqH [
,qq[ \
$numqq] _
,qq_ `
$numqqa c
,qqc d
nullqqe i
,qqi j
$numqqk l
,qql m
nullqqn r
,qqr s
nullqqt x
,qqx y
$numqqz |
,qq| }
$num	qq~ Ä
,
qqÄ Å
$num
qqÇ Ñ
)
qqÑ Ö
)
qqÖ Ü
;
qqÜ á
}rr 
returnss 
detallesss 
;ss  
}tt 
catchuu 
(uu 
	Exceptionuu 
)uu 
{vv 
throwww 
newww 
LogicaExceptionww )
(ww) *
$strww* c
)wwc d
;wwd e
}xx 
}yy 	
public|| 
List|| 
<|| 
InventarioFisico|| $
>||$ %&
InventariosFisicosActuales||& @
(||@ A
List||A E
<||E F
ItemGenericoBase||F V
>||V W
	almacenes||X a
,||a b
bool||c g
todasLasFamilias||h x
,||x y
int||z }
[||} ~
]||~ 
idsFamilias
||Ä ã
)
||ã å
{}} 	
try~~ 
{ 
var
ÄÄ 
idsAlmacenes
ÄÄ  
=
ÄÄ! "
	almacenes
ÄÄ# ,
.
ÄÄ, -
Select
ÄÄ- 3
(
ÄÄ3 4
a
ÄÄ4 5
=>
ÄÄ6 8
a
ÄÄ9 :
.
ÄÄ: ;
Id
ÄÄ; =
)
ÄÄ= >
.
ÄÄ> ?
ToArray
ÄÄ? F
(
ÄÄF G
)
ÄÄG H
;
ÄÄH I
idsFamilias
ÅÅ 
=
ÅÅ 
todasLasFamilias
ÅÅ .
?
ÅÅ/ 0#
_maestrosAlmacenDatos
ÅÅ1 F
.
ÅÅF G#
ObtenerFamiliasBienes
ÅÅG \
(
ÅÅ\ ]
)
ÅÅ] ^
.
ÅÅ^ _
Select
ÅÅ_ e
(
ÅÅe f
f
ÅÅf g
=>
ÅÅh j
f
ÅÅk l
.
ÅÅl m
Id
ÅÅm o
)
ÅÅo p
.
ÅÅp q
ToArray
ÅÅq x
(
ÅÅx y
)
ÅÅy z
:
ÅÅ{ |
idsFamiliasÅÅ} à
;ÅÅà â
var
ÇÇ 
inventarios
ÇÇ 
=
ÇÇ  !$
_inventarioActualDatos
ÇÇ" 8
.
ÇÇ8 9/
!ObtenerInventariosFisicosActuales
ÇÇ9 Z
(
ÇÇZ [
idsAlmacenes
ÇÇ[ g
,
ÇÇg h
idsFamilias
ÇÇi t
)
ÇÇt u
.
ÇÇu v
ToList
ÇÇv |
(
ÇÇ| }
)
ÇÇ} ~
;
ÇÇ~ 
inventarios
ÑÑ 
.
ÑÑ 
ForEach
ÑÑ #
(
ÑÑ# $
i
ÑÑ$ %
=>
ÑÑ& (
i
ÑÑ) *
.
ÑÑ* +
NombreAlmacen
ÑÑ+ 8
=
ÑÑ9 :
	almacenes
ÑÑ; D
.
ÑÑD E
Single
ÑÑE K
(
ÑÑK L
a
ÑÑL M
=>
ÑÑN P
a
ÑÑQ R
.
ÑÑR S
Id
ÑÑS U
==
ÑÑV X
i
ÑÑY Z
.
ÑÑZ [
	IdAlmacen
ÑÑ[ d
)
ÑÑd e
.
ÑÑe f
Nombre
ÑÑf l
)
ÑÑl m
;
ÑÑm n
return
ÖÖ 
inventarios
ÖÖ "
;
ÖÖ" #
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
new
ââ 
LogicaException
ââ )
(
ââ) *
$str
ââ* W
,
ââW X
e
ââY Z
)
ââZ [
;
ââ[ \
}
ää 
}
åå 	
public
éé 
List
éé 
<
éé  
InventarioSemaforo
éé &
>
éé& ')
InventariosSemaforoActuales
éé( C
(
ééC D
List
ééD H
<
ééH I
ItemGenericoBase
ééI Y
>
ééY Z
	almacenes
éé[ d
,
ééd e
bool
ééf j
todasLasFamilias
éék {
,
éé{ |
intéé} Ä
[ééÄ Å
]ééÅ Ç
idsFamiliasééÉ é
,ééé è
boolééê î

estadoBajoééï ü
,ééü †
booléé° •
estadoNormaléé¶ ≤
,éé≤ ≥
booléé¥ ∏

estadoAltoééπ √
)éé√ ƒ
{
èè 	
try
êê 
{
ëë 
var
íí 
idsAlmacenes
íí  
=
íí! "
	almacenes
íí# ,
.
íí, -
Select
íí- 3
(
íí3 4
a
íí4 5
=>
íí6 8
a
íí9 :
.
íí: ;
Id
íí; =
)
íí= >
.
íí> ?
ToArray
íí? F
(
ííF G
)
ííG H
;
ííH I
List
ìì 
<
ìì 
int
ìì 
>
ìì 
nivelesRequeridos
ìì +
=
ìì, -
new
ìì. 1
List
ìì2 6
<
ìì6 7
int
ìì7 :
>
ìì: ;
(
ìì; <
)
ìì< =
;
ìì= >
nivelesRequeridos
îî !
.
îî! "
Add
îî" %
(
îî% &
(
îî& '
int
îî' *
)
îî* +$
NivelStockSemaforoEnum
îî+ A
.
îîA B
Indeterminado
îîB O
)
îîO P
;
îîP Q
if
ïï 
(
ïï 

estadoAlto
ïï 
)
ïï 
nivelesRequeridos
ïï  1
.
ïï1 2
Add
ïï2 5
(
ïï5 6
(
ïï6 7
int
ïï7 :
)
ïï: ;$
NivelStockSemaforoEnum
ïï; Q
.
ïïQ R
Alto
ïïR V
)
ïïV W
;
ïïW X
if
ññ 
(
ññ 

estadoBajo
ññ 
)
ññ 
nivelesRequeridos
ññ  1
.
ññ1 2
Add
ññ2 5
(
ññ5 6
(
ññ6 7
int
ññ7 :
)
ññ: ;$
NivelStockSemaforoEnum
ññ; Q
.
ññQ R
Bajo
ññR V
)
ññV W
;
ññW X
if
óó 
(
óó 
estadoNormal
óó  
)
óó  !
nivelesRequeridos
óó" 3
.
óó3 4
Add
óó4 7
(
óó7 8
(
óó8 9
int
óó9 <
)
óó< =$
NivelStockSemaforoEnum
óó= S
.
óóS T
Normal
óóT Z
)
óóZ [
;
óó[ \
idsFamilias
òò 
=
òò 
todasLasFamilias
òò .
?
òò/ 0#
_maestrosAlmacenDatos
òò1 F
.
òòF G#
ObtenerFamiliasBienes
òòG \
(
òò\ ]
)
òò] ^
.
òò^ _
Select
òò_ e
(
òòe f
f
òòf g
=>
òòh j
f
òòk l
.
òòl m
Id
òòm o
)
òòo p
.
òòp q
ToArray
òòq x
(
òòx y
)
òòy z
:
òò{ |
idsFamiliasòò} à
;òòà â
var
ôô 
inventarios
ôô 
=
ôô  !$
_inventarioActualDatos
ôô" 8
.
ôô8 90
"ObtenerInventariosSemaforoActuales
ôô9 [
(
ôô[ \
idsAlmacenes
ôô\ h
,
ôôh i
idsFamilias
ôôj u
)
ôôu v
.
ôôv w
ToList
ôôw }
(
ôô} ~
)
ôô~ 
;ôô Ä
inventarios
õõ 
=
õõ 
inventarios
õõ )
.
õõ) *
Where
õõ* /
(
õõ/ 0
i
õõ0 1
=>
õõ2 4
nivelesRequeridos
õõ5 F
.
õõF G
Contains
õõG O
(
õõO P
i
õõP Q
.
õõQ R
ValorSemaforoInt
õõR b
)
õõb c
)
õõc d
.
õõd e
OrderBy
õõe l
(
õõl m
i
õõm n
=>
õõo q
i
õõr s
.
õõs t
Concepto
õõt |
)
õõ| }
.
õõ} ~
ToListõõ~ Ñ
(õõÑ Ö
)õõÖ Ü
;õõÜ á
inventarios
úú 
.
úú 
ForEach
úú #
(
úú# $
i
úú$ %
=>
úú& (
i
úú) *
.
úú* +
NombreAlmacen
úú+ 8
=
úú9 :
	almacenes
úú; D
.
úúD E
Single
úúE K
(
úúK L
a
úúL M
=>
úúN P
a
úúQ R
.
úúR S
Id
úúS U
==
úúV X
i
úúY Z
.
úúZ [
	IdAlmacen
úú[ d
)
úúd e
.
úúe f
Nombre
úúf l
)
úúl m
;
úúm n
return
ùù 
inventarios
ùù "
;
ùù" #
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* e
,
°°e f
e
°°g h
)
°°h i
;
°°i j
}
¢¢ 
}
££ 	
public
§§ 
List
§§ 
<
§§ "
InventarioValorizado
§§ (
>
§§( ),
InventariosValorizadosActuales
§§* H
(
§§H I
List
§§I M
<
§§M N
ItemGenericoBase
§§N ^
>
§§^ _
	almacenes
§§` i
,
§§i j
bool
§§k o
todasLasFamilias§§p Ä
,§§Ä Å
int§§Ç Ö
[§§Ö Ü
]§§Ü á
idsFamilias§§à ì
)§§ì î
{
•• 	
try
¶¶ 
{
ßß 
var
®® 
idsAlmacenes
®®  
=
®®! "
	almacenes
®®# ,
.
®®, -
Select
®®- 3
(
®®3 4
a
®®4 5
=>
®®6 8
a
®®9 :
.
®®: ;
Id
®®; =
)
®®= >
.
®®> ?
ToArray
®®? F
(
®®F G
)
®®G H
;
®®H I
List
©© 
<
©© 
int
©© 
>
©© 
nivelesRequeridos
©© +
=
©©, -
new
©©. 1
List
©©2 6
<
©©6 7
int
©©7 :
>
©©: ;
(
©©; <
)
©©< =
;
©©= >
idsFamilias
™™ 
=
™™ 
todasLasFamilias
™™ .
?
™™/ 0#
_maestrosAlmacenDatos
™™1 F
.
™™F G#
ObtenerFamiliasBienes
™™G \
(
™™\ ]
)
™™] ^
.
™™^ _
Select
™™_ e
(
™™e f
f
™™f g
=>
™™h j
f
™™k l
.
™™l m
Id
™™m o
)
™™o p
.
™™p q
ToArray
™™q x
(
™™x y
)
™™y z
:
™™{ |
idsFamilias™™} à
;™™à â
var
´´ 
inventarios
´´ 
=
´´  !$
_inventarioActualDatos
´´" 8
.
´´8 93
%ObtenerInventariosValorizadosActuales
´´9 ^
(
´´^ _
idsAlmacenes
´´_ k
,
´´k l
idsFamilias
´´m x
)
´´x y
.
´´y z
ToList´´z Ä
(´´Ä Å
)´´Å Ç
;´´Ç É
inventarios
≠≠ 
.
≠≠ 
ForEach
≠≠ #
(
≠≠# $
i
≠≠$ %
=>
≠≠& (
i
≠≠) *
.
≠≠* +
NombreAlmacen
≠≠+ 8
=
≠≠9 :
	almacenes
≠≠; D
.
≠≠D E
Single
≠≠E K
(
≠≠K L
a
≠≠L M
=>
≠≠N P
a
≠≠Q R
.
≠≠R S
Id
≠≠S U
==
≠≠V X
i
≠≠Y Z
.
≠≠Z [
	IdAlmacen
≠≠[ d
)
≠≠d e
.
≠≠e f
Nombre
≠≠f l
)
≠≠l m
;
≠≠m n
return
ÆÆ 
inventarios
ÆÆ "
;
ÆÆ" #
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
e
∞∞ 
)
∞∞ 
{
±± 
throw
≤≤ 
new
≤≤ 
LogicaException
≤≤ )
(
≤≤) *
$str
≤≤* Z
,
≤≤Z [
e
≤≤\ ]
)
≤≤] ^
;
≤≤^ _
}
≥≥ 
}
¥¥ 	
public
∂∂ 
List
∂∂ 
<
∂∂ +
Reporte_Inventario_Valorizado
∂∂ 1
>
∂∂1 2/
!ObtenerInventarioValorizadoActual
∂∂3 T
(
∂∂T U
int
∂∂U X
	idAlmacen
∂∂Y b
,
∂∂b c
int
∂∂d g%
idCentroAtencionPrecios
∂∂h 
,∂∂ Ä
int∂∂Å Ñ
[∂∂Ñ Ö
]∂∂Ö Ü#
idsConceptosBasicos∂∂á ö
,∂∂ö õ
int∂∂ú ü
[∂∂ü †
]∂∂† °+
idsValoresDeCaracteristicas∂∂¢ Ω
)∂∂Ω æ
{
∑∑ 	
try
∏∏ 
{
∫∫ 
if
ªª 
(
ªª !
idsConceptosBasicos
ªª '
.
ªª' (
Length
ªª( .
==
ªª/ 1
$num
ªª2 3
&&
ªª4 6)
idsValoresDeCaracteristicas
ªª7 R
.
ªªR S
Length
ªªS Y
==
ªªZ \
$num
ªª] ^
)
ªª^ _
{
ºº 
return
ΩΩ $
_inventarioActualDatos
ΩΩ 1
.
ΩΩ1 2%
ObtenerInventarioActual
ΩΩ2 I
(
ΩΩI J
	idAlmacen
ΩΩJ S
,
ΩΩS T%
idCentroAtencionPrecios
ΩΩU l
)
ΩΩl m
.
ΩΩm n
ToList
ΩΩn t
(
ΩΩt u
)
ΩΩu v
;
ΩΩv w
}
ææ 
if
¿¿ 
(
¿¿ !
idsConceptosBasicos
¿¿ '
.
¿¿' (
Length
¿¿( .
>
¿¿/ 0
$num
¿¿1 2
&&
¿¿3 5)
idsValoresDeCaracteristicas
¿¿6 Q
.
¿¿Q R
Length
¿¿R X
>
¿¿Y Z
$num
¿¿[ \
)
¿¿\ ]
{
¡¡ 
return
¬¬ $
_inventarioActualDatos
¬¬ 1
.
¬¬1 2@
2ObtenerInventarioActualPorCaracteristicasYFamilias
¬¬2 d
(
¬¬d e
	idAlmacen
¬¬e n
,
¬¬n o&
idCentroAtencionPrecios¬¬p á
,¬¬á à+
idsValoresDeCaracteristicas¬¬â §
,¬¬§ •#
idsConceptosBasicos¬¬¶ π
)¬¬π ∫
.¬¬∫ ª
ToList¬¬ª ¡
(¬¬¡ ¬
)¬¬¬ √
;¬¬√ ƒ
}
√√ 
if
≈≈ 
(
≈≈ !
idsConceptosBasicos
≈≈ '
.
≈≈' (
Length
≈≈( .
>
≈≈/ 0
$num
≈≈1 2
&&
≈≈3 5)
idsValoresDeCaracteristicas
≈≈6 Q
.
≈≈Q R
Length
≈≈R X
==
≈≈Y [
$num
≈≈\ ]
)
≈≈] ^
{
∆∆ 
return
«« $
_inventarioActualDatos
«« 1
.
««1 20
"ObtenerInventarioActualPorFamilias
««2 T
(
««T U
	idAlmacen
««U ^
,
««^ _%
idCentroAtencionPrecios
««` w
,
««w x"
idsConceptosBasicos««y å
)««å ç
.««ç é
ToList««é î
(««î ï
)««ï ñ
;««ñ ó
}
»» 
if
ÀÀ 
(
ÀÀ !
idsConceptosBasicos
ÀÀ '
.
ÀÀ' (
Length
ÀÀ( .
==
ÀÀ/ 1
$num
ÀÀ2 3
&&
ÀÀ4 6)
idsValoresDeCaracteristicas
ÀÀ7 R
.
ÀÀR S
Length
ÀÀS Y
>
ÀÀZ [
$num
ÀÀ\ ]
)
ÀÀ] ^
{
ÃÃ 
return
ÕÕ $
_inventarioActualDatos
ÕÕ 1
.
ÕÕ1 27
)ObtenerInventarioActualPorCaracteristicas
ÕÕ2 [
(
ÕÕ[ \
	idAlmacen
ÕÕ\ e
,
ÕÕe f%
idCentroAtencionPrecios
ÕÕg ~
,
ÕÕ~ +
idsValoresDeCaracteristicasÕÕÄ õ
)ÕÕõ ú
.ÕÕú ù
ToListÕÕù £
(ÕÕ£ §
)ÕÕ§ •
;ÕÕ• ¶
}
ŒŒ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* d
)
––d e
;
––e f
}
““ 
catch
”” 
(
”” 
	Exception
”” 
e
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ 
LogicaException
’’ )
(
’’) *
$str
’’* R
,
’’R S
e
’’T U
)
’’U V
;
’’V W
}
÷÷ 
}
◊◊ 	
public
ŸŸ 
OperationResult
ŸŸ #
CrearInventarioActual
ŸŸ 4
(
ŸŸ4 5
int
ŸŸ5 8
	idAlmacen
ŸŸ9 B
,
ŸŸB C
int
ŸŸD G

idEmpleado
ŸŸH R
)
ŸŸR S
{
⁄⁄ 	
List
€€ 
<
€€ !
Detalle_transaccion
€€ $
>
€€$ %
detalles
€€& .
;
€€. /
OperationResult
‹‹ $
resultInventarioFisico
‹‹ 2
=
‹‹3 4
null
‹‹5 9
;
‹‹9 :
detalles
ﬁﬁ 
=
ﬁﬁ 6
(ResolverYCrearDetallesDeInventarioActual
ﬁﬁ ?
(
ﬁﬁ? @
	idAlmacen
ﬁﬁ@ I
)
ﬁﬁI J
;
ﬁﬁJ K
if
ﬂﬂ 
(
ﬂﬂ 
detalles
ﬂﬂ 
.
ﬂﬂ 
Count
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
>
ﬂﬂ! "
$num
ﬂﬂ# $
)
ﬂﬂ$ %
{
‡‡ 
Transaccion
·· 
inventarioFisico
·· ,
=
··- .%
GenerarInventarioActual
··/ F
(
··F G

idEmpleado
··G Q
,
··Q R
	idAlmacen
··S \
)
··\ ]
;
··] ^$
resultInventarioFisico
‚‚ &
=
‚‚' (#
_crearTranaccionDatos
‚‚) >
.
‚‚> ?8
*CrearTransaccionYDetallesTransaccionMasivo
‚‚? i
(
‚‚i j
inventarioFisico
‚‚j z
,
‚‚z {
detalles‚‚| Ñ
)‚‚Ñ Ö
;‚‚Ö Ü
}
„„ 
return
‰‰ $
resultInventarioFisico
‰‰ )
;
‰‰) *
}
ÂÂ 	
public
ÁÁ 
OperationResult
ÁÁ S
ECrearDetallesInventariosActualesDeConceptosDeNegocioDelConceptoBasico
ÁÁ d
(
ÁÁd e
int
ÁÁe h
	idFamilia
ÁÁi r
)
ÁÁr s
{
ËË 	
List
ÈÈ 
<
ÈÈ !
Detalle_transaccion
ÈÈ $
>
ÈÈ$ %
detalles
ÈÈ& .
=
ÈÈ/ 0
new
ÈÈ1 4
List
ÈÈ5 9
<
ÈÈ9 :!
Detalle_transaccion
ÈÈ: M
>
ÈÈM N
(
ÈÈN O
)
ÈÈO P
;
ÈÈP Q
List
ÎÎ 
<
ÎÎ 
int
ÎÎ 
>
ÎÎ 
idsConceptos
ÎÎ "
=
ÎÎ# $
_conceptoDatos
ÎÎ% 3
.
ÎÎ3 43
%ObtenerConceptosComercialesPorFamilia
ÎÎ4 Y
(
ÎÎY Z
	idFamilia
ÎÎZ c
)
ÎÎc d
.
ÎÎd e
Select
ÎÎe k
(
ÎÎk l
c
ÎÎl m
=>
ÎÎn p
c
ÎÎq r
.
ÎÎr s
id
ÎÎs u
)
ÎÎu v
.
ÎÎv w
ToList
ÎÎw }
(
ÎÎ} ~
)
ÎÎ~ 
;ÎÎ Ä

Dictionary
ÌÌ 
<
ÌÌ 
long
ÌÌ 
,
ÌÌ 
long
ÌÌ !
>
ÌÌ! "+
idsAlmacenIdsInventarioFisico
ÌÌ# @
=
ÌÌA B$
_inventarioActualDatos
ÌÌC Y
.
ÌÌY Z2
$ObtenerIdsInventarioActualPorAlmacen
ÌÌZ ~
(
ÌÌ~ 
)ÌÌ Ä
;ÌÌÄ Å
List
ÔÔ 
<
ÔÔ 
int
ÔÔ 
>
ÔÔ 
idsAlmacenes
ÔÔ "
=
ÔÔ# $
_actorDatos
ÔÔ% 0
.
ÔÔ0 16
(ObtenerIdsActorDeNegocioVigentePrincipal
ÔÔ1 Y
(
ÔÔY Z
ActorSettings
ÔÔZ g
.
ÔÔg h
Default
ÔÔh o
.
ÔÔo p"
IdRolEntidadInternaÔÔp É
,ÔÔÉ Ñ
ActorSettingsÔÔÖ í
.ÔÔí ì
DefaultÔÔì ö
.ÔÔö õ
IdRolAlmacenÔÔõ ß
)ÔÔß ®
.ÔÔ® ©
ToListÔÔ© Ø
(ÔÔØ ∞
)ÔÔ∞ ±
;ÔÔ± ≤
foreach
 
(
 
var
 
	idAlmacen
 "
in
# %
idsAlmacenes
& 2
)
2 3
{
ÒÒ 
List
ÛÛ 
<
ÛÛ !
Detalle_transaccion
ÛÛ (
>
ÛÛ( )"
detallesDeInventario
ÛÛ* >
=
ÛÛ? @/
!_consultaDetallesTransaccionDatos
ÛÛA b
.
ÛÛb c'
ObtenerDetalleTransaccion
ÛÛc |
(
ÛÛ| }
	idAlmacenÛÛ} Ü
,ÛÛÜ á#
TransaccionSettingsÛÛà õ
.ÛÛõ ú
DefaultÛÛú £
.ÛÛ£ §1
!IdTipoTransaccionInventarioActualÛÛ§ ≈
,ÛÛ≈ ∆
MaestroSettingsÛÛ« ÷
.ÛÛ÷ ◊
DefaultÛÛ◊ ﬁ
.ÛÛﬁ ﬂ0
 IdDetalleMaestroEstadoConfirmadoÛÛﬂ ˇ
,ÛÛˇ Ä
idsConceptosÛÛÅ ç
.ÛÛç é
ToArrayÛÛé ï
(ÛÛï ñ
)ÛÛñ ó
)ÛÛó ò
.ÛÛò ô
ToListÛÛô ü
(ÛÛü †
)ÛÛ† °
;ÛÛ° ¢
List
ıı 
<
ıı 
int
ıı 
>
ıı !
idConceptosAAgregar
ıı -
=
ıı. /"
detallesDeInventario
ıı0 D
!=
ııE G
null
ııH L
?
ııM N
idsConceptos
ııO [
.
ıı[ \
Except
ıı\ b
(
ııb c"
detallesDeInventario
ııc w
.
ııw x
Select
ııx ~
(
ıı~ 
eıı Ä
=>ııÅ É
eııÑ Ö
.ııÖ Ü#
id_concepto_negocioııÜ ô
)ııô ö
)ııö õ
.ııõ ú
ToListııú ¢
(ıı¢ £
)ıı£ §
:ıı• ¶
idsConceptosııß ≥
.ıı≥ ¥
ToListıı¥ ∫
(ıı∫ ª
)ııª º
;ııº Ω
foreach
ˆˆ 
(
ˆˆ 
var
ˆˆ  
idConceptoAAgregar
ˆˆ /
in
ˆˆ0 2!
idConceptosAAgregar
ˆˆ3 F
)
ˆˆF G
{
˜˜ 
detalles
¯¯ 
.
¯¯ 
Add
¯¯  
(
¯¯  !
new
¯¯! $!
Detalle_transaccion
¯¯% 8
(
¯¯8 9+
idsAlmacenIdsInventarioFisico
¯¯9 V
.
¯¯V W
Single
¯¯W ]
(
¯¯] ^
i
¯¯^ _
=>
¯¯` b
i
¯¯c d
.
¯¯d e
Key
¯¯e h
==
¯¯i k
	idAlmacen
¯¯l u
)
¯¯u v
.
¯¯v w
Value
¯¯w |
,
¯¯| }
$num
¯¯~ 
,¯¯ Ä"
idConceptoAAgregar¯¯Å ì
,¯¯ì î
$str¯¯ï ®
,¯¯® ©
$num¯¯™ ¨
,¯¯¨ ≠
$num¯¯Æ ∞
,¯¯∞ ±
null¯¯≤ ∂
,¯¯∂ ∑
$num¯¯∏ ∫
,¯¯∫ ª
$num¯¯º Ω
,¯¯Ω æ
null¯¯ø √
,¯¯√ ƒ
$num¯¯≈ «
,¯¯« »
$num¯¯… À
,¯¯À Ã
$num¯¯Õ œ
)¯¯œ –
)¯¯– —
;¯¯— “
}
˘˘ 
}
˙˙ 
return
˚˚ ,
_crearDetallesTransaccionDatos
˚˚ 1
.
˚˚1 2.
 CrearDetallesDeTransaccionMasivo
˚˚2 R
(
˚˚R S
detalles
˚˚S [
)
˚˚[ \
;
˚˚\ ]
}
¸¸ 	
public
˛˛ 
OperationResult
˛˛ V
HEliminarDetallesInventariosActualesDeConceptosDeNegocioDelConceptoBasico
˛˛ g
(
˛˛g h
int
˛˛h k
	idFamilia
˛˛l u
)
˛˛u v
{
ˇˇ 	
List
ÄÄ 
<
ÄÄ !
Detalle_transaccion
ÄÄ $
>
ÄÄ$ %
detalles
ÄÄ& .
=
ÄÄ/ 0
new
ÄÄ1 4
List
ÄÄ5 9
<
ÄÄ9 :!
Detalle_transaccion
ÄÄ: M
>
ÄÄM N
(
ÄÄN O
)
ÄÄO P
;
ÄÄP Q
List
ÇÇ 
<
ÇÇ 
int
ÇÇ 
>
ÇÇ 
idsConceptos
ÇÇ "
=
ÇÇ# $
_conceptoDatos
ÇÇ% 3
.
ÇÇ3 43
%ObtenerConceptosComercialesPorFamilia
ÇÇ4 Y
(
ÇÇY Z
	idFamilia
ÇÇZ c
)
ÇÇc d
.
ÇÇd e
Select
ÇÇe k
(
ÇÇk l
c
ÇÇl m
=>
ÇÇn p
c
ÇÇq r
.
ÇÇr s
id
ÇÇs u
)
ÇÇu v
.
ÇÇv w
ToList
ÇÇw }
(
ÇÇ} ~
)
ÇÇ~ 
;ÇÇ Ä
List
ÑÑ 
<
ÑÑ 
int
ÑÑ 
>
ÑÑ 
idsAlmacenes
ÑÑ "
=
ÑÑ# $
_actorDatos
ÑÑ% 0
.
ÑÑ0 16
(ObtenerIdsActorDeNegocioVigentePrincipal
ÑÑ1 Y
(
ÑÑY Z
ActorSettings
ÑÑZ g
.
ÑÑg h
Default
ÑÑh o
.
ÑÑo p"
IdRolEntidadInternaÑÑp É
,ÑÑÉ Ñ
ActorSettingsÑÑÖ í
.ÑÑí ì
DefaultÑÑì ö
.ÑÑö õ
IdRolAlmacenÑÑõ ß
)ÑÑß ®
.ÑÑ® ©
ToListÑÑ© Ø
(ÑÑØ ∞
)ÑÑ∞ ±
;ÑÑ± ≤
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
	idAlmacen
ÖÖ "
in
ÖÖ# %
idsAlmacenes
ÖÖ& 2
)
ÖÖ2 3
{
ÜÜ 
List
àà 
<
àà !
Detalle_transaccion
àà (
>
àà( )"
detallesDeInventario
àà* >
=
àà? @/
!_consultaDetallesTransaccionDatos
ààA b
.
ààb c'
ObtenerDetalleTransaccion
ààc |
(
àà| }
	idAlmacenàà} Ü
,ààÜ á#
TransaccionSettingsààà õ
.ààõ ú
Defaultààú £
.àà£ §1
!IdTipoTransaccionInventarioActualàà§ ≈
,àà≈ ∆
MaestroSettingsàà« ÷
.àà÷ ◊
Defaultàà◊ ﬁ
.ààﬁ ﬂ0
 IdDetalleMaestroEstadoConfirmadoààﬂ ˇ
,ààˇ Ä
idsConceptosààÅ ç
.ààç é
ToArrayààé ï
(ààï ñ
)ààñ ó
)ààó ò
.ààò ô
ToListààô ü
(ààü †
)àà† °
;àà° ¢
detalles
ää 
.
ää 
AddRange
ää !
(
ää! ""
detallesDeInventario
ää" 6
)
ää6 7
;
ää7 8
}
ãã 
return
åå /
!_eliminarDetallesTransaccionDatos
åå 4
.
åå4 51
#EliminarDetallesDeTransaccionMasivo
åå5 X
(
ååX Y
detalles
ååY a
)
ååa b
;
ååb c
}
çç 	
public
èè 

Dictionary
èè 
<
èè 
long
èè 
,
èè 
long
èè  $
>
èè$ %2
$ObtenerIdsAlmacenIdsInventarioActual
èè& J
(
èèJ K
)
èèK L
{
êê 	
try
ëë 
{
íí 
return
ìì $
_inventarioActualDatos
ìì -
.
ìì- .2
$ObtenerIdsInventarioActualPorAlmacen
ìì. R
(
ììR S
)
ììS T
;
ììT U
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
e
ïï 
)
ïï 
{
ññ 
throw
óó 
new
óó 
LogicaException
óó )
(
óó) *
$str
óó* j
,
óój k
e
óól m
)
óóm n
;
óón o
}
òò 
}
ôô 	
}
õõ 
}úú ó«
VD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Almacen\InventarioHistorico_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Almacen# *
{ 
public 

class &
InventarioHistorico_Logica +
:+ ,'
IInventarioHistorico_Logica- H
{ 
	protected 
readonly "
IInventarioRepositorio 1"
_almacenReportingDatos2 H
;H I
	protected 
readonly ,
 IInventarioHistorico_Repositorio ;%
_inventarioHistoricoDatos< U
;U V
	protected 
readonly $
IMovimientos_Repositorio 3
_movimientosDatos4 E
;E F
	protected 
readonly !
IConcepto_Repositorio 0
_conceptoDatos1 ?
;? @
	protected 
readonly ,
 IConsultaTransaccion_Repositorio ;%
_consultaTransaccionDatos< U
;U V
	protected 
readonly (
IMaestrosAlmacen_Repositorio 7!
_maestrosAlmacenDatos8 M
;M N
	protected 
readonly )
ICrearTransaccion_Repositorio 8"
_crearTransaccionDatos9 O
;O P
public &
InventarioHistorico_Logica )
() *"
IInventarioRepositorio* @!
almacenReportingDatosA V
,V W,
 IInventarioHistorico_RepositorioX x%
inventarioHistoricoDatos	y ë
,
ë í&
IMovimientos_Repositorio
ì ´
movimientosDatos
¨ º
,
º Ω#
IConcepto_Repositorio
æ ”
conceptoDatos
‘ ·
,
· ‚.
 IConsultaTransaccion_Repositorio
„ É&
consultaTransaccionDatos
Ñ ú
,
ú ù*
IMaestrosAlmacen_Repositorio
û ∫"
maestrosAlmacenDatos
ª œ
,
œ –+
ICrearTransaccion_Repositorio
— Ó#
crearTransaccionDatos
Ô Ñ
)
Ñ Ö
{ 	"
_almacenReportingDatos   "
=  # $!
almacenReportingDatos  % :
;  : ;%
_inventarioHistoricoDatos!! %
=!!& '$
inventarioHistoricoDatos!!( @
;!!@ A
_movimientosDatos"" 
="" 
movimientosDatos""  0
;""0 1
_conceptoDatos## 
=## 
conceptoDatos## *
;##* +%
_consultaTransaccionDatos$$ %
=$$& '$
consultaTransaccionDatos$$( @
;$$@ A!
_maestrosAlmacenDatos%% !
=%%" # 
maestrosAlmacenDatos%%$ 8
;%%8 9"
_crearTransaccionDatos&& "
=&&# $!
crearTransaccionDatos&&% :
;&&: ;
}'' 	
public(( 
OperationResult(( &
CrearInventariosLogicosHoy(( 9
(((9 :
int((: =

idEmpleado((> H
)((H I
{)) 	
DateTime** 
fechaActual**  
=**! "
DateTimeUtil**# /
.**/ 0
FechaActual**0 ;
(**; <
)**< =
;**= >
return++ 
CrearInventarios++ #
(++# $

idEmpleado++$ .
,++. /
fechaActual++0 ;
)++; <
;++< =
}-- 	
public// 
OperationResult// 
CrearInventarios// /
(/// 0
int//0 3

idEmpleado//4 >
,//> ?
DateTime//@ H
fecha//I N
)//N O
{00 	
try11 
{22 
var33 
nuevosInventarios33 %
=33& '
GenerarInventarios33( :
(33: ;

idEmpleado33; E
,33E F
fecha33G L
)33L M
;33M N
if44 
(44 
nuevosInventarios44 %
.44% &
Count44& +
(44+ ,
)44, -
>44. /
$num440 1
)441 2
{55 
return66 "
_crearTransaccionDatos66 1
.661 28
,CrearTransaccionesYDetallesTransaccionMasivo662 ^
(66^ _
nuevosInventarios66_ p
)66p q
;66q r
}77 
throw88 
new88 
LogicaException88 )
(88) *
$str	88* Ö
)
88Ö Ü
;
88Ü á
}99 
catch:: 
(:: 
	Exception:: 
e:: 
):: 
{;; 
throw<< 
new<< 
LogicaException<< )
(<<) *
$str<<* Q
,<<Q R
e<<S T
)<<T U
;<<U V
}== 
}>> 	
public@@ 
OperationResult@@ 
CrearInventario@@ .
(@@. /
int@@/ 2

idEmpleado@@3 =
,@@= >
int@@? B
	idAlmacen@@C L
,@@L M
DateTime@@N V
fecha@@W \
)@@\ ]
{AA 	
tryBB 
{CC 
varDD 
nuevoInventarioDD #
=DD$ %
GenerarInventarioDD& 7
(DD7 8
	idAlmacenDD8 A
,DDA B

idEmpleadoDDC M
,DDM N
fechaDDO T
)DDT U
;DDU V
varFF 
	resultadoFF 
=FF "
_crearTransaccionDatosFF  6
.FF6 78
,CrearTransaccionesYDetallesTransaccionMasivoFF7 c
(FFc d
newFFd g
ListFFh l
<FFl m
TransaccionFFm x
>FFx y
(FFy z
)FFz {
{FF| }
nuevoInventario	FF~ ç
}
FFé è
)
FFè ê
;
FFê ë
	resultadoGG 
.GG 
informationGG %
=GG& '
nuevoInventarioGG( 7
;GG7 8
returnHH 
	resultadoHH  
;HH  !
}II 
catchJJ 
(JJ 
	ExceptionJJ 
eJJ 
)JJ 
{KK 
throwLL 
newLL 
LogicaExceptionLL )
(LL) *
$strLL* S
+LLT U
$strLLV [
+LL\ ]
eLL^ _
.LL_ `
MessageLL` g
,LLg h
eLLi j
)LLj k
;LLk l
}MM 
}NN 	
publicPP 
ListPP 
<PP 
InventarioFisicoPP $
>PP$ %%
ObtenerInventariosFisicosPP& ?
(PP? @
intPPA D
	idAlmacenPPE N
,PPN O
intPPP S

idEmpleadoPPT ^
,PP^ _
DateTimePP` h
fechaPPi n
)PPn o
{QQ 	
tryRR 
{SS 
varTT 

inventarioTT 
=TT  
GenerarInventarioTT! 2
(TT2 3
	idAlmacenTT3 <
,TT< =

idEmpleadoTT> H
,TTH I
fechaTTJ O
)TTO P
;TTP Q
returnUU %
ConvertToInventarioFisicoUU 0
(UU0 1

inventarioUU1 ;
)UU; <
;UU< =
}VV 
catchWW 
(WW -
!NohayMovimientosDeBienesExceptionWW 4
eWW5 6
)WW6 7
{XX 
ListYY 
<YY 
InventarioFisicoYY %
>YY% &

inventarioYY' 1
=YY2 3
newYY4 7
ListYY8 <
<YY< =
InventarioFisicoYY= M
>YYM N
(YYN O
)YYO P
;YYP Q

inventarioZZ 
=ZZ 
(ZZ 
eZZ 
.ZZ  
HayInventarioPrevioZZ  3
?ZZ4 5"
_almacenReportingDatosZZ6 L
.ZZL M#
ObtenerInventarioFisicoZZM d
(ZZd e
(ZZe f
longZZf j
)ZZj k
eZZk l
.ZZl m
IdUltimoInventarioZZm 
)	ZZ Ä
.
ZZÄ Å
ToList
ZZÅ á
(
ZZá à
)
ZZà â
:
ZZä ã
throw
ZZå ë
new
ZZí ï
LogicaException
ZZñ •
(
ZZ• ¶
$str
ZZ¶ ô
+
ZZö õ
$str
ZZú †
+
ZZ° ¢
e
ZZ£ §
.
ZZ§ •
Message
ZZ• ¨
,
ZZ¨ ≠
e
ZZÆ Ø
)
ZZØ ∞
)
ZZ∞ ±
;
ZZ± ≤
return[[ 

inventario[[ !
;[[! "
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* S
+__T U
$str__V [
+__\ ]
e__^ _
.___ `
Message__` g
,__g h
e__i j
)__j k
;__k l
}`` 
}aa 	
publiccc 
Listcc 
<cc 
InventarioSemaforocc &
>cc& '&
ObtenerInventariosSemaforocc( B
(ccB C
intccC F

idEmpleadoccG Q
,ccQ R
intccS V
	idAlmacenccW `
,cc` a
DateTimeccb j
fechacck p
)ccp q
{dd 	
tryee 
{ff 
vargg 

inventariogg 
=gg  
GenerarInventariogg! 2
(gg2 3
	idAlmacengg3 <
,gg< =

idEmpleadogg> H
,ggH I
fechaggJ O
)ggO P
;ggP Q
returnhh '
ConvertToInventarioSemaforohh 2
(hh2 3

inventariohh3 =
)hh= >
;hh> ?
}ii 
catchjj 
(jj -
!NohayMovimientosDeBienesExceptionjj 4
ejj5 6
)jj6 7
{kk 
Listll 
<ll 
InventarioSemaforoll '
>ll' (

inventarioll) 3
=ll4 5
newll6 9
Listll: >
<ll> ?
InventarioSemaforoll? Q
>llQ R
(llR S
)llS T
;llT U

inventariomm 
=mm 
(mm 
emm 
.mm  
HayInventarioPreviomm  3
?mm4 5"
_almacenReportingDatosmm6 L
.mmL M%
ObtenerInventarioSemaforommM f
(mmf g
(mmg h
longmmh l
)mml m
emmm n
.mmn o
IdUltimoInventario	mmo Å
)
mmÅ Ç
.
mmÇ É
ToList
mmÉ â
(
mmâ ä
)
mmä ã
:
mmå ç
throw
mmé ì
new
mmî ó
LogicaException
mmò ß
(
mmß ®
$str
mm® õ
+
mmú ù
$str
mmû ¢
+
mm£ §
e
mm• ¶
.
mm¶ ß
Message
mmß Æ
,
mmÆ Ø
e
mm∞ ±
)
mm± ≤
)
mm≤ ≥
;
mm≥ ¥
returnnn 

inventarionn !
;nn! "
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
throwrr 
newrr 
LogicaExceptionrr )
(rr) *
$strrr* S
+rrT U
$strrrV [
+rr\ ]
err^ _
.rr_ `
Messagerr` g
,rrg h
erri j
)rrj k
;rrk l
}ss 
}tt 	
publicvv 
Listvv 
<vv  
InventarioValorizadovv (
>vv( ))
ObtenerInventariosValorizadosvv* G
(vvG H
intvvH K

idEmpleadovvL V
,vvV W
intvvX [
	idAlmacenvv\ e
,vve f
DateTimevvg o
fechavvp u
)vvu v
{ww 	
tryxx 
{yy 
varzz 

inventariozz 
=zz  
GenerarInventariozz! 2
(zz2 3
	idAlmacenzz3 <
,zz< =

idEmpleadozz> H
,zzH I
fechazzJ O
)zzO P
;zzP Q
return|| )
ConvertToInventarioValorizado|| 4
(||4 5

inventario||5 ?
)||? @
;||@ A
}}} 
catch~~ 
(~~ -
!NohayMovimientosDeBienesException~~ 4
e~~5 6
)~~6 7
{ 
List
ÄÄ 
<
ÄÄ "
InventarioValorizado
ÄÄ )
>
ÄÄ) *

inventario
ÄÄ+ 5
=
ÄÄ6 7
new
ÄÄ8 ;
List
ÄÄ< @
<
ÄÄ@ A"
InventarioValorizado
ÄÄA U
>
ÄÄU V
(
ÄÄV W
)
ÄÄW X
;
ÄÄX Y

inventario
ÅÅ 
=
ÅÅ 
(
ÅÅ 
e
ÅÅ 
.
ÅÅ  !
HayInventarioPrevio
ÅÅ  3
?
ÅÅ4 5$
_almacenReportingDatos
ÅÅ6 L
.
ÅÅL M)
ObtenerInventarioValorizado
ÅÅM h
(
ÅÅh i
(
ÅÅi j
long
ÅÅj n
)
ÅÅn o
e
ÅÅo p
.
ÅÅp q!
IdUltimoInventarioÅÅq É
)ÅÅÉ Ñ
.ÅÅÑ Ö
ToListÅÅÖ ã
(ÅÅã å
)ÅÅå ç
:ÅÅé è
throwÅÅê ï
newÅÅñ ô
LogicaExceptionÅÅö ©
(ÅÅ© ™
$strÅÅ™ ù
+ÅÅû ü
$strÅÅ† §
+ÅÅ• ¶
eÅÅß ®
.ÅÅ® ©
MessageÅÅ© ∞
,ÅÅ∞ ±
eÅÅ≤ ≥
)ÅÅ≥ ¥
)ÅÅ¥ µ
;ÅÅµ ∂
return
ÇÇ 

inventario
ÇÇ !
;
ÇÇ! "
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
LogicaException
ÜÜ )
(
ÜÜ) *
$str
ÜÜ* S
+
ÜÜT U
$str
ÜÜV [
+
ÜÜ\ ]
e
ÜÜ^ _
.
ÜÜ_ `
Message
ÜÜ` g
,
ÜÜg h
e
ÜÜi j
)
ÜÜj k
;
ÜÜk l
}
áá 
}
àà 	
public
ää 
List
ää 
<
ää 
InventarioFisico
ää $
>
ää$ %'
ObtenerInventariosFisicos
ää& ?
(
ää? @
int
ää@ C
	idAlmacen
ääD M
,
ääM N
int
ääO R

idEmpleado
ääS ]
,
ää] ^
DateTime
ää` h
fecha
ääi n
,
ään o
int
ääp s
[
ääs t
]
äät u
familias
ääv ~
)
ää~ 
{
ãã 	
try
åå 
{
çç 
var
éé 

inventario
éé 
=
éé  
GenerarInventario
éé! 2
(
éé2 3
	idAlmacen
éé3 <
,
éé< =

idEmpleado
éé> H
,
ééH I
fecha
ééJ O
,
ééO P
familias
ééQ Y
)
ééY Z
;
ééZ [
return
èè '
ConvertToInventarioFisico
èè 0
(
èè0 1

inventario
èè1 ;
)
èè; <
;
èè< =
}
êê 
catch
ëë 
(
ëë /
!NohayMovimientosDeBienesException
ëë 4
e
ëë5 6
)
ëë6 7
{
íí 
List
ìì 
<
ìì 
InventarioFisico
ìì %
>
ìì% &

inventario
ìì' 1
=
ìì2 3
new
ìì4 7
List
ìì8 <
<
ìì< =
InventarioFisico
ìì= M
>
ììM N
(
ììN O
)
ììO P
;
ììP Q

inventario
îî 
=
îî 
(
îî 
e
îî 
.
îî  !
HayInventarioPrevio
îî  3
?
îî4 5$
_almacenReportingDatos
îî6 L
.
îîL M%
ObtenerInventarioFisico
îîM d
(
îîd e
(
îîe f
long
îîf j
)
îîj k
e
îîk l
.
îîl m 
IdUltimoInventario
îîm 
,îî Ä
familiasîîÅ â
)îîâ ä
.îîä ã
ToListîîã ë
(îîë í
)îîí ì
:îîî ï
throwîîñ õ
newîîú ü
LogicaExceptionîî† Ø
(îîØ ∞
$strîî∞ £
+îî§ •
$strîî¶ ™
+îî´ ¨
eîî≠ Æ
.îîÆ Ø
MessageîîØ ∂
,îî∂ ∑
eîî∏ π
)îîπ ∫
)îî∫ ª
;îîª º
return
ïï 

inventario
ïï !
;
ïï! "
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
e
óó 
)
óó 
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* S
+
ôôT U
$str
ôôV [
+
ôô\ ]
e
ôô^ _
.
ôô_ `
Message
ôô` g
,
ôôg h
e
ôôi j
)
ôôj k
;
ôôk l
}
öö 
}
õõ 	
public
ùù 
List
ùù 
<
ùù "
InventarioValorizado
ùù (
>
ùù( )+
ObtenerInventariosValorizados
ùù* G
(
ùùG H
int
ùùH K

idEmpleado
ùùL V
,
ùùV W
int
ùùX [
	idAlmacen
ùù\ e
,
ùùe f
DateTime
ùùg o
fecha
ùùp u
,
ùùu v
int
ùùw z
[
ùùz {
]
ùù{ |
familiasùù} Ö
)ùùÖ Ü
{
ûû 	
try
üü 
{
†† 
var
°° 

inventario
°° 
=
°°  
GenerarInventario
°°! 2
(
°°2 3
	idAlmacen
°°3 <
,
°°< =

idEmpleado
°°> H
,
°°H I
fecha
°°J O
,
°°O P
familias
°°Q Y
)
°°Y Z
;
°°Z [
return
¢¢ +
ConvertToInventarioValorizado
¢¢ 4
(
¢¢4 5

inventario
¢¢5 ?
)
¢¢? @
;
¢¢@ A
}
££ 
catch
§§ 
(
§§ /
!NohayMovimientosDeBienesException
§§ 4
e
§§5 6
)
§§6 7
{
•• 
List
¶¶ 
<
¶¶ "
InventarioValorizado
¶¶ )
>
¶¶) *

inventario
¶¶+ 5
=
¶¶6 7
new
¶¶8 ;
List
¶¶< @
<
¶¶@ A"
InventarioValorizado
¶¶A U
>
¶¶U V
(
¶¶V W
)
¶¶W X
;
¶¶X Y

inventario
ßß 
=
ßß 
(
ßß 
e
ßß 
.
ßß  !
HayInventarioPrevio
ßß  3
?
ßß4 5$
_almacenReportingDatos
ßß6 L
.
ßßL M)
ObtenerInventarioValorizado
ßßM h
(
ßßh i
(
ßßi j
long
ßßj n
)
ßßn o
e
ßßo p
.
ßßp q!
IdUltimoInventarioßßq É
,ßßÉ Ñ
familiasßßÖ ç
)ßßç é
.ßßé è
ToListßßè ï
(ßßï ñ
)ßßñ ó
:ßßò ô
throwßßö ü
newßß† £
LogicaExceptionßß§ ≥
(ßß≥ ¥
$strßß¥ ß
+ßß® ©
$strßß™ Æ
+ßßØ ∞
eßß± ≤
.ßß≤ ≥
Messageßß≥ ∫
,ßß∫ ª
eßßº Ω
)ßßΩ æ
)ßßæ ø
;ßßø ¿
return
®® 

inventario
®® !
;
®®! "
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* S
+
¨¨T U
$str
¨¨V [
+
¨¨\ ]
e
¨¨^ _
.
¨¨_ `
Message
¨¨` g
,
¨¨g h
e
¨¨i j
)
¨¨j k
;
¨¨k l
}
≠≠ 
}
ÆÆ 	
public
≤≤ 
List
≤≤ 
<
≤≤  
InventarioSemaforo
≤≤ &
>
≤≤& '(
ObtenerInventariosSemaforo
≤≤( B
(
≤≤B C
int
≤≤C F

idEmpleado
≤≤G Q
,
≤≤Q R
int
≤≤S V
	idAlmacen
≤≤W `
,
≤≤` a
DateTime
≤≤b j
fecha
≤≤k p
,
≤≤p q
int
≤≤r u
[
≤≤u v
]
≤≤v w
familias≤≤x Ä
)≤≤Ä Å
{
≥≥ 	
try
¥¥ 
{
µµ 
var
∂∂ 

inventario
∂∂ 
=
∂∂  
GenerarInventario
∂∂! 2
(
∂∂2 3
	idAlmacen
∂∂3 <
,
∂∂< =

idEmpleado
∂∂> H
,
∂∂H I
fecha
∂∂J O
,
∂∂O P
familias
∂∂Q Y
)
∂∂Y Z
;
∂∂Z [
return
∑∑ )
ConvertToInventarioSemaforo
∑∑ 2
(
∑∑2 3

inventario
∑∑3 =
)
∑∑= >
;
∑∑> ?
}
∏∏ 
catch
ππ 
(
ππ /
!NohayMovimientosDeBienesException
ππ 4
e
ππ5 6
)
ππ6 7
{
∫∫ 
List
ªª 
<
ªª  
InventarioSemaforo
ªª '
>
ªª' (

inventario
ªª) 3
=
ªª4 5
new
ªª6 9
List
ªª: >
<
ªª> ? 
InventarioSemaforo
ªª? Q
>
ªªQ R
(
ªªR S
)
ªªS T
;
ªªT U

inventario
ºº 
=
ºº 
(
ºº 
e
ºº 
.
ºº  !
HayInventarioPrevio
ºº  3
?
ºº4 5$
_almacenReportingDatos
ºº6 L
.
ººL M'
ObtenerInventarioSemaforo
ººM f
(
ººf g
(
ººg h
long
ººh l
)
ººl m
e
ººm n
.
ººn o!
IdUltimoInventarioººo Å
,ººÅ Ç
familiasººÉ ã
)ººã å
.ººå ç
ToListººç ì
(ººì î
)ººî ï
:ººñ ó
throwººò ù
newººû °
LogicaExceptionºº¢ ±
(ºº± ≤
$strºº≤ •
+ºº¶ ß
$strºº® ¨
+ºº≠ Æ
eººØ ∞
.ºº∞ ±
Messageºº± ∏
,ºº∏ π
eºº∫ ª
)ººª º
)ººº Ω
;ººΩ æ
return
ΩΩ 

inventario
ΩΩ !
;
ΩΩ! "
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
e
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ 
LogicaException
¡¡ )
(
¡¡) *
$str
¡¡* S
+
¡¡S T
$str
¡¡U Z
+
¡¡Z [
e
¡¡\ ]
.
¡¡] ^
Message
¡¡^ e
,
¡¡e f
e
¡¡g h
)
¡¡h i
;
¡¡i j
}
¬¬ 
}
√√ 	
private
«« 
List
«« 
<
«« 
InventarioFisico
«« %
>
««% &'
ConvertToInventarioFisico
««' @
(
««@ A
Transaccion
««A L#
inventarioTransaccion
««M b
)
««b c
{
»» 	
List
…… 
<
…… 
InventarioFisico
…… !
>
……! "
inventarios
……# .
=
……/ 0
new
……1 4
List
……5 9
<
……9 :
InventarioFisico
……: J
>
……J K
(
……K L
)
……L M
;
……M N
List
   
<
   
Concepto
   
>
   
	conceptos
   $
=
  % &
_conceptoDatos
  ' 5
.
  5 6
ObtenerConceptos
  6 F
(
  F G#
inventarioTransaccion
  G \
.
  \ ]!
Detalle_transaccion
  ] p
.
  p q
Select
  q w
(
  w x
dt
  x z
=>
  { }
dt  ~ Ä
.  Ä Å#
id_concepto_negocio  Å î
)  î ï
.  ï ñ
Distinct  ñ û
(  û ü
)  ü †
.  † °
ToArray  ° ®
(  ® ©
)  © ™
)  ™ ´
.  ´ ¨
ToList  ¨ ≤
(  ≤ ≥
)  ≥ ¥
;  ¥ µ
inventarios
ÀÀ 
=
ÀÀ #
inventarioTransaccion
ÀÀ /
.
ÀÀ/ 0!
Detalle_transaccion
ÀÀ0 C
.
ÀÀC D
Select
ÀÀD J
(
ÀÀJ K
dt
ÀÀK M
=>
ÀÀN P
new
ÀÀQ T
InventarioFisico
ÀÀU e
(
ÀÀe f
)
ÀÀf g
{
ÃÃ 
CodigoBarra
ÕÕ 
=
ÕÕ 
	conceptos
ÕÕ '
.
ÕÕ' (
Single
ÕÕ( .
(
ÕÕ. /
c
ÕÕ/ 0
=>
ÕÕ1 3
c
ÕÕ4 5
.
ÕÕ5 6
Id
ÕÕ6 8
==
ÕÕ9 ;
dt
ÕÕ< >
.
ÕÕ> ?!
id_concepto_negocio
ÕÕ? R
)
ÕÕR S
.
ÕÕS T
CodigoBarra
ÕÕT _
,
ÕÕ_ `
Concepto
ŒŒ 
=
ŒŒ 
	conceptos
ŒŒ $
.
ŒŒ$ %
Single
ŒŒ% +
(
ŒŒ+ ,
c
ŒŒ, -
=>
ŒŒ. 0
c
ŒŒ1 2
.
ŒŒ2 3
Id
ŒŒ3 5
==
ŒŒ6 8
dt
ŒŒ9 ;
.
ŒŒ; <!
id_concepto_negocio
ŒŒ< O
)
ŒŒO P
.
ŒŒP Q
Nombre
ŒŒQ W
,
ŒŒW X
Cantidad
œœ 
=
œœ 
dt
œœ 
.
œœ 
cantidad
œœ &
,
œœ& '
Familia
–– 
=
–– 
	conceptos
–– #
.
––# $
Single
––$ *
(
––* +
c
––+ ,
=>
––- /
c
––0 1
.
––1 2
Id
––2 4
==
––5 7
dt
––8 :
.
––: ;!
id_concepto_negocio
––; N
)
––N O
.
––O P
Familia
––P W
,
––W X
Lote
—— 
=
—— 
dt
—— 
.
—— 
lote
—— 
,
—— 
UnidadMedida
““ 
=
““ 
	conceptos
““ (
.
““( )
Single
““) /
(
““/ 0
c
““0 1
=>
““2 4
c
““5 6
.
““6 7
Id
““7 9
==
““: <
dt
““= ?
.
““? @!
id_concepto_negocio
““@ S
)
““S T
.
““T U
UnidadMedida
““U a
,
““a b
}
”” 
)
‘‘ 
.
‘‘ 
ToList
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
return
’’ 
inventarios
’’ 
;
’’ 
}
◊◊ 	
private
ŸŸ 
List
ŸŸ 
<
ŸŸ "
InventarioValorizado
ŸŸ )
>
ŸŸ) *+
ConvertToInventarioValorizado
ŸŸ+ H
(
ŸŸH I
Transaccion
ŸŸI T#
inventarioTransaccion
ŸŸU j
)
ŸŸj k
{
⁄⁄ 	
List
€€ 
<
€€ "
InventarioValorizado
€€ %
>
€€% &
inventarios
€€' 2
=
€€3 4
new
€€5 8
List
€€9 =
<
€€= >"
InventarioValorizado
€€> R
>
€€R S
(
€€S T
)
€€T U
;
€€U V
List
›› 
<
›› 
Concepto
›› 
>
›› 
	conceptos
›› $
=
››% &
_conceptoDatos
››' 5
.
››5 6
ObtenerConceptos
››6 F
(
››F G#
inventarioTransaccion
››G \
.
››\ ]!
Detalle_transaccion
››] p
.
››p q
Select
››q w
(
››w x
dt
››x z
=>
››z |
dt
››} 
.›› Ä#
id_concepto_negocio››Ä ì
)››ì î
.››î ï
Distinct››ï ù
(››ù û
)››û ü
.››ü †
ToArray››† ß
(››ß ®
)››® ©
)››© ™
.››™ ´
ToList››´ ±
(››± ≤
)››≤ ≥
;››≥ ¥
inventarios
ﬁﬁ 
=
ﬁﬁ #
inventarioTransaccion
ﬁﬁ /
.
ﬁﬁ/ 0!
Detalle_transaccion
ﬁﬁ0 C
.
ﬁﬁC D
Select
ﬁﬁD J
(
ﬁﬁJ K
dt
ﬁﬁK M
=>
ﬁﬁN P
new
ﬁﬁQ T"
InventarioValorizado
ﬁﬁU i
(
ﬁﬁi j
)
ﬁﬁj k
{
ﬂﬂ 
CodigoBarra
‡‡ 
=
‡‡ 
	conceptos
‡‡ '
.
‡‡' (
Single
‡‡( .
(
‡‡. /
c
‡‡/ 0
=>
‡‡1 3
c
‡‡4 5
.
‡‡5 6
Id
‡‡6 8
==
‡‡9 ;
dt
‡‡< >
.
‡‡> ?!
id_concepto_negocio
‡‡? R
)
‡‡R S
.
‡‡S T
CodigoBarra
‡‡T _
,
‡‡_ `
Concepto
·· 
=
·· 
	conceptos
·· $
.
··$ %
Single
··% +
(
··+ ,
c
··, -
=>
··- /
c
··/ 0
.
··0 1
Id
··1 3
==
··3 5
dt
··6 8
.
··8 9!
id_concepto_negocio
··9 L
)
··L M
.
··M N
Nombre
··N T
,
··T U
Cantidad
‚‚ 
=
‚‚ 
dt
‚‚ 
.
‚‚ 
cantidad
‚‚ &
,
‚‚& '
Familia
„„ 
=
„„ 
	conceptos
„„ #
.
„„# $
Single
„„$ *
(
„„* +
c
„„+ ,
=>
„„- /
c
„„0 1
.
„„1 2
Id
„„2 4
==
„„5 7
dt
„„8 :
.
„„: ;!
id_concepto_negocio
„„; N
)
„„N O
.
„„O P
Familia
„„P W
,
„„W X
Lote
‰‰ 
=
‰‰ 
dt
‰‰ 
.
‰‰ 
lote
‰‰ 
,
‰‰ 
UnidadMedida
ÂÂ 
=
ÂÂ 
	conceptos
ÂÂ (
.
ÂÂ( )
Single
ÂÂ) /
(
ÂÂ/ 0
c
ÂÂ0 1
=>
ÂÂ2 4
c
ÂÂ5 6
.
ÂÂ6 7
Id
ÂÂ7 9
==
ÂÂ: <
dt
ÂÂ= ?
.
ÂÂ? @!
id_concepto_negocio
ÂÂ@ S
)
ÂÂS T
.
ÂÂT U
UnidadMedida
ÂÂU a
,
ÂÂa b

ValorTotal
ÊÊ 
=
ÊÊ 
dt
ÊÊ 
.
ÊÊ  
total
ÊÊ  %
,
ÊÊ% &
ValorUnitario
ÁÁ 
=
ÁÁ 
dt
ÁÁ  "
.
ÁÁ" #
precio_unitario
ÁÁ# 2
}
ËË 
)
ÈÈ 
.
ÈÈ 
ToList
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
return
ÍÍ 
inventarios
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
private
ÌÌ 
List
ÌÌ 
<
ÌÌ  
InventarioSemaforo
ÌÌ '
>
ÌÌ' ()
ConvertToInventarioSemaforo
ÌÌ) D
(
ÌÌD E
Transaccion
ÌÌE P#
inventarioTransaccion
ÌÌQ f
)
ÌÌf g
{
ÓÓ 	
List
ÔÔ 
<
ÔÔ  
InventarioSemaforo
ÔÔ #
>
ÔÔ# $
inventarios
ÔÔ% 0
=
ÔÔ1 2
new
ÔÔ3 6
List
ÔÔ7 ;
<
ÔÔ; < 
InventarioSemaforo
ÔÔ< N
>
ÔÔN O
(
ÔÔO P
)
ÔÔP Q
;
ÔÔQ R
List
 
<
 
Concepto
 
>
 
	conceptos
 $
=
% &
_conceptoDatos
' 5
.
5 6
ObtenerConceptos
6 F
(
F G#
inventarioTransaccion
G \
.
\ ]!
Detalle_transaccion
] p
.
p q
Select
q w
(
w x
dt
x z
=>
{ }
dt~ Ä
.Ä Å#
id_concepto_negocioÅ î
)î ï
.ï ñ
Distinctñ û
(û ü
)ü †
.† °
ToArray° ®
(® ©
)© ™
)™ ´
.´ ¨
ToList¨ ≤
(≤ ≥
)≥ ¥
;¥ µ
inventarios
ÒÒ 
=
ÒÒ #
inventarioTransaccion
ÒÒ /
.
ÒÒ/ 0!
Detalle_transaccion
ÒÒ0 C
.
ÒÒC D
Select
ÒÒD J
(
ÒÒJ K
dt
ÒÒK M
=>
ÒÒN P
new
ÒÒQ T 
InventarioSemaforo
ÒÒU g
(
ÒÒg h
)
ÒÒh i
{
ÚÚ 
CodigoBarra
ÛÛ 
=
ÛÛ 
	conceptos
ÛÛ '
.
ÛÛ' (
Single
ÛÛ( .
(
ÛÛ. /
c
ÛÛ/ 0
=>
ÛÛ1 3
c
ÛÛ4 5
.
ÛÛ5 6
Id
ÛÛ6 8
==
ÛÛ9 ;
dt
ÛÛ< >
.
ÛÛ> ?!
id_concepto_negocio
ÛÛ? R
)
ÛÛR S
.
ÛÛS T
CodigoBarra
ÛÛT _
,
ÛÛ_ `
Concepto
ÙÙ 
=
ÙÙ 
	conceptos
ÙÙ $
.
ÙÙ$ %
Single
ÙÙ% +
(
ÙÙ+ ,
c
ÙÙ, -
=>
ÙÙ. 0
c
ÙÙ1 2
.
ÙÙ2 3
Id
ÙÙ3 5
==
ÙÙ6 8
dt
ÙÙ9 ;
.
ÙÙ; <!
id_concepto_negocio
ÙÙ< O
)
ÙÙO P
.
ÙÙP Q
Nombre
ÙÙQ W
,
ÙÙW X
Cantidad
ıı 
=
ıı 
dt
ıı 
.
ıı 
cantidad
ıı &
,
ıı& '
Familia
ˆˆ 
=
ˆˆ 
	conceptos
ˆˆ #
.
ˆˆ# $
Single
ˆˆ$ *
(
ˆˆ* +
c
ˆˆ+ ,
=>
ˆˆ- /
c
ˆˆ0 1
.
ˆˆ1 2
Id
ˆˆ2 4
==
ˆˆ5 7
dt
ˆˆ8 :
.
ˆˆ: ;!
id_concepto_negocio
ˆˆ; N
)
ˆˆN O
.
ˆˆO P
Familia
ˆˆP W
,
ˆˆW X
Lote
˜˜ 
=
˜˜ 
dt
˜˜ 
.
˜˜ 
lote
˜˜ 
,
˜˜ 
UnidadMedida
¯¯ 
=
¯¯ 
	conceptos
¯¯ (
.
¯¯( )
Single
¯¯) /
(
¯¯/ 0
c
¯¯0 1
=>
¯¯2 4
c
¯¯5 6
.
¯¯6 7
Id
¯¯7 9
==
¯¯: <
dt
¯¯= ?
.
¯¯? @!
id_concepto_negocio
¯¯@ S
)
¯¯S T
.
¯¯T U
UnidadMedida
¯¯U a
,
¯¯a b
StockMinimo
˘˘ 
=
˘˘ 
	conceptos
˘˘ '
.
˘˘' (
Single
˘˘( .
(
˘˘. /
c
˘˘/ 0
=>
˘˘1 3
c
˘˘4 5
.
˘˘5 6
Id
˘˘6 8
==
˘˘9 ;
dt
˘˘< >
.
˘˘> ?!
id_concepto_negocio
˘˘? R
)
˘˘R S
.
˘˘S T
StockMinimo
˘˘T _
}
˚˚ 
)
¸¸ 
.
¸¸ 
ToList
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
return
˝˝ 
inventarios
˝˝ 
;
˝˝ 
}
ˇˇ 	
public
ÇÇ 
List
ÇÇ 
<
ÇÇ 
Transaccion
ÇÇ 
>
ÇÇ   
GenerarInventarios
ÇÇ! 3
(
ÇÇ3 4
int
ÇÇ4 7

idEmpleado
ÇÇ8 B
,
ÇÇB C
DateTime
ÇÇD L
fecha
ÇÇM R
)
ÇÇR S
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
List
ÜÜ 
<
ÜÜ 
Transaccion
ÜÜ  
>
ÜÜ  !
nuevosInventarios
ÜÜ" 3
=
ÜÜ4 5
new
ÜÜ6 9
List
ÜÜ: >
<
ÜÜ> ?
Transaccion
ÜÜ? J
>
ÜÜJ K
(
ÜÜK L
)
ÜÜL M
;
ÜÜM N
int
àà 
[
àà 
]
àà 
idsAlmacenes
àà "
=
àà# $#
_maestrosAlmacenDatos
àà% :
.
àà: ;!
ObtenerIdsAlmacenes
àà; N
(
ààN O
)
ààO P
;
ààP Q
foreach
ââ 
(
ââ 
var
ââ 
	idAlmacen
ââ &
in
ââ' )
idsAlmacenes
ââ* 6
)
ââ6 7
{
ää 
var
ãã 
nuevoInventario
ãã '
=
ãã( )
GenerarInventario
ãã* ;
(
ãã; <
	idAlmacen
ãã< E
,
ããE F

idEmpleado
ããG Q
,
ããQ R
fecha
ããS X
)
ããX Y
;
ããY Z
nuevosInventarios
åå %
.
åå% &
Add
åå& )
(
åå) *
nuevoInventario
åå* 9
)
åå9 :
;
åå: ;
}
çç 
return
éé 
nuevosInventarios
éé (
;
éé( )
}
èè 
catch
êê 
(
êê /
!NohayMovimientosDeBienesException
êê 4
e
êê5 6
)
êê6 7
{
ëë 
throw
íí 
(
íí 
e
íí 
)
íí 
;
íí 
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ )
(
ññ) *
$str
ññ* Q
,
ññQ R
e
ññS T
)
ññT U
;
ññU V
}
óó 
}
òò 	
public
öö 
Transaccion
öö 
GenerarInventario
öö ,
(
öö, -
int
öö- 0
	idAlmacen
öö1 :
,
öö: ;
int
öö< ?

idEmpleado
öö@ J
,
ööJ K
DateTime
ööL T
fecha
ööU Z
)
ööZ [
{
õõ 	
return
úú 
GenerarInventario
úú $
(
úú$ %
	idAlmacen
úú% .
,
úú. /

idEmpleado
úú0 :
,
úú: ;
fecha
úú< A
,
úúA B
null
úúC G
)
úúG H
;
úúH I
}
ûû 	
private
†† 
Transaccion
†† 
GenerarInventario
†† -
(
††- .
int
††. 1
	idAlmacen
††2 ;
,
††; <
int
††= @

idEmpleado
††A K
,
††K L
DateTime
††M U
fecha
††V [
,
††[ \
int
††] `
[
††` a
]
††a b
familias
††c k
)
††k l
{
°° 	
try
¢¢ 
{
££ 
Transaccion
§§ 
nuevoInventario
§§ +
=
§§, -
null
§§. 2
;
§§2 3
DateTime
•• 
?
•• %
fechaPrimeraTransaccion
•• 1
=
••2 3
fecha
••4 9
;
••9 :
var
®® 
ultimoInventario
®® $
=
®®% &
(
®®' (
familias
®®( 0
!=
®®1 3
null
®®3 7
?
®®7 8'
_inventarioHistoricoDatos
®®9 R
.
®®R SB
3ObtenerUltimoInventarioValorizadoHistoricoAnteriorA®®S Ü
(®®Ü á
	idAlmacen®®á ê
,®®ê ë
fecha®®í ó
,®®ó ò
familias®®ô °
)®®° ¢
:®®£ §)
_inventarioHistoricoDatos®®• æ
.®®æ øC
3ObtenerUltimoInventarioValorizadoHistoricoAnteriorA®®ø Ú
(®®Ú Û
	idAlmacen®®Û ¸
,®®¸ ˝
fecha®®˛ É
)®®É Ñ
)®®Ñ Ö
.®®Ö Ü
ToList®®Ü å
(®®å ç
)®®ç é
;®®é è
if
©© 
(
©© 
ultimoInventario
©© $
==
©©% '
null
©©( ,
||
©©- /
ultimoInventario
©©0 @
.
©©@ A
Count
©©A F
==
©©G I
$num
©©J K
)
©©K L
{
™™ %
fechaPrimeraTransaccion
´´ +
=
´´, -'
_consultaTransaccionDatos
´´. G
.
´´G H,
ObtenerFechaPrimeraTransaccion
´´H f
(
´´f g
	idAlmacen
´´g p
)
´´p q
;
´´q r
}
¨¨ 
var
ÆÆ 

fechaDesde
ÆÆ 
=
ÆÆ  
ultimoInventario
ÆÆ! 1
!=
ÆÆ2 4
null
ÆÆ5 9
&&
ÆÆ: <
ultimoInventario
ÆÆ= M
.
ÆÆM N
Count
ÆÆN S
>
ÆÆS T
$num
ÆÆT U
?
ÆÆU V
ultimoInventario
ÆÆW g
.
ÆÆg h
First
ÆÆh m
(
ÆÆm n
)
ÆÆn o
.
ÆÆo p
Fecha
ÆÆp u
.
ÆÆu v
AddMillisecondsÆÆv Ö
(ÆÆÖ Ü
$numÆÆÜ á
)ÆÆá à
:ÆÆâ ä'
fechaPrimeraTransaccionÆÆã ¢
!=ÆÆ£ •
nullÆÆ¶ ™
?ÆÆ´ ¨
(ÆÆ≠ Æ
DateTimeÆÆÆ ∂
)ÆÆ∂ ∑'
fechaPrimeraTransaccionÆÆ∑ Œ
:ÆÆœ –
fechaÆÆ— ÷
;ÆÆ÷ ◊
var
∞∞ 

fechaHasta
∞∞ 
=
∞∞  
fecha
∞∞! &
;
∞∞& '
var
≤≤ 
movimientos
≤≤ 
=
≤≤  !
(
≤≤" # 
AplicacionSettings
≤≤# 5
.
≤≤5 6
Default
≤≤6 =
.
≤≤= >$
PermitirGestionDeLotes
≤≤> T
?
≤≤U V
(
≤≤W X
familias
≤≤X `
!=
≤≤a c
null
≤≤d h
?
≤≤i j
_movimientosDatos
≤≤k |
.
≤≤| }7
(ObtenerMovimientosDeConceptoNegocioYLote≤≤} •
(≤≤• ¶
	idAlmacen≤≤¶ Ø
,≤≤Ø ∞

fechaDesde≤≤± ª
,≤≤ª º

fechaHasta≤≤Ω «
,≤≤« »
familias≤≤… —
)≤≤— “
:≤≤” ‘!
_movimientosDatos≤≤’ Ê
.≤≤Ê Á8
(ObtenerMovimientosDeConceptoNegocioYLote≤≤Á è
(≤≤è ê
	idAlmacen≤≤ê ô
,≤≤ô ö

fechaDesde≤≤õ •
,≤≤• ¶

fechaHasta≤≤ß ±
)≤≤± ≤
)≤≤≤ ≥
:≤≤¥ µ
(≤≤∂ ∑
familias≤≤∑ ø
!=≤≤¿ ¬
null≤≤√ «
?≤≤» …!
_movimientosDatos≤≤  €
.≤≤€ ‹3
#ObtenerMovimientosDeConceptoNegocio≤≤‹ ˇ
(≤≤ˇ Ä
	idAlmacen≤≤Ä â
,≤≤â ä

fechaDesde≤≤ã ï
,≤≤ï ñ

fechaHasta≤≤ó °
,≤≤° ¢
familias≤≤£ ´
)≤≤´ ¨
:≤≤≠ Æ!
_movimientosDatos≤≤Ø ¿
.≤≤¿ ¡3
#ObtenerMovimientosDeConceptoNegocio≤≤¡ ‰
(≤≤‰ Â
	idAlmacen≤≤Â Ó
,≤≤Ó Ô

fechaDesde≤≤ ˙
,≤≤˙ ˚

fechaHasta≤≤¸ Ü
)≤≤Ü á
)≤≤á à
)≤≤â ä
.≤≤ä ã
ToList≤≤ã ë
(≤≤ë í
)≤≤í ì
;≤≤ì î
List
¥¥ 
<
¥¥ 
ConceptoLote
¥¥ !
>
¥¥! "
conceptosLotes
¥¥# 1
=
¥¥2 3
new
¥¥4 7
List
¥¥8 <
<
¥¥< =
ConceptoLote
¥¥= I
>
¥¥I J
(
¥¥J K
)
¥¥K L
;
¥¥L M
if
µµ 
(
µµ 
ultimoInventario
µµ $
!=
µµ% '
null
µµ( ,
&&
µµ- /
ultimoInventario
µµ0 @
.
µµ@ A
Count
µµA F
>
µµG H
$num
µµI J
)
µµJ K
{
∂∂ 
var
∑∑ 
grupos_inventario
∑∑ )
=
∑∑* +
ultimoInventario
∑∑, <
.
∑∑< =
GroupBy
∑∑= D
(
∑∑D E
i
∑∑E F
=>
∑∑G I
new
∑∑J M
{
∑∑N O
i
∑∑P Q
.
∑∑Q R

IdConcepto
∑∑R \
,
∑∑\ ]
i
∑∑^ _
.
∑∑_ `
Lote
∑∑` d
}
∑∑e f
)
∑∑f g
.
∑∑g h
Select
∑∑h n
(
∑∑n o
g
∑∑o p
=>
∑∑q s
g
∑∑t u
.
∑∑u v
First
∑∑v {
(
∑∑{ |
)
∑∑| }
)
∑∑} ~
.
∑∑~ 
ToList∑∑ Ö
(∑∑Ö Ü
)∑∑Ü á
;∑∑á à
grupos_inventario
∏∏ %
.
∏∏% &
ForEach
∏∏& -
(
∏∏- .
g
∏∏. /
=>
∏∏0 2
conceptosLotes
∏∏3 A
.
∏∏A B
Add
∏∏B E
(
∏∏E F
new
∏∏F I
ConceptoLote
∏∏J V
(
∏∏V W
)
∏∏W X
{
∏∏Y Z

IdConcepto
∏∏[ e
=
∏∏f g
g
∏∏h i
.
∏∏i j

IdConcepto
∏∏j t
,
∏∏t u
Lote
∏∏v z
=
∏∏{ |
g
∏∏} ~
.
∏∏~ 
Lote∏∏ É
}∏∏Ñ Ö
)∏∏Ö Ü
)∏∏Ü á
;∏∏á à
}
ππ 
var
∫∫ 
mensaje
∫∫ 
=
∫∫ 
$str
∫∫ f
;
∫∫f g
if
ªª 
(
ªª 
movimientos
ªª 
==
ªª  "
null
ªª# '
||
ªª( *
movimientos
ªª+ 6
.
ªª6 7
Count
ªª7 <
<=
ªª= ?
$num
ªª@ A
)
ªªA B
{
ºº 
throw
ΩΩ 
ultimoInventario
ΩΩ *
==
ΩΩ+ -
null
ΩΩ. 2
||
ΩΩ3 5
ultimoInventario
ΩΩ6 F
.
ΩΩF G
Count
ΩΩG L
==
ΩΩL N
$num
ΩΩN O
?
ΩΩP Q
new
ΩΩR U/
!NohayMovimientosDeBienesException
ΩΩV w
(
ΩΩw x
mensaje
ΩΩx 
,ΩΩ Ä
falseΩΩÅ Ü
,ΩΩÜ á
$numΩΩà â
,ΩΩâ ä
nullΩΩã è
)ΩΩè ê
:ΩΩë í
throwΩΩì ò
newΩΩô ú1
!NohayMovimientosDeBienesExceptionΩΩù æ
(ΩΩæ ø
mensajeΩΩø ∆
,ΩΩ∆ «
trueΩΩ» Ã
,ΩΩÃ Õ 
ultimoInventarioΩΩŒ ﬁ
.ΩΩﬁ ﬂ
FirstΩΩﬂ ‰
(ΩΩ‰ Â
)ΩΩÂ Ê
.ΩΩÊ Á
IdTransaccionΩΩÁ Ù
,ΩΩÙ ı 
ultimoInventarioΩΩˆ Ü
.ΩΩÜ á
FirstΩΩá å
(ΩΩå ç
)ΩΩç é
.ΩΩé è
FechaΩΩè î
)ΩΩî ï
;ΩΩï ñ
}
ææ 
var
øø  
grupos_movimientos
øø &
=
øø' (
movimientos
øø) 4
.
øø4 5
GroupBy
øø5 <
(
øø< =
m
øø= >
=>
øø? A
new
øøB E
{
øøF G
m
øøH I
.
øøI J!
Id_concepto_negocio
øøJ ]
,
øø] ^
m
øø_ `
.
øø` a
Lote
øøa e
}
øøf g
)
øøg h
.
øøh i
Select
øøi o
(
øøo p
g
øøp q
=>
øør t
g
øøu v
.
øøv w
First
øøw |
(
øø| }
)
øø} ~
)
øø~ 
.øø Ä
ToListøøÄ Ü
(øøÜ á
)øøá à
;øøà â 
grupos_movimientos
¿¿ "
.
¿¿" #
ForEach
¿¿# *
(
¿¿* +
g
¿¿+ ,
=>
¿¿- /
conceptosLotes
¿¿0 >
.
¿¿> ?
Add
¿¿? B
(
¿¿B C
new
¿¿C F
ConceptoLote
¿¿G S
(
¿¿S T
)
¿¿T U
{
¿¿V W

IdConcepto
¿¿X b
=
¿¿c d
g
¿¿e f
.
¿¿f g!
Id_concepto_negocio
¿¿g z
,
¿¿z {
Lote¿¿| Ä
=¿¿Å Ç
g¿¿É Ñ
.¿¿Ñ Ö
Lote¿¿Ö â
}¿¿ä ã
)¿¿ã å
)¿¿å ç
;¿¿ç é
var
¡¡ $
conceptosLotesDistinct
¡¡ *
=
¡¡+ ,
conceptosLotes
¡¡- ;
.
¡¡; <
GroupBy
¡¡< C
(
¡¡C D
cl
¡¡D F
=>
¡¡G I
new
¡¡J M
{
¡¡N O
cl
¡¡P R
.
¡¡R S

IdConcepto
¡¡S ]
,
¡¡] ^
cl
¡¡_ a
.
¡¡a b
Lote
¡¡b f
}
¡¡g h
)
¡¡h i
.
¡¡i j
Select
¡¡j p
(
¡¡p q
g
¡¡q r
=>
¡¡s u
g
¡¡v w
.
¡¡w x
First
¡¡x }
(
¡¡} ~
)
¡¡~ 
)¡¡ Ä
.¡¡Ä Å
ToList¡¡Å á
(¡¡á à
)¡¡à â
;¡¡â ä
nuevoInventario
¬¬ 
=
¬¬  !
new
¬¬" %
Transaccion
¬¬& 1
(
¬¬1 2
$str
¬¬2 4
,
¬¬4 5
null
¬¬6 :
,
¬¬: ;
DateTimeUtil
¬¬< H
.
¬¬H I
FechaActual
¬¬I T
(
¬¬T U
)
¬¬U V
,
¬¬V W!
TransaccionSettings
¬¬X k
.
¬¬k l
Default
¬¬l s
.
¬¬s t3
$IdTipoTransaccionInventarioHistorico¬¬t ò
,¬¬ò ô
MaestroSettings
√√ #
.
√√# $
Default
√√$ +
.
√√+ ,8
*IdDetalleMaestroUnidadDeNegocioTransversal
√√, V
,
√√V W
false
√√X ]
,
√√] ^

fechaHasta
√√_ i
,
√√i j

fechaHasta
√√k u
,
√√u v"
TransaccionSettings√√w ä
.√√ä ã
Default√√ã í
.√√í ì%
IdComprobanteGenerico√√ì ®
,√√® ©
$str
ƒƒ Z
,
ƒƒZ [

fechaHasta
ƒƒ\ f
,
ƒƒf g

idEmpleado
ƒƒh r
,
ƒƒr s
$num
ƒƒt v
,
ƒƒv w
	idAlmacenƒƒx Å
,ƒƒÅ Ç
MaestroSettingsƒƒÉ í
.ƒƒí ì
Defaultƒƒì ö
.ƒƒö õ+
IdDetalleMaestroMonedaSolesƒƒõ ∂
,ƒƒ∂ ∑
$numƒƒ∏ ∫
,ƒƒ∫ ª
nullƒƒº ¿
,ƒƒ¿ ¡
	idAlmacenƒƒ¬ À
)ƒƒÀ Ã
;ƒƒÃ Õ 
Estado_transaccion
∆∆ "
estadoTransaccion
∆∆# 4
=
∆∆5 6
new
∆∆7 : 
Estado_transaccion
∆∆; M
(
∆∆M N

idEmpleado
∆∆N X
,
∆∆X Y
MaestroSettings
∆∆Z i
.
∆∆i j
Default
∆∆j q
.
∆∆q r/
 IdDetalleMaestroEstadoConfirmado∆∆r í
,∆∆í ì

fechaHasta∆∆î û
,∆∆û ü
$str∆∆† Ì
)∆∆Ì Ó
;∆∆Ó Ô
nuevoInventario
«« 
.
««   
Estado_transaccion
««  2
.
««2 3
Add
««3 6
(
««6 7
estadoTransaccion
««7 H
)
««H I
;
««I J
foreach
…… 
(
…… 
var
…… 
item
…… !
in
……" $$
conceptosLotesDistinct
……% ;
)
……; <
{
   
nuevoInventario
ÀÀ #
.
ÀÀ# $!
Detalle_transaccion
ÀÀ$ 7
.
ÀÀ7 8
Add
ÀÀ8 ;
(
ÀÀ; <&
GenerarDetalleInventario
ÀÀ< T
(
ÀÀT U
item
ÀÀU Y
,
ÀÀY Z
ultimoInventario
ÀÀZ j
,
ÀÀj k
movimientos
ÀÀl w
,
ÀÀw x
item
ÀÀy }
.
ÀÀ} ~

IdConceptoÀÀ~ à
,ÀÀà â
itemÀÀä é
.ÀÀé è
LoteÀÀè ì
)ÀÀì î
)ÀÀî ï
;ÀÀï ñ
}
ÃÃ 
return
ÕÕ 
nuevoInventario
ÕÕ &
;
ÕÕ& '
}
ŒŒ 
catch
œœ 
(
œœ /
!NohayMovimientosDeBienesException
œœ 4
e
œœ5 6
)
œœ6 7
{
–– 
throw
—— 
(
—— 
e
—— 
)
—— 
;
—— 
}
““ 
catch
”” 
(
”” 
	Exception
”” 
e
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ 
LogicaException
’’ )
(
’’) *
$str
’’* Q
,
’’Q R
e
’’S T
)
’’T U
;
’’U V
}
÷÷ 
}
◊◊ 	
public
ÿÿ !
Detalle_transaccion
ÿÿ "&
GenerarDetalleInventario
ÿÿ# ;
(
ÿÿ; <
ConceptoLote
ÿÿ< H
item
ÿÿI M
,
ÿÿM N
List
ÿÿN R
<
ÿÿR S"
InventarioValorizado
ÿÿS g
>
ÿÿg h
ultimoInventario
ÿÿi y
,
ÿÿy z
List
ÿÿ{ 
<ÿÿ ÄB
2Movimientos_concepto_negocio_actor_negocio_internoÿÿÄ ≤
>ÿÿ≤ ≥
movimientosÿÿ¥ ø
,ÿÿø ¿
intÿÿ¡ ƒ

idConceptoÿÿ≈ œ
,ÿÿœ –
stringÿÿ— ◊
loteÿÿÿ ‹
)ÿÿ‹ ›
{
ŸŸ 	
var
⁄⁄ $
inventarioConceptoLote
⁄⁄ &
=
⁄⁄' (
ultimoInventario
⁄⁄) 9
!=
⁄⁄: <
null
⁄⁄= A
?
⁄⁄B C
ultimoInventario
⁄⁄D T
.
⁄⁄T U
SingleOrDefault
⁄⁄U d
(
⁄⁄d e
dt
⁄⁄e g
=>
⁄⁄h j
dt
⁄⁄k m
.
⁄⁄m n

IdConcepto
⁄⁄n x
==
⁄⁄y {

idConcepto⁄⁄| Ü
&&⁄⁄á â
dt⁄⁄ä å
.⁄⁄å ç
Lote⁄⁄ç ë
==⁄⁄í î
lote⁄⁄ï ô
)⁄⁄ô ö
:⁄⁄õ ú
null⁄⁄ù °
;⁄⁄° ¢
var
€€ %
movimientosConceptoLote
€€ '
=
€€( )
movimientos
€€* 5
.
€€5 6
Where
€€6 ;
(
€€; <
m
€€< =
=>
€€> @
m
€€A B
.
€€B C!
Id_concepto_negocio
€€C V
==
€€W Y

idConcepto
€€Z d
&&
€€e g
m
€€h i
.
€€i j
Lote
€€j n
==
€€o q
lote
€€r v
)
€€v w
;
€€w x
var
››  
cantidad_principal
›› "
=
››# $
(
››% &
ultimoInventario
››& 6
!=
››7 9
null
››: >
&&
››? A$
inventarioConceptoLote
››B X
!=
››Y [
null
››\ `
?
››a b$
inventarioConceptoLote
ﬁﬁ &
.
ﬁﬁ& '
Cantidad
ﬁﬁ' /
:
ﬁﬁ0 1
$num
ﬁﬁ2 3
)
ﬁﬁ3 4
+
ﬁﬁ5 6
(
ﬂﬂ %
movimientosConceptoLote
ﬂﬂ (
!=
ﬂﬂ) +
null
ﬂﬂ, 0
?
ﬂﬂ1 2%
movimientosConceptoLote
ﬂﬂ3 J
.
ﬂﬂJ K
Sum
ﬂﬂK N
(
ﬂﬂN O
m
ﬂﬂO P
=>
ﬂﬂQ S
m
ﬂﬂT U
.
ﬂﬂU V 
Entradas_principal
ﬂﬂV h
)
ﬂﬂh i
:
ﬂﬂj k
$num
ﬂﬂl m
)
ﬂﬂm n
-
ﬂﬂo p
(
‡‡ %
movimientosConceptoLote
‡‡ (
!=
‡‡) +
null
‡‡, 0
?
‡‡1 2%
movimientosConceptoLote
‡‡3 J
.
‡‡J K
Sum
‡‡K N
(
‡‡N O
m
‡‡O P
=>
‡‡Q S
m
‡‡T U
.
‡‡U V
Salidas_principal
‡‡V g
)
‡‡g h
:
‡‡i j
$num
‡‡k l
)
‡‡l m
;
‡‡m n
;
‡‡o p
var
‚‚ !
cantidad_secundaria
‚‚ #
=
‚‚$ %
(
‚‚& '
decimal
‚‚' .
)
‚‚. /
(
‚‚/ 0
(
„„ 
ultimoInventario
„„ !
!=
„„" $
null
„„% )
&&
„„* ,$
inventarioConceptoLote
„„- C
!=
„„D F
null
„„G K
?
„„L M$
inventarioConceptoLote
‰‰ &
.
‰‰& ' 
CantidadSecundaria
‰‰' 9
:
‰‰: ;
$num
‰‰< =
)
‰‰= >
+
‰‰? @
(
ÂÂ %
movimientosConceptoLote
ÂÂ (
!=
ÂÂ) +
null
ÂÂ, 0
?
ÂÂ1 2%
movimientosConceptoLote
ÂÂ3 J
.
ÂÂJ K
Sum
ÂÂK N
(
ÂÂN O
m
ÂÂO P
=>
ÂÂQ S
m
ÂÂT U
.
ÂÂU V!
Entradas_secundaria
ÂÂV i
)
ÂÂi j
:
ÂÂk l
$num
ÂÂm n
)
ÂÂn o
-
ÂÂp q
(
ÊÊ %
movimientosConceptoLote
ÊÊ )
!=
ÊÊ* ,
null
ÊÊ- 1
?
ÊÊ2 3%
movimientosConceptoLote
ÊÊ4 K
.
ÊÊK L
Sum
ÊÊL O
(
ÊÊO P
m
ÊÊP Q
=>
ÊÊR T
m
ÊÊU V
.
ÊÊV W 
Salidas_secundaria
ÊÊW i
)
ÊÊi j
:
ÊÊk l
$num
ÊÊm n
)
ÊÊn o
)
ÊÊo p
;
ÊÊp q
var
ËË 

costoTotal
ËË 
=
ËË 
(
ËË 
ultimoInventario
ËË .
!=
ËË/ 1
null
ËË2 6
&&
ËË7 9$
inventarioConceptoLote
ËË: P
!=
ËËQ S
null
ËËT X
?
ËËY Z$
inventarioConceptoLote
ÈÈ &
.
ÈÈ& '

ValorTotal
ÈÈ' 1
:
ÈÈ2 3
$num
ÈÈ4 5
)
ÈÈ5 6
+
ÈÈ7 8
(
ÍÍ %
movimientosConceptoLote
ÍÍ (
!=
ÍÍ) +
null
ÍÍ, 0
?
ÍÍ1 2%
movimientosConceptoLote
ÍÍ3 J
.
ÍÍJ K
Sum
ÍÍK N
(
ÍÍN O
m
ÍÍO P
=>
ÍÍQ S
m
ÍÍT U
.
ÍÍU V
Total
ÍÍV [
)
ÍÍ[ \
:
ÍÍ] ^
$num
ÍÍ_ `
)
ÍÍ` a
;
ÍÍa b
var
ÏÏ 
costoUnitario
ÏÏ 
=
ÏÏ  
cantidad_principal
ÏÏ  2
!=
ÏÏ3 5
$num
ÏÏ6 7
?
ÏÏ8 9

costoTotal
ÏÏ: D
/
ÏÏE F 
cantidad_principal
ÏÏG Y
:
ÏÏZ [
$num
ÏÏ\ ]
;
ÏÏ] ^
return
ÌÌ 
(
ÌÌ 
new
ÌÌ !
Detalle_transaccion
ÌÌ +
(
ÌÌ+ , 
cantidad_principal
ÌÌ, >
,
ÌÌ> ?
item
ÌÌ@ D
.
ÌÌD E

IdConcepto
ÌÌE O
,
ÌÌO P
$str
ÌÌQ ]
,
ÌÌ] ^
costoUnitario
ÌÌ_ l
,
ÌÌl m

costoTotal
ÌÌn x
,
ÌÌx y
null
ÌÌz ~
,
ÌÌ~ #
cantidad_secundariaÌÌÄ ì
,ÌÌì î
nullÌÌï ô
,ÌÌô ö
nullÌÌõ ü
,ÌÌü †
$numÌÌ° £
,ÌÌ£ §
$numÌÌ• ß
,ÌÌß ®
$numÌÌ© ´
)ÌÌ´ ¨
{ÌÌ≠ Æ
loteÌÌØ ≥
=ÌÌ¥ µ
itemÌÌ∂ ∫
.ÌÌ∫ ª
LoteÌÌª ø
}ÌÌ¿ ¡
)ÌÌ¡ ¬
;ÌÌ¬ √
}
ÓÓ 	
public
 
OperationResult
 >
0CrearInventarioHistoricoClonandoInventarioFisico
 O
(
O P
int
P S

idEmpleado
T ^
)
^ _
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
DateTime
ÙÙ 
fechaActual
ÙÙ $
=
ÙÙ% &
DateTimeUtil
ÙÙ' 3
.
ÙÙ3 4
FechaActual
ÙÙ4 ?
(
ÙÙ? @
)
ÙÙ@ A
;
ÙÙA B
DateTime
ıı 
?
ıı %
fechaPrimeraTransaccion
ıı 1
=
ıı2 3
fechaActual
ıı4 ?
;
ıı? @
List
˜˜ 
<
˜˜ 
Transaccion
˜˜  
>
˜˜  !
nuevosInventarios
˜˜" 3
=
˜˜4 5
new
˜˜6 9
List
˜˜: >
<
˜˜> ?
Transaccion
˜˜? J
>
˜˜J K
(
˜˜K L
)
˜˜L M
;
˜˜M N
int
˘˘ 
[
˘˘ 
]
˘˘ 
idsAlmacenes
˘˘ "
=
˘˘# $#
_maestrosAlmacenDatos
˘˘% :
.
˘˘: ;!
ObtenerIdsAlmacenes
˘˘; N
(
˘˘N O
)
˘˘O P
;
˘˘P Q
foreach
˚˚ 
(
˚˚ 
var
˚˚ 
	idAlmacen
˚˚ &
in
˚˚' )
idsAlmacenes
˚˚* 6
)
˚˚6 7
{
¸¸ 
var
˛˛ 
ultimoInventario
˛˛ (
=
˛˛) *'
_inventarioHistoricoDatos
˛˛+ D
.
˛˛D E.
 ObtenerUltimoInventarioHistorico
˛˛E e
(
˛˛e f
	idAlmacen
˛˛f o
)
˛˛o p
;
˛˛p q
if
ÄÄ 
(
ÄÄ 
ultimoInventario
ÄÄ (
==
ÄÄ) +
null
ÄÄ, 0
)
ÄÄ0 1
{
ÅÅ %
fechaPrimeraTransaccion
ÇÇ /
=
ÇÇ0 1'
_consultaTransaccionDatos
ÇÇ2 K
.
ÇÇK L,
ObtenerFechaPrimeraTransaccion
ÇÇL j
(
ÇÇj k
	idAlmacen
ÇÇk t
)
ÇÇt u
;
ÇÇu v
}
ÉÉ 
var
ÖÖ 

fechaDesde
ÖÖ "
=
ÖÖ# $
ultimoInventario
ÖÖ% 5
!=
ÖÖ6 8
null
ÖÖ9 =
?
ÖÖ> ?
ultimoInventario
ÖÖ@ P
.
ÖÖP Q
fecha_inicio
ÖÖQ ]
.
ÖÖ] ^
AddMilliseconds
ÖÖ^ m
(
ÖÖm n
$num
ÖÖn o
)
ÖÖo p
:
ÖÖq r&
fechaPrimeraTransaccionÖÖs ä
!=ÖÖã ç
nullÖÖé í
?ÖÖì î
(ÖÖï ñ
DateTimeÖÖñ û
)ÖÖû ü'
fechaPrimeraTransaccionÖÖü ∂
:ÖÖ∑ ∏
fechaActualÖÖπ ƒ
;ÖÖƒ ≈
var
áá 

fechaHasta
áá "
=
áá# $
fechaActual
áá% 0
;
áá0 1
var
ââ 
inventarioFisico
ââ (
=
ââ) *'
_inventarioHistoricoDatos
ââ+ D
.
ââD E;
-ObtenerTransaccionInclusiveDetalleTransaccion
ââE r
(
ââr s
	idAlmacen
ââs |
,
ââ| }"
TransaccionSettingsââ~ ë
.ââë í
Defaultââí ô
.ââô ö1
!IdTipoTransaccionInventarioActualââö ª
,ââª º
MaestroSettingsââΩ Ã
.ââÃ Õ
DefaultââÕ ‘
.ââ‘ ’0
 IdDetalleMaestroEstadoConfirmadoââ’ ı
)ââı ˆ
;ââˆ ˜
if
ää 
(
ää 
inventarioFisico
ää (
!=
ää) +
null
ää, 0
)
ää0 1
{
ãã 
var
åå 
nuevoInventario
åå +
=
åå, -
inventarioFisico
åå. >
.
åå> ?'
CloneTransaccionYDetalles
åå? X
(
ååX Y
)
ååY Z
;
ååZ [
nuevoInventario
éé '
.
éé' (
codigo
éé( .
=
éé/ 0
$str
éé1 5
;
éé5 6
nuevoInventario
èè '
.
èè' (
id_empleado
èè( 3
=
èè4 5

idEmpleado
èè6 @
;
èè@ A
nuevoInventario
êê '
.
êê' (!
id_tipo_transaccion
êê( ;
=
êê< =!
TransaccionSettings
êê> Q
.
êêQ R
Default
êêR Y
.
êêY Z2
$IdTipoTransaccionInventarioHistorico
êêZ ~
;
êê~ 
nuevoInventario
ëë '
.
ëë' (

comentario
ëë( 2
=
ëë3 4
$str
ëë5 ~
;
ëë~ 
nuevoInventario
íí '
.
íí' (
id_comprobante
íí( 6
=
íí7 8!
TransaccionSettings
íí9 L
.
ííL M
Default
ííM T
.
ííT U#
IdComprobanteGenerico
ííU j
;
ííj k
nuevoInventario
ìì '
.
ìì' (
fecha_inicio
ìì( 4
=
ìì5 6

fechaHasta
ìì7 A
;
ììA B
nuevoInventario
îî '
.
îî' (
	fecha_fin
îî( 1
=
îî2 3

fechaHasta
îî4 >
;
îî> ?
nuevoInventario
ïï '
.
ïï' (%
fecha_registro_contable
ïï( ?
=
ïï@ A

fechaHasta
ïïB L
;
ïïL M
nuevoInventario
ññ '
.
ññ' ($
fecha_registro_sistema
ññ( >
=
ññ? @

fechaHasta
ññA K
;
ññK L 
Estado_transaccion
òò *
estadoTransaccion
òò+ <
=
òò= >
new
òò? B 
Estado_transaccion
òòC U
(
òòU V

idEmpleado
òòV `
,
òò` a
MaestroSettings
òòb q
.
òòq r
Default
òòr y
.
òòy z/
 IdDetalleMaestroEstadoConfirmadoòòz ö
,òòö õ
fechaActualòòú ß
,òòß ®
$stròò© ˆ
)òòˆ ˜
;òò˜ ¯
nuevoInventario
ôô '
.
ôô' ( 
Estado_transaccion
ôô( :
.
ôô: ;
Add
ôô; >
(
ôô> ?
estadoTransaccion
ôô? P
)
ôôP Q
;
ôôQ R
nuevosInventarios
õõ )
.
õõ) *
Add
õõ* -
(
õõ- .
nuevoInventario
õõ. =
)
õõ= >
;
õõ> ?
}
úú 
}
ùù 
if
ûû 
(
ûû 
nuevosInventarios
ûû %
.
ûû% &
Count
ûû& +
(
ûû+ ,
)
ûû, -
>
ûû. /
$num
ûû0 1
)
ûû1 2
{
üü 
return
†† $
_crearTransaccionDatos
†† 1
.
††1 2:
,CrearTransaccionesYDetallesTransaccionMasivo
††2 ^
(
††^ _
nuevosInventarios
††_ p
)
††p q
;
††q r
}
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ )
(
¢¢) *
$str¢¢* Ä
)¢¢Ä Å
;¢¢Å Ç
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ )
(
¶¶) *
$str
¶¶* Q
,
¶¶Q R
e
¶¶S T
)
¶¶T U
;
¶¶U V
}
ßß 
}
®® 	
public
™™ 
OperationResult
™™ ,
CrearInventariosLogicosPorLote
™™ =
(
™™= >
int
™™> A

idEmpleado
™™B L
)
™™L M
{
´´ 	
try
¨¨ 
{
≠≠ 
DateTime
ÆÆ 
fechaActual
ÆÆ $
=
ÆÆ% &
DateTimeUtil
ÆÆ' 3
.
ÆÆ3 4
FechaActual
ÆÆ4 ?
(
ÆÆ? @
)
ÆÆ@ A
;
ÆÆA B
DateTime
ØØ 
?
ØØ %
fechaPrimeraTransaccion
ØØ 1
=
ØØ2 3
fechaActual
ØØ4 ?
;
ØØ? @
List
±± 
<
±± 
Transaccion
±±  
>
±±  !
nuevosInventarios
±±" 3
=
±±4 5
new
±±6 9
List
±±: >
<
±±> ?
Transaccion
±±? J
>
±±J K
(
±±K L
)
±±L M
;
±±M N
int
≥≥ 
[
≥≥ 
]
≥≥ 
idsAlmacenes
≥≥ "
=
≥≥# $#
_maestrosAlmacenDatos
≥≥% :
.
≥≥: ;!
ObtenerIdsAlmacenes
≥≥; N
(
≥≥N O
)
≥≥O P
;
≥≥P Q
foreach
µµ 
(
µµ 
var
µµ 
	idAlmacen
µµ &
in
µµ' )
idsAlmacenes
µµ* 6
)
µµ6 7
{
∂∂ 
var
ππ 
ultimoInventario
ππ (
=
ππ) *'
_inventarioHistoricoDatos
ππ+ D
.
ππD E.
 ObtenerUltimoInventarioHistorico
ππE e
(
ππe f
	idAlmacen
ππf o
)
ππo p
;
ππp q
if
ªª 
(
ªª 
ultimoInventario
ªª (
==
ªª) +
null
ªª, 0
)
ªª1 2
{
ºº %
fechaPrimeraTransaccion
ΩΩ /
=
ΩΩ0 1'
_consultaTransaccionDatos
ΩΩ2 K
.
ΩΩK L,
ObtenerFechaPrimeraTransaccion
ΩΩL j
(
ΩΩj k
	idAlmacen
ΩΩk t
)
ΩΩt u
;
ΩΩu v
}
ææ 
var
¿¿ 

fechaDesde
¿¿ "
=
¿¿# $
ultimoInventario
¿¿% 5
!=
¿¿6 8
null
¿¿9 =
?
¿¿> ?
ultimoInventario
¿¿@ P
.
¿¿P Q
fecha_inicio
¿¿Q ]
.
¿¿] ^
AddMilliseconds
¿¿^ m
(
¿¿m n
$num
¿¿n o
)
¿¿o p
:
¿¿q r&
fechaPrimeraTransaccion¿¿s ä
!=¿¿ã ç
null¿¿é í
?¿¿ì î
(¿¿ï ñ
DateTime¿¿ñ û
)¿¿û ü'
fechaPrimeraTransaccion¿¿ü ∂
:¿¿∑ ∏
fechaActual¿¿π ƒ
;¿¿ƒ ≈
var
¬¬ 

fechaHasta
¬¬ "
=
¬¬# $
fechaActual
¬¬% 0
;
¬¬0 1
var
ƒƒ 
movimientos
ƒƒ #
=
ƒƒ$ %
_movimientosDatos
ƒƒ& 7
.
ƒƒ7 8G
9ObtenerMovimientosConceptoNegocioConLotePorEntidadInterna
ƒƒ8 q
(
ƒƒq r
	idAlmacen
ƒƒr {
,
ƒƒ{ |

fechaDesdeƒƒ} á
,ƒƒá à

fechaHastaƒƒâ ì
)ƒƒì î
.ƒƒî ï
ToListƒƒï õ
(ƒƒõ ú
)ƒƒú ù
;ƒƒù û
List
∆∆ 
<
∆∆ (
VencimientoConceptoNegocio
∆∆ 3
>
∆∆3 4
conceptosConLote
∆∆5 E
=
∆∆F G
new
∆∆H K
List
∆∆L P
<
∆∆P Q(
VencimientoConceptoNegocio
∆∆Q k
>
∆∆k l
(
∆∆l m
)
∆∆m n
;
∆∆n o
if
«« 
(
«« 
ultimoInventario
«« (
!=
««) +
null
««, 0
)
««0 1
{
»» 
conceptosConLote
…… (
.
……( )
AddRange
……) 1
(
……1 2
ultimoInventario
……2 B
.
……B C!
Detalle_transaccion
……C V
.
……V W
Select
……W ]
(
……] ^
dt
……^ `
=>
……a c
new
……d g)
VencimientoConceptoNegocio……h Ç
(……Ç É
)……É Ñ
{
   

IdConcepto
ÀÀ &
=
ÀÀ' (
dt
ÀÀ) +
.
ÀÀ+ ,!
id_concepto_negocio
ÀÀ, ?
,
ÀÀ? @
Lote
ÃÃ  
=
ÃÃ! "
dt
ÃÃ# %
.
ÃÃ% &
lote
ÃÃ& *
}
ÕÕ 
)
ÕÕ 
.
ÕÕ 
Distinct
ÕÕ #
(
ÕÕ# $
)
ÕÕ$ %
)
ÕÕ% &
;
ÕÕ& '
}
ŒŒ 
if
œœ 
(
œœ 
movimientos
œœ #
!=
œœ$ &
null
œœ' +
)
œœ+ ,
{
–– 
conceptosConLote
—— (
.
——( )
AddRange
——) 1
(
——1 2
movimientos
——2 =
.
——= >
Select
——> D
(
——D E
m
——E F
=>
——G I
new
——J M(
VencimientoConceptoNegocio
——N h
(
——h i
)
——i j
{
““ 

IdConcepto
”” &
=
””' (
m
””) *
.
””* +!
Id_concepto_negocio
””+ >
,
””> ?
Lote
‘‘  
=
‘‘! "
m
‘‘# $
.
‘‘$ %
Lote
‘‘% )
}
’’ 
)
’’ 
.
’’ 
Distinct
’’ #
(
’’# $
)
’’$ %
)
’’% &
;
’’& '
}
÷÷ 
if
ÿÿ 
(
ÿÿ 
movimientos
ÿÿ #
!=
ÿÿ$ &
null
ÿÿ' +
&&
ÿÿ, .
movimientos
ÿÿ/ :
.
ÿÿ: ;
Count
ÿÿ; @
(
ÿÿ@ A
)
ÿÿA B
>
ÿÿC D
$num
ÿÿE F
)
ÿÿF G
{
ŸŸ 
Transaccion
€€ #
nuevoInventario
€€$ 3
=
€€4 5
new
€€6 9
Transaccion
€€: E
(
€€E F
$str
€€F H
,
€€H I
null
€€J N
,
€€N O

fechaHasta
€€P Z
,
€€Z [!
TransaccionSettings
€€\ o
.
€€o p
Default
€€p w
.
€€w x3
$IdTipoTransaccionInventarioHistorico€€x ú
,€€ú ù
MaestroSettings
‹‹ +
.
‹‹+ ,
Default
‹‹, 3
.
‹‹3 48
*IdDetalleMaestroUnidadDeNegocioTransversal
‹‹4 ^
,
‹‹^ _
false
‹‹` e
,
‹‹e f

fechaHasta
‹‹g q
,
‹‹q r

fechaHasta
‹‹s }
,
‹‹} ~"
TransaccionSettings‹‹ í
.‹‹í ì
Default‹‹ì ö
.‹‹ö õ%
IdComprobanteGenerico‹‹õ ∞
,‹‹∞ ±
$str
›› e
,
››e f

fechaHasta
››g q
,
››q r

idEmpleado
››s }
,
››} ~
$num›› Å
,››Å Ç
	idAlmacen››É å
,››å ç
MaestroSettings››é ù
.››ù û
Default››û •
.››• ¶+
IdDetalleMaestroMonedaSoles››¶ ¡
,››¡ ¬
$num››√ ≈
,››≈ ∆
null››« À
,››À Ã
	idAlmacen››Õ ÷
)››÷ ◊
;››◊ ÿ 
Estado_transaccion
ﬂﬂ *
estadoTransaccion
ﬂﬂ+ <
=
ﬂﬂ= >
new
ﬂﬂ? B 
Estado_transaccion
ﬂﬂC U
(
ﬂﬂU V

idEmpleado
ﬂﬂV `
,
ﬂﬂ` a
MaestroSettings
ﬂﬂb q
.
ﬂﬂq r
Default
ﬂﬂr y
.
ﬂﬂy z/
 IdDetalleMaestroEstadoConfirmadoﬂﬂz ö
,ﬂﬂö õ
fechaActualﬂﬂú ß
,ﬂﬂß ®
$strﬂﬂ© ˆ
)ﬂﬂˆ ˜
;ﬂﬂ˜ ¯
nuevoInventario
‡‡ '
.
‡‡' ( 
Estado_transaccion
‡‡( :
.
‡‡: ;
Add
‡‡; >
(
‡‡> ?
estadoTransaccion
‡‡? P
)
‡‡P Q
;
‡‡Q R
nuevosInventarios
‚‚ )
.
‚‚) *
Add
‚‚* -
(
‚‚- .
nuevoInventario
‚‚. =
)
‚‚= >
;
‚‚> ?
foreach
‰‰ 
(
‰‰  !
var
‰‰! $
concepto
‰‰% -
in
‰‰. 0
conceptosConLote
‰‰1 A
.
‰‰A B
Distinct
‰‰B J
(
‰‰J K
)
‰‰K L
)
‰‰L M
{
ÂÂ 
decimal
ÁÁ # 
cantidad_principal
ÁÁ$ 6
=
ÁÁ7 8
$num
ÁÁ9 :
;
ÁÁ: ; 
cantidad_principal
ËË .
=
ËË/ 0 
cantidad_principal
ËË1 C
+
ËËD E
(
ËËF G
ultimoInventario
ËËG W
!=
ËËX Z
null
ËË[ _
&&
ËË` b
ultimoInventario
ÈÈ ,
.
ÈÈ, -!
Detalle_transaccion
ÈÈ- @
.
ÈÈ@ A
SingleOrDefault
ÈÈA P
(
ÈÈP Q
dt
ÈÈQ S
=>
ÈÈT V
dt
ÈÈW Y
.
ÈÈY Z!
id_concepto_negocio
ÈÈZ m
==
ÈÈn p
concepto
ÈÈq y
.
ÈÈy z

IdConceptoÈÈz Ñ
&&ÈÈÖ á
dtÈÈà ä
.ÈÈä ã
loteÈÈã è
==ÈÈê í
conceptoÈÈì õ
.ÈÈõ ú
LoteÈÈú †
)ÈÈ† °
!=ÈÈ¢ §
nullÈÈ• ©
?ÈÈ™ ´
ultimoInventario
ÍÍ ,
.
ÍÍ, -!
Detalle_transaccion
ÍÍ- @
.
ÍÍ@ A
SingleOrDefault
ÍÍA P
(
ÍÍP Q
dt
ÍÍQ S
=>
ÍÍT V
dt
ÍÍW Y
.
ÍÍY Z!
id_concepto_negocio
ÍÍZ m
==
ÍÍn p
concepto
ÍÍq y
.
ÍÍy z

IdConceptoÍÍz Ñ
&&ÍÍÖ á
dtÍÍà ä
.ÍÍä ã
loteÍÍã è
==ÍÍê í
conceptoÍÍì õ
.ÍÍõ ú
LoteÍÍú †
)ÍÍ† °
.ÍÍ° ¢
cantidadÍÍ¢ ™
:ÍÍ´ ¨
$numÍÍ≠ Æ
)ÍÍÆ Ø
+
ÎÎ 
(
ÏÏ 
movimientos
ÌÌ '
.
ÌÌ' (
Where
ÌÌ( -
(
ÌÌ- .
m
ÌÌ. /
=>
ÌÌ0 2
m
ÌÌ3 4
.
ÌÌ4 5!
Id_concepto_negocio
ÌÌ5 H
==
ÌÌI K
concepto
ÌÌL T
.
ÌÌT U

IdConcepto
ÌÌU _
&&
ÌÌ` b
m
ÌÌc d
.
ÌÌd e
Lote
ÌÌe i
==
ÌÌj l
concepto
ÌÌm u
.
ÌÌu v
Lote
ÌÌv z
)
ÌÌz {
!=
ÌÌ| ~
nullÌÌ É
?ÌÌÑ Ö
movimientos
ÓÓ '
.
ÓÓ' (
Where
ÓÓ( -
(
ÓÓ- .
m
ÓÓ. /
=>
ÓÓ0 2
m
ÓÓ3 4
.
ÓÓ4 5!
Id_concepto_negocio
ÓÓ5 H
==
ÓÓI K
concepto
ÓÓL T
.
ÓÓT U

IdConcepto
ÓÓU _
&&
ÓÓ` b
m
ÓÓc d
.
ÓÓd e
Lote
ÓÓe i
==
ÓÓj l
concepto
ÓÓm u
.
ÓÓu v
Lote
ÓÓv z
)
ÓÓz {
.
ÓÓ{ |
Sum
ÓÓ| 
(ÓÓ Ä
mÓÓÄ Å
=>ÓÓÇ Ñ
mÓÓÖ Ü
.ÓÓÜ á"
Entradas_principalÓÓá ô
)ÓÓô ö
:ÓÓõ ú
$numÓÓù û
)
ÔÔ 
-
 
(
ÒÒ 
movimientos
ÚÚ (
.
ÚÚ( )
Where
ÚÚ) .
(
ÚÚ. /
m
ÚÚ/ 0
=>
ÚÚ1 3
m
ÚÚ4 5
.
ÚÚ5 6!
Id_concepto_negocio
ÚÚ6 I
==
ÚÚJ L
concepto
ÚÚM U
.
ÚÚU V

IdConcepto
ÚÚV `
&&
ÚÚa c
m
ÚÚd e
.
ÚÚe f
Lote
ÚÚf j
==
ÚÚk m
concepto
ÚÚn v
.
ÚÚv w
Lote
ÚÚw {
)
ÚÚ{ |
!=
ÚÚ} 
nullÚÚÄ Ñ
?ÚÚÖ Ü
movimientos
ÛÛ (
.
ÛÛ( )
Where
ÛÛ) .
(
ÛÛ. /
m
ÛÛ/ 0
=>
ÛÛ1 3
m
ÛÛ4 5
.
ÛÛ5 6!
Id_concepto_negocio
ÛÛ6 I
==
ÛÛJ L
concepto
ÛÛM U
.
ÛÛU V

IdConcepto
ÛÛV `
&&
ÛÛa c
m
ÛÛd e
.
ÛÛe f
Lote
ÛÛf j
==
ÛÛk m
concepto
ÛÛn v
.
ÛÛv w
Lote
ÛÛw {
)
ÛÛ{ |
.
ÛÛ| }
SumÛÛ} Ä
(ÛÛÄ Å
mÛÛÅ Ç
=>ÛÛÉ Ö
mÛÛÜ á
.ÛÛá à!
Salidas_principalÛÛà ô
)ÛÛô ö
:ÛÛõ ú
$numÛÛù û
)
ÙÙ 
;
ÙÙ 
decimal
˜˜ #!
cantidad_secundaria
˜˜$ 7
=
˜˜8 9
$num
˜˜: ;
;
˜˜; <!
cantidad_secundaria
¯¯ /
=
¯¯0 1!
cantidad_secundaria
¯¯2 E
+
¯¯F G
(
¯¯H I
decimal
¯¯I P
)
¯¯P Q
(
¯¯Q R
ultimoInventario
˘˘  0
!=
˘˘1 3
null
˘˘4 8
&&
˘˘9 ;
ultimoInventario
˙˙  0
.
˙˙0 1!
Detalle_transaccion
˙˙1 D
.
˙˙D E
SingleOrDefault
˙˙E T
(
˙˙T U
dt
˙˙U W
=>
˙˙X Z
dt
˙˙[ ]
.
˙˙] ^!
id_concepto_negocio
˙˙^ q
==
˙˙r t
concepto
˙˙u }
.
˙˙} ~

IdConcepto˙˙~ à
&&˙˙â ã
dt˙˙å é
.˙˙é è
lote˙˙è ì
==˙˙î ñ
concepto˙˙ó ü
.˙˙ü †
Lote˙˙† §
)˙˙§ •
!=˙˙¶ ®
null˙˙© ≠
?˙˙Æ Ø
ultimoInventario
˚˚  0
.
˚˚0 1!
Detalle_transaccion
˚˚1 D
.
˚˚D E
SingleOrDefault
˚˚E T
(
˚˚T U
dt
˚˚U W
=>
˚˚X Z
dt
˚˚[ ]
.
˚˚] ^!
id_concepto_negocio
˚˚^ q
==
˚˚r t
concepto
˚˚u }
.
˚˚} ~

IdConcepto˚˚~ à
&&˚˚â ã
dt˚˚å é
.˚˚é è
lote˚˚è ì
==˚˚î ñ
concepto˚˚ó ü
.˚˚ü †
Lote˚˚† §
)˚˚§ •
.˚˚• ¶#
cantidad_secundaria˚˚¶ π
:˚˚∫ ª
$num˚˚º Ω
+
¸¸  !
(
˝˝  !
movimientos
˛˛" -
.
˛˛- .
Where
˛˛. 3
(
˛˛3 4
m
˛˛4 5
=>
˛˛6 8
m
˛˛9 :
.
˛˛: ;!
Id_concepto_negocio
˛˛; N
==
˛˛O Q
concepto
˛˛R Z
.
˛˛Z [

IdConcepto
˛˛[ e
&&
˛˛f h
m
˛˛i j
.
˛˛j k
Lote
˛˛k o
==
˛˛p r
concepto
˛˛s {
.
˛˛{ |
Lote˛˛| Ä
)˛˛Ä Å
!=˛˛Ç Ñ
null˛˛Ö â
?˛˛ä ã
movimientos
ˇˇ! ,
.
ˇˇ, -
Where
ˇˇ- 2
(
ˇˇ2 3
m
ˇˇ3 4
=>
ˇˇ5 7
m
ˇˇ8 9
.
ˇˇ9 :!
Id_concepto_negocio
ˇˇ: M
==
ˇˇN P
concepto
ˇˇQ Y
.
ˇˇY Z

IdConcepto
ˇˇZ d
&&
ˇˇe g
m
ˇˇh i
.
ˇˇi j
Lote
ˇˇj n
==
ˇˇo q
concepto
ˇˇr z
.
ˇˇz {
Lote
ˇˇ{ 
)ˇˇ Ä
.ˇˇÄ Å
SumˇˇÅ Ñ
(ˇˇÑ Ö
mˇˇÖ Ü
=>ˇˇá â
mˇˇä ã
.ˇˇã å"
Entradas_principalˇˇå û
)ˇˇû ü
:ˇˇ† °
$numˇˇ¢ £
)
ÄÄ! "
-
ÅÅ! "
(
ÇÇ! "
movimientos
ÉÉ! ,
.
ÉÉ, -
Where
ÉÉ- 2
(
ÉÉ2 3
m
ÉÉ3 4
=>
ÉÉ5 7
m
ÉÉ8 9
.
ÉÉ9 :!
Id_concepto_negocio
ÉÉ: M
==
ÉÉN P
concepto
ÉÉQ Y
.
ÉÉY Z

IdConcepto
ÉÉZ d
&&
ÉÉe g
m
ÉÉh i
.
ÉÉi j
Lote
ÉÉj n
==
ÉÉo q
concepto
ÉÉr z
.
ÉÉz {
Lote
ÉÉ{ 
)ÉÉ Ä
!=ÉÉÅ É
nullÉÉÑ à
?ÉÉâ ä
movimientos
ÑÑ! ,
.
ÑÑ, -
Where
ÑÑ- 2
(
ÑÑ2 3
m
ÑÑ3 4
=>
ÑÑ5 7
m
ÑÑ8 9
.
ÑÑ9 :!
Id_concepto_negocio
ÑÑ: M
==
ÑÑN P
concepto
ÑÑQ Y
.
ÑÑY Z

IdConcepto
ÑÑZ d
&&
ÑÑe g
m
ÑÑh i
.
ÑÑi j
Lote
ÑÑj n
==
ÑÑo q
concepto
ÑÑr z
.
ÑÑz {
Lote
ÑÑ{ 
)ÑÑ Ä
.ÑÑÄ Å
SumÑÑÅ Ñ
(ÑÑÑ Ö
mÑÑÖ Ü
=>ÑÑá â
mÑÑä ã
.ÑÑã å!
Salidas_principalÑÑå ù
)ÑÑù û
:ÑÑü †
$numÑÑ° ¢
)
ÖÖ  !
)
ÖÖ! "
;
ÖÖ" #
nuevoInventario
áá +
.
áá+ ,!
Detalle_transaccion
áá, ?
.
áá? @
Add
áá@ C
(
ááC D
new
ááD G!
Detalle_transaccion
ááH [
(
áá[ \ 
cantidad_principal
áá\ n
,
áán o
concepto
ááp x
.
ááx y

IdConceptoááy É
,ááÉ Ñ
$strááÖ õ
,ááõ ú
$numááù ü
,ááü †
$numáá° £
,áá£ §
nulláá• ©
,áá© ™#
cantidad_secundariaáá´ æ
,ááæ ø
nulláá¿ ƒ
,ááƒ ≈
nulláá∆  
,áá  À
$numááÃ Œ
,ááŒ œ
$numáá– “
,áá“ ”
$numáá‘ ÷
,áá÷ ◊
conceptoááÿ ‡
.áá‡ ·
Loteáá· Â
,ááÂ Ê
nullááÁ Î
,ááÎ Ï
nullááÌ Ò
)ááÒ Ú
)ááÚ Û
;ááÛ Ù
}
àà 
}
ââ 
}
ää 
if
ãã 
(
ãã 
nuevosInventarios
ãã %
.
ãã% &
Count
ãã& +
(
ãã+ ,
)
ãã, -
>
ãã. /
$num
ãã0 1
)
ãã1 2
{
åå 
return
çç $
_crearTransaccionDatos
çç 1
.
çç1 2:
,CrearTransaccionesYDetallesTransaccionMasivo
çç2 ^
(
çç^ _
nuevosInventarios
çç_ p
)
ççp q
;
ççq r
}
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$strèè* Ö
)èèÖ Ü
;èèÜ á
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì )
(
ìì) *
$str
ìì* Q
,
ììQ R
e
ììS T
)
ììT U
;
ììU V
}
îî 
}
ïï 	
public
óó '
InventarioConceptoNegocio
óó (<
.ObtenerInventarioHistoricoPorConceptoDeNegocio
óó) W
(
óóW X
int
óóX [
	idAlmacen
óó\ e
,
óóe f
int
óóg j

idConcepto
óók u
,
óóu v
string
óów }
loteóó~ Ç
,óóÇ É
DateTimeóóÑ å
fechaóóç í
)óóí ì
{
òò 	
try
ôô 
{
öö 
DateTime
õõ 
fechaActual
õõ $
=
õõ% &
DateTimeUtil
õõ' 3
.
õõ3 4
FechaActual
õõ4 ?
(
õõ? @
)
õõ@ A
;
õõA B
DateTime
úú 
?
úú %
fechaPrimeraTransaccion
úú 1
=
úú2 3
fechaActual
úú4 ?
;
úú? @
DateTime
ûû 

fechaHasta
ûû #
=
ûû$ %
fecha
ûû& +
.
ûû+ ,
AddMilliseconds
ûû, ;
(
ûû; <
-
ûû< =
$num
ûû= >
)
ûû> ?
;
ûû? @
DateTime
üü 

fechaDesde
üü #
;
üü# $
decimal
°° 
costo_unitario
°° &
=
°°' (
$num
°°) *
;
°°* +
decimal
¢¢  
cantidad_principal
¢¢ *
=
¢¢+ ,
$num
¢¢- .
;
¢¢. /
decimal
££ !
cantidad_secundaria
££ +
=
££, -
$num
££. /
;
££/ 0
decimal
§§ 
costo_total
§§ #
=
§§$ %
$num
§§& '
;
§§' ('
InventarioConceptoNegocio
¶¶ )
ultimoInventario
¶¶* :
=
¶¶; <'
_inventarioHistoricoDatos
¶¶= V
.
¶¶V W5
'ObtenerUltimoInventarioHistoricoAntesDe
¶¶W ~
(
¶¶~ 
	idAlmacen¶¶ à
,¶¶à â

idConcepto¶¶ä î
,¶¶î ï
lote¶¶ñ ö
,¶¶ö õ
fecha¶¶ú °
)¶¶° ¢
;¶¶¢ £
costo_unitario
®® 
=
®®  
ultimoInventario
®®! 1
!=
®®2 4
null
®®5 9
?
®®: ;
ultimoInventario
®®< L
.
®®L M
CostoUnitario
®®M Z
:
®®[ \
$num
®®] ^
;
®®^ _
costo_total
©© 
=
©© 
ultimoInventario
©© .
!=
©©/ 1
null
©©2 6
?
©©7 8
ultimoInventario
©©9 I
.
©©I J

CostoTotal
©©J T
:
©©U V
$num
©©W X
;
©©X Y 
cantidad_principal
´´ "
=
´´# $
ultimoInventario
´´% 5
!=
´´6 8
null
´´9 =
?
´´> ?
ultimoInventario
´´@ P
.
´´P Q
CantidadPrincipal
´´Q b
:
´´c d
$num
´´e f
;
´´f g!
cantidad_secundaria
¨¨ #
=
¨¨$ %
ultimoInventario
¨¨& 6
!=
¨¨7 9
null
¨¨: >
?
¨¨? @
ultimoInventario
¨¨A Q
.
¨¨Q R 
CantidadSecundaria
¨¨R d
:
¨¨e f
$num
¨¨g h
;
¨¨h i
if
ÆÆ 
(
ÆÆ 
ultimoInventario
ÆÆ $
==
ÆÆ% '
null
ÆÆ( ,
)
ÆÆ- .
{
ØØ %
fechaPrimeraTransaccion
∞∞ +
=
∞∞, -'
_consultaTransaccionDatos
∞∞. G
.
∞∞G H,
ObtenerFechaPrimeraTransaccion
∞∞H f
(
∞∞f g
	idAlmacen
∞∞g p
)
∞∞p q
;
∞∞q r
}
±± 

fechaDesde
≥≥ 
=
≥≥ 
ultimoInventario
≥≥ -
!=
≥≥. 0
null
≥≥1 5
?
≥≥6 7
ultimoInventario
≥≥8 H
.
≥≥H I
Fecha
≥≥I N
.
≥≥N O
AddMilliseconds
≥≥O ^
(
≥≥^ _
$num
≥≥_ `
)
≥≥` a
:
≥≥b c%
fechaPrimeraTransaccion
≥≥d {
!=
≥≥| ~
null≥≥ É
?≥≥Ñ Ö
(≥≥Ü á
DateTime≥≥á è
)≥≥è ê'
fechaPrimeraTransaccion≥≥ê ß
:≥≥® ©
fechaActual≥≥™ µ
;≥≥µ ∂
var
∂∂ 
movimientos
∂∂ 
=
∂∂  !
_movimientosDatos
∂∂" 3
.
∂∂3 4P
BObtenerMovimientosConceptoNegocioPorEntidadInternaYConceptoNegocio
∂∂4 v
(
∂∂v w
	idAlmacen∂∂w Ä
,∂∂Ä Å

idConcepto∂∂Ç å
,∂∂å ç

fechaDesde∂∂é ò
,∂∂ò ô

fechaHasta∂∂ö §
)∂∂§ •
.∂∂• ¶
ToList∂∂¶ ¨
(∂∂¨ ≠
)∂∂≠ Æ
;∂∂Æ Ø
foreach
∑∑ 
(
∑∑ 
var
∑∑ 

movimiento
∑∑ '
in
∑∑( *
movimientos
∑∑+ 6
)
∑∑6 7
{
∏∏ 
var
ππ 
factor
ππ 
=
ππ  

movimiento
ππ! +
.
ππ+ ,
	EsIngreso
ππ, 5
?
ππ6 7
$num
ππ8 9
:
ππ: ;
-
ππ< =
$num
ππ= >
;
ππ> ? 
cantidad_principal
∫∫ &
+=
∫∫' )

movimiento
∫∫* 4
.
∫∫4 5 
Cantidad_Principal
∫∫5 G
*
∫∫H I
factor
∫∫J P
;
∫∫P Q!
cantidad_secundaria
ªª '
+=
ªª( *

movimiento
ªª+ 5
.
ªª5 6!
Cantidad_Secundaria
ªª6 I
*
ªªJ K
factor
ªªL R
;
ªªR S
costo_total
ºº 
+=
ºº  "

movimiento
ºº# -
.
ºº- .
Total
ºº. 3
*
ºº4 5
factor
ºº6 <
;
ºº< =
}
ΩΩ 
costo_unitario
ææ 
=
ææ  
(
ææ! "
costo_total
ææ" -
/
ææ. / 
cantidad_principal
ææ0 B
)
ææB C
;
ææC D
return
¿¿ 
new
¿¿ '
InventarioConceptoNegocio
¿¿ 4
(
¿¿4 5
)
¿¿5 6
{
¡¡ 
IdConceptoNegocio
¬¬ %
=
¬¬& '

idConcepto
¬¬( 2
,
¬¬2 3
Lote
√√ 
=
√√ 
lote
√√ 
,
√√  
Fecha
ƒƒ 
=
ƒƒ 

fechaHasta
ƒƒ &
,
ƒƒ& '
CantidadPrincipal
≈≈ %
=
≈≈& ' 
cantidad_principal
≈≈( :
,
≈≈: ; 
CantidadSecundaria
∆∆ &
=
∆∆' (!
cantidad_secundaria
∆∆) <
,
∆∆< =
CostoUnitario
«« !
=
««" #
costo_unitario
««$ 2
,
««2 3

CostoTotal
»» 
=
»»  
costo_total
»»! ,
}
…… 
;
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
e
ÀÀ 
)
ÀÀ 
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ 
LogicaException
ÕÕ )
(
ÕÕ) *
$str
ÕÕ* k
,
ÕÕk l
e
ÕÕm n
)
ÕÕn o
;
ÕÕo p
}
ŒŒ 
}
œœ 	
private
““ !
Detalle_transaccion
““ #3
%CrearNuevoDetalleParaInventarioLogico
““$ I
(
““I J!
Detalle_transaccion
““J ]
detalleMovimiento
““^ o
,
““o p
long
““q u 
idInventaioLogico““v á
,““á à
bool““â ç
	esEntrada““é ó
)““ó ò
{
”” 	
var
‘‘ 
factor
‘‘ 
=
‘‘ 
	esEntrada
‘‘ "
?
‘‘# $
$num
‘‘% &
:
‘‘' (
-
‘‘) *
$num
‘‘* +
;
‘‘+ ,
return
’’ 
new
’’ !
Detalle_transaccion
’’ *
(
’’* +
)
’’+ ,
{
÷÷ 
id_transaccion
◊◊ 
=
◊◊  
idInventaioLogico
◊◊! 2
,
◊◊2 3!
id_concepto_negocio
ÿÿ #
=
ÿÿ$ %
detalleMovimiento
ÿÿ& 7
.
ÿÿ7 8!
id_concepto_negocio
ÿÿ8 K
,
ÿÿK L
cantidad
ŸŸ 
=
ŸŸ 
detalleMovimiento
ŸŸ ,
.
ŸŸ, -
cantidad
ŸŸ- 5
*
ŸŸ6 7
factor
ŸŸ8 >
,
ŸŸ> ?!
cantidad_secundaria
⁄⁄ #
=
⁄⁄$ %
detalleMovimiento
⁄⁄& 7
.
⁄⁄7 8!
cantidad_secundaria
⁄⁄8 K
*
⁄⁄L M
factor
⁄⁄N T
,
⁄⁄T U
detalle
€€ 
=
€€ 
$str
€€ &
,
€€& '
precio_unitario
‹‹ 
=
‹‹  !
detalleMovimiento
‹‹" 3
.
‹‹3 4
precio_unitario
‹‹4 C
,
‹‹C D
total
›› 
=
›› 
detalleMovimiento
›› )
.
››) *
total
››* /
,
››/ 0
	id_precio
ﬁﬁ 
=
ﬁﬁ 
null
ﬁﬁ  
,
ﬁﬁ  !%
indicadorMultiproposito
ﬂﬂ '
=
ﬂﬂ( )
$num
ﬂﬂ* +
,
ﬂﬂ+ , 
id_cuenta_contable
‡‡ "
=
‡‡# $
null
‡‡% )
,
‡‡) *
lote
·· 
=
·· 
detalleMovimiento
·· (
.
··( )
lote
··) -
}
‚‚ 
;
‚‚ 
}
„„ 	
public
ÊÊ 
DateTime
ÊÊ 6
(ObtenerFechaDelUltimoInventarioHistorico
ÊÊ @
(
ÊÊ@ A
int
ÊÊA D
	idAlmacen
ÊÊE N
)
ÊÊN O
{
ÁÁ 	
try
ËË 
{
ÈÈ 
var
ÎÎ 
ultimoInventario
ÎÎ $
=
ÎÎ% &'
_inventarioHistoricoDatos
ÎÎ' @
.
ÎÎ@ A.
 ObtenerUltimoInventarioHistorico
ÎÎA a
(
ÎÎa b
	idAlmacen
ÎÎb k
)
ÎÎk l
;
ÎÎl m
if
ÏÏ 
(
ÏÏ 
ultimoInventario
ÏÏ $
!=
ÏÏ% '
null
ÏÏ( ,
)
ÏÏ, -
{
ÌÌ 
return
ÓÓ 
ultimoInventario
ÓÓ +
.
ÓÓ+ ,
fecha_inicio
ÓÓ, 8
;
ÓÓ8 9
}
ÔÔ 
throw
ÒÒ 
new
ÒÒ 
LogicaException
ÒÒ )
(
ÒÒ) *
$str
ÒÒ* f
)
ÒÒf g
;
ÒÒg h
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* S
,
ııS T
e
ııU V
)
ııV W
;
ııW X
}
ˆˆ 
}
˜˜ 	
public
˘˘ 
Transaccion
˘˘ +
ObtenerUltimoInventarioLogico
˘˘ 8
(
˘˘8 9
int
˘˘9 <
	idAlmacen
˘˘= F
)
˘˘F G
{
˙˙ 	
try
˚˚ 
{
¸¸ 
Transaccion
˝˝ 
ultimoInventario
˝˝ ,
=
˝˝- .'
_inventarioHistoricoDatos
˝˝/ H
.
˝˝H I.
 ObtenerUltimoInventarioHistorico
˝˝I i
(
˝˝i j
	idAlmacen
˝˝j s
)
˝˝s t
;
˝˝t u
return
˛˛ 
ultimoInventario
˛˛ '
;
˛˛' (
}
ˇˇ 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* X
,
ÇÇX Y
e
ÇÇZ [
)
ÇÇ[ \
;
ÇÇ\ ]
}
ÉÉ 
}
ÑÑ 	
}
ÜÜ 
}áá ˇ
RD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Concepto\Caracteristica_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class !
Caracteristica_Logica .
:/ 0"
ICaracteristica_Logica1 G
{ 
private 
readonly '
ICaracteristica_Repositorio 4&
_caracteristicaRepositorio5 O
;O P
public !
Caracteristica_Logica $
($ %'
ICaracteristica_Repositorio% @%
caracteristicaRepositorioA Z
)Z [
{ 	&
_caracteristicaRepositorio &
=' (%
caracteristicaRepositorio) B
;B C
} 	
public )
ConceptoConSusCaracteristicas ,B
6ObtenerConceptoNegocioConSusCaracteristicasYSusValores- c
(c d
intd g
idConceptoNegocioh y
)y z
{ 	
try 
{   
var!! 
concepto!! 
=!! &
_caracteristicaRepositorio!! 9
.!!9 :B
6ObtenerConceptoNegocioConSusCaracteristicasYSusValores!!: p
(!!p q
idConceptoNegocio	!!q Ç
)
!!Ç É
;
!!É Ñ
concepto"" 
."" 
Caracteristicas"" (
.""( )
ForEach"") 0
(""0 1
c""1 2
=>""3 5
c""6 7
.""7 8
Nombre""8 >
=""? @
c""A B
.""B C
Nombre""C I
.""I J
ToLower""J Q
(""Q R
)""R S
)""S T
;""T U
concepto## 
.## 
Caracteristicas## (
.##( )
ForEach##) 0
(##0 1
c##1 2
=>##3 5
c##6 7
.##7 8
Valor##8 =
=##> ?
c##@ A
.##A B
Valor##B G
.##G H
ToLower##H O
(##O P
)##P Q
)##Q R
;##R S
return$$ 
concepto$$ 
;$$  
}%% 
catch&& 
(&& 
	Exception&& 
e&& 
)&& 
{'' 
throw(( 
new(( 
LogicaException(( )
((() *
$str((* t
,((t u
e((v w
)((w x
;((x y
})) 
}** 	
}++ 
},, Éè
TD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Establecimientos\Sucursal_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Establecimientos# 3
{ 
public 

class 
Sucursal_Logica  
:! "
ISucursal_Logica# 3
{ 
private 
readonly (
IEstablecimiento_Repositorio 5'
_establecimientoRepositorio6 Q
;Q R
private 
readonly 
IActor_Repositorio +
_actorRepositorio, =
;= >
public 
Sucursal_Logica 
( (
IEstablecimiento_Repositorio ;&
establecimientoRepositorio< V
,V W
IActor_RepositorioX j
actorRepositoriok {
){ |
{ 	'
_establecimientoRepositorio '
=( )&
establecimientoRepositorio* D
;D E
_actorRepositorio 
= 
actorRepositorio  0
;0 1
} 	
public!! 
Actor!! "
CrearActorParaSucursal!! +
(!!+ ,
int!!, /
idActor!!0 7
,!!7 8
string!!9 ?#
informacionPublicitaria!!@ W
,!!W X
string!!Y _
nombre!!` f
,!!f g
string!!h n
nombreInterno!!o |
,!!| }
string	!!~ Ñ
telefono
!!Ö ç
,
!!ç é
string
!!è ï
correo
!!ñ ú
,
!!ú ù
	Direccion
!!û ß
	direccion
!!® ±
,
!!± ≤
byte
!!≥ ∑
[
!!∑ ∏
]
!!∏ π
foto
!!∫ æ
)
!!æ ø
{"" 	
telefono## 
=## 
telefono## 
??##  "
$str### %
;##% &
correo$$ 
=$$ 
correo$$ 
??$$ 
$str$$ !
;$$! "$
EstablecimientoComercial%% $
sede%%% )
=%%* +'
_establecimientoRepositorio%%, G
.%%G H+
ObtenerEstablecimientoComercial%%H g
(%%g h
ActorSettings%%h u
.%%u v
Default%%v }
.%%} ~
IdActorNegocioSede	%%~ ê
)
%%ê ë
;
%%ë í
string&& $
numeroDocumentoIdentidad&& +
=&&, -
sede&&. 2
.&&2 3
DocumentoIdentidad&&3 E
;&&E F
int'' 
idTipoPersona'' 
='' 
sede''  $
.''$ %
IdTipoPersona''% 2
;''2 3
int(( 
idEstadoLegalActor(( "
=((# $
sede((% )
.(() *
IdEstadoLegal((* 7
;((7 8
int)) 
idClaseActor)) 
=)) 
sede)) #
.))# $
IdClaseActor))$ 0
;))0 1
Actor** 
actor** 
;** 
if++ 
(++ 
idActor++ 
==++ 
$num++ 
)++ 
{,, 
actor-- 
=-- 
new-- 
Actor-- !
(--! "
)--" #
{.. "
id_documento_identidad// *
=//+ ,
ActorSettings//- :
.//: ;
Default//; B
.//B C'
IdTipoDocumentoIdentidadRuc//C ^
,//^ _
fecha_nacimiento00 $
=00% &
DateTimeUtil00' 3
.003 4
FechaActual004 ?
(00? @
)00@ A
,00A B&
numero_documento_identidad11 .
=11/ 0$
numeroDocumentoIdentidad111 I
,11I J
primer_nombre22 !
=22" #
nombre22$ *
,22* +
segundo_nombre33 "
=33# $
$str33% '
,33' (
telefono44 
=44 
telefono44 '
,44' (
id_tipo_actor55 !
=55" #
idTipoPersona55$ 1
,551 2
id_clase_actor66 "
=66# $
idClaseActor66% 1
,661 2
id_estado_legal77 #
=77$ %
idEstadoLegalActor77& 8
,778 9
correo88 
=88 
correo88 #
,88# $
tercer_nombre99 !
=99" #
nombreInterno99$ 1
,991 2

pagina_web:: 
=::  
$str::! #
,::# $&
informacion_multiproposito;; .
=;;/ 0#
informacionPublicitaria;;1 H
??;;I K
$str;;L N
}<< 
;<< 
}== 
else>> 
{?? 
actor@@ 
=@@ 
new@@ 
Actor@@ !
(@@! "
)@@" #
{AA 
idBB 
=BB 
idActorBB  
,BB  !"
id_documento_identidadCC *
=CC+ ,
ActorSettingsCC- :
.CC: ;
DefaultCC; B
.CCB C'
IdTipoDocumentoIdentidadRucCCC ^
,CC^ _
fecha_nacimientoDD $
=DD% &
DateTimeUtilDD' 3
.DD3 4
FechaActualDD4 ?
(DD? @
)DD@ A
,DDA B&
numero_documento_identidadEE .
=EE/ 0$
numeroDocumentoIdentidadEE1 I
,EEI J
primer_nombreFF !
=FF" #
nombreFF$ *
,FF* +
segundo_nombreGG "
=GG# $
$strGG% '
,GG' (
telefonoHH 
=HH 
telefonoHH '
,HH' (
id_tipo_actorII !
=II" #
idTipoPersonaII$ 1
,II1 2
id_clase_actorJJ "
=JJ# $
idClaseActorJJ% 1
,JJ1 2
id_estado_legalKK #
=KK$ %
idEstadoLegalActorKK& 8
,KK8 9
correoLL 
=LL 
correoLL #
,LL# $
tercer_nombreMM !
=MM" #
nombreInternoMM$ 1
,MM1 2

pagina_webNN 
=NN  
$strNN! #
,NN# $&
informacion_multipropositoOO .
=OO/ 0#
informacionPublicitariaOO1 H
??OOI K
$strOOL N
}PP 
;PP 
}QQ 
ifRR 
(RR 
fotoRR 
!=RR 
nullRR 
)RR 
{SS 
actorTT 
.TT 
FotoTT 
=TT 
	CrearFotoTT &
(TT& '
fotoTT' +
)TT+ ,
;TT, -
}UU 
elseVV 
{WW 
actorXX 
.XX 
id_fotoXX 
=XX 
ActorSettingsXX  -
.XX- .
DefaultXX. 5
.XX5 6!
IdFotoActorPorDefectoXX6 K
;XXK L
}YY 
ifZZ 
(ZZ 
	direccionZZ 
!=ZZ 
nullZZ !
)ZZ! "
{[[ 
actor\\ 
.\\ 
	Direccion\\ 
=\\  !
CrearDirecciones\\" 2
(\\2 3
	direccion\\3 <
)\\< =
;\\= >
}]] 
return^^ 
actor^^ 
;^^ 
}__ 	
publicaa 
OperationResultaa 
CrearSucursalaa ,
(aa, -
stringaa- 3!
codigoEstablecimientoaa4 I
,aaI J
stringaaK Q(
codigoEstablecimientoDigemidaaR n
,aan o
stringaap v$
informacionPublicitaria	aaw é
,
aaé è
string
aaê ñ
nombre
aaó ù
,
aaù û
string
aaü •
nombreInterno
aa¶ ≥
,
aa≥ ¥
string
aaµ ª
telefono
aaº ƒ
,
aaƒ ≈
string
aa∆ Ã
correo
aaÕ ”
,
aa” ‘
	Direccion
aa’ ﬁ
	direccion
aaﬂ Ë
,
aaË È
byte
aaÍ Ó
[
aaÓ Ô
]
aaÔ 
foto
aaÒ ı
)
aaı ˆ
{bb 	
trycc 
{dd (
codigoEstablecimientoDigemidee ,
=ee- .
ActorSettingsee/ <
.ee< =
Defaultee= D
.eeD ED
8PermitirRegistroCodigoDigemidEnEstableciemientoComercialeeE }
?ee~ *
codigoEstablecimientoDigemid
eeÄ ú
:
eeù û
null
eeü £
;
ee£ §!
codigoEstablecimientoff %
=ff& '!
codigoEstablecimientoff( =
??ff> @
$strffA C
;ffC D
DateTimegg 
fechaActualgg $
=gg% &
DateTimeUtilgg' 3
.gg3 4
FechaActualgg4 ?
(gg? @
)gg@ A
;ggA B
DateTimehh 
fechaFinhh !
=hh" #
fechaActualhh$ /
.hh/ 0
AddYearshh0 8
(hh8 9
ActorSettingshh9 F
.hhF G
DefaulthhG N
.hhN OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	hhO Ü
)
hhÜ á
;
hhá à
Actor_negocioii 
sucursalii &
=ii' (
newii) ,
Actor_negocioii- :
(ii: ;
ActorSettingsii; H
.iiH I
DefaultiiI P
.iiP Q
IdRolSucursaliiQ ^
,ii^ _
fechaActualii` k
,iik l
fechaFiniim u
,iiu v"
codigoEstablecimiento	iiw å
,
iiå ç
true
iié í
,
iií ì
false
iiî ô
,
iiô ö
$str
iiõ ù
)
iiù û
{jj 
Actorkk 
=kk "
CrearActorParaSucursalkk 2
(kk2 3
$numkk3 4
,kk4 5#
informacionPublicitariakk6 M
,kkM N
nombrekkO U
,kkU V
nombreInternokkW d
,kkd e
telefonokkf n
,kkn o
correokkp v
,kkv w
	direccion	kkx Å
,
kkÅ Ç
foto
kkÉ á
)
kká à
}ll 
;ll 
sucursalmm 
.mm 
extension_jsonmm '
=mm( )(
codigoEstablecimientoDigemidmm* F
==mmG I
nullmmJ N
?mmO P
$strmmQ S
:mmT U
$strmmV k
+mml m)
codigoEstablecimientoDigemid	mmn ä
+
mmã å
$str
mmç ì
;
mmì î
returnnn 
_actorRepositorionn (
.nn( )
CrearActorNegocionn) :
(nn: ;
sucursalnn; C
)nnC D
;nnD E
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
returnrr 
newrr 
OperationResultrr *
(rr* +
err+ ,
)rr, -
;rr- .
}ss 
}tt 	
publicvv 
OperationResultvv 
ActualizarSucursalvv 1
(vv1 2
intvv2 5
idActorvv6 =
,vv= >
intvv? B

idSucursalvvC M
,vvM N
stringvvO U!
codigoEstablecimientovvV k
,vvk l
stringvvm s)
codigoEstablecimientoDigemid	vvt ê
,
vvê ë
string
vví ò%
informacionPublicitaria
vvô ∞
,
vv∞ ±
string
vv≤ ∏
nombre
vvπ ø
,
vvø ¿
string
vv¡ «
nombreInterno
vv» ’
,
vv’ ÷
string
vv◊ ›
telefono
vvﬁ Ê
,
vvÊ Á
string
vvË Ó
correo
vvÔ ı
,
vvı ˆ
	Direccion
vv˜ Ä
	direccion
vvÅ ä
,
vvä ã
byte
vvå ê
[
vvê ë
]
vvë í
foto
vvì ó
)
vvó ò
{ww 	
tryxx 
{zz (
codigoEstablecimientoDigemid{{ ,
={{- .
ActorSettings{{/ <
.{{< =
Default{{= D
.{{D ED
8PermitirRegistroCodigoDigemidEnEstableciemientoComercial{{E }
?{{~ *
codigoEstablecimientoDigemid
{{Ä ú
:
{{ù û
null
{{ü £
;
{{£ §
DateTime|| 
fechaActual|| $
=||% &
DateTimeUtil||' 3
.||3 4
FechaActual||4 ?
(||? @
)||@ A
;||A B
DateTime}} 
fechaFin}} !
=}}" #
fechaActual}}$ /
.}}/ 0
AddYears}}0 8
(}}8 9
ActorSettings}}9 F
.}}F G
Default}}G N
.}}N OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	}}O Ü
)
}}Ü á
;
}}á à
Actor_negocio~~ 
sucursal~~ &
=~~' (
new~~) ,
Actor_negocio~~- :
(~~: ;

idSucursal~~; E
,~~E F
idActor~~G N
,~~N O
ActorSettings~~P ]
.~~] ^
Default~~^ e
.~~e f
IdRolSucursal~~f s
,~~s t
fechaActual	~~u Ä
,
~~Ä Å
fechaFin
~~Ç ä
,
~~ä ã#
codigoEstablecimiento
~~å °
,
~~° ¢
true
~~£ ß
,
~~ß ®
false
~~© Æ
,
~~Æ Ø
$str
~~∞ ≤
)
~~≤ ≥
{ 
Actor
ÄÄ 
=
ÄÄ $
CrearActorParaSucursal
ÄÄ 2
(
ÄÄ2 3
idActor
ÄÄ3 :
,
ÄÄ: ;%
informacionPublicitaria
ÄÄ< S
,
ÄÄS T
nombre
ÄÄU [
,
ÄÄ[ \
nombreInterno
ÄÄ] j
,
ÄÄj k
telefono
ÄÄl t
,
ÄÄt u
correo
ÄÄv |
,
ÄÄ| }
	direccionÄÄ~ á
,ÄÄá à
fotoÄÄâ ç
)ÄÄç é
}
ÅÅ 
;
ÅÅ 
sucursal
ÇÇ 
.
ÇÇ 
extension_json
ÇÇ '
=
ÇÇ( )*
codigoEstablecimientoDigemid
ÇÇ* F
==
ÇÇG I
null
ÇÇJ N
?
ÇÇO P
$str
ÇÇQ S
:
ÇÇT U
$str
ÇÇV k
+
ÇÇl m+
codigoEstablecimientoDigemidÇÇn ä
+ÇÇã å
$strÇÇç ì
;ÇÇì î
return
ÉÉ 
_actorRepositorio
ÉÉ (
.
ÉÉ( )?
1ActualizarActorNegocioSinTomarEnCuentaAParametros
ÉÉ) Z
(
ÉÉZ [
sucursal
ÉÉ[ c
)
ÉÉc d
;
ÉÉd e
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
ÜÜ 
return
áá 
new
áá 
OperationResult
áá *
(
áá* +
e
áá+ ,
)
áá, -
;
áá- .
}
àà 
}
ââ 	
public
ãã 
List
ãã 
<
ãã 
Sucursal
ãã 
>
ãã '
ObtenerSucursalesVigentes
ãã 7
(
ãã7 8
)
ãã8 9
{
åå 	
try
çç 
{
éé 
return
èè 
Sucursal
èè 
.
èè  
Convert
èè  '
(
èè' (
_actorRepositorio
èè( 9
.
èè9 :6
(ObtenerActorDeNegocioPorRolVigentesAhora
èè: b
(
èèb c
ActorSettings
èèc p
.
èèp q
Default
èèq x
.
èèx y
IdRolSucursalèèy Ü
)èèÜ á
.èèá à
ToListèèà é
(èèé è
)èèè ê
)èèê ë
;èèë í
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
e
ìì 
;
ìì 
}
îî 
}
ïï 	
public
óó &
EstablecimientoComercial
óó '0
"ObtenerSucursalComoEstablecimiento
óó( J
(
óóJ K
int
óóK N

idSucursal
óóO Y
)
óóY Z
{
òò 	
try
ôô 
{
öö 
return
õõ )
_establecimientoRepositorio
õõ 2
.
õõ2 3-
ObtenerEstablecimientoComercial
õõ3 R
(
õõR S

idSucursal
õõS ]
)
õõ] ^
;
õõ^ _
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
e
ùù 
)
ùù 
{
ûû 
throw
üü 
e
üü 
;
üü 
}
†† 
}
°° 	
public
¢¢ &
EstablecimientoComercial
¢¢ '
ObtenerSucursal
¢¢( 7
(
¢¢7 8
int
¢¢8 ;

idSucursal
¢¢< F
)
¢¢F G
{
££ 	
try
§§ 
{
•• 
return
¶¶ )
_establecimientoRepositorio
¶¶ 2
.
¶¶2 3-
ObtenerEstablecimientoComercial
¶¶3 R
(
¶¶R S

idSucursal
¶¶S ]
)
¶¶] ^
;
¶¶^ _
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
©© 
throw
™™ 
e
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
public
ÆÆ 
OperationResult
ÆÆ 
DarDeBajaSucursal
ÆÆ 0
(
ÆÆ0 1
int
ÆÆ1 4

idSucursal
ÆÆ5 ?
)
ÆÆ? @
{
ØØ 	
try
∞∞ 
{
±± 
return
≤≤ 
_actorRepositorio
≤≤ (
.
≤≤( )(
DarDeBajaActorNegocioAhora
≤≤) C
(
≤≤C D

idSucursal
≤≤D N
,
≤≤N O
ActorSettings
≤≤P ]
.
≤≤] ^
Default
≤≤^ e
.
≤≤e f
IdRolSucursal
≤≤f s
)
≤≤s t
;
≤≤t u
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∂∂ 
e
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
∫∫ 
List
∫∫ 
<
∫∫ 
	Direccion
∫∫ 
>
∫∫ 
CrearDirecciones
∫∫ /
(
∫∫/ 0
	Direccion
∫∫0 9
	direccion
∫∫: C
)
∫∫C D
{
ªª 	
List
ºº 
<
ºº 
	Direccion
ºº 
>
ºº 
direcciones
ºº '
=
ºº( )
new
ºº* -
List
ºº. 2
<
ºº2 3
	Direccion
ºº3 <
>
ºº< =
(
ºº= >
)
ºº> ?
;
ºº? @
direcciones
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
	direccion
ΩΩ %
)
ΩΩ% &
;
ΩΩ& '
return
ææ 
direcciones
ææ 
;
ææ 
}
¿¿ 	
public
¬¬ 
Foto
¬¬ 
	CrearFoto
¬¬ 
(
¬¬ 
byte
¬¬ "
[
¬¬" #
]
¬¬# $
foto
¬¬% )
)
¬¬) *
{
√√ 	
Foto
ƒƒ 

fotografia
ƒƒ 
=
ƒƒ 
new
ƒƒ !
Foto
ƒƒ" &
(
ƒƒ& '
)
ƒƒ' (
;
ƒƒ( )

fotografia
≈≈ 
.
≈≈ 
imagen
≈≈ 
=
≈≈ 
foto
≈≈  $
;
≈≈$ %
return
∆∆ 

fotografia
∆∆ 
;
∆∆ 
}
«« 	
}
…… 
}   ï∞
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Establecimientos\Sede_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Establecimientos# 3
{ 
public 

class 
Sede_Logica 
: 
ISede_Logica +
{ 
private 
readonly (
IEstablecimiento_Repositorio 5'
_establecimientoRepositorio6 Q
;Q R
private 
readonly 
ISede_Repositorio *
_sedeRepositorio+ ;
;; <
private 
readonly 
IActor_Repositorio +
_actorRepositorio, =
;= >
private 
readonly )
ICentroDeAtencion_Repositorio 6&
_centroAtencionRepositorio7 Q
;Q R
private 
readonly *
IValidacionActorNegocio_Logica 7)
_validacionActorNegocioLogica8 U
;U V
public 
Sede_Logica 
( (
IEstablecimiento_Repositorio 7&
establecimientoRepositorio8 R
,R S
ISede_RepositorioT e
sedeRepositoriof u
,u v
IActor_Repositorio	w â
actorRepositorio
ä ö
,
ö õ+
ICentroDeAtencion_Repositorio
ú π'
centroAtencionRepositorio
∫ ”
,
” ‘,
IValidacionActorNegocio_Logica
’ Û*
validacionActorNegocioLogica
Ù ê
)
ê ë
{ 	'
_establecimientoRepositorio '
=( )&
establecimientoRepositorio* D
;D E
_sedeRepositorio 
= 
sedeRepositorio .
;. /
_actorRepositorio 
= 
actorRepositorio  0
;0 1&
_centroAtencionRepositorio &
=' (%
centroAtencionRepositorio) B
;B C)
_validacionActorNegocioLogica )
=* +(
validacionActorNegocioLogica, H
;H I
} 	
public"" 
Actor"" 
CrearActorParaSede"" '
(""' (
int""( +
idActor"", 3
,""3 4
string""5 ;$
numeroDocumentoIdentidad""< T
,""T U
string""V \!
codigoEstablecimiento""] r
,""r s
string""t z$
informacionPublicitaria	""{ í
,
""í ì
int
""î ó
idTipoPersona
""ò •
,
""• ¶
int
""ß ™
idClaseActor
""´ ∑
,
""∑ ∏
string
""π ø
razonSocial
""¿ À
,
""À Ã
string
""Õ ”
nombreComercial
""‘ „
,
""„ ‰
string
""Â Î
nombreInterno
""Ï ˘
,
""˘ ˙
string
""˚ Å
telefono
""Ç ä
,
""ä ã
string
""å í
correo
""ì ô
,
""ô ö
	Direccion
""õ §
	direccion
""• Æ
,
""Æ Ø
byte
""∞ ¥
[
""¥ µ
]
""µ ∂
foto
""∑ ª
)
""ª º
{## 	
if$$ 
($$ $
numeroDocumentoIdentidad$$ (
.$$( )
Trim$$) -
($$- .
)$$. /
.$$/ 0
Length$$0 6
!=$$7 9
$num$$: <
)$$< =
throw$$> C
new$$D G
	Exception$$H Q
($$Q R
$str	$$R ê
)
$$ê ë
;
$$ë í
telefono%% 
=%% 
telefono%% 
??%%  "
$str%%# %
;%%% &
correo&& 
=&& 
correo&& 
??&& 
$str&& !
;&&! "
int'' 
idEstadoLegalActor'' "
;''" #
if(( 
((( 
idTipoPersona(( 
==((  
ActorSettings((! .
.((. /
Default((/ 6
.((6 7%
IdTipoActorPersonaNatural((7 P
)((P Q
{)) 
idClaseActor** 
=** 
idClaseActor** +
!=**, .
$num**/ 0
?**1 2
idClaseActor**3 ?
:**@ A
ActorSettings**B O
.**O P
Default**P W
.**W X0
$IdClaseActorPersonaNaturalPorDefecto**X |
;**| }
idEstadoLegalActor++ "
=++# $
ActorSettings++% 2
.++2 3
Default++3 :
.++: ;6
*IdEstadoLegalActorPersonaNaturalPorDefecto++; e
;++e f
},, 
else-- 
if-- 
(-- 
idTipoPersona-- "
==--# %
ActorSettings--& 3
.--3 4
Default--4 ;
.--; <&
IdTipoActorPersonaJuridica--< V
)--V W
{.. 
idClaseActor// 
=// 
idClaseActor// +
!=//, .
$num/// 0
?//1 2
idClaseActor//3 ?
://@ A
ActorSettings//B O
.//O P
Default//P W
.//W X1
%IdClaseActorPersonaJuridicaPorDefecto//X }
;//} ~
idEstadoLegalActor00 "
=00# $
ActorSettings00% 2
.002 3
Default003 :
.00: ;7
+IdEstadoLegalActorPersonaJuridicaPorDefecto00; f
;00f g
}11 
else22 
{33 
idClaseActor44 
=44 
idClaseActor44 +
!=44, .
$num44/ 0
?441 2
idClaseActor443 ?
:44@ A
ActorSettings44B O
.44O P
Default44P W
.44W X0
$IdClaseActorEntidadInternaPorDefecto44X |
;44| }
idEstadoLegalActor55 "
=55# $
ActorSettings55% 2
.552 3
Default553 :
.55: ;6
*IdEstadoLegalActorEntidadInternaPorDefecto55; e
;55e f
}66 
Actor77 
actor77 
;77 
if88 
(88 
idActor88 
==88 
$num88 
)88 
{99 
actor:: 
=:: 
new:: 
Actor:: !
(::! "
)::" #
{;; "
id_documento_identidad<< *
=<<+ ,
ActorSettings<<- :
.<<: ;
Default<<; B
.<<B C'
IdTipoDocumentoIdentidadRuc<<C ^
,<<^ _
fecha_nacimiento== $
===% &
DateTimeUtil==' 3
.==3 4
FechaActual==4 ?
(==? @
)==@ A
,==A B&
numero_documento_identidad>> .
=>>/ 0$
numeroDocumentoIdentidad>>1 I
,>>I J
primer_nombre?? !
=??" #
razonSocial??$ /
,??/ 0
segundo_nombre@@ "
=@@# $
nombreComercial@@% 4
,@@4 5
telefonoAA 
=AA 
telefonoAA '
,AA' (
id_tipo_actorBB !
=BB" #
idTipoPersonaBB$ 1
,BB1 2
id_clase_actorCC "
=CC# $
idClaseActorCC% 1
,CC1 2
id_estado_legalDD #
=DD$ %
idEstadoLegalActorDD& 8
,DD8 9
correoEE 
=EE 
correoEE #
,EE# $
tercer_nombreFF !
=FF" #
nombreInternoFF$ 1
,FF1 2

pagina_webGG 
=GG  
$strGG! #
,GG# $&
informacion_multipropositoHH .
=HH/ 0#
informacionPublicitariaHH1 H
??HHI K
$strHHL N
}II 
;II 
}JJ 
elseKK 
{LL 
actorMM 
=MM 
newMM 
ActorMM !
(MM! "
)MM" #
{NN 
idOO 
=OO 
idActorOO  
,OO  !"
id_documento_identidadPP *
=PP+ ,
ActorSettingsPP- :
.PP: ;
DefaultPP; B
.PPB C'
IdTipoDocumentoIdentidadRucPPC ^
,PP^ _
fecha_nacimientoQQ $
=QQ% &
DateTimeUtilQQ' 3
.QQ3 4
FechaActualQQ4 ?
(QQ? @
)QQ@ A
,QQA B&
numero_documento_identidadRR .
=RR/ 0$
numeroDocumentoIdentidadRR1 I
,RRI J
primer_nombreSS !
=SS" #
razonSocialSS$ /
,SS/ 0
segundo_nombreTT "
=TT# $
nombreComercialTT% 4
,TT4 5
telefonoUU 
=UU 
telefonoUU '
,UU' (
id_tipo_actorVV !
=VV" #
idTipoPersonaVV$ 1
,VV1 2
id_clase_actorWW "
=WW# $
idClaseActorWW% 1
,WW1 2
id_estado_legalXX #
=XX$ %
idEstadoLegalActorXX& 8
,XX8 9
correoYY 
=YY 
correoYY #
,YY# $
tercer_nombreZZ !
=ZZ" #
nombreInternoZZ$ 1
,ZZ1 2

pagina_web[[ 
=[[  
$str[[! #
,[[# $&
informacion_multiproposito\\ .
=\\/ 0#
informacionPublicitaria\\1 H
??\\I K
$str\\L N
}]] 
;]] 
}^^ 
if__ 
(__ 
foto__ 
!=__ 
null__ 
)__ 
{`` 
actoraa 
.aa 
Fotoaa 
=aa 
	CrearFotoaa &
(aa& '
fotoaa' +
)aa+ ,
;aa, -
}bb 
elsecc 
{dd 
actoree 
.ee 
id_fotoee 
=ee 
ActorSettingsee  -
.ee- .
Defaultee. 5
.ee5 6!
IdFotoActorPorDefectoee6 K
;eeK L
}ff 
ifgg 
(gg 
	direcciongg 
!=gg 
nullgg !
)gg! "
{hh 
actorii 
.ii 
	Direccionii 
=ii  !
CrearDireccionesii" 2
(ii2 3
	direccionii3 <
)ii< =
;ii= >
}jj 
returnkk 
actorkk 
;kk 
}ll 	
publicnn 
OperationResultnn 
	CrearSedenn (
(nn( )
stringnn) /$
numeroDocumentoIdentidadnn0 H
,nnH I
stringnnJ P!
codigoEstablecimientonnQ f
,nnf g
stringnnh n)
codigoEstablecimientoDigemid	nno ã
,
nnã å
string
nnç ì%
informacionPublicitaria
nnî ´
,
nn´ ¨
int
nn≠ ∞
idTipoPersona
nn± æ
,
nnæ ø
int
nn¿ √
idClaseActor
nnƒ –
,
nn– —
string
nn“ ÿ
razonSocial
nnŸ ‰
,
nn‰ Â
string
nnÊ Ï
nombreComercial
nnÌ ¸
,
nn¸ ˝
string
nn˛ Ñ
nombreInterno
nnÖ í
,
nní ì
string
nnî ö
telefono
nnõ £
,
nn£ §
string
nn• ´
correo
nn¨ ≤
,
nn≤ ≥
	Direccion
nn¥ Ω
	direccion
nnæ «
,
nn« »
byte
nn… Õ
[
nnÕ Œ
]
nnŒ œ
foto
nn– ‘
)
nn‘ ’
{oo 	
trypp 
{qq (
codigoEstablecimientoDigemidrr ,
=rr- .
ActorSettingsrr/ <
.rr< =
Defaultrr= D
.rrD ED
8PermitirRegistroCodigoDigemidEnEstableciemientoComercialrrE }
?rr~ *
codigoEstablecimientoDigemid
rrÄ ú
:
rrù û
null
rrü £
;
rr£ §!
codigoEstablecimientoss %
=ss& '!
codigoEstablecimientoss( =
??ss> @
$strssA C
;ssC D)
_validacionActorNegocioLogicauu -
.uu- .(
ValidarExistenciaDeDocumentouu. J
(uuJ K
ActorSettingsuuK X
.uuX Y
DefaultuuY `
.uu` a'
IdTipoDocumentoIdentidadRucuua |
,uu| }%
numeroDocumentoIdentidad	uu~ ñ
)
uuñ ó
;
uuó ò
DateTimevv 
fechaIniciovv $
=vv% &
DateTimeUtilvv' 3
.vv3 4
FechaActualvv4 ?
(vv? @
)vv@ A
;vvA B
DateTimeww 
fechaFinww !
=ww" #
fechaInicioww$ /
.ww/ 0
AddYearsww0 8
(ww8 9
ActorSettingsww9 F
.wwF G
DefaultwwG N
.wwN OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	wwO Ü
)
wwÜ á
;
wwá à
Actor_negocioxx 
sedexx "
=xx# $
newxx% (
Actor_negocioxx) 6
(xx6 7
ActorSettingsxx7 D
.xxD E
DefaultxxE L
.xxL M
	IdRolSedexxM V
,xxV W
fechaInicioxxX c
,xxc d
fechaFinxxe m
,xxm n
$strxxo q
,xxq r
truexxs w
,xxw x
falsexxy ~
,xx~ 
$str
xxÄ Ç
)
xxÇ É
{yy 
Actorzz 
=zz 
CrearActorParaSedezz .
(zz. /
$numzz/ 0
,zz0 1$
numeroDocumentoIdentidadzz2 J
,zzJ K!
codigoEstablecimientozzL a
,zza b#
informacionPublicitariazzc z
,zzz {
idTipoPersona	zz| â
,
zzâ ä
idClaseActor
zzã ó
,
zzó ò
razonSocial
zzô §
,
zz§ •
nombreComercial
zz¶ µ
,
zzµ ∂
nombreInterno
zz∑ ƒ
,
zzƒ ≈
telefono
zz∆ Œ
,
zzŒ œ
correo
zz– ÷
,
zz÷ ◊
	direccion
zzÿ ·
,
zz· ‚
foto
zz„ Á
)
zzÁ Ë
}{{ 
;{{ 
sede|| 
.|| 
extension_json|| #
=||$ %(
codigoEstablecimientoDigemid||& B
==||C E
null||F J
?||K L
null||M Q
:||R S
$str||T i
+||j k)
codigoEstablecimientoDigemid	||l à
+
||â ä
$str
||ã ë
;
||ë í
return}} 
_actorRepositorio}} (
.}}( )
CrearActorNegocio}}) :
(}}: ;
sede}}; ?
)}}? @
;}}@ A
}~~ 
catch 
( 
	Exception 
e 
) 
{
ÄÄ 
return
ÅÅ 
new
ÅÅ 
OperationResult
ÅÅ *
(
ÅÅ* +
e
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
}
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
OperationResult
ÖÖ 
ActualizarSede
ÖÖ -
(
ÖÖ- .
int
ÖÖ. 1
idActor
ÖÖ2 9
,
ÖÖ9 :
int
ÖÖ; >
idSede
ÖÖ? E
,
ÖÖE F
string
ÖÖG M&
numeroDocumentoIdentidad
ÖÖN f
,
ÖÖf g
string
ÖÖh n$
codigoEstablecimientoÖÖo Ñ
,ÖÖÑ Ö
stringÖÖÜ å,
codigoEstablecimientoDigemidÖÖç ©
,ÖÖ© ™
stringÖÖ´ ±'
informacionPublicitariaÖÖ≤ …
,ÖÖ…  
intÖÖÀ Œ
idTipoPersonaÖÖœ ‹
,ÖÖ‹ ›
intÖÖﬁ ·
idClaseActorÖÖ‚ Ó
,ÖÖÓ Ô
stringÖÖ ˆ
razonSocialÖÖ˜ Ç
,ÖÖÇ É
stringÖÖÑ ä
nombreComercialÖÖã ö
,ÖÖö õ
stringÖÖú ¢
nombreInternoÖÖ£ ∞
,ÖÖ∞ ±
stringÖÖ≤ ∏
telefonoÖÖπ ¡
,ÖÖ¡ ¬
stringÖÖ√ …
correoÖÖ  –
,ÖÖ– —
	DireccionÖÖ“ €
	direccionÖÖ‹ Â
,ÖÖÂ Ê
byteÖÖÁ Î
[ÖÖÎ Ï
]ÖÖÏ Ì
fotoÖÖÓ Ú
)ÖÖÚ Û
{
ÜÜ 	
try
áá 
{
àà *
codigoEstablecimientoDigemid
ââ ,
=
ââ- .
ActorSettings
ââ/ <
.
ââ< =
Default
ââ= D
.
ââD EF
8PermitirRegistroCodigoDigemidEnEstableciemientoComercial
ââE }
?
ââ~ ,
codigoEstablecimientoDigemidââÄ ú
:ââù û
nullââü £
;ââ£ §
DateTime
ää 
fechaInicio
ää $
=
ää% &
DateTimeUtil
ää' 3
.
ää3 4
FechaActual
ää4 ?
(
ää? @
)
ää@ A
;
ääA B
DateTime
ãã 
fechaFin
ãã !
=
ãã" #
fechaInicio
ãã$ /
.
ãã/ 0
AddYears
ãã0 8
(
ãã8 9
ActorSettings
ãã9 F
.
ããF G
Default
ããG N
.
ããN OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaããO Ü
)ããÜ á
;ããá à
Actor_negocio
åå 
sede
åå "
=
åå# $
new
åå% (
Actor_negocio
åå) 6
(
åå6 7
idSede
åå7 =
,
åå= >
idActor
åå? F
,
ååF G
ActorSettings
ååH U
.
ååU V
Default
ååV ]
.
åå] ^
	IdRolSede
åå^ g
,
ååg h
fechaInicio
ååi t
,
ååt u
fechaFin
ååv ~
,
åå~ %
codigoEstablecimientoååÄ ï
,ååï ñ
trueååó õ
,ååõ ú
falseååù ¢
,åå¢ £
$stråå§ ¶
)åå¶ ß
{
çç 
Actor
éé 
=
éé  
CrearActorParaSede
éé .
(
éé. /
idActor
éé/ 6
,
éé6 7&
numeroDocumentoIdentidad
éé8 P
,
ééP Q#
codigoEstablecimiento
ééR g
,
éég h&
informacionPublicitariaééi Ä
,ééÄ Å
idTipoPersonaééÇ è
,ééè ê
idClaseActorééë ù
,ééù û
razonSocialééü ™
,éé™ ´
nombreComercialéé¨ ª
,ééª º
nombreInternoééΩ  
,éé  À
telefonoééÃ ‘
,éé‘ ’
correoéé÷ ‹
,éé‹ ›
	direccionééﬁ Á
,ééÁ Ë
fotoééÈ Ì
)ééÌ Ó
}
èè 
;
èè 
sede
êê 
.
êê 
extension_json
êê #
=
êê$ %*
codigoEstablecimientoDigemid
êê& B
==
êêC E
null
êêF J
?
êêK L
$str
êêM O
:
êêP Q
$str
êêR g
+
êêh i+
codigoEstablecimientoDigemidêêj Ü
+êêá à
$strêêâ è
;êêè ê
var
ëë 
result
ëë 
=
ëë 
_actorRepositorio
ëë .
.
ëë. /?
1ActualizarActorNegocioSinTomarEnCuentaAParametros
ëë/ `
(
ëë` a
sede
ëëa e
)
ëëe f
;
ëëf g
if
íí 
(
íí 
result
íí 
.
íí 
code_result
íí &
==
íí' )!
OperationResultEnum
íí* =
.
íí= >
Success
íí> E
)
ííE F
{
ìì (
_centroAtencionRepositorio
îî .
.
îî. /M
?ActualizarDocumentoIdentidadDeTodosLosCentrosDeAtencionVigentes
îî/ n
(
îîn o
sede
îîo s
.
îîs t!
DocumentoIdentidadîît Ü
)îîÜ á
;îîá à
}
ïï 
return
ññ 
result
ññ 
;
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
return
öö 
new
öö 
OperationResult
öö *
(
öö* +
e
öö+ ,
)
öö, -
;
öö- .
}
õõ 
}
úú 	
public
ûû /
!EstablecimientoComercialExtendido
ûû 0"
ObtenerSedeExtendida
ûû1 E
(
ûûE F
)
ûûF G
{
üü 	
try
†† 
{
°° 
return
¢¢ )
_establecimientoRepositorio
¢¢ 2
.
¢¢2 36
(ObtenerEstablecimientoComercialExtendido
¢¢3 [
(
¢¢[ \
ActorSettings
¢¢\ i
.
¢¢i j
Default
¢¢j q
.
¢¢q r!
IdActorNegocioSede¢¢r Ñ
)¢¢Ñ Ö
;¢¢Ö Ü
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
§§  !
throw
§§" '
;
§§' (
}
§§) *
}
•• 	
public
ßß &
EstablecimientoComercial
ßß '
ObtenerSede
ßß( 3
(
ßß3 4
)
ßß4 5
{
®® 	
try
©© 
{
™™ 
return
¨¨ )
_establecimientoRepositorio
¨¨ 2
.
¨¨2 3-
ObtenerEstablecimientoComercial
¨¨3 R
(
¨¨R S
ActorSettings
¨¨S `
.
¨¨` a
Default
¨¨a h
.
¨¨h i 
IdActorNegocioSede
¨¨i {
)
¨¨{ |
;
¨¨| }
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ÆÆ  !
throw
ÆÆ" '
;
ÆÆ' (
}
ÆÆ) *
}
ØØ 	
public
±± 6
(EstablecimientoComercialExtendidoConLogo
±± 7 
ObtenerSedeConLogo
±±8 J
(
±±J K
)
±±K L
{
≤≤ 	
try
≥≥ 
{
¥¥ 
return
µµ )
_establecimientoRepositorio
µµ 2
.
µµ2 3=
/ObtenerEstablecimientoComercialExtendidoConLogo
µµ3 b
(
µµb c
ActorSettings
µµc p
.
µµp q
Default
µµq x
.
µµx y!
IdActorNegocioSedeµµy ã
)µµã å
;µµå ç
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
e
∑∑ 
)
∑∑ 
{
∑∑  !
throw
∑∑" '
;
∑∑' (
}
∑∑) *
}
ππ 	
public
ææ 
List
ææ 
<
ææ 
	Direccion
ææ 
>
ææ 
CrearDirecciones
ææ /
(
ææ/ 0
	Direccion
ææ0 9
	direccion
ææ: C
)
ææC D
{
øø 	
List
¿¿ 
<
¿¿ 
	Direccion
¿¿ 
>
¿¿ 
direcciones
¿¿ '
=
¿¿( )
new
¿¿* -
List
¿¿. 2
<
¿¿2 3
	Direccion
¿¿3 <
>
¿¿< =
(
¿¿= >
)
¿¿> ?
;
¿¿? @
direcciones
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
	direccion
¡¡ %
)
¡¡% &
;
¡¡& '
return
¬¬ 
direcciones
¬¬ 
;
¬¬ 
}
ƒƒ 	
public
∆∆ 
Foto
∆∆ 
	CrearFoto
∆∆ 
(
∆∆ 
byte
∆∆ "
[
∆∆" #
]
∆∆# $
foto
∆∆% )
)
∆∆) *
{
«« 	
Foto
»» 

fotografia
»» 
=
»» 
new
»» !
Foto
»»" &
(
»»& '
)
»»' (
;
»»( )

fotografia
…… 
.
…… 
imagen
…… 
=
…… 
foto
……  $
;
……$ %
return
   

fotografia
   
;
   
}
ÀÀ 	
}
ÃÃ 
}ÕÕ ±.
[D:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Establecimientos\Establecimiento_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Establecimientos# 3
{ 
public 

class "
Establecimiento_Logica '
:( )#
IEstablecimiento_Logica* A
{ 
private 
readonly (
IEstablecimiento_Repositorio 5'
_establecimientoRepositorio6 Q
;Q R
public "
Establecimiento_Logica %
(% &(
IEstablecimiento_Repositorio& B&
establecimientoRepositorioC ]
)] ^
{ 	'
_establecimientoRepositorio '
=( )&
establecimientoRepositorio* D
;D E
} 	
public 
List 
< $
EstablecimientoComercial ,
>, -6
*ObtenerEstablecimientosComercialesVigentes. X
(X Y
)Y Z
{ 	
try 
{ 
return '
_establecimientoRepositorio 2
.2 36
*ObtenerEstablecimientosComercialesVigentes3 ]
(] ^
)^ _
._ `
ToList` f
(f g
)g h
;h i
} 
catch 
( 
	Exception 
e 
) 
{ 
throw   
e   
;   
}!! 
}"" 	
public## 
List## 
<## -
!EstablecimientoComercialExtendido## 5
>##5 6@
4ObtenerEstablecimientosComercialesExtendidosVigentes##7 k
(##k l
)##l m
{$$ 	
try%% 
{&& 
return'' '
_establecimientoRepositorio'' 2
.''2 3@
4ObtenerEstablecimientosComercialesExtendidosVigentes''3 g
(''g h
)''h i
.''i j
ToList''j p
(''p q
)''q r
;''r s
}(( 
catch)) 
()) 
	Exception)) 
e)) 
))) 
{** 
throw++ 
e++ 
;++ 
},, 
}-- 	
public00 
List00 
<00 
ItemGenerico00  
>00  !H
<ObtenerEstablecimientosComercialesVigentesComoItemsGenericos00" ^
(00^ _
)00_ `
{11 	
try22 
{33 
return44 '
_establecimientoRepositorio44 2
.442 3H
<ObtenerEstablecimientosComercialesVigentesComoItemsGenericos443 o
(44o p
)44p q
.44q r
ToList44r x
(44x y
)44y z
;44z {
}55 
catch66 
(66 
	Exception66 
e66 
)66 
{77 
throw88 
new88 
LogicaException88 )
(88) *
$str88* b
,88b c
e88d e
)88e f
;88f g
}99 
}:: 	
public<< 
List<< 
<<< #
ItemGenericoConSubItems<< +
><<+ ,E
9ObtenerEstablecimientosComercialesVigentesConSusAlmacenes<<- f
(<<f g
)<<g h
{== 	
try>> 
{?? 
return@@ '
_establecimientoRepositorio@@ 2
.@@2 3J
>ObtenerEstablecimientosConSusCentrosDeAtencionVigentesSegunRol@@3 q
(@@q r
ActorSettings@@r 
.	@@ Ä
Default
@@Ä á
.
@@á à
IdRolAlmacen
@@à î
)
@@î ï
.
@@ï ñ
ToList
@@ñ ú
(
@@ú ù
)
@@ù û
;
@@û ü
}AA 
catchBB 
(BB 
	ExceptionBB 
eBB 
)BB 
{CC 
throwDD 
newDD 
LogicaExceptionDD )
(DD) *
$strDD* b
,DDb c
eDDd e
)DDe f
;DDf g
}EE 
}FF 	
publicHH 
ListHH 
<HH #
ItemGenericoConSubItemsHH +
>HH+ ,A
5ObtenerEstablecimientosComercialesVigentesConSusCajasHH- b
(HHb c
)HHc d
{II 	
tryJJ 
{KK 
returnLL '
_establecimientoRepositorioLL 2
.LL2 3J
>ObtenerEstablecimientosConSusCentrosDeAtencionVigentesSegunRolLL3 q
(LLq r
ActorSettingsLLr 
.	LL Ä
Default
LLÄ á
.
LLá à
	IdRolCaja
LLà ë
)
LLë í
.
LLí ì
ToList
LLì ô
(
LLô ö
)
LLö õ
;
LLõ ú
}MM 
catchNN 
(NN 
	ExceptionNN 
eNN 
)NN 
{OO 
throwPP 
newPP 
LogicaExceptionPP )
(PP) *
$strPP* b
,PPb c
ePPd e
)PPe f
;PPf g
}QQ 
}RR 	
publicSS 
ListSS 
<SS #
ItemGenericoConSubItemsSS +
>SS+ ,H
<ObtenerEstablecimientosComercialesVigentesConSusPuntosVentasSS- i
(SSi j
)SSj k
{TT 	
tryUU 
{VV 
returnWW '
_establecimientoRepositorioWW 2
.WW2 3J
>ObtenerEstablecimientosConSusCentrosDeAtencionVigentesSegunRolWW3 q
(WWq r
ActorSettingsWWr 
.	WW Ä
Default
WWÄ á
.
WWá à
IdRolPuntaDeVenta
WWà ô
)
WWô ö
.
WWö õ
ToList
WWõ °
(
WW° ¢
)
WW¢ £
;
WW£ §
}XX 
catchYY 
(YY 
	ExceptionYY 
eYY 
)YY 
{ZZ 
throw[[ 
new[[ 
LogicaException[[ )
([[) *
$str[[* b
,[[b c
e[[d e
)[[e f
;[[f g
}\\ 
}]] 	
}^^ 
}__ ˜
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ConceptoLogica_Validacion.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ConceptoLogica '
:( )
IConceptoLogica* 9
{ 
public 
bool )
ExisteCodigoDeBarraDeProducto 1
(1 2
string2 8
codigoBarra9 D
)D E
{ 	
try 
{ 
bool 
existe 
=  
_conceptoRepositorio 2
.2 3.
"ExisteCodigoDeBarraConceptoNegocio3 U
(U V
codigoBarraV a
)a b
;b c
return 
existe 
; 
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* X
,X Y
eZ [
)[ \
;\ ]
} 
} 	
public   
bool   )
ExisteNombreConceptoComercial   1
(  1 2
string  2 8
nombre  9 ?
)  ? @
{!! 	
try"" 
{## 
bool$$ 
existe$$ 
=$$  
_conceptoRepositorio$$ 2
.$$2 3'
ExisteNombreConceptoNegocio$$3 N
($$N O
nombre$$O U
)$$U V
;$$V W
return%% 
existe%% 
;%% 
}&& 
catch'' 
('' 
	Exception'' 
e'' 
)'' 
{(( 
throw)) 
new)) 
LogicaException)) )
())) *
$str))* O
,))O P
e))Q R
)))R S
;))S T
}** 
}++ 	
public-- 
bool-- -
!ExisteNombreDeValorCaracteristica-- 5
(--5 6
int--6 9
idCaracteristica--: J
,--J K
string--L R
valor--S X
)--X Y
{.. 	
try// 
{00 
bool11 
existe11 
=11  
_conceptoRepositorio11 2
.112 3-
!ExisteNombreDeValorCaracteristica113 T
(11T U
idCaracteristica11U e
,11e f
valor11g l
)11l m
;11m n
return22 
existe22 
;22 
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{55 
throw66 
new66 
LogicaException66 )
(66) *
$str66* g
,66g h
e66i j
)66j k
;66k l
}77 
}88 	
}99 
}:: ëÅ
\D:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\CentroDeAtencion\CentroDeAtencion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
CentrosDeAtencion# 4
{ 
public 

class #
CentroDeAtencion_Logica (
:) *$
ICentroDeAtencion_Logica+ C
{ 
private 
readonly )
ICentroDeAtencion_Repositorio 6(
_centroDeAtencionRepositorio7 S
;S T
private 
readonly (
IEstablecimiento_Repositorio 5'
_establecimientoRepositorio6 Q
;Q R
private 
readonly 
IRoles_Repositorio +
_rolesRepositorio, =
;= >
private 
readonly 
IActor_Repositorio +
_actorRepositorio, =
;= >
private 
readonly $
IInventarioActual_Logica 1$
_inventarioActual_Logica2 J
;J K
public #
CentroDeAtencion_Logica &
(& ')
ICentroDeAtencion_Repositorio' D'
centroDeAtencionRepositorioE `
,` a(
IEstablecimiento_Repositoriob ~'
establecimientoRepositorio	 ô
,
ô ö 
IRoles_Repositorio
õ ≠
rolesRepositorio
Æ æ
,
æ ø 
IActor_Repositorio
¿ “
actorRepositorio
” „
,
„ ‰&
IInventarioActual_Logica
Â ˝%
inventarioActual_Logica
˛ ï
)
ï ñ
{ 	(
_centroDeAtencionRepositorio   (
=  ) *'
centroDeAtencionRepositorio  + F
;  F G'
_establecimientoRepositorio!! '
=!!( )&
establecimientoRepositorio!!* D
;!!D E
_rolesRepositorio"" 
="" 
rolesRepositorio""  0
;""0 1
_actorRepositorio## 
=## 
actorRepositorio##  0
;##0 1$
_inventarioActual_Logica$$ $
=$$% &#
inventarioActual_Logica$$' >
;$$> ?
}&& 	
public)) 
List)) 
<)) %
CentroDeAtencionExtendido)) -
>))- ./
#ObtenerCentrosDeAtencionProgramados))/ R
())R S
int))S V

idEmpleado))W a
)))a b
{** 	
return++ (
_centroDeAtencionRepositorio++ /
.++/ 0/
#ObtenerCentrosDeAtencionProgramados++0 S
(++S T

idEmpleado++T ^
)++^ _
;++_ `
},, 	
public.. 
List.. 
<.. 
CentroDeAtencion.. $
>..$ %0
$ObtenerCentrosDeAtencionProgramados_..& J
(..J K
int..K N

idEmpleado..O Y
)..Y Z
{// 	
return00 (
_centroDeAtencionRepositorio00 /
.00/ 00
$ObtenerCentrosDeAtencionProgramados_000 T
(00T U

idEmpleado00U _
)00_ `
.00` a
ToList00a g
(00g h
)00h i
;00i j
}11 	
public33 %
CentroDeAtencionExtendido33 (#
ObtenerCentroDeAtencion33) @
(33@ A
int33A D
id33E G
)33G H
{44 	
try55 
{66 
return77 (
_centroDeAtencionRepositorio77 3
.773 4$
_ObtenerCentroDeAtencion774 L
(77L M
id77M O
)77O P
;77P Q
}88 
catch99 
(99 
	Exception99 
e99 
)99 
{:: 
throw;; 
e;; 
;;; 
}<< 
}== 	
publicAA 
ListAA 
<AA %
CentroDeAtencionExtendidoAA -
>AA- .6
*ObtenerCentrosDeAtencionExtendidosVigentesAA/ Y
(AAY Z
)AAZ [
{BB 	
returnDD (
_centroDeAtencionRepositorioDD /
.DD/ 06
*ObtenerCentrosDeAtencionExtendidosVigentesDD0 Z
(DDZ [
)DD[ \
.DD\ ]
ToListDD] c
(DDc d
)DDd e
;DDe f
}EE 	
publicGG 
ListGG 
<GG 
CentroDeAtencionGG $
>GG$ %,
 ObtenerCentrosDeAtencionVigentesGG& F
(GGF G
)GGG H
{HH 	
tryII 
{JJ 
returnKK (
_centroDeAtencionRepositorioKK 3
.KK3 4,
 ObtenerCentrosDeAtencionVigentesKK4 T
(KKT U
)KKU V
.KKV W
ToListKKW ]
(KK] ^
)KK^ _
;KK_ `
}LL 
catchMM 
(MM 
	ExceptionMM 
eMM 
)MM 
{NN 
throwOO 
eOO 
;OO 
}PP 
}QQ 	
publicRR 
ListRR 
<RR %
CentroDeAtencionExtendidoRR -
>RR- .*
ObtenerPuntosDeVentaNoVigentesRR/ M
(RRM N
)RRN O
{SS 	
returnTT (
_centroDeAtencionRepositorioTT /
.TT/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijoTT0 ^
(TT^ _
ActorSettingsTT_ l
.TTl m
DefaultTTm t
.TTt u
IdRolPuntaDeVenta	TTu Ü
,
TTÜ á
false
TTà ç
)
TTç é
.
TTé è
ToList
TTè ï
(
TTï ñ
)
TTñ ó
;
TTó ò
}UU 	
publicWW 
ListWW 
<WW %
CentroDeAtencionExtendidoWW -
>WW- .+
ObtenerPuntosDeCompraNoVigentesWW/ N
(WWN O
)WWO P
{XX 	
returnYY (
_centroDeAtencionRepositorioYY /
.YY/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijoYY0 ^
(YY^ _
ActorSettingsYY_ l
.YYl m
DefaultYYm t
.YYt u
IdRolPuntoDeCompra	YYu á
,
YYá à
false
YYâ é
)
YYé è
.
YYè ê
ToList
YYê ñ
(
YYñ ó
)
YYó ò
;
YYò ô
}ZZ 	
public\\ 
List\\ 
<\\ %
CentroDeAtencionExtendido\\ -
>\\- .&
ObtenerAlmacenesNoVigentes\\/ I
(\\I J
)\\J K
{]] 	
return^^ (
_centroDeAtencionRepositorio^^ /
.^^/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijo^^0 ^
(^^^ _
ActorSettings^^_ l
.^^l m
Default^^m t
.^^t u
IdRolAlmacen	^^u Å
,
^^Å Ç
false
^^É à
)
^^à â
.
^^â ä
ToList
^^ä ê
(
^^ê ë
)
^^ë í
;
^^í ì
}__ 	
public`` 
List`` 
<`` %
CentroDeAtencionExtendido`` -
>``- .(
ObtenerPuntosDeVentaVigentes``/ K
(``K L
)``L M
{aa 	
returnbb (
_centroDeAtencionRepositoriobb /
.bb/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijobb0 ^
(bb^ _
ActorSettingsbb_ l
.bbl m
Defaultbbm t
.bbt u
IdRolPuntaDeVenta	bbu Ü
,
bbÜ á
true
bbà å
)
bbå ç
.
bbç é
ToList
bbé î
(
bbî ï
)
bbï ñ
;
bbñ ó
}cc 	
publicee 
Listee 
<ee %
CentroDeAtencionExtendidoee -
>ee- .)
ObtenerPuntosDeCompraVigentesee/ L
(eeL M
)eeM N
{ff 	
returngg (
_centroDeAtencionRepositoriogg /
.gg/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijogg0 ^
(gg^ _
ActorSettingsgg_ l
.ggl m
Defaultggm t
.ggt u
IdRolPuntoDeCompra	ggu á
,
ggá à
true
ggâ ç
)
ggç é
.
ggé è
ToList
ggè ï
(
ggï ñ
)
ggñ ó
;
ggó ò
}hh 	
publicjj 
Listjj 
<jj %
CentroDeAtencionExtendidojj -
>jj- .$
ObtenerAlmacenesVigentesjj/ G
(jjG H
)jjH I
{kk 	
returnll (
_centroDeAtencionRepositorioll /
.ll/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijoll0 ^
(ll^ _
ActorSettingsll_ l
.lll m
Defaultllm t
.llt u
IdRolAlmacen	llu Å
,
llÅ Ç
true
llÉ á
)
llá à
.
llà â
ToList
llâ è
(
llè ê
)
llê ë
;
llë í
}mm 	
publicoo 
Listoo 
<oo %
CentroDeAtencionExtendidooo -
>oo- . 
ObtenerCajasVigentesoo/ C
(ooC D
)ooD E
{pp 	
returnqq (
_centroDeAtencionRepositorioqq /
.qq/ 0:
.ObtenerCentrosDeAtencionExtendidosSegunRolHijoqq0 ^
(qq^ _
ActorSettingsqq_ l
.qql m
Defaultqqm t
.qqt u
	IdRolCajaqqu ~
,qq~ 
true
qqÄ Ñ
)
qqÑ Ö
.
qqÖ Ü
ToList
qqÜ å
(
qqå ç
)
qqç é
;
qqé è
}rr 	
publictt 
inttt ;
/ObtenerIdCentroDeAtencionParaObtencionDePreciostt B
(ttB C
CentroDeAtencionttC S
centroDeAtencionttT d
,ttd e.
!EstablecimientoComercialExtendido	ttf á
establecimiento
ttà ó
)
ttó ò
{uu 	
tryvv 
{ww 
varxx 
politicaDePrecioxx $
=xx% &
VentasSettingsxx' 5
.xx5 6
Defaultxx6 =
.xx= >&
PoliticaDePreciosParaVentaxx> X
;xxX Y
intyy (
idCentroDeAtencionParaPrecioyy 0
=yy1 2
$numyy3 4
;yy4 5
ifzz 
(zz 
politicaDePreciozz $
==zz% '
(zz( )
intzz) ,
)zz, -*
PoliticaDePreciosParaVentaEnumzz- K
.zzK L
GlobalzzL R
)zzR S
{{{ (
idCentroDeAtencionParaPrecio|| 0
=||1 2
VentasSettings||3 A
.||A B
Default||B I
.||I JD
7IdCentroAtencionParaObtencionDePreciosPorPoliticaGlobal	||J Å
;
||Å Ç
}}} 
else~~ 
if~~ 
(~~ 
politicaDePrecio~~ )
==~~* ,
(~~- .
int~~. 1
)~~1 2*
PoliticaDePreciosParaVentaEnum~~2 P
.~~P Q$
EstablecimientoComercial~~Q i
)~~i j
{ *
idCentroDeAtencionParaPrecio
ÅÅ 0
=
ÅÅ1 2
(
ÅÅ3 4
int
ÅÅ4 7
)
ÅÅ7 8
establecimiento
ÅÅ8 G
.
ÅÅG H6
(IdCentroDeAtencionParaObtencionDePrecios
ÅÅH p
;
ÅÅp q
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
politicaDePrecio
ÉÉ )
==
ÉÉ* ,
(
ÉÉ- .
int
ÉÉ. 1
)
ÉÉ1 2,
PoliticaDePreciosParaVentaEnum
ÉÉ2 P
.
ÉÉP Q
CentroDeAtencion
ÉÉQ a
)
ÉÉa b
{
ÑÑ *
idCentroDeAtencionParaPrecio
ÖÖ 0
=
ÖÖ1 2
centroDeAtencion
ÖÖ3 C
.
ÖÖC D
Id
ÖÖD F
;
ÖÖF G
}
ÜÜ 
return
áá *
idCentroDeAtencionParaPrecio
áá 3
;
áá3 4
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
e
ãã 
;
ãã 
}
åå 
}
çç 	
public
éé 
int
éé =
/ObtenerIdCentroDeAtencionParaObtencionDePrecios
éé B
(
ééB C
int
ééC F
idCentroAtencion
ééG W
)
ééW X
{
èè 	
try
êê 
{
ëë 
var
íí 
politicaDePrecio
íí $
=
íí% &
VentasSettings
íí' 5
.
íí5 6
Default
íí6 =
.
íí= >(
PoliticaDePreciosParaVenta
íí> X
;
ííX Y
int
ìì *
idCentroDeAtencionParaPrecio
ìì 0
=
ìì1 2
$num
ìì3 4
;
ìì4 5
if
îî 
(
îî 
politicaDePrecio
îî $
==
îî% '
(
îî( )
int
îî) ,
)
îî, -,
PoliticaDePreciosParaVentaEnum
îî- K
.
îîK L
Global
îîL R
)
îîR S
{
ïï *
idCentroDeAtencionParaPrecio
ññ 0
=
ññ1 2
VentasSettings
ññ3 A
.
ññA B
Default
ññB I
.
ññI JF
7IdCentroAtencionParaObtencionDePreciosPorPoliticaGlobalññJ Å
;ññÅ Ç
}
óó 
else
òò 
if
òò 
(
òò 
politicaDePrecio
òò )
==
òò* ,
(
òò- .
int
òò. 1
)
òò1 2,
PoliticaDePreciosParaVentaEnum
òò2 P
.
òòP Q&
EstablecimientoComercial
òòQ i
)
òòi j
{
ôô *
idCentroDeAtencionParaPrecio
õõ 0
=
õõ1 2*
_centroDeAtencionRepositorio
õõ3 O
.
õõO PT
EObtenerIdDelCentroDeAtencionQueTieneLosPreciosSegunIdCentroDeAtencionõõP ï
(õõï ñ 
idCentroAtencionõõñ ¶
)õõ¶ ß
;õõß ®
}
úú 
else
ùù 
if
ùù 
(
ùù 
politicaDePrecio
ùù )
==
ùù* ,
(
ùù- .
int
ùù. 1
)
ùù1 2,
PoliticaDePreciosParaVentaEnum
ùù2 P
.
ùùP Q
CentroDeAtencion
ùùQ a
)
ùùa b
{
ûû *
idCentroDeAtencionParaPrecio
üü 0
=
üü1 2
idCentroAtencion
üü3 C
;
üüC D
}
†† 
return
°° *
idCentroDeAtencionParaPrecio
°° 3
;
°°3 4
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
e
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
´´ 
int
´´ ;
-ObtenerIdCentroDeAtencionParaObtencionDeStock
´´ @
(
´´@ A
ModoOperacionEnum
´´A R
tipoDeVenta
´´S ^
,
´´^ _
CentroDeAtencion
´´` p
centroDeAtencion´´q Å
,´´Å Ç8
(EstablecimientoComercialExtendidoConLogo´´É ´
establecimiento´´¨ ª
)´´ª º
{
¨¨ 	
try
≠≠ 
{
ÆÆ 
int
ØØ 
politicaDeStock
ØØ #
=
ØØ$ %
$num
ØØ& '
;
ØØ' (
int
∞∞ 0
"idCentroDeAtencionParaObtenerStock
∞∞ 6
=
∞∞7 8
$num
∞∞9 :
;
∞∞: ;
if
±± 
(
±± 
tipoDeVenta
±± 
==
±±  "
ModoOperacionEnum
±±# 4
.
±±4 5
PorMostrador
±±5 A
)
±±A B
{
≤≤ 
politicaDeStock
≥≥ #
=
≥≥$ %
VentasSettings
≥≥& 4
.
≥≥4 5
Default
≥≥5 <
.
≥≥< =2
$PoliticaDeStockParaVentaPorMostrador
≥≥= a
;
≥≥a b
}
¥¥ 
else
µµ 
if
µµ 
(
µµ 
tipoDeVenta
µµ $
==
µµ% '
ModoOperacionEnum
µµ( 9
.
µµ9 :$
PorMostradorEnDosPasos
µµ: P
)
µµP Q
{
∂∂ 
politicaDeStock
∑∑ #
=
∑∑$ %
VentasSettings
∑∑& 4
.
∑∑4 5
Default
∑∑5 <
.
∑∑< =<
.PoliticaDeStockParaVentaPorMostradorEnDosPasos
∑∑= k
;
∑∑k l
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
tipoDeVenta
ππ $
==
ππ% '
ModoOperacionEnum
ππ( 9
.
ππ9 :
Corporativa
ππ: E
)
ππE F
{
∫∫ 
politicaDeStock
ªª #
=
ªª$ %
VentasSettings
ªª& 4
.
ªª4 5
Default
ªª5 <
.
ªª< =1
#PoliticaDeStockParaVentaCorporativa
ªª= `
;
ªª` a
}
ºº 
if
ææ 
(
ææ 
politicaDeStock
ææ #
==
ææ$ &
(
ææ' (
int
ææ( +
)
ææ+ ,,
PoliticaDePreciosParaVentaEnum
ææ, J
.
ææJ K
Global
ææK Q
)
ææQ R
{
øø 0
"idCentroDeAtencionParaObtenerStock
¿¿ 6
=
¿¿7 8
VentasSettings
¿¿9 G
.
¿¿G H
Default
¿¿H O
.
¿¿O PD
5IdCentroAtencionParaObtencionDeStockPorPoliticaGlobal¿¿P Ö
;¿¿Ö Ü
}
¡¡ 
else
¬¬ 
if
¬¬ 
(
¬¬ 
politicaDeStock
¬¬ (
==
¬¬) +
(
¬¬, -
int
¬¬- 0
)
¬¬0 1,
PoliticaDePreciosParaVentaEnum
¬¬1 O
.
¬¬O P&
EstablecimientoComercial
¬¬P h
)
¬¬h i
{
√√ 0
"idCentroDeAtencionParaObtenerStock
ƒƒ 6
=
ƒƒ7 8
(
ƒƒ9 :
int
ƒƒ: =
)
ƒƒ= >
establecimiento
ƒƒ> M
.
ƒƒM N4
&IdCentroDeAtencionParaObtencionDeStock
ƒƒN t
;
ƒƒt u
}
≈≈ 
else
∆∆ 
if
∆∆ 
(
∆∆ 
politicaDeStock
∆∆ (
==
∆∆) +
(
∆∆, -
int
∆∆- 0
)
∆∆0 1,
PoliticaDePreciosParaVentaEnum
∆∆1 O
.
∆∆O P
CentroDeAtencion
∆∆P `
)
∆∆` a
{
«« 0
"idCentroDeAtencionParaObtenerStock
»» 6
=
»»7 8
centroDeAtencion
»»9 I
.
»»I J
Id
»»J L
;
»»L M
}
…… 
return
   0
"idCentroDeAtencionParaObtenerStock
   9
;
  9 :
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
e
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
public
—— 
CentroDeAtencion
—— &
ObtenerCentroDeAtencion_
——  8
(
——8 9
int
——9 <
idCentroAtencion
——= M
)
——M N
{
““ 	
try
”” 
{
‘‘ 
return
’’ *
_centroDeAtencionRepositorio
’’ 3
.
’’3 4&
ObtenerCentroDeAtencion_
’’4 L
(
’’L M
idCentroAtencion
’’M ]
)
’’] ^
;
’’^ _
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
LogicaException
ŸŸ )
(
ŸŸ) *
$str
ŸŸ* [
,
ŸŸ[ \
e
ŸŸ] ^
)
ŸŸ^ _
;
ŸŸ_ `
}
⁄⁄ 
}
€€ 	
public
‹‹ 
int
‹‹ ;
-ObtenerIdCentroDeAtencionParaObtencionDeStock
‹‹ @
(
‹‹@ A
ModoOperacionEnum
‹‹A R
tipoDeVenta
‹‹S ^
,
‹‹^ _
int
‹‹` c
idCentroAtencion
‹‹d t
)
‹‹t u
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
int
‡‡ 
politicaDeStock
‡‡ #
=
‡‡$ %
$num
‡‡& '
;
‡‡' (
int
·· 0
"idCentroDeAtencionParaObtenerStock
·· 6
=
··7 8
$num
··9 :
;
··: ;
if
‚‚ 
(
‚‚ 
tipoDeVenta
‚‚ 
==
‚‚  "
ModoOperacionEnum
‚‚# 4
.
‚‚4 5
PorMostrador
‚‚5 A
)
‚‚A B
{
„„ 
politicaDeStock
‰‰ #
=
‰‰$ %
VentasSettings
‰‰& 4
.
‰‰4 5
Default
‰‰5 <
.
‰‰< =2
$PoliticaDeStockParaVentaPorMostrador
‰‰= a
;
‰‰a b
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ 
tipoDeVenta
ÊÊ $
==
ÊÊ% '
ModoOperacionEnum
ÊÊ( 9
.
ÊÊ9 :$
PorMostradorEnDosPasos
ÊÊ: P
)
ÊÊP Q
{
ÁÁ 
politicaDeStock
ËË #
=
ËË$ %
VentasSettings
ËË& 4
.
ËË4 5
Default
ËË5 <
.
ËË< =<
.PoliticaDeStockParaVentaPorMostradorEnDosPasos
ËË= k
;
ËËk l
}
ÈÈ 
else
ÍÍ 
if
ÍÍ 
(
ÍÍ 
tipoDeVenta
ÍÍ $
==
ÍÍ% '
ModoOperacionEnum
ÍÍ( 9
.
ÍÍ9 :
Corporativa
ÍÍ: E
)
ÍÍE F
{
ÎÎ 
politicaDeStock
ÏÏ #
=
ÏÏ$ %
VentasSettings
ÏÏ& 4
.
ÏÏ4 5
Default
ÏÏ5 <
.
ÏÏ< =1
#PoliticaDeStockParaVentaCorporativa
ÏÏ= `
;
ÏÏ` a
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
politicaDeStock
ÔÔ #
==
ÔÔ$ &
(
ÔÔ' (
int
ÔÔ( +
)
ÔÔ+ ,,
PoliticaDePreciosParaVentaEnum
ÔÔ, J
.
ÔÔJ K
Global
ÔÔK Q
)
ÔÔQ R
{
 0
"idCentroDeAtencionParaObtenerStock
ÒÒ 6
=
ÒÒ7 8
VentasSettings
ÒÒ9 G
.
ÒÒG H
Default
ÒÒH O
.
ÒÒO PD
5IdCentroAtencionParaObtencionDeStockPorPoliticaGlobalÒÒP Ö
;ÒÒÖ Ü
}
ÚÚ 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ 
politicaDeStock
ÛÛ (
==
ÛÛ) +
(
ÛÛ, -
int
ÛÛ- 0
)
ÛÛ0 1,
PoliticaDePreciosParaVentaEnum
ÛÛ1 O
.
ÛÛO P&
EstablecimientoComercial
ÛÛP h
)
ÛÛh i
{
ÙÙ 0
"idCentroDeAtencionParaObtenerStock
ıı 6
=
ıı7 8*
_centroDeAtencionRepositorio
ıı9 U
.
ııU VQ
BObtenerIdDelCentroDeAtencionQueTieneElStockSegunIdCentroDeAtencionııV ò
(ııò ô 
idCentroAtencionııô ©
)ıı© ™
;ıı™ ´
}
ˆˆ 
else
˜˜ 
if
˜˜ 
(
˜˜ 
politicaDeStock
˜˜ (
==
˜˜) +
(
˜˜, -
int
˜˜- 0
)
˜˜0 1,
PoliticaDePreciosParaVentaEnum
˜˜1 O
.
˜˜O P
CentroDeAtencion
˜˜P `
)
˜˜` a
{
¯¯ 0
"idCentroDeAtencionParaObtenerStock
˘˘ 6
=
˘˘7 8
idCentroAtencion
˘˘9 I
;
˘˘I J
}
˙˙ 
return
˚˚ 0
"idCentroDeAtencionParaObtenerStock
˚˚ 9
;
˚˚9 :
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
e
˝˝ 
)
˝˝ 
{
˛˛ 
throw
ˇˇ 
e
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
public
ÉÉ 
string
ÉÉ -
ObtenerNombreDeCentroDeAtencion
ÉÉ 5
(
ÉÉ5 6
int
ÉÉ6 9
idActorNegocio
ÉÉ: H
)
ÉÉH I
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
return
áá *
_centroDeAtencionRepositorio
áá 3
.
áá3 4-
ObtenerNombreDeCentroDeAtencion
áá4 S
(
ááS T
idActorNegocio
ááT b
)
ááb c
;
áác d
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
new
ãã 
LogicaException
ãã )
(
ãã) *
$str
ãã* f
,
ããf g
e
ããh i
)
ããi j
;
ããj k
}
åå 
}
çç 	
public
èè '
CentroDeAtencionExtendido
èè (:
,ObtenerCentroDeAtencionSegunSerieComprobante
èè) U
(
èèU V
int
èèV Y
idSerie
èèZ a
)
èèa b
{
êê 	
try
ëë 
{
íí 
return
ìì *
_centroDeAtencionRepositorio
ìì 3
.
ìì3 4D
6ObtenerCentroDeAtencionExtendidosSegunSerieComprobante
ìì4 j
(
ììj k
idSerie
ììk r
)
ììr s
;
ììs t
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
e
ïï 
)
ïï 
{
ññ 
throw
óó 
e
óó 
;
óó 
}
òò 
}
ôô 	
public
õõ 
List
õõ 
<
õõ 
RolDeNegocio
õõ  
>
õõ  !,
ObtenerRolesDeCentroDeAtencion
õõ" @
(
õõ@ A
)
õõA B
{
úú 	
try
ùù 
{
ûû 
return
üü 
RolDeNegocio
üü #
.
üü# $
Convert_
üü$ ,
(
üü, -
_rolesRepositorio
üü- >
.
üü> ?
ObtenerRolesHijos
üü? P
(
üüP Q
ActorSettings
üüQ ^
.
üü^ _
Default
üü_ f
.
üüf g!
IdRolEntidadInterna
üüg z
)
üüz {
.
üü{ |
ToListüü| Ç
(üüÇ É
)üüÉ Ñ
)üüÑ Ö
;üüÖ Ü
}
†† 
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
°°  !
throw
°°" '
e
°°( )
;
°°) *
}
°°+ ,
}
¢¢ 	
public
§§ 
List
§§ 
<
§§ 
DetalleGenerico
§§ #
>
§§# $#
ObtenerPuntosDePrecio
§§% :
(
§§: ;
)
§§; <
{
•• 	
try
¶¶ 
{
ßß 
List
®® 
<
®® 
DetalleGenerico
®® $
>
®®$ %
puntosDePrecio
®®& 4
=
®®5 6
new
®®7 :
List
®®; ?
<
®®? @
DetalleGenerico
®®@ O
>
®®O P
(
®®P Q
)
®®Q R
;
®®R S
int
©© 
politicaDePrecio
©© $
=
©©% &
VentasSettings
©©' 5
.
©©5 6
Default
©©6 =
.
©©= >(
PoliticaDePreciosParaVenta
©©> X
;
©©X Y
if
™™ 
(
™™ 
politicaDePrecio
™™ $
==
™™% '
(
™™( )
int
™™) ,
)
™™, -,
PoliticaDePreciosParaVentaEnum
™™- K
.
™™K L
Global
™™L R
)
™™R S
{
´´ 
var
¨¨ *
centroDeAtencionPrecioGlobal
¨¨ 4
=
¨¨5 6*
_centroDeAtencionRepositorio
¨¨7 S
.
¨¨S T&
_ObtenerCentroDeAtencion
¨¨T l
(
¨¨l m
VentasSettings
¨¨m {
.
¨¨{ |
Default¨¨| É
.¨¨É ÑG
7IdCentroAtencionParaObtencionDePreciosPorPoliticaGlobal¨¨Ñ ª
)¨¨ª º
;¨¨º Ω
puntosDePrecio
≠≠ "
.
≠≠" #
Add
≠≠# &
(
≠≠& '
new
≠≠' *
DetalleGenerico
≠≠+ :
(
≠≠: ;*
centroDeAtencionPrecioGlobal
≠≠; W
.
≠≠W X
Id
≠≠X Z
,
≠≠Z [*
centroDeAtencionPrecioGlobal
≠≠\ x
.
≠≠x y'
EstablecimientoComercial≠≠y ë
.≠≠ë í
NombreInterno≠≠í ü
+≠≠† °
$str≠≠¢ ß
+≠≠® ©,
centroDeAtencionPrecioGlobal≠≠™ ∆
.≠≠∆ «
Nombre≠≠« Õ
)≠≠Õ Œ
)≠≠Œ œ
;≠≠œ –
}
ÆÆ 
else
ØØ 
if
ØØ 
(
ØØ 
politicaDePrecio
ØØ )
==
ØØ* ,
(
ØØ- .
int
ØØ. 1
)
ØØ1 2,
PoliticaDePreciosParaVentaEnum
ØØ2 P
.
ØØP Q&
EstablecimientoComercial
ØØQ i
)
ØØi j
{
∞∞ 
var
±± :
,centrosDeAtencionConPrecioPorEstablecimiento
±± D
=
±±E F*
_centroDeAtencionRepositorio
±±G c
.
±±c dL
=ObtenerCentrosDeAtencionConPrecioDeCadaEstablecimientoVigente±±d °
(±±° ¢
)±±¢ £
.±±£ §
ToList±±§ ™
(±±™ ´
)±±´ ¨
;±±¨ ≠:
,centrosDeAtencionConPrecioPorEstablecimiento
≤≤ @
.
≤≤@ A
ForEach
≤≤A H
(
≤≤H I
ca
≤≤I K
=>
≤≤L N
puntosDePrecio
≤≤O ]
.
≤≤] ^
Add
≤≤^ a
(
≤≤a b
new
≤≤b e
DetalleGenerico
≤≤f u
(
≤≤u v
ca
≤≤v x
.
≤≤x y
Id
≤≤y {
,
≤≤{ |
ca
≤≤} 
.≤≤ Ä(
EstablecimientoComercial≤≤Ä ò
.≤≤ò ô
NombreInterno≤≤ô ¶
+≤≤ß ®
$str≤≤© Æ
+≤≤Ø ∞
ca≤≤± ≥
.≤≤≥ ¥
Nombre≤≤¥ ∫
)≤≤∫ ª
)≤≤ª º
)≤≤º Ω
;≤≤Ω æ
}
≥≥ 
else
¥¥ 
if
¥¥ 
(
¥¥ 
politicaDePrecio
¥¥ )
==
¥¥* ,
(
¥¥- .
int
¥¥. 1
)
¥¥1 2,
PoliticaDePreciosParaVentaEnum
¥¥2 P
.
¥¥P Q
CentroDeAtencion
¥¥Q a
)
¥¥a b
{
µµ 
var
∂∂ 
centrosDeAtencion
∂∂ )
=
∂∂* +*
_centroDeAtencionRepositorio
∂∂, H
.
∂∂H I.
 ObtenerCentrosDeAtencionVigentes
∂∂I i
(
∂∂i j
)
∂∂j k
;
∂∂k l
foreach
∑∑ 
(
∑∑ 
var
∑∑  
centroDeAtencion
∑∑! 1
in
∑∑2 4
centrosDeAtencion
∑∑5 F
)
∑∑F G
{
∏∏ 
puntosDePrecio
ππ &
.
ππ& '
Add
ππ' *
(
ππ* +
new
ππ+ .
DetalleGenerico
ππ/ >
(
ππ> ?
centroDeAtencion
ππ? O
.
ππO P
Id
ππP R
,
ππR S
centroDeAtencion
ππT d
.
ππd e&
EstablecimientoComercial
ππe }
.
ππ} ~
NombreInternoππ~ ã
+ππå ç
$strππé ì
+ππî ï 
centroDeAtencionππñ ¶
.ππ¶ ß
Nombreππß ≠
)ππ≠ Æ
)ππÆ Ø
;ππØ ∞
}
∫∫ 
}
ªª 
puntosDePrecio
ºº 
=
ºº  
puntosDePrecio
ºº! /
.
ºº/ 0
OrderBy
ºº0 7
(
ºº7 8
pp
ºº8 :
=>
ºº; =
pp
ºº> @
.
ºº@ A
Id
ººA C
)
ººC D
.
ººD E
ToList
ººE K
(
ººK L
)
ººL M
;
ººM N
return
ΩΩ 
puntosDePrecio
ΩΩ %
;
ΩΩ% &
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
e
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ 
LogicaException
¡¡ )
(
¡¡) *
$str
¡¡* Q
,
¡¡Q R
e
¡¡S T
)
¡¡T U
;
¡¡U V
}
¬¬ 
}
√√ 	
public
∆∆ 
List
∆∆ 
<
∆∆ '
CentroDeAtencionExtendido
∆∆ -
>
∆∆- .I
;ObtenerCentrosDeAtencionVigentesPorEstablecimientoComercial
∆∆/ j
(
∆∆j k
int
∆∆k n)
idEstablecimientoComercial∆∆o â
)∆∆â ä
{
«« 	
try
»» 
{
…… 
return
   *
_centroDeAtencionRepositorio
   3
.
  3 4S
EObtenerCentrosDeAtencionExtendidosVigentesPorEstablecimientoComercial
  4 y
(
  y z)
idEstablecimientoComercial  z î
)  î ï
.  ï ñ
ToList  ñ ú
(  ú ù
)  ù û
;  û ü
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
e
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
public
““ 
List
““ 
<
““ '
CentroDeAtencionExtendido
““ -
>
““- .E
7ObtenerPuntosDeVentaVigentesPorEstablecimientoComercial
““/ f
(
““f g
int
““g j)
idEstablecimientoComercial““k Ö
)““Ö Ü
{
”” 	
try
‘‘ 
{
’’ 
return
÷÷ *
_centroDeAtencionRepositorio
÷÷ 3
.
÷÷3 4Y
KObtenerCentrosDeAtencionExtendidosVigentesSegunRolYEstablecimientoComercial
÷÷4 
(÷÷ Ä
ActorSettings÷÷Ä ç
.÷÷ç é
Default÷÷é ï
.÷÷ï ñ!
IdRolPuntaDeVenta÷÷ñ ß
,÷÷ß ®*
idEstablecimientoComercial÷÷© √
)÷÷√ ƒ
.÷÷ƒ ≈
ToList÷÷≈ À
(÷÷À Ã
)÷÷Ã Õ
;÷÷Õ Œ
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* g
,
⁄⁄g h
e
⁄⁄i j
)
⁄⁄j k
;
⁄⁄k l
}
€€ 
}
›› 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ '
CentroDeAtencionExtendido
ﬂﬂ -
>
ﬂﬂ- .F
8ObtenerPuntosDeCompraVigentesPorEstablecimientoComercial
ﬂﬂ/ g
(
ﬂﬂg h
int
ﬂﬂh k)
idEstablecimientoComercialﬂﬂl Ü
)ﬂﬂÜ á
{
‡‡ 	
try
·· 
{
‚‚ 
return
„„ *
_centroDeAtencionRepositorio
„„ 3
.
„„3 4Y
KObtenerCentrosDeAtencionExtendidosVigentesSegunRolYEstablecimientoComercial
„„4 
(„„ Ä
ActorSettings„„Ä ç
.„„ç é
Default„„é ï
.„„ï ñ"
IdRolPuntoDeCompra„„ñ ®
,„„® ©*
idEstablecimientoComercial„„™ ƒ
)„„ƒ ≈
.„„≈ ∆
ToList„„∆ Ã
(„„Ã Õ
)„„Õ Œ
;„„Œ œ
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
LogicaException
ÁÁ )
(
ÁÁ) *
$str
ÁÁ* h
,
ÁÁh i
e
ÁÁj k
)
ÁÁk l
;
ÁÁl m
}
ËË 
}
ÍÍ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ '
CentroDeAtencionExtendido
ÏÏ -
>
ÏÏ- .A
3ObtenerAlmacenesVigentesPorEstablecimientoComercial
ÏÏ/ b
(
ÏÏb c
int
ÏÏc f)
idEstablecimientoComercialÏÏg Å
)ÏÏÅ Ç
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
return
 *
_centroDeAtencionRepositorio
 3
.
3 4Y
KObtenerCentrosDeAtencionExtendidosVigentesSegunRolYEstablecimientoComercial
4 
( Ä
ActorSettingsÄ ç
.ç é
Defaulté ï
.ï ñ
IdRolAlmacenñ ¢
,¢ £*
idEstablecimientoComercial§ æ
)æ ø
.ø ¿
ToList¿ ∆
(∆ «
)« »
;» …
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
new
ÙÙ 
LogicaException
ÙÙ )
(
ÙÙ) *
$str
ÙÙ* `
,
ÙÙ` a
e
ÙÙb c
)
ÙÙc d
;
ÙÙd e
}
ıı 
}
ˆˆ 	
public
¯¯ 
List
¯¯ 
<
¯¯ '
CentroDeAtencionExtendido
¯¯ -
>
¯¯- .=
/ObtenerCajasVigentesPorEstablecimientoComercial
¯¯/ ^
(
¯¯^ _
int
¯¯_ b(
idEstablecimientoComercial
¯¯c }
)
¯¯} ~
{
˘˘ 	
try
˙˙ 
{
˚˚ 
return
¸¸ *
_centroDeAtencionRepositorio
¸¸ 3
.
¸¸3 4Y
KObtenerCentrosDeAtencionExtendidosVigentesSegunRolYEstablecimientoComercial
¸¸4 
(¸¸ Ä
ActorSettings¸¸Ä ç
.¸¸ç é
Default¸¸é ï
.¸¸ï ñ
	IdRolCaja¸¸ñ ü
,¸¸ü †*
idEstablecimientoComercial¸¸° ª
)¸¸ª º
.¸¸º Ω
ToList¸¸Ω √
(¸¸√ ƒ
)¸¸ƒ ≈
;¸¸≈ ∆
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* ]
,
ÄÄ] ^
e
ÄÄ_ `
)
ÄÄ` a
;
ÄÄa b
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
int
ÑÑ 
[
ÑÑ 
]
ÑÑ 7
)ObtenerIdsCentrosAtencionConRolPuntoVenta
ÑÑ >
(
ÑÑ> ?
int
ÑÑ? B(
idEstablecimientoComercial
ÑÑC ]
)
ÑÑ] ^
{
ÖÖ 	
try
ÜÜ 
{
áá 
return
àà *
_centroDeAtencionRepositorio
àà 3
.
àà3 4T
FObtenerIdsDeCentrosDeAtencionVigentesSegunRolYEstablecimientoComercial
àà4 z
(
ààz {
ActorSettingsàà{ à
.ààà â
Defaultààâ ê
.ààê ë!
IdRolPuntaDeVentaààë ¢
,àà¢ £*
idEstablecimientoComercialàà§ æ
)ààæ ø
;ààø ¿
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
new
åå 
LogicaException
åå )
(
åå) *
$str
åå* ]
,
åå] ^
e
åå_ `
)
åå` a
;
ååa b
}
çç 
}
éé 	
public
êê 
List
êê 
<
êê '
CentroDeAtencionExtendido
êê -
>
êê- .H
:ObtenerPuntosDeVentaVigentesPorEstablecimientosComerciales
êê/ i
(
êêi j
List
êêj n
<
êên o
int
êêo r
>
êêr s-
idsEstablecimientosComercialesêêt í
)êêí ì
{
ëë 	
try
íí 
{
ìì 
return
îî *
_centroDeAtencionRepositorio
îî 3
.
îî3 4U
GObtenerCentrosDeAtencionExtendidosVigentesSegunRolIdsDeEstablecimientos
îî4 {
(
îî{ |
ActorSettingsîî| â
.îîâ ä
Defaultîîä ë
.îîë í!
IdRolPuntaDeVentaîîí £
,îî£ §.
idsEstablecimientosComercialesîî• √
)îî√ ƒ
.îîƒ ≈
ToListîî≈ À
(îîÀ Ã
)îîÃ Õ
;îîÕ Œ
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* g
,
òòg h
e
òòi j
)
òòj k
;
òòk l
}
ôô 
}
õõ 	
public
ùù 
List
ùù 
<
ùù '
CentroDeAtencionExtendido
ùù -
>
ùù- .I
;ObtenerPuntosDeCompraVigentesPorEstablecimientosComerciales
ùù/ j
(
ùùj k
List
ùùk o
<
ùùo p
int
ùùp s
>
ùùs t-
idsEstablecimientosComercialesùùu ì
)ùùì î
{
ûû 	
try
üü 
{
†† 
return
°° *
_centroDeAtencionRepositorio
°° 3
.
°°3 4U
GObtenerCentrosDeAtencionExtendidosVigentesSegunRolIdsDeEstablecimientos
°°4 {
(
°°{ |
ActorSettings°°| â
.°°â ä
Default°°ä ë
.°°ë í"
IdRolPuntoDeCompra°°í §
,°°§ •.
idsEstablecimientosComerciales°°¶ ƒ
)°°ƒ ≈
.°°≈ ∆
ToList°°∆ Ã
(°°Ã Õ
)°°Õ Œ
;°°Œ œ
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
new
•• 
LogicaException
•• )
(
••) *
$str
••* h
,
••h i
e
••j k
)
••k l
;
••l m
}
¶¶ 
}
®® 	
public
¨¨ 
List
¨¨ 
<
¨¨ '
CentroDeAtencionExtendido
¨¨ -
>
¨¨- .D
6ObtenerAlmacenesVigentesPorEstablecimientosComerciales
¨¨/ e
(
¨¨e f
List
¨¨f j
<
¨¨j k
int
¨¨k n
>
¨¨n o-
idsEstablecimientosComerciales¨¨p é
)¨¨é è
{
≠≠ 	
try
ÆÆ 
{
ØØ 
return
∞∞ *
_centroDeAtencionRepositorio
∞∞ 3
.
∞∞3 4U
GObtenerCentrosDeAtencionExtendidosVigentesSegunRolIdsDeEstablecimientos
∞∞4 {
(
∞∞{ |
ActorSettings∞∞| â
.∞∞â ä
Default∞∞ä ë
.∞∞ë í
IdRolAlmacen∞∞í û
,∞∞û ü.
idsEstablecimientosComerciales∞∞† æ
)∞∞æ ø
.∞∞ø ¿
ToList∞∞¿ ∆
(∞∞∆ «
)∞∞« »
;∞∞» …
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
e
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ 
LogicaException
¥¥ )
(
¥¥) *
$str
¥¥* `
,
¥¥` a
e
¥¥b c
)
¥¥c d
;
¥¥d e
}
µµ 
}
∂∂ 	
public
∏∏ 
List
∏∏ 
<
∏∏ '
CentroDeAtencionExtendido
∏∏ -
>
∏∏- .@
2ObtenerCajasVigentesPorEstablecimientosComerciales
∏∏/ a
(
∏∏a b
List
∏∏b f
<
∏∏f g
int
∏∏g j
>
∏∏j k-
idsEstablecimientosComerciales∏∏l ä
)∏∏ä ã
{
ππ 	
try
∫∫ 
{
ªª 
return
ºº *
_centroDeAtencionRepositorio
ºº 3
.
ºº3 4U
GObtenerCentrosDeAtencionExtendidosVigentesSegunRolIdsDeEstablecimientos
ºº4 {
(
ºº{ |
ActorSettingsºº| â
.ººâ ä
Defaultººä ë
.ººë í
	IdRolCajaººí õ
,ººõ ú.
idsEstablecimientosComercialesººù ª
)ººª º
.ººº Ω
ToListººΩ √
(ºº√ ƒ
)ººƒ ≈
;ºº≈ ∆
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
øø 
throw
¿¿ 
new
¿¿ 
LogicaException
¿¿ )
(
¿¿) *
$str
¿¿* ]
,
¿¿] ^
e
¿¿_ `
)
¿¿` a
;
¿¿a b
}
¡¡ 
}
¬¬ 	
public
ƒƒ '
CentroDeAtencionExtendido
ƒƒ (2
$ObtenerCentroDeAtencionSucursalOSede
ƒƒ) M
(
ƒƒM N
int
ƒƒN Q 
idCentroDeAtencion
ƒƒR d
,
ƒƒd e
int
ƒƒf i#
idActorDeNegocioPadre
ƒƒj 
)ƒƒ Ä
{
≈≈ 	
try
∆∆ 
{
«« 
return
»» *
_centroDeAtencionRepositorio
»» 3
.
»»3 4Y
KObtenerCentroDeAtencionExtendidoPorIdDeCentroDeAtencionEIdDeEstablecimiento
»»4 
(»» Ä"
idCentroDeAtencion»»Ä í
,»»í ì%
idActorDeNegocioPadre»»î ©
)»»© ™
;»»™ ´
}
…… 
catch
   
(
   
	Exception
   
e
   
)
   
{
ÀÀ 
throw
ÃÃ 
e
ÃÃ 
;
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
public
–– 
OperationResult
–– '
DarDeBajaCentroDeAtencion
–– 8
(
––8 9
int
––9 < 
idCentroDeAtencion
––= O
)
––O P
{
—— 	
try
““ 
{
”” 
return
‘‘ 
_actorRepositorio
‘‘ (
.
‘‘( )(
DarDeBajaActorNegocioAhora
‘‘) C
(
‘‘C D 
idCentroDeAtencion
‘‘D V
,
‘‘V W
ActorSettings
‘‘X e
.
‘‘e f
Default
‘‘f m
.
‘‘m n"
IdRolEntidadInterna‘‘n Å
)‘‘Å Ç
;‘‘Ç É
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
◊◊ 
throw
ÿÿ 
e
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
public
‹‹ 
OperationResult
‹‹ S
EEstablecerCentroDeAtencionParaPreciosYStockDeEstablecimientoComercial
‹‹ d
(
‹‹d e
int
‹‹e h)
idEstablecimientoComencial‹‹i É
,‹‹É Ñ
int‹‹Ö à)
idCentroDeAtencionPrecios‹‹â ¢
,‹‹¢ £
int‹‹§ ß'
idCentroDeAtencionStock‹‹® ø
)‹‹ø ¿
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
OperationResult
‡‡ 
result
‡‡  &
=
‡‡' (
new
‡‡) ,
OperationResult
‡‡- <
(
‡‡< =
)
‡‡= >
;
‡‡> ?
if
‚‚ 
(
‚‚ '
idCentroDeAtencionPrecios
‚‚ -
>
‚‚. /
$num
‚‚0 1
)
‚‚1 2
{
„„ %
Parametro_actor_negocio
ÂÂ +;
-parametroCentroDeAtencionParaObtencionPrecios
ÂÂ, Y
=
ÂÂZ [)
_establecimientoRepositorio
ÂÂ\ w
.
ÂÂw xC
4ObtenerParametroCentroDeAtencionParaObtencionPreciosÂÂx ¨
(ÂÂ¨ ≠*
idEstablecimientoComencialÂÂ≠ «
)ÂÂ« »
;ÂÂ» …
if
ÊÊ 
(
ÊÊ ;
-parametroCentroDeAtencionParaObtencionPrecios
ÊÊ E
==
ÊÊF H
null
ÊÊI M
)
ÊÊM N
{
ÁÁ %
Parametro_actor_negocio
ËË /
	parametro
ËË0 9
=
ËË: ;
new
ËË< ?%
Parametro_actor_negocio
ËË@ W
(
ËËW X(
idEstablecimientoComencial
ËËX r
,
ËËr s
MaestroSettingsËËt É
.ËËÉ Ñ
DefaultËËÑ ã
.ËËã åO
?IdDetalleMaestroParametroIdCentroDeAtencionParaObtencionPreciosËËå À
,ËËÀ Ã)
idCentroDeAtencionPreciosËËÕ Ê
.ËËÊ Á
ToStringËËÁ Ô
(ËËÔ 
)ËË Ò
)ËËÒ Ú
;ËËÚ Û
result
ÈÈ 
=
ÈÈ  
_actorRepositorio
ÈÈ! 2
.
ÈÈ2 3(
CrearParametroActorNegocio
ÈÈ3 M
(
ÈÈM N
	parametro
ÈÈN W
)
ÈÈW X
;
ÈÈX Y
}
ÍÍ 
else
ÎÎ 
{
ÏÏ ;
-parametroCentroDeAtencionParaObtencionPrecios
ÌÌ E
.
ÌÌE F
valor
ÌÌF K
=
ÌÌL M'
idCentroDeAtencionPrecios
ÌÌN g
.
ÌÌg h
ToString
ÌÌh p
(
ÌÌp q
)
ÌÌq r
;
ÌÌr s
result
ÓÓ 
=
ÓÓ  
_actorRepositorio
ÓÓ! 2
.
ÓÓ2 3-
ActualizarParametroActorNegocio
ÓÓ3 R
(
ÓÓR S<
-parametroCentroDeAtencionParaObtencionPreciosÓÓS Ä
)ÓÓÄ Å
;ÓÓÅ Ç
}
ÔÔ 
}
 
if
ÒÒ 
(
ÒÒ %
idCentroDeAtencionStock
ÒÒ +
>
ÒÒ, -
$num
ÒÒ. /
)
ÒÒ/ 0
{
ÚÚ %
Parametro_actor_negocio
ÛÛ +;
-parametroCentroDeAtencionParaObtencionDeStock
ÛÛ, Y
=
ÛÛZ [)
_establecimientoRepositorio
ÛÛ\ w
.
ÛÛw xC
4ObtenerParametroCentroDeAtencionParaObtencionDeStockÛÛx ¨
(ÛÛ¨ ≠*
idEstablecimientoComencialÛÛ≠ «
)ÛÛ« »
;ÛÛ» …
if
ÙÙ 
(
ÙÙ ;
-parametroCentroDeAtencionParaObtencionDeStock
ÙÙ E
==
ÙÙF H
null
ÙÙI M
)
ÙÙM N
{
ıı %
Parametro_actor_negocio
ˆˆ /
	parametro
ˆˆ0 9
=
ˆˆ: ;
new
ˆˆ< ?%
Parametro_actor_negocio
ˆˆ@ W
(
ˆˆW X(
idEstablecimientoComencial
ˆˆX r
,
ˆˆr s
MaestroSettingsˆˆt É
.ˆˆÉ Ñ
DefaultˆˆÑ ã
.ˆˆã åM
=IdDetalleMaestroParametroIdCentroDeAtencionParaObtencionStockˆˆå …
,ˆˆ…  '
idCentroDeAtencionStockˆˆÀ ‚
.ˆˆ‚ „
ToStringˆˆ„ Î
(ˆˆÎ Ï
)ˆˆÏ Ì
)ˆˆÌ Ó
;ˆˆÓ Ô
result
˜˜ 
=
˜˜  
_actorRepositorio
˜˜! 2
.
˜˜2 3(
CrearParametroActorNegocio
˜˜3 M
(
˜˜M N
	parametro
˜˜N W
)
˜˜W X
;
˜˜X Y
}
¯¯ 
else
˘˘ 
{
˙˙ ;
-parametroCentroDeAtencionParaObtencionDeStock
˚˚ E
.
˚˚E F
valor
˚˚F K
=
˚˚L M%
idCentroDeAtencionStock
˚˚N e
.
˚˚e f
ToString
˚˚f n
(
˚˚n o
)
˚˚o p
;
˚˚p q
result
¸¸ 
=
¸¸  
_actorRepositorio
¸¸! 2
.
¸¸2 3-
ActualizarParametroActorNegocio
¸¸3 R
(
¸¸R S<
-parametroCentroDeAtencionParaObtencionDeStock¸¸S Ä
)¸¸Ä Å
;¸¸Å Ç
}
˝˝ 
}
˛˛ 
return
ÄÄ 
result
ÄÄ 
;
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
return
ÑÑ 
new
ÑÑ 
OperationResult
ÑÑ *
(
ÑÑ* +
e
ÑÑ+ ,
)
ÑÑ, -
;
ÑÑ- .
}
ÖÖ 
}
ÜÜ 	
public
ââ 
Actor
ââ ,
CrearActorParaCentroDeAtencion
ââ 3
(
ââ3 4
int
ââ4 7
idActor
ââ8 ?
,
ââ? @
string
ââA G
nombre
ââH N
)
ââN O
{
ää 	
string
ãã &
numeroDocumentoIdentidad
ãã +
;
ãã+ ,
int
åå 
idTipoPersona
åå 
;
åå 
int
çç  
idEstadoLegalActor
çç "
;
çç" #
int
éé 
idClaseActor
éé 
;
éé &
EstablecimientoComercial
êê $
sede
êê% )
=
êê* +)
_establecimientoRepositorio
êê, G
.
êêG H-
ObtenerEstablecimientoComercial
êêH g
(
êêg h
ActorSettings
êêh u
.
êêu v
Default
êêv }
.
êê} ~!
IdActorNegocioSedeêê~ ê
)êêê ë
;êêë í&
numeroDocumentoIdentidad
ëë $
=
ëë% &
sede
ëë' +
.
ëë+ , 
DocumentoIdentidad
ëë, >
;
ëë> ?
idTipoPersona
íí 
=
íí 
sede
íí  
.
íí  !
IdTipoPersona
íí! .
;
íí. / 
idEstadoLegalActor
ìì 
=
ìì  
sede
ìì! %
.
ìì% &
IdEstadoLegal
ìì& 3
;
ìì3 4
idClaseActor
îî 
=
îî 
sede
îî 
.
îî  
IdClaseActor
îî  ,
;
îî, -
Actor
ïï 
actor
ïï 
;
ïï 
if
ññ 
(
ññ 
idActor
ññ 
==
ññ 
$num
ññ 
)
ññ 
{
óó 
actor
òò 
=
òò 
new
òò 
Actor
òò !
(
òò! "
)
òò" #
{
ôô $
id_documento_identidad
öö *
=
öö+ ,
ActorSettings
öö- :
.
öö: ;
Default
öö; B
.
ööB C)
IdTipoDocumentoIdentidadRuc
ööC ^
,
öö^ _
fecha_nacimiento
õõ $
=
õõ% &
DateTimeUtil
õõ' 3
.
õõ3 4
FechaActual
õõ4 ?
(
õõ? @
)
õõ@ A
,
õõA B(
numero_documento_identidad
úú .
=
úú/ 0&
numeroDocumentoIdentidad
úú1 I
,
úúI J
primer_nombre
ùù !
=
ùù" #
nombre
ùù$ *
,
ùù* +
segundo_nombre
ûû "
=
ûû# $
$str
ûû% '
,
ûû' (
telefono
üü 
=
üü 
$str
üü !
,
üü! "
id_tipo_actor
†† !
=
††" #
idTipoPersona
††$ 1
,
††1 2
id_foto
°° 
=
°° 
ActorSettings
°° +
.
°°+ ,
Default
°°, 3
.
°°3 4#
IdFotoActorPorDefecto
°°4 I
,
°°I J
id_clase_actor
¢¢ "
=
¢¢# $
idClaseActor
¢¢% 1
,
¢¢1 2
id_estado_legal
££ #
=
££$ % 
idEstadoLegalActor
££& 8
,
££8 9
correo
§§ 
=
§§ 
$str
§§ 
,
§§  
tercer_nombre
•• !
=
••" #
$str
••$ &
,
••& '

pagina_web
¶¶ 
=
¶¶  
$str
¶¶! #
,
¶¶# $(
informacion_multiproposito
ßß .
=
ßß/ 0
$str
ßß1 3
}
®® 
;
®® 
}
©© 
else
™™ 
{
´´ 
actor
¨¨ 
=
¨¨ 
new
¨¨ 
Actor
¨¨ !
(
¨¨! "
)
¨¨" #
{
≠≠ 
id
ÆÆ 
=
ÆÆ 
idActor
ÆÆ  
,
ÆÆ  !$
id_documento_identidad
ØØ *
=
ØØ+ ,
ActorSettings
ØØ- :
.
ØØ: ;
Default
ØØ; B
.
ØØB C)
IdTipoDocumentoIdentidadRuc
ØØC ^
,
ØØ^ _
fecha_nacimiento
∞∞ $
=
∞∞% &
DateTimeUtil
∞∞' 3
.
∞∞3 4
FechaActual
∞∞4 ?
(
∞∞? @
)
∞∞@ A
,
∞∞A B(
numero_documento_identidad
±± .
=
±±/ 0&
numeroDocumentoIdentidad
±±1 I
,
±±I J
primer_nombre
≤≤ !
=
≤≤" #
nombre
≤≤$ *
,
≤≤* +
segundo_nombre
≥≥ "
=
≥≥# $
$str
≥≥% '
,
≥≥' (
telefono
¥¥ 
=
¥¥ 
$str
¥¥ !
,
¥¥! "
id_tipo_actor
µµ !
=
µµ" #
idTipoPersona
µµ$ 1
,
µµ1 2
id_foto
∂∂ 
=
∂∂ 
ActorSettings
∂∂ +
.
∂∂+ ,
Default
∂∂, 3
.
∂∂3 4#
IdFotoActorPorDefecto
∂∂4 I
,
∂∂I J
id_clase_actor
∑∑ "
=
∑∑# $
idClaseActor
∑∑% 1
,
∑∑1 2
id_estado_legal
∏∏ #
=
∏∏$ % 
idEstadoLegalActor
∏∏& 8
,
∏∏8 9
correo
ππ 
=
ππ 
$str
ππ 
,
ππ  
tercer_nombre
∫∫ !
=
∫∫" #
$str
∫∫$ &
,
∫∫& '

pagina_web
ªª 
=
ªª  
$str
ªª! #
,
ªª# $(
informacion_multiproposito
ºº .
=
ºº/ 0
$str
ºº1 3
}
ΩΩ 
;
ΩΩ 
}
ææ 
return
¿¿ 
actor
¿¿ 
;
¿¿ 
}
¡¡ 	
public
√√ 
OperationResult
√√ #
CrearCentroDeAtencion
√√ 4
(
√√4 5
int
√√5 8

idEmpleado
√√9 C
,
√√C D
string
√√E K
codigo
√√L R
,
√√R S
string
√√T Z
nombre
√√[ a
,
√√a b
bool
√√c g"
salidaBienesSinStock
√√h |
,
√√| }
List√√~ Ç
<√√Ç É
int√√É Ü
>√√Ü á
idRoles√√à è
,√√è ê
int√√ë î'
idCentroDeAtencionPadre√√ï ¨
)√√¨ ≠
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
DateTime
«« 
fechaActual
«« $
=
««% &
DateTimeUtil
««' 3
.
««3 4
FechaActual
««4 ?
(
««? @
)
««@ A
;
««A B
DateTime
»» 
fechaFin
»» !
=
»»" #
fechaActual
»»$ /
.
»»/ 0
AddYears
»»0 8
(
»»8 9
ActorSettings
»»9 F
.
»»F G
Default
»»G N
.
»»N OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna»»O Ü
)»»Ü á
;»»á à
Actor_negocio
…… 
centroDeAtencion
…… .
=
……/ 0
new
……1 4
Actor_negocio
……5 B
(
……B C
ActorSettings
……C P
.
……P Q
Default
……Q X
.
……X Y!
IdRolEntidadInterna
……Y l
,
……l m
fechaActual
……n y
,
……y z
fechaFin……{ É
,……É Ñ
codigo……Ö ã
,……ã å
true……ç ë
,……ë í'
idCentroDeAtencionPadre……ì ™
,……™ ´
false……¨ ±
,……± ≤
$str……≥ µ
)……µ ∂
{
   
Actor
ÀÀ 
=
ÀÀ ,
CrearActorParaCentroDeAtencion
ÀÀ :
(
ÀÀ: ;
$num
ÀÀ; <
,
ÀÀ< =
nombre
ÀÀ> D
)
ÀÀD E
}
ÃÃ 
;
ÃÃ 
if
ŒŒ 
(
ŒŒ 
idRoles
ŒŒ 
!=
ŒŒ 
null
ŒŒ #
)
ŒŒ# $
{
œœ 
foreach
–– 
(
–– 
var
––  
item
––! %
in
––& (
idRoles
––) 0
)
––0 1
{
—— 
centroDeAtencion
““ (
.
““( )
Actor
““) .
.
““. /
Actor_negocio
““/ <
.
““< =
Add
““= @
(
““@ A
new
““A D
Actor_negocio
““E R
(
““R S
item
““S W
,
““W X
fechaActual
““Y d
,
““d e
fechaFin
““f n
,
““n o
$str
““p r
,
““r s
true
““t x
,
““x y&
idCentroDeAtencionPadre““z ë
,““ë í
false““ì ò
,““ò ô
$str““ö ú
)““ú ù
)““ù û
;““û ü
}
”” 
}
‘‘ 
centroDeAtencion
’’  
.
’’  !
extension_json
’’! /
=
’’0 1
idRoles
’’2 9
.
’’9 :
Contains
’’: B
(
’’B C
ActorSettings
’’C P
.
’’P Q
Default
’’Q X
.
’’X Y
IdRolAlmacen
’’Y e
)
’’e f
?
’’g h
$str’’i Ö
+’’Ü á$
salidaBienesSinStock’’à ú
.’’ú ù
ToString’’ù •
(’’• ¶
)’’¶ ß
.’’ß ®
ToLower’’® Ø
(’’Ø ∞
)’’∞ ±
+’’≤ ≥
$str’’¥ ∫
:’’ª º
$str’’Ω ø
;’’ø ¿
OperationResult
÷÷ 
result
÷÷  &
=
÷÷' (
_actorRepositorio
÷÷) :
.
÷÷: ;
CrearActorNegocio
÷÷; L
(
÷÷L M
centroDeAtencion
÷÷M ]
)
÷÷] ^
;
÷÷^ _
OperationResult
◊◊ '
resultadoInventarioActual
◊◊  9
=
◊◊: ;
null
◊◊< @
;
◊◊@ A
if
ÿÿ 
(
ÿÿ 
result
ÿÿ 
.
ÿÿ 
code_result
ÿÿ &
==
ÿÿ' )!
OperationResultEnum
ÿÿ* =
.
ÿÿ= >
Success
ÿÿ> E
&&
ÿÿF H
idRoles
ÿÿI P
.
ÿÿP Q
Contains
ÿÿQ Y
(
ÿÿY Z
ActorSettings
ÿÿZ g
.
ÿÿg h
Default
ÿÿh o
.
ÿÿo p
IdRolAlmacen
ÿÿp |
)
ÿÿ| }
)
ÿÿ} ~
{
ŸŸ 
try
⁄⁄ 
{
€€ '
resultadoInventarioActual
‹‹ 1
=
‹‹2 3&
_inventarioActual_Logica
‹‹4 L
.
‹‹L M#
CrearInventarioActual
‹‹M b
(
‹‹b c
(
‹‹c d
int
‹‹d g
)
‹‹g h
result
‹‹h n
.
‹‹n o
data
‹‹o s
,
‹‹s t

idEmpleado
‹‹u 
)‹‹ Ä
;‹‹Ä Å
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ $
ee
ﬁﬁ% '
)
ﬁﬁ' (
{
ﬂﬂ 
throw
‡‡ 
new
‡‡ !
LogicaException
‡‡" 1
(
‡‡1 2
$str‡‡2 Ö
,‡‡Ö Ü
ee‡‡á â
)‡‡â ä
;‡‡ä ã
}
·· 
}
„„ 
return
‰‰ '
resultadoInventarioActual
‰‰ 0
??
‰‰1 3
result
‰‰4 :
;
‰‰: ;
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÁÁ 
return
ËË 
new
ËË 
OperationResult
ËË *
(
ËË* +
e
ËË+ ,
)
ËË, -
;
ËË- .
}
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
OperationResult
ÏÏ (
ActualizarCentroDeAtencion
ÏÏ 9
(
ÏÏ9 :
int
ÏÏ: =

idEmpleado
ÏÏ> H
,
ÏÏH I
int
ÏÏJ M
idActor
ÏÏN U
,
ÏÏU V
int
ÏÏW Z 
idCentroDeAtencion
ÏÏ[ m
,
ÏÏm n
string
ÏÏo u
codigo
ÏÏv |
,
ÏÏ| }
stringÏÏ~ Ñ
nombreÏÏÖ ã
,ÏÏã å
boolÏÏç ë$
salidaBienesSinStockÏÏí ¶
,ÏÏ¶ ß
ListÏÏ® ¨
<ÏÏ¨ ≠
intÏÏ≠ ∞
>ÏÏ∞ ±
idRolesÏÏ≤ π
,ÏÏπ ∫
intÏÏª æ'
idCentroDeAtencionPadreÏÏø ÷
)ÏÏ÷ ◊
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
codigo
 
=
 
String
 
.
  
IsNullOrEmpty
  -
(
- .
codigo
. 4
)
4 5
?
6 7
$str
8 :
:
; <
codigo
= C
;
C D
List
ÒÒ 
<
ÒÒ 
_Existencia
ÒÒ  
>
ÒÒ  !
existencias
ÒÒ" -
=
ÒÒ. /
new
ÒÒ0 3
List
ÒÒ4 8
<
ÒÒ8 9
_Existencia
ÒÒ9 D
>
ÒÒD E
(
ÒÒE F
)
ÒÒF G
;
ÒÒG H
List
ÚÚ 
<
ÚÚ !
Detalle_transaccion
ÚÚ (
>
ÚÚ( )
detalles
ÚÚ* 2
=
ÚÚ3 4
new
ÚÚ5 8
List
ÚÚ9 =
<
ÚÚ= >!
Detalle_transaccion
ÚÚ> Q
>
ÚÚQ R
(
ÚÚR S
)
ÚÚS T
;
ÚÚT U
DateTime
ÛÛ 
fechaActual
ÛÛ $
=
ÛÛ% &
DateTimeUtil
ÛÛ' 3
.
ÛÛ3 4
FechaActual
ÛÛ4 ?
(
ÛÛ? @
)
ÛÛ@ A
;
ÛÛA B
DateTime
ÙÙ 
fechaFin
ÙÙ !
=
ÙÙ" #
fechaActual
ÙÙ$ /
.
ÙÙ/ 0
AddYears
ÙÙ0 8
(
ÙÙ8 9
ActorSettings
ÙÙ9 F
.
ÙÙF G
Default
ÙÙG N
.
ÙÙN OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaÙÙO Ü
)ÙÙÜ á
;ÙÙá à
Actor
ˆˆ 
actor
ˆˆ 
=
ˆˆ ,
CrearActorParaCentroDeAtencion
ˆˆ <
(
ˆˆ< =
idActor
ˆˆ= D
,
ˆˆD E
nombre
ˆˆF L
)
ˆˆL M
;
ˆˆM N
Actor_negocio
˜˜ 
centroDeAtencion
˜˜ .
=
˜˜/ 0
new
˜˜1 4
Actor_negocio
˜˜5 B
(
˜˜B C 
idCentroDeAtencion
˜˜C U
,
˜˜U V
idActor
˜˜W ^
,
˜˜^ _
ActorSettings
˜˜` m
.
˜˜m n
Default
˜˜n u
.
˜˜u v"
IdRolEntidadInterna˜˜v â
,˜˜â ä
fechaActual˜˜ã ñ
,˜˜ñ ó
fechaFin˜˜ò †
,˜˜† °
codigo˜˜¢ ®
,˜˜® ©
true˜˜™ Æ
,˜˜Æ Ø
false˜˜∞ µ
,˜˜µ ∂
$str˜˜∑ π
)˜˜π ∫
{˜˜ª º
Actor˜˜Ω ¬
=˜˜√ ƒ
actor˜˜≈  
}˜˜À Ã
;˜˜Ã Õ
if
¯¯ 
(
¯¯ 
idRoles
¯¯ 
!=
¯¯ 
null
¯¯ #
)
¯¯# $
{
˘˘ 
foreach
˙˙ 
(
˙˙ 
var
˙˙  
item
˙˙! %
in
˙˙& (
idRoles
˙˙) 0
)
˙˙0 1
{
˚˚ 
centroDeAtencion
¸¸ (
.
¸¸( )
Actor
¸¸) .
.
¸¸. /
Actor_negocio
¸¸/ <
.
¸¸< =
Add
¸¸= @
(
¸¸@ A
new
¸¸A D
Actor_negocio
¸¸E R
(
¸¸R S
idActor
¸¸S Z
,
¸¸Z [
item
¸¸\ `
,
¸¸` a
fechaActual
¸¸b m
,
¸¸m n
fechaFin
¸¸o w
,
¸¸w x
$str
¸¸y {
,
¸¸{ |
true¸¸} Å
,¸¸Å Ç
false¸¸É à
,¸¸à â
$str¸¸ä å
,¸¸å ç'
idCentroDeAtencionPadre¸¸é •
)¸¸• ¶
)¸¸¶ ß
;¸¸ß ®
}
˝˝ 
}
˛˛ 
centroDeAtencion
ˇˇ  
.
ˇˇ  !
extension_json
ˇˇ! /
=
ˇˇ0 1
idRoles
ˇˇ2 9
.
ˇˇ9 :
Contains
ˇˇ: B
(
ˇˇB C
ActorSettings
ˇˇC P
.
ˇˇP Q
Default
ˇˇQ X
.
ˇˇX Y
IdRolAlmacen
ˇˇY e
)
ˇˇe f
?
ˇˇg h
$strˇˇi Ö
+ˇˇÜ á$
salidaBienesSinStockˇˇà ú
.ˇˇú ù
ToStringˇˇù •
(ˇˇ• ¶
)ˇˇ¶ ß
.ˇˇß ®
ToLowerˇˇ® Ø
(ˇˇØ ∞
)ˇˇ∞ ±
+ˇˇ≤ ≥
$strˇˇ¥ ∫
:ˇˇª º
$strˇˇΩ ø
;ˇˇø ¿
OperationResult
ÅÅ 
result
ÅÅ  &
=
ÅÅ' (
_actorRepositorio
ÅÅ) :
.
ÅÅ: ;$
ActualizarActorNegocio
ÅÅ; Q
(
ÅÅQ R
centroDeAtencion
ÅÅR b
)
ÅÅb c
;
ÅÅc d
OperationResult
ÇÇ $
resultInventarioActual
ÇÇ  6
=
ÇÇ7 8
null
ÇÇ9 =
;
ÇÇ= >
if
ÉÉ 
(
ÉÉ 
result
ÉÉ 
.
ÉÉ 
code_result
ÉÉ &
==
ÉÉ' )!
OperationResultEnum
ÉÉ* =
.
ÉÉ= >
Success
ÉÉ> E
&&
ÉÉF H
idRoles
ÉÉI P
.
ÉÉP Q
Contains
ÉÉQ Y
(
ÉÉY Z
ActorSettings
ÉÉZ g
.
ÉÉg h
Default
ÉÉh o
.
ÉÉo p
IdRolAlmacen
ÉÉp |
)
ÉÉ| }
&&ÉÉ~ Ä
!ÉÉÅ Ç,
_centroDeAtencionRepositorioÉÉÇ û
.ÉÉû ü%
TieneInventarioActualÉÉü ¥
(ÉÉ¥ µ"
idCentroDeAtencionÉÉµ «
)ÉÉ« »
)ÉÉ» …
{
ÑÑ $
resultInventarioActual
ÖÖ *
=
ÖÖ+ ,&
_inventarioActual_Logica
ÖÖ- E
.
ÖÖE F#
CrearInventarioActual
ÖÖF [
(
ÖÖ[ \
(
ÖÖ\ ]
int
ÖÖ] `
)
ÖÖ` a
result
ÖÖa g
.
ÖÖg h
data
ÖÖh l
,
ÖÖl m

idEmpleado
ÖÖn x
)
ÖÖx y
;
ÖÖy z
}
ÜÜ 
return
áá $
resultInventarioActual
áá -
??
áá. 0
result
áá1 7
;
áá7 8
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
return
ãã 
new
ãã 
OperationResult
ãã *
(
ãã* +
e
ãã+ ,
)
ãã, -
;
ãã- .
}
åå 
}
çç 	
}
êê 
}ëë º
LD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Empleado\Empleado_Logica.cs
	namespace

 	
Tsp


 
.

 
Sigescom

 
.

 
Logica

 
.

 
Core

 "
.

" #
Empleado

# +
{ 
public 

class 
Empleado_Logica  
:  !
IEmpleado_Logica" 2
{ 
private 
readonly !
IEmpleado_Repositorio . 
_empleadoRepositorio/ C
;C D
public 
Empleado_Logica 
( !
IEmpleado_Repositorio 4
empleadoRepositorio5 H
)H I
{ 	 
_empleadoRepositorio  
=! "
empleadoRepositorio# 6
;6 7
} 	
public 
int 
ObtenerIdEmpleado $
($ %
string% +
	idUsuario, 5
)5 6
{ 	
try 
{ 
return  
_empleadoRepositorio -
.- .
	ObtenerId. 7
(7 8
	idUsuario8 A
)A B
;B C
}D E
catchF K
(L M
	ExceptionM V
eW X
)X Y
{Z [
throw\ a
eb c
;c d
}e f
} 	
public 
string !
ObtenerNombreEmpleado +
(+ ,
string, 2
	idUsuario3 <
)< =
{ 	
try 
{ 
return  
_empleadoRepositorio -
.- .
ObtenerNombre. ;
(; <
	idUsuario< E
)E F
;F G
}H I
catchJ O
(P Q
	ExceptionQ Z
e[ \
)\ ]
{^ _
throw` e
ef g
;g h
}i j
} 	
public 
	Empleado_ )
ObtenerEmpleadoInclusiveRoles 6
(6 7
string7 =
	idUsuario> G
)G H
{ 	
return  
_empleadoRepositorio '
.' (
ObtenerEmpleado( 7
(7 8
	idUsuario8 A
)A B
;B C
} 	
public   
	Empleado_   )
ObtenerEmpleadoInclusiveRoles   6
(  6 7
int  7 :
id  ; =
)  = >
{!! 	
return""  
_empleadoRepositorio"" '
.""' (
ObtenerEmpleado""( 7
(""7 8
id""8 :
)"": ;
;""; <
}## 	
}%% 
}&& ´%
RD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Finanza\AjusteTesoreria_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
	Tesoreria# ,
{ 
public 

class "
AjusteTesoreria_Logica '
:( )#
IAjusteTesoreria_Logica* A
{ 
	protected 
readonly .
"IActualizarTransaccion_Repositorio ='
_actualizarTransaccionDatos> Y
;Y Z
	protected 
readonly ,
 IConsultaTransaccion_Repositorio ;%
_consultaTransaccionDatos< U
;U V
public "
AjusteTesoreria_Logica %
(% &,
 IConsultaTransaccion_Repositorio& F$
consultaTransaccionDatosG _
,_ `/
"IActualizarTransaccion_Repositorio	a É(
actualizarTransaccionDatos
Ñ û
)
û ü
{ 	%
_consultaTransaccionDatos %
=& '$
consultaTransaccionDatos( @
;@ A'
_actualizarTransaccionDatos '
=( )&
actualizarTransaccionDatos* D
;D E
} 	
public%% 
OperationResult%% >
2CorregirTipoTransaccionPagoEnNotasDeCreditoYDebito%% Q
(%%Q R
)%%R S
{&& 	
try'' 
{(( 
var++  
transaccionesErradas++ (
=++( )%
_consultaTransaccionDatos++* C
.++C DL
?ObtenerTransaccionesSegunTipoYConTipoTransaccionPadreDiferenteA	++D É
(
++É Ñ!
TransaccionSettings
++Ñ ó
.
++ó ò
Default
++ò ü
.
++ü †7
)IdTipoTransaccionCobranzaFacturasClientes
++† …
,
++…  !
TransaccionSettings
++À ﬁ
.
++ﬁ ﬂ
Default
++ﬂ Ê
.
++Ê Á$
IdTipoTransaccionVenta
++Á ˝
)
++˝ ˛
.
++˛ ˇ
ToList
++ˇ Ö
(
++Ö Ü
)
++Ü á
;
++á à
var,, 
transaccionesPadre,, &
=,,' (%
_consultaTransaccionDatos,,) B
.,,B C%
ObtenerTransaccionesPadre,,C \
(,,\ ] 
transaccionesErradas,,] q
.,,q r
Select,,r x
(,,x y
t,,y z
=>,,z |
t,,} ~
.,,~ 
id	,, Å
)
,,Å Ç
.
,,Ç É
ToArray
,,É ä
(
,,ä ã
)
,,ã å
)
,,å ç
.
,,ç é
ToList
,,é î
(
,,î ï
)
,,ï ñ
;
,,ñ ó
foreach.. 
(.. 
var.. 
transaccionErrada.. .
in../ 1 
transaccionesErradas..2 F
)..F G
{// 
var00 "
idTipoTransaccionPadre00 .
=00/ 0
transaccionesPadre001 C
.00C D
FirstOrDefault00D R
(00R S
t00S T
=>00T V
t00W X
.00X Y
id00Y [
==00\ ^
transaccionErrada00_ p
.00p q!
id_transaccion_padre	00q Ö
)
00Ö Ü
.
00Ü á!
id_tipo_transaccion
00á ö
;
00ö õ
var11 "
idTipoTransaccionOrden11 .
=11/ 0
Diccionario111 <
.11< =
MapeoWraperVsOrden11= O
.11O P
Single11P V
(11V W
t11W X
=>11Y [
t11\ ]
.11] ^
Key11^ a
==11b d"
idTipoTransaccionPadre11e {
)11{ |
.11| }
Value	11} Ç
;
11Ç É
var22 &
idTipoTransaccionTesoreria22 2
=223 4
Diccionario225 @
.22@ A+
MapeoOrdenVsMovimientoEconomico22A `
.22` a
Single22a g
(22g h
t22h i
=>22j l
t22m n
.22n o
Key22o r
==22s u#
idTipoTransaccionOrden	22v å
)
22å ç
.
22ç é
Value
22é ì
;
22ì î
transaccionErrada44 %
.44% &
id_tipo_transaccion44& 9
=44: ;&
idTipoTransaccionTesoreria44< V
;44V W
}55 
return66 '
_actualizarTransaccionDatos66 2
.662 3#
ActualizarTransacciones663 J
(66J K 
transaccionesErradas66K _
.66_ `
ToList66` f
(66f g
)66g h
)66h i
;66i j
}88 
catch99 
(99 
	Exception99 
e99 
)99 
{:: 
throw;; 
new;; 
LogicaException;; )
(;;) *
$str;;* R
+;;S T
e;;U V
.;;V W
Message;;W ^
,;;^ _
e;;` a
);;a b
;;;b c
}<< 
}== 	
}AA 
}BB Û
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Finanza\ArqueoCaja_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Finanza# *
{ 
public 

class 
ArqueoCaja_Logica "
:# $
IArqueoCaja_Logica% 7
{ 
	protected 
readonly 
IActorNegocioLogica .
_actorNegocioLogica/ B
;B C
	protected 
readonly 
IOperacionLogica +
_operacionLogica, <
;< =
	protected 
readonly 
IMaestroRepositorio .
_maestroDatos/ <
;< =
	protected 
readonly '
IFinanzaReporte_Repositorio 6"
_finanzaReportingDatos7 M
;M N
	protected 
readonly #
ITransaccionRepositorio 2
_transaccionDatos3 D
;D E
public 
ArqueoCaja_Logica  
(  !
IActorNegocioLogica! 4
actorNegocioLogica5 G
,G H
IMaestroRepositorioI \
maestroDatos] i
,i j(
IFinanzaReporte_Repositorio	k Ü#
finanzaReportingDatos
á ú
,
ú ù
IOperacionLogica
û Æ
operacionLogica
Ø æ
,
æ ø%
ITransaccionRepositorio
¿ ◊
transaccionDatos
ÿ Ë
)
Ë È
{ 	
_actorNegocioLogica   
=    !
actorNegocioLogica  " 4
;  4 5
_maestroDatos!! 
=!! 
maestroDatos!! (
;!!( )"
_finanzaReportingDatos"" "
=""# $!
finanzaReportingDatos""% :
;"": ;
_operacionLogica## 
=## 
operacionLogica## .
;##. /
_transaccionDatos$$ 
=$$ 
transaccionDatos$$  0
;$$0 1
}%% 	
}'' 
}(( Ê¬
QD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Finanza\FinanzaReporte_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Finanza# *
{ 
public 

class !
FinanzaReporte_Logica &
:' ("
IFinanzaReporte_Logica) ?
{ 
	protected 
readonly 
IActorNegocioLogica .
_actorNegocioLogica/ B
;B C
	protected 
readonly 
IOperacionLogica +
_operacionLogica, <
;< =
	protected 
readonly 
IMaestroRepositorio .
_maestroDatos/ <
;< =
	protected 
readonly '
IFinanzaReporte_Repositorio 6"
_finanzaReportingDatos7 M
;M N
	protected 
readonly #
ITransaccionRepositorio 2
_transaccionDatos3 D
;D E
	protected 
readonly #
IEstablecimiento_Logica 2"
_establecimientoLogica3 I
;I J
public"" !
FinanzaReporte_Logica"" $
(""$ %
IActorNegocioLogica""% 8
actorNegocioLogica""9 K
,""K L
IMaestroRepositorio""M `
maestroDatos""a m
,""m n(
IFinanzaReporte_Repositorio	""o ä#
finanzaReportingDatos
""ã †
,
""† °
IOperacionLogica
""¢ ≤
operacionLogica
""≥ ¬
,
""¬ √%
ITransaccionRepositorio
""ƒ €
transaccionDatos
""‹ Ï
,
""Ï Ì%
IEstablecimiento_Logica
""Ó Ö#
establecimientoLogica
""Ü õ
)
""õ ú
{## 	
_actorNegocioLogica$$ 
=$$  !
actorNegocioLogica$$" 4
;$$4 5
_maestroDatos%% 
=%% 
maestroDatos%% (
;%%( )"
_finanzaReportingDatos&& "
=&&# $!
finanzaReportingDatos&&% :
;&&: ;
_operacionLogica'' 
='' 
operacionLogica'' .
;''. /
_transaccionDatos(( 
=(( 
transaccionDatos((  0
;((0 1"
_establecimientoLogica)) "
=))# $!
establecimientoLogica))% :
;)): ;
}** 	
public++ 
PrincipalReportData++ ",
 ObtenerDatosParaReportePrincipal++# C
(++C D"
UserProfileSessionData++D Z
profileData++[ f
)++f g
{,, 	
var-- .
"establecimientosConSusCajasCuentas-- 2
=--3 4
new--5 8
List--9 =
<--= >
Establecimiento--> M
>--M N
(--N O
)--O P
;--P Q
var.. !
establecimientoSesion.. %
=..& '
profileData..( 3
...3 40
$EstablecimientoComercialSeleccionado..4 X
...X Y
ToEstablecimiento..Y j
(..j k
)..k l
;..l m
var// *
TieneRolAdministradorDeNegocio// .
=/// 0
profileData//1 <
.//< =
Empleado//= E
.//E F
TieneRol//F N
(//N O
ActorSettings//O \
.//\ ]
Default//] d
.//d e(
idRolAdministradorDeNegocio	//e Ä
)
//Ä Å
;
//Å Ç
var00 

CajaSesion00 
=00 
profileData00 (
.00( )(
CentroDeAtencionSeleccionado00) E
.00E F
ToItemGenerico00F T
(00T U
)00U V
;00V W
if22 
(22 
!22 *
TieneRolAdministradorDeNegocio22 /
)22/ 0
{33 !
establecimientoSesion44 %
.44% &
CentrosAtencion44& 5
=446 7
new448 ;
List44< @
<44@ A
ItemGenerico44A M
>44M N
{44O P

CajaSesion44Q [
}44\ ]
;44] ^
}55 
if77 
(77 *
TieneRolAdministradorDeNegocio77 .
)77. /
{88 .
"establecimientosConSusCajasCuentas99 2
=993 4
Establecimiento995 D
.99D E
Convert99E L
(99L M"
_establecimientoLogica99M c
.99c dB
5ObtenerEstablecimientosComercialesVigentesConSusCajas	99d ô
(
99ô ö
)
99ö õ
)
99õ ú
;
99ú ù.
"establecimientosConSusCajasCuentas:: 2
.::2 3
ForEach::3 :
(::: ;
ec::; =
=>::> @
ec::A C
.::C D
CentrosAtencion::D S
.::S T
ForEach::T [
(::[ \
ca::\ ^
=>::_ a
ca::b d
.::d e
Valor::e j
=::k l
$str::m t
)::t u
)::u v
;::v w
var;; 
cuentasBancarias;; $
=;;% &
_operacionLogica;;' 7
.;;7 8@
4ObtenerCuentasBancariasConEntidadFinancieraConMoneda;;8 l
(;;l m
);;m n
;;;n o
cuentasBancarias<<  
.<<  !
ForEach<<! (
(<<( )
cb<<) +
=><<, .
cb<</ 1
.<<1 2
Valor<<2 7
=<<8 9
$str<<: @
)<<@ A
;<<A B.
"establecimientosConSusCajasCuentas== 2
.==2 3
ForEach==3 :
(==: ;
e==; <
=>=== ?
e==@ A
.==A B
CentrosAtencion==B Q
.==Q R
AddRange==R Z
(==Z [
cuentasBancarias==[ k
)==k l
)==l m
;==m n
}>> 
var?? 

mediosPago?? 
=?? 
_maestroDatos?? *
.??* +-
!ObtenerDetallesComoItemsGenericos??+ L
(??L M
MaestroSettings??M \
.??\ ]
Default??] d
.??d e 
IdMaestroMedioDePago??e y
)??y z
.??z {
ToList	??{ Å
(
??Å Ç
)
??Ç É
;
??É Ñ
var@@ 
data@@ 
=@@ 
new@@ 
PrincipalReportData@@ .
(@@. /
)@@/ 0
{AA 
FechaActual_BB 
=BB 
DateTimeUtilBB +
.BB+ ,
FechaActualBB, 7
(BB7 8
)BB8 9
,BB9 :!
EstablecimientoSesionCC %
=CC& '!
establecimientoSesionCC( =
,CC= >
EsAdministradorDD 
=DD  !*
TieneRolAdministradorDeNegocioDD" @
,DD@ A
EstablecimientosEE  
=EE! "*
TieneRolAdministradorDeNegocioEE# A
?EEB C.
"establecimientosConSusCajasCuentasEED f
:EEg h
newEEi l
ListEEm q
<EEq r
Establecimiento	EEr Å
>
EEÅ Ç
(
EEÇ É
)
EEÉ Ñ
{
EEÖ Ü#
establecimientoSesion
EEá ú
}
EEù û
,
EEû ü
CajasFF 
=FF *
TieneRolAdministradorDeNegocioFF 6
?FF7 8.
"establecimientosConSusCajasCuentasFF9 [
.FF[ \

SelectManyFF\ f
(FFf g
eFFg h
=>FFi k
eFFl m
.FFm n
CentrosAtencionFFn }
)FF} ~
.FF~ 
Where	FF Ñ
(
FFÑ Ö
ca
FFÖ á
=>
FFà ä
ca
FFä å
.
FFå ç
Valor
FFç í
==
FFì ï
$str
FFñ ù
)
FFù û
.
FFû ü
ToList
FFü •
(
FF• ¶
)
FF¶ ß
:
FF® ©
new
FF™ ≠
List
FFÆ ≤
<
FF≤ ≥
ItemGenerico
FF≥ ø
>
FFø ¿
(
FF¿ ¡
)
FF¡ ¬
{
FF√ ƒ
profileData
FF≈ –
.
FF– —*
CentroDeAtencionSeleccionado
FF— Ì
.
FFÌ Ó
ToItemGenerico
FFÓ ¸
(
FF¸ ˝
)
FF˝ ˛
}
FFˇ Ä
,
FFÄ Å

MediosPagoGG 
=GG 

mediosPagoGG '
,GG' (
MediosPagoCuentaHH  
=HH! "

mediosPagoHH# -
.HH- .
WhereHH. 3
(HH3 4
mHH4 5
=>HH6 8
mHH9 :
.HH: ;
IdHH; =
==HH> @
MaestroSettingsHHA P
.HHP Q
DefaultHHQ X
.HHX Y=
0IdDetalleMaestroMedioDepagoTransferenciaDeFondos	HHY â
||
HHä å
m
HHç é
.
HHé è
Id
HHè ë
==
HHí î
MaestroSettings
HHï §
.
HH§ •
Default
HH• ¨
.
HH¨ ≠9
+IdDetalleMaestroMedioDepagoDepositoEnCuenta
HH≠ ÿ
)
HHÿ Ÿ
.
HHŸ ⁄
ToList
HH⁄ ‡
(
HH‡ ·
)
HH· ‚
,
HH‚ „
OperacionesIngresosII #
=II$ %
_transaccionDatosII& 7
.II7 86
*ObtenerTipoDeTransaccionPorAccionDeNegocioII8 b
(IIb c
TransaccionSettingsIIc v
.IIv w
DefaultIIw ~
.II~ .
!IdAccionDeNegocioMovimientoEnCaja	II †
,
II† °
true
II¢ ¶
)
II¶ ß
.
IIß ®
ToList
II® Æ
(
IIÆ Ø
)
IIØ ∞
,
II∞ ±
OperacionesEgresosJJ "
=JJ# $
_transaccionDatosJJ% 6
.JJ6 76
*ObtenerTipoDeTransaccionPorAccionDeNegocioJJ7 a
(JJa b
TransaccionSettingsJJb u
.JJu v
DefaultJJv }
.JJ} ~.
!IdAccionDeNegocioMovimientoEnCaja	JJ~ ü
,
JJü †
false
JJ° ¶
)
JJ¶ ß
.
JJß ®
ToList
JJ® Æ
(
JJÆ Ø
)
JJØ ∞
}LL 
;LL 
returnMM 
dataMM 
;MM 
}NN 	
publicPP 
ListPP 
<PP 
IngresoEgresoPP !
>PP! "
IngresosPP# +
(PP+ ,
boolPP, 0
esCuentaPP1 9
,PP9 :
intPP; >
idCajaCuentaPP? K
,PPK L
DateTimePPM U

fechaDesdePPV `
,PP` a
DateTimePPb j

fechaHastaPPk u
,PPu v
boolPPw {
todosLosMediosPago	PP| é
,
PPé è
int
PPê ì
[
PPì î
]
PPî ï

mediosPago
PPñ †
,
PP† °
bool
PP¢ ¶!
todasLasOperaciones
PPß ∫
,
PP∫ ª
int
PPº ø
[
PPø ¿
]
PP¿ ¡
operaciones
PP¬ Õ
)
PPÕ Œ
{QQ 	
tryRR 
{SS 
ListTT 
<TT 
IngresoEgresoTT "
>TT" #
ingresosTT$ ,
;TT, -
ifUU 
(UU 
esCuentaUU 
)UU 
{VV 
ingresosWW 
=WW 
(WW  
todosLosMediosPagoWW  2
?WW3 4
(WW5 6
todasLasOperacionesWW6 I
?WWJ K"
_finanzaReportingDatosWWL b
.WWb c3
&ObtenerIngresosEgresosEnCuentaBancaria	WWc â
(
WWâ ä
idCajaCuenta
WWä ñ
,
WWñ ó

fechaDesde
WWò ¢
,
WW¢ £

fechaHasta
WW§ Æ
,
WWÆ Ø
true
WW∞ ¥
)
WW¥ µ
.
WWµ ∂
ToList
WW∂ º
(
WWº Ω
)
WWΩ æ
:
WWø ¿$
_finanzaReportingDatos
WW¡ ◊
.
WW◊ ÿB
4ObtenerIngresosEgresosEnCuentaBancariaPorOperaciones
WWÿ å
(
WWå ç
idCajaCuenta
WWç ô
,
WWô ö

fechaDesde
WWõ •
,
WW• ¶

fechaHasta
WWß ±
,
WW± ≤
operaciones
WW≥ æ
)
WWæ ø
.
WWø ¿
ToList
WW¿ ∆
(
WW∆ «
)
WW« »
)
WW» …
:
WW  À
(
WWÃ Õ!
todasLasOperaciones
WWÕ ‡
?
WW· ‚$
_finanzaReportingDatos
WW„ ˘
.
WW˘ ˙A
3ObtenerIngresosEgresosEnCuentaBancariaPorMediosPago
WW˙ ≠
(
WW≠ Æ
idCajaCuenta
WWÆ ∫
,
WW∫ ª

fechaDesde
WWº ∆
,
WW∆ «

fechaHasta
WW» “
,
WW“ ”
true
WW‘ ÿ
,
WWÿ Ÿ

mediosPago
WW⁄ ‰
)
WW‰ Â
.
WWÂ Ê
ToList
WWÊ Ï
(
WWÏ Ì
)
WWÌ Ó
:
WWÔ $
_finanzaReportingDatos
WWÒ á
.
WWá àM
?ObtenerIngresosEgresosEnCuentaBancariaPorOperacionesYMediosPago
WWà «
(
WW« »
idCajaCuenta
WW» ‘
,
WW‘ ’

fechaDesde
WW÷ ‡
,
WW‡ ·

fechaHasta
WW‚ Ï
,
WWÏ Ì
operaciones
WWÓ ˘
,
WW˘ ˙

mediosPago
WW˚ Ö
)
WWÖ Ü
.
WWÜ á
ToList
WWá ç
(
WWç é
)
WWé è
)
WWè ê
)
WWê ë
;
WWë í
}XX 
elseYY 
{ZZ 
ingresos[[ 
=[[ 
([[  
todosLosMediosPago[[  2
?[[3 4
([[5 6
todasLasOperaciones[[6 I
?[[J K"
_finanzaReportingDatos[[L b
.[[b c"
ObtenerIngresosEgresos[[c y
([[y z
idCajaCuenta	[[z Ü
,
[[Ü á

fechaDesde
[[à í
,
[[í ì

fechaHasta
[[î û
,
[[û ü
true
[[† §
)
[[§ •
.
[[• ¶
ToList
[[¶ ¨
(
[[¨ ≠
)
[[≠ Æ
:
[[Ø ∞$
_finanzaReportingDatos
[[± «
.
[[« »2
$ObtenerIngresosEgresosPorOperaciones
[[» Ï
(
[[Ï Ì
idCajaCuenta
[[Ì ˘
,
[[˘ ˙

fechaDesde
[[˚ Ö
,
[[Ö Ü

fechaHasta
[[á ë
,
[[ë í
operaciones
[[ì û
)
[[û ü
.
[[ü †
ToList
[[† ¶
(
[[¶ ß
)
[[ß ®
)
[[® ©
:
[[™ ´
(
[[¨ ≠!
todasLasOperaciones
[[≠ ¿
?
[[¡ ¬$
_finanzaReportingDatos
[[√ Ÿ
.
[[Ÿ ⁄1
#ObtenerIngresosEgresosPorMediosPago
[[⁄ ˝
(
[[˝ ˛
idCajaCuenta
[[˛ ä
,
[[ä ã

fechaDesde
[[å ñ
,
[[ñ ó

fechaHasta
[[ò ¢
,
[[¢ £
true
[[§ ®
,
[[® ©

mediosPago
[[™ ¥
)
[[¥ µ
.
[[µ ∂
ToList
[[∂ º
(
[[º Ω
)
[[Ω æ
:
[[ø ¿$
_finanzaReportingDatos
[[¡ ◊
.
[[◊ ÿ=
/ObtenerIngresosEgresosPorOperacionesYMediosPago
[[ÿ á
(
[[á à
idCajaCuenta
[[à î
,
[[î ï

fechaDesde
[[ñ †
,
[[† °

fechaHasta
[[¢ ¨
,
[[¨ ≠
operaciones
[[Æ π
,
[[π ∫

mediosPago
[[ª ≈
)
[[≈ ∆
.
[[∆ «
ToList
[[« Õ
(
[[Õ Œ
)
[[Œ œ
)
[[œ –
)
[[– —
;
[[— “
}\\ 
ingresos]] 
=]] 
ingresos]] #
.]]# $
OrderBy]]$ +
(]]+ ,
m]], -
=>]]. 0
m]]1 2
.]]2 3
Fecha]]3 8
)]]8 9
.]]9 :
ToList]]: @
(]]@ A
)]]A B
;]]B C
return^^ 
ingresos^^ 
;^^  
}__ 
catch`` 
(`` 
	Exception`` 
e`` 
)`` 
{aa 
throwbb 
newbb 
LogicaExceptionbb )
(bb) *
$strbb* N
,bbN O
ebbP Q
)bbQ R
;bbR S
}cc 
}dd 	
publicff 
Listff 
<ff 
IngresoEgresoff !
>ff! "
Egresosff# *
(ff* +
boolff+ /
esCuentaff0 8
,ff8 9
intff: =
idCajaCuentaff> J
,ffJ K
DateTimeffL T

fechaDesdeffU _
,ff_ `
DateTimeffa i

fechaHastaffj t
,fft u
boolffv z
todosLosMediosPago	ff{ ç
,
ffç é
int
ffè í
[
ffí ì
]
ffì î

mediosPago
ffï ü
,
ffü †
bool
ff° •!
todasLasOperaciones
ff¶ π
,
ffπ ∫
int
ffª æ
[
ffæ ø
]
ffø ¿
operaciones
ff¡ Ã
)
ffÃ Õ
{gg 	
tryhh 
{ii 
Listjj 
<jj 
IngresoEgresojj "
>jj" #
egresosjj$ +
;jj+ ,
ifkk 
(kk 
esCuentakk 
)kk 
{ll 
egresosmm 
=mm 
(mm 
todosLosMediosPagomm 1
?mm2 3
(mm4 5
todasLasOperacionesmm5 H
?mmI J"
_finanzaReportingDatosmmK a
.mma b3
&ObtenerIngresosEgresosEnCuentaBancaria	mmb à
(
mmà â
idCajaCuenta
mmâ ï
,
mmï ñ

fechaDesde
mmó °
,
mm° ¢

fechaHasta
mm£ ≠
,
mm≠ Æ
false
mmØ ¥
)
mm¥ µ
.
mmµ ∂
ToList
mm∂ º
(
mmº Ω
)
mmΩ æ
:
mmø ¿$
_finanzaReportingDatos
mm¡ ◊
.
mm◊ ÿB
4ObtenerIngresosEgresosEnCuentaBancariaPorOperaciones
mmÿ å
(
mmå ç
idCajaCuenta
mmç ô
,
mmô ö

fechaDesde
mmõ •
,
mm• ¶

fechaHasta
mmß ±
,
mm± ≤
operaciones
mm≥ æ
)
mmæ ø
.
mmø ¿
ToList
mm¿ ∆
(
mm∆ «
)
mm« »
)
mm» …
:
mm  À
(
mmÃ Õ!
todasLasOperaciones
mmÕ ‡
?
mm· ‚$
_finanzaReportingDatos
mm„ ˘
.
mm˘ ˙A
3ObtenerIngresosEgresosEnCuentaBancariaPorMediosPago
mm˙ ≠
(
mm≠ Æ
idCajaCuenta
mmÆ ∫
,
mm∫ ª

fechaDesde
mmº ∆
,
mm∆ «

fechaHasta
mm» “
,
mm“ ”
false
mm‘ Ÿ
,
mmŸ ⁄

mediosPago
mm€ Â
)
mmÂ Ê
.
mmÊ Á
ToList
mmÁ Ì
(
mmÌ Ó
)
mmÓ Ô
:
mm Ò$
_finanzaReportingDatos
mmÚ à
.
mmà âM
?ObtenerIngresosEgresosEnCuentaBancariaPorOperacionesYMediosPago
mmâ »
(
mm» …
idCajaCuenta
mm… ’
,
mm’ ÷

fechaDesde
mm◊ ·
,
mm· ‚

fechaHasta
mm„ Ì
,
mmÌ Ó
operaciones
mmÔ ˙
,
mm˙ ˚

mediosPago
mm¸ Ü
)
mmÜ á
.
mmá à
ToList
mmà é
(
mmé è
)
mmè ê
)
mmê ë
)
mmë í
;
mmí ì
}nn 
elseoo 
{pp 
egresosqq 
=qq 
(qq 
todosLosMediosPagoqq 1
?qq2 3
(qq4 5
todasLasOperacionesqq5 H
?qqI J"
_finanzaReportingDatosqqK a
.qqa b"
ObtenerIngresosEgresosqqb x
(qqx y
idCajaCuenta	qqy Ö
,
qqÖ Ü

fechaDesde
qqá ë
,
qqë í

fechaHasta
qqì ù
,
qqù û
false
qqü §
)
qq§ •
.
qq• ¶
ToList
qq¶ ¨
(
qq¨ ≠
)
qq≠ Æ
:
qqØ ∞$
_finanzaReportingDatos
qq± «
.
qq« »2
$ObtenerIngresosEgresosPorOperaciones
qq» Ï
(
qqÏ Ì
idCajaCuenta
qqÌ ˘
,
qq˘ ˙

fechaDesde
qq˚ Ö
,
qqÖ Ü

fechaHasta
qqá ë
,
qqë í
operaciones
qqì û
)
qqû ü
.
qqü †
ToList
qq† ¶
(
qq¶ ß
)
qqß ®
)
qq® ©
:
qq™ ´
(
qq¨ ≠!
todasLasOperaciones
qq≠ ¿
?
qq¡ ¬$
_finanzaReportingDatos
qq√ Ÿ
.
qqŸ ⁄1
#ObtenerIngresosEgresosPorMediosPago
qq⁄ ˝
(
qq˝ ˛
idCajaCuenta
qq˛ ä
,
qqä ã

fechaDesde
qqå ñ
,
qqñ ó

fechaHasta
qqò ¢
,
qq¢ £
false
qq§ ©
,
qq© ™

mediosPago
qq´ µ
)
qqµ ∂
.
qq∂ ∑
ToList
qq∑ Ω
(
qqΩ æ
)
qqæ ø
:
qq¿ ¡$
_finanzaReportingDatos
qq¬ ÿ
.
qqÿ Ÿ=
/ObtenerIngresosEgresosPorOperacionesYMediosPago
qqŸ à
(
qqà â
idCajaCuenta
qqâ ï
,
qqï ñ

fechaDesde
qqó °
,
qq° ¢

fechaHasta
qq£ ≠
,
qq≠ Æ
operaciones
qqØ ∫
,
qq∫ ª

mediosPago
qqº ∆
)
qq∆ «
.
qq« »
ToList
qq» Œ
(
qqŒ œ
)
qqœ –
)
qq– —
)
qq— “
;
qq“ ”
}rr 
egresosss 
=ss 
egresosss !
.ss! "
OrderByss" )
(ss) *
mss* +
=>ss, .
mss/ 0
.ss0 1
Fechass1 6
)ss6 7
.ss7 8
ToListss8 >
(ss> ?
)ss? @
;ss@ A
returntt 
egresostt 
;tt 
}uu 
catchvv 
(vv 
	Exceptionvv 
evv 
)vv 
{ww 
throwxx 
newxx 
LogicaExceptionxx )
(xx) *
$strxx* M
,xxM N
exxO P
)xxP Q
;xxQ R
}yy 
}zz 	
public|| 
decimal|| 
ObtenerSaldo|| #
(||# $
int||$ '
idCajaCuenta||( 4
,||4 5
DateTime||6 >
fecha||? D
,||D E
bool||F J
esCuenta||K S
)||S T
{}} 	
var~~ 
ultimoArqueoDeCaja~~ "
=~~# $
_transaccionDatos~~% 6
.~~6 7+
ObtenerUltimaTransaccionAntesDe~~7 V
(~~V W
idCajaCuenta~~W c
,~~c d
TransaccionSettings~~e x
.~~x y
Default	~~y Ä
.
~~Ä Å)
IdTipoTransaccionArqueoCaja
~~Å ú
,
~~ú ù
fecha
~~û £
)
~~£ §
;
~~§ •
var #
hayArqueoDeCajaAnterior '
=( )
ultimoArqueoDeCaja* <
!== ?
null@ D
;D E
DateTime
ÄÄ %
fechaPrimeraTransaccion
ÄÄ ,
=
ÄÄ- .
(
ÄÄ/ 0
DateTime
ÄÄ0 8
)
ÄÄ8 9
_transaccionDatos
ÄÄ9 J
.
ÄÄJ K,
ObtenerFechaPrimeraTransaccion
ÄÄK i
(
ÄÄi j
)
ÄÄj k
;
ÄÄk l
var
ÅÅ (
fechaDesdeParaSaldoInicial
ÅÅ *
=
ÅÅ+ ,%
hayArqueoDeCajaAnterior
ÅÅ- D
?
ÅÅE F 
ultimoArqueoDeCaja
ÅÅG Y
.
ÅÅY Z
fecha_inicio
ÅÅZ f
:
ÅÅg h&
fechaPrimeraTransaccionÅÅi Ä
;ÅÅÄ Å
var
ÇÇ (
fechaHastaParaSaldoInicial
ÇÇ *
=
ÇÇ+ ,
fecha
ÇÇ- 2
;
ÇÇ2 3
var
ÑÑ )
movimientosParaSaldoInicial
ÑÑ +
=
ÑÑ, -
esCuenta
ÑÑ. 6
?
ÑÑ7 8$
_finanzaReportingDatos
ÑÑ9 O
.
ÑÑO P4
&ObtenerIngresosEgresosEnCuentaBancaria
ÑÑP v
(
ÑÑv w
idCajaCuentaÑÑw É
,ÑÑÉ Ñ*
fechaDesdeParaSaldoInicialÑÑÖ ü
,ÑÑü †*
fechaHastaParaSaldoInicialÑÑ° ª
)ÑÑª º
.ÑÑº Ω
ToListÑÑΩ √
(ÑÑ√ ƒ
)ÑÑƒ ≈
:ÑÑ∆ «&
_finanzaReportingDatosÑÑ» ﬁ
.ÑÑﬁ ﬂ&
ObtenerIngresosEgresosÑÑﬂ ı
(ÑÑı ˆ
idCajaCuentaÑÑˆ Ç
,ÑÑÇ É*
fechaDesdeParaSaldoInicialÑÑÑ û
,ÑÑû ü*
fechaHastaParaSaldoInicialÑÑ† ∫
)ÑÑ∫ ª
.ÑÑª º
ToListÑÑº ¬
(ÑÑ¬ √
)ÑÑ√ ƒ
;ÑÑƒ ≈
var
ÜÜ 
saldoInicial
ÜÜ 
=
ÜÜ 
(
ÜÜ  %
hayArqueoDeCajaAnterior
ÜÜ  7
?
ÜÜ8 9 
ultimoArqueoDeCaja
ÜÜ: L
.
ÜÜL M
importe_total
ÜÜM Z
:
ÜÜ[ \
$num
ÜÜ] ^
)
ÜÜ^ _
+
ÜÜ` a
(
ÜÜb c)
movimientosParaSaldoInicial
ÜÜc ~
.
ÜÜ~ 
CountÜÜ Ñ
>ÜÜÖ Ü
$numÜÜá à
?ÜÜâ ä+
movimientosParaSaldoInicialÜÜã ¶
.ÜÜ¶ ß
WhereÜÜß ¨
(ÜÜ¨ ≠
mÜÜ≠ Æ
=>ÜÜØ ±
mÜÜ≤ ≥
.ÜÜ≥ ¥
	EsIngresoÜÜ¥ Ω
)ÜÜΩ æ
.ÜÜæ ø
SumÜÜø ¬
(ÜÜ¬ √
mÜÜ√ ƒ
=>ÜÜ≈ «
mÜÜ» …
.ÜÜ…  
ImporteÜÜ  —
)ÜÜ— “
-ÜÜ” ‘+
movimientosParaSaldoInicialÜÜ’ 
.ÜÜ Ò
WhereÜÜÒ ˆ
(ÜÜˆ ˜
mÜÜ˜ ¯
=>ÜÜ˘ ˚
!ÜÜ¸ ˝
mÜÜ˝ ˛
.ÜÜ˛ ˇ
	EsIngresoÜÜˇ à
)ÜÜà â
.ÜÜâ ä
SumÜÜä ç
(ÜÜç é
mÜÜé è
=>ÜÜê í
mÜÜì î
.ÜÜî ï
ImporteÜÜï ú
)ÜÜú ù
:ÜÜû ü
$numÜÜ† °
)ÜÜ° ¢
;ÜÜ¢ £
return
áá 
saldoInicial
áá 
;
áá  
}
àà 	
public
ää  
FlujoIngresoEgreso
ää !
Flujo
ää" '
(
ää' (
bool
ää( ,
esCuenta
ää- 5
,
ää5 6
int
ää7 :
idCajaCuenta
ää; G
,
ääG H
DateTime
ääI Q

fechaDesde
ääR \
,
ää\ ]
DateTime
ää^ f

fechaHasta
ääg q
,
ääq r
bool
ääs w!
todosLosMediosPagoääx ä
,äää ã
intääå è
[ääè ê
]ääê ë

mediosPagoääí ú
)ääú ù
{
ãã 	
try
åå 
{
çç 
var
éé 
saldoInicial
éé  
=
éé! "
ObtenerSaldo
éé# /
(
éé/ 0
idCajaCuenta
éé0 <
,
éé< =

fechaDesde
éé> H
,
ééH I
esCuenta
ééJ R
)
ééR S
;
ééS T
var
èè 
detallesFlujo
èè !
=
èè" #
esCuenta
èè$ ,
?
èè- .
(
èè/ 0 
todosLosMediosPago
èè0 B
?
èèC D$
_finanzaReportingDatos
èèE [
.
èè[ \5
&ObtenerIngresosEgresosEnCuentaBancariaèè\ Ç
(èèÇ É
idCajaCuentaèèÉ è
,èèè ê

fechaDesdeèèë õ
,èèõ ú

fechaHastaèèù ß
)èèß ®
.èè® ©
OrderByèè© ∞
(èè∞ ±
mèè± ≤
=>èè≥ µ
mèè∂ ∑
.èè∑ ∏
Fechaèè∏ Ω
)èèΩ æ
.èèæ ø
ToListèèø ≈
(èè≈ ∆
)èè∆ «
:èè» …&
_finanzaReportingDatosèè  ‡
.èè‡ ·C
3ObtenerIngresosEgresosEnCuentaBancariaPorMediosPagoèè· î
(èèî ï
idCajaCuentaèèï °
,èè° ¢

fechaDesdeèè£ ≠
,èè≠ Æ

fechaHastaèèØ π
,èèπ ∫

mediosPagoèèª ≈
)èè≈ ∆
.èè∆ «
OrderByèè« Œ
(èèŒ œ
mèèœ –
=>èè— ”
mèè‘ ’
.èè’ ÷
Fechaèè÷ €
)èè€ ‹
.èè‹ ›
ToListèè› „
(èè„ ‰
)èè‰ Â
)èèÂ Ê
:èèÁ Ë
(èèÈ Í"
todosLosMediosPagoèèÍ ¸
?èè˝ ˛&
_finanzaReportingDatosèèˇ ï
.èèï ñ&
ObtenerIngresosEgresosèèñ ¨
(èè¨ ≠
idCajaCuentaèè≠ π
,èèπ ∫

fechaDesdeèèª ≈
,èè≈ ∆

fechaHastaèè« —
)èè— “
.èè“ ”
OrderByèè” ⁄
(èè⁄ €
mèè€ ‹
=>èè› ﬂ
mèè‡ ·
.èè· ‚
Fechaèè‚ Á
)èèÁ Ë
.èèË È
ToListèèÈ Ô
(èèÔ 
)èè Ò
:èèÚ Û&
_finanzaReportingDatosèèÙ ä
.èèä ã3
#ObtenerIngresosEgresosPorMediosPagoèèã Æ
(èèÆ Ø
idCajaCuentaèèØ ª
,èèª º

fechaDesdeèèΩ «
,èè« »

fechaHastaèè… ”
,èè” ‘

mediosPagoèè’ ﬂ
)èèﬂ ‡
.èè‡ ·
OrderByèè· Ë
(èèË È
mèèÈ Í
=>èèÎ Ì
mèèÓ Ô
.èèÔ 
Fechaèè ı
)èèı ˆ
.èèˆ ˜
ToListèè˜ ˝
(èè˝ ˛
)èè˛ ˇ
)èèˇ Ä
;èèÄ Å
var
ëë 
saldo
ëë 
=
ëë 
saldoInicial
ëë (
;
ëë( )
foreach
íí 
(
íí 
var
íí 
detalleFlujo
íí )
in
íí* ,
detallesFlujo
íí- :
)
íí: ;
{
ìì 
saldo
îî 
+=
îî 
(
îî 
detalleFlujo
îî *
.
îî* +
	EsIngreso
îî+ 4
?
îî5 6
detalleFlujo
îî7 C
.
îîC D
Importe
îîD K
:
îîL M
(
îîN O
-
îîO P
$num
îîP Q
*
îîR S
detalleFlujo
îîT `
.
îî` a
Importe
îîa h
)
îîh i
)
îîi j
;
îîj k
detalleFlujo
ïï  
.
ïï  !
Saldo
ïï! &
=
ïï' (
saldo
ïï) .
;
ïï. /
}
ññ 
var
óó 

saldoFinal
óó 
=
óó  
saldo
óó! &
;
óó& '
return
òò 
new
òò  
FlujoIngresoEgreso
òò -
(
òò- .
)
òò. /
{
ôô 
Resumen
öö 
=
öö 
new
öö !
ResumenFlujo
öö" .
(
öö. /
)
öö/ 0
{
õõ 
SaldoInicial
úú $
=
úú% &
saldoInicial
úú' 3
,
úú3 4
Ingresos
ùù  
=
ùù! "
detallesFlujo
ùù# 0
.
ùù0 1
Where
ùù1 6
(
ùù6 7
df
ùù7 9
=>
ùù: <
df
ùù= ?
.
ùù? @
	EsIngreso
ùù@ I
)
ùùI J
.
ùùJ K
Sum
ùùK N
(
ùùN O
df
ùùO Q
=>
ùùR T
df
ùùU W
.
ùùW X
Importe
ùùX _
)
ùù_ `
,
ùù` a
Egresos
ûû 
=
ûû  !
detallesFlujo
ûû" /
.
ûû/ 0
Where
ûû0 5
(
ûû5 6
df
ûû6 8
=>
ûû9 ;
!
ûû< =
df
ûû= ?
.
ûû? @
	EsIngreso
ûû@ I
)
ûûI J
.
ûûJ K
Sum
ûûK N
(
ûûN O
df
ûûO Q
=>
ûûR T
df
ûûU W
.
ûûW X
Importe
ûûX _
)
ûû_ `
,
ûû` a

SaldoFinal
üü "
=
üü# $

saldoFinal
üü% /
}
†† 
,
†† 
Detalles
°° 
=
°° 
detallesFlujo
°° ,
}
¢¢ 
;
¢¢ 
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ )
(
¶¶) *
$str
¶¶* K
,
¶¶K L
e
¶¶M N
)
¶¶N O
;
¶¶O P
}
ßß 
}
®® 	
public
™™ 
List
™™ 
<
™™ 
OperacionGrupo
™™ "
>
™™" #+
ObtenerCuentasPorCobrarGrupos
™™$ A
(
™™A B
bool
™™B F
todosLosGrupos
™™G U
,
™™U V
int
™™W Z
[
™™Z [
]
™™[ \
	idsGrupos
™™] f
)
™™f g
{
´´ 	
try
¨¨ 
{
≠≠ 
	idsGrupos
ÆÆ 
=
ÆÆ 
todosLosGrupos
ÆÆ *
?
ÆÆ+ ,!
_actorNegocioLogica
ÆÆ- @
.
ÆÆ@ A-
ObtenerGruposActoresComerciales
ÆÆA `
(
ÆÆ` a
)
ÆÆa b
.
ÆÆb c
Select
ÆÆc i
(
ÆÆi j
g
ÆÆj k
=>
ÆÆl n
g
ÆÆo p
.
ÆÆp q
Id
ÆÆq s
)
ÆÆs t
.
ÆÆt u
ToArray
ÆÆu |
(
ÆÆ| }
)
ÆÆ} ~
:ÆÆ Ä
	idsGruposÆÆÅ ä
;ÆÆä ã
List
ØØ 
<
ØØ 
OperacionGrupo
ØØ #
>
ØØ# $
porCobrarGrupos
ØØ% 4
=
ØØ5 6$
_finanzaReportingDatos
ØØ7 M
.
ØØM N*
ObtenerCuentasPorCobarGrupos
ØØN j
(
ØØj k
	idsGrupos
ØØk t
)
ØØt u
.
ØØu v
ToList
ØØv |
(
ØØ| }
)
ØØ} ~
;
ØØ~ 
var
∞∞ #
gruposPorCobrarGrupos
∞∞ )
=
∞∞* +
porCobrarGrupos
∞∞, ;
.
∞∞; <
GroupBy
∞∞< C
(
∞∞C D
g
∞∞D E
=>
∞∞F H
new
∞∞I L
{
∞∞M N
g
∞∞O P
.
∞∞P Q
IdGrupo
∞∞Q X
,
∞∞X Y
g
∞∞Z [
.
∞∞[ \
NombreGrupo
∞∞\ g
,
∞∞g h
g
∞∞i j
.
∞∞j k"
DocumentoResponsable
∞∞k 
,∞∞ Ä
g∞∞Å Ç
.∞∞Ç É!
NombreResponsable∞∞É î
,∞∞î ï
g∞∞ñ ó
.∞∞ó ò
	IdCliente∞∞ò °
,∞∞° ¢
g∞∞£ §
.∞∞§ •
NombreCliente∞∞• ≤
}∞∞≥ ¥
)∞∞¥ µ
;∞∞µ ∂
var
±± 
	resultado
±± 
=
±± #
gruposPorCobrarGrupos
±±  5
.
±±5 6
Select
±±6 <
(
±±< =
g
±±= >
=>
±±? A
new
±±B E
OperacionGrupo
±±F T
(
±±T U
)
±±U V
{
≤≤ 
IdGrupo
≥≥ 
=
≥≥ 
g
≥≥ 
.
≥≥  
Key
≥≥  #
.
≥≥# $
IdGrupo
≥≥$ +
,
≥≥+ ,
NombreGrupo
¥¥ 
=
¥¥  !
g
¥¥" #
.
¥¥# $
Key
¥¥$ '
.
¥¥' (
NombreGrupo
¥¥( 3
,
¥¥3 4"
DocumentoResponsable
µµ (
=
µµ) *
g
µµ+ ,
.
µµ, -
Key
µµ- 0
.
µµ0 1"
DocumentoResponsable
µµ1 E
,
µµE F
NombreResponsable
∂∂ %
=
∂∂& '
g
∂∂( )
.
∂∂) *
Key
∂∂* -
.
∂∂- .
NombreResponsable
∂∂. ?
,
∂∂? @
	IdCliente
∑∑ 
=
∑∑ 
g
∑∑  !
.
∑∑! "
Key
∑∑" %
.
∑∑% &
	IdCliente
∑∑& /
,
∑∑/ 0
NombreCliente
∏∏ !
=
∏∏" #
g
∏∏$ %
.
∏∏% &
Key
∏∏& )
.
∏∏) *
NombreCliente
∏∏* 7
,
∏∏7 8
InfoComprobante
ππ #
=
ππ$ %
String
ππ& ,
.
ππ, -
Join
ππ- 1
(
ππ1 2
$str
ππ2 6
,
ππ6 7
g
ππ8 9
.
ππ9 :
Select
ππ: @
(
ππ@ A
gg
ππA C
=>
ππD F
gg
ππG I
.
ππI J
InfoComprobante
ππJ Y
)
ππY Z
.
ππZ [
Distinct
ππ[ c
(
ππc d
)
ππd e
.
ππe f
ToArray
ππf m
(
ππm n
)
ππn o
)
ππo p
,
ππp q
NumeroOperaciones
∫∫ %
=
∫∫& '
g
∫∫( )
.
∫∫) *
Select
∫∫* 0
(
∫∫0 1
gg
∫∫1 3
=>
∫∫4 6
gg
∫∫7 9
.
∫∫9 :
InfoComprobante
∫∫: I
)
∫∫I J
.
∫∫J K
Distinct
∫∫K S
(
∫∫S T
)
∫∫T U
.
∫∫U V
Count
∫∫V [
(
∫∫[ \
)
∫∫\ ]
,
∫∫] ^
Importe
ªª 
=
ªª 
g
ªª 
.
ªª  
Sum
ªª  #
(
ªª# $
gg
ªª$ &
=>
ªª' )
gg
ªª* ,
.
ªª, -
ImporteTotal
ªª- 9
)
ªª9 :
,
ªª: ;
Revocado
ºº 
=
ºº 
g
ºº  
.
ºº  !
Sum
ºº! $
(
ºº$ %
gg
ºº% '
=>
ºº( *
gg
ºº+ -
.
ºº- .
RevocadoTotal
ºº. ;
)
ºº; <
,
ºº< =
ACuenta
ΩΩ 
=
ΩΩ 
g
ΩΩ 
.
ΩΩ  
Sum
ΩΩ  #
(
ΩΩ# $
gg
ΩΩ$ &
=>
ΩΩ' )
gg
ΩΩ* ,
.
ΩΩ, -
ACuentaTotal
ΩΩ- 9
)
ΩΩ9 :
,
ΩΩ: ;
Saldo
ææ 
=
ææ 
g
ææ 
.
ææ 
Sum
ææ !
(
ææ! "
gg
ææ" $
=>
ææ% '
gg
ææ( *
.
ææ* +

SaldoTotal
ææ+ 5
)
ææ5 6
,
ææ6 7
}
øø 
)
øø 
.
øø 
ToList
øø 
(
øø 
)
øø 
;
øø 
return
¿¿ 
	resultado
¿¿  
;
¿¿  !
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* c
,
ƒƒc d
e
ƒƒe f
)
ƒƒf g
;
ƒƒg h
}
≈≈ 
}
∆∆ 	
public
«« 
List
«« 
<
«« %
OperacionGrupoDetallado
«« +
>
««+ ,3
%ObtenerCuentasPorCobrarGrupoDetallado
««- R
(
««R S
int
««S V
idGrupo
««W ^
)
««^ _
{
»» 	
try
…… 
{
   
List
ÀÀ 
<
ÀÀ %
OperacionGrupoDetallado
ÀÀ ,
>
ÀÀ, -&
porCobrarGruposDetallado
ÀÀ. F
=
ÀÀG H$
_finanzaReportingDatos
ÀÀI _
.
ÀÀ_ `3
$ObtenerCuentasPorCobarGrupoDetalladoÀÀ` Ñ
(ÀÀÑ Ö
idGrupoÀÀÖ å
)ÀÀå ç
.ÀÀç é
ToListÀÀé î
(ÀÀî ï
)ÀÀï ñ
;ÀÀñ ó
var
ÃÃ #
gruposPorCobrarGrupos
ÃÃ )
=
ÃÃ* +&
porCobrarGruposDetallado
ÃÃ, D
.
ÃÃD E
GroupBy
ÃÃE L
(
ÃÃL M
g
ÃÃM N
=>
ÃÃO Q
new
ÃÃR U
{
ÃÃV W
g
ÃÃX Y
.
ÃÃY Z
Id
ÃÃZ \
,
ÃÃ\ ]
g
ÃÃ^ _
.
ÃÃ_ `
IdTipoTransaccion
ÃÃ` q
,
ÃÃq r
g
ÃÃs t
.
ÃÃt u 
NombreResponsableÃÃu Ü
,ÃÃÜ á
gÃÃà â
.ÃÃâ ä 
DocumentoClienteÃÃä ö
,ÃÃö õ
gÃÃú ù
.ÃÃù û
NombreClienteÃÃû ´
,ÃÃ´ ¨
gÃÃ≠ Æ
.ÃÃÆ Ø
EmisionÃÃØ ∂
,ÃÃ∂ ∑
gÃÃ∏ π
.ÃÃπ ∫
TipoComprobanteÃÃ∫ …
,ÃÃ…  
gÃÃÀ Ã
.ÃÃÃ Õ
IdComprobanteÃÃÕ ⁄
}ÃÃ€ ‹
)ÃÃ‹ ›
;ÃÃ› ﬁ
var
ÕÕ 
	resultado
ÕÕ 
=
ÕÕ #
gruposPorCobrarGrupos
ÕÕ  5
.
ÕÕ5 6
Select
ÕÕ6 <
(
ÕÕ< =
g
ÕÕ= >
=>
ÕÕ? A
new
ÕÕB E%
OperacionGrupoDetallado
ÕÕF ]
(
ÕÕ] ^
)
ÕÕ^ _
{
ŒŒ 
Id
œœ 
=
œœ 
g
œœ 
.
œœ 
Key
œœ 
.
œœ 
Id
œœ !
,
œœ! "
IdTipoTransaccion
–– %
=
––& '
g
––( )
.
––) *
Key
––* -
.
––- .
IdTipoTransaccion
––. ?
,
––? @
NombreResponsable
—— %
=
——& '
g
——( )
.
——) *
Key
——* -
.
——- .
NombreResponsable
——. ?
,
——? @
DocumentoCliente
““ $
=
““% &
g
““' (
.
““( )
Key
““) ,
.
““, -
DocumentoCliente
““- =
,
““= >
NombreCliente
”” !
=
””" #
g
””$ %
.
””% &
Key
””& )
.
””) *
NombreCliente
””* 7
,
””7 8
Emision
‘‘ 
=
‘‘ 
g
‘‘ 
.
‘‘  
Key
‘‘  #
.
‘‘# $
Emision
‘‘$ +
,
‘‘+ ,
TipoComprobante
’’ #
=
’’$ %
g
’’& '
.
’’' (
Key
’’( +
.
’’+ ,
TipoComprobante
’’, ;
,
’’; <
IdComprobante
÷÷ !
=
÷÷" #
g
÷÷$ %
.
÷÷% &
Key
÷÷& )
.
÷÷) *
IdComprobante
÷÷* 7
,
÷÷7 8%
SerieYNumeroComprobante
◊◊ +
=
◊◊, -
g
◊◊. /
.
◊◊/ 0
First
◊◊0 5
(
◊◊5 6
)
◊◊6 7
.
◊◊7 8%
SerieYNumeroComprobante
◊◊8 O
,
◊◊O P
Importe
ÿÿ 
=
ÿÿ 
g
ÿÿ 
.
ÿÿ  
Sum
ÿÿ  #
(
ÿÿ# $
gg
ÿÿ$ &
=>
ÿÿ' )
gg
ÿÿ* ,
.
ÿÿ, -
Importe
ÿÿ- 4
)
ÿÿ4 5
,
ÿÿ5 6
Revocado
ŸŸ 
=
ŸŸ 
g
ŸŸ  
.
ŸŸ  !
Sum
ŸŸ! $
(
ŸŸ$ %
gg
ŸŸ% '
=>
ŸŸ( *
gg
ŸŸ+ -
.
ŸŸ- .
Revocado
ŸŸ. 6
)
ŸŸ6 7
,
ŸŸ7 8
ACuenta
⁄⁄ 
=
⁄⁄ 
g
⁄⁄ 
.
⁄⁄  
Sum
⁄⁄  #
(
⁄⁄# $
gg
⁄⁄$ &
=>
⁄⁄' )
gg
⁄⁄* ,
.
⁄⁄, -
ACuenta
⁄⁄- 4
)
⁄⁄4 5
,
⁄⁄5 6
Saldo
€€ 
=
€€ 
g
€€ 
.
€€ 
Sum
€€ !
(
€€! "
gg
€€" $
=>
€€% '
gg
€€( *
.
€€* +
Saldo
€€+ 0
)
€€0 1
}
‹‹ 
)
‹‹ 
.
‹‹ 
ToList
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
return
›› 
	resultado
››  
;
››  !
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
e
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
throw
·· 
new
·· 
LogicaException
·· )
(
··) *
$str
··* l
,
··l m
e
··n o
)
··o p
;
··p q
}
‚‚ 
}
„„ 	
}
‰‰ 
}ÂÂ ≈&
fD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\LibrosElectronicos\LibrosElectronicosFoxcontLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class +
LibrosElectronicosFoxcontLogica 0
:1 2,
 ILibrosElectronicosFoxcontLogica3 S
{ 
	protected 
readonly 1
%ILibrosElectronicosFoxcontRepositorio @+
_librosElectronicosFoxcontDatosA `
;` a
public +
LibrosElectronicosFoxcontLogica .
(. /1
%ILibrosElectronicosFoxcontRepositorio/ T*
librosElectronicosFoxcontDatosU s
)s t
{ 	+
_librosElectronicosFoxcontDatos +
=, -*
librosElectronicosFoxcontDatos. L
;L M
} 	
public 
List 
< %
ReporteVentaClienteFoxcom -
>- .7
+ObtenerVentaClienteFoxcomBoletaVentaFactura/ Z
(Z [
int[ ^

idEmpleado_ i
,i j
DateTimek s

fechaDesdet ~
,~ 
DateTime
Ä à

fechaHasta
â ì
)
ì î
{   	
try!! 
{"" 
var##  
ventasClientesFoxcom## (
=##) *+
_librosElectronicosFoxcontDatos##+ J
.##J K&
ObtenerVentasClienteFoxcom##K e
(##e f
Diccionario##f q
.##q rF
9TiposDeComprobanteTributablesExceptoNotasDeCreditoYDebito	##r ´
,
##´ ¨
new
##≠ ∞
int
##± ¥
[
##¥ µ
]
##µ ∂
{
##∑ ∏!
TransaccionSettings
##π Ã
.
##Ã Õ
Default
##Õ ‘
.
##‘ ’+
IdTipoTransaccionOrdenDeVenta
##’ Ú
}
##Û Ù
,
##Ù ı

fechaDesde
##ˆ Ä
,
##Ä Å

fechaHasta
##Ç å
)
##å ç
.
##ç é
ToList
##é î
(
##î ï
)
##ï ñ
;
##ñ ó
var$$ 
ventasFoxcont$$ !
=$$" # 
ventasClientesFoxcom$$$ 8
.$$8 9
OrderBy$$9 @
($$@ A
v$$A B
=>$$C E
v$$F G
.$$G H
FechaEmision$$H T
)$$T U
.$$U V
ToList$$V \
($$\ ]
)$$] ^
;$$^ _
var%% 
reporteFoxcont%% "
=%%# $%
ReporteVentaClienteFoxcom%%% >
.%%> ?
Convert%%? F
(%%F G
ventasFoxcont%%G T
)%%T U
;%%U V
return&& 
reporteFoxcont&& %
;&&% &
}'' 
catch(( 
((( 
	Exception(( 
e(( 
)(( 
{)) 
throw** 
new** 
LogicaException** )
(**) *
$str*** I
,**I J
e**K L
)**L M
;**M N
}++ 
},, 	
public.. 
List.. 
<.. %
ReporteVentaClienteFoxcom.. -
>..- .6
*ObtenerVentaClienteFoxcomNotaCreditoDebito../ Y
(..Y Z
int..Z ]

idEmpleado..^ h
,..h i
DateTime..j r

fechaDesde..s }
,..} ~
DateTime	.. á

fechaHasta
..à í
)
..í ì
{// 	
try00 
{11 
var22  
ventasClientesFoxcom22 (
=22) *+
_librosElectronicosFoxcontDatos22+ J
.22J K<
0ObtenerVentasClienteFoxcomConOperacionReferencia22K {
(22{ |
Diccionario	22| á
.
22á àD
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebito
22à æ
,
22æ ø
Diccionario
22¿ À
.
22À ÃU
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebito
22Ã ì
,
22ì î

fechaDesde
22ï ü
,
22ü †

fechaHasta
22° ´
)
22´ ¨
.
22¨ ≠
ToList
22≠ ≥
(
22≥ ¥
)
22¥ µ
;
22µ ∂
var33 
ventasFoxcont33 !
=33" # 
ventasClientesFoxcom33$ 8
.338 9
OrderBy339 @
(33@ A
v33A B
=>33C E
v33F G
.33G H
FechaEmision33H T
)33T U
.33U V
ToList33V \
(33\ ]
)33] ^
;33^ _
var44 
reporteFoxcont44 "
=44# $%
ReporteVentaClienteFoxcom44% >
.44> ?
Convert44? F
(44F G
ventasFoxcont44G T
)44T U
;44U V
return55 
reporteFoxcont55 %
;55% &
}66 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
throw99 
new99 
LogicaException99 )
(99) *
$str99* I
,99I J
e99K L
)99L M
;99M N
}:: 
};; 	
}<< 
}== ïŸ
eD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\LibrosElectronicos\LibrosElectronicosAdsoftLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class *
LibrosElectronicosAdsoftLogica /
:0 1+
ILibrosElectronicosAdsoftLogica2 Q
{ 
	protected 
readonly 0
$ILibrosElectronicosAdsoftRepositorio ?*
_librosElectronicosAdsoftDatos@ ^
;^ _
	protected 
readonly #
ITransaccionRepositorio 2#
_transaccionRepositorio3 J
;J K
public *
LibrosElectronicosAdsoftLogica -
(- .0
$ILibrosElectronicosAdsoftRepositorio. R)
librosElectronicosAdsoftDatosS p
,p q$
ITransaccionRepositorio	r â$
transaccionRepositorio
ä †
)
† °
{ 	*
_librosElectronicosAdsoftDatos *
=+ ,)
librosElectronicosAdsoftDatos- J
;J K#
_transaccionRepositorio #
=$ %"
transaccionRepositorio& <
;< =
} 	
public!! 
List!! 
<!! %
ReporteVentaClienteAdsoft!! -
>!!- .+
ObtenerLibrosElectronicosAdsoft!!/ N
(!!N O
int!!O R

idEmpleado!!S ]
,!!] ^
DateTime!!_ g

fechaDesde!!h r
,!!r s
DateTime!!t |

fechaHasta	!!} á
)
!!á à
{"" 	
try## 
{$$ 
List%% 
<%% 
VentaClienteAdsoft%% '
>%%' (
	registros%%) 2
=%%3 4
new%%5 8
List%%9 =
<%%= >
VentaClienteAdsoft%%> P
>%%P Q
(%%Q R
)%%R S
;%%S T
List&& 
<&& 
VentaClienteAdsoft&& '
>&&' (
ventasDelPeriodo&&) 9
=&&: ;A
5ObtenerVentasClienteQueNoSeanConNotasDeCreditoYDebito&&< q
(&&q r

fechaDesde&&r |
,&&| }

fechaHasta	&&~ à
)
&&à â
.
&&â ä
OrderBy
&&ä ë
(
&&ë í
vp
&&í î
=>
&&ï ó
vp
&&ò ö
.
&&ö õ
FechaEmision
&&õ ß
)
&&ß ®
.
&&® ©
ThenBy
&&© Ø
(
&&Ø ∞
vp
&&∞ ≤
=>
&&≥ µ
vp
&&∂ ∏
.
&&∏ π
NumeroSerie
&&π ƒ
)
&&ƒ ≈
.
&&≈ ∆
ThenBy
&&∆ Ã
(
&&Ã Õ
vp
&&Õ œ
=>
&&– “
vp
&&” ’
.
&&’ ÷
NumeroComprobante
&&÷ Á
)
&&Á Ë
.
&&Ë È
ToList
&&È Ô
(
&&Ô 
)
&& Ò
;
&&Ò Ú
List'' 
<'' 
VentaClienteAdsoft'' '
>''' (%
ventasDelPeriodoConBoleta'') B
=''C D
ventasDelPeriodo''E U
.''U V
Where''V [
(''[ \
vp''\ ^
=>''_ a
vp''b d
.''d e
IdTipoComprobante''e v
==''w y
MaestroSettings	''z â
.
''â ä
Default
''ä ë
.
''ë í/
!IdDetalleMaestroComprobanteBoleta
''í ≥
)
''≥ ¥
.
''¥ µ
OrderBy
''µ º
(
''º Ω
vp
''Ω ø
=>
''¿ ¬
vp
''√ ≈
.
''≈ ∆
FechaEmision
''∆ “
)
''“ ”
.
''” ‘
ThenBy
''‘ ⁄
(
''⁄ €
vp
''€ ›
=>
''ﬁ ‡
vp
''· „
.
''„ ‰
NumeroSerie
''‰ Ô
)
''Ô 
.
'' Ò
ThenBy
''Ò ˜
(
''˜ ¯
vp
''¯ ˙
=>
''˚ ˝
vp
''˛ Ä
.
''Ä Å
NumeroComprobante
''Å í
)
''í ì
.
''ì î
ToList
''î ö
(
''ö õ
)
''õ ú
;
''ú ù
List(( 
<(( 
int(( 
>(( 
	idsSeries(( #
=(($ %>
2ObtenerIdsDeSeriesDeComprobantesParaBoletasDeVenta((& X
(((X Y
)((Y Z
;((Z [
foreach)) 
()) 
var)) 
idSerie)) $
in))% '
	idsSeries))( 1
)))1 2
{** 
List++ 
<++ 
VentaClienteAdsoft++ +
>+++ ,
ventasDeLaSerie++- <
=++= >%
ventasDelPeriodoConBoleta++? X
.++X Y
Where++Y ^
(++^ _
vi++_ a
=>++b d
vi++e g
.++g h
IdSerie++h o
==++p r
idSerie++s z
)++z {
.++{ |
OrderBy	++| É
(
++É Ñ
vp
++Ñ Ü
=>
++á â
vp
++ä å
.
++å ç
FechaEmision
++ç ô
)
++ô ö
.
++ö õ
ThenBy
++õ °
(
++° ¢
vp
++¢ §
=>
++• ß
vp
++® ™
.
++™ ´
NumeroSerie
++´ ∂
)
++∂ ∑
.
++∑ ∏
ThenBy
++∏ æ
(
++æ ø
vp
++ø ¡
=>
++¬ ƒ
vp
++≈ «
.
++« »
NumeroComprobante
++» Ÿ
)
++Ÿ ⁄
.
++⁄ €
ToList
++€ ·
(
++· ‚
)
++‚ „
;
++„ ‰
if-- 
(-- 
ventasDeLaSerie-- '
.--' (
Count--( -
(--- .
)--. /
>--0 1
$num--2 3
)--3 4
{.. 
int// 
contVentasDeLaSerie// /
=//0 1
$num//2 3
;//3 4
int00 %
cantidadDeVentasDeLaSerie00 5
=006 7
ventasDeLaSerie008 G
.00G H
Count00H M
(00M N
)00N O
;00O P
bool11 =
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha11 N
=11O P
false11Q V
;11V W
int22 <
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFecha22 L
=22M N
$num22O P
;22P Q
do44 
{55 
List66  
<66  !
VentaClienteAdsoft66! 3
>663 4.
"ventasAgrupadasPorTipoAgrupamiento665 W
=66X Y
new66Z ]
List66^ b
<66b c
VentaClienteAdsoft66c u
>66u v
(66v w
)66w x
;66x y
List77  
<77  !
VentaClienteAdsoft77! 3
>773 4
itemVentasDeLaSerie775 H
=77I J
null77K O
;77O P
itemVentasDeLaSerie88 /
=880 1
ventasDeLaSerie882 A
.88A B
Skip88B F
(88F G
contVentasDeLaSerie88G Z
)88Z [
.88[ \
Take88\ `
(88` a
$num88a b
)88b c
.88c d
ToList88d j
(88j k
)88k l
;88l m
List99  
<99  !
VentaClienteAdsoft99! 3
>993 4#
ventasDeLaSeriePorFecha995 L
=99M N
ventasDeLaSerie99O ^
.99^ _
Where99_ d
(99d e
vsf99e h
=>99i k
vsf99l o
.99o p
FechaEmision99p |
==99} !
itemVentasDeLaSerie
99Ä ì
.
99ì î
First
99î ô
(
99ô ö
)
99ö õ
.
99õ ú
FechaEmision
99ú ®
)
99® ©
.
99© ™
ToList
99™ ∞
(
99∞ ±
)
99± ≤
;
99≤ ≥
int;; -
!cantidadDeVentasDeLaSeriePorFecha;;  A
=;;B C#
ventasDeLaSeriePorFecha;;D [
.;;[ \
Count;;\ a
(;;a b
);;b c
;;;c d
int<< '
contVentasDeLaSeriePorFecha<<  ;
=<<< ==
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha<<> o
?<<p q
$num<<r s
:<<t u=
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFecha	<<v ¶
;
<<¶ ß.
"ventasAgrupadasPorTipoAgrupamiento== >
.==> ?
Add==? B
(==B C
itemVentasDeLaSerie==C V
.==V W
First==W \
(==\ ]
)==] ^
)==^ _
;==_ `
List>>  
<>>  !
VentaClienteAdsoft>>! 3
>>>3 4
element>>5 <
=>>= >#
ventasDeLaSeriePorFecha>>? V
.>>V W
Where>>W \
(>>\ ]
vs>>] _
=>>>` b
vs>>c e
.>>e f
NumeroComprobante>>f w
==>>x z
$num>>{ ~
)>>~ 
.	>> Ä
ToList
>>Ä Ü
(
>>Ü á
)
>>á à
;
>>à â
bool@@  
	consolido@@! *
=@@+ ,
false@@- 2
;@@2 3
whileAA !
(AA" #'
contVentasDeLaSeriePorFechaAA# >
<AA? @-
!cantidadDeVentasDeLaSeriePorFechaAAA b
-AAc d
$numAAe f
)AAf g
{BB 
varCC  #
itemCC$ (
=CC) *#
ventasDeLaSeriePorFechaCC+ B
.CCB C
SkipCCC G
(CCG H'
contVentasDeLaSeriePorFechaCCH c
+CCd e
$numCCf g
)CCg h
.CCh i
TakeCCi m
(CCm n
$numCCn o
)CCo p
.CCp q
ToListCCq w
(CCw x
)CCx y
;CCy z
ifDD  "
(DD# $
itemVentasDeLaSerieDD$ 7
.DD7 8
FirstDD8 =
(DD= >
)DD> ?
.DD? @!
IdActorNegocioExternoDD@ U
==DDV X
itemDDY ]
.DD] ^
FirstDD^ c
(DDc d
)DDd e
.DDe f!
IdActorNegocioExternoDDf {
&&DD| ~ 
itemVentasDeLaSerie	DD í
.
DDí ì
First
DDì ò
(
DDò ô
)
DDô ö
.
DDö õ
TipoAgrupamiento
DDõ ´
==
DD¨ Æ
item
DDØ ≥
.
DD≥ ¥
First
DD¥ π
(
DDπ ∫
)
DD∫ ª
.
DDª º
TipoAgrupamiento
DDº Ã
)
DDÃ Õ
{EE  !.
"ventasAgrupadasPorTipoAgrupamientoFF$ F
.FFF G
AddFFG J
(FFJ K
itemFFK O
.FFO P
FirstFFP U
(FFU V
)FFV W
)FFW X
;FFX Y'
contVentasDeLaSeriePorFechaGG$ ?
++GG? A
;GGA B
contVentasDeLaSerieHH$ 7
++HH7 9
;HH9 :
}II  !
elseJJ  $
{KK  !=
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFechaLL$ U
=LLV W'
contVentasDeLaSeriePorFechaLLX s
==LLt v.
!cantidadDeVentasDeLaSeriePorFecha	LLw ò
-
LLô ö
$num
LLõ ú
;
LLú ù'
contVentasDeLaSeriePorFechaMM$ ?
++MM? A
;MMA B
contVentasDeLaSerieNN$ 7
++NN7 9
;NN9 :
ListOO$ (
<OO( )
VentaClienteAdsoftOO) ;
>OO; <'
ventasAgrupadasConsolidadasOO= X
=OOY Z%
ConsolidadarVentasClienteOO[ t
(OOt u/
"ventasAgrupadasPorTipoAgrupamiento	OOu ó
)
OOó ò
;
OOò ô
	consolidoPP$ -
=PP. /
truePP0 4
;PP4 5
	registrosQQ$ -
.QQ- .
AddRangeQQ. 6
(QQ6 7'
ventasAgrupadasConsolidadasQQ7 R
)QQR S
;QQS T
breakRR$ )
;RR) *
}SS  !
}TT 
ifUU 
(UU  '
contVentasDeLaSeriePorFechaUU  ;
==UU< >-
!cantidadDeVentasDeLaSeriePorFechaUU? `
-UUa b
$numUUc d
)UUd e
{VV =
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFechaWW  Q
=WWR S
trueWWT X
;WWX Y
contVentasDeLaSerieXX  3
++XX3 5
;XX5 6<
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFechaYY  P
=YYQ R'
contVentasDeLaSeriePorFechaYYS n
;YYn o
ListZZ  $
<ZZ$ %
VentaClienteAdsoftZZ% 7
>ZZ7 8'
ventasAgrupadasConsolidadasZZ9 T
;ZZT U
if[[  "
([[# $
	consolido[[$ -
)[[- .
{\\  !
var]]$ '
item]]( ,
=]]- .#
ventasDeLaSeriePorFecha]]/ F
.]]F G
Skip]]G K
(]]K L'
contVentasDeLaSeriePorFecha]]L g
)]]g h
.]]h i
Take]]i m
(]]m n
$num]]n o
)]]o p
.]]p q
ToList]]q w
(]]w x
)]]x y
;]]y z'
ventasAgrupadasConsolidadas^^$ ?
=^^@ A%
ConsolidadarVentasCliente^^B [
(^^[ \
item^^\ `
)^^` a
;^^a b
}__  !
else``  $
{aa  !'
ventasAgrupadasConsolidadasbb$ ?
=bb@ A%
ConsolidadarVentasClientebbB [
(bb[ \.
"ventasAgrupadasPorTipoAgrupamientobb\ ~
)bb~ 
;	bb Ä
}cc  !
	registrosdd  )
.dd) *
AddRangedd* 2
(dd2 3'
ventasAgrupadasConsolidadasdd3 N
)ddN O
;ddO P
}ee 
elseff  
{gg <
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFechahh  P
=hhQ R'
contVentasDeLaSeriePorFechahhS n
;hhn o
}ii 
}jj 
whilejj 
(jj  !
contVentasDeLaSeriejj! 4
<jj5 6%
cantidadDeVentasDeLaSeriejj7 P
)jjP Q
;jjQ R
}kk 
}ll 
Listmm 
<mm 
VentaClienteAdsoftmm '
>mm' (
ventasConFacturamm) 9
=mm: ;
ventasDelPeriodomm< L
.mmL M
WheremmM R
(mmR S
vmmS T
=>mmU W
!mmX Y
vmmY Z
.mmZ [
EsInvalidadamm[ g
&&mmh j
vmmk l
.mml m
IdTipoComprobantemmm ~
==	mm Å
MaestroSettings
mmÇ ë
.
mmë í
Default
mmí ô
.
mmô ö0
"IdDetalleMaestroComprobanteFactura
mmö º
)
mmº Ω
.
mmΩ æ
ToList
mmæ ƒ
(
mmƒ ≈
)
mm≈ ∆
;
mm∆ «
	registrosnn 
.nn 
AddRangenn "
(nn" #
ventasConFacturann# 3
)nn3 4
;nn4 5
Listoo 
<oo 
VentaClienteAdsoftoo '
>oo' ('
ventasInvalidadasConFacturaoo) D
=ooE F
ventasDelPeriodoooG W
.ooW X
WhereooX ]
(oo] ^
voo^ _
=>oo` b
vooc d
.ood e
EsInvalidadaooe q
&&oor t
voou v
.oov w
IdTipoComprobante	oow à
==
ooâ ã
MaestroSettings
ooå õ
.
ooõ ú
Default
ooú £
.
oo£ §0
"IdDetalleMaestroComprobanteFactura
oo§ ∆
)
oo∆ «
.
oo« »
ToList
oo» Œ
(
ooŒ œ
)
ooœ –
;
oo– —
	registrospp 
.pp 
AddRangepp "
(pp" #'
ventasInvalidadasConFacturapp# >
)pp> ?
;pp? @
Listqq 
<qq 
VentaClienteAdsoftqq '
>qq' (*
ventasConNotasDeCreditoYDebitoqq) G
=qqH IL
?ObtenerVentasClientesQueSeanConNotasDeCreditoYDebitoConfirmadas	qqJ â
(
qqâ ä

fechaDesde
qqä î
,
qqî ï

fechaHasta
qqñ †
)
qq† °
;
qq° ¢
	registrosrr 
.rr 
AddRangerr "
(rr" #*
ventasConNotasDeCreditoYDebitorr# A
)rrA B
;rrB C
	registrosss 
=ss 
	registrosss %
.ss% &
OrderByss& -
(ss- .
rss. /
=>ss0 2
rss3 4
.ss4 5
NumeroSeriess5 @
)ss@ A
.ssA B
ThenByssB H
(ssH I
rssI J
=>ssK M
rssN O
.ssO P
NumeroComprobantessP a
)ssa b
.ssb c
ThenByssc i
(ssi j
rssj k
=>ssl n
rsso p
.ssp q
FechaEmisionssq }
)ss} ~
.ss~ 
ThenBy	ss Ö
(
ssÖ Ü
r
ssÜ á
=>
ssà ä
r
ssã å
.
sså ç
IdTipoComprobante
ssç û
)
ssû ü
.
ssü †
ToList
ss† ¶
(
ss¶ ß
)
ssß ®
;
ss® ©
vartt %
reporteVentaClienteAdsofttt -
=tt. /%
ReporteVentaClienteAdsofttt0 I
.ttI J
ConvertttJ Q
(ttQ R
	registrosttR [
)tt[ \
;tt\ ]
returnuu %
reporteVentaClienteAdsoftuu 0
;uu0 1
}vv 
catchww 
(ww 
	Exceptionww 
eww 
)ww 
{xx 
throwyy 
newyy 
LogicaExceptionyy )
(yy) *
$stryy* T
,yyT U
eyyV W
)yyW X
;yyX Y
}zz 
}{{ 	
private}} 
List}} 
<}} 
int}} 
>}} >
2ObtenerIdsDeSeriesDeComprobantesParaBoletasDeVenta}} L
(}}L M
)}}M N
{~~ 	
return #
_transaccionRepositorio *
.* +(
ObtenerIdsSeriesComprobantes+ G
(G H
newH K
intL O
[O P
]P Q
{R S
MaestroSettingsT c
.c d
Defaultd k
.k l.
!IdDetalleMaestroComprobanteBoleta	l ç
}
é è
)
è ê
.
ê ë
ToList
ë ó
(
ó ò
)
ò ô
;
ô ö
}
ÄÄ 	
private
ÇÇ 
List
ÇÇ 
<
ÇÇ  
VentaClienteAdsoft
ÇÇ '
>
ÇÇ' (C
5ObtenerVentasClienteQueNoSeanConNotasDeCreditoYDebito
ÇÇ) ^
(
ÇÇ^ _
DateTime
ÇÇ_ g

fechaDesde
ÇÇh r
,
ÇÇr s
DateTime
ÇÇt |

fechaHastaÇÇ} á
)ÇÇá à
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
var
ÜÜ 
	resultado
ÜÜ 
=
ÜÜ ,
_librosElectronicosAdsoftDatos
ÜÜ  >
.
ÜÜ> ?"
ObtenerVentasCliente
ÜÜ? S
(
ÜÜS T
Diccionario
ÜÜT _
.
ÜÜ_ `H
9TiposDeComprobanteTributablesExceptoNotasDeCreditoYDebitoÜÜ` ô
,ÜÜô ö
newÜÜõ û
intÜÜü ¢
[ÜÜ¢ £
]ÜÜ£ §
{ÜÜ• ¶#
TransaccionSettingsÜÜß ∫
.ÜÜ∫ ª
DefaultÜÜª ¬
.ÜÜ¬ √-
IdTipoTransaccionOrdenDeVentaÜÜ√ ‡
}ÜÜ· ‚
,ÜÜ‚ „

fechaDesdeÜÜ‰ Ó
,ÜÜÓ Ô

fechaHastaÜÜ ˙
)ÜÜ˙ ˚
.ÜÜ˚ ¸
ToListÜÜ¸ Ç
(ÜÜÇ É
)ÜÜÉ Ñ
;ÜÜÑ Ö
return
áá 
	resultado
áá  
;
áá  !
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
new
ãã 
LogicaException
ãã )
(
ãã) *
$str
ãã* I
,
ããI J
e
ããK L
)
ããL M
;
ããM N
}
åå 
}
çç 	
private
èè 
List
èè 
<
èè  
VentaClienteAdsoft
èè '
>
èè' (M
?ObtenerVentasClientesQueSeanConNotasDeCreditoYDebitoConfirmadas
èè) h
(
èèh i
DateTime
èèi q

fechaDesde
èèr |
,
èè| }
DateTimeèè~ Ü

fechaHastaèèá ë
)èèë í
{
êê 	
try
ëë 
{
íí 
var
ìì 
	resultado
ìì 
=
ìì ,
_librosElectronicosAdsoftDatos
ìì  >
.
ìì> ?T
EObtenerVentasClienteConOperacionDeReferenciaSegunElEstadoQueDebeTenerìì? Ñ
(ììÑ Ö
DiccionarioììÖ ê
.ììê ëF
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebitoììë «
,ìì« »
Diccionarioìì… ‘
.ìì‘ ’W
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebitoìì’ ú
,ììú ù

fechaDesdeììû ®
,ìì® ©

fechaHastaìì™ ¥
)ìì¥ µ
.ììµ ∂
OrderByìì∂ Ω
(ììΩ æ
tììæ ø
=>ìì¿ ¬
tìì√ ƒ
.ììƒ ≈
FechaEmisionìì≈ —
)ìì— “
.ìì“ ”
ThenByìì” Ÿ
(ììŸ ⁄
tìì⁄ €
=>ìì‹ ﬁ
tììﬂ ‡
.ìì‡ ·
NumeroSerieìì· Ï
)ììÏ Ì
.ììÌ Ó
ThenByììÓ Ù
(ììÙ ı
tììı ˆ
=>ìì˜ ˘
tìì˙ ˚
.ìì˚ ¸
Idìì¸ ˛
)ìì˛ ˇ
.ììˇ Ä
ToListììÄ Ü
(ììÜ á
)ììá à
;ììà â
return
îî 
	resultado
îî  
;
îî  !
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* w
,
òòw x
e
òòy z
)
òòz {
;
òò{ |
}
ôô 
}
öö 	
private
úú 
List
úú 
<
úú  
VentaClienteAdsoft
úú '
>
úú' ('
ConsolidadarVentasCliente
úú) B
(
úúB C
List
úúC G
<
úúG H 
VentaClienteAdsoft
úúH Z
>
úúZ [
ventasAgrupadas
úú\ k
)
úúk l
{
ùù 	
List
üü 
<
üü  
VentaClienteAdsoft
üü #
>
üü# $ 
ventasConsolidadas
üü% 7
=
üü8 9
ventasAgrupadas
üü: I
.
†† 
GroupBy
†† 
(
†† 
vcs
†† 
=>
†† 
new
††  #
{
°° 
Fecha
¢¢ 
=
¢¢ 
new
¢¢ 
{
¢¢  !
y
¢¢" #
=
¢¢$ %
vcs
¢¢& )
.
¢¢) *
FechaEmision
¢¢* 6
.
¢¢6 7
Year
¢¢7 ;
,
¢¢; <
m
¢¢= >
=
¢¢? @
vcs
¢¢A D
.
¢¢D E
FechaEmision
¢¢E Q
.
¢¢Q R
Month
¢¢R W
,
¢¢W X
d
¢¢Y Z
=
¢¢[ \
vcs
¢¢] `
.
¢¢` a
FechaEmision
¢¢a m
.
¢¢m n
Day
¢¢n q
}
¢¢r s
,
¢¢s t
vcs
££ 
.
££ 
IdSerie
££ 
,
££  
vcs
§§ 
.
§§ 
NumeroSerie
§§ #
,
§§# $
vcs
•• 
.
•• 
CodigoComprobante
•• )
,
••) *
vcs
¶¶ 
.
¶¶ 
IdTipoComprobante
¶¶ )
,
¶¶) *
vcs
ßß 
.
ßß 
CodigoMoneda
ßß $
,
ßß$ %
}
®® 
)
®® 
.
©© 
Select
©© 
(
©© 
vcc
©© 
=>
©© 
new
©© " 
VentaClienteAdsoft
©©# 5
(
©©5 6
)
©©6 7
{
™™ 
Anyo
´´ 
=
´´ 
vcc
´´ 
.
´´ 
Key
´´ "
.
´´" #
Fecha
´´# (
.
´´( )
y
´´) *
,
´´* +
Mes
¨¨ 
=
¨¨ 
vcc
¨¨ 
.
¨¨ 
Key
¨¨ !
.
¨¨! "
Fecha
¨¨" '
.
¨¨' (
m
¨¨( )
,
¨¨) *
Dia
≠≠ 
=
≠≠ 
vcc
≠≠ 
.
≠≠ 
Key
≠≠ !
.
≠≠! "
Fecha
≠≠" '
.
≠≠' (
d
≠≠( )
,
≠≠) *
IdTipoComprobante
ÆÆ %
=
ÆÆ& '
vcc
ÆÆ( +
.
ÆÆ+ ,
Key
ÆÆ, /
.
ÆÆ/ 0
IdTipoComprobante
ÆÆ0 A
,
ÆÆA B
CodigoComprobante
ØØ %
=
ØØ& '
vcc
ØØ( +
.
ØØ+ ,
Key
ØØ, /
.
ØØ/ 0
CodigoComprobante
ØØ0 A
,
ØØA B
IdSerie
∞∞ 
=
∞∞ 
vcc
∞∞ !
.
∞∞! "
Key
∞∞" %
.
∞∞% &
IdSerie
∞∞& -
,
∞∞- .
NumeroSerie
±± 
=
±±  !
vcc
±±" %
.
±±% &
Key
±±& )
.
±±) *
NumeroSerie
±±* 5
,
±±5 6
NumeroComprobante
≤≤ %
=
≤≤& '
(
≤≤( )
int
≤≤) ,
)
≤≤, -
vcc
≤≤- 0
.
≤≤0 1
Min
≤≤1 4
(
≤≤4 5
vc
≤≤5 7
=>
≤≤8 :
vc
≤≤; =
.
≤≤= >
NumeroComprobante
≤≤> O
)
≤≤O P
,
≤≤P Q
NumeroInicial
≥≥ !
=
≥≥" #
(
≥≥$ %
int
≥≥% (
)
≥≥( )
vcc
≥≥) ,
.
≥≥, -
Min
≥≥- 0
(
≥≥0 1
vc
≥≥1 3
=>
≥≥4 6
vc
≥≥7 9
.
≥≥9 :
NumeroComprobante
≥≥: K
)
≥≥K L
,
≥≥L M
NumeroFinal
¥¥ 
=
¥¥  !
(
¥¥" #
int
¥¥# &
)
¥¥& '
vcc
¥¥' *
.
¥¥* +
Max
¥¥+ .
(
¥¥. /
vc
¥¥/ 1
=>
¥¥2 4
vc
¥¥5 7
.
¥¥7 8
NumeroComprobante
¥¥8 I
)
¥¥I J
,
¥¥J K
ValorIgv
µµ 
=
µµ 
vcc
µµ "
.
µµ" #
Sum
µµ# &
(
µµ& '
vc
µµ' )
=>
µµ* ,
(
µµ- .
decimal
µµ. 5
)
µµ5 6
vc
µµ6 8
.
µµ8 9
Igv
µµ9 <
)
µµ< =
,
µµ= >

ValorVenta
∂∂ 
=
∂∂  
vcc
∂∂! $
.
∂∂$ %
Sum
∂∂% (
(
∂∂( )
vc
∂∂) +
=>
∂∂, .
vc
∂∂/ 1
.
∂∂1 2
ValorDeVenta
∂∂2 >
)
∂∂> ?
,
∂∂? @
Total
∑∑ 
=
∑∑ 
vcc
∑∑ 
.
∑∑  
Sum
∑∑  #
(
∑∑# $
vc
∑∑$ &
=>
∑∑' )
vc
∑∑* ,
.
∑∑, -
ImporteTotal
∑∑- 9
)
∑∑9 :
,
∑∑: ;
ValorIcbper
∏∏ 
=
∏∏  !
vcc
∏∏" %
.
∏∏% &
Sum
∏∏& )
(
∏∏) *
vc
∏∏* ,
=>
∏∏- /
vc
∏∏0 2
.
∏∏2 3
ValorIcbper
∏∏3 >
)
∏∏> ?
,
∏∏? @
PrimerNombre
ππ  
=
ππ! "
vcc
ππ# &
.
ππ& '
FirstOrDefault
ππ' 5
(
ππ5 6
)
ππ6 7
.
ππ7 8
PrimerNombre
ππ8 D
,
ππD E
IdTipoDocumento
∫∫ #
=
∫∫$ %
vcc
∫∫& )
.
∫∫) *
FirstOrDefault
∫∫* 8
(
∫∫8 9
)
∫∫9 :
.
∫∫: ;
IdTipoDocumento
∫∫; J
,
∫∫J K
NumeroDocumento
ªª #
=
ªª$ %
vcc
ªª& )
.
ªª) *
FirstOrDefault
ªª* 8
(
ªª8 9
)
ªª9 :
.
ªª: ;
NumeroDocumento
ªª; J
,
ªªJ K
CodigoMoneda
ºº  
=
ºº! "
vcc
ºº# &
.
ºº& '
Key
ºº' *
.
ºº* +
CodigoMoneda
ºº+ 7
,
ºº7 8
IdEstadoActual
ΩΩ "
=
ΩΩ# $
vcc
ΩΩ% (
.
ΩΩ( )
FirstOrDefault
ΩΩ) 7
(
ΩΩ7 8
)
ΩΩ8 9
.
ΩΩ9 :
IdEstadoActual
ΩΩ: H
,
ΩΩH I&
IdEstadoAnteriorAlActual
ææ ,
=
ææ- .
vcc
ææ/ 2
.
ææ2 3
FirstOrDefault
ææ3 A
(
ææA B
)
ææB C
.
ææC D&
IdEstadoAnteriorAlActual
ææD \
}
øø 
)
øø 
.
¿¿ 
OrderBy
¿¿ 
(
¿¿ 
t
¿¿ 
=>
¿¿ 
t
¿¿ 
.
¿¿  
FechaEmision
¿¿  ,
)
¿¿, -
.
¿¿- .
ThenBy
¿¿. 4
(
¿¿4 5
t
¿¿5 6
=>
¿¿7 9
t
¿¿: ;
.
¿¿; <
NumeroSerie
¿¿< G
)
¿¿G H
.
¿¿H I
ThenBy
¿¿I O
(
¿¿O P
t
¿¿P Q
=>
¿¿R T
t
¿¿U V
.
¿¿V W
NumeroComprobante
¿¿W h
)
¿¿h i
.
¿¿i j
ToList
¿¿j p
(
¿¿p q
)
¿¿q r
;
¿¿r s
return
¡¡  
ventasConsolidadas
¡¡ %
;
¡¡% &
}
¬¬ 	
}
√√ 
}ƒƒ ™ô
eD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\LibrosElectronicos\LibrosElectronicosConcarLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class *
LibrosElectronicosConcarLogica /
:0 1+
ILibrosElectronicosConcarLogica2 Q
{ 
	protected 
readonly 0
$ILibrosElectronicosConcarRepositorio ?*
_librosElectronicosConcarDatos@ ^
;^ _
public *
LibrosElectronicosConcarLogica -
(- .0
$ILibrosElectronicosConcarRepositorio. R)
librosElectronicosConcarDatosS p
)p q
{ 	*
_librosElectronicosConcarDatos *
=+ ,)
librosElectronicosConcarDatos- J
;J K
} 	
public 
static 

Dictionary  
<  !
int! $
,$ %
string& ,
>, -4
(MapeoComprobanteSigesVsComprobanteConcar. V
=W X
newY \

Dictionary] g
<g h
inth k
,k l
stringm s
>s t
{u v
{   
MaestroSettings   
.   
Default   $
.  $ %-
!IdDetalleMaestroComprobanteBoleta  % F
,  F G
ConcarSettings  H V
.  V W
Default  W ^
.  ^ _$
TipoDocumentoBoletaVenta  _ w
}  x y
,  y z
{!! 
MaestroSettings!! 
.!! 
Default!! $
.!!$ %.
"IdDetalleMaestroComprobanteFactura!!% G
,!!G H
ConcarSettings!!I W
.!!W X
Default!!X _
.!!_ ` 
TipoDocumentoFactura!!` t
}!!u v
,!!v w
{"" 
MaestroSettings"" 
."" 
Default"" $
.""$ %2
&IdDetalleMaestroComprobanteNotaCredito""% K
,""K L
ConcarSettings""M [
.""[ \
Default""\ c
.""c d$
TipoDocumentoNotaCredito""d |
}""} ~
,""~ 
{## 
MaestroSettings## 
.## 
Default## $
.##$ %3
'IdDetalleMaestroComprobanteNotaDeDebito##% L
,##L M
ConcarSettings##N \
.##\ ]
Default##] d
.##d e#
TipoDocumentoNotaDebito##e |
}##} ~
,##~ 
}$$ 	
;$$	 

private&& (
DetalleAsientoContableConcar&& ,/
#GenerarDetalleAsientoContableConcar&&- P
(&&P Q
OperacionVenta&&Q _
operacionVenta&&` n
,&&n o
string&&p v
	subDiario	&&w Ä
,
&&Ä Å
bool
&&Ç Ü
esDebe
&&á ç
,
&&ç é
string
&&è ï
correlativo
&&ñ °
,
&&° ¢
bool
&&£ ß!
esNotaCreditoDebito
&&® ª
,
&&ª º
string
&&Ω √
cuentaContable
&&ƒ “
,
&&“ ”
decimal
&&‘ €
total
&&‹ ·
)
&&· ‚
{'' 	
var(( 
detalleAsiento(( 
=((  
new((! $(
DetalleAsientoContableConcar((% A
{)) 
	SubDiario** 
=** 
	subDiario** %
,**% &
NumeroComprobante++ !
=++" #
correlativo++$ /
,++/ 0
FechaComprobante,,  
=,,! "
operacionVenta,,# 1
.,,1 2
FechaEmision,,2 >
.,,> ?
ToString,,? G
(,,G H
$str,,H T
),,T U
,,,U V
CodigoMoneda-- 
=-- 
operacionVenta-- -
.--- .
IdMoneda--. 6
==--7 9
MaestroSettings--: I
.--I J
Default--J Q
.--Q R'
IdDetalleMaestroMonedaSoles--R m
?--n o
ConcarSettings--p ~
.--~ 
Default	-- Ü
.
--Ü á
MonedaSoles
--á í
:
--ì î
operacionVenta
--ï £
.
--£ §
IdMoneda
--§ ¨
==
--≠ Ø
MaestroSettings
--∞ ø
.
--ø ¿
Default
--¿ «
.
--« »+
IdDetalleMaestroMonedaDolares
--» Â
?
--Ê Á
ConcarSettings
--Ë ˆ
.
--ˆ ˜
Default
--˜ ˛
.
--˛ ˇ
MonedaDolarUsa
--ˇ ç
:
--é è
$str
--ê í
,
--í ì
GlosaPrincipal.. 
=..  4
(MapeoComprobanteSigesVsComprobanteConcar..! I
...I J
Single..J P
(..P Q
m..Q R
=>..S U
m..V W
...W X
Key..X [
==..\ ^
operacionVenta.._ m
...m n
IdTipoComprobante..n 
)	.. Ä
.
..Ä Å
Value
..Å Ü
+
..á à
$str
..â å
+
..ç é
operacionVenta
..è ù
.
..ù û
SerieComprobante
..û Æ
+
..Ø ∞
$str
..± ¥
+
..µ ∂
operacionVenta
..∑ ≈
.
..≈ ∆
NumeroComprobante
..∆ ◊
.
..◊ ÿ
ToString
..ÿ ‡
(
..‡ ·
)
..· ‚
.
..‚ „
ToString
..„ Î
(
..Î Ï
)
..Ï Ì
.
..Ì Ó
PadLeft
..Ó ı
(
..ı ˆ
$num
..ˆ ˜
,
..˜ ¯
$char
..˘ ¸
)
..¸ ˝
+
..˛ ˇ
$str
..Ä É
+
..Ñ Ö
operacionVenta
..Ü î
.
..î ï
NombreCliente
..ï ¢
,
..¢ £

TipoCambio// 
=// 
operacionVenta// +
.//+ ,

TipoCambio//, 6
,//6 7
TipoConversion00 
=00  
ConcarSettings00! /
.00/ 0
Default000 7
.007 8
TipoConversionVenta008 K
,00K L 
FlagConversionMoneda11 $
=11% &
ConcarSettings11' 5
.115 6
Default116 =
.11= >-
!FlagConversionMonedaSiSeConvierte11> _
,11_ `
FechaTipoCambio22 
=22  !
$str22" $
,22$ %
CuentaContable33 
=33  
cuentaContable33! /
,33/ 0
CodigoAnexo44 
=44 
operacionVenta44 ,
.44, -"
NumeroDocumentoCliente44- C
,44C D
CodigoCentroCosto55 !
=55" #
$str55$ &
,55& '
	DebeHaber66 
=66 
esDebe66 "
?66# $
ConcarSettings66% 3
.663 4
Default664 ;
.66; <
Debe66< @
:66A B
ConcarSettings66C Q
.66Q R
Default66R Y
.66Y Z
Haber66Z _
,66_ `
ImporteOriginal77 
=77  !
total77" '
,77' (
ImporteDolares88 
=88  
$num88! "
,88" #
ImporteSoles99 
=99 
$num99  
,99  !
TipoDocumento:: 
=:: 4
(MapeoComprobanteSigesVsComprobanteConcar::  H
.::H I
Single::I O
(::O P
m::P Q
=>::R T
m::U V
.::V W
Key::W Z
==::[ ]
operacionVenta::^ l
.::l m
IdTipoComprobante::m ~
)::~ 
.	:: Ä
Value
::Ä Ö
,
::Ö Ü
NumeroDocumento;; 
=;;  !
operacionVenta;;" 0
.;;0 1
SerieComprobante;;1 A
+;;B C
$str;;D G
+;;H I
operacionVenta;;J X
.;;X Y
NumeroComprobante;;Y j
.;;j k
ToString;;k s
(;;s t
);;t u
.;;u v
ToString;;v ~
(;;~ 
)	;; Ä
.
;;Ä Å
PadLeft
;;Å à
(
;;à â
$num
;;â ä
,
;;ä ã
$char
;;å è
)
;;è ê
,
;;ê ë
FechaDocumento<< 
=<<  
operacionVenta<<! /
.<</ 0
FechaDocumento<<0 >
.<<> ?
ToString<<? G
(<<G H
$str<<H T
)<<T U
,<<U V
FechaVencimiento==  
===! "
operacionVenta==# 1
.==1 2
FechaVencimiento==2 B
.==B C
ToString==C K
(==K L
$str==L X
)==X Y
,==Y Z

CodigoArea>> 
=>> 
$str>> 
,>>  
GlosaDetalle?? 
=?? 
operacionVenta?? -
.??- .(
NombreTipoTransaccionWrapper??. J
,??J K
CodigoAnexoAuxiliar@@ #
=@@$ %
$str@@& (
,@@( )
	MedioPagoAA 
=AA 
$strAA 
,AA #
TipoDocumentoReferenciaBB '
=BB( )
esNotaCreditoDebitoBB* =
?BB> ?4
(MapeoComprobanteSigesVsComprobanteConcarBB@ h
.BBh i
SingleBBi o
(BBo p
mBBp q
=>BBr t
mBBu v
.BBv w
KeyBBw z
==BB{ }
operacionVenta	BB~ å
.
BBå ç)
IdTipoComprobanteReferencia
BBç ®
)
BB® ©
.
BB© ™
Value
BB™ Ø
:
BB∞ ±
$str
BB≤ ¥
,
BB¥ µ%
NumeroDocumentoReferenciaCC )
=CC* +
esNotaCreditoDebitoCC, ?
?CC@ A
operacionVentaCCB P
.CCP Q&
SerieComprobanteReferenciaCCQ k
+CCl m
$strCCn q
+CCr s
operacionVenta	CCt Ç
.
CCÇ É)
NumeroComprobanteReferencia
CCÉ û
.
CCû ü
ToString
CCü ß
(
CCß ®
)
CC® ©
.
CC© ™
PadLeft
CC™ ±
(
CC± ≤
$num
CC≤ ≥
,
CC≥ ¥
$char
CCµ ∏
)
CC∏ π
:
CC∫ ª
$str
CCº æ
,
CCæ ø$
FechaDocumentoReferenciaDD (
=DD) *
esNotaCreditoDebitoDD+ >
?DD? @
operacionVentaDDA O
.DDO P"
FechaEmisionReferenciaDDP f
.DDf g
ToStringDDg o
(DDo p
$strDDp |
)DD| }
:DD~ 
$str
DDÄ Ç
,
DDÇ É(
NroMaqRegistradoraTipoDocRefEE ,
=EE- .
$strEE/ 1
,EE1 2,
 BaseImponibleDocumentoReferenciaFF 0
=FF1 2
esNotaCreditoDebitoFF3 F
?FFG H
MathFFI M
.FFM N
RoundFFN S
(FFS T
operacionVentaFFT b
.FFb c#
BaseImponibleReferenciaFFc z
,FFz {
$numFF| }
)FF} ~
:	FF Ä
$num
FFÅ Ç
,
FFÇ É!
IGVDocumentoProvisionGG %
=GG& '
esNotaCreditoDebitoGG( ;
?GG< =
(GG> ?
operacionVentaGG? M
.GGM N
IgvReferenciaGGN [
==GG\ ^
$numGG_ `
?GGa b
$numGGc d
:GGe f
MathGGg k
.GGk l
RoundGGl q
(GGq r
operacionVenta	GGr Ä
.
GGÄ Å
IgvReferencia
GGÅ é
,
GGé è
$num
GGê ë
)
GGë í
)
GGí ì
:
GGî ï
$num
GGñ ó
,
GGó ò$
TipoReferenciaenestadoMQHH (
=HH) *
$strHH+ -
,HH- .'
NumeroSerieCajaRegistradoraII +
=II, -
$strII. 0
,II0 1
FechaOperacionJJ 
=JJ  
$strJJ! #
,JJ# $
TipoTasaKK 
=KK 
$strKK 
,KK $
TasaDetraccionPercepcionLL (
=LL) *
$numLL+ ,
,LL, -2
&ImporteBaseDetraccionPercepcionDolaresMM 6
=MM7 8
$numMM9 :
,MM: ;0
$ImporteBaseDetraccionPercepcionSolesNN 4
=NN5 6
$numNN7 8
,NN8 9
TipoCambioparaFOO 
=OO  !
$strOO" $
,OO$ %-
!ImporteIGVSinDerechoCreditoFiscalPP 1
=PP2 3
$numPP4 5
}QQ 
;QQ 
returnRR 
detalleAsientoRR !
;RR! "
}SS 	
privateUU (
DetalleAsientoContableConcarUU ,<
0GenerarDetalleAsientoContableConcarRegistroNotasUU- ]
(UU] ^
OperacionVentaUU^ l
operacionVentaUUm {
,UU{ |
bool	UU} Å
esDebe
UUÇ à
,
UUà â
string
UUä ê
correlativo
UUë ú
,
UUú ù
bool
UUû ¢!
esNotaCreditoDebito
UU£ ∂
,
UU∂ ∑
bool
UU∏ º
esReferencia
UUΩ …
,
UU…  
decimal
UUÀ “
total
UU” ÿ
)
UUÿ Ÿ
{VV 	
varWW 
detalleAsientoWW 
=WW  
newWW! $(
DetalleAsientoContableConcarWW% A
{XX 
	SubDiarioYY 
=YY 
ConcarSettingsYY *
.YY* +
DefaultYY+ 2
.YY2 3&
SubDiarioProvisionesVariasYY3 M
,YYM N
NumeroComprobanteZZ !
=ZZ" #
correlativoZZ$ /
,ZZ/ 0
FechaComprobante[[  
=[[! "
operacionVenta[[# 1
.[[1 2
FechaDocumento[[2 @
.[[@ A
ToString[[A I
([[I J
$str[[J V
)[[V W
,[[W X
CodigoMoneda\\ 
=\\ 
operacionVenta\\ -
.\\- .
IdMoneda\\. 6
==\\7 9
MaestroSettings\\: I
.\\I J
Default\\J Q
.\\Q R'
IdDetalleMaestroMonedaSoles\\R m
?\\n o
ConcarSettings\\p ~
.\\~ 
Default	\\ Ü
.
\\Ü á
MonedaSoles
\\á í
:
\\ì î
operacionVenta
\\ï £
.
\\£ §
IdMoneda
\\§ ¨
==
\\≠ Ø
MaestroSettings
\\∞ ø
.
\\ø ¿
Default
\\¿ «
.
\\« »+
IdDetalleMaestroMonedaDolares
\\» Â
?
\\Ê Á
ConcarSettings
\\Ë ˆ
.
\\ˆ ˜
Default
\\˜ ˛
.
\\˛ ˇ
MonedaDolarUsa
\\ˇ ç
:
\\é è
$str
\\ê í
,
\\í ì
GlosaPrincipal]] 
=]]  
$str]]! )
+]]* +4
(MapeoComprobanteSigesVsComprobanteConcar]], T
.]]T U
Single]]U [
(]][ \
m]]\ ]
=>]]^ `
m]]a b
.]]b c
Key]]c f
==]]g i
operacionVenta]]j x
.]]x y
IdTipoComprobante	]]y ä
)
]]ä ã
.
]]ã å
Value
]]å ë
+
]]í ì
$str
]]î ó
+
]]ò ô
operacionVenta
]]ö ®
.
]]® ©
SerieComprobante
]]© π
+
]]∫ ª
$str
]]º ø
+
]]¿ ¡
operacionVenta
]]¬ –
.
]]– —
NumeroComprobante
]]— ‚
.
]]‚ „
ToString
]]„ Î
(
]]Î Ï
)
]]Ï Ì
.
]]Ì Ó
ToString
]]Ó ˆ
(
]]ˆ ˜
)
]]˜ ¯
.
]]¯ ˘
PadLeft
]]˘ Ä
(
]]Ä Å
$num
]]Å Ç
,
]]Ç É
$char
]]Ñ á
)
]]á à
+
]]â ä
$str
]]ã ê
+
]]ë í6
(MapeoComprobanteSigesVsComprobanteConcar
]]ì ª
.
]]ª º
Single
]]º ¬
(
]]¬ √
m
]]√ ƒ
=>
]]≈ «
m
]]» …
.
]]…  
Key
]]  Õ
==
]]Œ –
operacionVenta
]]— ﬂ
.
]]ﬂ ‡)
IdTipoComprobanteReferencia
]]‡ ˚
)
]]˚ ¸
.
]]¸ ˝
Value
]]˝ Ç
+
]]É Ñ
$str
]]Ö à
+
]]â ä
operacionVenta
]]ã ô
.
]]ô ö(
SerieComprobanteReferencia
]]ö ¥
+
]]µ ∂
$str
]]∑ ∫
+
]]ª º
operacionVenta
]]Ω À
.
]]À Ã)
NumeroComprobanteReferencia
]]Ã Á
.
]]Á Ë
ToString
]]Ë 
(
]] Ò
)
]]Ò Ú
.
]]Ú Û
ToString
]]Û ˚
(
]]˚ ¸
)
]]¸ ˝
.
]]˝ ˛
PadLeft
]]˛ Ö
(
]]Ö Ü
$num
]]Ü á
,
]]á à
$char
]]â å
)
]]å ç
,
]]ç é

TipoCambio^^ 
=^^ 
operacionVenta^^ +
.^^+ ,

TipoCambio^^, 6
,^^6 7
TipoConversion__ 
=__  
ConcarSettings__! /
.__/ 0
Default__0 7
.__7 8
TipoConversionVenta__8 K
,__K L 
FlagConversionMoneda`` $
=``% &
ConcarSettings``' 5
.``5 6
Default``6 =
.``= >-
!FlagConversionMonedaSiSeConvierte``> _
,``_ `
FechaTipoCambioaa 
=aa  !
$straa" $
,aa$ %
CuentaContablebb 
=bb  
ConcarSettingsbb! /
.bb/ 0
Defaultbb0 7
.bb7 8+
CuentaContableFacturasPorCobrarbb8 W
,bbW X
CodigoAnexocc 
=cc 
operacionVentacc ,
.cc, -"
NumeroDocumentoClientecc- C
,ccC D
CodigoCentroCostodd !
=dd" #
$strdd$ &
,dd& '
	DebeHaberee 
=ee 
esDebeee "
?ee# $
ConcarSettingsee% 3
.ee3 4
Defaultee4 ;
.ee; <
Debeee< @
:eeA B
ConcarSettingseeC Q
.eeQ R
DefaulteeR Y
.eeY Z
HabereeZ _
,ee_ `
ImporteOriginalff 
=ff  !
totalff" '
,ff' (
ImporteDolaresgg 
=gg  
$numgg! "
,gg" #
ImporteSoleshh 
=hh 
$numhh  
,hh  !
TipoDocumentoii 
=ii 
esReferenciaii  ,
?ii- .4
(MapeoComprobanteSigesVsComprobanteConcarii/ W
.iiW X
SingleiiX ^
(ii^ _
mii_ `
=>iia c
miid e
.iie f
Keyiif i
==iij l
operacionVentaiim {
.ii{ |(
IdTipoComprobanteReferencia	ii| ó
)
iió ò
.
iiò ô
Value
iiô û
:
iiü †6
(MapeoComprobanteSigesVsComprobanteConcar
ii° …
.
ii…  
Single
ii  –
(
ii– —
m
ii— “
=>
ii” ’
m
ii÷ ◊
.
ii◊ ÿ
Key
iiÿ €
==
ii‹ ﬁ
operacionVenta
iiﬂ Ì
.
iiÌ Ó
IdTipoComprobante
iiÓ ˇ
)
iiˇ Ä
.
iiÄ Å
Value
iiÅ Ü
,
iiÜ á
NumeroDocumentojj 
=jj  !
esReferenciajj" .
?jj/ 0
operacionVentajj1 ?
.jj? @&
SerieComprobanteReferenciajj@ Z
+jj[ \
$strjj] `
+jja b
operacionVentajjc q
.jjq r(
NumeroComprobanteReferencia	jjr ç
.
jjç é
ToString
jjé ñ
(
jjñ ó
)
jjó ò
.
jjò ô
ToString
jjô °
(
jj° ¢
)
jj¢ £
.
jj£ §
PadLeft
jj§ ´
(
jj´ ¨
$num
jj¨ ≠
,
jj≠ Æ
$char
jjØ ≤
)
jj≤ ≥
:
jj¥ µ
operacionVenta
jj∂ ƒ
.
jjƒ ≈
SerieComprobante
jj≈ ’
+
jj÷ ◊
$str
jjÿ €
+
jj‹ ›
operacionVenta
jjﬁ Ï
.
jjÏ Ì
NumeroComprobante
jjÌ ˛
.
jj˛ ˇ
ToString
jjˇ á
(
jjá à
)
jjà â
.
jjâ ä
ToString
jjä í
(
jjí ì
)
jjì î
.
jjî ï
PadLeft
jjï ú
(
jjú ù
$num
jjù û
,
jjû ü
$char
jj† £
)
jj£ §
,
jj§ •
FechaDocumentokk 
=kk  
operacionVentakk! /
.kk/ 0
FechaDocumentokk0 >
.kk> ?
ToStringkk? G
(kkG H
$strkkH T
)kkT U
,kkU V
FechaVencimientoll  
=ll! "
operacionVentall# 1
.ll1 2
FechaVencimientoll2 B
.llB C
ToStringllC K
(llK L
$strllL X
)llX Y
,llY Z

CodigoAreamm 
=mm 
$strmm 
,mm  
GlosaDetallenn 
=nn 
esReferenciann +
?nn, -
operacionVentann. <
.nn< =2
&NombreTipoTransaccionReferenciaWrappernn= c
:nnd e
operacionVentannf t
.nnt u)
NombreTipoTransaccionWrapper	nnu ë
,
nnë í
CodigoAnexoAuxiliaroo #
=oo$ %
$stroo& (
,oo( )
	MedioPagopp 
=pp 
$strpp 
,pp #
TipoDocumentoReferenciaqq '
=qq( )
esNotaCreditoDebitoqq* =
?qq> ?4
(MapeoComprobanteSigesVsComprobanteConcarqq@ h
.qqh i
Singleqqi o
(qqo p
mqqp q
=>qqr t
mqqu v
.qqv w
Keyqqw z
==qq{ }
operacionVenta	qq~ å
.
qqå ç)
IdTipoComprobanteReferencia
qqç ®
)
qq® ©
.
qq© ™
Value
qq™ Ø
:
qq∞ ±
$str
qq≤ ¥
,
qq¥ µ%
NumeroDocumentoReferenciarr )
=rr* +
esNotaCreditoDebitorr, ?
?rr@ A
operacionVentarrB P
.rrP Q&
SerieComprobanteReferenciarrQ k
+rrl m
$strrrn q
+rrr s
operacionVenta	rrt Ç
.
rrÇ É)
NumeroComprobanteReferencia
rrÉ û
.
rrû ü
ToString
rrü ß
(
rrß ®
)
rr® ©
.
rr© ™
PadLeft
rr™ ±
(
rr± ≤
$num
rr≤ ≥
,
rr≥ ¥
$char
rrµ ∏
)
rr∏ π
:
rr∫ ª
$str
rrº æ
,
rræ ø$
FechaDocumentoReferenciass (
=ss) *
esNotaCreditoDebitoss+ >
?ss? @
operacionVentassA O
.ssO P"
FechaEmisionReferenciassP f
.ssf g
ToStringssg o
(sso p
$strssp |
)ss| }
:ss~ 
$str
ssÄ Ç
,
ssÇ É(
NroMaqRegistradoraTipoDocReftt ,
=tt- .
$strtt/ 1
,tt1 2,
 BaseImponibleDocumentoReferenciauu 0
=uu1 2
esNotaCreditoDebitouu3 F
?uuG H
MathuuI M
.uuM N
RounduuN S
(uuS T
operacionVentauuT b
.uub c#
BaseImponibleReferenciauuc z
,uuz {
$numuu| }
)uu} ~
:	uu Ä
$num
uuÅ Ç
,
uuÇ É!
IGVDocumentoProvisionvv %
=vv& '
esNotaCreditoDebitovv( ;
?vv< =
(vv> ?
operacionVentavv? M
.vvM N
IgvReferenciavvN [
==vv\ ^
$numvv_ `
?vva b
$numvvc d
:vve f
Mathvvg k
.vvk l
Roundvvl q
(vvq r
operacionVenta	vvr Ä
.
vvÄ Å
IgvReferencia
vvÅ é
,
vvé è
$num
vvê ë
)
vvë í
)
vví ì
:
vvî ï
$num
vvñ ó
,
vvó ò$
TipoReferenciaenestadoMQww (
=ww) *
$strww+ -
,ww- .'
NumeroSerieCajaRegistradoraxx +
=xx, -
$strxx. 0
,xx0 1
FechaOperacionyy 
=yy  
$stryy! #
,yy# $
TipoTasazz 
=zz 
$strzz 
,zz $
TasaDetraccionPercepcion{{ (
={{) *
$num{{+ ,
,{{, -2
&ImporteBaseDetraccionPercepcionDolares|| 6
=||7 8
$num||9 :
,||: ;0
$ImporteBaseDetraccionPercepcionSoles}} 4
=}}5 6
$num}}7 8
,}}8 9
TipoCambioparaF~~ 
=~~  !
$str~~" $
,~~$ %-
!ImporteIGVSinDerechoCreditoFiscal 1
=2 3
$num4 5
}
ÄÄ 
;
ÄÄ 
return
ÅÅ 
detalleAsiento
ÅÅ !
;
ÅÅ! "
}
ÇÇ 	
private
ÑÑ 
List
ÑÑ 
<
ÑÑ *
DetalleAsientoContableConcar
ÑÑ 1
>
ÑÑ1 2&
ObtenerRegistroCobranzas
ÑÑ3 K
(
ÑÑK L
Periodo
ÑÑL S
periodo
ÑÑT [
,
ÑÑ[ \
List
ÑÑ] a
<
ÑÑa b
OperacionVenta
ÑÑb p
>
ÑÑp q
operacionesVentaÑÑr Ç
)ÑÑÇ É
{
ÖÖ 	
try
ÜÜ 
{
áá 
List
àà 
<
àà *
DetalleAsientoContableConcar
àà 1
>
àà1 2(
SubDiarioRegistroCobranzas
àà3 M
=
ààN O
new
ààP S
List
ààT X
<
ààX Y*
DetalleAsientoContableConcar
ààY u
>
ààu v
(
ààv w
)
ààw x
;
ààx y
int
ââ 
correlativo
ââ 
=
ââ  !
$num
ââ" #
;
ââ# $
foreach
ää 
(
ää 
var
ää 
operacionVenta
ää +
in
ää, .
operacionesVenta
ää/ ?
)
ää? @
{
ãã 
bool
åå &
esDebeOperacionPrincipal
åå 1
=
åå2 3
operacionVenta
åå4 B
.
ååB C
IdTipoComprobante
ååC T
!=
ååU W
MaestroSettings
ååX g
.
ååg h
Default
ååh o
.
ååo p5
&IdDetalleMaestroComprobanteNotaCreditoååp ñ
;ååñ ó
string
éé  
correlativoDetalle
éé -
=
éé. /
periodo
éé0 7
.
éé7 8
mes
éé8 ;
+
éé< =
correlativo
éé> I
.
ééI J
ToString
ééJ R
(
ééR S
)
ééS T
.
ééT U
PadLeft
ééU \
(
éé\ ]
$num
éé] ^
,
éé^ _
$char
éé` c
)
ééc d
;
ééd e(
SubDiarioRegistroCobranzas
êê .
.
êê. /
Add
êê/ 2
(
êê2 31
#GenerarDetalleAsientoContableConcar
êê3 V
(
êêV W
operacionVenta
êêW e
,
êêe f
ConcarSettings
êêg u
.
êêu v
Default
êêv }
.
êê} ~*
SubDiarioPlanillaDeCobranzaêê~ ô
,êêô ö(
esDebeOperacionPrincipalêêõ ≥
,êê≥ ¥"
correlativoDetalleêêµ «
,êê« »
falseêê… Œ
,êêŒ œ
ConcarSettingsêê– ﬁ
.êêﬁ ﬂ
Defaultêêﬂ Ê
.êêÊ Á"
CuentaContableCajaêêÁ ˘
,êê˘ ˙
operacionVentaêê˚ â
.êêâ ä
MontoTotalPagoêêä ò
)êêò ô
)êêô ö
;êêö õ
if
íí 
(
íí 
!
íí 
operacionVenta
íí '
.
íí' (
EstaInvalidado
íí( 6
)
íí6 7
{
ìì (
SubDiarioRegistroCobranzas
îî 2
.
îî2 3
Add
îî3 6
(
îî6 71
#GenerarDetalleAsientoContableConcar
îî7 Z
(
îîZ [
operacionVenta
îî[ i
,
îîi j
ConcarSettings
îîk y
.
îîy z
Defaultîîz Å
.îîÅ Ç+
SubDiarioPlanillaDeCobranzaîîÇ ù
,îîù û
!îîü †(
esDebeOperacionPrincipalîî† ∏
,îî∏ π"
correlativoDetalleîî∫ Ã
,îîÃ Õ
falseîîŒ ”
,îî” ‘
ConcarSettingsîî’ „
.îî„ ‰
Defaultîî‰ Î
.îîÎ Ï/
CuentaContableFacturasPorCobrarîîÏ ã
,îîã å
operacionVentaîîç õ
.îîõ ú
MontoTotalPagoîîú ™
)îî™ ´
)îî´ ¨
;îî¨ ≠
}
ïï 
correlativo
ññ 
++
ññ !
;
ññ! "
}
óó 
return
òò (
SubDiarioRegistroCobranzas
òò 1
;
òò1 2
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
$str
úú* ]
,
úú] ^
e
úú_ `
)
úú` a
;
úúa b
}
ùù 
}
ûû 	
private
†† 
List
†† 
<
†† *
DetalleAsientoContableConcar
†† 1
>
††1 2#
ObtenerRegistroVentas
††3 H
(
††H I
Periodo
††I P
periodo
††Q X
,
††X Y
List
††Z ^
<
††^ _
OperacionVenta
††_ m
>
††m n
operacionesVenta
††o 
)†† Ä
{
°° 	
try
¢¢ 
{
££ 
List
§§ 
<
§§ *
DetalleAsientoContableConcar
§§ 1
>
§§1 2%
SubDiarioRegistroVentas
§§3 J
=
§§K L
new
§§M P
List
§§Q U
<
§§U V*
DetalleAsientoContableConcar
§§V r
>
§§r s
(
§§s t
)
§§t u
;
§§u v
int
•• 
correlativo
•• 
=
••  !
$num
••" #
;
••# $
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
operacionVenta
¶¶ +
in
¶¶, .
operacionesVenta
¶¶/ ?
)
¶¶? @
{
ßß 
bool
®® &
esDebeOperacionPrincipal
®® 1
=
®®2 3
operacionVenta
®®4 B
.
®®B C
IdTipoComprobante
®®C T
!=
®®U W
MaestroSettings
®®X g
.
®®g h
Default
®®h o
.
®®o p5
&IdDetalleMaestroComprobanteNotaCredito®®p ñ
;®®ñ ó
bool
©© !
esNotaCreditoDebito
©© ,
=
©©- .
Diccionario
©©/ :
.
©©: ;D
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebito
©©; q
.
©©q r
Contains
©©r z
(
©©z {
operacionVenta©©{ â
.©©â ä!
IdTipoComprobante©©ä õ
)©©õ ú
;©©ú ù
string
™™  
correlativoDetalle
™™ -
=
™™. /
periodo
™™0 7
.
™™7 8
mes
™™8 ;
+
™™< =
correlativo
™™> I
.
™™I J
ToString
™™J R
(
™™R S
)
™™S T
.
™™T U
PadLeft
™™U \
(
™™\ ]
$num
™™] ^
,
™™^ _
$char
™™` c
)
™™c d
;
™™d e%
SubDiarioRegistroVentas
¨¨ +
.
¨¨+ ,
Add
¨¨, /
(
¨¨/ 01
#GenerarDetalleAsientoContableConcar
¨¨0 S
(
¨¨S T
operacionVenta
¨¨T b
,
¨¨b c
ConcarSettings
¨¨d r
.
¨¨r s
Default
¨¨s z
.
¨¨z {&
SubDiarioRegistroVentas¨¨{ í
,¨¨í ì(
esDebeOperacionPrincipal¨¨î ¨
,¨¨¨ ≠"
correlativoDetalle¨¨Æ ¿
,¨¨¿ ¡#
esNotaCreditoDebito¨¨¬ ’
,¨¨’ ÷
ConcarSettings¨¨◊ Â
.¨¨Â Ê
Default¨¨Ê Ì
.¨¨Ì Ó/
CuentaContableFacturasPorCobrar¨¨Ó ç
,¨¨ç é
operacionVenta¨¨è ù
.¨¨ù û
ImporteTotal¨¨û ™
)¨¨™ ´
)¨¨´ ¨
;¨¨¨ ≠
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
operacionVenta
ÆÆ '
.
ÆÆ' (
EstaInvalidado
ÆÆ( 6
)
ÆÆ6 7
{
ØØ 
if
∞∞ 
(
∞∞ 
operacionVenta
∞∞ *
.
∞∞* +
TotalIgv
∞∞+ 3
>
∞∞4 5
$num
∞∞6 7
)
∞∞7 8%
SubDiarioRegistroVentas
±± 3
.
±±3 4
Add
±±4 7
(
±±7 81
#GenerarDetalleAsientoContableConcar
±±8 [
(
±±[ \
operacionVenta
±±\ j
,
±±j k
ConcarSettings
±±l z
.
±±z {
Default±±{ Ç
.±±Ç É'
SubDiarioRegistroVentas±±É ö
,±±ö õ
!±±ú ù(
esDebeOperacionPrincipal±±ù µ
,±±µ ∂"
correlativoDetalle±±∑ …
,±±…  #
esNotaCreditoDebito±±À ﬁ
,±±ﬁ ﬂ
ConcarSettings±±‡ Ó
.±±Ó Ô
Default±±Ô ˆ
.±±ˆ ˜!
CuentaContableIgv±±˜ à
,±±à â
(±±ä ã
decimal±±ã í
)±±í ì
operacionVenta±±ì °
.±±° ¢
TotalIgv±±¢ ™
)±±™ ´
)±±´ ¨
;±±¨ ≠
if
≤≤ 
(
≤≤ 
operacionVenta
≤≤ *
.
≤≤* +
Icbper
≤≤+ 1
>
≤≤2 3
$num
≤≤4 5
)
≤≤5 6%
SubDiarioRegistroVentas
≥≥ 3
.
≥≥3 4
Add
≥≥4 7
(
≥≥7 81
#GenerarDetalleAsientoContableConcar
≥≥8 [
(
≥≥[ \
operacionVenta
≥≥\ j
,
≥≥j k
ConcarSettings
≥≥l z
.
≥≥z {
Default≥≥{ Ç
.≥≥Ç É'
SubDiarioRegistroVentas≥≥É ö
,≥≥ö õ
!≥≥ú ù(
esDebeOperacionPrincipal≥≥ù µ
,≥≥µ ∂"
correlativoDetalle≥≥∑ …
,≥≥…  #
esNotaCreditoDebito≥≥À ﬁ
,≥≥ﬁ ﬂ
ConcarSettings≥≥‡ Ó
.≥≥Ó Ô
Default≥≥Ô ˆ
.≥≥ˆ ˜$
CuentaContableIcbper≥≥˜ ã
,≥≥ã å
(≥≥ç é
decimal≥≥é ï
)≥≥ï ñ
operacionVenta≥≥ñ §
.≥≥§ •
Icbper≥≥• ´
)≥≥´ ¨
)≥≥¨ ≠
;≥≥≠ Æ
if
¥¥ 
(
¥¥ 
operacionVenta
¥¥ *
.
¥¥* +
	TotalBien
¥¥+ 4
>
¥¥5 6
$num
¥¥7 8
)
¥¥8 9%
SubDiarioRegistroVentas
µµ 3
.
µµ3 4
Add
µµ4 7
(
µµ7 81
#GenerarDetalleAsientoContableConcar
µµ8 [
(
µµ[ \
operacionVenta
µµ\ j
,
µµj k
ConcarSettings
µµl z
.
µµz {
Defaultµµ{ Ç
.µµÇ É'
SubDiarioRegistroVentasµµÉ ö
,µµö õ
!µµú ù(
esDebeOperacionPrincipalµµù µ
,µµµ ∂"
correlativoDetalleµµ∑ …
,µµ…  #
esNotaCreditoDebitoµµÀ ﬁ
,µµﬁ ﬂ
ConcarSettingsµµ‡ Ó
.µµÓ Ô
DefaultµµÔ ˆ
.µµˆ ˜-
CuentaContableVentaMercaderiaµµ˜ î
,µµî ï
(µµñ ó
decimalµµó û
)µµû ü
operacionVentaµµü ≠
.µµ≠ Æ!
BaseImponibleBienµµÆ ø
)µµø ¿
)µµ¿ ¡
;µµ¡ ¬
if
∂∂ 
(
∂∂ 
operacionVenta
∂∂ *
.
∂∂* +
TotalServicio
∂∂+ 8
>
∂∂9 :
$num
∂∂; <
)
∂∂< =%
SubDiarioRegistroVentas
∑∑ 3
.
∑∑3 4
Add
∑∑4 7
(
∑∑7 81
#GenerarDetalleAsientoContableConcar
∑∑8 [
(
∑∑[ \
operacionVenta
∑∑\ j
,
∑∑j k
ConcarSettings
∑∑l z
.
∑∑z {
Default∑∑{ Ç
.∑∑Ç É'
SubDiarioRegistroVentas∑∑É ö
,∑∑ö õ
!∑∑ú ù(
esDebeOperacionPrincipal∑∑ù µ
,∑∑µ ∂"
correlativoDetalle∑∑∑ …
,∑∑…  #
esNotaCreditoDebito∑∑À ﬁ
,∑∑ﬁ ﬂ
ConcarSettings∑∑‡ Ó
.∑∑Ó Ô
Default∑∑Ô ˆ
.∑∑ˆ ˜+
CuentaContableVentaServicio∑∑˜ í
,∑∑í ì
(∑∑î ï
decimal∑∑ï ú
)∑∑ú ù
operacionVenta∑∑ù ´
.∑∑´ ¨%
BaseImponibleServicio∑∑¨ ¡
)∑∑¡ ¬
)∑∑¬ √
;∑∑√ ƒ
}
∏∏ 
correlativo
ππ 
++
ππ !
;
ππ! "
}
∫∫ 
return
ªª %
SubDiarioRegistroVentas
ªª .
;
ªª. /
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
e
ΩΩ 
)
ΩΩ 
{
ææ 
throw
øø 
new
øø 
LogicaException
øø )
(
øø) *
$str
øø* [
,
øø[ \
e
øø] ^
)
øø^ _
;
øø_ `
}
¿¿ 
}
¡¡ 	
private
√√ 
List
√√ 
<
√√ *
DetalleAsientoContableConcar
√√ 1
>
√√1 2"
ObtenerRegistroNotas
√√3 G
(
√√G H
Periodo
√√H O
periodo
√√P W
,
√√W X
List
√√Y ]
<
√√] ^
OperacionVenta
√√^ l
>
√√l m
operacionesVenta
√√n ~
)
√√~ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
List
«« 
<
«« *
DetalleAsientoContableConcar
«« 1
>
««1 2%
SubDiarioRegistroVentas
««3 J
=
««K L
new
««M P
List
««Q U
<
««U V*
DetalleAsientoContableConcar
««V r
>
««r s
(
««s t
)
««t u
;
««u v
int
»» 
correlativo
»» 
=
»»  !
$num
»»" #
;
»»# $
foreach
…… 
(
…… 
var
…… 
operacionVenta
…… +
in
……, .
operacionesVenta
……/ ?
)
……? @
{
   
bool
ÀÀ &
esDebeOperacionPrincipal
ÀÀ 1
=
ÀÀ2 3
operacionVenta
ÀÀ4 B
.
ÀÀB C
IdTipoComprobante
ÀÀC T
!=
ÀÀU W
MaestroSettings
ÀÀX g
.
ÀÀg h
Default
ÀÀh o
.
ÀÀo p5
&IdDetalleMaestroComprobanteNotaCreditoÀÀp ñ
;ÀÀñ ó
bool
ÃÃ !
esNotaCreditoDebito
ÃÃ ,
=
ÃÃ- .
Diccionario
ÃÃ/ :
.
ÃÃ: ;D
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebito
ÃÃ; q
.
ÃÃq r
Contains
ÃÃr z
(
ÃÃz {
operacionVentaÃÃ{ â
.ÃÃâ ä!
IdTipoComprobanteÃÃä õ
)ÃÃõ ú
;ÃÃú ù
string
ÕÕ  
correlativoDetalle
ÕÕ -
=
ÕÕ. /
periodo
ÕÕ0 7
.
ÕÕ7 8
mes
ÕÕ8 ;
+
ÕÕ< =
correlativo
ÕÕ> I
.
ÕÕI J
ToString
ÕÕJ R
(
ÕÕR S
)
ÕÕS T
.
ÕÕT U
PadLeft
ÕÕU \
(
ÕÕ\ ]
$num
ÕÕ] ^
,
ÕÕ^ _
$char
ÕÕ` c
)
ÕÕc d
;
ÕÕd e%
SubDiarioRegistroVentas
œœ +
.
œœ+ ,
Add
œœ, /
(
œœ/ 0>
0GenerarDetalleAsientoContableConcarRegistroNotas
œœ0 `
(
œœ` a
operacionVenta
œœa o
,
œœo p
!
œœq r'
esDebeOperacionPrincipalœœr ä
,œœä ã"
correlativoDetalleœœå û
,œœû ü#
esNotaCreditoDebitoœœ† ≥
,œœ≥ ¥
falseœœµ ∫
,œœ∫ ª
operacionVentaœœº  
.œœ  À
ImporteTotalœœÀ ◊
)œœ◊ ÿ
)œœÿ Ÿ
;œœŸ ⁄%
SubDiarioRegistroVentas
—— +
.
——+ ,
Add
——, /
(
——/ 0>
0GenerarDetalleAsientoContableConcarRegistroNotas
——0 `
(
——` a
operacionVenta
——a o
,
——o p'
esDebeOperacionPrincipal——q â
,——â ä"
correlativoDetalle——ã ù
,——ù û
!——ü †#
esNotaCreditoDebito——† ≥
,——≥ ¥
true——µ π
,——π ∫
operacionVenta——ª …
.——…  
ImporteTotal——  ÷
)——÷ ◊
)——◊ ÿ
;——ÿ Ÿ
correlativo
““ 
++
““ !
;
““! "
}
”” 
return
‘‘ %
SubDiarioRegistroVentas
‘‘ .
;
‘‘. /
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
◊◊ 
throw
ÿÿ 
new
ÿÿ 
LogicaException
ÿÿ )
(
ÿÿ) *
$str
ÿÿ* n
,
ÿÿn o
e
ÿÿp q
)
ÿÿq r
;
ÿÿr s
}
ŸŸ 
}
⁄⁄ 	
private
‹‹ 
List
‹‹ 
<
‹‹ #
RegistroClienteConcar
‹‹ *
>
‹‹* +%
ObtenerRegistroClientes
‹‹, C
(
‹‹C D
Periodo
‹‹D K
periodo
‹‹L S
)
‹‹S T
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
var
‡‡ 
registrosCliente
‡‡ $
=
‡‡% &,
_librosElectronicosConcarDatos
‡‡' E
.
‡‡E F%
ObtenerRegistroClientes
‡‡F ]
(
‡‡] ^
Diccionario
‡‡^ i
.
‡‡i j,
TiposDeComprobanteTributables‡‡j á
,‡‡á à
Diccionario‡‡â î
.‡‡î ïS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones‡‡ï ÿ
,‡‡ÿ Ÿ
periodo‡‡⁄ ·
.‡‡· ‚

FechaDesde‡‡‚ Ï
,‡‡Ï Ì
periodo‡‡Ó ı
.‡‡ı ˆ

FechaHasta‡‡ˆ Ä
)‡‡Ä Å
.‡‡Å Ç
ToList‡‡Ç à
(‡‡à â
)‡‡â ä
;‡‡ä ã
registrosCliente
··  
.
··  !
Remove
··! '
(
··' (
registrosCliente
··( 8
.
··8 9
SingleOrDefault
··9 H
(
··H I
rc
··I K
=>
··L N
rc
··O Q
.
··Q R
Id
··R T
==
··U W
ActorSettings
··X e
.
··e f
Default
··f m
.
··m n
IdClienteGenerico
··n 
)·· Ä
)··Ä Å
;··Å Ç
registrosCliente
‚‚  
.
‚‚  !
ForEach
‚‚! (
(
‚‚( )
m
‚‚) *
=>
‚‚+ -
{
‚‚. /
var
‚‚0 3 
nombreClienteArray
‚‚4 F
=
‚‚G H
m
‚‚I J
.
‚‚J K
Nombre
‚‚K Q
.
‚‚Q R
Split
‚‚R W
(
‚‚W X
$char
‚‚X [
)
‚‚[ \
;
‚‚\ ]
m
‚‚^ _
.
‚‚_ `
Nombre
‚‚` f
=
‚‚g h 
nombreClienteArray
‚‚i {
.
‚‚{ |
Length‚‚| Ç
==‚‚É Ö
$num‚‚Ü á
?‚‚à â
(‚‚ä ã"
nombreClienteArray‚‚ã ù
[‚‚ù û
$num‚‚û ü
]‚‚ü †
+‚‚° ¢
$str‚‚£ ¶
+‚‚ß ®"
nombreClienteArray‚‚© ª
[‚‚ª º
$num‚‚º Ω
]‚‚Ω æ
+‚‚ø ¿
$str‚‚¡ ƒ
+‚‚≈ ∆"
nombreClienteArray‚‚« Ÿ
[‚‚Ÿ ⁄
$num‚‚⁄ €
]‚‚€ ‹
)‚‚‹ ›
:‚‚ﬁ ﬂ"
nombreClienteArray‚‚‡ Ú
[‚‚Ú Û
$num‚‚Û Ù
]‚‚Ù ı
;‚‚ı ˆ
}‚‚˜ ¯
)‚‚¯ ˘
;‚‚˘ ˙
registrosCliente
„„  
=
„„! "
registrosCliente
„„# 3
.
„„3 4
OrderBy
„„4 ;
(
„„; <
c
„„< =
=>
„„> @
c
„„A B
.
„„B C
NumeroDocumento
„„C R
)
„„R S
.
„„S T
ToList
„„T Z
(
„„Z [
)
„„[ \
;
„„\ ]
List
‰‰ 
<
‰‰ #
RegistroClienteConcar
‰‰ *
>
‰‰* +$
RegistroClientesConcar
‰‰, B
=
‰‰C D
new
‰‰E H
List
‰‰I M
<
‰‰M N#
RegistroClienteConcar
‰‰N c
>
‰‰c d
(
‰‰d e
)
‰‰e f
;
‰‰f g
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
registroCliente
ÂÂ ,
in
ÂÂ- /
registrosCliente
ÂÂ0 @
)
ÂÂ@ A
{
ÊÊ $
RegistroClientesConcar
ÁÁ *
.
ÁÁ* +
Add
ÁÁ+ .
(
ÁÁ. /
new
ÁÁ/ 2#
RegistroClienteConcar
ÁÁ3 H
{
ËË 
Avanexo
ÈÈ 
=
ÈÈ  !
ConcarSettings
ÈÈ" 0
.
ÈÈ0 1
Default
ÈÈ1 8
.
ÈÈ8 9,
RegistroClientesConcarAvanexoC
ÈÈ9 W
,
ÈÈW X
Acodane
ÍÍ 
=
ÍÍ  !
registroCliente
ÍÍ" 1
.
ÍÍ1 2
NumeroDocumento
ÍÍ2 A
,
ÍÍA B
Adesane
ÎÎ 
=
ÎÎ  !
registroCliente
ÎÎ" 1
.
ÎÎ1 2
Nombre
ÎÎ2 8
,
ÎÎ8 9
Arefane
ÏÏ 
=
ÏÏ  !
(
ÏÏ" #
string
ÏÏ# )
.
ÏÏ) *
IsNullOrEmpty
ÏÏ* 7
(
ÏÏ7 8
registroCliente
ÏÏ8 G
.
ÏÏG H
	Direccion
ÏÏH Q
)
ÏÏQ R
||
ÏÏS U
registroCliente
ÏÏV e
.
ÏÏe f
	Direccion
ÏÏf o
==
ÏÏp r
$str
ÏÏs v
)
ÏÏv w
?
ÏÏx y
ConcarSettingsÏÏz à
.ÏÏà â
DefaultÏÏâ ê
.ÏÏê ë9
)RegistorClientesConcarArefaneSinDireccionÏÏë ∫
:ÏÏª º
registroClienteÏÏΩ Ã
.ÏÏÃ Õ
	DireccionÏÏÕ ÷
,ÏÏ÷ ◊
Aruc
ÌÌ 
=
ÌÌ 
registroCliente
ÌÌ .
.
ÌÌ. /
NumeroDocumento
ÌÌ/ >
,
ÌÌ> ?
Acodmon
ÓÓ 
=
ÓÓ  !
ConcarSettings
ÓÓ" 0
.
ÓÓ0 1
Default
ÓÓ1 8
.
ÓÓ8 9
MonedaSoles
ÓÓ9 D
,
ÓÓD E
Aestado
ÔÔ 
=
ÔÔ  !
ConcarSettings
ÔÔ" 0
.
ÔÔ0 1
Default
ÔÔ1 8
.
ÔÔ8 9,
RegistorClientesConcarAestadoV
ÔÔ9 W
}
 
)
 
;
 
}
ÒÒ 
return
ÚÚ $
RegistroClientesConcar
ÚÚ -
;
ÚÚ- .
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
e
ÙÙ 
)
ÙÙ 
{
ıı 
throw
ˆˆ 
new
ˆˆ 
LogicaException
ˆˆ )
(
ˆˆ) *
$str
ˆˆ* ]
,
ˆˆ] ^
e
ˆˆ_ `
)
ˆˆ` a
;
ˆˆa b
}
˜˜ 
}
¯¯ 	
public
˘˘ $
LibroElectronicoConcar
˘˘ %-
ObtenerLibrosElectronicosConcar
˘˘& E
(
˘˘E F
Periodo
˘˘F M
periodo
˘˘N U
)
˘˘U V
{
˙˙ 	
try
˚˚ 
{
¸¸ $
LibroElectronicoConcar
˝˝ &$
libroElectronicoConcar
˝˝' =
=
˝˝> ?
new
˝˝@ C$
LibroElectronicoConcar
˝˝D Z
(
˝˝Z [
)
˝˝[ \
;
˝˝\ ]
var
˛˛ 
operacionesVenta
˛˛ $
=
˛˛% &,
_librosElectronicosConcarDatos
˛˛' E
.
˛˛E F%
ObtenerOperacionesVenta
˛˛F ]
(
˛˛] ^
Diccionario
˛˛^ i
.
˛˛i j,
TiposDeComprobanteTributables˛˛j á
,˛˛á à
Diccionario˛˛â î
.˛˛î ïS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones˛˛ï ÿ
,˛˛ÿ Ÿ
periodo˛˛⁄ ·
.˛˛· ‚

FechaDesde˛˛‚ Ï
,˛˛Ï Ì
periodo˛˛Ó ı
.˛˛ı ˆ

FechaHasta˛˛ˆ Ä
)˛˛Ä Å
.˛˛Å Ç
OrderBy˛˛Ç â
(˛˛â ä
ov˛˛ä å
=>˛˛ç è
ov˛˛ê í
.˛˛í ì
FechaEmision˛˛ì ü
)˛˛ü †
.˛˛† °
ToList˛˛° ß
(˛˛ß ®
)˛˛® ©
;˛˛© ™
operacionesVenta
ˇˇ  
.
ˇˇ  !
ForEach
ˇˇ! (
(
ˇˇ( )
m
ˇˇ) *
=>
ˇˇ+ -
{
ˇˇ. /
var
ˇˇ0 3 
nombreClienteArray
ˇˇ4 F
=
ˇˇG H
m
ˇˇI J
.
ˇˇJ K
NombreCliente
ˇˇK X
.
ˇˇX Y
Split
ˇˇY ^
(
ˇˇ^ _
$char
ˇˇ_ b
)
ˇˇb c
;
ˇˇc d
m
ˇˇe f
.
ˇˇf g
NombreCliente
ˇˇg t
=
ˇˇu v
m
ˇˇw x
.
ˇˇx y
	IdClienteˇˇy Ç
==ˇˇÉ Ö
ActorSettingsˇˇÜ ì
.ˇˇì î
Defaultˇˇî õ
.ˇˇõ ú!
IdClienteGenericoˇˇú ≠
?ˇˇÆ Ø"
nombreClienteArrayˇˇ∞ ¬
[ˇˇ¬ √
$numˇˇ√ ƒ
]ˇˇƒ ≈
:ˇˇ∆ «"
nombreClienteArrayˇˇ» ⁄
.ˇˇ⁄ €
Lengthˇˇ€ ·
==ˇˇ‚ ‰
$numˇˇÂ Ê
?ˇˇÁ Ë
(ˇˇÈ Í"
nombreClienteArrayˇˇÍ ¸
[ˇˇ¸ ˝
$numˇˇ˝ ˛
]ˇˇ˛ ˇ
+ˇˇÄ Å
$strˇˇÇ Ö
+ˇˇÜ á"
nombreClienteArrayˇˇà ö
[ˇˇö õ
$numˇˇõ ú
]ˇˇú ù
+ˇˇû ü
$strˇˇ† £
+ˇˇ§ •"
nombreClienteArrayˇˇ¶ ∏
[ˇˇ∏ π
$numˇˇπ ∫
]ˇˇ∫ ª
)ˇˇª º
:ˇˇΩ æ"
nombreClienteArrayˇˇø —
[ˇˇ— “
$numˇˇ“ ”
]ˇˇ” ‘
;ˇˇ‘ ’
}ˇˇ÷ ◊
)ˇˇ◊ ÿ
;ˇˇÿ Ÿ
var
ÄÄ 
cobranzasVenta
ÄÄ "
=
ÄÄ# $,
_librosElectronicosConcarDatos
ÄÄ% C
.
ÄÄC D5
'ObtenerOperacionesIngresoDineroPorVenta
ÄÄD k
(
ÄÄk l
Diccionario
ÄÄl w
.
ÄÄw xE
6TiposDeComprobanteDeIngresoDineroPorOperacionesDeVentaÄÄx Æ
,ÄÄÆ Ø
DiccionarioÄÄ∞ ª
.ÄÄª ºH
8TiposDeTransaccionDeIngresoDeDineroPorOperacionesDeVentaÄÄº Ù
,ÄÄÙ ı
periodoÄÄˆ ˝
.ÄÄ˝ ˛

FechaDesdeÄÄ˛ à
,ÄÄà â
periodoÄÄä ë
.ÄÄë í

FechaHastaÄÄí ú
)ÄÄú ù
.ÄÄù û
OrderByÄÄû •
(ÄÄ• ¶
ovÄÄ¶ ®
=>ÄÄ© ´
ovÄÄ¨ Æ
.ÄÄÆ Ø
FechaEmisionÄÄØ ª
)ÄÄª º
.ÄÄº Ω
ToListÄÄΩ √
(ÄÄ√ ƒ
)ÄÄƒ ≈
;ÄÄ≈ ∆
cobranzasVenta
ÅÅ 
.
ÅÅ 
ForEach
ÅÅ &
(
ÅÅ& '
m
ÅÅ' (
=>
ÅÅ) +
{
ÅÅ, -
var
ÅÅ. 1 
nombreClienteArray
ÅÅ2 D
=
ÅÅE F
m
ÅÅG H
.
ÅÅH I
NombreCliente
ÅÅI V
.
ÅÅV W
Split
ÅÅW \
(
ÅÅ\ ]
$char
ÅÅ] `
)
ÅÅ` a
;
ÅÅa b
m
ÅÅc d
.
ÅÅd e
NombreCliente
ÅÅe r
=
ÅÅs t
m
ÅÅu v
.
ÅÅv w
	IdClienteÅÅw Ä
==ÅÅÅ É
ActorSettingsÅÅÑ ë
.ÅÅë í
DefaultÅÅí ô
.ÅÅô ö!
IdClienteGenericoÅÅö ´
?ÅÅ¨ ≠"
nombreClienteArrayÅÅÆ ¿
[ÅÅ¿ ¡
$numÅÅ¡ ¬
]ÅÅ¬ √
:ÅÅƒ ≈"
nombreClienteArrayÅÅ∆ ÿ
.ÅÅÿ Ÿ
LengthÅÅŸ ﬂ
==ÅÅ‡ ‚
$numÅÅ„ ‰
?ÅÅÂ Ê
(ÅÅÁ Ë"
nombreClienteArrayÅÅË ˙
[ÅÅ˙ ˚
$numÅÅ˚ ¸
]ÅÅ¸ ˝
+ÅÅ˛ ˇ
$strÅÅÄ É
+ÅÅÑ Ö"
nombreClienteArrayÅÅÜ ò
[ÅÅò ô
$numÅÅô ö
]ÅÅö õ
+ÅÅú ù
$strÅÅû °
+ÅÅ¢ £"
nombreClienteArrayÅÅ§ ∂
[ÅÅ∂ ∑
$numÅÅ∑ ∏
]ÅÅ∏ π
)ÅÅπ ∫
:ÅÅª º"
nombreClienteArrayÅÅΩ œ
[ÅÅœ –
$numÅÅ– —
]ÅÅ— “
;ÅÅ“ ”
}ÅÅ‘ ’
)ÅÅ’ ÷
;ÅÅ÷ ◊$
libroElectronicoConcar
ÇÇ &
.
ÇÇ& '
RegistroCobranzas
ÇÇ' 8
=
ÇÇ9 :&
ObtenerRegistroCobranzas
ÇÇ; S
(
ÇÇS T
periodo
ÇÇT [
,
ÇÇ[ \
cobranzasVenta
ÇÇ] k
)
ÇÇk l
;
ÇÇl m$
libroElectronicoConcar
ÉÉ &
.
ÉÉ& '
RegistroVentas
ÉÉ' 5
=
ÉÉ6 7#
ObtenerRegistroVentas
ÉÉ8 M
(
ÉÉM N
periodo
ÉÉN U
,
ÉÉU V
operacionesVenta
ÉÉW g
)
ÉÉg h
;
ÉÉh i
var
ÑÑ +
operacionesNotasCreditoDebito
ÑÑ 1
=
ÑÑ2 3
operacionesVenta
ÑÑ4 D
.
ÑÑD E
Where
ÑÑE J
(
ÑÑJ K
o
ÑÑK L
=>
ÑÑM O
Diccionario
ÑÑP [
.
ÑÑ[ \E
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebitoÑÑ\ í
.ÑÑí ì
ContainsÑÑì õ
(ÑÑõ ú
oÑÑú ù
.ÑÑù û!
IdTipoComprobanteÑÑû Ø
)ÑÑØ ∞
)ÑÑ∞ ±
.ÑÑ± ≤
ToListÑÑ≤ ∏
(ÑÑ∏ π
)ÑÑπ ∫
;ÑÑ∫ ª$
libroElectronicoConcar
ÖÖ &
.
ÖÖ& '
RegistroNotas
ÖÖ' 4
=
ÖÖ5 6"
ObtenerRegistroNotas
ÖÖ7 K
(
ÖÖK L
periodo
ÖÖL S
,
ÖÖS T+
operacionesNotasCreditoDebito
ÖÖU r
)
ÖÖr s
;
ÖÖs t$
libroElectronicoConcar
ÜÜ &
.
ÜÜ& '
RegistroClientes
ÜÜ' 7
=
ÜÜ8 9%
ObtenerRegistroClientes
ÜÜ: Q
(
ÜÜQ R
periodo
ÜÜR Y
)
ÜÜY Z
;
ÜÜZ [
return
áá $
libroElectronicoConcar
áá -
;
áá- .
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
new
ãã 
LogicaException
ãã )
(
ãã) *
$str
ãã* a
,
ããa b
e
ããc d
)
ããd e
;
ããe f
}
åå 
}
çç 	
}
éé 
}èè  !
OD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Pedido\PedidoReporte_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Pedido# )
{ 
public 

class  
PedidoReporte_Logica %
:& '!
IPedidoReporte_Logica( =
{ 
	protected 
readonly #
IEstablecimiento_Logica 2"
_establecimientoLogica3 I
;I J
	protected 
readonly &
IMaestrosVenta_Repositorio 5
_maestrosVentaDatos6 I
;I J
public  
PedidoReporte_Logica #
(# $#
IEstablecimiento_Logica$ ;"
establecimiento_Logica< R
,R S&
IMaestrosVenta_RepositorioT n
maestrosVentaDatos	o Å
)
Å Ç
{ 	"
_establecimientoLogica "
=# $"
establecimiento_Logica% ;
;; <
_maestrosVentaDatos 
=  !
maestrosVentaDatos" 4
;4 5
} 	
public 
PrincipalReportData ",
 ObtenerDatosParaReportePrincipal# C
(C D"
UserProfileSessionDataD Z
profileData[ f
)f g
{ 	
var   *
TieneRolAdministradorDeNegocio   .
=  / 0
profileData  1 <
.  < =
Empleado  = E
.  E F
TieneRol  F N
(  N O
ActorSettings  O \
.  \ ]
Default  ] d
.  d e(
idRolAdministradorDeNegocio	  e Ä
)
  Ä Å
;
  Å Ç
if!! 
(!! 
profileData!! 
.!! (
CentroDeAtencionSeleccionado!! 8
==!!9 ;
null!!< @
&&!!A C
!!!D E*
TieneRolAdministradorDeNegocio!!E c
)!!c d
{"" 
throw## 
new## 
LogicaException## )
(##) *
$str##* j
)##j k
;##k l
}$$ 
var%% +
establecimientosConPuntosVentas%% /
=%%0 1*
TieneRolAdministradorDeNegocio%%2 P
?%%Q R
Establecimiento%%S b
.%%b c
Convert%%c j
(%%j k#
_establecimientoLogica	%%k Å
.
%%Å ÇJ
<ObtenerEstablecimientosComercialesVigentesConSusPuntosVentas
%%Ç æ
(
%%æ ø
)
%%ø ¿
.
%%¿ ¡
ToList
%%¡ «
(
%%« »
)
%%» …
)
%%…  
:
%%À Ã
null
%%Õ —
;
%%— “
var'' 
data'' 
='' 
new'' 
PrincipalReportData'' .
(''. /
)''/ 0
{(( 
FechaActual_)) 
=)) 
DateTimeUtil)) +
.))+ ,
FechaActual)), 7
())7 8
)))8 9
,))9 :
EsAdministrador** 
=**  !*
TieneRolAdministradorDeNegocio**" @
,**@ A
Establecimientos++  
=++! "*
TieneRolAdministradorDeNegocio++# A
?++B C+
establecimientosConPuntosVentas++D c
:++d e
new++f i
List++j n
<++n o
Establecimiento++o ~
>++~ 
(	++ Ä
)
++Ä Å
{
++Ç É
profileData
++Ñ è
.
++è ê2
$EstablecimientoComercialSeleccionado
++ê ¥
.
++¥ µ
ToEstablecimiento
++µ ∆
(
++∆ «
)
++« »
}
++…  
},, 
;,, 
if-- 
(-- 
!-- *
TieneRolAdministradorDeNegocio-- /
)--/ 0
data--1 5
.--5 6
Establecimientos--6 F
.--F G
SingleOrDefault--G V
(--V W
)--W X
.--X Y
CentrosAtencion--Y h
=--i j
new--k n
List--o s
<--s t
ItemGenerico	--t Ä
>
--Ä Å
(
--Å Ç
)
--Ç É
{
--Ñ Ö
profileData
--Ü ë
.
--ë í*
CentroDeAtencionSeleccionado
--í Æ
.
--Æ Ø
ToItemGenerico
--Ø Ω
(
--Ω æ
)
--æ ø
}
--¿ ¡
;
--¡ ¬
return.. 
data.. 
;.. 
}// 	
}11 
}22 Œ˜
HD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Pedido\Pedido_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Pedido# )
{ 
public 

class 
Pedido_Logica 
:  
IPedido_Logica! /
{ 
private 
readonly #
ITransaccionRepositorio 0#
_repositorioTransaccion1 H
;H I
private 
readonly 
IPedidoRepositorio +
_repositorioPedido, >
;> ?
private 
readonly 
IPermisos_Logica )
_permisos_logica* :
;: ;
private 
readonly $
ICodigosOperacion_Logica 1$
_codigosOperacion_Logica2 J
;J K
private 
readonly 
IActorNegocioLogica ,
_actorNegocioLogica- @
;@ A
private 
readonly #
ITransaccionRepositorio 0#
_transaccionRepositorio1 H
;H I
private 
readonly 
IActorRepositorio *
_actorRepositorio+ <
;< =
private   
readonly   
IOperacionLogica   )
_operacionLogica  * :
;  : ;
private!! 
readonly!! $
ICentroDeAtencion_Logica!! 1$
_centroDeAtencion_Logica!!2 J
;!!J K
public"" 
Pedido_Logica"" 
("" #
ITransaccionRepositorio"" 4"
repositorioTransaccion""5 K
,""K L
IPermisos_Logica""M ]
permisos_Logica""^ m
,""m n%
ICodigosOperacion_Logica	""o á%
codigosOperacion_Logica
""à ü
,
""ü † 
IPedidoRepositorio
""° ≥
pedidoRepositorio
""¥ ≈
,
""≈ ∆!
IActorNegocioLogica
""« ⁄ 
actorNegocioLogica
""€ Ì
,
""Ì Ó%
ITransaccionRepositorio
""Ô Ü$
transaccionRepositorio
""á ù
,
""ù û
IActorRepositorio
""ü ∞
actorRepositorio
""± ¡
,
""¡ ¬
IOperacionLogica
""√ ”
operacionLogica
""‘ „
,
""„ ‰&
ICentroDeAtencion_Logica
""Â ˝%
centroDeAtencion_Logica
""˛ ï
)
""ï ñ
{## 	#
_repositorioTransaccion$$ #
=$$$ %"
repositorioTransaccion$$& <
;$$< =$
_codigosOperacion_Logica%% $
=%%% &#
codigosOperacion_Logica%%' >
;%%> ?
_permisos_logica&& 
=&& 
permisos_Logica&& .
;&&. /
_repositorioPedido'' 
=''  
pedidoRepositorio''! 2
;''2 3
_actorNegocioLogica(( 
=((  !
actorNegocioLogica((" 4
;((4 5#
_transaccionRepositorio)) #
=))$ %"
transaccionRepositorio))& <
;))< =
_actorRepositorio** 
=** 
actorRepositorio**  0
;**0 1
_operacionLogica++ 
=++ 
operacionLogica++ .
;++. /$
_centroDeAtencion_Logica,, $
=,,% &#
centroDeAtencion_Logica,,' >
;,,> ?
}-- 	
public.. 
PrincipalPedidoData.. "$
ObetenerDatosParaPedidos..# ;
(..; <"
UserProfileSessionData..< R
profileSessionData..S e
)..e f
{// 	
var00 #
tieneRolCajeroDeNegocio00 '
=00( )
profileSessionData00* <
.00< =
Empleado00= E
.00E F
TieneRol00F N
(00N O
ActorSettings00O \
.00\ ]
Default00] d
.00d e
IdRolCajero00e p
)00p q
;00q r
var11 %
tieneRolVendedorDeNegocio11 )
=11* +
profileSessionData11, >
.11> ?
Empleado11? G
.11G H
TieneRol11H P
(11P Q
ActorSettings11Q ^
.11^ _
Default11_ f
.11f g
IdRolVendedor11g t
)11t u
;11u v
var22 
data22 
=22 
new22 
PrincipalPedidoData22 .
(22. /
)22/ 0
{33 
FechaActual44 
=44 
DateTimeUtil44 *
.44* +
FechaActual44+ 6
(446 7
)447 8
,448 9#
TieneRolCajeroDeNegocio55 '
=55( )#
tieneRolCajeroDeNegocio55* A
,55A B%
TieneRolVendedorDeNegocio66 )
=66* +%
tieneRolVendedorDeNegocio66, E
,66E F!
ComprobanteParaPedido77 %
=77& '
(77( )
int77) ,
)77, -
TipoComprobantePara77- @
.77@ A
Pedido77A G
,77G H
}88 
;88 
return99 
data99 
;99 
}:: 	
public;; 
void;; *
CalcularDatosDePedidoIntegrada;; 2
(;;2 3
DatosVentaIntegrada;;3 F 
datosPedidoIntegrada;;G [
,;;[ \"
UserProfileSessionData;;] s
profileSessionData	;;t Ü
)
;;Ü á
{<< 	 
datosPedidoIntegrada==  
.==  !
FechaRegistro==! .
===/ 0
DateTimeUtil==1 =
.=== >
FechaActual==> I
(==I J
)==J K
;==K L 
datosPedidoIntegrada>>  
.>>  !
Orden>>! &
.>>& '
FechaEmision>>' 3
=>>4 5 
datosPedidoIntegrada>>6 J
.>>J K
FechaRegistro>>K X
;>>X Y 
datosPedidoIntegrada??  
.??  !
Orden??! &
.??& '
Observacion??' 2
=??3 4
string??5 ;
.??; <
IsNullOrEmpty??< I
(??I J 
datosPedidoIntegrada??J ^
.??^ _
Orden??_ d
.??d e
Observacion??e p
)??p q
???r s
$str??t }
:??~ 
Regex
??Ä Ö
.
??Ö Ü
Replace
??Ü ç
(
??ç é"
datosPedidoIntegrada
??é ¢
.
??¢ £
Orden
??£ ®
.
??® ©
Observacion
??© ¥
,
??¥ µ
$str
??∂ º
,
??º Ω
$str
??æ ¡
)
??¡ ¬
;
??¬ √ 
datosPedidoIntegrada@@  
.@@  !
Orden@@! &
.@@& '
PuntoDeVenta@@' 3
=@@4 5
new@@6 9
ItemGenerico@@: F
(@@F G
profileSessionData@@G Y
.@@Y Z(
CentroDeAtencionSeleccionado@@Z v
.@@v w
Id@@w y
)@@y z
;@@z { 
datosPedidoIntegradaAA  
.AA  !
OrdenAA! &
.AA& '
VendedorAA' /
=AA0 1
newAA2 5
ItemGenericoAA6 B
(AAB C
profileSessionDataAAC U
.AAU V
EmpleadoAAV ^
.AA^ _
IdAA_ a
)AAa b
;AAb c
}BB 	
publicCC 
OperationResultCC 
AgregarPedidoCC ,
(CC, -
DatosVentaIntegradaCC- @ 
datosPedidoIntegradaCCA U
,CCU V"
UserProfileSessionDataCCW m
profileSessionData	CCn Ä
)
CCÄ Å
{DD 	
tryEE 
{FF 
OperationResultGG 
resultGG  &
;GG& '
varII 
detallesDePedidoII $
=II% &
ResolverDetalleII' 6
(II6 7 
datosPedidoIntegradaII7 K
.IIK L
OrdenIIL Q
.IIQ R
DetallesIIR Z
,IIZ [ 
datosPedidoIntegradaII\ p
)IIp q
;IIq r
varJJ  
detalles_transaccionJJ (
=JJ) *
detallesDePedidoJJ+ ;
.JJ; <
SelectJJ< B
(JJB C
dJJC D
=>JJE G
dJJH I
.JJI J
DetalleTransaccionJJJ \
(JJ\ ]
)JJ] ^
)JJ^ _
.JJ_ `
ToListJJ` f
(JJf g
)JJg h
;JJh i*
CalcularDatosDePedidoIntegradaKK .
(KK. / 
datosPedidoIntegradaKK/ C
,KKC D
profileSessionDataKKE W
)KKW X
;KKX Y
TransaccionMM 
pedidoMM "
=MM# $
GenerarPedidoMM% 2
(MM2 3 
datosPedidoIntegradaMM3 G
,MMG H
profileSessionDataMMI [
)MM[ \
;MM\ ]
pedidoNN 
.NN 
ComprobanteNN "
=NN# $1
%GenerarComprobantePropioAutonumerableNN% J
(NNJ K 
datosPedidoIntegradaNNK _
.NN_ `
OrdenNN` e
.NNe f
ComprobanteNNf q
.NNq r
SerieNNr w
.NNw x
IdNNx z
)NNz {
;NN{ |
TransaccionPP 
ordenDePedidoPP )
=PP* + 
GenerarOrdenDePedidoPP, @
(PP@ A
pedidoPPA G
,PPG H
profileSessionDataPPI [
,PP[ \ 
datosPedidoIntegradaPP] q
)PPq r
;PPr s
ordenDePedidoQQ 
.QQ 
ComprobanteQQ )
=QQ* +
pedidoQQ, 2
.QQ2 3
ComprobanteQQ3 >
;QQ> ?
Estado_transaccionSS "
estadoDeLaOrdenSS# 2
=SS3 4
newSS5 8
Estado_transaccionSS9 K
(SSK L
profileSessionDataSSL ^
.SS^ _
EmpleadoSS_ g
.SSg h
IdSSh j
,SSj k
MaestroSettingsSSl {
.SS{ |
Default	SS| É
.
SSÉ Ñ.
 IdDetalleMaestroEstadoRegistrado
SSÑ §
,
SS§ •"
datosPedidoIntegrada
SS¶ ∫
.
SS∫ ª
Orden
SSª ¿
.
SS¿ ¡
FechaEmision
SS¡ Õ
,
SSÕ Œ
$str
SSœ è
)
SSè ê
;
SSê ë
ordenDePedidoTT 
.TT 
Estado_transaccionTT 0
.TT0 1
AddTT1 4
(TT4 5
estadoDeLaOrdenTT5 D
)TTD E
;TTE F
pedidoVV 
.VV 
Transaccion1VV #
.VV# $
AddVV$ '
(VV' (
ordenDePedidoVV( 5
)VV5 6
;VV6 7
resultXX 
=XX #
_repositorioTransaccionXX 0
.XX0 1
CrearTransaccionXX1 A
(XXA B
pedidoXXB H
)XXH I
;XXI J
resultYY 
.YY 
informationYY "
=YY# $
ordenDePedidoYY% 2
.YY2 3
idYY3 5
;YY5 6
resultZZ 
.ZZ 
objetoZZ 
=ZZ 
newZZ  #
OrdenDePedidoZZ$ 1
(ZZ1 2
ordenDePedidoZZ2 ?
)ZZ? @
;ZZ@ A
return[[ 
result[[ 
;[[ 
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* H
,__H I
e__J K
)__K L
;__L M
}`` 
}aa 	
publiccc 
OperationResultcc 
InvalidarPedidocc .
(cc. /
intcc/ 2
IdOrdenPedidocc3 @
,cc@ A
stringccB H
ObservacionccI T
,ccT U"
UserProfileSessionDataccV l
profileSessionDataccm 
)	cc Ä
{dd 	
tryee 
{ff 
OperationResultgg 
resultgg  &
=gg' (
newgg) ,
OperationResultgg- <
(gg< =
)gg= >
;gg> ?
Estado_transaccionhh "%
estadoDeLaOrdenInvalidadohh# <
=hh= >
newhh? B
Estado_transaccionhhC U
(hhU V
IdOrdenPedidohhV c
,hhc d
profileSessionDatahhe w
.hhw x
Empleado	hhx Ä
.
hhÄ Å
Id
hhÅ É
,
hhÉ Ñ
MaestroSettings
hhÖ î
.
hhî ï
Default
hhï ú
.
hhú ù.
 IdDetalleMaestroEstadoInvalidado
hhù Ω
,
hhΩ æ
DateTimeUtil
hhø À
.
hhÀ Ã
FechaActual
hhÃ ◊
(
hh◊ ÿ
)
hhÿ Ÿ
,
hhŸ ⁄
Observacion
hh€ Ê
)
hhÊ Á
;
hhÁ Ë#
_repositorioTransaccionii '
.ii' ()
CrearEstadoDeTransaccionAhoraii( E
(iiE F%
estadoDeLaOrdenInvalidadoiiF _
)ii_ `
;ii` a
returnjj 
resultjj 
;jj 
}kk 
catchll 
(ll 
	Exceptionll 
exll 
)ll  
{mm 
thrownn 
newnn 
LogicaExceptionnn )
(nn) *
$strnn* H
,nnH I
exnnJ L
)nnL M
;nnM N
}oo 
}pp 	
publicss 
Transaccionss  
GenerarOrdenDePedidoss /
(ss/ 0
Transaccionss0 ;
pedidoss< B
,ssB C"
UserProfileSessionDatassD Z
profileSessionDatass[ m
,ssm n 
DatosVentaIntegrada	sso Ç
pedidoP
ssÉ ä
)
ssä ã
{tt 	
Transaccionxx 
ordenDePedidoxx %
=xx& '
newxx( +
Transaccionxx, 7
(xx7 8$
_codigosOperacion_Logicaxx8 P
.xxP Q1
%ObtenerSiguienteCodigoParaFacturacionxxQ v
(xxv w
pedidoxxw }
.xx} ~
codigo	xx~ Ñ
+
xxÖ Ü
$str
xxá ä
+
xxã å
Diccionario
xxç ò
.
xxò ô5
'MapeoTipoTransaccionVsCodigoDeOperacion
xxô ¿
.
xx¿ ¡
Single
xx¡ «
(
xx« »
mt
xx»  
=>
xxÀ Õ
mt
xxŒ –
.
xx– —
Key
xx— ‘
==
xx’ ◊
PedidoSettings
xxÿ Ê
.
xxÊ Á
Default
xxÁ Ó
.
xxÓ Ô*
IdTipoTransaccionOrdenPedido
xxÔ ã
)
xxã å
.
xxå ç
Value
xxç í
,
xxí ì
PedidoSettings
xxî ¢
.
xx¢ £
Default
xx£ ™
.
xx™ ´*
IdTipoTransaccionOrdenPedido
xx´ «
)
xx« »
,
xx» …
null
xx  Œ
,
xxŒ œ
pedidoP
xx– ◊
.
xx◊ ÿ
FechaRegistro
xxÿ Â
,
xxÂ Ê
PedidoSettings
xxÁ ı
.
xxı ˆ
Default
xxˆ ˝
.
xx˝ ˛*
IdTipoTransaccionOrdenPedido
xx˛ ö
,
xxö õ
pedido
xxú ¢
.
xx¢ £
id_unidad_negocio
xx£ ¥
,
xx¥ µ
true
xx∂ ∫
,
xx∫ ª
pedidoP
xxº √
.
xx√ ƒ
Orden
xxƒ …
.
xx…  
FechaEmision
xx  ÷
,
xx÷ ◊
pedidoP
xxÿ ﬂ
.
xxﬂ ‡
Orden
xx‡ Â
.
xxÂ Ê
FechaEmision
xxÊ Ú
,
xxÚ Û
pedidoP
xxÙ ˚
.
xx˚ ¸
Orden
xx¸ Å
.
xxÅ Ç
Observacion
xxÇ ç
,
xxç é
pedidoP
xxè ñ
.
xxñ ó
Orden
xxó ú
.
xxú ù
FechaEmision
xxù ©
,
xx© ™
pedidoP
xx´ ≤
.
xx≤ ≥
Orden
xx≥ ∏
.
xx∏ π
Vendedor
xxπ ¡
.
xx¡ ¬
Id
xx¬ ƒ
,
xxƒ ≈
pedido
xx∆ Ã
.
xxÃ Õ
importe_total
xxÕ ⁄
,
xx⁄ €
pedidoP
xx‹ „
.
xx„ ‰
Orden
xx‰ È
.
xxÈ Í
PuntoDeVenta
xxÍ ˆ
.
xxˆ ˜
Id
xx˜ ˘
,
xx˘ ˙
pedido
xx˚ Å
.
xxÅ Ç
	id_moneda
xxÇ ã
,
xxã å
pedido
xxç ì
.
xxì î
tipo_cambio
xxî ü
,
xxü †
null
xx° •
,
xx• ¶
pedidoP
xxß Æ
.
xxÆ Ø
Orden
xxØ ¥
.
xx¥ µ
Cliente
xxµ º
.
xxº Ω
Id
xxΩ ø
,
xxø ¿
pedidoP
xx¡ »
.
xx» …
Orden
xx… Œ
.
xxŒ œ
DescuentoGlobal
xxœ ﬁ
,
xxﬁ ﬂ
pedidoP
xx‡ Á
.
xxÁ Ë
Orden
xxË Ì
.
xxÌ Ó
DescuentoPorItem
xxÓ ˛
,
xx˛ ˇ
pedidoP
xxÄ á
.
xxá à
Orden
xxà ç
.
xxç é
Anticipo
xxé ñ
,
xxñ ó
pedidoP
xxò ü
.
xxü †
Orden
xx† •
.
xx• ¶
Gravada
xx¶ ≠
,
xx≠ Æ
pedidoP
xxØ ∂
.
xx∂ ∑
Orden
xx∑ º
.
xxº Ω
	Exonerada
xxΩ ∆
,
xx∆ «
pedidoP
xx» œ
.
xxœ –
Orden
xx– ’
.
xx’ ÷
Inafecta
xx÷ ﬁ
,
xxﬁ ﬂ
pedidoP
xx‡ Á
.
xxÁ Ë
Orden
xxË Ì
.
xxÌ Ó
Gratuita
xxÓ ˆ
,
xxˆ ˜
pedidoP
xx¯ ˇ
.
xxˇ Ä
Orden
xxÄ Ö
.
xxÖ Ü
Igv
xxÜ â
,
xxâ ä
pedidoP
xxã í
.
xxí ì
Orden
xxì ò
.
xxò ô
Isc
xxô ú
,
xxú ù
pedidoP
xxû •
.
xx• ¶
Orden
xx¶ ´
.
xx´ ¨
Icbper
xx¨ ≤
,
xx≤ ≥
pedidoP
xx¥ ª
.
xxª º
Orden
xxº ¡
.
xx¡ ¬
OtrosCargos
xx¬ Õ
,
xxÕ Œ
pedidoP
xxœ ÷
.
xx÷ ◊
Orden
xx◊ ‹
.
xx‹ ›
OtrosTributos
xx› Í
)
xxÍ Î
;
xxÎ Ï
ordenDePedidozz 
.zz 
AgregarDetalleszz )
(zz) *
pedidoPzz* 1
.zz1 2
Ordenzz2 7
.zz7 8
DetallesDeVentazz8 G
(zzG H
)zzH I
)zzI J
;zzJ K
ordenDePedido|| 
.|| 
enum1|| 
=||  !
pedidoP||" )
.||) *
Orden||* /
.||/ 0"
HayBienesEnLosDetalles||0 F
(||F G
)||G H
?||I J
(||K L
PedidoSettings||L Z
.||Z [
Default||[ b
.||b c*
MostrarSeccionEntregaEnPedido	||c Ä
?
||Å Ç
(
||É Ñ
pedidoP
||Ñ ã
.
||ã å
MovimientoAlmacen
||å ù
.
||ù û
EntregaDiferida
||û ≠
?
||Æ Ø
(
||∞ ±
int
||± ¥
)
||¥ µ%
IndicadorImpactoAlmacen
||µ Ã
.
||Ã Õ
Diferida
||Õ ’
:
||÷ ◊
(
||ÿ Ÿ
int
||Ÿ ‹
)
||‹ ›%
IndicadorImpactoAlmacen
||› Ù
.
||Ù ı
	Inmediata
||ı ˛
)
||˛ ˇ
:
||Ä Å
(
||Ç É
int
||É Ü
)
||Ü á%
IndicadorImpactoAlmacen
||á û
.
||û ü
	Inmediata
||ü ®
)
||® ©
:
||™ ´
(
||¨ ≠
int
||≠ ∞
)
||∞ ±%
IndicadorImpactoAlmacen
||± »
.
||» …
NoImpactaNoBienes
||… ⁄
;
||⁄ €
if~~ 
(~~ 
!~~ 
String~~ 
.~~ 
IsNullOrEmpty~~ %
(~~% &
pedidoP~~& -
.~~- .
Orden~~. 3
.~~3 4
Cliente~~4 ;
.~~; <
Alias~~< A
)~~A B
&&~~C E
!~~F G
String~~G M
.~~M N
IsNullOrWhiteSpace~~N `
(~~` a
pedidoP~~a h
.~~h i
Orden~~i n
.~~n o
Cliente~~o v
.~~v w
Alias~~w |
)~~| }
&&	~~~ Ä
pedidoP
~~Å à
.
~~à â
Orden
~~â é
.
~~é è
Cliente
~~è ñ
.
~~ñ ó
Id
~~ó ô
==
~~ö ú
ActorSettings
~~ù ™
.
~~™ ´
Default
~~´ ≤
.
~~≤ ≥
IdClienteGenerico
~~≥ ƒ
)
~~ƒ ≈
{ 
ordenDePedido
ÄÄ 
.
ÄÄ #
Parametro_transaccion
ÄÄ 3
.
ÄÄ3 4
Add
ÄÄ4 7
(
ÄÄ7 8
new
ÄÄ8 ;#
Parametro_transaccion
ÄÄ< Q
(
ÄÄQ R
MaestroSettings
ÄÄR a
.
ÄÄa b
Default
ÄÄb i
.
ÄÄi j4
%IdDetalleMaestroParametroAliasClienteÄÄj è
,ÄÄè ê
pedidoPÄÄë ò
.ÄÄò ô
OrdenÄÄô û
.ÄÄû ü
ClienteÄÄü ¶
.ÄÄ¶ ß
AliasÄÄß ¨
)ÄÄ¨ ≠
)ÄÄ≠ Æ
;ÄÄÆ Ø
}
ÅÅ 
ordenDePedido
ÇÇ 
.
ÇÇ #
Parametro_transaccion
ÇÇ /
.
ÇÇ/ 0
Add
ÇÇ0 3
(
ÇÇ3 4
new
ÇÇ4 7#
Parametro_transaccion
ÇÇ8 M
(
ÇÇM N
MaestroSettings
ÇÇN ]
.
ÇÇ] ^
Default
ÇÇ^ e
.
ÇÇe f?
0IdDetalleMaestroParametroIdTipoComprobanteEmitirÇÇf ñ
,ÇÇñ ó
pedidoPÇÇò ü
.ÇÇü †
OrdenÇÇ† •
.ÇÇ• ¶(
IdTipoComprobanteaEmitirÇÇ¶ æ
.ÇÇæ ø
ToStringÇÇø «
(ÇÇ« »
)ÇÇ» …
)ÇÇ…  
)ÇÇ  À
;ÇÇÀ Ã
if
ÑÑ 
(
ÑÑ 
pedidoP
ÑÑ 
.
ÑÑ 
Orden
ÑÑ 
.
ÑÑ 
Icbper
ÑÑ $
>
ÑÑ$ %
$num
ÑÑ% &
)
ÑÑ& '
{
ÖÖ 
ordenDePedido
ÜÜ 
.
ÜÜ #
Parametro_transaccion
ÜÜ 3
.
ÜÜ3 4
Add
ÜÜ4 7
(
ÜÜ7 8
new
ÜÜ8 ;#
Parametro_transaccion
ÜÜ< Q
(
ÜÜQ R
MaestroSettings
ÜÜR a
.
ÜÜa b
Default
ÜÜb i
.
ÜÜi j>
/IdDetalleMaestroParametroNumeroBolsasDePlasticoÜÜj ô
,ÜÜô ö
pedidoPÜÜõ ¢
.ÜÜ¢ £
OrdenÜÜ£ ®
.ÜÜ® ©&
NumeroBolsasDePlasticoÜÜ© ø
.ÜÜø ¿
ToStringÜÜ¿ »
(ÜÜ» …
)ÜÜ…  
)ÜÜ  À
)ÜÜÀ Ã
;ÜÜÃ Õ
ordenDePedido
áá 
.
áá #
Parametro_transaccion
áá 3
.
áá3 4
Add
áá4 7
(
áá7 8
new
áá8 ;#
Parametro_transaccion
áá< Q
(
ááQ R
MaestroSettings
ááR a
.
ááa b
Default
ááb i
.
áái j.
IdDetalleMaestroParametroIcbperááj â
,ááâ ä
pedidoPááã í
.ááí ì
Ordenááì ò
.ááò ô
Icbperááô ü
.ááü †
ToStringáá† ®
(áá® ©
)áá© ™
)áá™ ´
)áá´ ¨
;áá¨ ≠
}
àà 
if
ââ 
(
ââ 
pedidoP
ââ 
.
ââ 
Orden
ââ 
.
ââ 
UnificarDetalles
ââ .
)
ââ. /
{
ää 
ordenDePedido
ãã 
.
ãã #
Parametro_transaccion
ãã 3
.
ãã3 4
Add
ãã4 7
(
ãã7 8
new
ãã8 ;#
Parametro_transaccion
ãã< Q
(
ããQ R
MaestroSettings
ããR a
.
ããa b
Default
ããb i
.
ããi j8
)IdDetalleMaestroParametroDetalleUnificadoããj ì
,ããì î
VentasSettingsããï £
.ãã£ §
Defaultãã§ ´
.ãã´ ¨4
$ActivarDetalleUnificadoPersonalizadoãã¨ –
?ãã— “
pedidoPãã” ⁄
.ãã⁄ €
Ordenãã€ ‡
.ãã‡ ·%
ValorDetalleUnificadoãã· ˆ
:ãã˜ ¯"
AplicacionSettingsãã˘ ã
.ããã å
Defaultããå ì
.ããì î%
ValorDetalleUnificadoããî ©
)ãã© ™
)ãã™ ´
;ãã´ ¨
}
åå 
return
çç 
ordenDePedido
çç  
;
çç  !
}
éé 	
public
èè 
Comprobante
èè 3
%GenerarComprobantePropioAutonumerable
èè @
(
èè@ A
int
èèA D 
idSerieComprobante
èèE W
)
èèW X
{
êê 	
Serie_comprobante
ëë 
serie
ëë #
=
ëë$ %%
_repositorioTransaccion
ëë& =
.
ëë= >'
ObtenerSerieDeComprobante
ëë> W
(
ëëW X 
idSerieComprobante
ëëX j
)
ëëj k
;
ëëk l
Comprobante
íí 
comprobante
íí #
=
íí$ %
new
íí& )
Comprobante
íí* 5
(
íí5 6
serie
íí6 ;
.
íí; <!
id_tipo_comprobante
íí< O
,
ííO P
serie
ííQ V
.
ííV W
id
ííW Y
,
ííY Z
serie
íí[ `
.
íí` a
proximo_numero
íía o
,
íío p
true
ííq u
,
ííu v
serie
ííw |
.
íí| }
numeroíí} É
)ííÉ Ñ
;ííÑ Ö
serie
ìì 
.
ìì 
proximo_numero
ìì  
++
ìì  "
;
ìì" #%
_repositorioTransaccion
îî #
.
îî# $'
MarcarSerieComoModificada
îî$ =
(
îî= >
serie
îî> C
)
îîC D
;
îîD E
return
ïï 
comprobante
ïï 
;
ïï 
}
ññ 	
public
òò 
List
òò 
<
òò  
DetalleDeOperacion
òò &
>
òò& '
ResolverDetalle
òò( 7
(
òò7 8
List
òò8 <
<
òò< = 
DetalleDeOperacion
òò= O
>
òòO P
detalles
òòQ Y
,
òòY Z!
DatosVentaIntegrada
òò[ n"
datosVentaIntegradaòòo Ç
)òòÇ É
{
ôô 	
if
öö 
(
öö !
datosVentaIntegrada
öö #
.
öö# $
Orden
öö$ )
.
öö) *
Flete
öö* /
>
öö0 1
$num
öö2 3
)
öö3 4
{
õõ 
detalles
úú 
.
úú 
Add
úú 
(
úú 
new
úú   
DetalleDeOperacion
úú! 3
(
úú3 4
ConceptoSettings
úú4 D
.
úúD E
Default
úúE L
.
úúL M$
IdConceptoNegocioFlete
úúM c
,
úúc d
$num
úúe f
,
úúf g!
datosVentaIntegrada
úúh {
.
úú{ |
Ordenúú| Å
.úúÅ Ç
FleteúúÇ á
,úúá à#
datosVentaIntegradaúúâ ú
.úúú ù
Ordenúúù ¢
.úú¢ £
Fleteúú£ ®
,úú® ©
$numúú™ ´
,úú´ ¨
$numúú≠ Æ
,úúÆ Ø
$numúú∞ ±
,úú± ≤
nullúú≥ ∑
,úú∑ ∏
nullúúπ Ω
,úúΩ æ
nullúúø √
,úú√ ƒ
nullúú≈ …
,úú…  
falseúúÀ –
,úú– —
VentasSettingsúú“ ‡
.úú‡ ·
Defaultúú· Ë
.úúË È6
&MascaraDeCalculoDeNingunValorCalculadoúúÈ è
,úúè ê
nullúúë ï
)úúï ñ
)úúñ ó
;úúó ò
}
ùù 
foreach
ûû 
(
ûû 
var
ûû 
item
ûû 
in
ûû  
detalles
ûû! )
)
ûû) *
{
üü 
if
†† 
(
†† 
item
†† 
.
†† 
Cantidad
†† !
<=
††" $
$num
††% &
)
††& '
{
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ -
(
¢¢- .
$str
¢¢. }
)
¢¢} ~
;
¢¢~ 
}
££ 
if
§§ 
(
§§ 
item
§§ 
.
§§ 
Importe
§§  
<
§§! "
$num
§§# $
)
§§$ %
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ -
(
¶¶- .
$str
¶¶. b
)
¶¶b c
;
¶¶c d
}
ßß 
if
®® 
(
®® 0
"VerificarCalculadoMascaraDeCalculo
®® 6
(
®®6 7
item
®®7 ;
.
®®; <
MascaraDeCalculo
®®< L
,
®®L M+
ElementoDeCalculoEnVentasEnum
®®N k
.
®®k l
Cantidad
®®l t
)
®®t u
)
®®u v
{
©© 
item
™™ 
.
™™ 
Cantidad
™™ !
=
™™" #
item
™™$ (
.
™™( )
Importe
™™) 0
/
™™1 2
item
™™3 7
.
™™7 8
PrecioUnitario
™™8 F
;
™™F G
}
´´ 
if
¨¨ 
(
¨¨ 0
"VerificarCalculadoMascaraDeCalculo
¨¨ 6
(
¨¨6 7
item
¨¨7 ;
.
¨¨; <
MascaraDeCalculo
¨¨< L
,
¨¨L M+
ElementoDeCalculoEnVentasEnum
¨¨N k
.
¨¨k l
PrecioUnitario
¨¨l z
)
¨¨z {
)
¨¨{ |
{
≠≠ 
item
ÆÆ 
.
ÆÆ 
PrecioUnitario
ÆÆ '
=
ÆÆ( )
item
ÆÆ* .
.
ÆÆ. /
Importe
ÆÆ/ 6
/
ÆÆ7 8
item
ÆÆ9 =
.
ÆÆ= >
Cantidad
ÆÆ> F
;
ÆÆF G
}
ØØ 
if
∞∞ 
(
∞∞ 0
"VerificarCalculadoMascaraDeCalculo
∞∞ 6
(
∞∞6 7
item
∞∞7 ;
.
∞∞; <
MascaraDeCalculo
∞∞< L
,
∞∞L M+
ElementoDeCalculoEnVentasEnum
∞∞N k
.
∞∞k l
Importe
∞∞l s
)
∞∞s t
)
∞∞t u
{
±± 
item
≤≤ 
.
≤≤ 
Importe
≤≤  
=
≤≤! "
Math
≤≤# '
.
≤≤' (
Round
≤≤( -
(
≤≤- .
item
≤≤. 2
.
≤≤2 3
Cantidad
≤≤3 ;
*
≤≤< =
item
≤≤> B
.
≤≤B C
PrecioUnitario
≤≤C Q
,
≤≤Q R
$num
≤≤S T
)
≤≤T U
;
≤≤U V
}
≥≥ 
if
¥¥ 
(
¥¥ !
datosVentaIntegrada
¥¥ '
.
¥¥' (
Orden
¥¥( -
.
¥¥- .
VentaGravaIgv
¥¥. ;
)
¥¥; <
{
µµ 
item
∂∂ 
.
∂∂ 
Igv
∂∂ 
=
∂∂ 
Math
∂∂ #
.
∂∂# $
Round
∂∂$ )
(
∂∂) *
item
∂∂* .
.
∂∂. /
Importe
∂∂/ 6
-
∂∂7 8
(
∂∂9 :
item
∂∂: >
.
∂∂> ?
Importe
∂∂? F
/
∂∂G H
(
∂∂I J
$num
∂∂J K
+
∂∂L M!
TransaccionSettings
∂∂N a
.
∂∂a b
Default
∂∂b i
.
∂∂i j
TasaIGV
∂∂j q
)
∂∂q r
)
∂∂r s
,
∂∂s t
$num
∂∂u v
)
∂∂v w
;
∂∂w x
}
∑∑ 
}
∏∏ 
return
ππ 
detalles
ππ 
;
ππ 
}
∫∫ 	
private
ºº 
bool
ºº 0
"VerificarCalculadoMascaraDeCalculo
ºº 7
(
ºº7 8
string
ºº8 >
mascaraDeCalculo
ºº? O
,
ººO P+
ElementoDeCalculoEnVentasEnum
ººQ n
orden
ººo t
)
ººt u
{
ΩΩ 	
List
ææ 
<
ææ 
int
ææ 
>
ææ #
mascaraDeCalculoArray
ææ +
=
ææ, -
mascaraDeCalculo
ææ. >
.
ææ> ?
Select
ææ? E
(
ææE F
digito
ææF L
=>
ææM O
int
ææP S
.
ææS T
Parse
ææT Y
(
ææY Z
digito
ææZ `
.
ææ` a
ToString
ææa i
(
ææi j
)
ææj k
)
ææk l
)
ææl m
.
ææm n
ToList
ææn t
(
ææt u
)
ææu v
;
ææv w
return
øø 
!
øø 
Convert
øø 
.
øø 
	ToBoolean
øø %
(
øø% &#
mascaraDeCalculoArray
øø& ;
[
øø; <
(
øø< =
int
øø= @
)
øø@ A
orden
øøA F
]
øøF G
)
øøG H
;
øøH I
}
¿¿ 	
private
¡¡ 
Transaccion
¡¡ 
GenerarPedido
¡¡ )
(
¡¡) *!
DatosVentaIntegrada
¡¡* =
pedido
¡¡> D
,
¡¡D E$
UserProfileSessionData
¡¡F \ 
profileSessionData
¡¡] o
)
¡¡o p
{
¬¬ 	
try
√√ 
{
ƒƒ 
int
≈≈ 
idMoneda
≈≈ 
=
≈≈ 
MaestroSettings
≈≈ .
.
≈≈. /
Default
≈≈/ 6
.
≈≈6 7)
IdDetalleMaestroMonedaSoles
≈≈7 R
;
≈≈R S
int
∆∆ 
IdUnidadNegocio
∆∆ #
=
∆∆$ %
MaestroSettings
∆∆& 5
.
∆∆5 6
Default
∆∆6 =
.
∆∆= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
∆∆> h
;
∆∆h i
decimal
«« 

tipoCambio
«« "
=
««# $ 
profileSessionData
««% 7
.
««7 8
TipoDeCambio
««8 D
.
««D E
ValorCompra
««E P
;
««P Q
_permisos_logica
……  
.
……  !
ValidarAccion
……! .
(
……. / 
profileSessionData
……/ A
.
……A B
Empleado
……B J
.
……J K
Id
……K M
,
……M N
MaestroSettings
……O ^
.
……^ _
Default
……_ f
.
……f g.
IdDetalleMaestroAccionRegistrar……g Ü
,……Ü á
PedidoSettings……à ñ
.……ñ ó
Default……ó û
.……û ü,
IdTipoTransaccionOrdenPedido……ü ª
,……ª º
IdUnidadNegocio……Ω Ã
)……Ã Õ
;……Õ Œ
	Operacion
ÀÀ 
operacionGenerica
ÀÀ +
=
ÀÀ, -
new
ÀÀ. 1
	Operacion
ÀÀ2 ;
(
ÀÀ; <%
_repositorioTransaccion
ÀÀ< S
.
ÀÀS T&
ObtenerUltimaTransaccion
ÀÀT l
(
ÀÀl m"
TransaccionSettingsÀÀm Ä
.ÀÀÄ Å
DefaultÀÀÅ à
.ÀÀà â*
IdTipoTransaccionOperacionÀÀâ £
)ÀÀ£ §
)ÀÀ§ •
;ÀÀ• ¶
string
ÕÕ 
codigo
ÕÕ 
=
ÕÕ &
_codigosOperacion_Logica
ÕÕ  8
.
ÕÕ8 93
%ObtenerSiguienteCodigoParaFacturacion
ÕÕ9 ^
(
ÕÕ^ _
Diccionario
ÕÕ_ j
.
ÕÕj k6
'MapeoTipoTransaccionVsCodigoDeOperacionÕÕk í
.ÕÕí ì
SingleÕÕì ô
(ÕÕô ö
mÕÕö õ
=>ÕÕú û
mÕÕü †
.ÕÕ† °
KeyÕÕ° §
==ÕÕ• ß
PedidoSettingsÕÕ® ∂
.ÕÕ∂ ∑
DefaultÕÕ∑ æ
.ÕÕæ ø'
IdTipoTransaccionPedidoÕÕø ÷
)ÕÕ÷ ◊
.ÕÕ◊ ÿ
ValueÕÕÿ ›
,ÕÕ› ﬁ
PedidoSettingsÕÕﬂ Ì
.ÕÕÌ Ó
DefaultÕÕÓ ı
.ÕÕı ˆ'
IdTipoTransaccionPedidoÕÕˆ ç
)ÕÕç é
;ÕÕé è
Transaccion
œœ 
pedidoTransaccion
œœ -
=
œœ. /
new
œœ0 3
Transaccion
œœ4 ?
(
œœ? @
codigo
œœ@ F
,
œœF G
operacionGenerica
œœH Y
.
œœY Z
Id
œœZ \
,
œœ\ ]
pedido
œœ^ d
.
œœd e
FechaRegistro
œœe r
,
œœr s
PedidoSettingsœœt Ç
.œœÇ É
DefaultœœÉ ä
.œœä ã'
IdTipoTransaccionPedidoœœã ¢
,œœ¢ £
IdUnidadNegocioœœ§ ≥
,œœ≥ ¥
trueœœµ π
,œœπ ∫
pedidoœœª ¡
.œœ¡ ¬
Ordenœœ¬ «
.œœ« »
FechaEmisionœœ» ‘
,œœ‘ ’
pedidoœœ÷ ‹
.œœ‹ ›
Ordenœœ› ‚
.œœ‚ „
FechaEmisionœœ„ Ô
,œœÔ 
pedidoœœÒ ˜
.œœ˜ ¯
Ordenœœ¯ ˝
.œœ˝ ˛
Observacionœœ˛ â
,œœâ ä
pedidoœœã ë
.œœë í
Ordenœœí ó
.œœó ò
FechaEmisionœœò §
,œœ§ •"
profileSessionDataœœ¶ ∏
.œœ∏ π
Empleadoœœπ ¡
.œœ¡ ¬
Idœœ¬ ƒ
,œœƒ ≈
pedidoœœ∆ Ã
.œœÃ Õ
OrdenœœÕ “
.œœ“ ”
ImporteTotalœœ” ﬂ
,œœﬂ ‡"
profileSessionDataœœ· Û
.œœÛ Ù.
IdCentroDeAtencionSeleccionadoœœÙ í
,œœí ì
idMonedaœœî ú
,œœú ù

tipoCambioœœû ®
,œœ® ©
nullœœ™ Æ
,œœÆ Ø
pedidoœœ∞ ∂
.œœ∂ ∑
Ordenœœ∑ º
.œœº Ω
ClienteœœΩ ƒ
.œœƒ ≈
Idœœ≈ «
)œœ« »
;œœ» …
return
–– 
pedidoTransaccion
–– (
;
––( )
}
—— 
catch
““ 
(
““ 
	Exception
““ 
ex
““ 
)
““  
{
”” 
throw
‘‘ 
new
‘‘ 
LogicaException
‘‘ )
(
‘‘) *
$str
‘‘* O
,
‘‘O P
ex
‘‘Q S
)
‘‘S T
;
‘‘T U
}
’’ 
}
÷÷ 	
public
ÿÿ 
List
ÿÿ 
<
ÿÿ  
ResumenOrdenPedido
ÿÿ &
>
ÿÿ& '$
ObtenerOrdenesDePedido
ÿÿ( >
(
ÿÿ> ?
DateTime
ÿÿ? G

FechaDesde
ÿÿH R
,
ÿÿR S
DateTime
ÿÿT \

FechaHasta
ÿÿ] g
)
ÿÿg h
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
int
‹‹ 
[
‹‹ 
]
‹‹ 
	idEstados
‹‹ 
=
‹‹  !
new
‹‹" %
int
‹‹& )
[
‹‹) *
]
‹‹* +
{
‹‹+ ,
MaestroSettings
‹‹, ;
.
‹‹; <
Default
‹‹< C
.
‹‹C D.
 IdDetalleMaestroEstadoRegistrado
‹‹D d
,
‹‹d e
MaestroSettings
‹‹f u
.
‹‹u v
Default
‹‹v }
.
‹‹} ~/
 IdDetalleMaestroEstadoInvalidado‹‹~ û
}
›› 
;
›› 
return
ﬁﬁ  
_repositorioPedido
ﬁﬁ )
.
ﬁﬁ) *#
ObtenerOrdenesPedidos
ﬁﬁ* ?
(
ﬁﬁ? @

FechaDesde
ﬁﬁ@ J
,
ﬁﬁJ K

FechaHasta
ﬁﬁL V
,
ﬁﬁV W
PedidoSettings
ﬁﬁX f
.
ﬁﬁf g
Default
ﬁﬁg n
.
ﬁﬁn o+
IdTipoTransaccionOrdenPedidoﬁﬁo ã
,ﬁﬁã å
	idEstadosﬁﬁç ñ
)ﬁﬁñ ó
.ﬁﬁó ò
OrderByﬁﬁò ü
(ﬁﬁü †
pﬁﬁ† °
=>ﬁﬁ° £
pﬁﬁ£ §
.ﬁﬁ§ •
EstaInvalidadoﬁﬁ• ≥
)ﬁﬁ≥ ¥
.ﬁﬁ¥ µ
ToListﬁﬁµ ª
(ﬁﬁª º
)ﬁﬁº Ω
;ﬁﬁΩ æ
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
ex
‡‡ 
)
‡‡  
{
·· 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ )
(
‚‚) *
$str
‚‚* G
,
‚‚G H
ex
‚‚I K
)
‚‚K L
;
‚‚L M
}
„„ 
}
‰‰ 	
public
ÊÊ !
DatosVentaIntegrada
ÊÊ ""
ObtenerOrdenDePedido
ÊÊ# 7
(
ÊÊ7 8
int
ÊÊ8 ;
idPedido
ÊÊ< D
)
ÊÊD E
{
ÁÁ 	
try
ËË 
{
ÈÈ !
DatosVentaIntegrada
ÍÍ #
PedidoEditar
ÍÍ$ 0
=
ÍÍ1 2
new
ÍÍ3 6!
DatosVentaIntegrada
ÍÍ7 J
(
ÍÍJ K
)
ÍÍK L
;
ÍÍL M
var
ÎÎ 
OrdenDePedido
ÎÎ !
=
ÎÎ" # 
_repositorioPedido
ÎÎ$ 6
.
ÎÎ6 7"
ObtenerOrdenDePedido
ÎÎ7 K
(
ÎÎK L
idPedido
ÎÎL T
)
ÎÎT U
;
ÎÎU V
PedidoEditar
ÏÏ 
.
ÏÏ 
Orden
ÏÏ "
=
ÏÏ# $
new
ÏÏ% (
DatosOrdenVenta
ÏÏ) 8
(
ÏÏ8 9
)
ÏÏ9 :
{
ÌÌ 
Id
ÓÓ 
=
ÓÓ 
OrdenDePedido
ÓÓ &
.
ÓÓ& '
id
ÓÓ' )
,
ÓÓ) *(
AplicarIGVCuandoEsAmazonia
ÔÔ .
=
ÔÔ/ 0
OrdenDePedido
ÔÔ1 >
.
ÔÔ> ?
importe8
ÔÔ? G
>
ÔÔH I
$num
ÔÔJ K
,
ÔÔK L
Cliente
 
=
 !
_actorNegocioLogica
 1
.
1 2(
ObtenerActorComercialPorId
2 L
(
L M
ActorSettings
M Z
.
Z [
Default
[ b
.
b c
IdRolCliente
c o
,
o p
OrdenDePedido
q ~
.
~ '
id_actor_negocio_externo ó
)ó ò
,ò ô
Comprobante
ÚÚ 
=
ÚÚ  !
new
ÚÚ" %#
ComprobanteDeNegocio_
ÚÚ& ;
{
ÛÛ 
Id
ÙÙ 
=
ÙÙ 
OrdenDePedido
ÙÙ *
.
ÙÙ* +
id_comprobante
ÙÙ+ 9
,
ÙÙ9 :
Tipo
ıı 
=
ıı 
new
ıı "
ItemGenerico
ıı# /
{
ˆˆ 
Id
˜˜ 
=
˜˜  
OrdenDePedido
˜˜! .
.
˜˜. /
Comprobante
˜˜/ :
.
˜˜: ;!
id_tipo_comprobante
˜˜; N
,
˜˜N O
Codigo
¯¯ "
=
¯¯# $
OrdenDePedido
¯¯% 2
.
¯¯2 3
Comprobante
¯¯3 >
.
¯¯> ?
Detalle_maestro
¯¯? N
.
¯¯N O
codigo
¯¯O U
,
¯¯U V
Nombre
˘˘ "
=
˘˘# $
OrdenDePedido
˘˘% 2
.
˘˘2 3
Comprobante
˘˘3 >
.
˘˘> ?
Detalle_maestro
˘˘? N
.
˘˘N O
nombre
˘˘O U
}
˙˙ 
,
˙˙ 
Serie
˚˚ 
=
˚˚ 
new
˚˚  #
SerieComprobante_
˚˚$ 5
{
¸¸ 
Id
˝˝ 
=
˝˝  
(
˝˝! "
int
˝˝" %
)
˝˝% &
OrdenDePedido
˝˝& 3
.
˝˝3 4
Comprobante
˝˝4 ?
.
˝˝? @"
id_serie_comprobante
˝˝@ T
,
˝˝T U
Nombre
˛˛ "
=
˛˛# $
OrdenDePedido
˛˛% 2
.
˛˛2 3
Comprobante
˛˛3 >
.
˛˛> ?
numero_serie
˛˛? K
,
˛˛K L
EsAutonumerica
ˇˇ *
=
ˇˇ+ ,
OrdenDePedido
ˇˇ- :
.
ˇˇ: ;
Comprobante
ˇˇ; F
.
ˇˇF G
Serie_comprobante
ˇˇG X
.
ˇˇX Y
es_autonumerable
ˇˇY i
}
ÄÄ 
,
ÄÄ 
}
ÅÅ 
,
ÅÅ 
Detalles
ÇÇ 
=
ÇÇ  
DetalleDeOperacion
ÇÇ 1
.
ÇÇ1 2
Convert
ÇÇ2 9
(
ÇÇ9 :
OrdenDePedido
ÇÇ: G
.
ÇÇG H!
Detalle_transaccion
ÇÇH [
.
ÇÇ[ \
Where
ÇÇ\ a
(
ÇÇa b
dp
ÇÇb d
=>
ÇÇd f
dp
ÇÇf h
.
ÇÇh i!
id_concepto_negocio
ÇÇi |
!=
ÇÇ}  
ConceptoSettingsÇÇÄ ê
.ÇÇê ë
DefaultÇÇë ò
.ÇÇò ô&
IdConceptoNegocioFleteÇÇô Ø
)ÇÇØ ∞
.ÇÇ∞ ±
ToListÇÇ± ∑
(ÇÇ∑ ∏
)ÇÇ∏ π
)ÇÇπ ∫
,ÇÇ∫ ª
Flete
ÉÉ 
=
ÉÉ 
OrdenDePedido
ÉÉ )
.
ÉÉ) *!
Detalle_transaccion
ÉÉ* =
.
ÉÉ= >
SingleOrDefault
ÉÉ> M
(
ÉÉM N
f
ÉÉN O
=>
ÉÉP R
f
ÉÉS T
.
ÉÉT U!
id_concepto_negocio
ÉÉU h
==
ÉÉi k
ConceptoSettings
ÉÉl |
.
ÉÉ| }
DefaultÉÉ} Ñ
.ÉÉÑ Ö&
IdConceptoNegocioFleteÉÉÖ õ
)ÉÉõ ú
==ÉÉù ü
nullÉÉ† §
?ÉÉ• ¶
$numÉÉß ®
:ÉÉ© ™
OrdenDePedidoÉÉ´ ∏
.ÉÉ∏ π#
Detalle_transaccionÉÉπ Ã
.ÉÉÃ Õ
SingleOrDefaultÉÉÕ ‹
(ÉÉ‹ ›
fÉÉ› ﬁ
=>ÉÉﬂ ·
fÉÉ‚ „
.ÉÉ„ ‰#
id_concepto_negocioÉÉ‰ ˜
==ÉÉ¯ ˙ 
ConceptoSettingsÉÉ˚ ã
.ÉÉã å
DefaultÉÉå ì
.ÉÉì î&
IdConceptoNegocioFleteÉÉî ™
)ÉÉ™ ´
.ÉÉ´ ¨
totalÉÉ¨ ±
,ÉÉ± ≤
Observacion
ÑÑ 
=
ÑÑ  !
OrdenDePedido
ÑÑ" /
.
ÑÑ/ 0

comentario
ÑÑ0 :
,
ÑÑ: ;
FechaEmision
ÖÖ  
=
ÖÖ! "
OrdenDePedido
ÖÖ# 0
.
ÖÖ0 1
fecha_inicio
ÖÖ1 =
,
ÖÖ= >
Total
ÜÜ 
=
ÜÜ 
OrdenDePedido
ÜÜ )
.
ÜÜ) *
importe_total
ÜÜ* 7
,
ÜÜ7 8
IdEstado
áá 
=
áá 
(
áá  
int
áá  #
)
áá# $
OrdenDePedido
áá$ 1
.
áá1 2
id_estado_actual
áá2 B
,
ááB C 
IdTransaccionPadre
àà &
=
àà' (
(
àà) *
int
àà* -
)
àà- .
OrdenDePedido
àà. ;
.
àà; <"
id_transaccion_padre
àà< P
,
ààP Q
}
ââ 
;
ââ 
var
ãã 
parametroAlias
ãã "
=
ãã# $
OrdenDePedido
ãã% 2
.
ãã2 3#
Parametro_transaccion
ãã3 H
.
ããH I
SingleOrDefault
ããI X
(
ããX Y
pcn
ããY \
=>
ãã] _
pcn
ãã` c
.
ããc d
id_parametro
ããd p
==
ããq s
MaestroSettingsããt É
.ããÉ Ñ
DefaultããÑ ã
.ããã å5
%IdDetalleMaestroParametroAliasClienteããå ±
)ãã± ≤
;ãã≤ ≥
PedidoEditar
åå 
.
åå 
Orden
åå "
.
åå" #
Cliente
åå# *
.
åå* +
Alias
åå+ 0
=
åå1 2
parametroAlias
åå3 A
!=
ååB D
null
ååE I
?
ååJ K
Convert
ååL S
.
ååS T
ToString
ååT \
(
åå\ ]
parametroAlias
åå] k
.
ååk l
valor
åål q
)
ååq r
:
åås t
$str
ååu w
;
ååw x
var
çç -
parametroTipoComprobanteAEmitir
çç 3
=
çç4 5
OrdenDePedido
çç6 C
.
ççC D#
Parametro_transaccion
ççD Y
.
ççY Z
SingleOrDefault
ççZ i
(
ççi j
pcn
ççj m
=>
ççn p
pcn
ççq t
.
ççt u
id_parametroççu Å
==ççÇ Ñ
MaestroSettingsççÖ î
.ççî ï
Defaultççï ú
.ççú ù@
0IdDetalleMaestroParametroIdTipoComprobanteEmitirççù Õ
)ççÕ Œ
;ççŒ œ
PedidoEditar
éé 
.
éé 
Orden
éé "
.
éé" #&
IdTipoComprobanteaEmitir
éé# ;
=
éé< =-
parametroTipoComprobanteAEmitir
éé> ]
!=
éé^ `
null
ééa e
?
ééf g
Convert
ééh o
.
ééo p
ToInt32
éép w
(
ééw x.
parametroTipoComprobanteAEmitirééx ó
.ééó ò
valorééò ù
)ééù û
:ééü †
$numéé° ¢
;éé¢ £
var
èè 
ParametroIcbper
èè #
=
èè$ %
OrdenDePedido
èè& 3
.
èè3 4#
Parametro_transaccion
èè4 I
.
èèI J
SingleOrDefault
èèJ Y
(
èèY Z
pcn
èèZ ]
=>
èè^ `
pcn
èèa d
.
èèd e
id_parametro
èèe q
==
èèr t
MaestroSettingsèèu Ñ
.èèÑ Ö
DefaultèèÖ å
.èèå ç/
IdDetalleMaestroParametroIcbperèèç ¨
)èè¨ ≠
;èè≠ Æ
PedidoEditar
êê 
.
êê 
Orden
êê "
.
êê" #
Icbper
êê# )
=
êê* +
ParametroIcbper
êê, ;
!=
êê< >
null
êê? C
?
êêD E
Convert
êêF M
.
êêM N
	ToDecimal
êêN W
(
êêW X
ParametroIcbper
êêX g
.
êêg h
valor
êêh m
)
êêm n
:
êêo p
$num
êêq r
;
êêr s
var
ëë '
ParametroDetalleUnificado
ëë -
=
ëë. /
OrdenDePedido
ëë0 =
.
ëë= >#
Parametro_transaccion
ëë> S
.
ëëS T
SingleOrDefault
ëëT c
(
ëëc d
pcn
ëëd g
=>
ëëh j
pcn
ëëk n
.
ëën o
id_parametro
ëëo {
==
ëë| ~
MaestroSettingsëë é
.ëëé è
Defaultëëè ñ
.ëëñ ó9
)IdDetalleMaestroParametroDetalleUnificadoëëó ¿
)ëë¿ ¡
;ëë¡ ¬
PedidoEditar
íí 
.
íí 
Orden
íí "
.
íí" #
UnificarDetalles
íí# 3
=
íí4 5'
ParametroDetalleUnificado
íí6 O
!=
ííP R
null
ííS W
?
ííX Y
true
ííZ ^
:
íí_ `
false
íía f
;
ííf g
PedidoEditar
ìì 
.
ìì 
Orden
ìì "
.
ìì" ##
ValorDetalleUnificado
ìì# 8
=
ìì9 :'
ParametroDetalleUnificado
ìì; T
!=
ììU W
null
ììX \
?
ìì] ^'
ParametroDetalleUnificado
ìì_ x
.
ììx y
valor
ììy ~
:ìì Ä
stringììÅ á
.ììá à
Emptyììà ç
;ììç é
PedidoEditar
ïï 
.
ïï 
MovimientoAlmacen
ïï .
=
ïï/ 0
new
ïï1 4&
DatosMovimientoDeAlmacen
ïï5 M
(
ïïM N
)
ïïN O
{
ññ 
EntregaDiferida
óó #
=
óó$ %
OrdenDePedido
óó& 3
.
óó3 4
enum1
óó4 9
==
óó: <
$num
óó= >
,
óó> ?
}
òò 
;
òò 
return
ôô 
PedidoEditar
ôô #
;
ôô# $
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
ex
õõ 
)
õõ  
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* F
,
ùùF G
ex
ùùH J
)
ùùJ K
;
ùùK L
}
ûû 
}
üü 	
public
°° 
OrdenDePedido
°° -
ObtenerOrdenDePedidoComprobante
°° <
(
°°< =
long
°°= A
idPedido
°°B J
)
°°J K
{
¢¢ 	
try
££ 
{
§§ 
return
•• 
(
•• 
new
•• 
OrdenDePedido
•• )
(
••) *%
_transaccionRepositorio
••* A
.
••A BZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccion••B ç
(••ç é
idPedido••é ñ
)••ñ ó
)••ó ò
)••ò ô
;••ô ö
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
new
©© 
LogicaException
©© )
(
©©) *
$str
©©* M
,
©©M N
e
©©O P
)
©©P Q
;
©©Q R
}
™™ 
}
´´ 	
public
≠≠ 
OperationResult
≠≠ 
EditarPedido
≠≠ +
(
≠≠+ ,!
DatosVentaIntegrada
≠≠, ?"
datosPedidoIntegrada
≠≠@ T
,
≠≠T U$
UserProfileSessionData
≠≠V l 
profileSessionData
≠≠m 
)≠≠ Ä
{
ÆÆ 	
try
ØØ 
{
∞∞ 
OperationResult
±± 
result
±±  &
;
±±& '
var
≥≥ 
detallesDePedidos
≥≥ %
=
≥≥& '
ResolverDetalle
≥≥( 7
(
≥≥7 8"
datosPedidoIntegrada
≥≥8 L
.
≥≥L M
Orden
≥≥M R
.
≥≥R S
Detalles
≥≥S [
,
≥≥[ \"
datosPedidoIntegrada
≥≥] q
)
≥≥q r
;
≥≥r s
var
¥¥ "
detalles_transaccion
¥¥ (
=
¥¥) *
detallesDePedidos
¥¥+ <
.
¥¥< =
Select
¥¥= C
(
¥¥C D
d
¥¥D E
=>
¥¥F H
d
¥¥I J
.
¥¥J K 
DetalleTransaccion
¥¥K ]
(
¥¥] ^
)
¥¥^ _
)
¥¥_ `
.
¥¥` a
ToList
¥¥a g
(
¥¥g h
)
¥¥h i
;
¥¥i j,
CalcularDatosDePedidoIntegrada
µµ .
(
µµ. /"
datosPedidoIntegrada
µµ/ C
,
µµC D 
profileSessionData
µµE W
)
µµW X
;
µµX Y
Transaccion
∑∑ 
dbPedido
∑∑ $
=
∑∑% & 
_repositorioPedido
∑∑' 9
.
∑∑9 : 
ObtenerTransaccion
∑∑: L
(
∑∑L M
(
∑∑M N
int
∑∑N Q
)
∑∑Q R"
datosPedidoIntegrada
∑∑R f
.
∑∑f g
Orden
∑∑g l
.
∑∑l m 
IdTransaccionPadre
∑∑m 
)∑∑ Ä
;∑∑Ä Å
Transaccion
∏∏ 
pedido
∏∏ "
=
∏∏# $
GenerarPedido
∏∏% 2
(
∏∏2 3"
datosPedidoIntegrada
∏∏3 G
,
∏∏G H 
profileSessionData
∏∏I [
)
∏∏[ \
;
∏∏\ ]
pedido
ππ 
.
ππ 
id
ππ 
=
ππ 
(
ππ 
int
ππ  
)
ππ  !"
datosPedidoIntegrada
ππ! 5
.
ππ5 6
Orden
ππ6 ;
.
ππ; < 
IdTransaccionPadre
ππ< N
;
ππN O
pedido
∫∫ 
.
∫∫ 
id_comprobante
∫∫ %
=
∫∫& '"
datosPedidoIntegrada
∫∫( <
.
∫∫< =
Orden
∫∫= B
.
∫∫B C
Comprobante
∫∫C N
.
∫∫N O
Id
∫∫O Q
;
∫∫Q R
pedido
ªª 
.
ªª 
codigo
ªª 
=
ªª 
dbPedido
ªª  (
.
ªª( )
codigo
ªª) /
;
ªª/ 0
Transaccion
ΩΩ 
dbOrdenPedido
ΩΩ )
=
ΩΩ* + 
_repositorioPedido
ΩΩ, >
.
ΩΩ> ? 
ObtenerTransaccion
ΩΩ? Q
(
ΩΩQ R
(
ΩΩR S
int
ΩΩS V
)
ΩΩV W"
datosPedidoIntegrada
ΩΩW k
.
ΩΩk l
Orden
ΩΩl q
.
ΩΩq r
Id
ΩΩr t
)
ΩΩt u
;
ΩΩu v
Transaccion
ææ 
ordenPedido
ææ '
=
ææ( )"
GenerarOrdenDePedido
ææ* >
(
ææ> ?
pedido
ææ? E
,
ææE F 
profileSessionData
ææG Y
,
ææY Z"
datosPedidoIntegrada
ææ[ o
)
ææo p
;
ææp q
ordenPedido
øø 
.
øø 
id
øø 
=
øø  "
datosPedidoIntegrada
øø! 5
.
øø5 6
Orden
øø6 ;
.
øø; <
Id
øø< >
;
øø> ?
ordenPedido
¿¿ 
.
¿¿ "
id_transaccion_padre
¿¿ 0
=
¿¿1 2"
datosPedidoIntegrada
¿¿3 G
.
¿¿G H
Orden
¿¿H M
.
¿¿M N 
IdTransaccionPadre
¿¿N `
;
¿¿` a
ordenPedido
¡¡ 
.
¡¡ 
id_comprobante
¡¡ *
=
¡¡+ ,"
datosPedidoIntegrada
¡¡- A
.
¡¡A B
Orden
¡¡B G
.
¡¡G H
Comprobante
¡¡H S
.
¡¡S T
Id
¡¡T V
;
¡¡V W
ordenPedido
¬¬ 
.
¬¬ 
id_estado_actual
¬¬ ,
=
¬¬- ."
datosPedidoIntegrada
¬¬/ C
.
¬¬C D
Orden
¬¬D I
.
¬¬I J
IdEstado
¬¬J R
;
¬¬R S
ordenPedido
√√ 
.
√√ 
codigo
√√ "
=
√√# $
dbOrdenPedido
√√% 2
.
√√2 3
codigo
√√3 9
;
√√9 :
ordenPedido
ƒƒ 
.
ƒƒ #
Parametro_transaccion
ƒƒ 1
.
ƒƒ1 2
SingleOrDefault
ƒƒ2 A
(
ƒƒA B
pt
ƒƒB D
=>
ƒƒE G
pt
ƒƒH J
.
ƒƒJ K
id_parametro
ƒƒK W
==
ƒƒX Z
MaestroSettings
ƒƒ[ j
.
ƒƒj k
Default
ƒƒk r
.
ƒƒr s?
0IdDetalleMaestroParametroIdTipoComprobanteEmitirƒƒs £
)ƒƒ£ §
.ƒƒ§ •
idƒƒ• ß
=ƒƒ® ©
dbOrdenPedidoƒƒ™ ∑
.ƒƒ∑ ∏%
Parametro_transaccionƒƒ∏ Õ
.ƒƒÕ Œ
SingleOrDefaultƒƒŒ ›
(ƒƒ› ﬁ
ptƒƒﬁ ‡
=>ƒƒ· „
ptƒƒ‰ Ê
.ƒƒÊ Á
id_parametroƒƒÁ Û
==ƒƒÙ ˆ
MaestroSettingsƒƒ˜ Ü
.ƒƒÜ á
Defaultƒƒá é
.ƒƒé è@
0IdDetalleMaestroParametroIdTipoComprobanteEmitirƒƒè ø
)ƒƒø ¿
.ƒƒ¿ ¡
idƒƒ¡ √
;ƒƒ√ ƒ
foreach
«« 
(
«« 
var
«« "
parametroOrdenPedido
«« 1
in
««2 4
ordenPedido
««5 @
.
««@ A#
Parametro_transaccion
««A V
)
««V W
{
»» "
parametroOrdenPedido
…… (
.
……( )
id_transaccion
……) 7
=
……8 9"
datosPedidoIntegrada
……: N
.
……N O
Orden
……O T
.
……T U
Id
……U W
;
……W X"
parametroOrdenPedido
   (
.
  ( )
id
  ) +
=
  , -
dbOrdenPedido
  . ;
.
  ; <#
Parametro_transaccion
  < Q
.
  Q R
SingleOrDefault
  R a
(
  a b
pt
  b d
=>
  e g
pt
  h j
.
  j k
id_parametro
  k w
==
  x z#
parametroOrdenPedido  { è
.  è ê
id_parametro  ê ú
)  ú ù
==  û †
null  ° •
?  ¶ ß
$num  ® ©
:  ™ ´
dbOrdenPedido  ¨ π
.  π ∫%
Parametro_transaccion  ∫ œ
.  œ –
SingleOrDefault  – ﬂ
(  ﬂ ‡
pt  ‡ ‚
=>  „ Â
pt  Ê Ë
.  Ë È
id_parametro  È ı
==  ˆ ¯$
parametroOrdenPedido  ˘ ç
.  ç é
id_parametro  é ö
)  ö õ
.  õ ú
id  ú û
;  û ü
}
ÀÀ 
ordenPedido
ŒŒ 
.
ŒŒ !
Detalle_transaccion
ŒŒ /
.
ŒŒ/ 0
ToList
ŒŒ0 6
(
ŒŒ6 7
)
ŒŒ7 8
.
ŒŒ8 9
ForEach
ŒŒ9 @
(
ŒŒ@ A
d
ŒŒA B
=>
ŒŒC E
d
ŒŒF G
.
ŒŒG H
id_transaccion
ŒŒH V
=
ŒŒW X"
datosPedidoIntegrada
ŒŒY m
.
ŒŒm n
Orden
ŒŒn s
.
ŒŒs t
Id
ŒŒt v
)
ŒŒv w
;
ŒŒw x
pedido
–– 
.
–– 
Transaccion1
–– #
.
––# $
Add
––$ '
(
––' (
ordenPedido
––( 3
)
––3 4
;
––4 5
result
““ 
=
““ %
_repositorioTransaccion
““ 0
.
““0 1@
2ActualizarTransaccionTransaccion1DetallesParametro
““1 c
(
““c d
pedido
““d j
)
““j k
;
““k l
result
”” 
.
”” 
information
”” "
=
””# $
pedido
””% +
.
””+ ,
Transaccion1
””, 8
.
””8 9
First
””9 >
(
””> ?
)
””? @
.
””@ A
id
””A C
;
””C D
ordenPedido
‘‘ 
.
‘‘ 
Comprobante
‘‘ '
=
‘‘( )
new
‘‘* -
Comprobante
‘‘. 9
(
‘‘9 :
)
‘‘: ;
;
‘‘; <
result
’’ 
.
’’ 
objeto
’’ 
=
’’ 
new
’’  #
OrdenDePedido
’’$ 1
(
’’1 2
ordenPedido
’’2 =
)
’’= >
;
’’> ?
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
ex
ÿÿ 
)
ÿÿ  
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* L
,
⁄⁄L M
ex
⁄⁄N P
)
⁄⁄P Q
;
⁄⁄Q R
}
‹‹ 
}
ﬁﬁ 	
public
ﬂﬂ 
OrdenDePedido
ﬂﬂ .
 ObtenerOrdenDePedidoParaImprimir
ﬂﬂ =
(
ﬂﬂ= >
OrdenDePedido
ﬂﬂ> K
ordenDePedido
ﬂﬂL Y
)
ﬂﬂY Z
{
‡‡ 	
try
·· 
{
‚‚ 
int
‰‰ 
[
‰‰ 
]
‰‰ 
idsActoresNegocio
‰‰ '
=
‰‰( )
{
‰‰* +
ordenDePedido
‰‰, 9
.
‰‰9 :
Transaccion
‰‰: E
(
‰‰E F
)
‰‰F G
.
‰‰G H&
id_actor_negocio_interno
‰‰H `
}
‰‰a b
;
‰‰b c
List
ÂÂ 
<
ÂÂ 
Actor_negocio
ÂÂ "
>
ÂÂ" #
actoresDeNegocio
ÂÂ$ 4
=
ÂÂ5 6
_actorRepositorio
ÂÂ7 H
.
ÂÂH I%
ObtenerActoresDeNegocio
ÂÂI `
(
ÂÂ` a
idsActoresNegocio
ÂÂa r
)
ÂÂr s
.
ÂÂs t
ToList
ÂÂt z
(
ÂÂz {
)
ÂÂ{ |
;
ÂÂ| }
ordenDePedido
ÊÊ 
.
ÊÊ 
Transaccion
ÊÊ )
(
ÊÊ) *
)
ÊÊ* +
.
ÊÊ+ ,
Actor_negocio2
ÊÊ, :
=
ÊÊ; <
actoresDeNegocio
ÊÊ= M
.
ÊÊM N
Single
ÊÊN T
(
ÊÊT U
an
ÊÊU W
=>
ÊÊX Z
an
ÊÊ[ ]
.
ÊÊ] ^
id
ÊÊ^ `
==
ÊÊa c
ordenDePedido
ÊÊd q
.
ÊÊq r
Transaccion
ÊÊr }
(
ÊÊ} ~
)
ÊÊ~ 
.ÊÊ Ä(
id_actor_negocio_internoÊÊÄ ò
)ÊÊò ô
;ÊÊô ö
return
ÁÁ 
ordenDePedido
ÁÁ $
;
ÁÁ$ %
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
throw
ÎÎ 
new
ÎÎ 
LogicaException
ÎÎ )
(
ÎÎ) *
$str
ÎÎ* M
,
ÎÎM N
e
ÎÎO P
)
ÎÎP Q
;
ÎÎQ R
}
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
OperationResult
ÔÔ 
ConfirmarPedido
ÔÔ .
(
ÔÔ. /
ModoOperacionEnum
ÔÔ/ @
	tipoVenta
ÔÔA J
,
ÔÔJ K$
UserProfileSessionData
ÔÔK a
sesionDeUsuario
ÔÔb q
,
ÔÔr s"
DatosVentaIntegradaÔÔt á
pedidoÔÔà é
)ÔÔé è
{
 	
try
ÒÒ 
{
ÚÚ 
pedido
ÛÛ 
.
ÛÛ 
NuevoEstado
ÛÛ "
=
ÛÛ# $
new
ÛÛ% ( 
Estado_transaccion
ÛÛ) ;
(
ÛÛ; <
pedido
ÛÛ< B
.
ÛÛB C
Orden
ÛÛC H
.
ÛÛH I
Id
ÛÛI K
,
ÛÛK L
sesionDeUsuario
ÛÛL [
.
ÛÛ[ \
Empleado
ÛÛ\ d
.
ÛÛd e
Id
ÛÛe g
,
ÛÛg h
MaestroSettings
ÛÛi x
.
ÛÛx y
DefaultÛÛy Ä
.ÛÛÄ Å0
 IdDetalleMaestroEstadoConfirmadoÛÛÅ °
,ÛÛ° ¢
DateTimeUtilÛÛ£ Ø
.ÛÛØ ∞
FechaActualÛÛ∞ ª
(ÛÛª º
)ÛÛº Ω
,ÛÛΩ æ
$strÛÛø Í
)ÛÛÍ Î
;ÛÛÎ Ï
return
ÙÙ 
_operacionLogica
ÙÙ '
.
ÙÙ' (%
ConfirmarVentaIntegrada
ÙÙ( ?
(
ÙÙ? @
	tipoVenta
ÙÙ@ I
,
ÙÙI J
sesionDeUsuario
ÙÙK Z
,
ÙÙZ [
pedido
ÙÙ\ b
)
ÙÙb c
;
ÙÙc d
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
ex
ˆˆ 
)
ˆˆ  
{
˜˜ 
throw
¯¯ 
new
¯¯ 
LogicaException
¯¯ )
(
¯¯) *
$str
¯¯* F
,
¯¯F G
ex
¯¯H J
)
¯¯J K
;
¯¯K L
}
˘˘ 
}
˙˙ 	
public
˝˝ 
List
˝˝ 
<
˝˝  
PedidosInvalidados
˝˝ &
>
˝˝& '.
 ObtenerReportePedidosInvalidados
˝˝( H
(
˝˝H I
DateTime
˝˝I Q

fechaDesde
˝˝R \
,
˝˝\ ]
DateTime
˝˝^ f

fechaHasta
˝˝g q
,
˝˝q r
int
˝˝s v
[
˝˝v w
]
˝˝w x
idsPuntosVenta˝˝y á
,˝˝á à
bool˝˝â ç#
todasLosPuntosVenta˝˝é °
,˝˝° ¢
int˝˝£ ¶*
idEstablecimientoComercial˝˝ß ¡
)˝˝¡ ¬
{
˛˛ 	
List
ˇˇ 
<
ˇˇ  
PedidosInvalidados
ˇˇ #
>
ˇˇ# $ 
pedidosInvalidados
ˇˇ% 7
=
ˇˇ8 9
new
ˇˇ: =
List
ˇˇ> B
<
ˇˇB C 
PedidosInvalidados
ˇˇC U
>
ˇˇU V
(
ˇˇV W
)
ˇˇW X
;
ˇˇX Y
idsPuntosVenta
ÄÄ 
=
ÄÄ !
todasLosPuntosVenta
ÄÄ 0
?
ÄÄ1 2&
_centroDeAtencion_Logica
ÄÄ3 K
.
ÄÄK LF
7ObtenerPuntosDeVentaVigentesPorEstablecimientoComercialÄÄL É
(ÄÄÉ Ñ*
idEstablecimientoComercialÄÄÑ û
)ÄÄû ü
.ÄÄü †
SelectÄÄ† ¶
(ÄÄ¶ ß
pvÄÄß ©
=>ÄÄ© ´
pvÄÄ´ ≠
.ÄÄ≠ Æ
IdÄÄÆ ∞
)ÄÄ∞ ±
.ÄÄ± ≤
ToArrayÄÄ≤ π
(ÄÄπ ∫
)ÄÄ∫ ª
:ÄÄº Ω
idsPuntosVentaÄÄæ Ã
;ÄÄÃ Õ 
pedidosInvalidados
ÅÅ 
=
ÅÅ   
_repositorioPedido
ÅÅ! 3
.
ÅÅ3 4/
!ObtenerOrdenesDePedidoInvalidados
ÅÅ4 U
(
ÅÅU V

fechaDesde
ÅÅV `
,
ÅÅ` a

fechaHasta
ÅÅb l
,
ÅÅl m
idsPuntosVenta
ÅÅn |
)
ÅÅ| }
.
ÅÅ} ~
ToListÅÅ~ Ñ
(ÅÅÑ Ö
)ÅÅÖ Ü
;ÅÅÜ á
return
ÇÇ  
pedidosInvalidados
ÇÇ %
;
ÇÇ% &
}
ÉÉ 	
}
ää 
}ãã „P
LD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Permisos\Permisos_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Permisos# +
{ 
public 

class 
Permisos_Logica  
:  !
IPermisos_Logica" 2
{ 
	protected 
readonly 
IRoles_Repositorio -
_rolesDatos. 9
;9 :
public 
Permisos_Logica 
( 
IRoles_Repositorio 1

rolesDatos2 <
)< =
{ 	
_rolesDatos 
= 

rolesDatos $
;$ %
} 	
public 
void 
ValidarAccion !
(! "
int" %

idEmpleado& 0
,0 1
int2 5
idAccion6 >
,> ?
int@ C
idTipoTransaccionD U
,U V
intW Z
idUnidadNegocio[ j
)j k
{ 	
var 
intersectedActions "
=# $
_rolesDatos% 0
.0 1C
7ContarInterseccionRolesAccion_RolesVigentesActorNegocio1 h
(h i

idEmpleadoi s
,s t
ActorSettings	u Ç
.
Ç É
Default
É ä
.
ä ã
IdRolEmpleado
ã ò
,
ò ô
idAccion
ö ¢
,
¢ £
idTipoTransaccion
§ µ
,
µ ∂
idUnidadNegocio
∑ ∆
)
∆ «
;
« »
if 
( 
intersectedActions "
<=# %
$num& '
)' (
{ 
throw 
new 
LogicaException )
() *
$str* Y
)Y Z
;Z [
} 
} 	
public!! 
bool!! .
"ValidarActorNegocioTieneRolVigente!! 6
(!!6 7
int!!7 :

idEmpleado!!; E
,!!E F
int!!G J
idRol!!K P
)!!P Q
{"" 	
return## 
_rolesDatos## 
.## '
ActorNegocioTieneRolVigente## :
(##: ;

idEmpleado##; E
,##E F
idRol##G L
)##L M
;##M N
}$$ 	
public&& 
List&& 
<&& 
Rol&& 
>&& 
ObtenerRolesTercero&& ,
(&&, -
)&&- .
{'' 	
try(( 
{)) 
int** 
[** 
]** 
idsRoles** 
=**  
{**! "
ActorSettings**# 0
.**0 1
Default**1 8
.**8 9
IdRolCliente**9 E
,**E F
ActorSettings**G T
.**T U
Default**U \
.**\ ]
IdRolProveedor**] k
}**l m
;**m n
return++ 
_rolesDatos++ "
.++" #
ObtenerRoles++# /
(++/ 0
idsRoles++0 8
)++8 9
.++9 :
ToList++: @
(++@ A
)++A B
;++B C
},, 
catch-- 
(-- 
	Exception-- 
e-- 
)-- 
{.. 
throw// 
e// 
;// 
}00 
}11 	
public33 
List33 
<33 
Tipo_transaccion33 $
>33$ %%
ObtenerTiposDeTransaccion33& ?
(33? @
)33@ A
{44 	
try55 
{66 
return77 
_rolesDatos77 "
.77" #'
ObtenerTiposDeTransacciones77# >
(77> ?
)77? @
.77@ A
ToList77A G
(77G H
)77H I
;77I J
}88 
catch99 
(99 
	Exception99 
e99 
)99 
{:: 
throw;; 
e;; 
;;; 
}<< 
}== 	
public?? 
List?? 
<?? 
Accion_por_rol?? "
>??" #A
5ObtenerAccionesPosiblesPorTipoTransaccionYRolPersonal??$ Y
(??Y Z
int??Z ]
idTipoTransaccion??^ o
,??o p
int??q t
idRolPersonal	??u Ç
)
??Ç É
{@@ 	
tryAA 
{BB 
returnCC 
_rolesDatosCC "
.CC" #0
$obtenerAccionesPorTipoTrasaccionYRolCC# G
(CCG H
idTipoTransaccionCCH Y
,CCY Z
idRolPersonalCC[ h
)CCh i
.CCi j
ToListCCj p
(CCp q
)CCq r
;CCr s
}DD 
catchEE 
(EE 
	ExceptionEE 
eEE 
)EE 
{FF 
throwGG 
eGG 
;GG 
}HH 
}II 	
publicKK 
ListKK 
<KK 
Accion_por_estadoKK %
>KK% &B
6ObtenerAccionesPosiblesPorTipoTransaccionYEstadoActualKK' ]
(KK] ^
intKK^ a
idTipoTransaccionKKb s
,KKs t
intKKu x
idEstadoActual	KKy á
)
KKá à
{LL 	
tryMM 
{NN 
returnOO 
_rolesDatosOO "
.OO" #9
-obtenerAccionesPorTipoTrasaccionYEstadoActualOO# P
(OOP Q
idTipoTransaccionOOQ b
,OOb c
idEstadoActualOOd r
)OOr s
.OOs t
ToListOOt z
(OOz {
)OO{ |
;OO| }
}PP 
catchQQ 
(QQ 
	ExceptionQQ 
eQQ 
)QQ 
{RR 
throwSS 
eSS 
;SS 
}TT 
}UU 	
publicWW 
OperationResultWW +
ActualizarPermisosPorRolYEstadoWW >
(WW> ?
ListWW? C
<WWC D
Accion_por_rolWWD R
>WWR S
rolAccionesWWT _
,WW_ `
ListWWa e
<WWe f
Accion_por_estadoWWf w
>WWw x
estadoAcciones	WWy á
,
WWá à
int
WWâ å
idTipoTransaccion
WWç û
,
WWû ü
int
WW† £
idRolPersonal
WW§ ±
,
WW± ≤
int
WW≥ ∂
idEstadoActual
WW∑ ≈
)
WW≈ ∆
{XX 	
tryYY 
{ZZ 
if[[ 
([[ 
rolAcciones[[ 
!=[[  "
null[[# '
)[[' (
{\\ 
List]] 
<]] 
Accion_por_rol]] '
>]]' (
rolAccionesNuevos]]) :
=]]; <
rolAcciones]]= H
.]]H I
Where]]I N
(]]N O
ra]]O Q
=>]]R T
ra]]U W
.]]W X
id]]X Z
<=]][ ]
$num]]^ _
)]]_ `
.]]` a
ToList]]a g
(]]g h
)]]h i
;]]i j
foreach__ 
(__ 
var__  
rolAccionNuevo__! /
in__0 2
rolAccionesNuevos__3 D
)__D E
{`` 
ifaa 
(aa 
rolAccionesNuevosaa -
.aa- .
Countaa. 3
(aa3 4
raaa4 6
=>aa7 9
raaa: <
.aa< =
id_tipo_transaccionaa= P
==aaQ S
rolAccionNuevoaaT b
.aab c
id_tipo_transaccionaac v
&&aaw y
raaaz |
.aa| }
id_rol	aa} É
==
aaÑ Ü
rolAccionNuevo
aaá ï
.
aaï ñ
id_rol
aañ ú
&&
aaù ü
ra
aa† ¢
.
aa¢ £
id_accion_posible
aa£ ¥
==
aaµ ∑
rolAccionNuevo
aa∏ ∆
.
aa∆ «
id_accion_posible
aa« ÿ
&&
aaŸ €
ra
aa‹ ﬁ
.
aaﬁ ﬂ
id_unidad_negocio
aaﬂ 
==
aaÒ Û
rolAccionNuevo
aaÙ Ç
.
aaÇ É
id_unidad_negocio
aaÉ î
)
aaî ï
>
aañ ó
$num
aaò ô
)
aaô ö
{bb 
returncc "
newcc# &
OperationResultcc' 6
(cc6 7
newcc7 :
	Exceptioncc; D
(ccD E
$str	ccE ç
)
ccç é
)
ccé è
;
ccè ê
}dd 
}ee 
}ff 
ifgg 
(gg 
estadoAccionesgg "
!=gg# %
nullgg& *
)gg* +
{hh 
Listii 
<ii 
Accion_por_estadoii *
>ii* + 
estadoAccionesNuevosii, @
=iiA B
estadoAccionesiiC Q
.iiQ R
WhereiiR W
(iiW X
raiiX Z
=>ii[ ]
raii^ `
.ii` a
idiia c
<=iid f
$numiig h
)iih i
.iii j
ToListiij p
(iip q
)iiq r
;iir s
foreachkk 
(kk 
varkk  
estadoAccionNuevokk! 2
inkk3 5 
estadoAccionesNuevoskk6 J
)kkJ K
{ll 
ifmm 
(mm  
estadoAccionesNuevosmm 0
.mm0 1
Countmm1 6
(mm6 7
eamm7 9
=>mm: <
eamm= ?
.mm? @
id_tipo_transaccionmm@ S
==mmT V
estadoAccionNuevommW h
.mmh i
id_tipo_transaccionmmi |
&&mm} 
ea
mmÄ Ç
.
mmÇ É
id_estado_actual
mmÉ ì
==
mmî ñ
estadoAccionNuevo
mmó ®
.
mm® ©
id_estado_actual
mm© π
&&
mm∫ º
ea
mmΩ ø
.
mmø ¿
id_accion_posible
mm¿ —
==
mm“ ‘
estadoAccionNuevo
mm’ Ê
.
mmÊ Á
id_accion_posible
mmÁ ¯
)
mm¯ ˘
>
mm˙ ˚
$num
mm¸ ˝
)
mm˝ ˛
{nn 
returnoo "
newoo# &
OperationResultoo' 6
(oo6 7
newoo7 :
	Exceptionoo; D
(ooD E
$str	ooE ë
)
ooë í
)
ooí ì
;
ooì î
}pp 
}qq 
}rr 
returntt 
_rolesDatostt "
.tt" #+
actualizarAccionesPorRolYEstadott# B
(ttB C
rolAccionesttC N
,ttN O
estadoAccionesttP ^
,tt^ _
idTipoTransacciontt` q
,ttq r
idRolPersonal	tts Ä
,
ttÄ Å
idEstadoActual
ttÇ ê
)
ttê ë
;
ttë í
}uu 
catchvv 
(vv 
	Exceptionvv 
evv 
)vv 
{ww 
throwxx 
exx 
;xx 
}yy 
}zz 	
}{{ 
}|| å
KD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\CodigosOperacion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Permisos# +
{ 
public		 

class		 #
CodigosOperacion_Logica		 (
:		( )$
ICodigosOperacion_Logica		* B
{

 
	protected 
readonly +
ICodigosTransaccion_Repositorio :$
_codigosTransaccionDatos; S
;S T
public #
CodigosOperacion_Logica &
(& '+
ICodigosTransaccion_Repositorio' F#
codigosTransaccionDatosG ^
)^ _
{ 	$
_codigosTransaccionDatos $
=% &#
codigosTransaccionDatos' >
;> ?
} 	
public 
string 1
%ObtenerSiguienteCodigoParaFacturacion ;
(; <
string< B
prefijoC J
,J K
intL O
idTipoTransaccionP a
)a b
{ 	
try 
{ 
int 
maximo 
= $
_codigosTransaccionDatos 5
.5 6.
"ObtenerMaximoCodigoParaTransaccion6 X
(X Y
prefijoY `
,` a
idTipoTransaccionb s
)s t
;t u
string *
siguienteCodigoParaFacturacion 5
=6 7
prefijo8 ?
+@ A
(B C
maximoC I
+J K
$numL M
)M N
.N O
ToStringO W
(W X
)X Y
;Y Z
return *
siguienteCodigoParaFacturacion 5
;5 6
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* [
,[ \
e] ^
)^ _
;_ `
} 
}   	
public!! 
int!! .
"ObtenerMaximoCodigoParaTransaccion!! 5
(!!5 6
string!!6 <
prefijo!!= D
,!!D E
int!!F I
idTipoTransaccion!!J [
)!![ \
{"" 	
return## $
_codigosTransaccionDatos## +
.##+ ,.
"ObtenerMaximoCodigoParaTransaccion##, N
(##N O
prefijo##O V
,##V W
idTipoTransaccion##X i
)##i j
;##j k
}$$ 	
})) 
}** ó9
JD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Session\Session_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Permisos# +
{ 
public 

class 
Session_Logica 
:  !
ISession_Logica" 1
{ 
	protected 
readonly 
IRoles_Repositorio -
_rolesDatos. 9
;9 :
	protected 
readonly !
IEmpleado_Repositorio 0
_empleadoDatos1 ?
;? @
	protected 
readonly $
ICentroDeAtencion_Logica 3#
_centroDeAtencionLogica4 K
;K L
	protected 
readonly 
ISede_Logica '
_sedeLogica( 3
;3 4
public 
Session_Logica 
( 
IRoles_Repositorio 0

rolesDatos1 ;
,; <!
IEmpleado_Repositorio= R
empleadoDatosS `
,` a$
ICentroDeAtencion_Logicab z#
centroDeAtencionLogica	{ ë
,
ë í
ISede_Logica
ì ü

sedeLogica
† ™
)
™ ´
{ 	
_rolesDatos 
= 

rolesDatos $
;$ %
_empleadoDatos 
= 
empleadoDatos *
;* +#
_centroDeAtencionLogica #
=$ %"
centroDeAtencionLogica& <
;< =
_sedeLogica   
=   

sedeLogica   $
;  $ %
}!! 	
public$$ "
UserProfileSessionData$$ % 
GenerarSesionUsuario$$& :
($$: ;
string$$; A
userId$$B H
,$$H I
string$$J P
userName$$Q Y
)$$Y Z
{%% 	
	Empleado_&& 
empleado&& 
=&&  
_empleadoDatos&&! /
.&&/ 0
ObtenerEmpleado&&0 ?
(&&? @
userId&&@ F
)&&F G
;&&G H
List'' 
<'' 
CentroDeAtencion'' !
>''! "(
centrosDeAtencionProgramados''# ?
=''@ A#
_centroDeAtencionLogica''B Y
.''Y Z0
$ObtenerCentrosDeAtencionProgramados_''Z ~
(''~ 
empleado	'' á
.
''á à
Id
''à ä
)
''ä ã
;
''ã å
var)) 
profile)) 
=)) 
new)) "
UserProfileSessionData)) 4
())4 5
)))5 6
{))7 8
	IdUsuario))9 B
=))C D
userId))E K
,))K L
NombreUsuario))M Z
=))[ \
userName))] e
,))e f)
CentrosDeAtencionProgramados	))g É
=
))Ñ Ö*
centrosDeAtencionProgramados
))Ü ¢
}
))£ §
;
))§ •
profile** 
.** 
Empleado** 
=** 
empleado** '
??**( *
throw**+ 0
new**1 4
	Exception**5 >
(**> ?
$str	**? †
)
**† °
;
**° ¢
profile++ 
.++ +
SetCentrosDeAtencionProgramados++ 3
(++3 4(
centrosDeAtencionProgramados++4 P
)++P Q
;++Q R
if,, 
(,, 
profile,, 
.,, (
CentrosDeAtencionProgramados,, 4
.,,4 5
Count,,5 :
==,,; =
$num,,> ?
),,? @
profile,,A H
.,,H I(
CentroDeAtencionSeleccionado,,I e
=,,f g
profile,,h o
.,,o p)
CentrosDeAtencionProgramados	,,p å
.
,,å ç
FirstOrDefault
,,ç õ
(
,,õ ú
)
,,ú ù
;
,,ù û
return-- 
profile-- 
;-- 
}.. 	
public44 "
UserProfileSessionData44 % 
GenerarSesionUsuario44& :
(44: ;
)44; <
{55 	
	Empleado_66 
empleado66 
=66  
_empleadoDatos66! /
.66/ 0
ObtenerEmpleado660 ?
(66? @
ActorSettings66@ M
.66M N
Default66N U
.66U V,
 IdActorNegocioEmpleadoPorDefecto66V v
)66v w
;66w x
List77 
<77 
CentroDeAtencion77 !
>77! "(
centrosDeAtencionProgramados77# ?
=77@ A#
_centroDeAtencionLogica77B Y
.77Y Z0
$ObtenerCentrosDeAtencionProgramados_77Z ~
(77~ 
empleado	77 á
.
77á à
Id
77à ä
)
77ä ã
;
77ã å
var99 
profile99 
=99 
new99 "
UserProfileSessionData99 4
(994 5
)995 6
{997 8
	IdUsuario999 B
=99C D
$str99E G
,99G H
NombreUsuario99I V
=99W X
$str99Y b
,99b c)
CentrosDeAtencionProgramados	99d Ä
=
99Å Ç*
centrosDeAtencionProgramados
99É ü
}
99† °
;
99° ¢
profile:: 
.:: 
Empleado:: 
=:: 
empleado:: '
??::( *
throw::+ 0
new::1 4
	Exception::5 >
(::> ?
$str	::? †
)
::† °
;
::° ¢
profile;; 
.;; +
SetCentrosDeAtencionProgramados;; 3
(;;3 4(
centrosDeAtencionProgramados;;4 P
);;P Q
;;;Q R
if<< 
(<< 
profile<< 
.<< (
CentrosDeAtencionProgramados<< 4
.<<4 5
Count<<5 :
==<<; =
$num<<> ?
)<<? @
profile<<A H
.<<H I(
CentroDeAtencionSeleccionado<<I e
=<<f g
profile<<h o
.<<o p)
CentrosDeAtencionProgramados	<<p å
.
<<å ç
FirstOrDefault
<<ç õ
(
<<õ ú
)
<<ú ù
;
<<ù û
return== 
profile== 
;== 
}>> 	
publicAA "
UserProfileSessionDataAA %
ResolverSessionAA& 5
(AA5 6"
UserProfileSessionDataAA6 L
profileDataAAM X
,AAX Y

TipoCambioAAZ d

tipoCambioAAe o
,AAo p
intAAq t+
idCentroDeAtencionInicioSesion	AAu ì
)
AAì î
{BB 	
profileDataCC 
.CC 
SedeCC 
=CC 
_sedeLogicaCC *
.CC* +
ObtenerSedeConLogoCC+ =
(CC= >
)CC> ?
;CC? @
profileDataDD 
.DD (
CentroDeAtencionSeleccionadoDD 4
=DD5 6
newDD7 :
CentroDeAtencionDD; K
(DDK L
)DDL M
{EE 
IdFF 
=FF *
idCentroDeAtencionInicioSesionFF 3
,FF3 4
}GG 
;GG 
profileDataHH 
.HH *
IdCentroDeAtencionInicioSesionHH 6
=HH7 8*
idCentroDeAtencionInicioSesionHH9 W
;HHW X
profileDataII 
.II 4
(IdCentroAtencionQueTieneElStockIntegradaII @
=IIA B*
idCentroDeAtencionInicioSesionIIC a
;IIa b
profileDataJJ 
.JJ 
TipoDeCambioJJ $
=JJ% &

tipoCambioJJ' 1
;JJ1 2
returnKK 
profileDataKK 
;KK 
}LL 	
}MM 
}NN Ê
TD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\TipoDeCambio\TipoDeCambio_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
TipoDeCambio# /
{ 
public 

class 
TipoDeCambio_Logica $
:% & 
ITipoDeCambio_Logica' ;
{ 
public 

TipoCambio (
ObtenerTipoCambioDolarActual 6
(6 7
)7 8
{ 	

TipoCambio 

tipoCambio !
=" #
new$ '

TipoCambio( 2
(2 3
)3 4
;4 5
try 
{ 
string 
url 
= 
AplicacionSettings /
./ 0
Default0 7
.7 8$
UrlApiConsultaTipoCambio8 P
+Q R
AplicacionSettingsS e
.e f
Defaultf m
.m n'
IdMonedaDolarApiTipoCambio	n à
;
à â
var 
response 
= 
Task #
.# $
Run$ '
(' (
(( )
)) *
=>+ -
GetURI. 4
(4 5
new5 8
Uri9 <
(< =
url= @
)@ A
)A B
)B C
;C D
response 
. 
Wait 
( 
) 
;  
string 
result 
= 
response  (
.( )
Result) /
;/ 0

tipoCambio 
= 

Newtonsoft '
.' (
Json( ,
., -
JsonConvert- 8
.8 9
DeserializeObject9 J
<J K

TipoCambioK U
>U V
(V W
resultW ]
)] ^
;^ _

tipoCambio 
. 
IdMoneda #
=$ %
MaestroSettings& 5
.5 6
Default6 =
.= >)
IdDetalleMaestroMonedaDolares> [
;[ \
if 
( 

tipoCambio 
. 
Estado %
==& (
false) .
). /
{ 

tipoCambio 
=  
new! $

TipoCambio% /
(/ 0
)0 1
;1 2
} 
} 
catch 
( 
	Exception 
) 
{   

tipoCambio!! 
=!! 
new!!  

TipoCambio!!! +
(!!+ ,
)!!, -
;!!- .
}"" 
return## 

tipoCambio## 
;## 
}$$ 	
	protected&& 
static&& 
async&& 
Task&& #
<&&# $
string&&$ *
>&&* +
GetURI&&, 2
(&&2 3
Uri&&3 6
u&&7 8
)&&8 9
{'' 	
var(( 
response(( 
=(( 
string(( !
.((! "
Empty((" '
;((' (
using)) 
()) 
var)) 
client)) 
=)) 
new))  #

HttpClient))$ .
()). /
)))/ 0
)))0 1
{** 
HttpResponseMessage++ #
result++$ *
=+++ ,
await++- 2
client++3 9
.++9 :
GetAsync++: B
(++B C
u++C D
)++D E
;++E F
if,, 
(,, 
result,, 
.,, 
IsSuccessStatusCode,, .
),,. /
{-- 
response.. 
=.. 
await.. $
result..% +
...+ ,
Content.., 3
...3 4
ReadAsStringAsync..4 E
(..E F
)..F G
;..G H
}// 
}00 
return11 
response11 
;11 
}22 	
}44 
}55 ïÉ
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Venta\VentaReporte_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Venta# (
{ 
public 

class 
VentaReporte_Logica $
:% & 
IVentaReporte_Logica' ;
{ 
	protected 
readonly %
IVentaReporte_Repositorio 4
_ventaReporteDatos5 G
;G H
	protected 
readonly &
IMaestrosVenta_Repositorio 5
_maestrosVentaDatos6 I
;I J
	protected 
readonly #
IEstablecimiento_Logica 2"
_establecimientoLogica3 I
;I J
	protected 
readonly 
IActorNegocioLogica .
_actorNegocioLogica/ B
;B C
public   
VentaReporte_Logica   "
(  " #%
IVentaReporte_Repositorio  # <
ventaReporteDatos  = N
,  N O&
IMaestrosVenta_Repositorio  P j
maestrosVentaDatos  k }
,  } ~$
IEstablecimiento_Logica	   ñ#
establecimientoLogica
  ó ¨
,
  ¨ ≠!
IActorNegocioLogica
  Æ ¡ 
actorNegocioLogica
  ¬ ‘
)
  ‘ ’
{!! 	
_ventaReporteDatos"" 
=""  
ventaReporteDatos""! 2
;""2 3
_maestrosVentaDatos## 
=##  !
maestrosVentaDatos##" 4
;##4 5"
_establecimientoLogica$$ "
=$$# $!
establecimientoLogica$$% :
;$$: ;
_actorNegocioLogica%% 
=%%  !
actorNegocioLogica%%" 4
;%%4 5
}&& 	
public(( 
PrincipalReportData(( ",
 ObtenerDatosParaReportePrincipal((# C
(((C D"
UserProfileSessionData((D Z
profileData(([ f
)((f g
{)) 	
var** *
TieneRolAdministradorDeNegocio** .
=**/ 0
profileData**1 <
.**< =
Empleado**= E
.**E F
TieneRol**F N
(**N O
ActorSettings**O \
.**\ ]
Default**] d
.**d e(
idRolAdministradorDeNegocio	**e Ä
)
**Ä Å
;
**Å Ç
if++ 
(++ 
profileData++ 
.++ (
CentroDeAtencionSeleccionado++ 8
==++9 ;
null++< @
&&++A C
!++D E*
TieneRolAdministradorDeNegocio++E c
)++c d
{,, 
throw-- 
new-- 
LogicaException-- )
(--) *
$str--* j
)--j k
;--k l
}.. 
var// +
establecimientosConPuntosVentas// /
=//0 1*
TieneRolAdministradorDeNegocio//2 P
?//Q R
Establecimiento//S b
.//b c
Convert//c j
(//j k#
_establecimientoLogica	//k Å
.
//Å ÇJ
<ObtenerEstablecimientosComercialesVigentesConSusPuntosVentas
//Ç æ
(
//æ ø
)
//ø ¿
.
//¿ ¡
ToList
//¡ «
(
//« »
)
//» …
)
//…  
:
//À Ã
null
//Õ —
;
//— “
var11 
data11 
=11 
new11 
PrincipalReportData11 .
(11. /
)11/ 0
{22 
FechaActual_33 
=33 
DateTimeUtil33 +
.33+ ,
FechaActual33, 7
(337 8
)338 9
,339 :
EsAdministrador44 
=44  !*
TieneRolAdministradorDeNegocio44" @
,44@ A
Establecimientos55  
=55! "*
TieneRolAdministradorDeNegocio55# A
?55B C+
establecimientosConPuntosVentas55D c
:55d e
new55f i
List55j n
<55n o
Establecimiento55o ~
>55~ 
(	55 Ä
)
55Ä Å
{
55Ç É
profileData
55Ñ è
.
55è ê2
$EstablecimientoComercialSeleccionado
55ê ¥
.
55¥ µ
ToEstablecimiento
55µ ∆
(
55∆ «
)
55« »
}
55…  
,
55  À
PuntosVentas66 
=66 *
TieneRolAdministradorDeNegocio66 =
?66> ?+
establecimientosConPuntosVentas66@ _
.66_ `

SelectMany66` j
(66j k
e66k l
=>66m o
e66p q
.66q r
CentrosAtencion	66r Å
)
66Å Ç
.
66Ç É
ToList
66É â
(
66â ä
)
66ä ã
:
66å ç
new
66é ë
List
66í ñ
<
66ñ ó
ItemGenerico
66ó £
>
66£ §
(
66§ •
)
66• ¶
{
66ß ®
profileData
66© ¥
.
66¥ µ*
CentroDeAtencionSeleccionado
66µ —
.
66— “
ToItemGenerico
66“ ‡
(
66‡ ·
)
66· ‚
}
66„ ‰
,
66‰ Â
Familias77 
=77 
_maestrosVentaDatos77 .
.77. /
ObtenerFamilias77/ >
(77> ?
)77? @
.77@ A
ToList77A G
(77G H
)77H I
}88 
;88 
if99 
(99 
!99 *
TieneRolAdministradorDeNegocio99 /
)99/ 0
data991 5
.995 6
Establecimientos996 F
.99F G
SingleOrDefault99G V
(99V W
)99W X
.99X Y
CentrosAtencion99Y h
=99i j
new99k n
List99o s
<99s t
ItemGenerico	99t Ä
>
99Ä Å
(
99Å Ç
)
99Ç É
{
99Ñ Ö
profileData
99Ü ë
.
99ë í*
CentroDeAtencionSeleccionado
99í Æ
.
99Æ Ø
ToItemGenerico
99Ø Ω
(
99Ω æ
)
99æ ø
}
99¿ ¡
;
99¡ ¬
return:: 
data:: 
;:: 
};; 	
public<< 
List<< 
<<< !
OperacionFamiliaGrupo<< )
><<) **
ObtenerVentasPorFamiliasGrupos<<+ I
(<<I J
int<<J M
idPuntoVenta<<N Z
,<<Z [
DateTime<<\ d

fechaDesde<<e o
,<<o p
DateTime<<q y

fechaHasta	<<z Ñ
,
<<Ñ Ö
bool
<<Ü ä
todasLasFamilias
<<ã õ
,
<<õ ú
int
<<ù †
[
<<† °
]
<<° ¢
idsFamilias
<<£ Æ
,
<<Æ Ø
bool
<<∞ ¥
todosLosGrupos
<<µ √
,
<<√ ƒ
int
<<≈ »
[
<<» …
]
<<…  
	idsGrupos
<<À ‘
)
<<‘ ’
{== 	
try>> 
{?? 
idsFamilias@@ 
=@@ 
todasLasFamilias@@ .
?@@/ 0
_maestrosVentaDatos@@1 D
.@@D E
ObtenerFamilias@@E T
(@@T U
)@@U V
.@@V W
Select@@W ]
(@@] ^
g@@^ _
=>@@` b
g@@c d
.@@d e
Id@@e g
)@@g h
.@@h i
ToArray@@i p
(@@p q
)@@q r
:@@s t
idsFamilias	@@u Ä
;
@@Ä Å
varAA 
idsFamiliasListAA #
=AA$ %
idsFamiliasAA& 1
.AA1 2
ToListAA2 8
(AA8 9
)AA9 :
;AA: ;
idsFamiliasListBB 
.BB  
AddBB  #
(BB# $
MaestroSettingsBB$ 3
.BB3 4
DefaultBB4 ;
.BB; <-
!IdDetalleMaestroConceptoDescuentoBB< ]
)BB] ^
;BB^ _
idsFamiliasListCC 
.CC  
AddCC  #
(CC# $
MaestroSettingsCC$ 3
.CC3 4
DefaultCC4 ;
.CC; <+
IdDetalleMaestroConceptoInteresCC< [
)CC[ \
;CC\ ]
	idsGruposDD 
=DD 
todosLosGruposDD *
?DD+ ,
_actorNegocioLogicaDD- @
.DD@ A+
ObtenerGruposActoresComercialesDDA `
(DD` a
)DDa b
.DDb c
SelectDDc i
(DDi j
gDDj k
=>DDl n
gDDo p
.DDp q
IdDDq s
)DDs t
.DDt u
ToArrayDDu |
(DD| }
)DD} ~
:	DD Ä
	idsGrupos
DDÅ ä
;
DDä ã
varEE 
idsTipoTransaccionEE &
=EE' (
DiccionarioEE) 4
.EE4 5O
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesEE5 x
;EEx y
varFF 
idEstadoFF 
=FF 
MaestroSettingsFF .
.FF. /
DefaultFF/ 6
.FF6 7,
 IdDetalleMaestroEstadoConfirmadoFF7 W
;FFW X
ListGG 
<GG !
OperacionFamiliaGrupoGG *
>GG* +#
ventasPorFamiliasGruposGG, C
=GGD E
_ventaReporteDatosGGF X
.GGX Y*
ObtenerVentasPorFamiliasGruposGGY w
(GGw x
idsTipoTransaccion	GGx ä
,
GGä ã
idEstado
GGå î
,
GGî ï
idPuntoVenta
GGñ ¢
,
GG¢ £

fechaDesde
GG§ Æ
,
GGÆ Ø

fechaHasta
GG∞ ∫
,
GG∫ ª
idsFamiliasList
GGº À
.
GGÀ Ã
ToArray
GGÃ ”
(
GG” ‘
)
GG‘ ’
,
GG’ ÷
	idsGrupos
GG◊ ‡
)
GG‡ ·
.
GG· ‚
ToList
GG‚ Ë
(
GGË È
)
GGÈ Í
;
GGÍ Î
returnHH #
ventasPorFamiliasGruposHH .
;HH. /
}II 
catchJJ 
(JJ 
	ExceptionJJ 
eJJ 
)JJ 
{KK 
throwLL 
newLL 
LogicaExceptionLL )
(LL) *
$strLL* `
,LL` a
eLLb c
)LLc d
;LLd e
}MM 
}NN 	
publicOO 
ListOO 
<OO 
OperacionGrupoOO "
>OO" #"
ObtenerVentasPorGruposOO$ :
(OO: ;
intOO; >
idPuntoVentaOO? K
,OOK L
DateTimeOOM U

fechaDesdeOOV `
,OO` a
DateTimeOOb j

fechaHastaOOk u
,OOu v
boolOOw {
todosLosGrupos	OO| ä
,
OOä ã
int
OOå è
[
OOè ê
]
OOê ë
	idsGrupos
OOí õ
)
OOõ ú
{PP 	
tryQQ 
{RR 
	idsGruposSS 
=SS 
todosLosGruposSS *
?SS+ ,
_actorNegocioLogicaSS- @
.SS@ A+
ObtenerGruposActoresComercialesSSA `
(SS` a
)SSa b
.SSb c
SelectSSc i
(SSi j
gSSj k
=>SSl n
gSSo p
.SSp q
IdSSq s
)SSs t
.SSt u
ToArraySSu |
(SS| }
)SS} ~
:	SS Ä
	idsGrupos
SSÅ ä
;
SSä ã
varTT 
idsTipoTransaccionTT &
=TT' (
DiccionarioTT) 4
.TT4 5O
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesTT5 x
;TTx y
varUU 
idEstadoUU 
=UU 
MaestroSettingsUU .
.UU. /
DefaultUU/ 6
.UU6 7,
 IdDetalleMaestroEstadoConfirmadoUU7 W
;UUW X
ListVV 
<VV 
OperacionGrupoVV #
>VV# $
ventasPorGruposVV% 4
=VV5 6
_ventaReporteDatosVV7 I
.VVI J"
ObtenerVentasPorGruposVVJ `
(VV` a
idsTipoTransaccionVVa s
,VVs t
idEstadoVVu }
,VV} ~
idPuntoVenta	VV ã
,
VVã å

fechaDesde
VVç ó
,
VVó ò

fechaHasta
VVô £
,
VV£ §
	idsGrupos
VV• Æ
)
VVÆ Ø
.
VVØ ∞
ToList
VV∞ ∂
(
VV∂ ∑
)
VV∑ ∏
;
VV∏ π
varWW !
gruposVentasPorGruposWW )
=WW* +
ventasPorGruposWW, ;
.WW; <
GroupByWW< C
(WWC D
gWWD E
=>WWF H
newWWI L
{WWM N
gWWO P
.WWP Q
IdGrupoWWQ X
,WWX Y
gWWZ [
.WW[ \
NombreGrupoWW\ g
,WWg h
gWWi j
.WWj k 
DocumentoResponsableWWk 
,	WW Ä
g
WWÅ Ç
.
WWÇ É
NombreResponsable
WWÉ î
,
WWî ï
g
WWñ ó
.
WWó ò
	IdCliente
WWò °
,
WW° ¢
g
WW£ §
.
WW§ •
NombreCliente
WW• ≤
}
WW≥ ¥
)
WW¥ µ
;
WWµ ∂
varXX 
	resultadoXX 
=XX !
gruposVentasPorGruposXX  5
.XX5 6
SelectXX6 <
(XX< =
gXX= >
=>XX? A
newXXB E
OperacionGrupoXXF T
(XXT U
)XXU V
{YY 
IdGrupoZZ 
=ZZ 
gZZ 
.ZZ  
KeyZZ  #
.ZZ# $
IdGrupoZZ$ +
,ZZ+ ,
NombreGrupo[[ 
=[[  !
g[[" #
.[[# $
Key[[$ '
.[[' (
NombreGrupo[[( 3
,[[3 4 
DocumentoResponsable\\ (
=\\) *
g\\+ ,
.\\, -
Key\\- 0
.\\0 1 
DocumentoResponsable\\1 E
,\\E F
NombreResponsable]] %
=]]& '
g]]( )
.]]) *
Key]]* -
.]]- .
NombreResponsable]]. ?
,]]? @
	IdCliente^^ 
=^^ 
g^^  !
.^^! "
Key^^" %
.^^% &
	IdCliente^^& /
,^^/ 0
NombreCliente__ !
=__" #
g__$ %
.__% &
Key__& )
.__) *
NombreCliente__* 7
,__7 8
InfoComprobante`` #
=``$ %
String``& ,
.``, -
Join``- 1
(``1 2
$str``2 6
,``6 7
g``8 9
.``9 :
Select``: @
(``@ A
gg``A C
=>``D F
gg``G I
.``I J
InfoComprobante``J Y
)``Y Z
.``Z [
Distinct``[ c
(``c d
)``d e
.``e f
ToArray``f m
(``m n
)``n o
)``o p
,``p q
NumeroOperacionesaa %
=aa& '
gaa( )
.aa) *
Selectaa* 0
(aa0 1
ggaa1 3
=>aa4 6
ggaa7 9
.aa9 :
InfoComprobanteaa: I
)aaI J
.aaJ K
DistinctaaK S
(aaS T
)aaT U
.aaU V
CountaaV [
(aa[ \
)aa\ ]
,aa] ^
Importebb 
=bb 
gbb 
.bb  
Sumbb  #
(bb# $
ggbb$ &
=>bb' )
ggbb* ,
.bb, -
ImporteTotalbb- 9
)bb9 :
}cc 
)cc 
.cc 
ToListcc 
(cc 
)cc 
;cc 
returndd 
	resultadodd  
;dd  !
}ee 
catchff 
(ff 
	Exceptionff 
eff 
)ff 
{gg 
throwhh 
newhh 
LogicaExceptionhh )
(hh) *
$strhh* W
,hhW X
ehhY Z
)hhZ [
;hh[ \
}ii 
}jj 	
publickk 
Listkk 
<kk #
OperacionGrupoDetalladokk +
>kk+ ,*
ObtenerVentasPorGrupoDetalladokk- K
(kkK L
intkkL O
idPuntoVentakkP \
,kk\ ]
DateTimekk^ f

fechaDesdekkg q
,kkq r
DateTimekks {

fechaHasta	kk| Ü
,
kkÜ á
int
kkà ã
idGrupo
kkå ì
)
kkì î
{ll 	
trymm 
{nn 
varoo 
idsTipoTransaccionoo &
=oo' (
Diccionariooo) 4
.oo4 5O
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesoo5 x
;oox y
varpp 
idEstadopp 
=pp 
MaestroSettingspp .
.pp. /
Defaultpp/ 6
.pp6 7,
 IdDetalleMaestroEstadoConfirmadopp7 W
;ppW X
Listqq 
<qq #
OperacionGrupoDetalladoqq ,
>qq, -#
ventasPorGrupoDetalladoqq. E
=qqF G
_ventaReporteDatosqqH Z
.qqZ [*
ObtenerVentasPorGrupoDetalladoqq[ y
(qqy z
idsTipoTransaccion	qqz å
,
qqå ç
idEstado
qqé ñ
,
qqñ ó
idPuntoVenta
qqò §
,
qq§ •

fechaDesde
qq¶ ∞
,
qq∞ ±

fechaHasta
qq≤ º
,
qqº Ω
idGrupo
qqæ ≈
)
qq≈ ∆
.
qq∆ «
ToList
qq« Õ
(
qqÕ Œ
)
qqŒ œ
;
qqœ –
returnrr #
ventasPorGrupoDetalladorr .
;rr. /
}ss 
catchtt 
(tt 
	Exceptiontt 
ett 
)tt 
{uu 
throwvv 
newvv 
LogicaExceptionvv )
(vv) *
$strvv* `
,vv` a
evvb c
)vvc d
;vvd e
}ww 
}xx 	
}yy 
}zz È8
SD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Venta\ConsultaMasivaVentaLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Venta# (
{ 
public 

class %
ConsultaMasivaVentaLogica *
:+ ,&
IConsultaMasivaVentaLogica- G
{ 
private 
readonly ,
 IConsultaTransaccion_Repositorio 9+
_consultaTransaccionRepositorio: Y
;Y Z
public %
ConsultaMasivaVentaLogica (
(( ),
 IConsultaTransaccion_Repositorio) I*
consultaTransaccionRepositorioJ h
)h i
{ 	
this 
. +
_consultaTransaccionRepositorio 0
=1 2*
consultaTransaccionRepositorio3 Q
;Q R
} 	
public 
List 
< 6
*TransaccionPorSerieDeComprobanteYCategoria >
>> ??
3ObtenerComprobanteVentaPorSerieYCategoriaConfirmado@ s
(s t
intt w
[w x
]x y
idsPuntosDeVentas	z ã
,
ã å
DateTime
ç ï

fechaDesde
ñ †
,
† °
DateTime
¢ ™

fechaHasta
´ µ
)
µ ∂
{ 	
var 
	resultado 
= +
_consultaTransaccionRepositorio ;
.; <?
3ObtenerTransaccionesPorSerieDeComprobanteYCategoria< o
(o p
idsPuntosDeVentas	p Å
,
Å Ç
Diccionario
É é
.
é èQ
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
è “
,
“ ”
MaestroSettings
‘ „
.
„ ‰
Default
‰ Î
.
Î Ï.
 IdDetalleMaestroEstadoConfirmado
Ï å
,
å ç

fechaDesde
é ò
,
ò ô

fechaHasta
ö §
)
§ •
.
• ¶
ToList
¶ ¨
(
¨ ≠
)
≠ Æ
;
Æ Ø
foreach 
( 
var 
item 
in  
	resultado! *
.* +
Where+ 0
(0 1
r1 2
=>3 5
r6 7
.7 8
IdTipoComprobante8 I
==J L
MaestroSettingsM \
.\ ]
Default] d
.d e3
&IdDetalleMaestroComprobanteNotaCredito	e ã
)
ã å
)
å ç
{ 
item 
. 
Cantidad 
*=  
-! "
$num" #
;# $
item 
. 
Importe 
*= 
-  !
$num! "
;" #
} 
return   
	resultado   
;   
}!! 	
public"" 
List"" 
<"" 6
*TransaccionPorSerieDeComprobanteYCategoria"" >
>""> ??
3ObtenerComprobanteVentaPorSerieYCategoriaInvalidado""@ s
(""s t
int""t w
[""w x
]""x y
idsPuntosDeVentas	""z ã
,
""ã å
DateTime
""ç ï

fechaDesde
""ñ †
,
""† °
DateTime
""¢ ™

fechaHasta
""´ µ
)
""µ ∂
{## 	
var$$ 
	resultado$$ 
=$$ +
_consultaTransaccionRepositorio$$ ;
.$$; <?
3ObtenerTransaccionesPorSerieDeComprobanteYCategoria$$< o
($$o p
idsPuntosDeVentas	$$p Å
,
$$Å Ç
Diccionario
$$É é
.
$$é èQ
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
$$è “
,
$$“ ”
MaestroSettings
$$‘ „
.
$$„ ‰
Default
$$‰ Î
.
$$Î Ï.
 IdDetalleMaestroEstadoInvalidado
$$Ï å
,
$$å ç

fechaDesde
$$é ò
,
$$ò ô

fechaHasta
$$ö §
)
$$§ •
.
$$• ¶
ToList
$$¶ ¨
(
$$¨ ≠
)
$$≠ Æ
;
$$Æ Ø
return%% 
	resultado%% 
;%% 
}&& 	
public'' 
List'' 
<'' 5
)TransaccionPorSerieDeComprobanteYConcepto'' =
>''= >>
2ObtenerComprobanteVentaPorSerieYConceptoConfirmado''? q
(''q r
int''r u
[''u v
]''v w
	idsSeries	''x Å
,
''Å Ç
DateTime
''É ã

fechaDesde
''å ñ
,
''ñ ó
DateTime
''ò †

fechaHasta
''° ´
)
''´ ¨
{(( 	
var)) 
	resultado)) 
=)) +
_consultaTransaccionRepositorio)) ;
.)); <>
2ObtenerTransaccionesPorSerieDeComprobanteYConcepto))< n
())n o
	idsSeries))o x
,))x y
Diccionario	))z Ö
.
))Ö ÜQ
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
))Ü …
,
))…  
MaestroSettings
))À ⁄
.
))⁄ €
Default
))€ ‚
.
))‚ „.
 IdDetalleMaestroEstadoConfirmado
))„ É
,
))É Ñ

fechaDesde
))Ö è
,
))è ê

fechaHasta
))ë õ
)
))õ ú
.
))ú ù
ToList
))ù £
(
))£ §
)
))§ •
;
))• ¶
foreach** 
(** 
var** 
item** 
in**  
	resultado**! *
.*** +
Where**+ 0
(**0 1
r**1 2
=>**3 5
r**6 7
.**7 8
IdTipoComprobante**8 I
==**J L
MaestroSettings**M \
.**\ ]
Default**] d
.**d e3
&IdDetalleMaestroComprobanteNotaCredito	**e ã
)
**ã å
)
**å ç
{++ 
item,, 
.,, 
Cantidad,, 
*=,,  
-,,! "
$num,," #
;,,# $
item-- 
.-- 
Importe-- 
*=-- 
---  !
$num--! "
;--" #
}.. 
return00 
	resultado00 
;00 
}11 	
public22 
List22 
<22 5
)TransaccionPorSerieDeComprobanteYConcepto22 =
>22= >>
2ObtenerComprobanteVentaPorSerieYConceptoInvalidado22? q
(22q r
int22r u
[22u v
]22v w
	idsSeries	22x Å
,
22Å Ç
DateTime
22É ã

fechaDesde
22å ñ
,
22ñ ó
DateTime
22ò †

fechaHasta
22° ´
)
22´ ¨
{33 	
var44 
	resultado44 
=44 +
_consultaTransaccionRepositorio44 ;
.44; <>
2ObtenerTransaccionesPorSerieDeComprobanteYConcepto44< n
(44n o
	idsSeries44o x
,44x y
Diccionario	44z Ö
.
44Ö ÜQ
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
44Ü …
,
44…  
MaestroSettings
44À ⁄
.
44⁄ €
Default
44€ ‚
.
44‚ „.
 IdDetalleMaestroEstadoInvalidado
44„ É
,
44É Ñ

fechaDesde
44Ö è
,
44è ê

fechaHasta
44ë õ
)
44õ ú
.
44ú ù
ToList
44ù £
(
44£ §
)
44§ •
;
44• ¶
return55 
	resultado55 
;55 
}66 	
}77 
}88 ∑˙
XD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Venta\OperacionLogica_InvalidarVenta.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public 
OperationResult +
ResolverInvalidarOperacionVenta >
(> ?"
OperacionModificatoria? U"
operacionModificatoriaV l
,l m
longn r
idOrdenVentas 
,	 Ä
string
Å á
observacion
à ì
,
ì î$
UserProfileSessionData
ï ´
sesionUsuario
¨ π
)
π ∫
{ 	
try 
{ 
var 
fechaActual 
=  !
DateTimeUtil" .
.. /
FechaActual/ :
(: ;
); <
;< =
var 

ordenVenta 
=  
new! $
OrdenDeVenta% 1
(1 2"
transaccionRepositorio2 H
.H IE
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado	I Å
(
Å Ç
idOrdenVenta
Ç é
)
é è
)
è ê
;
ê ë
Estado_transaccion   ""
estadoDeLaOrdenDeVenta  # 9
=  : ;
new  < ?
Estado_transaccion  @ R
(  R S
idOrdenVenta  S _
,  _ `
sesionUsuario  a n
.  n o
Empleado  o w
.  w x
Id  x z
,  z {
MaestroSettings	  | ã
.
  ã å
Default
  å ì
.
  ì î.
 IdDetalleMaestroEstadoInvalidado
  î ¥
,
  ¥ µ
fechaActual
  ∂ ¡
,
  ¡ ¬
$str!! A
)!!A B
;!!B C
List## 
<## 
Cuota## 
>## 
cuotasModificadas## -
=##. /
new##0 3
List##4 8
<##8 9
Cuota##9 >
>##> ?
(##? @
)##@ A
;##A B
foreach$$ 
($$ 
var$$ 
cuota$$ "
in$$# %

ordenVenta$$& 0
.$$0 1
Cuotas$$1 7
($$7 8
)$$8 9
.$$9 :
OrderByDescending$$: K
($$K L
c$$L M
=>$$N P
c$$Q R
.$$R S
fecha_vencimiento$$S d
)$$d e
)$$e f
{%% 
if&& 
(&& 
cuota&& 
.&& 
saldo&& #
>&&$ %
$num&&& '
)&&' (
{'' 
cuota(( 
.(( 
revocado(( &
=((' (
cuota(() .
.((. /
saldo((/ 4
;((4 5
cuota)) 
.)) 
saldo)) #
=))$ %
cuota))& +
.))+ ,
total)), 1
-))2 3
cuota))4 9
.))9 :
pago_a_cuenta)): G
-))H I
cuota))J O
.))O P
revocado))P X
;))X Y
cuotasModificadas** )
.**) *
Add*** -
(**- .
cuota**. 3
)**3 4
;**4 5
}++ 
},, "
operacionModificatoria.. &
...& '1
%NuevosEstadosTransaccionesModificadas..' L
=..M N
new..O R
List..S W
<..W X
Estado_transaccion..X j
>..j k
{..l m#
estadoDeLaOrdenDeVenta	..n Ñ
}
..Ö Ü
;
..Ü á"
operacionModificatoria// &
.//& '
CuotasModificadas//' 8
=//9 :
cuotasModificadas//; L
;//L M
var11 
	resultado11 
=11 4
(AfectarInventarioFisicoYGuardarOperacion11  H
(11H I"
operacionModificatoria11I _
,11_ `
sesionUsuario11a n
)11n o
;11o p
if22 
(22 
	resultado22 
.22 
code_result22 )
==22* ,
OperationResultEnum22- @
.22@ A
Success22A H
)22H I
{33 
if44 
(44 

ordenVenta44 "
.44" #
EstaTransmitido44# 2
(442 3
)443 4
)444 5
{55 
OperationResult66 '
resultadoEFactura66( 9
=66: ;"
facturacionRepositorio66< R
.66R S%
ActualizarEstadoDocumento66S l
(66l m
idOrdenVenta66m y
,66y z'
EstadoDocumentoElectronico	66{ ï
.
66ï ñ
Anulado
66ñ ù
,
66ù û0
"EstadoSigescomDocumentoElectronico
66ü ¡
.
66¡ ¬

Invalidado
66¬ Ã
)
66Ã Õ
;
66Õ Œ
if77 
(77 
resultadoEFactura77 -
.77- .
code_result77. 9
!=77: <
OperationResultEnum77= P
.77P Q
Success77Q X
)77X Y
{88 
	resultado99 %
.99% &

exceptions99& 0
.990 1
Add991 4
(994 5
resultadoEFactura995 F
.99F G

exceptions99G Q
.99Q R
First99R W
(99W X
)99X Y
)99Y Z
;99Z [
}:: 
};; 
}<< 
return== 
	resultado==  
;==  !
}>> 
catch?? 
(?? 
	Exception?? 
e?? 
)?? 
{@@ 
throwAA 
newAA 
LogicaExceptionAA )
(AA) *
$strAA* g
,AAg h
eAAi j
)AAj k
;AAk l
}BB 
}CC 	
publicEE 
OperationResultEE 
InvalidarVentaEE -
(EE- .
InvalidarVentaEE. <
invalidarVentaEE= K
,EEK L"
UserProfileSessionDataEEM c
sesionUsuarioEEd q
)EEq r
{FF 	
tryGG 
{HH 
DateTimeII 
fechaActualII $
=II% &
DateTimeUtilII' 3
.II3 4
FechaActualII4 ?
(II? @
)II@ A
;IIA B
ListJJ 
<JJ 
CuotaJJ 
>JJ 
cuotasModificadasJJ -
=JJ. /
newJJ0 3
ListJJ4 8
<JJ8 9
CuotaJJ9 >
>JJ> ?
(JJ? @
)JJ@ A
;JJA B
ListKK 
<KK 
Estado_transaccionKK '
>KK' ($
nuevosEstadosTransaccionKK) A
=KKB C
newKKD G
ListKKH L
<KKL M
Estado_transaccionKKM _
>KK_ `
(KK` a
)KKa b
;KKb c
ListLL 
<LL 
Detalle_transaccionLL (
>LL( ))
detallesTransaccionAModificarLL* G
=LLH I
newLLJ M
ListLLN R
<LLR S
Detalle_transaccionLLS f
>LLf g
(LLg h
)LLh i
;LLi j
varMM 

ordenVentaMM 
=MM  
newMM! $
OrdenDeVentaMM% 1
(MM1 2"
transaccionRepositorioMM2 H
.MMH I.
"ObtenerTransaccionInclusiveEstadosMMI k
(MMk l
invalidarVentaMMl z
.MMz {
IdMM{ }
)MM} ~
)MM~ 
;	MM Ä
varNN 
ventaNN 
=NN 
newNN 
VentaNN  %
(NN% &"
transaccionRepositorioNN& <
.NN< =.
"ObtenerTransaccionInclusiveEstadosNN= _
(NN_ `

ordenVentaNN` j
.NNj k
IdVentaNNk r
)NNr s
)NNs t
;NNt u
varOO !
operacionInvalidacionOO )
=OO* +
newOO, /!
OperacionInvalidacionOO0 E
(OOE F
ventaOOF K
,OOK L

ordenVentaOOM W
,OOW X
fechaActualOOY d
,OOd e
invalidarVentaOOf t
.OOt u

EsDiferidaOOu 
,	OO Ä
invalidarVenta
OOÅ è
.
OOè ê
Observacion
OOê õ
,
OOõ ú
invalidarVenta
OOù ´
.
OO´ ¨
Pago
OO¨ ∞
,
OO∞ ±
sesionUsuario
OO≤ ø
)
OOø ¿
;
OO¿ ¡&
ValidarInvalidacionDeVentaQQ *
(QQ* +!
operacionInvalidacionQQ+ @
.QQ@ A

OrdenVentaQQA K
)QQK L
;QQL M
permisos_LogicaRR 
.RR  
ValidarAccionRR  -
(RR- .!
operacionInvalidacionRR. C
.RRC D

IdEmpleadoRRD N
,RRN O
MaestroSettingsRRP _
.RR_ `
DefaultRR` g
.RRg h,
IdDetalleMaestroAccionInvalidar	RRh á
,
RRá à!
TransaccionSettings
RRâ ú
.
RRú ù
Default
RRù §
.
RR§ •+
IdTipoTransaccionOrdenDeVenta
RR• ¬
,
RR¬ √#
operacionInvalidacion
RRƒ Ÿ
.
RRŸ ⁄
IdUnidadDeNegocio
RR⁄ Î
)
RRÎ Ï
;
RRÏ ÌA
5CalcularDetallesYGenerarDetallesAModificarAlInvalidarSS E
(SSE F!
operacionInvalidacionSSF [
,SS[ \$
nuevosEstadosTransaccionSS] u
,SSu v*
detallesTransaccionAModificar	SSw î
)
SSî ï
;
SSï ñ
TransaccionUU 
invalidacionVentaUU -
=UU. /%
GenerarInvalidarOperacionUU0 I
(UUI J!
operacionInvalidacionUUJ _
)UU_ `
;UU` a
TransaccionVV "
ordenInvalidacionVentaVV 2
=VV3 4*
GenerarOrdenInvalidarOperacionVV5 S
(VVS T
invalidacionVentaVVT e
,VVe f!
operacionInvalidacionVVg |
)VV| }
;VV} ~
TransaccionWW 
pagoWW  
=WW! ")
GenerarPagoInvalidarOperacionWW# @
(WW@ A
invalidacionVentaWWA R
,WWR S"
ordenInvalidacionVentaWWT j
,WWj k"
operacionInvalidacion	WWl Å
)
WWÅ Ç
;
WWÇ É
TransaccionXX 
movimientoAlmacenXX -
=XX. /6
*GenerarMovimientoAlmacenInvalidarOperacionXX0 Z
(XXZ [
invalidacionVentaXX[ l
,XXl m#
ordenInvalidacionVenta	XXn Ñ
,
XXÑ Ö#
operacionInvalidacion
XXÜ õ
,
XXõ ú
sesionUsuario
XXù ™
)
XX™ ´
;
XX´ ¨>
2GenerarEstadosOperacionInvalidadaYCuotasActualizarZZ B
(ZZB C$
nuevosEstadosTransaccionZZC [
,ZZ[ \
cuotasModificadasZZ] n
,ZZn o"
operacionInvalidacion	ZZp Ö
)
ZZÖ Ü
;
ZZÜ á
var[[ (
movimientoEconomicoConPuntos[[ 0
=[[1 2
venta[[3 8
.[[8 9
ObtenerPagos[[9 E
([[E F
)[[F G
.[[G H
SingleOrDefault[[H W
([[W X
p[[X Y
=>[[Z \
p[[] ^
.[[^ _
TrazaDePago[[_ j
([[j k
)[[k l
.[[l m
MedioDePago[[m x
([[x y
)[[y z
.[[z {
id[[{ }
==	[[~ Ä
MaestroSettings
[[Å ê
.
[[ê ë
Default
[[ë ò
.
[[ò ô/
!IdDetalleMaestroMedioDepagoPuntos
[[ô ∫
)
[[∫ ª
;
[[ª º
List\\ 
<\\ 
Transaccion\\  
>\\  !#
transaccionesAModificar\\" 9
=\\: ;*
GenerarTransaccionesAModificar\\< Z
(\\Z [(
movimientoEconomicoConPuntos\\[ w
)\\w x
;\\x y
var^^ "
operacionModificatoria^^ *
=^^+ ,
new^^- 0"
OperacionModificatoria^^1 G
(^^G H
)^^H I
{^^J K
	Operacion^^L U
=^^V W
invalidacionVenta^^X i
,^^i j
OrdenDeOperacion^^k {
=^^| }#
ordenInvalidacionVenta	^^~ î
,
^^î ï!
MovimientoEconomico
^^ñ ©
=
^^™ ´
pago
^^¨ ∞
,
^^∞ ±
MovimientosBienes
^^≤ √
=
^^ƒ ≈
movimientoAlmacen
^^∆ ◊
!=
^^ÿ ⁄
null
^^€ ﬂ
?
^^‡ ·
new
^^‚ Â
List
^^Ê Í
<
^^Í Î
Transaccion
^^Î ˆ
>
^^ˆ ˜
(
^^˜ ¯
)
^^¯ ˘
{
^^˙ ˚
movimientoAlmacen
^^¸ ç
}
^^é è
:
^^ê ë
null
^^í ñ
,
^^ñ ó3
%NuevosEstadosTransaccionesModificadas
^^ò Ω
=
^^æ ø&
nuevosEstadosTransaccion
^^¿ ÿ
,
^^ÿ Ÿ
CuotasModificadas
^^⁄ Î
=
^^Ï Ì
cuotasModificadas
^^Ó ˇ
,
^^ˇ Ä&
TransaccionesModificadas
^^Å ô
=
^^ö õ%
transaccionesAModificar
^^ú ≥
,
^^≥ ¥,
DetallesTransaccionModificados
^^µ ”
=
^^‘ ’+
detallesTransaccionAModificar
^^÷ Û
}
^^Ù ı
;
^^ı ˆ
var__ !
resultadoInvalidacion__ )
=__* +4
(AfectarInventarioFisicoYGuardarOperacion__, T
(__T U"
operacionModificatoria__U k
,__k l
sesionUsuario__m z
)__z {
;__{ |
if`` 
(`` !
resultadoInvalidacion`` )
.``) *
code_result``* 5
==``6 8
OperationResultEnum``9 L
.``L M
Success``M T
&&``U W!
operacionInvalidacion``X m
.``m n

OrdenVenta``n x
.``x y
EstaTransmitido	``y à
(
``à â
)
``â ä
)
``ä ã
{aa 
OperationResultbb #
resultadoEFacturabb$ 5
=bb6 7"
facturacionRepositoriobb8 N
.bbN O%
ActualizarEstadoDocumentobbO h
(bbh i!
operacionInvalidacionbbi ~
.bb~ 

OrdenVenta	bb â
.
bbâ ä
Id
bbä å
,
bbå ç(
EstadoDocumentoElectronico
bbé ®
.
bb® ©
Anulado
bb© ∞
,
bb∞ ±0
"EstadoSigescomDocumentoElectronico
bb≤ ‘
.
bb‘ ’

Invalidado
bb’ ﬂ
)
bbﬂ ‡
;
bb‡ ·
ifcc 
(cc 
resultadoEFacturacc )
.cc) *
code_resultcc* 5
!=cc6 8
OperationResultEnumcc9 L
.ccL M
SuccessccM T
)ccT U
{dd !
resultadoInvalidacionee -
.ee- .

exceptionsee. 8
.ee8 9
Addee9 <
(ee< =
resultadoEFacturaee= N
.eeN O

exceptionseeO Y
.eeY Z
FirsteeZ _
(ee_ `
)ee` a
)eea b
;eeb c
}ff 
}gg 
returnhh !
resultadoInvalidacionhh ,
;hh, -
}ii 
catchjj 
(jj 
	Exceptionjj 
ejj 
)jj 
{kk 
throwll 
newll 
	Exceptionll #
(ll# $
$strll$ N
,llN O
ellP Q
)llQ R
;llR S
}mm 
}nn 	
publicpp 
voidpp A
5CalcularDetallesYGenerarDetallesAModificarAlInvalidarpp I
(ppI J!
OperacionInvalidacionppJ _!
operacionInvalidacionpp` u
,ppu v
Listppw {
<pp{ |
Estado_transaccion	pp| é
>
ppé è&
nuevosEstadosTransaccion
ppê ®
,
pp® ©
List
pp™ Æ
<
ppÆ Ø!
Detalle_transaccion
ppØ ¬
>
pp¬ √+
detallesTransaccionAModificar
ppƒ ·
)
pp· ‚
{qq 	
ifrr 
(rr !
operacionInvalidacionrr %
.rr% &#
EsOrdenOrigenCompletadarr& =
)rr= >
{ss !
operacionInvalidacionuu %
.uu% &.
"DetallesMovimientoAlmacenOperacionuu& H
=uuI J!
operacionInvalidacionuuK `
.uu` a#
DetallesBienesOperacionuua x
;uux y
}vv 
elseww 
ifww 
(ww !
operacionInvalidacionww *
.ww* + 
EsOrdenOrigenParcialww+ ?
)ww? @
{xx 
varyy #
detallesOperacionOrigenyy +
=yy, -!
operacionInvalidacionyy. C
.yyC D
DetallesOperacionyyD U
;yyU V
varzz 
ordenAlmacenzz  
=zz! "
ObtenerOrdenAlmacenzz# 6
(zz6 7!
operacionInvalidacionzz7 L
.zzL M

OrdenVentazzM W
.zzW X
IdzzX Z
)zzZ [
;zz[ \!
operacionInvalidacion{{ %
.{{% &
DetallesOperacion{{& 7
.{{7 8
ForEach{{8 ?
({{? @
di{{@ B
=>{{C E
di{{F H
.{{H I

cantidad_1{{I S
={{T U
ordenAlmacen{{V b
.{{b c
Detalles{{c k
.{{k l
Where{{l q
({{q r
d{{r s
=>{{t v
d{{w x
.{{x y

IdConcepto	{{y É
==
{{Ñ Ü
di
{{á â
.
{{â ä!
id_concepto_negocio
{{ä ù
)
{{ù û
.
{{û ü
Sum
{{ü ¢
(
{{¢ £
d
{{£ §
=>
{{• ß
d
{{® ©
.
{{© ™
	Pendiente
{{™ ≥
)
{{≥ ¥
)
{{¥ µ
;
{{µ ∂#
detallesOperacionOrigen|| '
.||' (
ForEach||( /
(||/ 0
di||0 2
=>||3 5
di||6 8
.||8 9

cantidad_1||9 C
=||D E
ordenAlmacen||F R
.||R S
Detalles||S [
.||[ \
Where||\ a
(||a b
d||b c
=>||d f
d||g h
.||h i

IdConcepto||i s
==||t v
di||w y
.||y z 
id_concepto_negocio	||z ç
)
||ç é
.
||é è
Sum
||è í
(
||í ì
d
||ì î
=>
||ï ó
d
||ò ô
.
||ô ö
	Pendiente
||ö £
)
||£ §
)
||§ •
;
||• ¶$
nuevosEstadosTransaccion}} (
.}}( )
Add}}) ,
(}}, -
new}}- 0
Estado_transaccion}}1 C
(}}C D!
operacionInvalidacion}}D Y
.}}Y Z

OrdenVenta}}Z d
.}}d e
Id}}e g
,}}g h!
operacionInvalidacion}}i ~
.}}~ 

IdEmpleado	}} â
,
}}â ä
MaestroSettings
}}ã ö
.
}}ö õ
Default
}}õ ¢
.
}}¢ £.
 IdDetalleMaestroEstadoCompletada
}}£ √
,
}}√ ƒ#
operacionInvalidacion
}}≈ ⁄
.
}}⁄ €
FechaActual
}}€ Ê
,
}}Ê Á
$str
}}Ë ó
)
}}ó ò
)
}}ò ô
;
}}ô ö
foreach 
( 
var "
detalleOperacionOrigen 3
in4 6#
detallesOperacionOrigen7 N
)N O
{
ÄÄ 
var
ÅÅ 
detalle
ÅÅ 
=
ÅÅ  !$
transaccionRepositorio
ÅÅ" 8
.
ÅÅ8 9'
ObtenerDetalleTransaccion
ÅÅ9 R
(
ÅÅR S$
detalleOperacionOrigen
ÅÅS i
.
ÅÅi j
id
ÅÅj l
)
ÅÅl m
;
ÅÅm n
detalle
ÇÇ 
.
ÇÇ 

cantidad_1
ÇÇ &
=
ÇÇ' ($
detalleOperacionOrigen
ÇÇ) ?
.
ÇÇ? @

cantidad_1
ÇÇ@ J
;
ÇÇJ K+
detallesTransaccionAModificar
ÉÉ 1
.
ÉÉ1 2
Add
ÉÉ2 5
(
ÉÉ5 6
detalle
ÉÉ6 =
)
ÉÉ= >
;
ÉÉ> ?
}
ÑÑ #
operacionInvalidacion
ÜÜ %
.
ÜÜ% &0
"DetallesMovimientoAlmacenOperacion
ÜÜ& H
=
ÜÜI J
new
ÜÜK N
List
ÜÜO S
<
ÜÜS T!
Detalle_transaccion
ÜÜT g
>
ÜÜg h
(
ÜÜh i
)
ÜÜi j
;
ÜÜj k
var
áá '
detallesMovimientoAlmacen
áá -
=
áá. /
ordenAlmacen
áá0 <
.
áá< =
Detalles
áá= E
.
ááE F
Where
ááF K
(
ááK L
d
ááL M
=>
ááN P
d
ááQ R
.
ááR S
	Entregado
ááS \
>
áá] ^
$num
áá_ `
)
áá` a
.
ááa b
ToList
ááb h
(
ááh i
)
áái j
;
ááj k
foreach
àà 
(
àà 
var
àà 
detalle
àà $
in
àà% ''
detallesMovimientoAlmacen
àà( A
)
ààA B
{
ââ 
var
ää 
detalleAlmacen
ää &
=
ää' (#
operacionInvalidacion
ää) >
.
ää> ?%
DetallesBienesOperacion
ää? V
.
ääV W
First
ääW \
(
ää\ ]
d
ää] ^
=>
ää_ a
d
ääb c
.
ääc d!
id_concepto_negocio
ääd w
==
ääx z
detalleää{ Ç
.ääÇ É

IdConceptoääÉ ç
)ääç é
;ääé è
detalleAlmacen
ãã "
.
ãã" #
cantidad
ãã# +
=
ãã, -
detalle
ãã. 5
.
ãã5 6
	Entregado
ãã6 ?
;
ãã? @#
operacionInvalidacion
åå )
.
åå) *0
"DetallesMovimientoAlmacenOperacion
åå* L
.
ååL M
Add
ååM P
(
ååP Q
detalleAlmacen
ååQ _
)
åå_ `
;
åå` a
}
çç 
}
éé 
else
èè 
if
èè 
(
èè #
operacionInvalidacion
èè *
.
èè* +$
EsOrdenOrigenPendiente
èè+ A
)
èèA B
{
êê 
var
ëë %
detallesOperacionOrigen
ëë +
=
ëë, -#
operacionInvalidacion
ëë. C
.
ëëC D
DetallesOperacion
ëëD U
;
ëëU V%
detallesOperacionOrigen
íí '
.
íí' (
ForEach
íí( /
(
íí/ 0
di
íí0 2
=>
íí3 5
di
íí6 8
.
íí8 9

cantidad_1
íí9 C
=
ííD E
di
ííF H
.
ííH I
cantidad
ííI Q
)
ííQ R
;
ííR S&
nuevosEstadosTransaccion
ìì (
.
ìì( )
Add
ìì) ,
(
ìì, -
new
ìì- 0 
Estado_transaccion
ìì1 C
(
ììC D#
operacionInvalidacion
ììD Y
.
ììY Z

OrdenVenta
ììZ d
.
ììd e
Id
ììe g
,
ììg h#
operacionInvalidacion
ììi ~
.
ìì~ 

IdEmpleadoìì â
,ììâ ä
MaestroSettingsììã ö
.ììö õ
Defaultììõ ¢
.ìì¢ £0
 IdDetalleMaestroEstadoCompletadaìì£ √
,ìì√ ƒ%
operacionInvalidacionìì≈ ⁄
.ìì⁄ €
FechaActualìì€ Ê
,ììÊ Á
$strììË ó
)ììó ò
)ììò ô
;ììô ö
foreach
ïï 
(
ïï 
var
ïï $
detalleOperacionOrigen
ïï 3
in
ïï4 6%
detallesOperacionOrigen
ïï7 N
)
ïïN O
{
ññ 
var
óó 
detalle
óó 
=
óó  !$
transaccionRepositorio
óó" 8
.
óó8 9'
ObtenerDetalleTransaccion
óó9 R
(
óóR S$
detalleOperacionOrigen
óóS i
.
óói j
id
óój l
)
óól m
;
óóm n
detalle
òò 
.
òò 

cantidad_1
òò &
=
òò' ($
detalleOperacionOrigen
òò) ?
.
òò? @

cantidad_1
òò@ J
;
òòJ K+
detallesTransaccionAModificar
ôô 1
.
ôô1 2
Add
ôô2 5
(
ôô5 6
detalle
ôô6 =
)
ôô= >
;
ôô> ?
}
öö 
}
õõ 
}
úú 	
public
ûû 
OrdenAlmacen
ûû !
ObtenerOrdenAlmacen
ûû /
(
ûû/ 0
long
ûû0 4
idOrdenAlmacen
ûû5 C
)
ûûC D
{
üü 	
var
†† 
ordenAlmacen
†† 
=
††  
ordenAlmacen_Datos
†† 1
.
††1 2!
ObtenerOrdenAlmacen
††2 E
(
††E F
idOrdenAlmacen
††F T
)
††T U
;
††U V
ordenAlmacen
°° 
.
°° 

IdsOrdenes
°° #
.
°°# $
Insert
°°$ *
(
°°* +
$num
°°+ ,
,
°°, -
ordenAlmacen
°°. :
.
°°: ;
Id
°°; =
)
°°= >
;
°°> ?
ordenAlmacen
¢¢ 
.
¢¢ 
Movimientos
¢¢ $
=
¢¢% & 
ordenAlmacen_Datos
¢¢' 9
.
¢¢9 :9
+ObtenerMovimientosConfirmadosDeOrdenAlmacen
¢¢: e
(
¢¢e f
ordenAlmacen
¢¢f r
.
¢¢r s

IdsOrdenes
¢¢s }
.
¢¢} ~
ToArray¢¢~ Ö
(¢¢Ö Ü
)¢¢Ü á
)¢¢á à
.¢¢à â
ToList¢¢â è
(¢¢è ê
)¢¢ê ë
;¢¢ë í
var
££ !
detallesMovimientos
££ #
=
££$ %
ordenAlmacen
££& 2
.
££2 3
Movimientos
££3 >
.
££> ?
Where
££? D
(
££D E
m
££E F
=>
££G I
m
££J K
.
££K L
	EsVigente
££L U
)
££U V
.
££V W

SelectMany
££W a
(
££a b
m
££b c
=>
££d f
m
££g h
.
££h i
Detalles
££i q
)
££q r
.
££r s
ToList
££s y
(
££y z
)
££z {
;
££{ |
foreach
§§ 
(
§§ 
var
§§ 
detalle
§§  
in
§§! #
ordenAlmacen
§§$ 0
.
§§0 1
Detalles
§§1 9
)
§§9 :
{
•• 
detalle
¶¶ 
.
¶¶ 
	Entregado
¶¶ !
=
¶¶" #!
detallesMovimientos
¶¶$ 7
.
¶¶7 8
Where
¶¶8 =
(
¶¶= >
dmo
¶¶> A
=>
¶¶B D
dmo
¶¶E H
.
¶¶H I

IdConcepto
¶¶I S
==
¶¶T V
detalle
¶¶W ^
.
¶¶^ _

IdConcepto
¶¶_ i
)
¶¶i j
.
¶¶j k
Sum
¶¶k n
(
¶¶n o
d
¶¶o p
=>
¶¶q s
d
¶¶t u
.
¶¶u v
Cantidad
¶¶v ~
)
¶¶~ 
;¶¶ Ä
detalle
ßß 
.
ßß 
	Pendiente
ßß !
=
ßß" #
detalle
ßß$ +
.
ßß+ ,
Ordenado
ßß, 4
-
ßß5 6
detalle
ßß7 >
.
ßß> ?
	Entregado
ßß? H
;
ßßH I
}
®® 
return
©© 
ordenAlmacen
©© 
;
©©  
}
™™ 	
public
¨¨ 
Transaccion
¨¨ '
GenerarInvalidarOperacion
¨¨ 4
(
¨¨4 5#
OperacionInvalidacion
¨¨5 J#
operacionInvalidacion
¨¨K `
)
¨¨` a
{
≠≠ 	
string
ÆÆ 
codigo
ÆÆ 
=
ÆÆ %
codigosOperacion_Logica
ÆÆ 3
.
ÆÆ3 43
%ObtenerSiguienteCodigoParaFacturacion
ÆÆ4 Y
(
ÆÆY Z
Diccionario
ÆÆZ e
.
ÆÆe f6
'MapeoTipoTransaccionVsCodigoDeOperacionÆÆf ç
.ÆÆç é
SingleÆÆé î
(ÆÆî ï
cÆÆï ñ
=>ÆÆó ô
cÆÆö õ
.ÆÆõ ú
KeyÆÆú ü
==ÆÆ† ¢#
TransaccionSettingsÆÆ£ ∂
.ÆÆ∂ ∑
DefaultÆÆ∑ æ
.ÆÆæ ø4
$IdTipoTransaccionInvalidacionDeVentaÆÆø „
)ÆÆ„ ‰
.ÆÆ‰ Â
ValueÆÆÂ Í
,ÆÆÍ Î#
TransaccionSettingsÆÆÏ ˇ
.ÆÆˇ Ä
DefaultÆÆÄ á
.ÆÆá à4
$IdTipoTransaccionInvalidacionDeVentaÆÆà ¨
)ÆÆ¨ ≠
;ÆÆ≠ Æ
Serie_comprobante
ØØ 
serie
ØØ #
=
ØØ$ %$
transaccionRepositorio
ØØ& <
.
ØØ< =M
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante
ØØ= |
(
ØØ| }
MaestroSettingsØØ} å
.ØØå ç
DefaultØØç î
.ØØî ï@
0IdDetalleMaestroComprobanteNotaInvalidacionVentaØØï ≈
,ØØ≈ ∆%
operacionInvalidacionØØ« ‹
.ØØ‹ › 
IdCentroAtencionØØ› Ì
)ØØÌ Ó
;ØØÓ Ô
if
∞∞ 
(
∞∞ 
serie
∞∞ 
==
∞∞ 
null
∞∞ 
)
∞∞ 
{
±± 
throw
≤≤ 
new
≤≤ 
LogicaException
≤≤ )
(
≤≤) *
$str≤≤* Ö
)≤≤Ö Ü
;≤≤Ü á
}
≥≥ 
Comprobante
¥¥ 
comprobante
¥¥ #
=
¥¥$ %3
%GenerarComprobantePropioAutonumerable
¥¥& K
(
¥¥K L
serie
¥¥L Q
.
¥¥Q R
id
¥¥R T
)
¥¥T U
;
¥¥U V
Transaccion
µµ !
invalidacionDeVenta
µµ +
=
µµ, -
new
µµ. 1
Transaccion
µµ2 =
(
µµ= >
codigo
µµ> D
,
µµD E#
operacionInvalidacion
µµF [
.
µµ[ \
Venta
µµ\ a
.
µµa b 
IdTransaccionPadre
µµb t
,
µµt u$
operacionInvalidacionµµv ã
.µµã å
FechaActualµµå ó
,µµó ò#
TransaccionSettingsµµô ¨
.µµ¨ ≠
Defaultµµ≠ ¥
.µµ¥ µ4
$IdTipoTransaccionInvalidacionDeVentaµµµ Ÿ
,µµŸ ⁄%
operacionInvalidacionµµ€ 
.µµ Ò!
IdUnidadDeNegocioµµÒ Ç
,µµÇ É
trueµµÑ à
,µµà â%
operacionInvalidacionµµä ü
.µµü †
FechaActualµµ† ´
,µµ´ ¨%
operacionInvalidacionµµ≠ ¬
.µµ¬ √
FechaActualµµ√ Œ
,µµŒ œ%
operacionInvalidacionµµ– Â
.µµÂ Ê$
ObservacionOperacionµµÊ ˙
,µµ˙ ˚%
operacionInvalidacionµµ¸ ë
.µµë í
FechaActualµµí ù
,µµù û%
operacionInvalidacionµµü ¥
.µµ¥ µ

IdEmpleadoµµµ ø
,µµø ¿%
operacionInvalidacionµµ¡ ÷
.µµ÷ ◊
ImporteTotalµµ◊ „
,µµ„ ‰%
operacionInvalidacionµµÂ ˙
.µµ˙ ˚ 
IdCentroAtencionµµ˚ ã
,µµã å%
operacionInvalidacionµµç ¢
.µµ¢ £
IdMonedaµµ£ ´
,µµ´ ¨%
operacionInvalidacionµµ≠ ¬
.µµ¬ √
TipoDeCambioµµ√ œ
,µµœ –
nullµµ— ’
,µµ’ ÷%
operacionInvalidacionµµ◊ Ï
.µµÏ Ì
	IdClienteµµÌ ˆ
)µµˆ ˜
{
∂∂ 
Comprobante
∑∑ 
=
∑∑ 
comprobante
∑∑ )
,
∑∑) *'
id_transaccion_referencia
∏∏ )
=
∏∏* +#
operacionInvalidacion
∏∏, A
.
∏∏A B
Venta
∏∏B G
.
∏∏G H
Id
∏∏H J
}
ππ 
;
ππ 
return
∫∫ !
invalidacionDeVenta
∫∫ &
;
∫∫& '
}
ªª 	
public
ΩΩ 
Transaccion
ΩΩ ,
GenerarOrdenInvalidarOperacion
ΩΩ 9
(
ΩΩ9 :
Transaccion
ΩΩ: E
invalidacion
ΩΩF R
,
ΩΩR S#
OperacionInvalidacion
ΩΩT i#
operacionInvalidacion
ΩΩj 
)ΩΩ Ä
{
ææ 	
Transaccion
øø $
ordenInvalidacionVenta
øø .
=
øø/ 0
new
øø1 4
Transaccion
øø5 @
(
øø@ A%
codigosOperacion_Logica
øøA X
.
øøX Y3
%ObtenerSiguienteCodigoParaFacturacion
øøY ~
(
øø~ 
invalidacionøø ã
.øøã å
codigoøøå í
+øøì î
$strøøï ò
+øøô ö
Diccionarioøøõ ¶
.øø¶ ß7
'MapeoTipoTransaccionVsCodigoDeOperacionøøß Œ
.øøŒ œ
Singleøøœ ’
(øø’ ÷
cøø÷ ◊
=>øøÿ ⁄
cøø€ ‹
.øø‹ ›
Keyøø› ‡
==øø· „#
TransaccionSettingsøø‰ ˜
.øø˜ ¯
Defaultøø¯ ˇ
.øøˇ Ä;
+IdTipoTransaccionOrdenDeInvalidacionDeVentaøøÄ ´
)øø´ ¨
.øø¨ ≠
Valueøø≠ ≤
,øø≤ ≥#
TransaccionSettingsøø¥ «
.øø« »
Defaultøø» œ
.øøœ –;
+IdTipoTransaccionOrdenDeInvalidacionDeVentaøø– ˚
)øø˚ ¸
,øø¸ ˝
nulløø˛ Ç
,øøÇ É%
operacionInvalidacionøøÑ ô
.øøô ö
FechaActualøøö •
,øø• ¶#
TransaccionSettingsøøß ∫
.øø∫ ª
Defaultøøª ¬
.øø¬ √;
+IdTipoTransaccionOrdenDeInvalidacionDeVentaøø√ Ó
,øøÓ Ô%
operacionInvalidacionøø Ö
.øøÖ Ü!
IdUnidadDeNegocioøøÜ ó
,øøó ò
trueøøô ù
,øøù û%
operacionInvalidacionøøü ¥
.øø¥ µ
FechaActualøøµ ¿
,øø¿ ¡%
operacionInvalidacionøø¬ ◊
.øø◊ ÿ
FechaActualøøÿ „
,øø„ ‰%
operacionInvalidacionøøÂ ˙
.øø˙ ˚$
ObservacionOperacionøø˚ è
,øøè ê%
operacionInvalidacionøøë ¶
.øø¶ ß
FechaActualøøß ≤
,øø≤ ≥%
operacionInvalidacionøø¥ …
.øø…  

IdEmpleadoøø  ‘
,øø‘ ’%
operacionInvalidacionøø÷ Î
.øøÎ Ï
ImporteTotaløøÏ ¯
,øø¯ ˘%
operacionInvalidacionøø˙ è
.øøè ê 
IdCentroAtencionøøê †
,øø† °%
operacionInvalidacionøø¢ ∑
.øø∑ ∏
IdMonedaøø∏ ¿
,øø¿ ¡%
operacionInvalidacionøø¬ ◊
.øø◊ ÿ
TipoDeCambioøøÿ ‰
,øø‰ Â
nulløøÊ Í
,øøÍ Î%
operacionInvalidacionøøÏ Å
.øøÅ Ç
	IdClienteøøÇ ã
,øøã å%
operacionInvalidacionøøç ¢
.øø¢ £
DescuentoGlobaløø£ ≤
,øø≤ ≥%
operacionInvalidacionøø¥ …
.øø…   
DescuentoPorItemøø  ⁄
,øø⁄ €%
operacionInvalidacionøø‹ Ò
.øøÒ Ú
AnticipoøøÚ ˙
,øø˙ ˚%
operacionInvalidacionøø¸ ë
.øøë í
Gravadaøøí ô
,øøô ö%
operacionInvalidacionøøõ ∞
.øø∞ ±
	Exoneradaøø± ∫
,øø∫ ª%
operacionInvalidacionøøº —
.øø— “
Inafectaøø“ ⁄
,øø⁄ €%
operacionInvalidacionøø‹ Ò
.øøÒ Ú
GratuitaøøÚ ˙
,øø˙ ˚%
operacionInvalidacionøø¸ ë	
.øøë	 í	
Igvøøí	 ï	
,øøï	 ñ	%
operacionInvalidacionøøó	 ¨	
.øø¨	 ≠	
Iscøø≠	 ∞	
,øø∞	 ±	%
operacionInvalidacionøø≤	 «	
.øø«	 »	
Icbperøø»	 Œ	
,øøŒ	 œ	%
operacionInvalidacionøø–	 Â	
.øøÂ	 Ê	
OtrosCargosøøÊ	 Ò	
,øøÒ	 Ú	%
operacionInvalidacionøøÛ	 à

.øøà
 â

OtrosTributosøøâ
 ñ

)øøñ
 ó

{
¿¿ 
Comprobante
¡¡ 
=
¡¡ 
invalidacion
¡¡ *
.
¡¡* +
Comprobante
¡¡+ 6
,
¡¡6 7'
id_transaccion_referencia
¬¬ )
=
¬¬* +#
operacionInvalidacion
¬¬, A
.
¬¬A B

OrdenVenta
¬¬B L
.
¬¬L M
Id
¬¬M O
,
¬¬O P'
id_actor_negocio_externo1
√√ )
=
√√* +#
operacionInvalidacion
√√, A
.
√√A B

OrdenVenta
√√B L
.
√√L M
IdGrupoCliente
√√M [
,
√√[ \
}
ƒƒ 
;
ƒƒ $
ordenInvalidacionVenta
≈≈ "
.
≈≈" #
AgregarDetalles
≈≈# 2
(
≈≈2 3#
operacionInvalidacion
≈≈3 H
.
≈≈H I
DetallesOperacion
≈≈I Z
)
≈≈Z [
;
≈≈[ \
if
∆∆ 
(
∆∆ #
operacionInvalidacion
∆∆ %
.
∆∆% &
Icbper
∆∆& ,
>
∆∆- .
$num
∆∆/ 0
)
∆∆0 1
{
«« $
ordenInvalidacionVenta
»» &
.
»»& '#
Parametro_transaccion
»»' <
.
»»< =
Add
»»= @
(
»»@ A
new
»»A D#
Parametro_transaccion
»»E Z
(
»»Z [
MaestroSettings
»»[ j
.
»»j k
Default
»»k r
.
»»r s.
IdDetalleMaestroParametroIcbper»»s í
,»»í ì%
operacionInvalidacion»»î ©
.»»© ™
Icbper»»™ ∞
.»»∞ ±
ToString»»± π
(»»π ∫
)»»∫ ª
)»»ª º
)»»º Ω
;»»Ω æ
}
…… 
if
   
(
   #
operacionInvalidacion
   %
.
  % &"
NumeroBolsasPlastico
  & :
>
  ; <
$num
  = >
)
  > ?
{
ÀÀ $
ordenInvalidacionVenta
ÃÃ &
.
ÃÃ& '#
Parametro_transaccion
ÃÃ' <
.
ÃÃ< =
Add
ÃÃ= @
(
ÃÃ@ A
new
ÃÃA D#
Parametro_transaccion
ÃÃE Z
(
ÃÃZ [
MaestroSettings
ÃÃ[ j
.
ÃÃj k
Default
ÃÃk r
.
ÃÃr s>
/IdDetalleMaestroParametroNumeroBolsasDePlasticoÃÃs ¢
,ÃÃ¢ £%
operacionInvalidacionÃÃ§ π
.ÃÃπ ∫$
NumeroBolsasPlasticoÃÃ∫ Œ
.ÃÃŒ œ
ToStringÃÃœ ◊
(ÃÃ◊ ÿ
)ÃÃÿ Ÿ
)ÃÃŸ ⁄
)ÃÃ⁄ €
;ÃÃ€ ‹
}
ÕÕ 
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
string
ŒŒ 
.
ŒŒ 
IsNullOrEmpty
ŒŒ %
(
ŒŒ% &#
operacionInvalidacion
ŒŒ& ;
.
ŒŒ; <
AliasCliente
ŒŒ< H
)
ŒŒH I
)
ŒŒI J
{
œœ $
ordenInvalidacionVenta
–– &
.
––& '#
Parametro_transaccion
––' <
.
––< =
Add
––= @
(
––@ A
new
––A D#
Parametro_transaccion
––E Z
(
––Z [
MaestroSettings
––[ j
.
––j k
Default
––k r
.
––r s4
%IdDetalleMaestroParametroAliasCliente––s ò
,––ò ô%
operacionInvalidacion––ö Ø
.––Ø ∞
AliasCliente––∞ º
)––º Ω
)––Ω æ
;––æ ø
}
—— $
ordenInvalidacionVenta
““ "
.
““" ##
Parametro_transaccion
““# 8
.
““8 9
Add
““9 <
(
““< =
new
““= @#
Parametro_transaccion
““A V
(
““V W
MaestroSettings
““W f
.
““f g
Default
““g n
.
““n o2
#IdDetalleMaestroParametroModoDePago““o í
,““í ì
(““î ï
(““ï ñ
int““ñ ô
)““ô ö%
operacionInvalidacion““ö Ø
.““Ø ∞
PagoOperacion““∞ Ω
.““Ω æ

ModoDePago““æ »
)““» …
.““…  
ToString““  “
(“““ ”
)““” ‘
)““‘ ’
)““’ ÷
;““÷ ◊ 
Estado_transaccion
”” 0
"estadoDeLaOrdenInvalidacionDeVenta
”” A
=
””B C
new
””D G 
Estado_transaccion
””H Z
(
””Z [#
operacionInvalidacion
””[ p
.
””p q

IdEmpleado
””q {
,
””{ |
MaestroSettings””} å
.””å ç
Default””ç î
.””î ï0
 IdDetalleMaestroEstadoConfirmado””ï µ
,””µ ∂%
operacionInvalidacion””∑ Ã
.””Ã Õ
FechaActual””Õ ÿ
,””ÿ Ÿ
$str””⁄ †
)””† °
;””° ¢$
ordenInvalidacionVenta
‘‘ "
.
‘‘" # 
Estado_transaccion
‘‘# 5
.
‘‘5 6
Add
‘‘6 9
(
‘‘9 :0
"estadoDeLaOrdenInvalidacionDeVenta
‘‘: \
)
‘‘\ ]
;
‘‘] ^$
ordenInvalidacionVenta
’’ "
.
’’" #
enum1
’’# (
=
’’) *
(
’’+ ,
int
’’, /
)
’’/ 0#
operacionInvalidacion
’’0 E
.
’’E F

OrdenVenta
’’F P
.
’’P Q%
IndicadorImpactoAlmacen
’’Q h
;
’’h i$
ordenInvalidacionVenta
÷÷ "
.
÷÷" #
enum1
÷÷# (
=
÷÷) *#
operacionInvalidacion
÷÷+ @
.
÷÷@ A$
EsOrdenOrigenPendiente
÷÷A W
?
÷÷X Y
(
÷÷Z [
int
÷÷[ ^
)
÷÷^ _%
IndicadorImpactoAlmacen
÷÷_ v
.
÷÷v w5
&NoImpactaPorQueRevocaAOperacionInicial÷÷w ù
:÷÷û ü
(÷÷† °%
operacionInvalidacion÷÷° ∂
.÷÷∂ ∑1
!HaySeccionEntregaAlmacenOperacion÷÷∑ ÿ
?÷÷Ÿ ⁄
(÷÷€ ‹%
operacionInvalidacion÷÷‹ Ò
.÷÷Ò Ú#
EsDiferidaOperacion÷÷Ú Ö
?÷÷Ü á
(÷÷à â
int÷÷â å
)÷÷å ç'
IndicadorImpactoAlmacen÷÷ç §
.÷÷§ •
Diferida÷÷• ≠
:÷÷Æ Ø
(÷÷∞ ±
int÷÷± ¥
)÷÷¥ µ'
IndicadorImpactoAlmacen÷÷µ Ã
.÷÷Ã Õ
	Inmediata÷÷Õ ÷
)÷÷÷ ◊
:÷÷ÿ Ÿ&
ordenInvalidacionVenta÷÷⁄ 
.÷÷ Ò
enum1÷÷Ò ˆ
)÷÷ˆ ˜
;÷÷˜ ¯
if
◊◊ 
(
◊◊ $
ordenInvalidacionVenta
◊◊ &
.
◊◊& '
enum1
◊◊' ,
==
◊◊- /
(
◊◊0 1
int
◊◊1 4
)
◊◊4 5%
IndicadorImpactoAlmacen
◊◊5 L
.
◊◊L M
	Inmediata
◊◊M V
||
◊◊W Y$
ordenInvalidacionVenta
◊◊Z p
.
◊◊p q
enum1
◊◊q v
==
◊◊w y
(
◊◊z {
int
◊◊{ ~
)
◊◊~ &
IndicadorImpactoAlmacen◊◊ ñ
.◊◊ñ ó
Diferida◊◊ó ü
)◊◊ü †
{
ÿÿ $
ordenInvalidacionVenta
ŸŸ &
.
ŸŸ& ''
id_actor_negocio_interno1
ŸŸ' @
=
ŸŸA B#
operacionInvalidacion
ŸŸC X
.
ŸŸX Y
	IdAlmacen
ŸŸY b
;
ŸŸb c 
Estado_transaccion
⁄⁄ " 
estadoOrdenAlmacen
⁄⁄# 5
=
⁄⁄6 7
new
⁄⁄8 ; 
Estado_transaccion
⁄⁄< N
(
⁄⁄N O#
operacionInvalidacion
⁄⁄O d
.
⁄⁄d e

IdEmpleado
⁄⁄e o
,
⁄⁄o p$
operacionInvalidacion⁄⁄q Ü
.⁄⁄Ü á#
EsDiferidaOperacion⁄⁄á ö
?⁄⁄õ ú
MaestroSettings⁄⁄ù ¨
.⁄⁄¨ ≠
Default⁄⁄≠ ¥
.⁄⁄¥ µ/
IdDetalleMaestroEstadoPendiente⁄⁄µ ‘
:⁄⁄’ ÷
MaestroSettings⁄⁄◊ Ê
.⁄⁄Ê Á
Default⁄⁄Á Ó
.⁄⁄Ó Ô0
 IdDetalleMaestroEstadoCompletada⁄⁄Ô è
,⁄⁄è ê%
operacionInvalidacion⁄⁄ë ¶
.⁄⁄¶ ß
FechaActual⁄⁄ß ≤
,⁄⁄≤ ≥
$str⁄⁄¥ „
)⁄⁄„ ‰
;⁄⁄‰ Â$
ordenInvalidacionVenta
€€ &
.
€€& ' 
Estado_transaccion
€€' 9
.
€€9 :
Add
€€: =
(
€€= > 
estadoOrdenAlmacen
€€> P
)
€€P Q
;
€€Q R
}
‹‹ 
invalidacion
›› 
.
›› 
Transaccion1
›› %
.
››% &
Add
››& )
(
››) *$
ordenInvalidacionVenta
››* @
)
››@ A
;
››A B
return
ﬁﬁ $
ordenInvalidacionVenta
ﬁﬁ )
;
ﬁﬁ) *
}
ﬂﬂ 	
public
·· 
Transaccion
·· +
GenerarPagoInvalidarOperacion
·· 8
(
··8 9
Transaccion
··9 D
invalidacion
··E Q
,
··Q R
Transaccion
··S ^
ordenInvalidacion
··_ p
,
··p q$
OperacionInvalidacion··r á%
operacionInvalidacion··à ù
)··ù û
{
‚‚ 	
Transaccion
„„ 
pago
„„ 
=
„„ 
null
„„ #
;
„„# $
if
‰‰ 
(
‰‰ #
operacionInvalidacion
‰‰ %
.
‰‰% &
ImportePagoTotal
‰‰& 6
>
‰‰7 8
$num
‰‰9 :
)
‰‰: ;
{
ÂÂ 
if
ÊÊ 
(
ÊÊ #
operacionInvalidacion
ÊÊ )
.
ÊÊ) *
PagoOperacion
ÊÊ* 7
.
ÊÊ7 8

ModoDePago
ÊÊ8 B
==
ÊÊC E
ModoPago
ÊÊF N
.
ÊÊN O 
CreditoConfigurado
ÊÊO a
)
ÊÊa b
{
ÁÁ 
int
ËË 
cont
ËË 
=
ËË 
$num
ËË  
;
ËË  !
foreach
ÈÈ 
(
ÈÈ 
var
ÈÈ  
item
ÈÈ! %
in
ÈÈ& (#
operacionInvalidacion
ÈÈ) >
.
ÈÈ> ?
PagoOperacion
ÈÈ? L
.
ÈÈL M
CuotasDeVenta
ÈÈM Z
(
ÈÈZ [
)
ÈÈ[ \
)
ÈÈ\ ]
{
ÍÍ 
var
ÎÎ 
cuota
ÎÎ !
=
ÎÎ" #
new
ÎÎ$ '
Cuota
ÎÎ( -
(
ÎÎ- .2
$ObtenerSiguienteCodigoParaNuevaCuota
ÎÎ. R
(
ÎÎR S
false
ÎÎS X
,
ÎÎX Y#
operacionInvalidacion
ÎÎZ o
.
ÎÎo p
FechaActual
ÎÎp {
.
ÎÎ{ |
YearÎÎ| Ä
)ÎÎÄ Å
+ÎÎÇ É
$strÎÎÑ á
+ÎÎà â
contÎÎä é
++ÎÎé ê
,ÎÎê ë%
operacionInvalidacionÎÎí ß
.ÎÎß ®
FechaActualÎÎ® ≥
,ÎÎ≥ ¥
itemÎÎµ π
.ÎÎπ ∫!
fecha_vencimientoÎÎ∫ À
,ÎÎÀ Ã
itemÎÎÕ —
.ÎÎ— “
capitalÎÎ“ Ÿ
,ÎÎŸ ⁄
itemÎÎ€ ﬂ
.ÎÎﬂ ‡
interesÎÎ‡ Á
,ÎÎÁ Ë
itemÎÎÈ Ì
.ÎÎÌ Ó
totalÎÎÓ Û
,ÎÎÛ Ù
$strÎÎı ç
+ÎÎé è
contÎÎê î
,ÎÎî ï
falseÎÎñ õ
,ÎÎõ ú
itemÎÎù °
.ÎÎ° ¢
cuota_inicialÎÎ¢ Ø
)ÎÎØ ∞
;ÎÎ∞ ±
ordenInvalidacion
ÏÏ )
.
ÏÏ) *
Cuota
ÏÏ* /
.
ÏÏ/ 0
Add
ÏÏ0 3
(
ÏÏ3 4
cuota
ÏÏ4 9
)
ÏÏ9 :
;
ÏÏ: ;
}
ÌÌ 
var
ÓÓ 

diferencia
ÓÓ "
=
ÓÓ# $#
operacionInvalidacion
ÓÓ% :
.
ÓÓ: ;
ImportePagoTotal
ÓÓ; K
-
ÓÓL M
ordenInvalidacion
ÓÓN _
.
ÓÓ_ `
Cuota
ÓÓ` e
.
ÓÓe f
Sum
ÓÓf i
(
ÓÓi j
c
ÓÓj k
=>
ÓÓl n
c
ÓÓo p
.
ÓÓp q
total
ÓÓq v
)
ÓÓv w
;
ÓÓw x
ordenInvalidacion
ÔÔ %
.
ÔÔ% &
Cuota
ÔÔ& +
.
ÔÔ+ ,
Last
ÔÔ, 0
(
ÔÔ0 1
)
ÔÔ1 2
.
ÔÔ2 3
total
ÔÔ3 8
=
ÔÔ9 :
ordenInvalidacion
ÔÔ; L
.
ÔÔL M
Cuota
ÔÔM R
.
ÔÔR S
Last
ÔÔS W
(
ÔÔW X
)
ÔÔX Y
.
ÔÔY Z
capital
ÔÔZ a
=
ÔÔb c
ordenInvalidacion
ÔÔd u
.
ÔÔu v
Cuota
ÔÔv {
.
ÔÔ{ |
LastÔÔ| Ä
(ÔÔÄ Å
)ÔÔÅ Ç
.ÔÔÇ É
totalÔÔÉ à
+ÔÔâ ä

diferenciaÔÔã ï
;ÔÔï ñ
}
 
else
ÒÒ 
{
ÚÚ 
var
ÛÛ 
cuota
ÛÛ 
=
ÛÛ 
new
ÛÛ  #
Cuota
ÛÛ$ )
(
ÛÛ) *2
$ObtenerSiguienteCodigoParaNuevaCuota
ÛÛ* N
(
ÛÛN O
false
ÛÛO T
,
ÛÛT U#
operacionInvalidacion
ÛÛV k
.
ÛÛk l
FechaActual
ÛÛl w
.
ÛÛw x
Year
ÛÛx |
)
ÛÛ| }
+
ÛÛ~ 
$strÛÛÄ É
+ÛÛÑ Ö
$numÛÛÜ á
,ÛÛá à%
operacionInvalidacionÛÛâ û
.ÛÛû ü
FechaActualÛÛü ™
,ÛÛ™ ´%
operacionInvalidacionÛÛ¨ ¡
.ÛÛ¡ ¬
FechaActualÛÛ¬ Õ
,ÛÛÕ Œ%
operacionInvalidacionÛÛœ ‰
.ÛÛ‰ Â 
ImportePagoTotalÛÛÂ ı
,ÛÛı ˆ
$strÛÛ˜ ª
,ÛÛª º
falseÛÛΩ ¬
)ÛÛ¬ √
;ÛÛ√ ƒ
ordenInvalidacion
ÙÙ %
.
ÙÙ% &
Cuota
ÙÙ& +
.
ÙÙ+ ,
Add
ÙÙ, /
(
ÙÙ/ 0
cuota
ÙÙ0 5
)
ÙÙ5 6
;
ÙÙ6 7
}
ıı 
if
˜˜ 
(
˜˜ #
operacionInvalidacion
˜˜ )
.
˜˜) *
PagoOperacion
˜˜* 7
.
˜˜7 8
HayIngresoDinero
˜˜8 H
)
˜˜H I
{
¯¯ 
var
˘˘ +
esCreditoRapidoConPagoInicial
˘˘ 5
=
˘˘6 7
(
˘˘8 9#
operacionInvalidacion
˘˘9 N
.
˘˘N O
PagoOperacion
˘˘O \
.
˘˘\ ]

ModoDePago
˘˘] g
==
˘˘h j
ModoPago
˘˘k s
.
˘˘s t
CreditoRapido˘˘t Å
&&˘˘Ç Ñ%
operacionInvalidacion˘˘Ö ö
.˘˘ö õ
PagoOperacion˘˘õ ®
.˘˘® ©
Inicial˘˘© ∞
>˘˘± ≤
$num˘˘≥ ¥
)˘˘¥ µ
;˘˘µ ∂
Cuota
˚˚ 
cuotaACobrar
˚˚ &
=
˚˚' (
(
˚˚) *#
operacionInvalidacion
˚˚* ?
.
˚˚? @
PagoOperacion
˚˚@ M
.
˚˚M N

ModoDePago
˚˚N X
==
˚˚Y [
ModoPago
˚˚\ d
.
˚˚d e
Contado
˚˚e l
||
˚˚m o,
esCreditoRapidoConPagoInicial˚˚p ç
)˚˚ç é
?˚˚è ê!
ordenInvalidacion˚˚ë ¢
.˚˚¢ £
Cuota˚˚£ ®
.˚˚® ©
First˚˚© Æ
(˚˚Æ Ø
)˚˚Ø ∞
:˚˚± ≤!
ordenInvalidacion˚˚≥ ƒ
.˚˚ƒ ≈
Cuota˚˚≈  
.˚˚  À
Single˚˚À —
(˚˚— “
c˚˚“ ”
=>˚˚‘ ÷
c˚˚◊ ÿ
.˚˚ÿ Ÿ
cuota_inicial˚˚Ÿ Ê
)˚˚Ê Á
;˚˚Á Ë
cuotaACobrar
¸¸  
.
¸¸  !
SetPagoACuenta
¸¸! /
(
¸¸/ 0+
esCreditoRapidoConPagoInicial
¸¸0 M
?
¸¸N O#
operacionInvalidacion
¸¸P e
.
¸¸e f
PagoOperacion
¸¸f s
.
¸¸s t
Inicial
¸¸t {
:
¸¸| }
cuotaACobrar¸¸~ ä
.¸¸ä ã
total¸¸ã ê
)¸¸ê ë
;¸¸ë í"
ValidarImporteAPagar
˝˝ (
(
˝˝( )
$num
˝˝) *
,
˝˝* +
cuotaACobrar
˝˝, 8
.
˝˝8 9
total
˝˝9 >
,
˝˝> ?
ordenInvalidacion
˝˝@ Q
.
˝˝Q R
importe_total
˝˝R _
)
˝˝_ `
;
˝˝` a
pago
˛˛ 
=
˛˛ 8
*GenerarMovimientoEconomicoPagoACuentaCuota
˛˛ E
(
˛˛E F
invalidacion
˛˛F R
,
˛˛R S
cuotaACobrar
˛˛T `
,
˛˛` a#
operacionInvalidacion
˛˛b w
.
˛˛w x

IdEmpleado˛˛x Ç
,˛˛Ç É%
operacionInvalidacion˛˛Ñ ô
.˛˛ô ö
IdCaja˛˛ö †
,˛˛† °%
operacionInvalidacion˛˛¢ ∑
.˛˛∑ ∏
	IdCliente˛˛∏ ¡
,˛˛¡ ¬#
TransaccionSettings˛˛√ ÷
.˛˛÷ ◊
Default˛˛◊ ﬁ
.˛˛ﬁ ﬂE
5IdTipoTransaccionSalidaDeDineroPorInvalidacionDeVenta˛˛ﬂ î
,˛˛î ï%
operacionInvalidacion˛˛ñ ´
.˛˛´ ¨
FechaActual˛˛¨ ∑
,˛˛∑ ∏%
operacionInvalidacion˛˛π Œ
.˛˛Œ œ
FechaActual˛˛œ ⁄
,˛˛⁄ €%
operacionInvalidacion˛˛‹ Ò
.˛˛Ò Ú$
ObservacionOperacion˛˛Ú Ü
,˛˛Ü á%
operacionInvalidacion˛˛à ù
.˛˛ù û
PagoOperacion˛˛û ´
.˛˛´ ¨
Traza˛˛¨ ±
.˛˛± ≤
MedioDePago˛˛≤ Ω
.˛˛Ω æ
Id˛˛æ ¿
,˛˛¿ ¡%
operacionInvalidacion˛˛¬ ◊
.˛˛◊ ÿ
PagoOperacion˛˛ÿ Â
.˛˛Â Ê
Traza˛˛Ê Î
.˛˛Î Ï
Info˛˛Ï 
.˛˛ Ò!
EntidadFinanciera˛˛Ò Ç
.˛˛Ç É
Id˛˛É Ö
,˛˛Ö Ü%
operacionInvalidacion˛˛á ú
.˛˛ú ù
PagoOperacion˛˛ù ™
.˛˛™ ´
Traza˛˛´ ∞
.˛˛∞ ±
Info˛˛± µ
.˛˛µ ∂
Observacion˛˛∂ ¡
)˛˛¡ ¬
;˛˛¬ √
if
ÄÄ 
(
ÄÄ #
operacionInvalidacion
ÄÄ -
.
ÄÄ- .
PagoOperacion
ÄÄ. ;
.
ÄÄ; <
Traza
ÄÄ< A
.
ÄÄA B
MedioDePago
ÄÄB M
.
ÄÄM N
Id
ÄÄN P
==
ÄÄQ S
MaestroSettings
ÄÄT c
.
ÄÄc d
Default
ÄÄd k
.
ÄÄk l0
!IdDetalleMaestroMedioDepagoPuntosÄÄl ç
)ÄÄç é
{
ÅÅ 
pago
ÇÇ 
.
ÇÇ 
	cantidad1
ÇÇ &
=
ÇÇ' (#
operacionInvalidacion
ÇÇ) >
.
ÇÇ> ?
PagoOperacion
ÇÇ? L
.
ÇÇL M
Traza
ÇÇM R
.
ÇÇR S
Info
ÇÇS W
.
ÇÇW X
PuntosCajeados
ÇÇX f
;
ÇÇf g
}
ÉÉ 
if
ÑÑ 
(
ÑÑ #
operacionInvalidacion
ÑÑ -
.
ÑÑ- .
PagoOperacion
ÑÑ. ;
.
ÑÑ; <
Traza
ÑÑ< A
.
ÑÑA B
MedioDePago
ÑÑB M
.
ÑÑM N
Id
ÑÑN P
==
ÑÑQ S
MaestroSettings
ÑÑT c
.
ÑÑc d
Default
ÑÑd k
.
ÑÑk l:
+IdDetalleMaestroMedioDepagoDepositoEnCuentaÑÑl ó
||ÑÑò ö%
operacionInvalidacionÑÑõ ∞
.ÑÑ∞ ±
PagoOperacionÑÑ± æ
.ÑÑæ ø
TrazaÑÑø ƒ
.ÑÑƒ ≈
MedioDePagoÑÑ≈ –
.ÑÑ– —
IdÑÑ— ”
==ÑÑ‘ ÷
MaestroSettingsÑÑ◊ Ê
.ÑÑÊ Á
DefaultÑÑÁ Ó
.ÑÑÓ Ô@
0IdDetalleMaestroMedioDepagoTransferenciaDeFondosÑÑÔ ü
)ÑÑü †
{
ÖÖ 
pago
ÜÜ 
.
ÜÜ '
id_actor_negocio_interno1
ÜÜ 6
=
ÜÜ7 8#
operacionInvalidacion
ÜÜ9 N
.
ÜÜN O
PagoOperacion
ÜÜO \
.
ÜÜ\ ]
Traza
ÜÜ] b
.
ÜÜb c
Info
ÜÜc g
.
ÜÜg h
CuentaBancaria
ÜÜh v
.
ÜÜv w
Id
ÜÜw y
;
ÜÜy z
}
áá 
if
àà 
(
àà 
!
àà 
string
àà 
.
àà  
IsNullOrEmpty
àà  -
(
àà- .#
operacionInvalidacion
àà. C
.
ààC D
PagoOperacion
ààD Q
.
ààQ R
Traza
ààR W
.
ààW X
Info
ààX \
.
àà\ ]
InformacionJson
àà] l
)
ààl m
)
ààm n
pago
àào s
.
ààs t

Traza_pago
ààt ~
.
àà~ 
Firstàà Ñ
(ààÑ Ö
)ààÖ Ü
.ààÜ á
extension_jsonààá ï
=ààñ ó%
operacionInvalidacionààò ≠
.àà≠ Æ
PagoOperacionààÆ ª
.ààª º
Trazaààº ¡
.àà¡ ¬
Infoàà¬ ∆
.àà∆ «
InformacionJsonàà« ÷
;àà÷ ◊
invalidacion
ââ  
.
ââ  !
Transaccion1
ââ! -
.
ââ- .
Add
ââ. 1
(
ââ1 2
pago
ââ2 6
)
ââ6 7
;
ââ7 8
}
ää 
}
ãã 
return
åå 
pago
åå 
;
åå 
}
çç 	
public
éé 
Transaccion
éé 8
*GenerarMovimientoAlmacenInvalidarOperacion
éé E
(
ééE F
Transaccion
ééF Q
	operacion
ééR [
,
éé[ \
Transaccion
éé] h
ordenInvalidacion
ééi z
,
ééz {$
OperacionInvalidacionéé| ë%
operacionInvalidacionééí ß
,ééß ®&
UserProfileSessionDataéé© ø
sesionUsuarioéé¿ Õ
)ééÕ Œ
{
èè 	
Transaccion
êê 3
%entradaMercaderiaPorInvalidacionVenta
êê =
=
êê> ?
null
êê@ D
;
êêD E
if
ëë 
(
ëë #
operacionInvalidacion
ëë %
.
ëë% &+
HayMovimientoAlmacenOperacion
ëë& C
)
ëëC D
{
íí 
var
ìì $
salidasMercaderiaVenta
ìì *
=
ìì+ ,#
operacionInvalidacion
ìì- B
.
ììB C
Venta
ììC H
.
ììH I(
ObtenerSalidasDeMercaderia
ììI c
(
ììc d
)
ììd e
;
ììe f
if
îî 
(
îî $
salidasMercaderiaVenta
îî *
.
îî* +
Count
îî+ 0
>
îî1 2
$num
îî3 4
)
îî4 5
{
ïï 3
%entradaMercaderiaPorInvalidacionVenta
ññ 9
=
ññ: ;+
GenerarMovimientoDeMercaderia
ññ< Y
(
ññY Z
	operacion
ññZ c
,
ññc d#
operacionInvalidacion
ññe z
.
ññz {

IdEmpleadoññ{ Ö
,ññÖ Ü%
operacionInvalidacionññá ú
.ññú ù
	IdAlmacenññù ¶
,ññ¶ ß%
operacionInvalidacionññ® Ω
.ññΩ æ
	IdClienteññæ «
,ññ« »#
TransaccionSettingsññ… ‹
.ññ‹ ›
Defaultññ› ‰
.ññ‰ ÂJ
:IdTipoTransaccionIngresoDeMercaderiaPorInvalidacionDeVentaññÂ ü
,ññü †%
operacionInvalidacionññ° ∂
.ññ∂ ∑
FechaActualññ∑ ¬
,ññ¬ √%
operacionInvalidacionññƒ Ÿ
.ññŸ ⁄$
ObservacionOperacionññ⁄ Ó
,ññÓ Ô%
operacionInvalidacionññ Ö
.ññÖ Ü2
"DetallesMovimientoAlmacenOperacionññÜ ®
,ññ® ©
sesionUsuarioññ™ ∑
,ññ∑ ∏&
salidasMercaderiaVentaññπ œ
.ññœ –
Firstññ– ’
(ññ’ ÷
)ññ÷ ◊
.ññ◊ ÿ
Idññÿ ⁄
)ññ⁄ €
;ññ€ ‹3
%entradaMercaderiaPorInvalidacionVenta
óó 9
.
óó9 :
Transaccion3
óó: F
=
óóG H
ordenInvalidacion
óóI Z
;
óóZ [
	operacion
òò 
.
òò 
Transaccion1
òò *
.
òò* +
Add
òò+ .
(
òò. /3
%entradaMercaderiaPorInvalidacionVenta
òò/ T
)
òòT U
;
òòU V
}
ôô 
if
öö 
(
öö #
operacionInvalidacion
öö )
.
öö) *"
EsOrdenOrigenParcial
öö* >
)
öö> ?
{
õõ 
Serie_comprobante
úú %
serie
úú& +
=
úú, -$
transaccionRepositorio
úú. D
.
úúD EN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteúúE Ñ
(úúÑ Ö
MaestroSettingsúúÖ î
.úúî ï
Defaultúúï ú
.úúú ù=
-IdDetalleMaestroComprobanteNotaAlmacenInternaúúù  
,úú  À
sesionUsuarioúúÃ Ÿ
.úúŸ ⁄.
IdCentroDeAtencionSeleccionadoúú⁄ ¯
)úú¯ ˘
;úú˘ ˙3
%entradaMercaderiaPorInvalidacionVenta
ùù 9
.
ùù9 :
Comprobante
ùù: E
=
ùùF G3
%GenerarComprobantePropioAutonumerable
ùùH m
(
ùùm n
serie
ùùn s
.
ùùs t
id
ùùt v
)
ùùv w
;
ùùw x
}
ûû 
}
üü 
return
†† 3
%entradaMercaderiaPorInvalidacionVenta
†† 8
;
††8 9
}
°° 	
public
££ 
void
££ @
2GenerarEstadosOperacionInvalidadaYCuotasActualizar
££ F
(
££F G
List
££G K
<
££K L 
Estado_transaccion
££L ^
>
££^ _&
nuevosEstadosTransaccion
££` x
,
££x y
List
££z ~
<
££~ 
Cuota££ Ñ
>££Ñ Ö 
cuotasActualizar££Ü ñ
,££ñ ó%
OperacionInvalidacion££ò ≠%
operacionInvalidacion££Æ √
)££√ ƒ
{
§§ 	&
nuevosEstadosTransaccion
•• $
.
••$ %
Add
••% (
(
••( )
new
••) , 
Estado_transaccion
••- ?
(
••? @#
operacionInvalidacion
••@ U
.
••U V

OrdenVenta
••V `
.
••` a
Id
••a c
,
••c d#
operacionInvalidacion
••e z
.
••z {

IdEmpleado••{ Ö
,••Ö Ü
MaestroSettings••á ñ
.••ñ ó
Default••ó û
.••û ü0
 IdDetalleMaestroEstadoInvalidado••ü ø
,••ø ¿%
operacionInvalidacion••¡ ÷
.••÷ ◊
FechaActual••◊ ‚
,••‚ „
$str••‰ ë
)••ë í
)••í ì
;••ì î
if
¶¶ 
(
¶¶ 
!
¶¶ #
operacionInvalidacion
¶¶ &
.
¶¶& '$
EsCompletoEstadoCuotas
¶¶' =
)
¶¶= >
{
ßß 
foreach
®® 
(
®® 
var
®® 
cuota
®® "
in
®®# %#
operacionInvalidacion
®®& ;
.
®®; <
Cuotas
®®< B
.
®®B C
OrderByDescending
®®C T
(
®®T U
c
®®U V
=>
®®W Y
c
®®Z [
.
®®[ \
fecha_vencimiento
®®\ m
)
®®m n
)
®®n o
{
©© 
if
™™ 
(
™™ 
cuota
™™ 
.
™™ 
saldo
™™ #
>
™™$ %
$num
™™& '
)
™™' (
{
´´ 
cuota
¨¨ 
.
¨¨ 
revocado
¨¨ &
=
¨¨' (
cuota
¨¨) .
.
¨¨. /
saldo
¨¨/ 4
;
¨¨4 5
cuota
≠≠ 
.
≠≠ 
saldo
≠≠ #
=
≠≠$ %
cuota
≠≠& +
.
≠≠+ ,
total
≠≠, 1
-
≠≠2 3
cuota
≠≠4 9
.
≠≠9 :
pago_a_cuenta
≠≠: G
-
≠≠H I
cuota
≠≠J O
.
≠≠O P
revocado
≠≠P X
;
≠≠X Y
cuotasActualizar
ÆÆ (
.
ÆÆ( )
Add
ÆÆ) ,
(
ÆÆ, -
cuota
ÆÆ- 2
)
ÆÆ2 3
;
ÆÆ3 4
}
ØØ 
}
∞∞ 
}
±± 
}
≤≤ 	
public
¥¥ 
List
¥¥ 
<
¥¥ 
Transaccion
¥¥ 
>
¥¥  ,
GenerarTransaccionesAModificar
¥¥! ?
(
¥¥? @!
MovimientoEconomico
¥¥@ S*
movimientoEconomicoConPuntos
¥¥T p
)
¥¥p q
{
µµ 	
List
∑∑ 
<
∑∑ 
Transaccion
∑∑ 
>
∑∑ %
transaccionesAModificar
∑∑ 5
=
∑∑6 7
null
∑∑8 <
;
∑∑< =
if
∏∏ 
(
∏∏ *
movimientoEconomicoConPuntos
∏∏ ,
!=
∏∏- /
null
∏∏0 4
)
∏∏4 5
{
ππ 
var
∫∫  
extensionJsonTraza
∫∫ &
=
∫∫' (*
movimientoEconomicoConPuntos
∫∫) E
.
∫∫E F
TrazaDePago
∫∫F Q
(
∫∫Q R
)
∫∫R S
.
∫∫S T
ExtensionJson
∫∫T a
;
∫∫a b
var
ªª 
puntosCanjeados
ªª #
=
ªª$ %
JsonConvert
ªª& 1
.
ªª1 2
DeserializeObject
ªª2 C
<
ªªC D
List
ªªD H
<
ªªH I
PuntoCanjeado
ªªI V
>
ªªV W
>
ªªW X
(
ªªX Y 
extensionJsonTraza
ªªY k
)
ªªk l
;
ªªl m
var
ºº #
transaccionesDePuntos
ºº )
=
ºº* +$
transaccionRepositorio
ºº, B
.
ººB C"
ObtenerTransacciones
ººC W
(
ººW X
puntosCanjeados
ººX g
.
ººg h
Select
ººh n
(
ººn o
pc
ººo q
=>
ººr t
pc
ººu w
.
ººw x
Id
ººx z
)
ººz {
.
ºº{ |
ToArrayºº| É
(ººÉ Ñ
)ººÑ Ö
)ººÖ Ü
;ººÜ á
foreach
ΩΩ 
(
ΩΩ 
var
ΩΩ  
transaccionDePunto
ΩΩ /
in
ΩΩ0 2#
transaccionesDePuntos
ΩΩ3 H
)
ΩΩH I
{
ææ %
transaccionesAModificar
øø +
=
øø, -
new
øø. 1
List
øø2 6
<
øø6 7
Transaccion
øø7 B
>
øøB C
(
øøC D
)
øøD E
;
øøE F
var
¿¿ ,
puntosPendientesDeModificacion
¿¿ 6
=
¿¿7 8
puntosCanjeados
¿¿9 H
.
¿¿H I
Single
¿¿I O
(
¿¿O P
pc
¿¿P R
=>
¿¿S U
pc
¿¿V X
.
¿¿X Y
Id
¿¿Y [
==
¿¿\ ^ 
transaccionDePunto
¿¿_ q
.
¿¿q r
id
¿¿r t
)
¿¿t u
.
¿¿u v
Cantidad
¿¿v ~
;
¿¿~  
transaccionDePunto
¡¡ &
.
¡¡& '
	cantidad2
¡¡' 0
-=
¡¡1 3,
puntosPendientesDeModificacion
¡¡4 R
;
¡¡R S 
transaccionDePunto
¬¬ &
.
¬¬& '
	cantidad3
¬¬' 0
+=
¬¬1 3,
puntosPendientesDeModificacion
¬¬4 R
;
¬¬R S%
transaccionesAModificar
√√ +
.
√√+ ,
Add
√√, /
(
√√/ 0 
transaccionDePunto
√√0 B
)
√√B C
;
√√C D
}
ƒƒ 
}
≈≈ 
return
∆∆ %
transaccionesAModificar
∆∆ *
;
∆∆* +
}
«« 	
}
»» 
}   ﬂΩ
VD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Venta\OperacionLogica_CreditoVenta.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public 
OperationResult )
DescuentoGlobalOperacionVenta <
(< =
long= A
idOrdenVentaB N
,N O
decimalP W
importeX _
,_ `
stringa g
observacionh s
,s t
intu x
idEventoReferencia	y ã
,
ã å$
UserProfileSessionData
ç £
sesionUsuario
§ ±
)
± ≤
{ 	
try 
{ 
Comprobante 
comprobante '
=( )"
transaccionRepositorio* @
.@ A+
ObtenerComprobanteDeTransaccionA `
(` a
idOrdenVentaa m
)m n
;n o
var 
idTipoComprobante %
=& '
comprobante( 3
.3 4
id_tipo_comprobante4 G
==H J
MaestroSettingsK Z
.Z [
Default[ b
.b c8
+IdDetalleMaestroComprobanteNotaVentaInterna	c é
?
è ê
MaestroSettings
ë †
.
† °
Default
° ®
.
® ©;
-IdDetalleMaestroComprobanteNotaCreditoInterna
© ÷
:
◊ ÿ
MaestroSettings
Ÿ Ë
.
Ë È
Default
È 
.
 Ò4
&IdDetalleMaestroComprobanteNotaCredito
Ò ó
;
ó ò
var 
prefijo 
= 
comprobante )
.) *
id_tipo_comprobante* =
==> @
MaestroSettingsA P
.P Q
DefaultQ X
.X Y-
!IdDetalleMaestroComprobanteBoletaY z
?{ |+
FacturacionElectronicaSettings	} õ
.
õ ú
Default
ú £
.
£ §5
'PrefijoSerieNotaCreditoNotaDebitoBoleta
§ À
:
Ã Õ
(
Œ œ
comprobante
œ ⁄
.
⁄ €!
id_tipo_comprobante
€ Ó
==
Ô Ò
MaestroSettings
Ú Å
.
Å Ç
Default
Ç â
.
â ä0
"IdDetalleMaestroComprobanteFactura
ä ¨
?
≠ Æ,
FacturacionElectronicaSettings
Ø Õ
.
Õ Œ
Default
Œ ’
.
’ ÷6
(PrefijoSerieNotaCreditoNotaDebitoFactura
÷ ˛
:
ˇ Ä
String
Å á
.
á à
Empty
à ç
)
ç é
;
é è
var   
serie   
=   
comprobante   '
.  ' (
id_tipo_comprobante  ( ;
==  < >
MaestroSettings  ? N
.  N O
Default  O V
.  V W8
+IdDetalleMaestroComprobanteNotaVentaInterna	  W Ç
?
  É Ñ"
transaccionRepositorio!! *
.!!* +K
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante!!+ j
(!!j k
idTipoComprobante!!k |
,!!| }
sesionUsuario	!!~ ã
.
!!ã å,
IdCentroDeAtencionSeleccionado
!!å ™
)
!!™ ´
:
!!¨ ≠"
transaccionRepositorio"" *
.""* +X
LObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteYPrefijoSerie""+ w
(""w x
idTipoComprobante	""x â
,
""â ä
sesionUsuario
""ã ò
.
""ò ô,
IdCentroDeAtencionSeleccionado
""ô ∑
,
""∑ ∏
prefijo
""π ¿
)
""¿ ¡
;
""¡ ¬
return## '
GuardarNotaDeCreditoDeVenta## 2
(##2 3
idOrdenVenta##3 ?
,##? @
MaestroSettings##A P
.##P Q
Default##Q X
.##X YD
7IdDetalleMaestroNotaDeCreditoElectronicaDescuentoGlobal	##Y ê
,
##ê ë
observacion
##í ù
,
##ù û
idTipoComprobante
##ü ∞
,
##∞ ±
serie
##≤ ∑
.
##∑ ∏
id
##∏ ∫
,
##∫ ª
true
##º ¿
,
##¿ ¡
String
##¬ »
.
##» …
Empty
##… Œ
,
##Œ œ
$num
##– —
,
##— “
importe
##” ⁄
.
##⁄ €
ToString
##€ „
(
##„ ‰
)
##‰ Â
,
##Â Ê 
idEventoReferencia
##Á ˘
,
##˘ ˙
null
##˚ ˇ
,
##ˇ Ä
sesionUsuario
##Å é
)
##é è
;
##è ê
}$$ 
catch%% 
(%% 
	Exception%% 
e%% 
)%% 
{&& 
throw'' 
new'' 
LogicaException'' )
('') *
$str''* c
,''c d
e''e f
)''f g
;''g h
}(( 
})) 	
public** 
OperationResult**  
AnularOperacionVenta** 3
(**3 4
long**4 8
idOrdenVenta**9 E
,**E F
bool**G K
	darDeBaja**L U
,**U V
string**W ]
observacion**^ i
,**i j
int**k n
idEventoReferencia	**o Å
,
**Å Ç$
UserProfileSessionData
**É ô
sesionUsuario
**ö ß
)
**ß ®
{++ 	
try,, 
{-- 
OperationResult.. 
	resultado..  )
;..) *
Comprobante// 
comprobante// '
=//( )"
transaccionRepositorio//* @
.//@ A+
ObtenerComprobanteDeTransaccion//A `
(//` a
idOrdenVenta//a m
)//m n
;//n o
var00 
idTipoComprobante00 %
=00& '
	darDeBaja00( 1
?002 3
MaestroSettings004 C
.00C D
Default00D K
.00K L9
-IdDetalleMaestroComprobanteNotaCreditoInterna00L y
:00z {
MaestroSettings	00| ã
.
00ã å
Default
00å ì
.
00ì î4
&IdDetalleMaestroComprobanteNotaCredito
00î ∫
;
00∫ ª
var11 
prefijo11 
=11 
(11 
comprobante11 *
.11* +
id_tipo_comprobante11+ >
==11? A
MaestroSettings11B Q
.11Q R
Default11R Y
.11Y Z-
!IdDetalleMaestroComprobanteBoleta11Z {
?11| }+
FacturacionElectronicaSettings	11~ ú
.
11ú ù
Default
11ù §
.
11§ •5
'PrefijoSerieNotaCreditoNotaDebitoBoleta
11• Ã
:
11Õ Œ
(
11œ –
comprobante
11– €
.
11€ ‹!
id_tipo_comprobante
11‹ Ô
==
11 Ú
MaestroSettings
11Û Ç
.
11Ç É
Default
11É ä
.
11ä ã0
"IdDetalleMaestroComprobanteFactura
11ã ≠
?
11Æ Ø,
FacturacionElectronicaSettings
11∞ Œ
.
11Œ œ
Default
11œ ÷
.
11÷ ◊6
(PrefijoSerieNotaCreditoNotaDebitoFactura
11◊ ˇ
:
11Ä Å
String
11Ç à
.
11à â
Empty
11â é
)
11é è
)
11è ê
;
11ê ë
var22 
serie22 
=22 
	darDeBaja22 %
?22& '"
transaccionRepositorio22( >
.22> ?K
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante22? ~
(22~ 
idTipoComprobante	22 ê
,
22ê ë
sesionUsuario
22í ü
.
22ü †,
IdCentroDeAtencionSeleccionado
22† æ
)
22æ ø
:
22¿ ¡$
transaccionRepositorio
22¬ ÿ
.
22ÿ ŸZ
LObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteYPrefijoSerie
22Ÿ •
(
22• ¶
idTipoComprobante
22¶ ∑
,
22∑ ∏
sesionUsuario
22π ∆
.
22∆ «,
IdCentroDeAtencionSeleccionado
22« Â
,
22Â Ê
prefijo
22Á Ó
)
22Ó Ô
;
22Ô 
if33 
(33 
	darDeBaja33 
)33 
{44 
var55  
operacionNotaCredito55 ,
=55- .#
GenerarNotaCreditoVenta55/ F
(55F G
idOrdenVenta55G S
,55S T
MaestroSettings55U d
.55d e
Default55e l
.55l mK
>IdDetalleMaestroNotaDeCreditoElectronicaAnulacionDeLaOperacion	55m ´
,
55´ ¨
observacion
55≠ ∏
,
55∏ π
idTipoComprobante
55∫ À
,
55À Ã
serie
55Õ “
.
55“ ”
id
55” ’
,
55’ ÷
true
55◊ €
,
55€ ‹
String
55› „
.
55„ ‰
Empty
55‰ È
,
55È Í
$num
55Î Ï
,
55Ï Ì
String
55Ó Ù
.
55Ù ı
Empty
55ı ˙
,
55˙ ˚ 
idEventoReferencia
55¸ é
,
55é è
null
55ê î
,
55î ï
sesionUsuario
55ñ £
)
55£ §
;
55§ •
	resultado66 
=66 +
ResolverInvalidarOperacionVenta66  ?
(66? @ 
operacionNotaCredito66@ T
,66T U
idOrdenVenta66V b
,66b c
observacion66d o
,66o p
sesionUsuario66q ~
)66~ 
;	66 Ä
}77 
else88 
{99 
	resultado:: 
=:: '
GuardarNotaDeCreditoDeVenta::  ;
(::; <
idOrdenVenta::< H
,::H I
MaestroSettings::J Y
.::Y Z
Default::Z a
.::a bK
>IdDetalleMaestroNotaDeCreditoElectronicaAnulacionDeLaOperacion	::b †
,
::† °
observacion
::¢ ≠
,
::≠ Æ
idTipoComprobante
::Ø ¿
,
::¿ ¡
serie
::¬ «
.
::« »
id
::»  
,
::  À
true
::Ã –
,
::– —
String
::“ ÿ
.
::ÿ Ÿ
Empty
::Ÿ ﬁ
,
::ﬁ ﬂ
$num
::‡ ·
,
::· ‚
String
::„ È
.
::È Í
Empty
::Í Ô
,
::Ô  
idEventoReferencia
::Ò É
,
::É Ñ
null
::Ö â
,
::â ä
sesionUsuario
::ã ò
)
::ò ô
;
::ô ö
};; 
return<< 
	resultado<<  
;<<  !
}== 
catch>> 
(>> 
	Exception>> 
e>> 
)>> 
{?? 
throw@@ 
new@@ 
LogicaException@@ )
(@@) *
$str@@* c
,@@c d
e@@e f
)@@f g
;@@g h
}AA 
}BB 	
publicDD "
OperacionModificatoriaDD %#
GenerarNotaCreditoVentaDD& =
(DD= >
longDD> B
idOrdenVentaDDC O
,DDO P
intDDQ T

idTipoNotaDDU _
,DD_ `
stringDDa g
motivoDDh n
,DDn o
intDDp s
idTipoComprobante	DDt Ö
,
DDÖ Ü
int
DDá ä 
idSerieComprobante
DDã ù
,
DDù û
bool
DDü £
esPropio
DD§ ¨
,
DD¨ ≠
string
DDÆ ¥&
numeroSerieDeComprobante
DDµ Õ
,
DDÕ Œ
int
DDœ “!
numeroDeComprobante
DD” Ê
,
DDÊ Á
string
DDË Ó
valorDeNota
DDÔ ˙
,
DD˙ ˚
int
DD¸ ˇ 
idEventoReferencia
DDÄ í
,
DDí ì
List
DDî ò
<
DDò ô 
DetalleOrdenDeNota
DDô ´
>
DD´ ¨
detalles
DD≠ µ
,
DDµ ∂$
UserProfileSessionData
DD∑ Õ
sesionUsuario
DDŒ €
)
DD€ ‹
{EE 	
tryFF 
{GG 
varHH 
fechaActualHH 
=HH  !
DateTimeUtilHH" .
.HH. /
FechaActualHH/ :
(HH: ;
)HH; <
;HH< =
varII 

ordenVentaII 
=II  
newII! $
OrdenDeVentaII% 1
(II1 2"
transaccionRepositorioII2 H
.IIH IE
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado	III Å
(
IIÅ Ç
idOrdenVenta
IIÇ é
)
IIé è
)
IIè ê
;
IIê ë
varJJ 
ventaJJ 
=JJ 
newJJ 
VentaJJ  %
(JJ% &"
transaccionRepositorioJJ& <
.JJ< =.
"ObtenerTransaccionInclusiveEstadosJJ= _
(JJ_ `

ordenVentaJJ` j
.JJj k
IdVentaJJk r
)JJr s
)JJs t
;JJt u
ListLL 
<LL 
Detalle_transaccionLL (
>LL( )
detallesNotaLL* 6
=LL7 8,
 CalcularDetalleNotaDebitoCreditoLL9 Y
(LLY Z
detallesLLZ b
,LLb c

ordenVentaLLd n
.LLn o
DetalleTransaccion	LLo Å
(
LLÅ Ç
)
LLÇ É
,
LLÉ Ñ

idTipoNota
LLÖ è
,
LLè ê
valorDeNota
LLë ú
,
LLú ù
motivo
LLû §
,
LL§ •

ordenVenta
LL¶ ∞
.
LL∞ ±
Igv
LL± ¥
(
LL¥ µ
)
LLµ ∂
>
LL∑ ∏
$num
LLπ ∫
)
LL∫ ª
;
LLª º
varMM 
importeTotalMM  
=MM! "
detallesNotaMM# /
.MM/ 0
SumMM0 3
(MM3 4
dMM4 5
=>MM6 8
dMM9 :
.MM: ;
totalMM; @
)MM@ A
+MMB C

ordenVentaMMD N
.MMN O
IcbperMMO U
(MMU V
)MMV W
;MMW X%
ValidarNotaCreditoEnVentaNN )
(NN) *

ordenVentaNN* 4
,NN4 5
importeTotalNN6 B
)NNB C
;NNC D
intOO 
idUnidadNegocioOO #
=OO$ %
MaestroSettingsOO& 5
.OO5 6
DefaultOO6 =
.OO= >6
*IdDetalleMaestroUnidadDeNegocioTransversalOO> h
;OOh i
intQQ 3
'idTipoTransaccionMovimientoDeMercaderiaQQ ;
=QQ< =
DiccionarioQQ> I
.QQI J+
MapeoOrdenVsMovimientoDeAlmacenQQJ i
.QQi j
SingleOrDefaultQQj y
(QQy z
lQQz {
=>QQ| ~
l	QQ Ä
.
QQÄ Å
Key
QQÅ Ñ
==
QQÖ á
Diccionario
QQà ì
.
QQì î 
MapeoWraperVsOrden
QQî ¶
.
QQ¶ ß
Single
QQß ≠
(
QQ≠ Æ
m
QQÆ Ø
=>
QQ∞ ≤
m
QQ≥ ¥
.
QQ¥ µ
Key
QQµ ∏
==
QQπ ª
Diccionario
QQº «
.
QQ« »;
-MapeoDetalleMaestroVsTipoTransaccionParaVenta
QQ» ı
.
QQı ˆ
Single
QQˆ ¸
(
QQ¸ ˝
n
QQ˝ ˛
=>
QQˇ Å
n
QQÇ É
.
QQÉ Ñ
Key
QQÑ á
==
QQà ä

idTipoNota
QQã ï
)
QQï ñ
.
QQñ ó
Value
QQó ú
)
QQú ù
.
QQù û
Value
QQû £
)
QQ£ §
.
QQ§ •
Value
QQ• ™
;
QQ™ ´
permisos_LogicaSS 
.SS  
ValidarAccionSS  -
(SS- .
sesionUsuarioSS. ;
.SS; <
EmpleadoSS< D
.SSD E
IdSSE G
,SSG H
MaestroSettingsSSI X
.SSX Y
DefaultSSY `
.SS` a,
IdDetalleMaestroAccionConfirmar	SSa Ä
,
SSÄ Å
Diccionario
SSÇ ç
.
SSç é 
MapeoWraperVsOrden
SSé †
.
SS† °
Single
SS° ß
(
SSß ®
m
SS® ©
=>
SS™ ¨
m
SS≠ Æ
.
SSÆ Ø
Key
SSØ ≤
==
SS≥ µ
Diccionario
SS∂ ¡
.
SS¡ ¬;
-MapeoDetalleMaestroVsTipoTransaccionParaVenta
SS¬ Ô
.
SSÔ 
Single
SS ˆ
(
SSˆ ˜
n
SS˜ ¯
=>
SS˘ ˚
n
SS¸ ˝
.
SS˝ ˛
Key
SS˛ Å
==
SSÇ Ñ

idTipoNota
SSÖ è
)
SSè ê
.
SSê ë
Value
SSë ñ
)
SSñ ó
.
SSó ò
Value
SSò ù
,
SSù û
idUnidadNegocio
SSü Æ
)
SSÆ Ø
;
SSØ ∞
TransaccionTT 
notaCreditoTT '
=TT( )&
GenerarNotaDeCreditoDebitoTT* D
(TTD E
sesionUsuarioTTE R
.TTR S
EmpleadoTTS [
.TT[ \
IdTT\ ^
,TT^ _
idUnidadNegocioTT` o
,TTo p
esPropioTTq y
,TTy z
idSerieComprobante	TT{ ç
,
TTç é
idTipoComprobante
TTè †
,
TT† °!
numeroDeComprobante
TT¢ µ
,
TTµ ∂&
numeroSerieDeComprobante
TT∑ œ
,
TTœ –
fechaActual
TT— ‹
,
TT‹ ›
$str
TTﬁ ‚
,
TT‚ „
Diccionario
TT‰ Ô
.
TTÔ ;
-MapeoDetalleMaestroVsTipoTransaccionParaVenta
TT ù
.
TTù û
Single
TTû §
(
TT§ •
n
TT• ¶
=>
TTß ©
n
TT™ ´
.
TT´ ¨
Key
TT¨ Ø
==
TT∞ ≤

idTipoNota
TT≥ Ω
)
TTΩ æ
.
TTæ ø
Value
TTø ƒ
,
TTƒ ≈
importeTotal
TT∆ “
,
TT“ ”
motivo
TT‘ ⁄
,
TT⁄ €

ordenVenta
TT‹ Ê
.
TTÊ Á
Cliente
TTÁ Ó
(
TTÓ Ô
)
TTÔ 
.
TT Ò
Id
TTÒ Û
,
TTÛ Ù
sesionUsuario
TTı Ç
.
TTÇ É,
IdCentroDeAtencionSeleccionado
TTÉ °
,
TT° ¢
sesionUsuario
TT£ ∞
)
TT∞ ±
;
TT± ≤
ModoPagoUU 
modoPagoUU !
=UU" #

ordenVentaUU$ .
.UU. /

ModoDePagoUU/ 9
(UU9 :
)UU: ;
;UU; <
TransaccionVV 
ordenNotaCreditoVV ,
=VV- .+
GenerarOrdenNotaDeCreditoDebitoVV/ N
(VVN O
notaCreditoVVO Z
,VVZ [
sesionUsuarioVV\ i
.VVi j
EmpleadoVVj r
.VVr s
IdVVs u
,VVu v
idUnidadNegocio	VVw Ü
,
VVÜ á

idTipoNota
VVà í
,
VVí ì
fechaActual
VVî ü
,
VVü †
(
VV° ¢
(
VV¢ £
int
VV£ ¶
)
VV¶ ß
modoPago
VVß Ø
)
VVØ ∞
.
VV∞ ±
ToString
VV± π
(
VVπ ∫
)
VV∫ ª
,
VVª º
$str
VVΩ ¡
,
VV¡ ¬
Diccionario
VV√ Œ
.
VVŒ œ 
MapeoWraperVsOrden
VVœ ·
.
VV· ‚
Single
VV‚ Ë
(
VVË È
m
VVÈ Í
=>
VVÎ Ì
m
VVÓ Ô
.
VVÔ 
Key
VV Û
==
VVÙ ˆ
Diccionario
VV˜ Ç
.
VVÇ É;
-MapeoDetalleMaestroVsTipoTransaccionParaVenta
VVÉ ∞
.
VV∞ ±
Single
VV± ∑
(
VV∑ ∏
n
VV∏ π
=>
VV∫ º
n
VVΩ æ
.
VVæ ø
Key
VVø ¬
==
VV√ ≈

idTipoNota
VV∆ –
)
VV– —
.
VV— “
Value
VV“ ◊
)
VV◊ ÿ
.
VVÿ Ÿ
Value
VVŸ ﬁ
,
VVﬁ ﬂ
motivo
VV‡ Ê
,
VVÊ Á

ordenVenta
VVË Ú
.
VVÚ Û
Cliente
VVÛ ˙
(
VV˙ ˚
)
VV˚ ¸
.
VV¸ ˝
Id
VV˝ ˇ
,
VVˇ Ä

ordenVenta
VVÅ ã
.
VVã å
AliasCliente
VVå ò
(
VVò ô
)
VVô ö
,
VVö õ
sesionUsuario
VVú ©
.
VV© ™,
IdCentroDeAtencionSeleccionado
VV™ »
,
VV» …
detallesNota
VV  ÷
,
VV÷ ◊
MaestroSettings
VVÿ Á
.
VVÁ Ë
Default
VVË Ô
.
VVÔ .
 IdDetalleMaestroEstadoConfirmado
VV ê
,
VVê ë
$str
VVí »
,
VV» …
true
VV  Œ
,
VVŒ œ5
'idTipoTransaccionMovimientoDeMercaderia
VV– ˜
!=
VV¯ ˙
$num
VV˚ ¸
)
VV¸ ˝
;
VV˝ ˛
ifWW 
(WW 
idEventoReferenciaWW &
!=WW' )
$numWW* +
)WW+ ,
ordenNotaCreditoWW- =
.WW= > 
id_evento_referenciaWW> R
=WWS T
idEventoReferenciaWWU g
;WWg h%
ResolverIcbperNotaCreditoXX )
(XX) *

ordenVentaXX* 4
,XX4 5
ordenNotaCreditoXX6 F
)XXF G
;XXG H
ordenNotaCreditoYY  
.YY  !%
id_transaccion_referenciaYY! :
=YY; <

ordenVentaYY= G
.YYG H
IdYYH J
;YYJ K
notaCreditoZZ 
.ZZ 
Transaccion1ZZ (
.ZZ( )
AddZZ) ,
(ZZ, -
ordenNotaCreditoZZ- =
)ZZ= >
;ZZ> ?
Transaccion[[ 
pagoNota[[ $
=[[% &#
DevolverPagoNotaCredito[[' >
([[> ?
notaCredito[[? J
,[[J K
ordenNotaCredito[[L \
,[[\ ]
fechaActual[[^ i
,[[i j

idTipoNota[[k u
,[[u v
modoPago[[w 
,	[[ Ä
importeTotal
[[Å ç
,
[[ç é
sesionUsuario
[[è ú
)
[[ú ù
;
[[ù û
Transaccion\\  
salidaMercaderiaNota\\ 0
=\\1 2/
#DevolverSalidaMercaderiaNotaCredito\\3 V
(\\V W
venta\\W \
,\\\ ]

ordenVenta\\^ h
,\\h i
notaCredito\\j u
,\\u v
ordenNotaCredito	\\w á
,
\\á à
fechaActual
\\â î
,
\\î ï5
'idTipoTransaccionMovimientoDeMercaderia
\\ñ Ω
,
\\Ω æ
detallesNota
\\ø À
,
\\À Ã
sesionUsuario
\\Õ ⁄
)
\\⁄ €
;
\\€ ‹
var]] "
operacionModificatoria]] *
=]]+ ,
new]]- 0"
OperacionModificatoria]]1 G
{^^ 
	Operacion__ 
=__ 
notaCredito__  +
,__+ ,
OrdenDeOperacion`` $
=``% &
ordenNotaCredito``' 7
,``7 8
MovimientoEconomicoaa '
=aa( )
pagoNotaaa* 2
,aa2 3
MovimientosBienesbb %
=bb& ' 
salidaMercaderiaNotabb( <
==bb= ?
nullbb@ D
?bbE F
nullbbG K
:bbL M
newbbN Q
ListbbR V
<bbV W
TransaccionbbW b
>bbb c
(bbc d
)bbd e
{bbf g 
salidaMercaderiaNotabbh |
}bb} ~
}cc 
;cc 
returndd "
operacionModificatoriadd -
;dd- .
}ee 
catchff 
(ff 
	Exceptionff 
eff 
)ff 
{gg 
throwhh 
newhh 
LogicaExceptionhh )
(hh) *
$strhh* j
,hhj k
ehhl m
)hhm n
;hhn o
}ii 
}jj 	
publickk 
voidkk %
ResolverIcbperNotaCreditokk -
(kk- .
OrdenDeVentakk. :
ordenDeVentakk; G
,kkG H
TransaccionkkI T 
ordenDeNotaDeCreditokkU i
)kki j
{ll 	
ifmm 
(mm 
ordenDeVentamm 
.mm 
Icbpermm #
(mm# $
)mm$ %
>mm& '
$nummm( )
)mm) *
{nn  
ordenDeNotaDeCreditooo $
.oo$ %
	importe10oo% .
=oo/ 0
ordenDeVentaoo1 =
.oo= >
Icbperoo> D
(ooD E
)ooE F
;ooF G 
ordenDeNotaDeCreditopp $
.pp$ %!
Parametro_transaccionpp% :
.pp: ;
Addpp; >
(pp> ?
newpp? B!
Parametro_transaccionppC X
(ppX Y
MaestroSettingsppY h
.pph i
Defaultppi p
.ppp q,
IdDetalleMaestroParametroIcbper	ppq ê
,
ppê ë
ordenDeVenta
ppí û
.
ppû ü
Icbper
ppü •
(
pp• ¶
)
pp¶ ß
.
ppß ®
ToString
pp® ∞
(
pp∞ ±
)
pp± ≤
)
pp≤ ≥
)
pp≥ ¥
;
pp¥ µ 
ordenDeNotaDeCreditoqq $
.qq$ %!
Parametro_transaccionqq% :
.qq: ;
Addqq; >
(qq> ?
newqq? B!
Parametro_transaccionqqC X
(qqX Y
MaestroSettingsqqY h
.qqh i
Defaultqqi p
.qqp q<
/IdDetalleMaestroParametroNumeroBolsasDePlastico	qqq †
,
qq† °
ordenDeVenta
qq¢ Æ
.
qqÆ Ø$
NumeroBolsasDePlastico
qqØ ≈
(
qq≈ ∆
)
qq∆ «
.
qq« »
ToString
qq» –
(
qq– —
)
qq— “
)
qq“ ”
)
qq” ‘
;
qq‘ ’
}rr 
}ss 	
publictt 
Transacciontt #
DevolverPagoNotaCreditott 2
(tt2 3
Transacciontt3 >
notaCreditott? J
,ttJ K
TransaccionttL W
ordenNotaCreditottX h
,tth i
DateTimettj r
fechaActualtts ~
,tt~ 
int
ttÄ É

idTipoNota
ttÑ é
,
tté è
ModoPago
ttê ò
modoPago
ttô °
,
tt° ¢
decimal
tt£ ™
importeTotal
tt´ ∑
,
tt∑ ∏$
UserProfileSessionData
ttπ œ
sesionUsuario
tt– ›
)
tt› ﬁ
{uu 	
Transaccionvv 
pagovv 
=vv 
nullvv #
;vv# $
ifww 
(ww 

idTipoNotaww 
!=ww 
MaestroSettingsww -
.ww- .
Defaultww. 5
.ww5 6U
IIdDetalleMaestroNotaDeCreditoElectronicaCorreccionPorErrorEnLaDescripcionww6 
)	ww Ä
{xx 
Cuotayy 
cuotayy 
=yy 
newyy !
Cuotayy" '
(yy' (0
$ObtenerSiguienteCodigoParaNuevaCuotayy( L
(yyL M
falseyyM R
,yyR S
fechaActualyyT _
.yy_ `
Yearyy` d
)yyd e
+yyf g
$stryyh k
+yyl m
$numyyn o
,yyo p
fechaActualyyq |
,yy| }
fechaActual	yy~ â
,
yyâ ä
importeTotal
yyã ó
,
yyó ò
$str
yyô √
,
yy√ ƒ
false
yy≈  
)
yy  À
;
yyÀ Ã
ordenNotaCreditozz  
.zz  !
Cuotazz! &
.zz& '
Addzz' *
(zz* +
cuotazz+ 0
)zz0 1
;zz1 2
if{{ 
({{ 
modoPago{{ 
=={{ 
ModoPago{{  (
.{{( )
Contado{{) 0
){{0 1
{||  
ValidarImporteAPagar}} (
(}}( )
$num}}) *
,}}* +
cuota}}, 1
.}}1 2
total}}2 7
,}}7 8
ordenNotaCredito}}9 I
.}}I J
importe_total}}J W
)}}W X
;}}X Y
pago~~ 
=~~ ,
 GenerarPagoPorNotaCreditoODebito~~ ;
(~~; <
ordenNotaCredito~~< L
,~~L M

CodigoPago~~N X
(~~X Y
cuota~~Y ^
)~~^ _
,~~_ `
cuota~~a f
.~~f g
total~~g l
,~~l m
sesionUsuario~~n {
.~~{ |
Empleado	~~| Ñ
.
~~Ñ Ö
Id
~~Ö á
,
~~á à
fechaActual
~~â î
,
~~î ï
$str
~~ñ ò
,
~~ò ô
sesionUsuario
~~ö ß
.
~~ß ®,
IdCentroDeAtencionSeleccionado
~~® ∆
,
~~∆ «
MaestroSettings
~~» ◊
.
~~◊ ÿ
Default
~~ÿ ﬂ
.
~~ﬂ ‡.
 IdDetalleMaestroEstadoConfirmado
~~‡ Ä
,
~~Ä Å
$str
~~Ç ø
)
~~ø ¿
;
~~¿ ¡
cuota 
. 
SetPagoACuenta (
(( )
ordenNotaCredito) 9
.9 :
importe_total: G
)G H
;H I$
VincularPagoConLaCuota
ÄÄ *
(
ÄÄ* +
pago
ÄÄ+ /
,
ÄÄ/ 0
cuota
ÄÄ1 6
,
ÄÄ6 7
ordenNotaCredito
ÄÄ8 H
.
ÄÄH I
importe_total
ÄÄI V
)
ÄÄV W
;
ÄÄW X
notaCredito
ÅÅ 
.
ÅÅ  
Transaccion1
ÅÅ  ,
.
ÅÅ, -
Add
ÅÅ- 0
(
ÅÅ0 1
pago
ÅÅ1 5
)
ÅÅ5 6
;
ÅÅ6 7
}
ÇÇ 
}
ÉÉ 
return
ÑÑ 
pago
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
ÜÜ 
Transaccion
ÜÜ 1
#DevolverSalidaMercaderiaNotaCredito
ÜÜ >
(
ÜÜ> ?
Venta
ÜÜ? D
venta
ÜÜE J
,
ÜÜJ K
OrdenDeVenta
ÜÜL X

ordenVenta
ÜÜY c
,
ÜÜc d
Transaccion
ÜÜe p
notaCredito
ÜÜq |
,
ÜÜ| }
TransaccionÜÜ~ â$
ordenDeNotaDeCreditoÜÜä û
,ÜÜû ü
DateTimeÜÜ† ®
fechaActualÜÜ© ¥
,ÜÜ¥ µ
intÜÜ∂ π7
'idTipoTransaccionMovimientoDeMercaderiaÜÜ∫ ·
,ÜÜ· ‚
ListÜÜ„ Á
<ÜÜÁ Ë#
Detalle_transaccionÜÜË ˚
>ÜÜ˚ ¸
detallesNotaÜÜ˝ â
,ÜÜâ ä&
UserProfileSessionDataÜÜã °
sesionUsuarioÜÜ¢ Ø
)ÜÜØ ∞
{
áá 	
Transaccion
àà &
salidaMercaderiaPorVenta
àà 0
=
àà1 2
null
àà3 7
;
àà7 8
var
ââ $
salidasMercaderiaVenta
ââ &
=
ââ' (
venta
ââ) .
.
ââ. /(
ObtenerSalidasDeMercaderia
ââ/ I
(
ââI J
)
ââJ K
;
ââK L
if
ää 
(
ää $
salidasMercaderiaVenta
ää &
.
ää& '
Count
ää' ,
>
ää- .
$num
ää/ 0
&&
ää1 35
'idTipoTransaccionMovimientoDeMercaderia
ää4 [
!=
ää\ ^
$num
ää_ `
)
ää` a
{
ãã &
salidaMercaderiaPorVenta
åå (
=
åå) *+
GenerarMovimientoDeMercaderia
åå+ H
(
ååH I"
ordenDeNotaDeCredito
ååI ]
,
åå] ^
sesionUsuario
åå_ l
.
åål m
Empleado
ååm u
.
ååu v
Id
ååv x
,
ååx y
sesionUsuarioååz á
.ååá à8
(IdCentroAtencionQueTieneElStockIntegradaååà ∞
,åå∞ ±

ordenVentaåå≤ º
.ååº Ω
	IdClienteååΩ ∆
,åå∆ «7
'idTipoTransaccionMovimientoDeMercaderiaåå» Ô
,ååÔ 
fechaActualååÒ ¸
,åå¸ ˝
$stråå˛ Ä
,ååÄ Å
detallesNotaååÇ é
,ååé è
sesionUsuarioååê ù
,ååù û

ordenVentaååü ©
.åå© ™"
OperacionDeAlmacenåå™ º
(ååº Ω
)ååΩ æ
.ååæ ø
Idååø ¡
)åå¡ ¬
;åå¬ √&
salidaMercaderiaPorVenta
çç (
.
çç( )
Transaccion3
çç) 5
=
çç6 7"
ordenDeNotaDeCredito
çç8 L
;
ççL M
notaCredito
éé 
.
éé 
Transaccion1
éé (
.
éé( )
Add
éé) ,
(
éé, -&
salidaMercaderiaPorVenta
éé- E
)
ééE F
;
ééF G
}
èè 
return
êê &
salidaMercaderiaPorVenta
êê +
;
êê+ ,
}
ëë 	
public
íí 
OperationResult
íí )
GuardarNotaDeCreditoDeVenta
íí :
(
íí: ;
long
íí; ?
idOrdenVenta
íí@ L
,
ííL M
int
ííN Q

idTipoNota
ííR \
,
íí\ ]
string
íí^ d
motivo
ííe k
,
íík l
int
íím p 
idTipoComprobanteííq Ç
,ííÇ É
intííÑ á"
idSerieComprobanteííà ö
,ííö õ
boolííú †
esPropioíí° ©
,íí© ™
stringíí´ ±(
numeroSerieDeComprobanteíí≤  
,íí  À
intííÃ œ#
numeroDeComprobanteíí– „
,íí„ ‰
stringííÂ Î
valorDeNotaííÏ ˜
,íí˜ ¯
intíí˘ ¸"
idEventoReferenciaíí˝ è
,ííè ê
Listííë ï
<ííï ñ"
DetalleOrdenDeNotaííñ ®
>íí® ©
detallesíí™ ≤
,íí≤ ≥&
UserProfileSessionDataíí¥  
sesionUsuarioííÀ ÿ
)ííÿ Ÿ
{
ìì 	
try
îî 
{
ïï 
DateTime
óó 
fechaEmision
óó %
=
óó& '
DateTimeUtil
óó( 4
.
óó4 5
FechaActual
óó5 @
(
óó@ A
)
óóA B
;
óóB C
OrdenDeVenta
ôô 
ordenDeVenta
ôô )
=
ôô* +
new
ôô, /
OrdenDeVenta
ôô0 <
(
ôô< =$
transaccionRepositorio
ôô= S
.
ôôS TG
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoôôT å
(ôôå ç
idOrdenVentaôôç ô
)ôôô ö
)ôôö õ
;ôôõ ú
Venta
õõ 
venta
õõ 
=
õõ 
new
õõ !
Venta
õõ" '
(
õõ' ($
transaccionRepositorio
õõ( >
.
õõ> ?0
"ObtenerTransaccionInclusiveEstados
õõ? a
(
õõa b
ordenDeVenta
õõb n
.
õõn o
IdVenta
õõo v
)
õõv w
)
õõw x
;
õõx y
List
ùù 
<
ùù !
Detalle_transaccion
ùù (
>
ùù( )
detallesDeNota
ùù* 8
=
ùù9 :.
 CalcularDetalleNotaDebitoCredito
ùù; [
(
ùù[ \
detalles
ùù\ d
,
ùùd e
ordenDeVenta
ùùf r
.
ùùr s!
DetalleTransaccionùùs Ö
(ùùÖ Ü
)ùùÜ á
,ùùá à

idTipoNotaùùâ ì
,ùùì î
valorDeNotaùùï †
,ùù† °
motivoùù¢ ®
,ùù® ©
ordenDeVentaùù™ ∂
.ùù∂ ∑
Igvùù∑ ∫
(ùù∫ ª
)ùùª º
>ùùΩ æ
$numùùø ¿
)ùù¿ ¡
;ùù¡ ¬
var
üü 
importeTotal
üü  
=
üü! "
detallesDeNota
üü# 1
.
üü1 2
Sum
üü2 5
(
üü5 6
d
üü6 7
=>
üü8 :
d
üü; <
.
üü< =
total
üü= B
)
üüB C
+
üüD E
ordenDeVenta
üüF R
.
üüR S
Icbper
üüS Y
(
üüY Z
)
üüZ [
;
üü[ \'
ValidarNotaCreditoEnVenta
°° )
(
°°) *
ordenDeVenta
°°* 6
,
°°6 7
importeTotal
°°8 D
)
°°D E
;
°°E F
int
££ 
idUnidadNegocio
££ #
=
££$ %
MaestroSettings
££& 5
.
££5 6
Default
££6 =
.
££= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
££> h
;
££h i
int
ßß 5
'idTipoTransaccionMovimientoDeMercaderia
ßß ;
=
ßß< =
Diccionario
ßß> I
.
ßßI J-
MapeoOrdenVsMovimientoDeAlmacen
ßßJ i
.
ßßi j
SingleOrDefault
ßßj y
(
ßßy z
l
ßßz {
=>
ßß| ~
lßß Ä
.ßßÄ Å
KeyßßÅ Ñ
==ßßÖ á
Diccionarioßßà ì
.ßßì î"
MapeoWraperVsOrdenßßî ¶
.ßß¶ ß
Singleßßß ≠
(ßß≠ Æ
mßßÆ Ø
=>ßß∞ ≤
mßß≥ ¥
.ßß¥ µ
Keyßßµ ∏
==ßßπ ª
Diccionarioßßº «
.ßß« »=
-MapeoDetalleMaestroVsTipoTransaccionParaVentaßß» ı
.ßßı ˆ
Singleßßˆ ¸
(ßß¸ ˝
nßß˝ ˛
=>ßßˇ Å
nßßÇ É
.ßßÉ Ñ
KeyßßÑ á
==ßßà ä

idTipoNotaßßã ï
)ßßï ñ
.ßßñ ó
Valueßßó ú
)ßßú ù
.ßßù û
Valueßßû £
)ßß£ §
.ßß§ •
Valueßß• ™
;ßß™ ´
permisos_Logica
©© 
.
©©  
ValidarAccion
©©  -
(
©©- .
sesionUsuario
©©. ;
.
©©; <
Empleado
©©< D
.
©©D E
Id
©©E G
,
©©G H
MaestroSettings
©©I X
.
©©X Y
Default
©©Y `
.
©©` a.
IdDetalleMaestroAccionConfirmar©©a Ä
,©©Ä Å
Diccionario©©Ç ç
.©©ç é"
MapeoWraperVsOrden©©é †
.©©† °
Single©©° ß
(©©ß ®
m©©® ©
=>©©™ ¨
m©©≠ Æ
.©©Æ Ø
Key©©Ø ≤
==©©≥ µ
Diccionario©©∂ ¡
.©©¡ ¬=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta©©¬ Ô
.©©Ô 
Single©© ˆ
(©©ˆ ˜
n©©˜ ¯
=>©©˘ ˚
n©©¸ ˝
.©©˝ ˛
Key©©˛ Å
==©©Ç Ñ

idTipoNota©©Ö è
)©©è ê
.©©ê ë
Value©©ë ñ
)©©ñ ó
.©©ó ò
Value©©ò ù
,©©ù û
idUnidadNegocio©©ü Æ
)©©Æ Ø
;©©Ø ∞
Transaccion
´´ 
notaDeCredito
´´ )
=
´´* +(
GenerarNotaDeCreditoDebito
´´, F
(
´´F G
sesionUsuario
´´G T
.
´´T U
Empleado
´´U ]
.
´´] ^
Id
´´^ `
,
´´` a
idUnidadNegocio
´´b q
,
´´q r
esPropio
´´s {
,
´´{ |!
idSerieComprobante´´} è
,´´è ê!
idTipoComprobante´´ë ¢
,´´¢ £#
numeroDeComprobante´´§ ∑
,´´∑ ∏(
numeroSerieDeComprobante´´π —
,´´— “
fechaEmision´´” ﬂ
,´´ﬂ ‡
$str´´· Â
,´´Â Ê
Diccionario´´Á Ú
.´´Ú Û=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta´´Û †
.´´† °
Single´´° ß
(´´ß ®
n´´® ©
=>´´™ ¨
n´´≠ Æ
.´´Æ Ø
Key´´Ø ≤
==´´≥ µ

idTipoNota´´∂ ¿
)´´¿ ¡
.´´¡ ¬
Value´´¬ «
,´´« »
importeTotal´´… ’
,´´’ ÷
motivo´´◊ ›
,´´› ﬁ
ordenDeVenta´´ﬂ Î
.´´Î Ï
Cliente´´Ï Û
(´´Û Ù
)´´Ù ı
.´´ı ˆ
Id´´ˆ ¯
,´´¯ ˘
sesionUsuario´´˙ á
.´´á à.
IdCentroDeAtencionSeleccionado´´à ¶
,´´¶ ß
sesionUsuario´´® µ
)´´µ ∂
;´´∂ ∑
ModoPago
ÆÆ 
modoPago
ÆÆ !
=
ÆÆ" #
ordenDeVenta
ÆÆ$ 0
.
ÆÆ0 1

ModoDePago
ÆÆ1 ;
(
ÆÆ; <
)
ÆÆ< =
;
ÆÆ= >
Transaccion
±± "
ordenDeNotaDeCredito
±± 0
=
±±1 2-
GenerarOrdenNotaDeCreditoDebito
±±3 R
(
±±R S
notaDeCredito
±±S `
,
±±` a
sesionUsuario
±±b o
.
±±o p
Empleado
±±p x
.
±±x y
Id
±±y {
,
±±{ |
idUnidadNegocio±±} å
,±±å ç

idTipoNota±±é ò
,±±ò ô
fechaEmision±±ö ¶
,±±¶ ß
(±±® ©
(±±© ™
int±±™ ≠
)±±≠ Æ
modoPago±±Æ ∂
)±±∂ ∑
.±±∑ ∏
ToString±±∏ ¿
(±±¿ ¡
)±±¡ ¬
,±±¬ √
$str±±ƒ »
,±±» …
Diccionario±±  ’
.±±’ ÷"
MapeoWraperVsOrden±±÷ Ë
.±±Ë È
Single±±È Ô
(±±Ô 
m±± Ò
=>±±Ú Ù
m±±ı ˆ
.±±ˆ ˜
Key±±˜ ˙
==±±˚ ˝
Diccionario±±˛ â
.±±â ä=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta±±ä ∑
.±±∑ ∏
Single±±∏ æ
(±±æ ø
n±±ø ¿
=>±±¡ √
n±±ƒ ≈
.±±≈ ∆
Key±±∆ …
==±±  Ã

idTipoNota±±Õ ◊
)±±◊ ÿ
.±±ÿ Ÿ
Value±±Ÿ ﬁ
)±±ﬁ ﬂ
.±±ﬂ ‡
Value±±‡ Â
,±±Â Ê
motivo±±Á Ì
,±±Ì Ó
ordenDeVenta±±Ô ˚
.±±˚ ¸
Cliente±±¸ É
(±±É Ñ
)±±Ñ Ö
.±±Ö Ü
Id±±Ü à
,±±à â
ordenDeVenta±±ä ñ
.±±ñ ó
AliasCliente±±ó £
(±±£ §
)±±§ •
,±±• ¶
sesionUsuario±±ß ¥
.±±¥ µ.
IdCentroDeAtencionSeleccionado±±µ ”
,±±” ‘
detallesDeNota±±’ „
,±±„ ‰
MaestroSettings±±Â Ù
.±±Ù ı
Default±±ı ¸
.±±¸ ˝0
 IdDetalleMaestroEstadoConfirmado±±˝ ù
,±±ù û
$str±±ü ’
,±±’ ÷
true±±◊ €
,±±€ ‹7
'idTipoTransaccionMovimientoDeMercaderia±±› Ñ
!=±±Ö á
$num±±à â
)±±â ä
;±±ä ã
if
≥≥ 
(
≥≥  
idEventoReferencia
≥≥ &
!=
≥≥' )
$num
≥≥* +
)
≥≥+ ,"
ordenDeNotaDeCredito
≥≥- A
.
≥≥A B"
id_evento_referencia
≥≥B V
=
≥≥W X 
idEventoReferencia
≥≥Y k
;
≥≥k l
if
µµ 
(
µµ 
ordenDeVenta
µµ  
.
µµ  !
Icbper
µµ! '
(
µµ' (
)
µµ( )
>
µµ* +
$num
µµ, -
)
µµ- .
{
∂∂ "
ordenDeNotaDeCredito
∑∑ (
.
∑∑( )
	importe10
∑∑) 2
=
∑∑3 4
ordenDeVenta
∑∑5 A
.
∑∑A B
Icbper
∑∑B H
(
∑∑H I
)
∑∑I J
;
∑∑J K"
ordenDeNotaDeCredito
∏∏ (
.
∏∏( )#
Parametro_transaccion
∏∏) >
.
∏∏> ?
Add
∏∏? B
(
∏∏B C
new
∏∏C F#
Parametro_transaccion
∏∏G \
(
∏∏\ ]
MaestroSettings
∏∏] l
.
∏∏l m
Default
∏∏m t
.
∏∏t u.
IdDetalleMaestroParametroIcbper∏∏u î
,∏∏î ï
ordenDeVenta∏∏ñ ¢
.∏∏¢ £
Icbper∏∏£ ©
(∏∏© ™
)∏∏™ ´
.∏∏´ ¨
ToString∏∏¨ ¥
(∏∏¥ µ
)∏∏µ ∂
)∏∏∂ ∑
)∏∏∑ ∏
;∏∏∏ π"
ordenDeNotaDeCredito
ππ (
.
ππ( )#
Parametro_transaccion
ππ) >
.
ππ> ?
Add
ππ? B
(
ππB C
new
ππC F#
Parametro_transaccion
ππG \
(
ππ\ ]
MaestroSettings
ππ] l
.
ππl m
Default
ππm t
.
ππt u>
/IdDetalleMaestroParametroNumeroBolsasDePlasticoππu §
,ππ§ •
ordenDeVentaππ¶ ≤
.ππ≤ ≥&
NumeroBolsasDePlasticoππ≥ …
(ππ…  
)ππ  À
.ππÀ Ã
ToStringππÃ ‘
(ππ‘ ’
)ππ’ ÷
)ππ÷ ◊
)ππ◊ ÿ
;ππÿ Ÿ
}
∫∫ "
ordenDeNotaDeCredito
ºº $
.
ºº$ %'
id_transaccion_referencia
ºº% >
=
ºº? @
ordenDeVenta
ººA M
.
ººM N
Id
ººN P
;
ººP Q
notaDeCredito
ææ 
.
ææ 
Transaccion1
ææ *
.
ææ* +
Add
ææ+ .
(
ææ. /"
ordenDeNotaDeCredito
ææ/ C
)
ææC D
;
ææD E
if
¿¿ 
(
¿¿ 

idTipoNota
¿¿ 
!=
¿¿ !
MaestroSettings
¿¿" 1
.
¿¿1 2
Default
¿¿2 9
.
¿¿9 :X
IIdDetalleMaestroNotaDeCreditoElectronicaCorreccionPorErrorEnLaDescripcion¿¿: É
)¿¿É Ñ
{
¡¡ 
Cuota
√√ 
cuota
√√ 
=
√√  !
new
√√" %
Cuota
√√& +
(
√√+ ,2
$ObtenerSiguienteCodigoParaNuevaCuota
√√, P
(
√√P Q
false
√√Q V
,
√√V W
fechaEmision
√√X d
.
√√d e
Year
√√e i
)
√√i j
+
√√k l
$str
√√m p
+
√√q r
$num
√√s t
,
√√t u
fechaEmision√√v Ç
,√√Ç É
fechaEmision√√Ñ ê
,√√ê ë
importeTotal√√í û
,√√û ü
$str√√†  
,√√  À
false√√Ã —
)√√— “
;√√“ ”"
ordenDeNotaDeCredito
≈≈ (
.
≈≈( )
Cuota
≈≈) .
.
≈≈. /
Add
≈≈/ 2
(
≈≈2 3
cuota
≈≈3 8
)
≈≈8 9
;
≈≈9 :
if
∆∆ 
(
∆∆ 
modoPago
∆∆  
==
∆∆! #
ModoPago
∆∆$ ,
.
∆∆, -
Contado
∆∆- 4
)
∆∆4 5
{
«« "
ValidarImporteAPagar
…… ,
(
……, -
$num
……- .
,
……. /
cuota
……0 5
.
……5 6
total
……6 ;
,
……; <"
ordenDeNotaDeCredito
……= Q
.
……Q R
importe_total
……R _
)
……_ `
;
……` a
Transaccion
ÀÀ #
pago
ÀÀ$ (
=
ÀÀ) *.
 GenerarPagoPorNotaCreditoODebito
ÀÀ+ K
(
ÀÀK L"
ordenDeNotaDeCredito
ÀÀL `
,
ÀÀ` a

CodigoPago
ÀÀb l
(
ÀÀl m
cuota
ÀÀm r
)
ÀÀr s
,
ÀÀs t
cuota
ÀÀu z
.
ÀÀz {
totalÀÀ{ Ä
,ÀÀÄ Å
sesionUsuarioÀÀÇ è
.ÀÀè ê
EmpleadoÀÀê ò
.ÀÀò ô
IdÀÀô õ
,ÀÀõ ú
fechaEmisionÀÀù ©
,ÀÀ© ™
$strÀÀ´ ≠
,ÀÀ≠ Æ
sesionUsuarioÀÀØ º
.ÀÀº Ω.
IdCentroDeAtencionSeleccionadoÀÀΩ €
,ÀÀ€ ‹
MaestroSettingsÀÀ› Ï
.ÀÀÏ Ì
DefaultÀÀÌ Ù
.ÀÀÙ ı0
 IdDetalleMaestroEstadoConfirmadoÀÀı ï
,ÀÀï ñ
$strÀÀó ‘
)ÀÀ‘ ’
;ÀÀ’ ÷
cuota
ÃÃ 
.
ÃÃ 
SetPagoACuenta
ÃÃ ,
(
ÃÃ, -"
ordenDeNotaDeCredito
ÃÃ- A
.
ÃÃA B
importe_total
ÃÃB O
)
ÃÃO P
;
ÃÃP Q$
VincularPagoConLaCuota
ÕÕ .
(
ÕÕ. /
pago
ÕÕ/ 3
,
ÕÕ3 4
cuota
ÕÕ5 :
,
ÕÕ: ;"
ordenDeNotaDeCredito
ÕÕ< P
.
ÕÕP Q
importe_total
ÕÕQ ^
)
ÕÕ^ _
;
ÕÕ_ `
notaDeCredito
œœ %
.
œœ% &
Transaccion1
œœ& 2
.
œœ2 3
Add
œœ3 6
(
œœ6 7
pago
œœ7 ;
)
œœ; <
;
œœ< =
}
–– 
}
—— 
Transaccion
““ &
salidaMercaderiaPorVenta
““ 4
=
““5 6
null
““7 ;
;
““; <
var
”” $
salidasMercaderiaVenta
”” *
=
””+ ,
venta
””- 2
.
””2 3(
ObtenerSalidasDeMercaderia
””3 M
(
””M N
)
””N O
;
””O P
if
’’ 
(
’’ $
salidasMercaderiaVenta
’’ *
.
’’* +
Count
’’+ 0
>
’’1 2
$num
’’3 4
&&
’’5 75
'idTipoTransaccionMovimientoDeMercaderia
’’8 _
!=
’’` b
$num
’’c d
)
’’d e
{
÷÷ &
salidaMercaderiaPorVenta
ÿÿ ,
=
ÿÿ- .+
GenerarMovimientoDeMercaderia
ÿÿ/ L
(
ÿÿL M"
ordenDeNotaDeCredito
ÿÿM a
,
ÿÿa b
sesionUsuario
ÿÿc p
.
ÿÿp q
Empleado
ÿÿq y
.
ÿÿy z
Id
ÿÿz |
,
ÿÿ| }
sesionUsuarioÿÿ~ ã
.ÿÿã å8
(IdCentroAtencionQueTieneElStockIntegradaÿÿå ¥
,ÿÿ¥ µ
ordenDeVentaÿÿ∂ ¬
.ÿÿ¬ √
	IdClienteÿÿ√ Ã
,ÿÿÃ Õ7
'idTipoTransaccionMovimientoDeMercaderiaÿÿŒ ı
,ÿÿı ˆ
fechaEmisionÿÿ˜ É
,ÿÿÉ Ñ
$strÿÿÖ á
,ÿÿá à
detallesDeNotaÿÿâ ó
,ÿÿó ò
sesionUsuarioÿÿô ¶
,ÿÿ¶ ß
ordenDeVentaÿÿ® ¥
.ÿÿ¥ µ"
OperacionDeAlmacenÿÿµ «
(ÿÿ« »
)ÿÿ» …
.ÿÿ…  
Idÿÿ  Ã
)ÿÿÃ Õ
;ÿÿÕ Œ&
salidaMercaderiaPorVenta
⁄⁄ ,
.
⁄⁄, -
Transaccion3
⁄⁄- 9
=
⁄⁄: ;"
ordenDeNotaDeCredito
⁄⁄< P
;
⁄⁄P Q
notaDeCredito
‹‹ !
.
‹‹! "
Transaccion1
‹‹" .
.
‹‹. /
Add
‹‹/ 2
(
‹‹2 3&
salidaMercaderiaPorVenta
‹‹3 K
)
‹‹K L
;
‹‹L M
}
›› 
if
ﬁﬁ 
(
ﬁﬁ 5
'idTipoTransaccionMovimientoDeMercaderia
ﬁﬁ ;
!=
ﬁﬁ< >
$num
ﬁﬁ? @
)
ﬁﬁ@ A
{
ﬂﬂ 
return
‡‡ 6
(AfectarInventarioFisicoYGuardarOperacion
‡‡ C
(
‡‡C D
new
‡‡D G 
OperacionIntegrada
‡‡H Z
{
‡‡[ \
	Operacion
‡‡] f
=
‡‡g h
notaDeCredito
‡‡i v
,
‡‡v w
OrdenDeOperacion‡‡x à
=‡‡â ä$
ordenDeNotaDeCredito‡‡ã ü
,‡‡ü †!
MovimientosBienes‡‡° ≤
=‡‡≥ ¥
(‡‡µ ∂&
salidasMercaderiaVenta‡‡∂ Ã
.‡‡Ã Õ
Count‡‡Õ “
>‡‡” ‘
$num‡‡’ ÷
)‡‡÷ ◊
?‡‡ÿ Ÿ
new‡‡⁄ ›
List‡‡ﬁ ‚
<‡‡‚ „
Transaccion‡‡„ Ó
>‡‡Ó Ô
(‡‡Ô 
)‡‡ Ò
{‡‡Ú Û(
salidaMercaderiaPorVenta‡‡Ù å
}‡‡ç é
:‡‡è ê
null‡‡ë ï
}‡‡ñ ó
,‡‡ó ò
sesionUsuario‡‡ô ¶
)‡‡¶ ß
;‡‡ß ®
}
·· 
else
‚‚ 
{
„„ 
var
‰‰ 
result
‰‰ 
=
‰‰  $
transaccionRepositorio
‰‰! 7
.
‰‰7 8
CrearTransaccion
‰‰8 H
(
‰‰H I
notaDeCredito
‰‰I V
)
‰‰V W
;
‰‰W X
result
ÂÂ 
.
ÂÂ 
information
ÂÂ &
=
ÂÂ' (
new
ÂÂ) ,
	Operacion
ÂÂ- 6
(
ÂÂ6 7"
ordenDeNotaDeCredito
ÂÂ7 K
)
ÂÂK L
.
ÂÂL M
Id
ÂÂM O
;
ÂÂO P
result
ÊÊ 
.
ÊÊ 
objeto
ÊÊ !
=
ÊÊ" #
new
ÊÊ$ '
OrdenDeVenta
ÊÊ( 4
(
ÊÊ4 5"
ordenDeNotaDeCredito
ÊÊ5 I
)
ÊÊI J
;
ÊÊJ K
return
ÁÁ 
result
ÁÁ !
;
ÁÁ! "
}
ËË 
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* l
,
ÏÏl m
e
ÏÏn o
)
ÏÏo p
;
ÏÏp q
}
ÌÌ 
}
ÓÓ 	
public
ÒÒ 
OperationResult
ÒÒ 
GuardarNotaVenta
ÒÒ /
(
ÒÒ/ 0
long
ÒÒ0 4
idOrdenVenta
ÒÒ5 A
,
ÒÒA B
int
ÒÒC F

idTipoNota
ÒÒG Q
,
ÒÒQ R
int
ÒÒS V
idTipoComprobante
ÒÒW h
,
ÒÒh i
int
ÒÒj m!
idSerieComprobanteÒÒn Ä
,ÒÒÄ Å
boolÒÒÇ Ü
esPropioÒÒá è
,ÒÒè ê
stringÒÒë ó
numeroSerieÒÒò £
,ÒÒ£ §
intÒÒ• ®!
numeroComprobanteÒÒ© ∫
,ÒÒ∫ ª
decimalÒÒº √
	montoNotaÒÒƒ Õ
,ÒÒÕ Œ
intÒÒœ “"
idEventoReferenciaÒÒ” Â
,ÒÒÂ Ê
ListÒÒÁ Î
<ÒÒÎ Ï"
DetalleOrdenDeNotaÒÒÏ ˛
>ÒÒ˛ ˇ
detallesÒÒÄ à
,ÒÒà â
boolÒÒä é
esDebitoÒÒè ó
,ÒÒó ò
boolÒÒô ù

esDiferidaÒÒû ®
,ÒÒ® ©
stringÒÒ™ ∞
observacionÒÒ± º
,ÒÒº Ω
	DatosPagoÒÒæ «
	datosPagoÒÒ» —
,ÒÒ— “&
UserProfileSessionDataÒÒ” È
sesionUsuarioÒÒÍ ˜
)ÒÒ˜ ¯
{
ÚÚ 	
try
ÛÛ 
{
ÙÙ 
DateTime
ıı 
fechaActual
ıı $
=
ıı% &
DateTimeUtil
ıı' 3
.
ıı3 4
FechaActual
ıı4 ?
(
ıı? @
)
ıı@ A
;
ııA B
List
ˆˆ 
<
ˆˆ 
Cuota
ˆˆ 
>
ˆˆ 
cuotasModificadas
ˆˆ -
=
ˆˆ. /
new
ˆˆ0 3
List
ˆˆ4 8
<
ˆˆ8 9
Cuota
ˆˆ9 >
>
ˆˆ> ?
(
ˆˆ? @
)
ˆˆ@ A
;
ˆˆA B
List
˜˜ 
<
˜˜  
Estado_transaccion
˜˜ '
>
˜˜' (&
estadosTransaccionNuevos
˜˜) A
=
˜˜B C
new
˜˜D G
List
˜˜H L
<
˜˜L M 
Estado_transaccion
˜˜M _
>
˜˜_ `
(
˜˜` a
)
˜˜a b
;
˜˜b c
List
¯¯ 
<
¯¯ !
Detalle_transaccion
¯¯ (
>
¯¯( ),
detallesTransaccionModificados
¯¯* H
=
¯¯I J
new
¯¯K N
List
¯¯O S
<
¯¯S T!
Detalle_transaccion
¯¯T g
>
¯¯g h
(
¯¯h i
)
¯¯i j
;
¯¯j k
var
˘˘ 

ordenVenta
˘˘ 
=
˘˘  
new
˘˘! $
OrdenDeVenta
˘˘% 1
(
˘˘1 2$
transaccionRepositorio
˘˘2 H
.
˘˘H I0
"ObtenerTransaccionInclusiveEstados
˘˘I k
(
˘˘k l
idOrdenVenta
˘˘l x
)
˘˘x y
)
˘˘y z
;
˘˘z {
var
˙˙ 
venta
˙˙ 
=
˙˙ 
new
˙˙ 
Venta
˙˙  %
(
˙˙% &$
transaccionRepositorio
˙˙& <
.
˙˙< =0
"ObtenerTransaccionInclusiveEstados
˙˙= _
(
˙˙_ `

ordenVenta
˙˙` j
.
˙˙j k
IdVenta
˙˙k r
)
˙˙r s
)
˙˙s t
;
˙˙t u
var
˚˚ 
operacionNota
˚˚ !
=
˚˚" #
new
˚˚$ '
OperacionNota
˚˚( 5
(
˚˚5 6
venta
˚˚6 ;
,
˚˚; <

ordenVenta
˚˚= G
,
˚˚G H
fechaActual
˚˚I T
,
˚˚T U

idTipoNota
˚˚V `
,
˚˚` a
idTipoComprobante
˚˚b s
,
˚˚s t!
idSerieComprobante˚˚u á
,˚˚á à
esPropio˚˚â ë
,˚˚ë í
numeroSerie˚˚ì û
,˚˚û ü!
numeroComprobante˚˚† ±
,˚˚± ≤
	montoNota˚˚≥ º
,˚˚º Ω
detalles˚˚æ ∆
,˚˚∆ «
esDebito˚˚» –
,˚˚– —

esDiferida˚˚“ ‹
,˚˚‹ ›
observacion˚˚ﬁ È
,˚˚È Í
	datosPago˚˚Î Ù
,˚˚Ù ı
sesionUsuario˚˚ˆ É
)˚˚É Ñ
;˚˚Ñ Ö1
#RecalcularDetalleNotaDebitoCredito_
˝˝ 3
(
˝˝3 4
operacionNota
˝˝4 A
,
˝˝A B&
estadosTransaccionNuevos
˝˝C [
,
˝˝[ \
cuotasModificadas
˝˝] n
,
˝˝n o-
detallesTransaccionModificados˝˝p é
)˝˝é è
;˝˝è ê
if
˛˛ 
(
˛˛ 
!
˛˛ 
esDebito
˛˛ 
)
˛˛ '
ValidarNotaCreditoEnVenta
˛˛ 8
(
˛˛8 9
operacionNota
˛˛9 F
.
˛˛F G

OrdenVenta
˛˛G Q
,
˛˛Q R
operacionNota
˛˛S `
.
˛˛` a
ImporteTotal
˛˛a m
)
˛˛m n
;
˛˛n o
Transaccion
ÄÄ 
	operacion
ÄÄ %
=
ÄÄ& ''
GenerarNotaCreditoDebito_
ÄÄ( A
(
ÄÄA B
operacionNota
ÄÄB O
)
ÄÄO P
;
ÄÄP Q
Transaccion
ÅÅ 
ordenOperacion
ÅÅ *
=
ÅÅ+ ,,
GenerarOrdenNotaCreditoDebito_
ÅÅ- K
(
ÅÅK L
	operacion
ÅÅL U
,
ÅÅU V
operacionNota
ÅÅW d
)
ÅÅd e
;
ÅÅe f
Transaccion
ÇÇ 
pago
ÇÇ  
=
ÇÇ! "'
GenerarPagoCreditoDebito_
ÇÇ# <
(
ÇÇ< =
	operacion
ÇÇ= F
,
ÇÇF G
ordenOperacion
ÇÇH V
,
ÇÇV W
operacionNota
ÇÇX e
)
ÇÇe f
;
ÇÇf g
Transaccion
ÉÉ 
movimientoAlmacen
ÉÉ -
=
ÉÉ. /4
&GenerarMovimientoAlmacenCreditoDebito_
ÉÉ0 V
(
ÉÉV W
	operacion
ÉÉW `
,
ÉÉ` a
ordenOperacion
ÉÉb p
,
ÉÉp q
operacionNota
ÉÉr 
,ÉÉ Ä
sesionUsuarioÉÉÅ é
)ÉÉé è
;ÉÉè ê
var
ÖÖ *
movimientoEconomicoConPuntos
ÖÖ 0
=
ÖÖ1 2
venta
ÖÖ3 8
.
ÖÖ8 9
ObtenerPagos
ÖÖ9 E
(
ÖÖE F
)
ÖÖF G
.
ÖÖG H
FirstOrDefault
ÖÖH V
(
ÖÖV W
p
ÖÖW X
=>
ÖÖY [
p
ÖÖ\ ]
.
ÖÖ] ^
TrazaDePago
ÖÖ^ i
(
ÖÖi j
)
ÖÖj k
.
ÖÖk l
MedioDePago
ÖÖl w
(
ÖÖw x
)
ÖÖx y
.
ÖÖy z
id
ÖÖz |
==
ÖÖ} 
MaestroSettingsÖÖÄ è
.ÖÖè ê
DefaultÖÖê ó
.ÖÖó ò1
!IdDetalleMaestroMedioDepagoPuntosÖÖò π
)ÖÖπ ∫
;ÖÖ∫ ª
var
ÜÜ &
transaccionesModificadas
ÜÜ ,
=
ÜÜ- .-
GenerarTransaccionesAModificar_
ÜÜ/ N
(
ÜÜN O*
movimientoEconomicoConPuntos
ÜÜO k
)
ÜÜk l
;
ÜÜl m
var
àà $
operacionModificatoria
àà *
=
àà+ ,
new
àà- 0$
OperacionModificatoria
àà1 G
(
ààG H
)
ààH I
{
ààJ K
	Operacion
ààL U
=
ààV W
	operacion
ààX a
,
ààa b
OrdenDeOperacion
ààc s
=
ààt u
ordenOperacionààv Ñ
,ààÑ Ö#
MovimientoEconomicoààÜ ô
=ààö õ
pagoààú †
,àà† °!
MovimientosBienesàà¢ ≥
=àà¥ µ!
movimientoAlmacenàà∂ «
!=àà»  
nullààÀ œ
?àà– —
newàà“ ’
Listàà÷ ⁄
<àà⁄ €
Transaccionàà€ Ê
>ààÊ Á
(ààÁ Ë
)ààË È
{ààÍ Î!
movimientoAlmacenààÏ ˝
}àà˛ ˇ
:ààÄ Å
nullààÇ Ü
,ààÜ á5
%NuevosEstadosTransaccionesModificadasààà ≠
=ààÆ Ø(
estadosTransaccionNuevosàà∞ »
,àà» …!
CuotasModificadasàà  €
=àà‹ ›!
cuotasModificadasààﬁ Ô
,ààÔ (
TransaccionesModificadasààÒ â
=ààä ã(
transaccionesModificadasààå §
,àà§ •.
DetallesTransaccionModificadosàà¶ ƒ
=àà≈ ∆.
detallesTransaccionModificadosàà« Â
}ààÊ Á
;ààÁ Ë
var
ââ 
	resultado
ââ 
=
ââ 6
(AfectarInventarioFisicoYGuardarOperacion
ââ  H
(
ââH I$
operacionModificatoria
ââI _
,
ââ_ `
sesionUsuario
ââa n
)
âân o
;
ââo p
	resultado
ää 
.
ää 
objeto
ää  
=
ää! "
new
ää# &
OrdenDeVenta
ää' 3
(
ää3 4$
operacionModificatoria
ää4 J
.
ääJ K
OrdenDeOperacion
ääK [
)
ää[ \
;
ää\ ]
return
ãã 
	resultado
ãã  
;
ãã  !
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* l
,
èèl m
e
èèn o
)
èèo p
;
èèp q
}
êê 
}
ëë 	
private
ìì 
Transaccion
ìì '
GenerarNotaCreditoDebito_
ìì 5
(
ìì5 6
OperacionNota
ìì6 C
operacionNota
ììD Q
)
ììQ R
{
îî 	
	Operacion
ïï 
operacionGenerica
ïï '
=
ïï( )
new
ïï* -
	Operacion
ïï. 7
(
ïï7 8$
transaccionRepositorio
ïï8 N
.
ïïN O&
ObtenerUltimaTransaccion
ïïO g
(
ïïg h!
TransaccionSettings
ïïh {
.
ïï{ |
Defaultïï| É
.ïïÉ Ñ*
IdTipoTransaccionOperacionïïÑ û
)ïïû ü
)ïïü †
;ïï† °
string
ññ 
codigo
ññ 
=
ññ %
codigosOperacion_Logica
ññ 3
.
ññ3 43
%ObtenerSiguienteCodigoParaFacturacion
ññ4 Y
(
ññY Z
operacionNota
ññZ g
.
ññg h
SufijoCodigo
ññh t
,
ññt u
operacionNotaññv É
.ññÉ Ñ!
IdTipoTransaccionññÑ ï
)ññï ñ
;ñññ ó
Comprobante
óó 
comprobante
óó #
=
óó$ % 
GenerarComprobante
óó& 8
(
óó8 9
operacionNota
óó9 F
.
óóF G
EsPropio
óóG O
,
óóO P
operacionNota
óóQ ^
.
óó^ _ 
IdSerieComprobante
óó_ q
,
óóq r
operacionNotaóós Ä
.óóÄ Å!
IdTipoComprobanteóóÅ í
,óóí ì
operacionNotaóóî °
.óó° ¢
NumeroSerieóó¢ ≠
,óó≠ Æ
operacionNotaóóØ º
.óóº Ω!
NumeroComprobanteóóΩ Œ
)óóŒ œ
;óóœ –
Transaccion
òò 
nota
òò 
=
òò 
new
òò "
Transaccion
òò# .
(
òò. /
codigo
òò/ 5
,
òò5 6
operacionGenerica
òò7 H
.
òòH I
Id
òòI K
,
òòK L
operacionNota
òòM Z
.
òòZ [
FechaActual
òò[ f
,
òòf g
operacionNota
òòh u
.
òòu v 
IdTipoTransaccionòòv á
,òòá à
operacionNotaòòâ ñ
.òòñ ó!
IdUnidadDeNegocioòòó ®
,òò® ©
trueòò™ Æ
,òòÆ Ø
operacionNotaòò∞ Ω
.òòΩ æ
FechaActualòòæ …
,òò…  
operacionNotaòòÀ ÿ
.òòÿ Ÿ
FechaActualòòŸ ‰
,òò‰ Â
operacionNotaòòÊ Û
.òòÛ Ù$
ObservacionOperacionòòÙ à
,òòà â
operacionNotaòòä ó
.òòó ò
FechaActualòòò £
,òò£ §
operacionNotaòò• ≤
.òò≤ ≥

IdEmpleadoòò≥ Ω
,òòΩ æ
operacionNotaòòø Ã
.òòÃ Õ
ImporteTotalòòÕ Ÿ
,òòŸ ⁄
operacionNotaòò€ Ë
.òòË È 
IdCentroAtencionòòÈ ˘
,òò˘ ˙
operacionNotaòò˚ à
.òòà â
IdMonedaòòâ ë
,òòë í
operacionNotaòòì †
.òò† °
TipoDeCambioòò° ≠
,òò≠ Æ
nullòòØ ≥
,òò≥ ¥
operacionNotaòòµ ¬
.òò¬ √
	IdClienteòò√ Ã
)òòÃ Õ
{
ôô 
Comprobante
öö 
=
öö 
comprobante
öö )
}
õõ 
;
õõ 
return
úú 
nota
úú 
;
úú 
}
ùù 	
private
üü 
Transaccion
üü ,
GenerarOrdenNotaCreditoDebito_
üü :
(
üü: ;
Transaccion
üü; F
	operacion
üüG P
,
üüP Q
OperacionNota
üüR _
operacionNota
üü` m
)
üüm n
{
†† 	
Transaccion
°° 
ordenDeNota
°° #
=
°°$ %
new
°°& )
Transaccion
°°* 5
(
°°5 6%
codigosOperacion_Logica
°°6 M
.
°°M N3
%ObtenerSiguienteCodigoParaFacturacion
°°N s
(
°°s t
	operacion
°°t }
.
°°} ~
codigo°°~ Ñ
+°°Ö Ü
$str°°á ã
+°°å ç
operacionNota°°é õ
.°°õ ú
SufijoCodigo°°ú ®
,°°® ©
operacionNota°°™ ∑
.°°∑ ∏&
IdTipoTransaccionOrden°°∏ Œ
)°°Œ œ
,°°œ –
null°°— ’
,°°’ ÷
operacionNota°°◊ ‰
.°°‰ Â
FechaActual°°Â 
,°° Ò
operacionNota°°Ú ˇ
.°°ˇ Ä&
IdTipoTransaccionOrden°°Ä ñ
,°°ñ ó
operacionNota°°ò •
.°°• ¶!
IdUnidadDeNegocio°°¶ ∑
,°°∑ ∏
true°°π Ω
,°°Ω æ
operacionNota°°ø Ã
.°°Ã Õ
FechaActual°°Õ ÿ
,°°ÿ Ÿ
operacionNota°°⁄ Á
.°°Á Ë
FechaActual°°Ë Û
,°°Û Ù
operacionNota°°ı Ç
.°°Ç É$
ObservacionOperacion°°É ó
,°°ó ò
operacionNota°°ô ¶
.°°¶ ß
FechaActual°°ß ≤
,°°≤ ≥
operacionNota°°¥ ¡
.°°¡ ¬

IdEmpleado°°¬ Ã
,°°Ã Õ
	operacion°°Œ ◊
.°°◊ ÿ
importe_total°°ÿ Â
,°°Â Ê
operacionNota°°Á Ù
.°°Ù ı 
IdCentroAtencion°°ı Ö
,°°Ö Ü
	operacion°°á ê
.°°ê ë
	id_moneda°°ë ö
,°°ö õ
	operacion°°ú •
.°°• ¶
tipo_cambio°°¶ ±
,°°± ≤
null°°≥ ∑
,°°∑ ∏
operacionNota°°π ∆
.°°∆ «
	IdCliente°°« –
,°°– —
operacionNota°°“ ﬂ
.°°ﬂ ‡
DescuentoGlobal°°‡ Ô
,°°Ô 
operacionNota°°Ò ˛
.°°˛ ˇ 
DescuentoPorItem°°ˇ è
,°°è ê
operacionNota°°ë û
.°°û ü
Anticipo°°ü ß
,°°ß ®
operacionNota°°© ∂
.°°∂ ∑
Gravada°°∑ æ
,°°æ ø
operacionNota°°¿ Õ
.°°Õ Œ
	Exonerada°°Œ ◊
,°°◊ ÿ
operacionNota°°Ÿ Ê
.°°Ê Á
Inafecta°°Á Ô
,°°Ô 
operacionNota°°Ò ˛
.°°˛ ˇ
Gratuita°°ˇ á
,°°á à
operacionNota°°â ñ
.°°ñ ó
Igv°°ó ö
,°°ö õ
operacionNota°°ú ©
.°°© ™
Isc°°™ ≠
,°°≠ Æ
operacionNota°°Ø º
.°°º Ω
Icbper°°Ω √
,°°√ ƒ
operacionNota°°≈ “
.°°“ ”
OtrosCargos°°” ﬁ
,°°ﬁ ﬂ
operacionNota°°‡ Ì
.°°Ì Ó
OtrosTributos°°Ó ˚
)°°˚ ¸
{
¢¢ 
Comprobante
££ 
=
££ 
	operacion
££ '
.
££' (
Comprobante
££( 3
,
££3 4'
id_transaccion_referencia
§§ )
=
§§* +
operacionNota
§§, 9
.
§§9 :

OrdenVenta
§§: D
.
§§D E
Id
§§E G
,
§§G H'
id_actor_negocio_externo1
•• )
=
••* +
operacionNota
••, 9
.
••9 :

OrdenVenta
••: D
.
••D E
IdGrupoCliente
••E S
,
••S T
}
¶¶ 
;
¶¶ 
ordenDeNota
ßß 
.
ßß 
AgregarDetalles
ßß '
(
ßß' (!
Detalle_transaccion
ßß( ;
.
ßß; <
Clone
ßß< A
(
ßßA B
operacionNota
ßßB O
.
ßßO P
DetallesOperacion
ßßP a
)
ßßa b
)
ßßb c
;
ßßc d
if
®® 
(
®® 
operacionNota
®® 
.
®® 
Icbper
®® $
>
®®% &
$num
®®' (
)
®®( )
{
©© 
ordenDeNota
™™ 
.
™™ #
Parametro_transaccion
™™ 1
.
™™1 2
Add
™™2 5
(
™™5 6
new
™™6 9#
Parametro_transaccion
™™: O
(
™™O P
MaestroSettings
™™P _
.
™™_ `
Default
™™` g
.
™™g h.
IdDetalleMaestroParametroIcbper™™h á
,™™á à
operacionNota™™â ñ
.™™ñ ó
Icbper™™ó ù
.™™ù û
ToString™™û ¶
(™™¶ ß
)™™ß ®
)™™® ©
)™™© ™
;™™™ ´
}
´´ 
if
¨¨ 
(
¨¨ 
operacionNota
¨¨ 
.
¨¨ "
NumeroBolsasPlastico
¨¨ 2
>
¨¨3 4
$num
¨¨5 6
)
¨¨6 7
{
≠≠ 
ordenDeNota
ÆÆ 
.
ÆÆ #
Parametro_transaccion
ÆÆ 1
.
ÆÆ1 2
Add
ÆÆ2 5
(
ÆÆ5 6
new
ÆÆ6 9#
Parametro_transaccion
ÆÆ: O
(
ÆÆO P
MaestroSettings
ÆÆP _
.
ÆÆ_ `
Default
ÆÆ` g
.
ÆÆg h>
/IdDetalleMaestroParametroNumeroBolsasDePlasticoÆÆh ó
,ÆÆó ò
operacionNotaÆÆô ¶
.ÆÆ¶ ß$
NumeroBolsasPlasticoÆÆß ª
.ÆÆª º
ToStringÆÆº ƒ
(ÆÆƒ ≈
)ÆÆ≈ ∆
)ÆÆ∆ «
)ÆÆ« »
;ÆÆ» …
}
ØØ 
if
∞∞ 
(
∞∞ 
!
∞∞ 
string
∞∞ 
.
∞∞ 
IsNullOrEmpty
∞∞ %
(
∞∞% &
operacionNota
∞∞& 3
.
∞∞3 4
AliasCliente
∞∞4 @
)
∞∞@ A
)
∞∞A B
{
±± 
ordenDeNota
≤≤ 
.
≤≤ #
Parametro_transaccion
≤≤ 1
.
≤≤1 2
Add
≤≤2 5
(
≤≤5 6
new
≤≤6 9#
Parametro_transaccion
≤≤: O
(
≤≤O P
MaestroSettings
≤≤P _
.
≤≤_ `
Default
≤≤` g
.
≤≤g h4
%IdDetalleMaestroParametroAliasCliente≤≤h ç
,≤≤ç é
operacionNota≤≤è ú
.≤≤ú ù
AliasCliente≤≤ù ©
)≤≤© ™
)≤≤™ ´
;≤≤´ ¨
}
≥≥ 
ordenDeNota
¥¥ 
.
¥¥ #
Parametro_transaccion
¥¥ -
.
¥¥- .
Add
¥¥. 1
(
¥¥1 2
new
¥¥2 5#
Parametro_transaccion
¥¥6 K
(
¥¥K L
MaestroSettings
¥¥L [
.
¥¥[ \
Default
¥¥\ c
.
¥¥c d>
/IdDetalleMaestroParametroCodigoTransaccionSunat¥¥d ì
,¥¥ì î"
maestroRepositorio¥¥ï ß
.¥¥ß ®
ObtenerDetalle¥¥® ∂
(¥¥∂ ∑
operacionNota¥¥∑ ƒ
.¥¥ƒ ≈

IdTipoNota¥¥≈ œ
)¥¥œ –
.¥¥– —
codigo¥¥— ◊
)¥¥◊ ÿ
)¥¥ÿ Ÿ
;¥¥Ÿ ⁄
ordenDeNota
µµ 
.
µµ #
Parametro_transaccion
µµ -
.
µµ- .
Add
µµ. 1
(
µµ1 2
new
µµ2 5#
Parametro_transaccion
µµ6 K
(
µµK L
MaestroSettings
µµL [
.
µµ[ \
Default
µµ\ c
.
µµc d2
#IdDetalleMaestroParametroModoDePagoµµd á
,µµá à
(µµâ ä
(µµä ã
intµµã é
)µµé è
operacionNotaµµè ú
.µµú ù
PagoOperacionµµù ™
.µµ™ ´

ModoDePagoµµ´ µ
)µµµ ∂
.µµ∂ ∑
ToStringµµ∑ ø
(µµø ¿
)µµ¿ ¡
)µµ¡ ¬
)µµ¬ √
;µµ√ ƒ
ordenDeNota
∂∂ 
.
∂∂  
Estado_transaccion
∂∂ *
.
∂∂* +
Add
∂∂+ .
(
∂∂. /
new
∂∂/ 2 
Estado_transaccion
∂∂3 E
(
∂∂E F
operacionNota
∂∂F S
.
∂∂S T

IdEmpleado
∂∂T ^
,
∂∂^ _
MaestroSettings
∂∂` o
.
∂∂o p
Default
∂∂p w
.
∂∂w x/
 IdDetalleMaestroEstadoConfirmado∂∂x ò
,∂∂ò ô
operacionNota∂∂ö ß
.∂∂ß ®
FechaActual∂∂® ≥
,∂∂≥ ¥
$str∂∂µ Ê
)∂∂Ê Á
)∂∂Á Ë
;∂∂Ë È
ordenDeNota
∏∏ 
.
∏∏ 
enum1
∏∏ 
=
∏∏ 
operacionNota
∏∏  -
.
∏∏- .)
IndicadorImpactoAlmacenNota
∏∏. I
;
∏∏I J
if
ππ 
(
ππ 
ordenDeNota
ππ 
.
ππ 
enum1
ππ !
==
ππ" $
(
ππ% &
int
ππ& )
)
ππ) *%
IndicadorImpactoAlmacen
ππ* A
.
ππA B
	Inmediata
ππB K
||
ππL N
ordenDeNota
ππO Z
.
ππZ [
enum1
ππ[ `
==
ππa c
(
ππd e
int
ππe h
)
ππh i&
IndicadorImpactoAlmacenππi Ä
.ππÄ Å
DiferidaππÅ â
)ππâ ä
{
∫∫ 
ordenDeNota
ªª 
.
ªª '
id_actor_negocio_interno1
ªª 5
=
ªª6 7
operacionNota
ªª8 E
.
ªªE F
	IdAlmacen
ªªF O
;
ªªO P 
Estado_transaccion
ºº " 
estadoOrdenAlmacen
ºº# 5
=
ºº6 7
new
ºº8 ; 
Estado_transaccion
ºº< N
(
ººN O
operacionNota
ººO \
.
ºº\ ]

IdEmpleado
ºº] g
,
ººg h
operacionNota
ººi v
.
ººv w"
EsDiferidaOperacionººw ä
?ººã å
MaestroSettingsººç ú
.ººú ù
Defaultººù §
.ºº§ •/
IdDetalleMaestroEstadoPendienteºº• ƒ
:ºº≈ ∆
MaestroSettingsºº« ÷
.ºº÷ ◊
Defaultºº◊ ﬁ
.ººﬁ ﬂ0
 IdDetalleMaestroEstadoCompletadaººﬂ ˇ
,ººˇ Ä
operacionNotaººÅ é
.ººé è
FechaActualººè ö
,ººö õ
$strººú Œ
)ººŒ œ
;ººœ –
ordenDeNota
ΩΩ 
.
ΩΩ  
Estado_transaccion
ΩΩ .
.
ΩΩ. /
Add
ΩΩ/ 2
(
ΩΩ2 3 
estadoOrdenAlmacen
ΩΩ3 E
)
ΩΩE F
;
ΩΩF G
}
ææ 
	operacion
øø 
.
øø 
Transaccion1
øø "
.
øø" #
Add
øø# &
(
øø& '
ordenDeNota
øø' 2
)
øø2 3
;
øø3 4
return
¿¿ 
ordenDeNota
¿¿ 
;
¿¿ 
}
¡¡ 	
private
¬¬ 
Transaccion
¬¬ '
GenerarPagoCreditoDebito_
¬¬ 5
(
¬¬5 6
Transaccion
¬¬6 A
	operacion
¬¬B K
,
¬¬K L
Transaccion
¬¬M X
ordenOperacion
¬¬Y g
,
¬¬g h
OperacionNota
¬¬i v
operacionNota¬¬w Ñ
)¬¬Ñ Ö
{
√√ 	
Transaccion
ƒƒ 
pago
ƒƒ 
=
ƒƒ 
null
ƒƒ #
;
ƒƒ# $
if
≈≈ 
(
≈≈ 
operacionNota
≈≈ 
.
≈≈ 
ImportePagoTotal
≈≈ .
>
≈≈/ 0
$num
≈≈1 2
)
≈≈2 3
{
∆∆ 
bool
«« 
	porCobrar
«« 
=
««  
operacionNota
««! .
.
««. /
EsDebito
««/ 7
;
««7 8
if
»» 
(
»» 
operacionNota
»» !
.
»»! "
PagoOperacion
»»" /
.
»»/ 0

ModoDePago
»»0 :
==
»»; =
ModoPago
»»> F
.
»»F G 
CreditoConfigurado
»»G Y
)
»»Y Z
{
…… 
int
   
cont
   
=
   
$num
    
;
    !
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ  
item
ÀÀ! %
in
ÀÀ& (
operacionNota
ÀÀ) 6
.
ÀÀ6 7
PagoOperacion
ÀÀ7 D
.
ÀÀD E
CuotasDeVenta
ÀÀE R
(
ÀÀR S
)
ÀÀS T
)
ÀÀT U
{
ÃÃ 
var
ÕÕ 
cuota
ÕÕ !
=
ÕÕ" #
new
ÕÕ$ '
Cuota
ÕÕ( -
(
ÕÕ- .2
$ObtenerSiguienteCodigoParaNuevaCuota
ÕÕ. R
(
ÕÕR S
	porCobrar
ÕÕS \
,
ÕÕ\ ]
operacionNota
ÕÕ^ k
.
ÕÕk l
FechaActual
ÕÕl w
.
ÕÕw x
Year
ÕÕx |
)
ÕÕ| }
+
ÕÕ~ 
$strÕÕÄ É
+ÕÕÑ Ö
contÕÕÜ ä
++ÕÕä å
,ÕÕå ç
operacionNotaÕÕé õ
.ÕÕõ ú
FechaActualÕÕú ß
,ÕÕß ®
itemÕÕ© ≠
.ÕÕ≠ Æ!
fecha_vencimientoÕÕÆ ø
,ÕÕø ¿
itemÕÕ¡ ≈
.ÕÕ≈ ∆
capitalÕÕ∆ Õ
,ÕÕÕ Œ
itemÕÕœ ”
.ÕÕ” ‘
interesÕÕ‘ €
,ÕÕ€ ‹
itemÕÕ› ·
.ÕÕ· ‚
totalÕÕ‚ Á
,ÕÕÁ Ë
$strÕÕÈ Å
+ÕÕÇ É
contÕÕÑ à
,ÕÕà â
	porCobrarÕÕä ì
,ÕÕì î
itemÕÕï ô
.ÕÕô ö
cuota_inicialÕÕö ß
)ÕÕß ®
;ÕÕ® ©
ordenOperacion
ŒŒ &
.
ŒŒ& '
Cuota
ŒŒ' ,
.
ŒŒ, -
Add
ŒŒ- 0
(
ŒŒ0 1
cuota
ŒŒ1 6
)
ŒŒ6 7
;
ŒŒ7 8
}
œœ 
var
–– 

diferencia
–– "
=
––# $
operacionNota
––% 2
.
––2 3
ImportePagoTotal
––3 C
-
––D E
ordenOperacion
––F T
.
––T U
Cuota
––U Z
.
––Z [
Sum
––[ ^
(
––^ _
c
––_ `
=>
––a c
c
––d e
.
––e f
total
––f k
)
––k l
;
––l m
ordenOperacion
—— "
.
——" #
Cuota
——# (
.
——( )
Last
——) -
(
——- .
)
——. /
.
——/ 0
total
——0 5
=
——6 7
ordenOperacion
——8 F
.
——F G
Cuota
——G L
.
——L M
Last
——M Q
(
——Q R
)
——R S
.
——S T
capital
——T [
=
——\ ]
ordenOperacion
——^ l
.
——l m
Cuota
——m r
.
——r s
Last
——s w
(
——w x
)
——x y
.
——y z
total
——z 
+——Ä Å

diferencia——Ç å
;——å ç
}
““ 
else
”” 
{
‘‘ 
var
’’ 
cuota
’’ 
=
’’ 
new
’’  #
Cuota
’’$ )
(
’’) *2
$ObtenerSiguienteCodigoParaNuevaCuota
’’* N
(
’’N O
	porCobrar
’’O X
,
’’X Y
operacionNota
’’Z g
.
’’g h
FechaActual
’’h s
.
’’s t
Year
’’t x
)
’’x y
+
’’z {
$str
’’| 
+’’Ä Å
$num’’Ç É
,’’É Ñ
operacionNota’’Ö í
.’’í ì
FechaActual’’ì û
,’’û ü
operacionNota’’† ≠
.’’≠ Æ
FechaActual’’Æ π
,’’π ∫
operacionNota’’ª »
.’’» … 
ImportePagoTotal’’… Ÿ
,’’Ÿ ⁄
$str’’€ ü
,’’ü †
	porCobrar’’° ™
)’’™ ´
;’’´ ¨
ordenOperacion
÷÷ "
.
÷÷" #
Cuota
÷÷# (
.
÷÷( )
Add
÷÷) ,
(
÷÷, -
cuota
÷÷- 2
)
÷÷2 3
;
÷÷3 4
}
◊◊ 
if
ŸŸ 
(
ŸŸ 
operacionNota
ŸŸ !
.
ŸŸ! "
PagoOperacion
ŸŸ" /
.
ŸŸ/ 0
HayIngresoDinero
ŸŸ0 @
)
ŸŸ@ A
{
⁄⁄ 
var
€€ +
esCreditoRapidoConPagoInicial
€€ 5
=
€€6 7
(
€€8 9
operacionNota
€€9 F
.
€€F G
PagoOperacion
€€G T
.
€€T U

ModoDePago
€€U _
==
€€` b
ModoPago
€€c k
.
€€k l
CreditoRapido
€€l y
&&
€€z |
operacionNota€€} ä
.€€ä ã
PagoOperacion€€ã ò
.€€ò ô
Inicial€€ô †
>€€° ¢
$num€€£ §
)€€§ •
;€€• ¶
Cuota
›› 
cuotaACobrar
›› &
=
››' (
(
››) *
operacionNota
››* 7
.
››7 8
PagoOperacion
››8 E
.
››E F

ModoDePago
››F P
==
››Q S
ModoPago
››T \
.
››\ ]
Contado
››] d
||
››e g,
esCreditoRapidoConPagoInicial››h Ö
)››Ö Ü
?››á à
ordenOperacion››â ó
.››ó ò
Cuota››ò ù
.››ù û
First››û £
(››£ §
)››§ •
:››¶ ß
ordenOperacion››® ∂
.››∂ ∑
Cuota››∑ º
.››º Ω
Single››Ω √
(››√ ƒ
c››ƒ ≈
=>››∆ »
c››…  
.››  À
cuota_inicial››À ÿ
)››ÿ Ÿ
;››Ÿ ⁄
cuotaACobrar
ﬁﬁ  
.
ﬁﬁ  !
SetPagoACuenta
ﬁﬁ! /
(
ﬁﬁ/ 0+
esCreditoRapidoConPagoInicial
ﬁﬁ0 M
?
ﬁﬁN O
operacionNota
ﬁﬁP ]
.
ﬁﬁ] ^
PagoOperacion
ﬁﬁ^ k
.
ﬁﬁk l
Inicial
ﬁﬁl s
:
ﬁﬁt u
cuotaACobrarﬁﬁv Ç
.ﬁﬁÇ É
totalﬁﬁÉ à
)ﬁﬁà â
;ﬁﬁâ ä"
ValidarImporteAPagar
ﬂﬂ (
(
ﬂﬂ( )
$num
ﬂﬂ) *
,
ﬂﬂ* +
cuotaACobrar
ﬂﬂ, 8
.
ﬂﬂ8 9
total
ﬂﬂ9 >
,
ﬂﬂ> ?
ordenOperacion
ﬂﬂ@ N
.
ﬂﬂN O
importe_total
ﬂﬂO \
)
ﬂﬂ\ ]
;
ﬂﬂ] ^
pago
‡‡ 
=
‡‡ 8
*GenerarMovimientoEconomicoPagoACuentaCuota
‡‡ E
(
‡‡E F
	operacion
‡‡F O
,
‡‡O P
cuotaACobrar
‡‡Q ]
,
‡‡] ^
operacionNota
‡‡_ l
.
‡‡l m

IdEmpleado
‡‡m w
,
‡‡w x
operacionNota‡‡y Ü
.‡‡Ü á
IdCaja‡‡á ç
,‡‡ç é
operacionNota‡‡è ú
.‡‡ú ù
	IdCliente‡‡ù ¶
,‡‡¶ ß
operacionNota‡‡® µ
.‡‡µ ∂%
IdTipoTransaccionPago‡‡∂ À
,‡‡À Ã
operacionNota‡‡Õ ⁄
.‡‡⁄ €
FechaActual‡‡€ Ê
,‡‡Ê Á
operacionNota‡‡Ë ı
.‡‡ı ˆ
FechaActual‡‡ˆ Å
,‡‡Å Ç
operacionNota‡‡É ê
.‡‡ê ë$
ObservacionOperacion‡‡ë •
,‡‡• ¶
operacionNota‡‡ß ¥
.‡‡¥ µ
PagoOperacion‡‡µ ¬
.‡‡¬ √
Traza‡‡√ »
.‡‡» …
MedioDePago‡‡… ‘
.‡‡‘ ’
Id‡‡’ ◊
,‡‡◊ ÿ
operacionNota‡‡Ÿ Ê
.‡‡Ê Á
PagoOperacion‡‡Á Ù
.‡‡Ù ı
Traza‡‡ı ˙
.‡‡˙ ˚
Info‡‡˚ ˇ
.‡‡ˇ Ä!
EntidadFinanciera‡‡Ä ë
.‡‡ë í
Id‡‡í î
,‡‡î ï
operacionNota‡‡ñ £
.‡‡£ §
PagoOperacion‡‡§ ±
.‡‡± ≤
Traza‡‡≤ ∑
.‡‡∑ ∏
Info‡‡∏ º
.‡‡º Ω
Observacion‡‡Ω »
)‡‡» …
;‡‡…  
if
‚‚ 
(
‚‚ 
operacionNota
‚‚ %
.
‚‚% &
PagoOperacion
‚‚& 3
.
‚‚3 4
Traza
‚‚4 9
.
‚‚9 :
MedioDePago
‚‚: E
.
‚‚E F
Id
‚‚F H
==
‚‚I K
MaestroSettings
‚‚L [
.
‚‚[ \
Default
‚‚\ c
.
‚‚c d0
!IdDetalleMaestroMedioDepagoPuntos‚‚d Ö
)‚‚Ö Ü
{
„„ 
pago
‰‰ 
.
‰‰ 
	cantidad1
‰‰ &
=
‰‰' (
operacionNota
‰‰) 6
.
‰‰6 7
PagoOperacion
‰‰7 D
.
‰‰D E
Traza
‰‰E J
.
‰‰J K
Info
‰‰K O
.
‰‰O P
PuntosCajeados
‰‰P ^
;
‰‰^ _
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
operacionNota
ÊÊ %
.
ÊÊ% &
PagoOperacion
ÊÊ& 3
.
ÊÊ3 4
Traza
ÊÊ4 9
.
ÊÊ9 :
MedioDePago
ÊÊ: E
.
ÊÊE F
Id
ÊÊF H
==
ÊÊI K
MaestroSettings
ÊÊL [
.
ÊÊ[ \
Default
ÊÊ\ c
.
ÊÊc d:
+IdDetalleMaestroMedioDepagoDepositoEnCuentaÊÊd è
||ÊÊê í
operacionNotaÊÊì †
.ÊÊ† °
PagoOperacionÊÊ° Æ
.ÊÊÆ Ø
TrazaÊÊØ ¥
.ÊÊ¥ µ
MedioDePagoÊÊµ ¿
.ÊÊ¿ ¡
IdÊÊ¡ √
==ÊÊƒ ∆
MaestroSettingsÊÊ« ÷
.ÊÊ÷ ◊
DefaultÊÊ◊ ﬁ
.ÊÊﬁ ﬂ@
0IdDetalleMaestroMedioDepagoTransferenciaDeFondosÊÊﬂ è
)ÊÊè ê
{
ÁÁ 
pago
ËË 
.
ËË '
id_actor_negocio_interno1
ËË 6
=
ËË7 8
operacionNota
ËË9 F
.
ËËF G
PagoOperacion
ËËG T
.
ËËT U
Traza
ËËU Z
.
ËËZ [
Info
ËË[ _
.
ËË_ `
CuentaBancaria
ËË` n
.
ËËn o
Id
ËËo q
;
ËËq r
}
ÈÈ 
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
string
ÍÍ 
.
ÍÍ  
IsNullOrEmpty
ÍÍ  -
(
ÍÍ- .
operacionNota
ÍÍ. ;
.
ÍÍ; <
PagoOperacion
ÍÍ< I
.
ÍÍI J
Traza
ÍÍJ O
.
ÍÍO P
Info
ÍÍP T
.
ÍÍT U
InformacionJson
ÍÍU d
)
ÍÍd e
)
ÍÍe f
pago
ÍÍg k
.
ÍÍk l

Traza_pago
ÍÍl v
.
ÍÍv w
First
ÍÍw |
(
ÍÍ| }
)
ÍÍ} ~
.
ÍÍ~ 
extension_jsonÍÍ ç
=ÍÍé è
operacionNotaÍÍê ù
.ÍÍù û
PagoOperacionÍÍû ´
.ÍÍ´ ¨
TrazaÍÍ¨ ±
.ÍÍ± ≤
InfoÍÍ≤ ∂
.ÍÍ∂ ∑
InformacionJsonÍÍ∑ ∆
;ÍÍ∆ «
	operacion
ÎÎ 
.
ÎÎ 
Transaccion1
ÎÎ *
.
ÎÎ* +
Add
ÎÎ+ .
(
ÎÎ. /
pago
ÎÎ/ 3
)
ÎÎ3 4
;
ÎÎ4 5
}
ÏÏ 
}
ÌÌ 
return
ÓÓ 
pago
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
ÒÒ 
Transaccion
ÒÒ 4
&GenerarMovimientoAlmacenCreditoDebito_
ÒÒ A
(
ÒÒA B
Transaccion
ÒÒB M
	operacion
ÒÒN W
,
ÒÒW X
Transaccion
ÒÒY d
ordenOperacion
ÒÒe s
,
ÒÒs t
OperacionNotaÒÒu Ç
operacionNotaÒÒÉ ê
,ÒÒê ë&
UserProfileSessionDataÒÒí ®
sesionUsuarioÒÒ© ∂
)ÒÒ∂ ∑
{
ÚÚ 	
Transaccion
ÛÛ 3
%entradaMercaderiaPorInvalidacionVenta
ÛÛ =
=
ÛÛ> ?
null
ÛÛ@ D
;
ÛÛD E
if
ÙÙ 
(
ÙÙ 
operacionNota
ÙÙ 
.
ÙÙ &
HayMovimientoAlmacenNota
ÙÙ 6
)
ÙÙ6 7
{
ıı 
var
ˆˆ $
salidasMercaderiaVenta
ˆˆ *
=
ˆˆ+ ,
operacionNota
ˆˆ- :
.
ˆˆ: ;
Venta
ˆˆ; @
.
ˆˆ@ A(
ObtenerSalidasDeMercaderia
ˆˆA [
(
ˆˆ[ \
)
ˆˆ\ ]
;
ˆˆ] ^
if
˜˜ 
(
˜˜ $
salidasMercaderiaVenta
˜˜ *
.
˜˜* +
Count
˜˜+ 0
>
˜˜1 2
$num
˜˜3 4
)
˜˜4 5
{
¯¯ 3
%entradaMercaderiaPorInvalidacionVenta
˙˙ 9
=
˙˙: ;+
GenerarMovimientoDeMercaderia
˙˙< Y
(
˙˙Y Z
	operacion
˙˙Z c
,
˙˙c d
operacionNota
˙˙e r
.
˙˙r s

IdEmpleado
˙˙s }
,
˙˙} ~
operacionNota˙˙ å
.˙˙å ç
	IdAlmacen˙˙ç ñ
,˙˙ñ ó
operacionNota˙˙ò •
.˙˙• ¶
	IdCliente˙˙¶ Ø
,˙˙Ø ∞
operacionNota˙˙± æ
.˙˙æ ø(
IdTipoTransaccionAlmacen˙˙ø ◊
,˙˙◊ ÿ
operacionNota˙˙Ÿ Ê
.˙˙Ê Á
FechaActual˙˙Á Ú
,˙˙Ú Û
operacionNota˙˙Ù Å
.˙˙Å Ç$
ObservacionOperacion˙˙Ç ñ
,˙˙ñ ó
operacionNota˙˙ò •
.˙˙• ¶2
"DetallesMovimientoAlmacenOperacion˙˙¶ »
,˙˙» …
sesionUsuario˙˙  ◊
,˙˙◊ ÿ&
salidasMercaderiaVenta˙˙Ÿ Ô
.˙˙Ô 
First˙˙ ı
(˙˙ı ˆ
)˙˙ˆ ˜
.˙˙˜ ¯
Id˙˙¯ ˙
)˙˙˙ ˚
;˙˙˚ ¸3
%entradaMercaderiaPorInvalidacionVenta
¸¸ 9
.
¸¸9 :
Transaccion3
¸¸: F
=
¸¸G H
ordenOperacion
¸¸I W
;
¸¸W X
	operacion
˛˛ 
.
˛˛ 
Transaccion1
˛˛ *
.
˛˛* +
Add
˛˛+ .
(
˛˛. /3
%entradaMercaderiaPorInvalidacionVenta
˛˛/ T
)
˛˛T U
;
˛˛U V
}
ˇˇ 
if
ÄÄ 
(
ÄÄ 
operacionNota
ÄÄ !
.
ÄÄ! "3
%NuevoComprobanteParaMovimientoAlmacen
ÄÄ" G
)
ÄÄG H
{
ÅÅ 
Serie_comprobante
ÇÇ %
serie
ÇÇ& +
=
ÇÇ, -$
transaccionRepositorio
ÇÇ. D
.
ÇÇD EN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteÇÇE Ñ
(ÇÇÑ Ö
MaestroSettingsÇÇÖ î
.ÇÇî ï
DefaultÇÇï ú
.ÇÇú ù=
-IdDetalleMaestroComprobanteNotaAlmacenInternaÇÇù  
,ÇÇ  À
sesionUsuarioÇÇÃ Ÿ
.ÇÇŸ ⁄.
IdCentroDeAtencionSeleccionadoÇÇ⁄ ¯
)ÇÇ¯ ˘
;ÇÇ˘ ˙3
%entradaMercaderiaPorInvalidacionVenta
ÉÉ 9
.
ÉÉ9 :
Comprobante
ÉÉ: E
=
ÉÉF G3
%GenerarComprobantePropioAutonumerable
ÉÉH m
(
ÉÉm n
serie
ÉÉn s
.
ÉÉs t
id
ÉÉt v
)
ÉÉv w
;
ÉÉw x
}
ÑÑ 
}
ÖÖ 
return
ÜÜ 3
%entradaMercaderiaPorInvalidacionVenta
ÜÜ 8
;
ÜÜ8 9
}
áá 	
public
àà 
void
àà 1
#RecalcularDetalleNotaDebitoCredito_
àà 7
(
àà7 8
OperacionNota
àà8 E
operacionNota
ààF S
,
ààS T
List
ààU Y
<
ààY Z 
Estado_transaccion
ààZ l
>
ààl m'
estadosTransaccionNuevosààn Ü
,ààÜ á
Listààà å
<ààå ç
Cuotaààç í
>ààí ì!
cuotasModificadasààî •
,àà• ¶
Listààß ´
<àà´ ¨#
Detalle_transaccionàà¨ ø
>ààø ¿.
detallesTransaccionModificadosàà¡ ﬂ
)ààﬂ ‡
{
ââ 	
if
ää 
(
ää 
operacionNota
ää 
.
ää 

IdTipoNota
ää (
==
ää) +
MaestroSettings
ää, ;
.
ää; <
Default
ää< C
.
ääC DM
>IdDetalleMaestroNotaDeCreditoElectronicaAnulacionDeLaOperacionääD Ç
||ääÉ Ö
operacionNotaääÜ ì
.ääì î

IdTipoNotaääî û
==ääü °
MaestroSettingsää¢ ±
.ää± ≤
Defaultää≤ π
.ääπ ∫G
7IdDetalleMaestroNotaDeCreditoElectronicaDevolucionTotalää∫ Ò
)ääÒ Ú
{
ãã 
operacionNota
åå 
.
åå &
HayMovimientoAlmacenNota
åå 6
=
åå7 8
operacionNota
åå9 F
.
ååF G+
HayMovimientoAlmacenOperacion
ååG d
;
ååd e
operacionNota
çç 
.
çç )
IndicadorImpactoAlmacenNota
çç 9
=
çç: ;
operacionNota
çç< I
.
ççI J$
EsOrdenOrigenPendiente
ççJ `
?
çça b
(
ççc d
int
ççd g
)
ççg h%
IndicadorImpactoAlmacen
ççh 
.çç Ä6
&NoImpactaPorQueRevocaAOperacionInicialççÄ ¶
:ççß ®
(çç© ™
operacionNotaçç™ ∑
.çç∑ ∏1
!HaySeccionEntregaAlmacenOperacionçç∏ Ÿ
?çç⁄ €
(çç‹ ›
operacionNotaçç› Í
.ççÍ Î#
EsDiferidaOperacionççÎ ˛
?ççˇ Ä
(ççÅ Ç
intççÇ Ö
)ççÖ Ü'
IndicadorImpactoAlmacenççÜ ù
.ççù û
Diferidaççû ¶
:ççß ®
(çç© ™
intçç™ ≠
)çç≠ Æ'
IndicadorImpactoAlmacenççÆ ≈
.çç≈ ∆
	Inmediataçç∆ œ
)ççœ –
:çç— “
(çç” ‘
intçç‘ ◊
)çç◊ ÿ
operacionNotaççÿ Â
.ççÂ Ê

OrdenVentaççÊ 
.çç Ò'
IndicadorImpactoAlmacenççÒ à
)ççà â
;ççâ ä
if
éé 
(
éé 
operacionNota
éé !
.
éé! "%
EsOrdenOrigenCompletada
éé" 9
)
éé9 :
{
èè 
operacionNota
êê !
.
êê! "0
"DetallesMovimientoAlmacenOperacion
êê" D
=
êêE F
operacionNota
êêG T
.
êêT U%
DetallesBienesOperacion
êêU l
;
êêl m
}
ëë 
else
íí 
if
íí 
(
íí 
operacionNota
íí &
.
íí& '"
EsOrdenOrigenParcial
íí' ;
)
íí; <
{
ìì 
var
îî %
detallesOperacionOrigen
îî /
=
îî0 1
operacionNota
îî2 ?
.
îî? @
DetallesOperacion
îî@ Q
;
îîQ R
var
ïï 
ordenAlmacen
ïï $
=
ïï% &!
ObtenerOrdenAlmacen
ïï' :
(
ïï: ;
operacionNota
ïï; H
.
ïïH I

OrdenVenta
ïïI S
.
ïïS T
Id
ïïT V
)
ïïV W
;
ïïW X
operacionNota
óó !
.
óó! "
DetallesOperacion
óó" 3
.
óó3 4
ForEach
óó4 ;
(
óó; <
di
óó< >
=>
óó? A
di
óóB D
.
óóD E

cantidad_1
óóE O
=
óóP Q
ordenAlmacen
óóR ^
.
óó^ _
Detalles
óó_ g
.
óóg h
Where
óóh m
(
óóm n
d
óón o
=>
óóp r
d
óós t
.
óót u

IdConcepto
óóu 
==óóÄ Ç
dióóÉ Ö
.óóÖ Ü#
id_concepto_negocioóóÜ ô
)óóô ö
.óóö õ
Sumóóõ û
(óóû ü
dóóü †
=>óó° £
dóó§ •
.óó• ¶
	Pendienteóó¶ Ø
)óóØ ∞
)óó∞ ±
;óó± ≤%
detallesOperacionOrigen
òò +
.
òò+ ,
ForEach
òò, 3
(
òò3 4
di
òò4 6
=>
òò7 9
di
òò: <
.
òò< =

cantidad_1
òò= G
=
òòH I
ordenAlmacen
òòJ V
.
òòV W
Detalles
òòW _
.
òò_ `
Where
òò` e
(
òòe f
d
òòf g
=>
òòh j
d
òòk l
.
òòl m

IdConcepto
òòm w
==
òòx z
di
òò{ }
.
òò} ~"
id_concepto_negocioòò~ ë
)òòë í
.òòí ì
Sumòòì ñ
(òòñ ó
dòòó ò
=>òòô õ
dòòú ù
.òòù û
	Pendienteòòû ß
)òòß ®
)òò® ©
;òò© ™&
estadosTransaccionNuevos
ôô ,
.
ôô, -
Add
ôô- 0
(
ôô0 1
new
ôô1 4 
Estado_transaccion
ôô5 G
(
ôôG H
operacionNota
ôôH U
.
ôôU V

OrdenVenta
ôôV `
.
ôô` a
Id
ôôa c
,
ôôc d
operacionNota
ôôe r
.
ôôr s

IdEmpleado
ôôs }
,
ôô} ~
MaestroSettingsôô é
.ôôé è
Defaultôôè ñ
.ôôñ ó0
 IdDetalleMaestroEstadoCompletadaôôó ∑
,ôô∑ ∏
operacionNotaôôπ ∆
.ôô∆ «
FechaActualôô« “
,ôô“ ”
$strôô‘ ç
)ôôç é
)ôôé è
;ôôè ê
foreach
õõ 
(
õõ 
var
õõ  $
detalleOperacionOrigen
õõ! 7
in
õõ8 :%
detallesOperacionOrigen
õõ; R
)
õõR S
{
úú 
var
ùù 
detalle
ùù #
=
ùù$ %$
transaccionRepositorio
ùù& <
.
ùù< ='
ObtenerDetalleTransaccion
ùù= V
(
ùùV W$
detalleOperacionOrigen
ùùW m
.
ùùm n
id
ùùn p
)
ùùp q
;
ùùq r
detalle
ûû 
.
ûû  

cantidad_1
ûû  *
=
ûû+ ,$
detalleOperacionOrigen
ûû- C
.
ûûC D

cantidad_1
ûûD N
;
ûûN O,
detallesTransaccionModificados
üü 6
.
üü6 7
Add
üü7 :
(
üü: ;
detalle
üü; B
)
üüB C
;
üüC D
}
†† 
operacionNota
¢¢ !
.
¢¢! "0
"DetallesMovimientoAlmacenOperacion
¢¢" D
=
¢¢E F
new
¢¢G J
List
¢¢K O
<
¢¢O P!
Detalle_transaccion
¢¢P c
>
¢¢c d
(
¢¢d e
)
¢¢e f
;
¢¢f g
var
££ '
detallesMovimientoAlmacen
££ 1
=
££2 3
ordenAlmacen
££4 @
.
££@ A
Detalles
££A I
.
££I J
Where
££J O
(
££O P
d
££P Q
=>
££R T
d
££U V
.
££V W
	Entregado
££W `
>
££a b
$num
££c d
)
££d e
.
££e f
ToList
££f l
(
££l m
)
££m n
;
££n o
foreach
§§ 
(
§§ 
var
§§  
detalle
§§! (
in
§§) +'
detallesMovimientoAlmacen
§§, E
)
§§E F
{
•• 
var
¶¶ 
detalleAlmacen
¶¶ *
=
¶¶+ ,
operacionNota
¶¶- :
.
¶¶: ;%
DetallesBienesOperacion
¶¶; R
.
¶¶R S
First
¶¶S X
(
¶¶X Y
d
¶¶Y Z
=>
¶¶[ ]
d
¶¶^ _
.
¶¶_ `!
id_concepto_negocio
¶¶` s
==
¶¶t v
detalle
¶¶w ~
.
¶¶~ 

IdConcepto¶¶ â
)¶¶â ä
;¶¶ä ã
detalleAlmacen
ßß &
.
ßß& '
cantidad
ßß' /
=
ßß0 1
detalle
ßß2 9
.
ßß9 :
	Entregado
ßß: C
;
ßßC D
operacionNota
®® %
.
®®% &0
"DetallesMovimientoAlmacenOperacion
®®& H
.
®®H I
Add
®®I L
(
®®L M
detalleAlmacen
®®M [
)
®®[ \
;
®®\ ]
}
©© 
}
™™ 
else
´´ 
if
´´ 
(
´´ 
operacionNota
´´ &
.
´´& '$
EsOrdenOrigenPendiente
´´' =
)
´´= >
{
¨¨ 
var
≠≠ %
detallesOperacionOrigen
≠≠ /
=
≠≠0 1
operacionNota
≠≠2 ?
.
≠≠? @
DetallesOperacion
≠≠@ Q
;
≠≠Q R%
detallesOperacionOrigen
ÆÆ +
.
ÆÆ+ ,
ForEach
ÆÆ, 3
(
ÆÆ3 4
di
ÆÆ4 6
=>
ÆÆ7 9
di
ÆÆ: <
.
ÆÆ< =

cantidad_1
ÆÆ= G
=
ÆÆH I
di
ÆÆJ L
.
ÆÆL M
cantidad
ÆÆM U
)
ÆÆU V
;
ÆÆV W&
estadosTransaccionNuevos
ØØ ,
.
ØØ, -
Add
ØØ- 0
(
ØØ0 1
new
ØØ1 4 
Estado_transaccion
ØØ5 G
(
ØØG H
operacionNota
ØØH U
.
ØØU V

OrdenVenta
ØØV `
.
ØØ` a
Id
ØØa c
,
ØØc d
operacionNota
ØØe r
.
ØØr s

IdEmpleado
ØØs }
,
ØØ} ~
MaestroSettingsØØ é
.ØØé è
DefaultØØè ñ
.ØØñ ó0
 IdDetalleMaestroEstadoCompletadaØØó ∑
,ØØ∑ ∏
operacionNotaØØπ ∆
.ØØ∆ «
FechaActualØØ« “
,ØØ“ ”
$strØØ‘ ç
)ØØç é
)ØØé è
;ØØè ê
foreach
±± 
(
±± 
var
±±  $
detalleOperacionOrigen
±±! 7
in
±±8 :%
detallesOperacionOrigen
±±; R
)
±±R S
{
≤≤ 
var
≥≥ 
detalle
≥≥ #
=
≥≥$ %$
transaccionRepositorio
≥≥& <
.
≥≥< ='
ObtenerDetalleTransaccion
≥≥= V
(
≥≥V W$
detalleOperacionOrigen
≥≥W m
.
≥≥m n
id
≥≥n p
)
≥≥p q
;
≥≥q r
detalle
¥¥ 
.
¥¥  

cantidad_1
¥¥  *
=
¥¥+ ,$
detalleOperacionOrigen
¥¥- C
.
¥¥C D

cantidad_1
¥¥D N
;
¥¥N O,
detallesTransaccionModificados
µµ 6
.
µµ6 7
Add
µµ7 :
(
µµ: ;
detalle
µµ; B
)
µµB C
;
µµC D
}
∂∂ 
}
∑∑ 
RecalcularCuotas_
∏∏ !
(
∏∏! "
operacionNota
∏∏" /
,
∏∏/ 0
cuotasModificadas
∏∏1 B
)
∏∏B C
;
∏∏C D
}
ππ 
if
∫∫ 
(
∫∫ 
operacionNota
∫∫ 
.
∫∫ 

IdTipoNota
∫∫ (
==
∫∫) +
MaestroSettings
∫∫, ;
.
∫∫; <
Default
∫∫< C
.
∫∫C DG
9IdDetalleMaestroNotaDeCreditoElectronicaDevolucionPorItem
∫∫D }
)
∫∫} ~
{
ªª 
var
ºº 
HayImpactoAlmacen
ºº %
=
ºº& '
false
ºº( -
;
ºº- .
var
ΩΩ  
idsConceptosIcbper
ΩΩ &
=
ΩΩ' (
operacionNota
ΩΩ) 6
.
ΩΩ6 7

OrdenVenta
ΩΩ7 A
.
ΩΩA B
Detalles
ΩΩB J
(
ΩΩJ K
)
ΩΩK L
.
ΩΩL M
Where
ΩΩM R
(
ΩΩR S
d
ΩΩS T
=>
ΩΩU W
d
ΩΩX Y
.
ΩΩY Z
Producto
ΩΩZ b
.
ΩΩb c
IdConceptoBasico
ΩΩc s
==
ΩΩt v
MaestroSettingsΩΩw Ü
.ΩΩÜ á
DefaultΩΩá é
.ΩΩé è;
+IdDetalleMaestroConceptoBasicoBolsaPlasticaΩΩè ∫
)ΩΩ∫ ª
.ΩΩª º
SelectΩΩº ¬
(ΩΩ¬ √
dΩΩ√ ƒ
=>ΩΩ≈ «
dΩΩ» …
.ΩΩ…  
ProductoΩΩ  “
.ΩΩ“ ”
IdΩΩ” ’
)ΩΩ’ ÷
.ΩΩ÷ ◊
ToListΩΩ◊ ›
(ΩΩ› ﬁ
)ΩΩﬁ ﬂ
;ΩΩﬂ ‡
foreach
ææ 
(
ææ 
var
ææ 
detalleNota
ææ (
in
ææ) +
operacionNota
ææ, 9
.
ææ9 :
DetallesNota
ææ: F
)
ææF G
{
øø 
detalleNota
¿¿ 
.
¿¿  
ImporteRevocado
¿¿  /
=
¿¿0 1
detalleNota
¿¿2 =
.
¿¿= >
MontoRevocado
¿¿> K
*
¿¿L M
detalleNota
¿¿N Y
.
¿¿Y Z
PrecioUnitario
¿¿Z h
;
¿¿h i
detalleNota
¡¡ 
.
¡¡  
IcbperRevocado
¡¡  .
=
¡¡/ 0
detalleNota
¡¡1 <
.
¡¡< =
MontoRevocado
¡¡= J
*
¡¡K L
(
¡¡M N 
idsConceptosIcbper
¡¡N `
.
¡¡` a
Contains
¡¡a i
(
¡¡i j
detalleNota
¡¡j u
.
¡¡u v
Producto
¡¡v ~
.
¡¡~ 
Id¡¡ Å
)¡¡Å Ç
?¡¡É Ñ
operacionNota¡¡Ö í
.¡¡í ì

OrdenVenta¡¡ì ù
.¡¡ù û
ValorIcbper¡¡û ©
(¡¡© ™
)¡¡™ ´
:¡¡¨ ≠
$num¡¡Æ Ø
)¡¡Ø ∞
;¡¡∞ ±
detalleNota
¬¬ 
.
¬¬  
IgvRevocado
¬¬  +
=
¬¬, -
detalleNota
¬¬. 9
.
¬¬9 :
ImporteRevocado
¬¬: I
-
¬¬J K
(
¬¬L M
detalleNota
¬¬M X
.
¬¬X Y
ImporteRevocado
¬¬Y h
/
¬¬i j
(
¬¬k l
$num
¬¬l m
+
¬¬n o
(
¬¬p q
operacionNota
¬¬q ~
.
¬¬~ 
GravaIgv¬¬ á
?¬¬à â#
TransaccionSettings¬¬ä ù
.¬¬ù û
Default¬¬û •
.¬¬• ¶
TasaIGV¬¬¶ ≠
:¬¬Æ Ø
$num¬¬∞ ±
)¬¬± ≤
)¬¬≤ ≥
)¬¬≥ ¥
;¬¬¥ µ
detalleNota
√√ 
.
√√  
ImporteDevuelto
√√  /
=
√√0 1
detalleNota
√√2 =
.
√√= >
MontoDevuelto
√√> K
*
√√L M
detalleNota
√√N Y
.
√√Y Z
PrecioUnitario
√√Z h
;
√√h i
detalleNota
ƒƒ 
.
ƒƒ  
IcbperDevuelto
ƒƒ  .
=
ƒƒ/ 0
detalleNota
ƒƒ1 <
.
ƒƒ< =
MontoDevuelto
ƒƒ= J
*
ƒƒK L
(
ƒƒM N 
idsConceptosIcbper
ƒƒN `
.
ƒƒ` a
Contains
ƒƒa i
(
ƒƒi j
detalleNota
ƒƒj u
.
ƒƒu v
Producto
ƒƒv ~
.
ƒƒ~ 
Idƒƒ Å
)ƒƒÅ Ç
?ƒƒÉ Ñ
operacionNotaƒƒÖ í
.ƒƒí ì

OrdenVentaƒƒì ù
.ƒƒù û
ValorIcbperƒƒû ©
(ƒƒ© ™
)ƒƒ™ ´
:ƒƒ¨ ≠
$numƒƒÆ Ø
)ƒƒØ ∞
;ƒƒ∞ ±
detalleNota
≈≈ 
.
≈≈  
IgvDevuelto
≈≈  +
=
≈≈, -
detalleNota
≈≈. 9
.
≈≈9 :
ImporteDevuelto
≈≈: I
-
≈≈J K
(
≈≈L M
detalleNota
≈≈M X
.
≈≈X Y
ImporteDevuelto
≈≈Y h
/
≈≈i j
(
≈≈k l
$num
≈≈l m
+
≈≈n o
(
≈≈p q
operacionNota
≈≈q ~
.
≈≈~ 
GravaIgv≈≈ á
?≈≈à â#
TransaccionSettings≈≈ä ù
.≈≈ù û
Default≈≈û •
.≈≈• ¶
TasaIGV≈≈¶ ≠
:≈≈Æ Ø
$num≈≈∞ ±
)≈≈± ≤
)≈≈≤ ≥
)≈≈≥ ¥
;≈≈¥ µ
}
∆∆ 
operacionNota
«« 
.
«« 
Icbper
«« $
=
««% &
operacionNota
««' 4
.
««4 5
DetallesNota
««5 A
.
««A B
Sum
««B E
(
««E F
d
««F G
=>
««H J
d
««K L
.
««L M
IcbperRevocado
««M [
+
««\ ]
d
««^ _
.
««_ `
IcbperDevuelto
««` n
)
««n o
;
««o p
operacionNota
»» 
.
»» "
NumeroBolsasPlastico
»» 2
=
»»3 4
operacionNota
»»5 B
.
»»B C
Icbper
»»C I
==
»»J L
$num
»»M N
?
»»O P
$num
»»Q R
:
»»S T
(
»»U V
operacionNota
»»V c
.
»»c d
Icbper
»»d j
/
»»k l
operacionNota
»»m z
.
»»z {

OrdenVenta»»{ Ö
.»»Ö Ü
ValorIcbper»»Ü ë
(»»ë í
)»»í ì
)»»ì î
;»»î ï
operacionNota
…… 
.
…… 
ImporteTotal
…… *
=
……+ ,
operacionNota
……- :
.
……: ;
DetallesNota
……; G
.
……G H
Sum
……H K
(
……K L
d
……L M
=>
……N P
d
……Q R
.
……R S
ImporteRevocado
……S b
+
……c d
d
……e f
.
……f g
IcbperRevocado
……g u
+
……v w
d
……x y
.
……y z
ImporteDevuelto……z â
+……ä ã
d……å ç
.……ç é
IcbperDevuelto……é ú
)……ú ù
;……ù û
var
   
detallesOperacion
   %
=
  & '
new
  ( +
List
  , 0
<
  0 1!
Detalle_transaccion
  1 D
>
  D E
(
  E F
)
  F G
;
  G H
var
ÀÀ 0
"detallesMovimientoAlmacenOperacion
ÀÀ 6
=
ÀÀ7 8
new
ÀÀ9 <
List
ÀÀ= A
<
ÀÀA B!
Detalle_transaccion
ÀÀB U
>
ÀÀU V
(
ÀÀV W
)
ÀÀW X
;
ÀÀX Y)
CalcularOperacionCompletada
ÃÃ +
(
ÃÃ+ ,
operacionNota
ÃÃ, 9
,
ÃÃ9 :&
estadosTransaccionNuevos
ÃÃ; S
)
ÃÃS T
;
ÃÃT U
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ 
detalleNota
ÕÕ (
in
ÕÕ) +
operacionNota
ÕÕ, 9
.
ÕÕ9 :
DetallesNota
ÕÕ: F
)
ÕÕF G
{
ŒŒ 
if
œœ 
(
œœ 
detalleNota
œœ #
.
œœ# $
MontoRevocado
œœ$ 1
>
œœ2 3
$num
œœ4 5
)
œœ5 6
{
–– 
var
—— 
detalle
—— #
=
——$ %$
transaccionRepositorio
——& <
.
——< ='
ObtenerDetalleTransaccion
——= V
(
——V W
operacionNota
——W d
.
——d e
DetallesOperacion
——e v
.
——v w
Single
——w }
(
——} ~
d
——~ 
=>——Ä Ç
d——É Ñ
.——Ñ Ö#
id_concepto_negocio——Ö ò
==——ô õ
detalleNota——ú ß
.——ß ®
Producto——® ∞
.——∞ ±
Id——± ≥
)——≥ ¥
.——¥ µ
id——µ ∑
)——∑ ∏
;——∏ π
detalle
““ 
.
““  

cantidad_1
““  *
+=
““+ -
detalleNota
““. 9
.
““9 :
MontoRevocado
““: G
;
““G H,
detallesTransaccionModificados
”” 6
.
””6 7
Add
””7 :
(
””: ;
detalle
””; B
)
””B C
;
””C D
HayImpactoAlmacen
‘‘ )
=
‘‘* +
HayImpactoAlmacen
‘‘, =
||
‘‘> @
false
‘‘A F
;
‘‘F G
}
’’ 
if
÷÷ 
(
÷÷ 
(
÷÷ 
detalleNota
÷÷ $
.
÷÷$ %
MontoRevocado
÷÷% 2
+
÷÷3 4
detalleNota
÷÷5 @
.
÷÷@ A
MontoDevuelto
÷÷A N
)
÷÷N O
>
÷÷P Q
$num
÷÷R S
)
÷÷S T
{
◊◊ 
var
ÿÿ 
detalleOperacion
ÿÿ ,
=
ÿÿ- .
operacionNota
ÿÿ/ <
.
ÿÿ< =
DetallesOperacion
ÿÿ= N
.
ÿÿN O
First
ÿÿO T
(
ÿÿT U
d
ÿÿU V
=>
ÿÿW Y
d
ÿÿZ [
.
ÿÿ[ \!
id_concepto_negocio
ÿÿ\ o
==
ÿÿp r
detalleNota
ÿÿs ~
.
ÿÿ~ 
Productoÿÿ á
.ÿÿá à
Idÿÿà ä
)ÿÿä ã
;ÿÿã å
detalleOperacion
ŸŸ (
.
ŸŸ( )
cantidad
ŸŸ) 1
=
ŸŸ2 3
detalleNota
ŸŸ4 ?
.
ŸŸ? @
MontoRevocado
ŸŸ@ M
+
ŸŸN O
detalleNota
ŸŸP [
.
ŸŸ[ \
MontoDevuelto
ŸŸ\ i
;
ŸŸi j
detalleOperacion
⁄⁄ (
.
⁄⁄( )

cantidad_1
⁄⁄) 3
=
⁄⁄4 5
detalleNota
⁄⁄6 A
.
⁄⁄A B
MontoRevocado
⁄⁄B O
;
⁄⁄O P
detalleOperacion
€€ (
.
€€( )
total
€€) .
=
€€/ 0
detalleOperacion
€€1 A
.
€€A B
cantidad
€€B J
*
€€K L
detalleOperacion
€€M ]
.
€€] ^
precio_unitario
€€^ m
;
€€m n
detallesOperacion
‹‹ )
.
‹‹) *
Add
‹‹* -
(
‹‹- .
detalleOperacion
‹‹. >
)
‹‹> ?
;
‹‹? @
var
›› (
detalleMovimientoOperacion
›› 6
=
››7 8
operacionNota
››9 F
.
››F G%
DetallesBienesOperacion
››G ^
.
››^ _
First
››_ d
(
››d e
d
››e f
=>
››g i
d
››j k
.
››k l!
id_concepto_negocio
››l 
==››Ä Ç
detalleNota››É é
.››é è
Producto››è ó
.››ó ò
Id››ò ö
)››ö õ
;››õ ú(
detalleMovimientoOperacion
ﬁﬁ 2
.
ﬁﬁ2 3
cantidad
ﬁﬁ3 ;
=
ﬁﬁ< =
detalleNota
ﬁﬁ> I
.
ﬁﬁI J
MontoDevuelto
ﬁﬁJ W
;
ﬁﬁW X(
detalleMovimientoOperacion
ﬂﬂ 2
.
ﬂﬂ2 3

cantidad_1
ﬂﬂ3 =
=
ﬂﬂ> ?
$num
ﬂﬂ@ A
;
ﬂﬂA B(
detalleMovimientoOperacion
‡‡ 2
.
‡‡2 3
total
‡‡3 8
=
‡‡9 :(
detalleMovimientoOperacion
‡‡; U
.
‡‡U V
cantidad
‡‡V ^
*
‡‡_ `(
detalleMovimientoOperacion
‡‡a {
.
‡‡{ |
precio_unitario‡‡| ã
;‡‡ã å0
"detallesMovimientoAlmacenOperacion
·· :
.
··: ;
Add
··; >
(
··> ?(
detalleMovimientoOperacion
··? Y
)
··Y Z
;
··Z [
}
‚‚ 
if
„„ 
(
„„ 
detalleNota
„„ #
.
„„# $
MontoDevuelto
„„$ 1
>
„„2 3
$num
„„4 5
)
„„5 6
{
‰‰ 
operacionNota
ÂÂ %
.
ÂÂ% &&
HayMovimientoAlmacenNota
ÂÂ& >
=
ÂÂ? @
(
ÂÂA B
!
ÂÂB C
VentasSettings
ÂÂC Q
.
ÂÂQ R
Default
ÂÂR Y
.
ÂÂY Z*
MostrarSeccionEntregaEnVenta
ÂÂZ v
)
ÂÂv w
||
ÂÂx z
(
ÂÂ{ |
VentasSettingsÂÂ| ä
.ÂÂä ã
DefaultÂÂã í
.ÂÂí ì,
MostrarSeccionEntregaEnVentaÂÂì Ø
&&ÂÂ∞ ≤
!ÂÂ≥ ¥
operacionNotaÂÂ¥ ¡
.ÂÂ¡ ¬#
EsDiferidaOperacionÂÂ¬ ’
)ÂÂ’ ÷
;ÂÂ÷ ◊
operacionNota
ÊÊ %
.
ÊÊ% &)
IndicadorImpactoAlmacenNota
ÊÊ& A
=
ÊÊB C
operacionNota
ÊÊD Q
.
ÊÊQ R!
EsDiferidaOperacion
ÊÊR e
?
ÊÊf g
(
ÊÊh i
int
ÊÊi l
)
ÊÊl m&
IndicadorImpactoAlmacenÊÊm Ñ
.ÊÊÑ Ö
DiferidaÊÊÖ ç
:ÊÊé è
(ÊÊê ë
intÊÊë î
)ÊÊî ï'
IndicadorImpactoAlmacenÊÊï ¨
.ÊÊ¨ ≠
	InmediataÊÊ≠ ∂
;ÊÊ∂ ∑
HayImpactoAlmacen
ÁÁ )
=
ÁÁ* +
HayImpactoAlmacen
ÁÁ, =
||
ÁÁ> @
true
ÁÁA E
;
ÁÁE F
}
ËË 
}
ÈÈ 
operacionNota
ÍÍ 
.
ÍÍ 
DetallesOperacion
ÍÍ /
=
ÍÍ0 1
detallesOperacion
ÍÍ2 C
;
ÍÍC D
operacionNota
ÎÎ 
.
ÎÎ 0
"DetallesMovimientoAlmacenOperacion
ÎÎ @
=
ÎÎA B0
"detallesMovimientoAlmacenOperacion
ÎÎC e
;
ÎÎe f
RecalcularCuotas_
ÏÏ !
(
ÏÏ! "
operacionNota
ÏÏ" /
,
ÏÏ/ 0
cuotasModificadas
ÏÏ1 B
)
ÏÏB C
;
ÏÏC D
if
ÌÌ 
(
ÌÌ 
!
ÌÌ 
HayImpactoAlmacen
ÌÌ &
)
ÌÌ& '
operacionNota
ÓÓ !
.
ÓÓ! ")
IndicadorImpactoAlmacenNota
ÓÓ" =
=
ÓÓ> ?
(
ÓÓ@ A
int
ÓÓA D
)
ÓÓD E%
IndicadorImpactoAlmacen
ÓÓE \
.
ÓÓ\ ]5
&NoImpactaPorQueRevocaAOperacionInicialÓÓ] É
;ÓÓÉ Ñ
}
ÔÔ 
else
 
if
 
(
 
operacionNota
 "
.
" #

IdTipoNota
# -
==
. 0
MaestroSettings
1 @
.
@ A
Default
A H
.
H IF
7IdDetalleMaestroNotaDeCreditoElectronicaDescuentoGlobalI Ä
)Ä Å
{
ÒÒ 
operacionNota
ÚÚ 
.
ÚÚ 
DetallesOperacion
ÚÚ /
=
ÚÚ0 1
new
ÚÚ2 5
List
ÚÚ6 :
<
ÚÚ: ;!
Detalle_transaccion
ÚÚ; N
>
ÚÚN O
(
ÚÚO P
)
ÚÚP Q
{
ÚÚR S
new
ÚÚT W!
Detalle_transaccion
ÚÚX k
(
ÚÚk l
$num
ÚÚl m
,
ÚÚm n
ConceptoSettings
ÚÚo 
.ÚÚ Ä
DefaultÚÚÄ á
.ÚÚá à0
 IdConceptoNegocioDescuentoGlobalÚÚà ®
,ÚÚ® ©
operacionNotaÚÚ™ ∑
.ÚÚ∑ ∏$
ObservacionOperacionÚÚ∏ Ã
,ÚÚÃ Õ
operacionNotaÚÚŒ €
.ÚÚ€ ‹
	MontoNotaÚÚ‹ Â
,ÚÚÂ Ê
operacionNotaÚÚÁ Ù
.ÚÚÙ ı
	MontoNotaÚÚı ˛
,ÚÚ˛ ˇ
nullÚÚÄ Ñ
,ÚÚÑ Ö
$numÚÚÜ á
,ÚÚá à
nullÚÚâ ç
,ÚÚç é
nullÚÚè ì
,ÚÚì î
$numÚÚï ñ
,ÚÚñ ó
$numÚÚò ô
,ÚÚô ö
$numÚÚõ ú
,ÚÚú ù
nullÚÚû ¢
,ÚÚ¢ £
nullÚÚ§ ®
,ÚÚ® ©
nullÚÚ™ Æ
)ÚÚÆ Ø
}ÚÚ∞ ±
;ÚÚ± ≤
operacionNota
ÛÛ 
.
ÛÛ 
Icbper
ÛÛ $
=
ÛÛ% &
$num
ÛÛ' (
;
ÛÛ( )
operacionNota
ÙÙ 
.
ÙÙ 
ImporteTotal
ÙÙ *
=
ÙÙ+ ,
operacionNota
ÙÙ- :
.
ÙÙ: ;
	MontoNota
ÙÙ; D
;
ÙÙD E
RecalcularCuotas_
ıı !
(
ıı! "
operacionNota
ıı" /
,
ıı/ 0
cuotasModificadas
ıı1 B
)
ııB C
;
ııC D
}
ˆˆ 
else
˜˜ 
if
˜˜ 
(
˜˜ 
operacionNota
˜˜ "
.
˜˜" #

IdTipoNota
˜˜# -
==
˜˜. 0
MaestroSettings
˜˜1 @
.
˜˜@ A
Default
˜˜A H
.
˜˜H IG
8IdDetalleMaestroNotaDeCreditoElectronicaDescuentoPorItem˜˜I Å
)˜˜Å Ç
{
¯¯ 
operacionNota
˘˘ 
.
˘˘ 
DetallesOperacion
˘˘ /
=
˘˘0 1
operacionNota
˘˘2 ?
.
˘˘? @
DetallesNota
˘˘@ L
.
˘˘L M
Where
˘˘M R
(
˘˘R S
d
˘˘S T
=>
˘˘U W
d
˘˘X Y
.
˘˘Y Z
MontoDetalle
˘˘Z f
!=
˘˘g i
$num
˘˘j k
)
˘˘k l
.
˘˘l m
Select
˘˘m s
(
˘˘s t
d
˘˘t u
=>
˘˘v x
{
˘˘y z
d
˘˘{ |
.
˘˘| }
PrecioUnitario˘˘} ã
=˘˘å ç
d˘˘é è
.˘˘è ê
MontoDetalle˘˘ê ú
/˘˘ù û
d˘˘ü †
.˘˘† °
Cantidad˘˘° ©
;˘˘© ™
d˘˘´ ¨
.˘˘¨ ≠
Importe˘˘≠ ¥
=˘˘µ ∂
d˘˘∑ ∏
.˘˘∏ π
MontoDetalle˘˘π ≈
;˘˘≈ ∆
return˘˘« Õ
d˘˘Œ œ
;˘˘œ –
}˘˘— “
)˘˘“ ”
.˘˘” ‘
Select˘˘‘ ⁄
(˘˘⁄ €
d˘˘€ ‹
=>˘˘› ﬂ
d˘˘‡ ·
.˘˘· ‚"
DetalleTransaccion˘˘‚ Ù
(˘˘Ù ı
)˘˘ı ˆ
)˘˘ˆ ˜
.˘˘˜ ¯
ToList˘˘¯ ˛
(˘˘˛ ˇ
)˘˘ˇ Ä
;˘˘Ä Å
operacionNota
˙˙ 
.
˙˙ 
Icbper
˙˙ $
=
˙˙% &
$num
˙˙' (
;
˙˙( )
operacionNota
˚˚ 
.
˚˚ 
ImporteTotal
˚˚ *
=
˚˚+ ,
operacionNota
˚˚- :
.
˚˚: ;
DetallesNota
˚˚; G
.
˚˚G H
Sum
˚˚H K
(
˚˚K L
d
˚˚L M
=>
˚˚N P
d
˚˚Q R
.
˚˚R S
MontoDetalle
˚˚S _
)
˚˚_ `
;
˚˚` a
RecalcularCuotas_
¸¸ !
(
¸¸! "
operacionNota
¸¸" /
,
¸¸/ 0
cuotasModificadas
¸¸1 B
)
¸¸B C
;
¸¸C D
}
˝˝ 
else
˛˛ 
if
˛˛ 
(
˛˛ 
operacionNota
˛˛ "
.
˛˛" #

IdTipoNota
˛˛# -
==
˛˛. 0
MaestroSettings
˛˛1 @
.
˛˛@ A
Default
˛˛A H
.
˛˛H IF
7IdDetalleMaestroNotaDeDebitoElectronicaInteresesPorMora˛˛I Ä
)˛˛Ä Å
{
ˇˇ 
operacionNota
ÄÄ 
.
ÄÄ 
DetallesOperacion
ÄÄ /
=
ÄÄ0 1
new
ÄÄ2 5
List
ÄÄ6 :
<
ÄÄ: ;!
Detalle_transaccion
ÄÄ; N
>
ÄÄN O
(
ÄÄO P
)
ÄÄP Q
{
ÄÄR S
new
ÄÄT W!
Detalle_transaccion
ÄÄX k
(
ÄÄk l
$num
ÄÄl m
,
ÄÄm n
ConceptoSettings
ÄÄo 
.ÄÄ Ä
DefaultÄÄÄ á
.ÄÄá à/
IdConceptoNegocioInteresPorMoraÄÄà ß
,ÄÄß ®
operacionNotaÄÄ© ∂
.ÄÄ∂ ∑$
ObservacionOperacionÄÄ∑ À
,ÄÄÀ Ã
operacionNotaÄÄÕ ⁄
.ÄÄ⁄ €
	MontoNotaÄÄ€ ‰
,ÄÄ‰ Â
operacionNotaÄÄÊ Û
.ÄÄÛ Ù
	MontoNotaÄÄÙ ˝
,ÄÄ˝ ˛
nullÄÄˇ É
,ÄÄÉ Ñ
$numÄÄÖ Ü
,ÄÄÜ á
nullÄÄà å
,ÄÄå ç
nullÄÄé í
,ÄÄí ì
$numÄÄî ï
,ÄÄï ñ
$numÄÄó ò
,ÄÄò ô
$numÄÄö õ
,ÄÄõ ú
nullÄÄù °
,ÄÄ° ¢
nullÄÄ£ ß
,ÄÄß ®
nullÄÄ© ≠
)ÄÄ≠ Æ
}ÄÄØ ∞
;ÄÄ∞ ±
operacionNota
ÅÅ 
.
ÅÅ 
Icbper
ÅÅ $
=
ÅÅ% &
$num
ÅÅ' (
;
ÅÅ( )
operacionNota
ÇÇ 
.
ÇÇ 
ImporteTotal
ÇÇ *
=
ÇÇ+ ,
operacionNota
ÇÇ- :
.
ÇÇ: ;
	MontoNota
ÇÇ; D
;
ÇÇD E
RecalcularCuotas_
ÉÉ !
(
ÉÉ! "
operacionNota
ÉÉ" /
,
ÉÉ/ 0
cuotasModificadas
ÉÉ1 B
)
ÉÉB C
;
ÉÉC D
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
operacionNota
ÖÖ "
.
ÖÖ" #

IdTipoNota
ÖÖ# -
==
ÖÖ. 0
MaestroSettings
ÖÖ1 @
.
ÖÖ@ A
Default
ÖÖA H
.
ÖÖH IF
7IdDetalleMaestroNotaDeDebitoElectronicaAumentoEnElValorÖÖI Ä
)ÖÖÄ Å
{
ÜÜ 
operacionNota
áá 
.
áá 
DetallesOperacion
áá /
=
áá0 1
operacionNota
áá2 ?
.
áá? @
DetallesNota
áá@ L
.
ááL M
Where
ááM R
(
ááR S
d
ááS T
=>
ááU W
d
ááX Y
.
ááY Z
MontoDetalle
ááZ f
!=
áág i
$num
ááj k
)
áák l
.
áál m
Select
áám s
(
áás t
d
áát u
=>
ááv x
{
ááy z
d
áá{ |
.
áá| }
PrecioUnitarioáá} ã
=ááå ç
dááé è
.ááè ê
MontoDetalleááê ú
/ááù û
dááü †
.áá† °
Cantidadáá° ©
;áá© ™
dáá´ ¨
.áá¨ ≠
Importeáá≠ ¥
=ááµ ∂
dáá∑ ∏
.áá∏ π
MontoDetalleááπ ≈
;áá≈ ∆
returnáá« Õ
dááŒ œ
;ááœ –
}áá— “
)áá“ ”
.áá” ‘
Selectáá‘ ⁄
(áá⁄ €
dáá€ ‹
=>áá› ﬂ
dáá‡ ·
.áá· ‚"
DetalleTransaccionáá‚ Ù
(ááÙ ı
)ááı ˆ
)ááˆ ˜
.áá˜ ¯
ToListáá¯ ˛
(áá˛ ˇ
)ááˇ Ä
;ááÄ Å
operacionNota
àà 
.
àà 
Icbper
àà $
=
àà% &
$num
àà' (
;
àà( )
operacionNota
ââ 
.
ââ 
ImporteTotal
ââ *
=
ââ+ ,
operacionNota
ââ- :
.
ââ: ;
DetallesNota
ââ; G
.
ââG H
Sum
ââH K
(
ââK L
d
ââL M
=>
ââN P
d
ââQ R
.
ââR S
MontoDetalle
ââS _
)
ââ_ `
;
ââ` a
RecalcularCuotas_
ää !
(
ää! "
operacionNota
ää" /
,
ää/ 0
cuotasModificadas
ää1 B
)
ääB C
;
ääC D
}
ãã 
if
çç 
(
çç 
operacionNota
çç 
.
çç 
GravaIgv
çç &
)
çç& '
{
éé 
operacionNota
èè 
.
èè 
DetallesOperacion
èè /
.
èè/ 0
ForEach
èè0 7
(
èè7 8
d
èè8 9
=>
èè: <
d
èè= >
.
èè> ?
igv
èè? B
=
èèC D
Decimal
èèE L
.
èèL M
Round
èèM R
(
èèR S
d
èèS T
.
èèT U
total
èèU Z
-
èè[ \
(
èè] ^
d
èè^ _
.
èè_ `
total
èè` e
/
èèf g
(
èèh i
$num
èèi j
+
èèk l"
TransaccionSettingsèèm Ä
.èèÄ Å
DefaultèèÅ à
.èèà â
TasaIGVèèâ ê
)èèê ë
)èèë í
,èèí ì
$numèèî ï
)èèï ñ
)èèñ ó
;èèó ò
operacionNota
êê 
.
êê %
DetallesBienesOperacion
êê 5
.
êê5 6
ForEach
êê6 =
(
êê= >
d
êê> ?
=>
êê@ B
d
êêC D
.
êêD E
igv
êêE H
=
êêI J
Decimal
êêK R
.
êêR S
Round
êêS X
(
êêX Y
d
êêY Z
.
êêZ [
total
êê[ `
-
êêa b
(
êêc d
d
êêd e
.
êêe f
total
êêf k
/
êêl m
(
êên o
$num
êêo p
+
êêq r"
TransaccionSettingsêês Ü
.êêÜ á
Defaultêêá é
.êêé è
TasaIGVêêè ñ
)êêñ ó
)êêó ò
,êêò ô
$numêêö õ
)êêõ ú
)êêú ù
;êêù û
if
ëë 
(
ëë 
operacionNota
ëë !
.
ëë! "0
"DetallesMovimientoAlmacenOperacion
ëë" D
!=
ëëE G
null
ëëH L
)
ëëL M
operacionNota
íí !
.
íí! "0
"DetallesMovimientoAlmacenOperacion
íí" D
.
ííD E
ForEach
ííE L
(
ííL M
d
ííM N
=>
ííO Q
d
ííR S
.
ííS T
igv
ííT W
=
ííX Y
Decimal
ííZ a
.
íía b
Round
ííb g
(
ííg h
d
ííh i
.
ííi j
total
ííj o
-
ííp q
(
íír s
d
íís t
.
íít u
total
ííu z
/
íí{ |
(
íí} ~
$num
íí~ 
+ííÄ Å#
TransaccionSettingsííÇ ï
.ííï ñ
Defaultííñ ù
.ííù û
TasaIGVííû •
)íí• ¶
)íí¶ ß
,ííß ®
$numíí© ™
)íí™ ´
)íí´ ¨
;íí¨ ≠
}
ìì 
if
îî 
(
îî 
operacionNota
îî 
.
îî 

IdTipoNota
îî (
!=
îî) +
MaestroSettings
îî, ;
.
îî; <
Default
îî< C
.
îîC DM
>IdDetalleMaestroNotaDeCreditoElectronicaAnulacionDeLaOperacionîîD Ç
||îîÉ Ö
operacionNotaîîÜ ì
.îîì î

IdTipoNotaîîî û
!=îîü °
MaestroSettingsîî¢ ±
.îî± ≤
Defaultîî≤ π
.îîπ ∫G
7IdDetalleMaestroNotaDeCreditoElectronicaDevolucionTotalîî∫ Ò
)îîÒ Ú
{
ïï 
operacionNota
ññ 
.
ññ 
Igv
ññ !
=
ññ" #
operacionNota
ññ$ 1
.
ññ1 2
DetallesOperacion
ññ2 C
.
ññC D
Sum
ññD G
(
ññG H
d
ññH I
=>
ññJ L
d
ññM N
.
ññN O
igv
ññO R
)
ññR S
;
ññS T
}
óó 
}
òò 	
public
öö 
void
öö )
CalcularOperacionCompletada
öö /
(
öö/ 0
OperacionNota
öö0 =
operacionNota
öö> K
,
ööK L
List
ööM Q
<
ööQ R 
Estado_transaccion
ööR d
>
ööd e&
estadosTransaccionNuevos
ööf ~
)
öö~ 
{
õõ 	
var
úú 
ordenAlmacen
úú 
=
úú !
ObtenerOrdenAlmacen
úú 2
(
úú2 3
operacionNota
úú3 @
.
úú@ A

OrdenVenta
úúA K
.
úúK L
Id
úúL N
)
úúN O
;
úúO P
var
ùù 
hayMontoRevocado
ùù  
=
ùù! "
operacionNota
ùù# 0
.
ùù0 1
DetallesNota
ùù1 =
.
ùù= >
Sum
ùù> A
(
ùùA B
d
ùùB C
=>
ùùD F
d
ùùG H
.
ùùH I
MontoRevocado
ùùI V
)
ùùV W
>
ùùX Y
$num
ùùZ [
;
ùù[ \
var
ûû 
todoRevocado
ûû 
=
ûû 
true
ûû #
;
ûû# $
foreach
üü 
(
üü 
var
üü 
detalle
üü  
in
üü! #
ordenAlmacen
üü$ 0
.
üü0 1
Detalles
üü1 9
)
üü9 :
{
†† 
if
°° 
(
°° 
detalle
°° 
.
°° 
	Pendiente
°° %
>
°°& '
$num
°°( )
)
°°) *
{
¢¢ 
todoRevocado
££  
=
££! "
todoRevocado
££# /
&&
££0 2
(
££3 4
detalle
££4 ;
.
££; <
	Pendiente
££< E
==
££F H
operacionNota
££I V
.
££V W
DetallesNota
££W c
.
££c d
FirstOrDefault
££d r
(
££r s
dn
££s u
=>
££v x
dn
££y {
.
££{ |
Producto££| Ñ
.££Ñ Ö
Id££Ö á
==££à ä
detalle££ã í
.££í ì

IdConcepto££ì ù
)££ù û
.££û ü
MontoRevocado££ü ¨
)££¨ ≠
;££≠ Æ
}
§§ 
}
•• 
if
¶¶ 
(
¶¶ 
hayMontoRevocado
¶¶  
&&
¶¶! #
todoRevocado
¶¶$ 0
)
¶¶0 1
{
ßß &
estadosTransaccionNuevos
®® (
.
®®( )
Add
®®) ,
(
®®, -
new
®®- 0 
Estado_transaccion
®®1 C
(
®®C D
operacionNota
®®D Q
.
®®Q R

OrdenVenta
®®R \
.
®®\ ]
Id
®®] _
,
®®_ `
operacionNota
®®a n
.
®®n o

IdEmpleado
®®o y
,
®®y z
MaestroSettings®®{ ä
.®®ä ã
Default®®ã í
.®®í ì0
 IdDetalleMaestroEstadoCompletada®®ì ≥
,®®≥ ¥
operacionNota®®µ ¬
.®®¬ √
FechaActual®®√ Œ
,®®Œ œ
$str®®– â
)®®â ä
)®®ä ã
;®®ã å
}
©© 
}
™™ 	
public
¨¨ 
void
¨¨ 
RecalcularCuotas_
¨¨ %
(
¨¨% &
OperacionNota
¨¨& 3
operacionNota
¨¨4 A
,
¨¨A B
List
¨¨C G
<
¨¨G H
Cuota
¨¨H M
>
¨¨M N
cuotasModificadas
¨¨O `
)
¨¨` a
{
≠≠ 	
var
ÆÆ 
pagoOperacion
ÆÆ 
=
ÆÆ 
operacionNota
ÆÆ  -
.
ÆÆ- .
ImporteTotal
ÆÆ. :
;
ÆÆ: ;
if
ØØ 
(
ØØ 
!
ØØ 
operacionNota
ØØ 
.
ØØ 
EsDebito
ØØ '
)
ØØ' (
{
∞∞ 
foreach
±± 
(
±± 
var
±± 
cuota
±± "
in
±±# %
operacionNota
±±& 3
.
±±3 4
Cuotas
±±4 :
.
±±: ;
OrderByDescending
±±; L
(
±±L M
c
±±M N
=>
±±O Q
c
±±R S
.
±±S T
fecha_vencimiento
±±T e
)
±±e f
)
±±f g
{
≤≤ 
if
≥≥ 
(
≥≥ 
pagoOperacion
≥≥ %
>
≥≥& '
$num
≥≥( )
&&
≥≥* ,
cuota
≥≥- 2
.
≥≥2 3
saldo
≥≥3 8
>
≥≥9 :
$num
≥≥; <
)
≥≥< =
{
¥¥ 
cuota
µµ 
.
µµ 
revocado
µµ &
+=
µµ' )
cuota
µµ* /
.
µµ/ 0
saldo
µµ0 5
>=
µµ6 8
pagoOperacion
µµ9 F
?
µµG H
Math
µµI M
.
µµM N
Round
µµN S
(
µµS T
pagoOperacion
µµT a
,
µµa b
$num
µµc d
)
µµd e
:
µµf g
Math
µµh l
.
µµl m
Round
µµm r
(
µµr s
cuota
µµs x
.
µµx y
saldo
µµy ~
,
µµ~ 
$numµµÄ Å
)µµÅ Ç
;µµÇ É
pagoOperacion
∂∂ %
-=
∂∂& (
Math
∂∂) -
.
∂∂- .
Round
∂∂. 3
(
∂∂3 4
cuota
∂∂4 9
.
∂∂9 :
saldo
∂∂: ?
,
∂∂? @
$num
∂∂A B
)
∂∂B C
;
∂∂C D
cuota
∑∑ 
.
∑∑ 
saldo
∑∑ #
=
∑∑$ %
Math
∑∑& *
.
∑∑* +
Round
∑∑+ 0
(
∑∑0 1
cuota
∑∑1 6
.
∑∑6 7
total
∑∑7 <
,
∑∑< =
$num
∑∑> ?
)
∑∑? @
-
∑∑A B
Math
∑∑C G
.
∑∑G H
Round
∑∑H M
(
∑∑M N
cuota
∑∑N S
.
∑∑S T
pago_a_cuenta
∑∑T a
,
∑∑a b
$num
∑∑c d
)
∑∑d e
-
∑∑f g
Math
∑∑h l
.
∑∑l m
Round
∑∑m r
(
∑∑r s
cuota
∑∑s x
.
∑∑x y
revocado∑∑y Å
,∑∑Å Ç
$num∑∑É Ñ
)∑∑Ñ Ö
;∑∑Ö Ü
cuotasModificadas
∏∏ )
.
∏∏) *
Add
∏∏* -
(
∏∏- .
cuota
∏∏. 3
)
∏∏3 4
;
∏∏4 5
}
ππ 
}
∫∫ 
}
ªª 
operacionNota
ºº 
.
ºº 
ImportePagoTotal
ºº *
=
ºº+ ,
Math
ºº- 1
.
ºº1 2
Round
ºº2 7
(
ºº7 8
pagoOperacion
ºº8 E
,
ººE F
$num
ººG H
)
ººH I
;
ººI J
}
ΩΩ 	
public
øø 
void
øø '
ValidarNotaCreditoEnVenta
øø -
(
øø- .
OrdenDeVenta
øø. :
ordenDeVenta
øø; G
,
øøG H
decimal
øøI P)
importeTotalDeNotaDeCredito
øøQ l
)
øøl m
{
¿¿ 	
if
¡¡ 
(
¡¡ )
importeTotalDeNotaDeCredito
¡¡ +
>
¡¡, -
$num
¡¡. /
)
¡¡/ 0
{
¬¬ 
var
ƒƒ 5
'transaccionesReferenciaDeLaOrdenDeVenta
ƒƒ ;
=
ƒƒ< =
ordenDeVenta
ƒƒ> J
.
ƒƒJ K
Transaccion
ƒƒK V
(
ƒƒV W
)
ƒƒW X
.
ƒƒX Y
Transaccion11
ƒƒY f
;
ƒƒf g
if
≈≈ 
(
≈≈ 5
'transaccionesReferenciaDeLaOrdenDeVenta
≈≈ ;
.
≈≈; <
Count
≈≈< A
>
≈≈B C
$num
≈≈D E
)
≈≈E F
{
∆∆ 
var
«« )
sumaImporteDeNotasDeCredito
«« 3
=
««4 55
'transaccionesReferenciaDeLaOrdenDeVenta
««6 ]
.
««] ^
Where
««^ c
(
««c d
t
««d e
=>
««f h
Diccionario
««i t
.
««t uO
@TiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCredito««u µ
.««µ ∂
Contains««∂ æ
(««æ ø
t««ø ¿
.««¿ ¡#
id_tipo_transaccion««¡ ‘
)««‘ ’
)««’ ÷
.««÷ ◊
Sum««◊ ⁄
(««⁄ €
t««€ ‹
=>««› ﬂ
t««‡ ·
.««· ‚
importe_total««‚ Ô
)««Ô 
;«« Ò
var
»» (
sumaImporteDeNotasDeDebito
»» 2
=
»»3 45
'transaccionesReferenciaDeLaOrdenDeVenta
»»5 \
.
»»\ ]
Where
»»] b
(
»»b c
t
»»c d
=>
»»e g
Diccionario
»»h s
.
»»s tN
?TiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeDebito»»t ≥
.»»≥ ¥
Contains»»¥ º
(»»º Ω
t»»Ω æ
.»»æ ø#
id_tipo_transaccion»»ø “
)»»“ ”
)»»” ‘
.»»‘ ’
Sum»»’ ÿ
(»»ÿ Ÿ
t»»Ÿ ⁄
=>»»€ ›
t»»ﬁ ﬂ
.»»ﬂ ‡
importe_total»»‡ Ì
)»»Ì Ó
;»»Ó Ô
if
…… 
(
…… )
importeTotalDeNotaDeCredito
…… 3
>
……4 5
ordenDeVenta
……6 B
.
……B C
Total
……C H
+
……I J(
sumaImporteDeNotasDeDebito
……K e
-
……f g*
sumaImporteDeNotasDeCredito……h É
)……É Ñ
{
   
throw
ÀÀ 
new
ÀÀ !
LogicaException
ÀÀ" 1
(
ÀÀ1 2
$strÀÀ2 ™
)ÀÀ™ ´
;ÀÀ´ ¨
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 
}
œœ 	
public
—— 
List
—— 
<
—— 
Transaccion
—— 
>
——  -
GenerarTransaccionesAModificar_
——! @
(
——@ A!
MovimientoEconomico
——A T*
movimientoEconomicoConPuntos
——U q
)
——q r
{
““ 	
List
‘‘ 
<
‘‘ 
Transaccion
‘‘ 
>
‘‘ %
transaccionesAModificar
‘‘ 5
=
‘‘6 7
null
‘‘8 <
;
‘‘< =
if
’’ 
(
’’ *
movimientoEconomicoConPuntos
’’ ,
!=
’’- /
null
’’0 4
)
’’4 5
{
÷÷ 
var
◊◊  
extensionJsonTraza
◊◊ &
=
◊◊' (*
movimientoEconomicoConPuntos
◊◊) E
.
◊◊E F
TrazaDePago
◊◊F Q
(
◊◊Q R
)
◊◊R S
.
◊◊S T
ExtensionJson
◊◊T a
;
◊◊a b
var
ÿÿ 
puntosCanjeados
ÿÿ #
=
ÿÿ$ %
JsonConvert
ÿÿ& 1
.
ÿÿ1 2
DeserializeObject
ÿÿ2 C
<
ÿÿC D
List
ÿÿD H
<
ÿÿH I
PuntoCanjeado
ÿÿI V
>
ÿÿV W
>
ÿÿW X
(
ÿÿX Y 
extensionJsonTraza
ÿÿY k
)
ÿÿk l
;
ÿÿl m
var
ŸŸ #
transaccionesDePuntos
ŸŸ )
=
ŸŸ* +$
transaccionRepositorio
ŸŸ, B
.
ŸŸB C"
ObtenerTransacciones
ŸŸC W
(
ŸŸW X
puntosCanjeados
ŸŸX g
.
ŸŸg h
Select
ŸŸh n
(
ŸŸn o
pc
ŸŸo q
=>
ŸŸr t
pc
ŸŸu w
.
ŸŸw x
Id
ŸŸx z
)
ŸŸz {
.
ŸŸ{ |
ToArrayŸŸ| É
(ŸŸÉ Ñ
)ŸŸÑ Ö
)ŸŸÖ Ü
;ŸŸÜ á
foreach
⁄⁄ 
(
⁄⁄ 
var
⁄⁄  
transaccionDePunto
⁄⁄ /
in
⁄⁄0 2#
transaccionesDePuntos
⁄⁄3 H
)
⁄⁄H I
{
€€ %
transaccionesAModificar
‹‹ +
=
‹‹, -
new
‹‹. 1
List
‹‹2 6
<
‹‹6 7
Transaccion
‹‹7 B
>
‹‹B C
(
‹‹C D
)
‹‹D E
;
‹‹E F
var
›› ,
puntosPendientesDeModificacion
›› 6
=
››7 8
puntosCanjeados
››9 H
.
››H I
Single
››I O
(
››O P
pc
››P R
=>
››S U
pc
››V X
.
››X Y
Id
››Y [
==
››\ ^ 
transaccionDePunto
››_ q
.
››q r
id
››r t
)
››t u
.
››u v
Cantidad
››v ~
;
››~  
transaccionDePunto
ﬁﬁ &
.
ﬁﬁ& '
	cantidad2
ﬁﬁ' 0
-=
ﬁﬁ1 3,
puntosPendientesDeModificacion
ﬁﬁ4 R
;
ﬁﬁR S 
transaccionDePunto
ﬂﬂ &
.
ﬂﬂ& '
	cantidad3
ﬂﬂ' 0
+=
ﬂﬂ1 3,
puntosPendientesDeModificacion
ﬂﬂ4 R
;
ﬂﬂR S%
transaccionesAModificar
‡‡ +
.
‡‡+ ,
Add
‡‡, /
(
‡‡/ 0 
transaccionDePunto
‡‡0 B
)
‡‡B C
;
‡‡C D
}
·· 
}
‚‚ 
return
„„ %
transaccionesAModificar
„„ *
;
„„* +
}
‰‰ 	
}
ÂÂ 
}ÊÊ ◊ï
]D:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_Consulta.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public!! 
bool!!  
HayBoletasNoEnviadas!! (
(!!( )
)!!) *
{"" 	
try## 
{$$ 
return&& 
_facturacionDatos&& (
.&&( )#
HayDocumentosNoEnviados&&) @
(&&@ A
MaestroSettings&&A P
.&&P Q
Default&&Q X
.&&X Y&
CodigoDetalleMaestroBoleta&&Y s
)&&s t
;&&t u
}'' 
catch(( 
((( 
	Exception(( 
e(( 
)(( 
{)) 
throw** 
new** 
LogicaException** )
(**) *
$str*** i
,**i j
e**k l
)**l m
;**m n
}++ 
},, 	
public.. 
List.. 
<.. 
	Documento.. 
>.. 9
-DevolverBoletasIncluidoBinarioPorEnviarPorDia.. L
(..L M
)..M N
{// 	
try00 
{11 
return22 
_facturacionDatos22 (
.22( )9
-ObtenerDocumentosIncluidoBinarioAEnviarPorDia22) V
(22V W
MaestroSettings22W f
.22f g
Default22g n
.22n o'
CodigoDetalleMaestroBoleta	22o â
)
22â ä
.
22ä ã
ToList
22ã ë
(
22ë í
)
22í ì
;
22ì î
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{55 
throw66 
new66 
LogicaException66 )
(66) *
$str66* U
,66U V
e66W X
)66X Y
;66Y Z
}77 
}88 	
public:: 
List:: 
<:: 
	Documento:: 
>:: Q
EObtenerBoletasInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendiente:: d
(::d e
)::e f
{;; 	
try<< 
{== 
int>> 
[>> 
]>> '
estadosDeEnvioQueNoSeQuiere>> 1
=>>2 3
new>>4 7
int>>8 ;
[>>; <
]>>< =
{>>> ?
(>>@ A
int>>A D
)>>D E
EstadoEnvio>>E P
.>>P Q
	Pendiente>>Q Z
,>>Z [
(>>\ ]
int>>] `
)>>` a
EstadoEnvio>>a l
.>>l m
	Rechazado>>m v
}>>w x
;>>x y
return@@ 
_facturacionDatos@@ (
.@@( )6
*ObtenerDocumentosFaltantesAEmitirAnulacion@@) S
(@@S T.
"EstadoSigescomDocumentoElectronico@@T v
.@@v w

Invalidado	@@w Å
,
@@Å Ç
$num
@@É Ñ
,
@@Ñ Ö
MaestroSettings
@@Ü ï
.
@@ï ñ
Default
@@ñ ù
.
@@ù û(
CodigoDetalleMaestroBoleta
@@û ∏
,
@@∏ π)
estadosDeEnvioQueNoSeQuiere
@@∫ ’
)
@@’ ÷
.
@@÷ ◊
ToList
@@◊ ›
(
@@› ﬁ
)
@@ﬁ ﬂ
;
@@ﬂ ‡
}AA 
catchBB 
(BB 
	ExceptionBB 
eBB 
)BB 
{CC 
throwDD 
newDD 
LogicaExceptionDD )
(DD) *
$strDD* P
,DDP Q
eDDR S
)DDS T
;DDT U
}EE 
}FF 	
publicHH 
ListHH 
<HH 
	DocumentoHH 
>HH R
FObtenerFacturasInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendienteHH e
(HHe f
)HHf g
{II 	
tryJJ 
{KK 
intLL 
[LL 
]LL '
estadosDeEnvioQueNoSeQuiereLL 1
=LL2 3
newLL4 7
intLL8 ;
[LL; <
]LL< =
{LL> ?
(LL@ A
intLLA D
)LLD E
EstadoEnvioLLE P
.LLP Q
	PendienteLLQ Z
,LLZ [
(LL\ ]
intLL] `
)LL` a
EstadoEnvioLLa l
.LLl m
	RechazadoLLm v
}LLw x
;LLx y
returnNN 
_facturacionDatosNN (
.NN( )6
*ObtenerDocumentosFaltantesAEmitirAnulacionNN) S
(NNS T.
"EstadoSigescomDocumentoElectronicoNNT v
.NNv w

Invalidado	NNw Å
,
NNÅ Ç
$num
NNÉ Ñ
,
NNÑ Ö
MaestroSettings
NNÜ ï
.
NNï ñ
Default
NNñ ù
.
NNù û)
CodigoDetalleMaestroFactura
NNû π
,
NNπ ∫)
estadosDeEnvioQueNoSeQuiere
NNª ÷
)
NN÷ ◊
.
NN◊ ÿ
ToList
NNÿ ﬁ
(
NNﬁ ﬂ
)
NNﬂ ‡
;
NN‡ ·
}OO 
catchPP 
(PP 
	ExceptionPP 
ePP 
)PP 
{QQ 
throwRR 
newRR 
LogicaExceptionRR )
(RR) *
$strRR* P
,RRP Q
eRRR S
)RRS T
;RRT U
}SS 
}TT 	
publicZZ 
ListZZ 
<ZZ 
	DocumentoZZ 
>ZZ A
5DevolverFacturasNoInvalidadasIncluidoBinarioPorEnviarZZ T
(ZZT U
)ZZU V
{[[ 	
try\\ 
{]] 
return^^ 
_facturacionDatos^^ (
.^^( )3
'ObtenerDocumentosIncluidoBinarioAEnviar^^) P
(^^P Q
MaestroSettings^^Q `
.^^` a
Default^^a h
.^^h i(
CodigoDetalleMaestroFactura	^^i Ñ
,
^^Ñ Ö
(
^^Ü á
int
^^á ä
)
^^ä ã(
EstadoDocumentoElectronico
^^ã •
.
^^• ¶

Adicionado
^^¶ ∞
)
^^∞ ±
.
^^± ≤
ToList
^^≤ ∏
(
^^∏ π
)
^^π ∫
;
^^∫ ª
}__ 
catch`` 
(`` 
	Exception`` 
e`` 
)`` 
{aa 
throwbb 
ebb 
;bb 
}cc 
}dd 	
publicjj 
Listjj 
<jj 
	Documentojj 
>jj 8
,DevolverNotasCreditoIncluidoBinarioPorEnviarjj K
(jjK L
)jjL M
{kk 	
tryll 
{mm 
returnnn 
_facturacionDatosnn (
.nn( )3
'ObtenerDocumentosIncluidoBinarioAEnviarnn) P
(nnP Q
MaestroSettingsnnQ `
.nn` a
Defaultnna h
.nnh i.
!CodigoDetalleMaestroNotaDeCredito	nni ä
)
nnä ã
.
nnã å
ToList
nnå í
(
nní ì
)
nnì î
;
nnî ï
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
throwrr 
err 
;rr 
}ss 
}tt 	
publicvv 
Listvv 
<vv 
	Documentovv 
>vv 7
+DevolverNotasDebitoIncluidoBinarioPorEnviarvv J
(vvJ K
)vvK L
{ww 	
tryxx 
{yy 
returnzz 
_facturacionDatoszz (
.zz( )3
'ObtenerDocumentosIncluidoBinarioAEnviarzz) P
(zzP Q
MaestroSettingszzQ `
.zz` a
Defaultzza h
.zzh i-
 CodigoDetalleMaestroNotaDeDebito	zzi â
)
zzâ ä
.
zzä ã
ToList
zzã ë
(
zzë í
)
zzí ì
;
zzì î
}{{ 
catch|| 
(|| 
	Exception|| 
e|| 
)|| 
{}} 
throw~~ 
e~~ 
;~~ 
} 
}
ÄÄ 	
public
ÇÇ 
List
ÇÇ 
<
ÇÇ 
	Documento
ÇÇ 
>
ÇÇ =
/DevolverGuiasDeRemisionIncluidoBinarioPorEnviar
ÇÇ N
(
ÇÇN O
)
ÇÇO P
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
return
ÜÜ 
_facturacionDatos
ÜÜ (
.
ÜÜ( )5
'ObtenerDocumentosIncluidoBinarioAEnviar
ÜÜ) P
(
ÜÜP Q
MaestroSettings
ÜÜQ `
.
ÜÜ` a
Default
ÜÜa h
.
ÜÜh i:
+CodigoDetalleMaestroGuiaDeRemisionRemitenteÜÜi î
)ÜÜî ï
.ÜÜï ñ
ToListÜÜñ ú
(ÜÜú ù
)ÜÜù û
;ÜÜû ü
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
e
ää 
;
ää 
}
ãã 
}
åå 	
public
çç 
List
çç 
<
çç 
	Documento
çç 
>
çç <
.DevolverGuiaDeRemisionIncluidoBinarioPorEnviar
çç M
(
ççM N
long
ççN R
idDocumento
ççS ^
)
çç^ _
{
éé 	
try
èè 
{
êê 
return
ëë 
_facturacionDatos
ëë (
.
ëë( )5
'ObtenerDocumentosIncluidoBinarioAEnviar
ëë) P
(
ëëP Q
MaestroSettings
ëëQ `
.
ëë` a
Default
ëëa h
.
ëëh i:
+CodigoDetalleMaestroGuiaDeRemisionRemitenteëëi î
)ëëî ï
.ëëï ñ
ToListëëñ ú
(ëëú ù
)ëëù û
;ëëû ü
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
e
ïï 
;
ïï 
}
ññ 
}
óó 	
public
úú 
List
úú 
<
úú 
	Documento
úú 
>
úú X
JObtenerNotasCreditoInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendiente
úú i
(
úúi j
)
úúj k
{
ùù 	
try
ûû 
{
üü 
int
†† 
[
†† 
]
†† )
estadosDeEnvioQueNoSeQuiere
†† 1
=
††2 3
new
††4 7
int
††8 ;
[
††; <
]
††< =
{
††> ?
(
††@ A
int
††A D
)
††D E
EstadoEnvio
††E P
.
††P Q
	Pendiente
††Q Z
,
††Z [
(
††\ ]
int
††] `
)
††` a
EstadoEnvio
††a l
.
††l m
	Rechazado
††m v
}
††w x
;
††x y
return
°° 
_facturacionDatos
°° (
.
°°( )8
*ObtenerDocumentosFaltantesAEmitirAnulacion
°°) S
(
°°S T0
"EstadoSigescomDocumentoElectronico
°°T v
.
°°v w

Invalidado°°w Å
,°°Å Ç
$num°°É Ñ
,°°Ñ Ö
MaestroSettings°°Ü ï
.°°ï ñ
Default°°ñ ù
.°°ù û1
!CodigoDetalleMaestroNotaDeCredito°°û ø
,°°ø ¿+
estadosDeEnvioQueNoSeQuiere°°¡ ‹
)°°‹ ›
.°°› ﬁ
ToList°°ﬁ ‰
(°°‰ Â
)°°Â Ê
;°°Ê Á
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
e
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
¨¨ 
List
¨¨ 
<
¨¨ 
	Documento
¨¨ 
>
¨¨ W
IObtenerNotasDebitoInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendiente
¨¨ h
(
¨¨h i
)
¨¨i j
{
≠≠ 	
try
ÆÆ 
{
ØØ 
int
∞∞ 
[
∞∞ 
]
∞∞ )
estadosDeEnvioQueNoSeQuiere
∞∞ 1
=
∞∞2 3
new
∞∞4 7
int
∞∞8 ;
[
∞∞; <
]
∞∞< =
{
∞∞> ?
(
∞∞@ A
int
∞∞A D
)
∞∞D E
EstadoEnvio
∞∞E P
.
∞∞P Q
	Pendiente
∞∞Q Z
,
∞∞Z [
(
∞∞\ ]
int
∞∞] `
)
∞∞` a
EstadoEnvio
∞∞a l
.
∞∞l m
	Rechazado
∞∞m v
}
∞∞w x
;
∞∞x y
return
±± 
_facturacionDatos
±± (
.
±±( )8
*ObtenerDocumentosFaltantesAEmitirAnulacion
±±) S
(
±±S T0
"EstadoSigescomDocumentoElectronico
±±T v
.
±±v w

Invalidado±±w Å
,±±Å Ç
$num±±É Ñ
,±±Ñ Ö
MaestroSettings±±Ü ï
.±±ï ñ
Default±±ñ ù
.±±ù û0
 CodigoDetalleMaestroNotaDeDebito±±û æ
,±±æ ø+
estadosDeEnvioQueNoSeQuiere±±¿ €
)±±€ ‹
.±±‹ ›
ToList±±› „
(±±„ ‰
)±±‰ Â
;±±Â Ê
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
e
≥≥ 
)
≥≥ 
{
¥¥ 
throw
µµ 
e
µµ 
;
µµ 
}
∂∂ 
}
∑∑ 	
public
ΩΩ 
bool
ΩΩ .
 HayFacturasInvalidadasNoEnviadas
ΩΩ 4
(
ΩΩ4 5
)
ΩΩ5 6
{
ææ 	
try
øø 
{
¿¿ 
return
¡¡ 
_facturacionDatos
¡¡ (
.
¡¡( )%
HayDocumentosNoEnviados
¡¡) @
(
¡¡@ A
MaestroSettings
¡¡A P
.
¡¡P Q
Default
¡¡Q X
.
¡¡X Y)
CodigoDetalleMaestroFactura
¡¡Y t
,
¡¡t u
(
¡¡v w
int
¡¡w z
)
¡¡z {)
EstadoDocumentoElectronico¡¡{ ï
.¡¡ï ñ
Anulado¡¡ñ ù
)¡¡ù û
;¡¡û ü
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
ƒƒ 
throw
≈≈ 
e
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 	
public
…… 
List
…… 
<
…… 
	Documento
…… 
>
…… 9
+DevolverFacturasInvalidadasNoEnviadasPorDia
…… J
(
……J K
)
……K L
{
   	
try
ÀÀ 
{
ÃÃ 
return
ÕÕ 
_facturacionDatos
ÕÕ (
.
ÕÕ( ),
ObtenerDocumentosAEnviarPorDia
ÕÕ) G
(
ÕÕG H
MaestroSettings
ÕÕH W
.
ÕÕW X
Default
ÕÕX _
.
ÕÕ_ `)
CodigoDetalleMaestroFactura
ÕÕ` {
,
ÕÕ{ |
(
ÕÕ} ~
intÕÕ~ Å
)ÕÕÅ Ç*
EstadoDocumentoElectronicoÕÕÇ ú
.ÕÕú ù
AnuladoÕÕù §
)ÕÕ§ •
.ÕÕ• ¶
ToListÕÕ¶ ¨
(ÕÕ¨ ≠
)ÕÕ≠ Æ
;ÕÕÆ Ø
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
e
œœ 
)
œœ 
{
–– 
throw
—— 
e
—— 
;
—— 
}
““ 
}
”” 	
public
÷÷ 
List
÷÷ 
<
÷÷ 
	Documento
÷÷ 
>
÷÷ J
<ObtenerFacturasInvalidadasAceptadasPeroSinComunicacionDeBaja
÷÷ [
(
÷÷[ \
)
÷÷\ ]
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
return
⁄⁄ 
_facturacionDatos
⁄⁄ (
.
⁄⁄( )
ObtenerDocumentos
⁄⁄) :
(
⁄⁄: ;
MaestroSettings
⁄⁄; J
.
⁄⁄J K
Default
⁄⁄K R
.
⁄⁄R S)
CodigoDetalleMaestroFactura
⁄⁄S n
,
⁄⁄n o1
"EstadoSigescomDocumentoElectronico⁄⁄p í
.⁄⁄í ì

Invalidado⁄⁄ì ù
,⁄⁄ù û.
FacturacionElectronicaSettings⁄⁄ü Ω
.⁄⁄Ω æ
Default⁄⁄æ ≈
.⁄⁄≈ ∆+
TipoEnvioComunicacionDeBaja⁄⁄∆ ·
,⁄⁄· ‚
$num⁄⁄„ ‰
,⁄⁄‰ Â.
FacturacionElectronicaSettings⁄⁄Ê Ñ
.⁄⁄Ñ Ö
Default⁄⁄Ö å
.⁄⁄å ç#
TipoEnvioIndividual⁄⁄ç †
,⁄⁄† °
$num⁄⁄¢ £
)⁄⁄£ §
.⁄⁄§ •
ToList⁄⁄• ´
(⁄⁄´ ¨
)⁄⁄¨ ≠
;⁄⁄≠ Æ
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
e
‹‹ 
)
‹‹ 
{
›› 
throw
ﬁﬁ 
e
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 	
public
„„ 
List
„„ 
<
„„ 
	Documento
„„ 
>
„„ N
@ObtenerNotasCreditoInvalidadasAceptadasPeroSinComunicacionDeBaja
„„ _
(
„„_ `
)
„„` a
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
List
ÁÁ 
<
ÁÁ 
	Documento
ÁÁ 
>
ÁÁ 

documentos
ÁÁ  *
=
ÁÁ+ ,
_facturacionDatos
ÁÁ- >
.
ÁÁ> ?
ObtenerDocumentos
ÁÁ? P
(
ÁÁP Q
MaestroSettings
ÁÁQ `
.
ÁÁ` a
Default
ÁÁa h
.
ÁÁh i0
!CodigoDetalleMaestroNotaDeCreditoÁÁi ä
,ÁÁä ã2
"EstadoSigescomDocumentoElectronicoÁÁå Æ
.ÁÁÆ Ø

InvalidadoÁÁØ π
,ÁÁπ ∫.
FacturacionElectronicaSettingsÁÁª Ÿ
.ÁÁŸ ⁄
DefaultÁÁ⁄ ·
.ÁÁ· ‚+
TipoEnvioComunicacionDeBajaÁÁ‚ ˝
,ÁÁ˝ ˛
$numÁÁˇ Ä
,ÁÁÄ Å.
FacturacionElectronicaSettingsÁÁÇ †
.ÁÁ† °
DefaultÁÁ° ®
.ÁÁ® ©#
TipoEnvioIndividualÁÁ© º
,ÁÁº Ω
$numÁÁæ ø
)ÁÁø ¿
.ÁÁ¿ ¡
ToListÁÁ¡ «
(ÁÁ« »
)ÁÁ» …
;ÁÁ…  
return
ËË 

documentos
ËË !
;
ËË! "
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
e
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
public
 
List
 
<
 
	Documento
 
>
 M
?ObtenerNotasDebitoInvalidadasAceptadasPeroSinComunicacionDeBaja
 ^
(
^ _
)
_ `
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
List
ÙÙ 
<
ÙÙ 
	Documento
ÙÙ 
>
ÙÙ 

documentos
ÙÙ  *
=
ÙÙ+ ,
_facturacionDatos
ÙÙ- >
.
ÙÙ> ?
ObtenerDocumentos
ÙÙ? P
(
ÙÙP Q
MaestroSettings
ÙÙQ `
.
ÙÙ` a
Default
ÙÙa h
.
ÙÙh i/
 CodigoDetalleMaestroNotaDeDebitoÙÙi â
,ÙÙâ ä2
"EstadoSigescomDocumentoElectronicoÙÙã ≠
.ÙÙ≠ Æ

InvalidadoÙÙÆ ∏
,ÙÙ∏ π.
FacturacionElectronicaSettingsÙÙ∫ ÿ
.ÙÙÿ Ÿ
DefaultÙÙŸ ‡
.ÙÙ‡ ·+
TipoEnvioComunicacionDeBajaÙÙ· ¸
,ÙÙ¸ ˝
$numÙÙ˛ ˇ
,ÙÙˇ Ä.
FacturacionElectronicaSettingsÙÙÅ ü
.ÙÙü †
DefaultÙÙ† ß
.ÙÙß ®#
TipoEnvioIndividualÙÙ® ª
,ÙÙª º
$numÙÙΩ æ
)ÙÙæ ø
.ÙÙø ¿
ToListÙÙ¿ ∆
(ÙÙ∆ «
)ÙÙ« »
;ÙÙ» …
return
ıı 

documentos
ıı !
;
ıı! "
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
e
˘˘ 
;
˘˘ 
}
˙˙ 
}
˚˚ 	
}
˝˝ 
}˛˛ ∞ì
aD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_ConsultasApi.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public 
OperationResult 
ConsultarTickets /
(/ 0
)0 1
{ 	
try 
{ 
OperationResult 
result  &
=' (
null) -
;- .$
EstablecimientoComercial (
sede) -
=. /
_sedeLogica0 ;
.; <
ObtenerSede< G
(G H
)H I
;I J
List 
< 
EnvioSimplificado &
>& '$
enviosSinCodigoRespuesta( @
=A B-
!ObtenerEnviosSinCodigoDeRespuestaC d
(d e
)e f
;f g
List 
< 
EnvioSimplificado &
>& '*
enviosSinTicketCodigoRespuesta( F
=G H$
enviosSinCodigoRespuestaI a
.a b
Whereb g
(g h
eh i
=>j l
stringm s
.s t
IsNullOrEmpty	t Å
(
Å Ç
e
Ç É
.
É Ñ
NumeroTicket
Ñ ê
)
ê ë
)
ë í
.
í ì
ToList
ì ô
(
ô ö
)
ö õ
;
õ ú
List 
< 
EnvioSimplificado &
>& '0
$enviosIndividualesSinCodigoRespuesta( L
=M N*
enviosSinTicketCodigoRespuestaO m
.m n
Wheren s
(s t
et u
=>v x
stringy 
.	 Ä
IsNullOrEmpty
Ä ç
(
ç é
e
é è
.
è ê
NumeroTicket
ê ú
)
ú ù
&&
û †,
FacturacionElectronicaSettings
° ø
.
ø ¿
Default
¿ «
.
« »!
TipoEnvioIndividual
» €
.
€ ‹
Equals
‹ ‚
(
‚ „
e
„ ‰
.
‰ Â
	TipoEnvio
Â Ó
)
Ó Ô
)
Ô 
.
 Ò
ToList
Ò ˜
(
˜ ¯
)
¯ ˘
;
˘ ˙
List   
<   
EnvioSimplificado   &
>  & '3
'enviosConTicketSinCodigoRespuestaTicket  ( O
=  P Q$
enviosSinCodigoRespuesta  R j
.  j k
Where  k p
(  p q
e  q r
=>  s u
!  v w
string  w }
.  } ~
IsNullOrEmpty	  ~ ã
(
  ã å
e
  å ç
.
  ç é
NumeroTicket
  é ö
)
  ö õ
&&
  ú û
e
  ü †
.
  † °!
CodigoTipoDocumento
  ° ¥
!=
  µ ∑
MaestroSettings
  ∏ «
.
  « »
Default
  » œ
.
  œ –9
+CodigoDetalleMaestroGuiaDeRemisionRemitente
  – ˚
)
  ˚ ¸
.
  ¸ ˝
ToList
  ˝ É
(
  É Ñ
)
  Ñ Ö
;
  Ö Ü
List!! 
<!! 
EnvioSimplificado!! &
>!!& '?
3enviosConTicketSinCodigoRespuestaTicketGuiaRemision!!( [
=!!\ ]$
enviosSinCodigoRespuesta!!^ v
.!!v w
Where!!w |
(!!| }
e!!} ~
=>	!! Å
!
!!Ç É
string
!!É â
.
!!â ä
IsNullOrEmpty
!!ä ó
(
!!ó ò
e
!!ò ô
.
!!ô ö
NumeroTicket
!!ö ¶
)
!!¶ ß
&&
!!® ™
e
!!´ ¨
.
!!¨ ≠!
CodigoTipoDocumento
!!≠ ¿
==
!!¡ √
MaestroSettings
!!ƒ ”
.
!!” ‘
Default
!!‘ €
.
!!€ ‹9
+CodigoDetalleMaestroGuiaDeRemisionRemitente
!!‹ á
)
!!á à
.
!!à â
ToList
!!â è
(
!!è ê
)
!!ê ë
;
!!ë í
foreach"" 
("" 
var"" 
envioAConsultar"" ,
in""- /0
$enviosIndividualesSinCodigoRespuesta""0 T
)""T U
{## 
try$$ 
{%% 
var&&  
documentoElectronico&& 0
=&&1 2
new&&3 6 
DocumentoElectronico&&7 K
(&&K L
)&&L M
{'' 
Emisor(( "
=((# $
new((% (
Compania(() 1
(((1 2
)((2 3
{((4 5
NroDocumento((6 B
=((C D
sede((E I
.((I J
DocumentoIdentidad((J \
}((] ^
,((^ _
IdDocumento)) '
=))( )
envioAConsultar))* 9
.))9 :
SerieDocumento)): H
+))I J
$str))K N
+))O P
envioAConsultar))Q `
.))` a
NumeroDocumento))a p
,))p q
TipoDocumento** )
=*** +
envioAConsultar**, ;
.**; <
CodigoTipoDocumento**< O
}++ 
;++ 
var,, 
respuestaConsulta,, -
=,,. /%
ResolverConsultaDocumento,,0 I
(,,I J 
documentoElectronico,,J ^
,,,^ _
envioAConsultar,,` o
.,,o p
Id,,p r
),,r s
;,,s t
}-- 
catch.. 
(.. 
	Exception.. $
)..$ %
{// 
}00 
}11 
foreach22 
(22 
var22 
envioAConsultar22 ,
in22- /3
'enviosConTicketSinCodigoRespuestaTicket220 W
)22W X
{33 
try44 
{55 
var66 
respuestaConsulta66 -
=66. /"
ResolverConsultaTicket660 F
(66F G
sede66G K
.66K L
DocumentoIdentidad66L ^
,66^ _
envioAConsultar66` o
)66o p
;66p q
}77 
catch88 
(88 
	Exception88 $
)88$ %
{99 
}:: 
};; 
foreach<< 
(<< 
var<< 
envioAConsultar<< ,
in<<- /?
3enviosConTicketSinCodigoRespuestaTicketGuiaRemision<<0 c
)<<c d
{== 
try>> 
{?? .
"ResolverConsultaTicketGuiaRemision@@ :
(@@: ;
sede@@; ?
.@@? @
DocumentoIdentidad@@@ R
,@@R S
envioAConsultar@@T c
)@@c d
;@@d e
}AA 
catchBB 
(BB 
	ExceptionBB $
)BB$ %
{CC 
}DD 
}EE 
resultFF 
=FF 
newFF 
OperationResultFF ,
(FF, -
OperationResultEnumFF- @
.FF@ A
SuccessFFA H
,FFH I
$strFFJ e
,FFe f
$strFFg k
)FFk l
;FFl m
returnGG 
resultGG 
;GG 
}HH 
catchII 
(II 
	ExceptionII 
eII 
)II 
{JJ 
throwKK 
newKK 
LogicaExceptionKK )
(KK) *
$strKK* F
,KKF G
eKKH I
)KKI J
;KKJ K
}LL 
}MM 	
publicOO #
EnviarDocumentoResponseOO &%
ResolverConsultaDocumentoOO' @
(OO@ A 
DocumentoElectronicoOOA U 
documentoElectronicoOOV j
,OOj k
longOOl p
idEnvioOOq x
)OOx y
{PP 	
varRR "
envioDocumentoResponseRR &
=RR' ((
ConsultarConstanciaDocumentoRR) E
(RRE F 
documentoElectronicoRRF Z
)RRZ [
;RR[ \
intSS 
numeroIntentosSS 
=SS  
$numSS! "
;SS" #
doTT 
{UU 
ifVV 
(VV 
!VV "
envioDocumentoResponseVV +
.VV+ ,
ExitoVV, 1
)VV1 2
{WW 
ThreadXX 
.XX 
SleepXX  
(XX  !*
FacturacionElectronicaSettingsXX! ?
.XX? @
DefaultXX@ G
.XXG H4
(TiempoEsperaParaConsultarIterativasEnvioXXH p
)XXp q
;XXq r"
envioDocumentoResponseYY *
=YY+ ,(
ConsultarConstanciaDocumentoYY- I
(YYI J 
documentoElectronicoYYJ ^
)YY^ _
;YY_ `
}ZZ 
else[[ 
{\\ &
ActualizarEnvioDeDocumento]] .
(]]. /"
envioDocumentoResponse]]/ E
,]]E F
idEnvio]]G N
)]]N O
;]]O P
}^^ 
numeroIntentos__ 
++__  
;__  !
}`` 
while`` 
(`` 
!`` "
envioDocumentoResponse`` ,
.``, -
Exito``- 2
||``3 5
numeroIntentos``6 D
<``E F*
FacturacionElectronicaSettings``G e
.``e f
Default``f m
.``m n5
(NumeroIntentosConsultaCDREnvioIndividual	``n ñ
)
``ñ ó
;
``ó ò
returnaa "
envioDocumentoResponseaa )
;aa) *
}bb 	
publicdd 
OperationResultdd 
ConsultarTicketdd .
(dd. /
stringdd/ 5
rucdd6 9
,dd9 :
EnvioSimplificadodd; L
envioAConsultarddM \
)dd\ ]
{ee 	
tryff 
{gg 
OperationResulthh 
resulthh  &
=hh' (
nullhh) -
;hh- .
varii 
respuestaConsultaii %
=ii& '"
ResolverConsultaTicketii( >
(ii> ?
rucii? B
,iiB C
envioAConsultariiD S
)iiS T
;iiT U
resultjj 
=jj 
newjj 
OperationResultjj ,
(jj, -
OperationResultEnumjj- @
.jj@ A
SuccessjjA H
,jjH I
$strjjJ e
,jje f
$strjjg k
)jjk l
{kk 
informationll 
=ll  !#
DeterminarEstadoDeEnvioll" 9
(ll9 :
respuestaConsultall: K
)llK L
}mm 
;mm 
returnnn 
resultnn 
;nn 
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
throwrr 
newrr 
LogicaExceptionrr )
(rr) *
$strrr* P
,rrP Q
errR S
)rrS T
;rrT U
}ss 
}tt 	
publicvv #
EnviarDocumentoResponsevv &"
ResolverConsultaTicketvv' =
(vv= >
stringvv> D
rucvvE H
,vvH I
EnvioSimplificadovvJ [
envioAConsultarvv\ k
)vvk l
{ww 	
varxx "
envioDocumentoResponsexx &
=xx' (%
ConsultarConstanciaTicketxx) B
(xxB C
rucxxC F
,xxF G
envioAConsultarxxH W
)xxW X
;xxX Y
intyy 
numeroIntentosyy 
=yy  
$numyy! "
;yy" #
dozz 
{{{ 
if|| 
(|| 
!|| "
envioDocumentoResponse|| +
.||+ ,
Exito||, 1
)||1 2
{}} 
Thread~~ 
.~~ 
Sleep~~  
(~~  !*
FacturacionElectronicaSettings~~! ?
.~~? @
Default~~@ G
.~~G H4
(TiempoEsperaParaConsultarIterativasEnvio~~H p
)~~p q
;~~q r"
envioDocumentoResponse *
=+ ,%
ConsultarConstanciaTicket- F
(F G
rucG J
,J K
envioAConsultarL [
)[ \
;\ ]
}
ÄÄ 
else
ÅÅ 
{
ÇÇ (
ActualizarEnvioDeDocumento
ÉÉ .
(
ÉÉ. /$
envioDocumentoResponse
ÉÉ/ E
,
ÉÉE F
envioAConsultar
ÉÉG V
.
ÉÉV W
Id
ÉÉW Y
)
ÉÉY Z
;
ÉÉZ [
}
ÑÑ 
numeroIntentos
ÖÖ 
++
ÖÖ  
;
ÖÖ  !
}
ÜÜ 
while
ÜÜ 
(
ÜÜ 
!
ÜÜ $
envioDocumentoResponse
ÜÜ ,
.
ÜÜ, -
Exito
ÜÜ- 2
||
ÜÜ3 5
numeroIntentos
ÜÜ6 D
<
ÜÜE F,
FacturacionElectronicaSettings
ÜÜG e
.
ÜÜe f
Default
ÜÜf m
.
ÜÜm n4
%NumeroIntentosConsultaCDREnvioResumenÜÜn ì
)ÜÜì î
;ÜÜî ï
return
áá $
envioDocumentoResponse
áá )
;
áá) *
}
àà 	
public
ää %
EnviarDocumentoResponse
ää &'
ConsultarConstanciaTicket
ää' @
(
ää@ A
string
ääA G
ruc
ääH K
,
ääK L
EnvioSimplificado
ääM ^
envioAConsultar
ää_ n
)
ään o
{
ãã 	
try
åå 
{
çç 
var
éé #
consultaTicketRequest
éé )
=
éé* +
new
éé, /#
ConsultaTicketRequest
éé0 E
{
èè 
Ruc
êê 
=
êê 
ruc
êê 
,
êê 

UsuarioSol
ëë 
=
ëë  ,
FacturacionElectronicaSettings
ëë! ?
.
ëë? @
Default
ëë@ G
.
ëëG H

UsuarioSol
ëëH R
,
ëëR S
ClaveSol
íí 
=
íí ,
FacturacionElectronicaSettings
íí =
.
íí= >
Default
íí> E
.
ííE F
ClaveSol
ííF N
,
ííN O
EndPointUrl
ìì 
=
ìì  !9
+DevolverUrlEnvioSunatFacturacionElectronica
ìì" M
(
ììM N
)
ììN O
,
ììO P
	NroTicket
îî 
=
îî 
envioAConsultar
îî  /
.
îî/ 0
NumeroTicket
îî0 <
}
ïï 
;
ïï 
var
ññ 
respuestaConsulta
ññ %
=
ññ& '

RestHelper
ññ( 2
<
ññ2 3#
ConsultaTicketRequest
ññ3 H
,
ññH I%
EnviarDocumentoResponse
ññJ a
>
ñña b
.
ññb c
Execute
ññc j
(
ññj k
$strññk Ä
,ññÄ Å%
consultaTicketRequestññÇ ó
,ññó ò.
FacturacionElectronicaSettingsññô ∑
.ññ∑ ∏
Defaultññ∏ ø
.ññø ¿,
UrlApiFacturacionElectronicaññ¿ ‹
)ññ‹ ›
;ññ› ﬁ
if
óó 
(
óó 
!
óó 
respuestaConsulta
óó &
.
óó& '
Exito
óó' ,
)
óó, -
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô -
(
ôô- .
$str
ôô. M
+
ôôN O
envioAConsultar
ôôP _
.
ôô_ `
NumeroTicket
ôô` l
+
ôôm n
$str
ôôo z
+
ôô{ | 
respuestaConsultaôô} é
.ôôé è
MensajeErrorôôè õ
)ôôõ ú
;ôôú ù
}
öö 
return
õõ 
respuestaConsulta
õõ (
;
õõ( )
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
e
ùù 
)
ùù 
{
ûû 
throw
üü 
new
üü 
LogicaException
üü )
(
üü) *
$str
üü* V
,
üüV W
e
üüX Y
)
üüY Z
;
üüZ [
}
†† 
}
°° 	
public
¢¢ 
void
¢¢ 0
"ResolverConsultaTicketGuiaRemision
¢¢ 6
(
¢¢6 7
string
¢¢7 =
ruc
¢¢> A
,
¢¢A B
EnvioSimplificado
¢¢C T
envioAConsultar
¢¢U d
)
¢¢d e
{
££ 	
try
§§ 
{
•• 
OperationResult
¶¶ 
	resultado
¶¶  )
=
¶¶* +
new
¶¶, /
OperationResult
¶¶0 ?
(
¶¶? @
)
¶¶@ A
;
¶¶A B
var
ßß  
tokenEnvioResponse
ßß &
=
ßß' (+
ObtenerTokenEnvioGuiaRemision
ßß) F
(
ßßF G
ruc
ßßG J
)
ßßJ K
;
ßßK L$
EnvioDocumentoResponse
®® &$
envioDocumentoResponse
®®' =
=
®®> ?
new
®®@ C$
EnvioDocumentoResponse
®®D Z
(
®®Z [
)
®®[ \
{
®®] ^
	numTicket
®®_ h
=
®®i j
envioAConsultar
®®k z
.
®®z {
NumeroTicket®®{ á
}®®à â
;®®â ä
var
©© #
obtenerRespuestaSunat
©© )
=
©©* +
true
©©, 0
;
©©0 1
var
™™ 
numeroIntentos
™™ "
=
™™# $
$num
™™% &
;
™™& '-
RespuestaEnvioDocumentoResponse
´´ /-
respuestaEnvioDocumentoResponse
´´0 O
;
´´O P
do
¨¨ 
{
≠≠ 
Thread
ÆÆ 
.
ÆÆ 
Sleep
ÆÆ  
(
ÆÆ  !,
FacturacionElectronicaSettings
ÆÆ! ?
.
ÆÆ? @
Default
ÆÆ@ G
.
ÆÆG HK
<TiempoEsperaParaConsultarRespuestaGuiaRemisionEnMilisegundosÆÆH Ñ
)ÆÆÑ Ö
;ÆÆÖ Ü-
respuestaEnvioDocumentoResponse
ØØ 3
=
ØØ4 5/
!ObtenerRespuestaEnvioGuiaRemision
ØØ6 W
(
ØØW X$
envioDocumentoResponse
ØØX n
,
ØØn o!
tokenEnvioResponseØØp Ç
)ØØÇ É
;ØØÉ Ñ#
obtenerRespuestaSunat
∞∞ )
=
∞∞* +-
respuestaEnvioDocumentoResponse
∞∞, K
.
∞∞K L
codRespuesta
∞∞L X
==
∞∞Y [,
FacturacionElectronicaSettings
∞∞\ z
.
∞∞z {
Default∞∞{ Ç
.∞∞Ç É7
'CodigoApiEnProcesoRespuestaGuiaRemision∞∞É ™
;∞∞™ ´
numeroIntentos
±± "
++
±±" $
;
±±$ %
}
≤≤ 
while
≤≤ 
(
≤≤ #
obtenerRespuestaSunat
≤≤ .
&&
≤≤/ 1,
FacturacionElectronicaSettings
≤≤2 P
.
≤≤P Q
Default
≤≤Q X
.
≤≤X Y7
(NumeroIntentosConsultaCDREnvioIndividual≤≤Y Å
>=≤≤Ç Ñ
numeroIntentos≤≤Ö ì
)≤≤ì î
;≤≤î ï
if
≥≥ 
(
≥≥ #
obtenerRespuestaSunat
≥≥ (
==
≥≥) +
false
≥≥, 1
)
≥≥1 2
{
¥¥ %
EnviarDocumentoResponse
µµ +%
enviarDocumentoResponse
µµ, C
=
µµD E-
respuestaEnvioDocumentoResponse
µµF e
.
µµe f
	Convertir
µµf o
(
µµo p
)
µµp q
;
µµq r(
ActualizarEnvioDeDocumento
∂∂ .
(
∂∂. /%
enviarDocumentoResponse
∂∂/ F
,
∂∂F G
envioAConsultar
∂∂H W
.
∂∂W X
Id
∂∂X Z
)
∂∂Z [
;
∂∂[ \
}
∑∑ 
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* ]
,
ªª] ^
e
ªª_ `
)
ªª` a
;
ªªa b
}
ºº 
}
ΩΩ 	
}
øø 
}¿¿ ∞‡

ZD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_Envio.cs
	namespace"" 	
Tsp""
 
."" "
FacturacionElectronica"" $
.""$ %
Logica""% +
{## 
public$$ 

static$$ 
class$$ 
	StringExt$$ !
{%% 
public&& 
static&& 
string&& 
Truncate&& %
(&&% &
this&&& *
string&&+ 1
value&&2 7
,&&7 8
int&&9 <
	maxLength&&= F
)&&F G
{'' 	
if(( 
((( 
string(( 
.(( 
IsNullOrEmpty(( $
((($ %
value((% *
)((* +
)((+ ,
return((- 3
value((4 9
;((9 :
return)) 
value)) 
.)) 
Length)) 
<=))  "
	maxLength))# ,
?))- .
value))/ 4
:))5 6
value))7 <
.))< =
	Substring))= F
())F G
$num))G H
,))H I
	maxLength))J S
)))S T
;))T U
}** 	
}++ 
public-- 

partial-- 
class-- (
FacturacionElectronicaLogica-- 5
{.. 
public11 
OperationResult11 
EnvioFacturas11 ,
(11, -
LogEnvio11- 5
logEnvio116 >
)11> ?
{22 	
try33 
{44 
	Documento55 
[55 
]55 

documentos55 &
=55' (A
5DevolverFacturasNoInvalidadasIncluidoBinarioPorEnviar55) ^
(55^ _
)55_ `
.55` a
ToArray55a h
(55h i
)55i j
;55j k
if66 
(66 

documentos66 
.66 
Length66 %
>66& '
$num66( )
)66) *
{77 
var88 
result88 
=88  #
ResolverEnvioIndividual88! 8
(888 9

documentos889 C
,88C D
logEnvio88E M
)88M N
;88N O
Util99 
.99 +
ManejoEnLogicaResultadoSinExito99 8
(998 9
result999 ?
,99? @
$str99A i
)99i j
;99j k
}:: 
else;; 
{<< 
logEnvio== 
.== 
LogNoHayDocumentos== /
(==/ 0
true==0 4
,==4 5
$str==6 R
)==R S
;==S T
}>> 
}?? 
catch@@ 
(@@ 
	Exception@@ 
e@@ 
)@@ 
{AA 
logEnvioBB 
.BB 
ErrorBB 
.BB 
AddBB "
(BB" #
$strBB# K
+BBL M
$strBBN S
+BBT U
UtilBBV Z
.BBZ [
InicioErrorStringBB[ l
(BBl m
eBBm n
)BBn o
)BBo p
;BBp q
logEnvioCC 
.CC 
LogErrorCC !
.CC! "
AddCC" %
(CC% &
$strCC& N
+CCO P
$strCCQ V
+CCW X
UtilCCY ]
.CC] ^
SoloErrorStringCC^ m
(CCm n
eCCn o
)CCo p
)CCp q
;CCq r
}DD 
returnEE 
newEE 
OperationResultEE &
(EE& '
OperationResultEnumEE' :
.EE: ;
SuccessEE; B
,EEB C
$strEED _
,EE_ `
$strEEa e
)EEe f
;EEf g
}FF 	
publicHH 
OperationResultHH #
ResolverEnvioIndividualHH 6
(HH6 7
	DocumentoHH7 @
[HH@ A
]HHA B

documentosHHC M
,HHM N
LogEnvioHHO W
logEnvioHHX `
)HH` a
{II 	
forJJ 
(JJ 
intJJ 
iJJ 
=JJ 
$numJJ 
;JJ 
iJJ 
<JJ 

documentosJJ  *
.JJ* +
LengthJJ+ 1
;JJ1 2
iJJ3 4
++JJ4 6
)JJ6 7
{KK 
tryLL 
{MM  
DocumentoElectronicoNN ( 
documentoElectronicoNN) =
=NN> ?
JsonConvertNN@ K
.NNK L
DeserializeObjectNNL ]
<NN] ^ 
DocumentoElectronicoNN^ r
>NNr s
(NNs t
EncodingNNt |
.NN| }
UTF8	NN} Å
.
NNÅ Ç
	GetString
NNÇ ã
(
NNã å

documentos
NNå ñ
[
NNñ ó
i
NNó ò
]
NNò ô
.
NNô ö
Binario
NNö °
.
NN° ¢
archivoBinario
NN¢ ∞
)
NN∞ ±
)
NN± ≤
;
NN≤ ≥
boolOO )
documentoElectronicoEsUnaNotaOO 6
=OO7 8

documentosOO9 C
[OOC D
iOOD E
]OOE F
.OOF G!
codigoTipoComprobanteOOG \
==OO] _
MaestroSettingsOO` o
.OOo p
DefaultOOp w
.OOw x.
!CodigoDetalleMaestroNotaDeCredito	OOx ô
||
OOö ú

documentos
OOù ß
[
OOß ®
i
OO® ©
]
OO© ™
.
OO™ ´#
codigoTipoComprobante
OO´ ¿
==
OO¡ √
MaestroSettings
OOƒ ”
.
OO” ‘
Default
OO‘ €
.
OO€ ‹.
 CodigoDetalleMaestroNotaDeDebito
OO‹ ¸
;
OO¸ ˝
ifPP 
(PP )
documentoElectronicoEsUnaNotaPP 5
)PP5 6
{QQ 
ifRR 
(RR 
!RR %
_generacionArchivosLogicaRR 6
.RR6 7*
DocumentoReferenciaFueAceptadoRR7 U
(RRU V 
documentoElectronicoRRV j
.RRj k
RelacionadosRRk w
.RRw x
FirstOrDefault	RRx Ü
(
RRÜ á
)
RRá à
.
RRà â
TipoDocumento
RRâ ñ
,
RRñ ó"
documentoElectronico
RRò ¨
.
RR¨ ≠
Relacionados
RR≠ π
.
RRπ ∫
FirstOrDefault
RR∫ »
(
RR» …
)
RR…  
.
RR  À
NroDocumento
RRÀ ◊
)
RR◊ ÿ
)
RRÿ Ÿ
{SS 
throwTT !
newTT" %
LogicaExceptionTT& 5
(TT5 6
$strTT6 W
+TTX Y 
documentoElectronicoTTZ n
.TTn o
RelacionadosTTo {
.TT{ |
FirstOrDefault	TT| ä
(
TTä ã
)
TTã å
.
TTå ç
TipoDocumento
TTç ö
+
TTõ ú
$str
TTù †
+
TT° ¢"
documentoElectronico
TT£ ∑
.
TT∑ ∏
Relacionados
TT∏ ƒ
.
TTƒ ≈
FirstOrDefault
TT≈ ”
(
TT” ‘
)
TT‘ ’
.
TT’ ÷
NroDocumento
TT÷ ‚
+
TT„ ‰
$str
TTÂ ˇ
)
TTˇ Ä
;
TTÄ Å
}UU 
}VV 
varWW 
documentoResponseWW )
=WW* +

RestHelperWW, 6
<WW6 7 
DocumentoElectronicoWW7 K
,WWK L
DocumentoResponseWWM ^
>WW^ _
.WW_ `
ExecuteWW` g
(WWg h
ObtenerMetodoApiWWh x
(WWx y!
documentoElectronico	WWy ç
.
WWç é
TipoDocumento
WWé õ
)
WWõ ú
,
WWú ù"
documentoElectronico
WWû ≤
,
WW≤ ≥,
FacturacionElectronicaSettings
WW¥ “
.
WW“ ”
Default
WW” ⁄
.
WW⁄ €*
UrlApiFacturacionElectronica
WW€ ˜
)
WW˜ ¯
;
WW¯ ˘
ifXX 
(XX 
!XX 
documentoResponseXX *
.XX* +
ExitoXX+ 0
)XX0 1
{YY 
throwZZ 
newZZ !
LogicaExceptionZZ" 1
(ZZ1 2
documentoResponseZZ2 C
.ZZC D
MensajeErrorZZD P
)ZZP Q
;ZZQ R
}[[ 
var\\ 
archivoCertificado\\ *
=\\+ ,
ObtenerCertificado\\- ?
(\\? @ 
documentoElectronico\\@ T
.\\T U
Emisor\\U [
.\\[ \
NroDocumento\\\ h
)\\h i
;\\i j
var]] 
firmadoResponse]] '
=]]( )
FirmarDocumento]]* 9
(]]9 :
documentoResponse]]: K
,]]K L
archivoCertificado]]M _
)]]_ `
;]]` a
var^^ 
resultadoEnvio^^ &
=^^' (
EnviarIndividual^^) 9
(^^9 : 
documentoElectronico^^: N
,^^N O
firmadoResponse^^P _
,^^_ `

documentos^^a k
[^^k l
i^^l m
]^^m n
.^^n o
id^^o q
)^^q r
;^^r s
if__ 
(__ 
resultadoEnvio__ &
.__& '
code_result__' 2
==__3 5
OperationResultEnum__6 I
.__I J
Information__J U
)__U V
{`` 
logEnvioaa  
.aa  !
Erroraa! &
.aa& '
Addaa' *
(aa* + 
documentoElectronicoaa+ ?
.aa? @
IdDocumentoaa@ K
+aaL M
$straaN R
+aaS T
resultadoEnvioaaU c
.aac d
titleaad i
)aai j
;aaj k
breakbb 
;bb 
}cc 
ifdd 
(dd 
!dd 
stringdd 
.dd  
IsNullOrEmptydd  -
(dd- .
resultadoEnviodd. <
.dd< =
titledd= B
)ddB C
)ddC D
{ee 
logEnvioff  
.ff  !
Errorff! &
.ff& '
Addff' *
(ff* + 
documentoElectronicoff+ ?
.ff? @
IdDocumentoff@ K
+ffL M
$strffN R
+ffS T
resultadoEnvioffU c
.ffc d
titleffd i
)ffi j
;ffj k
}gg 
Utilhh 
.hh +
ManejoEnLogicaResultadoSinExitohh 8
(hh8 9
resultadoEnviohh9 G
,hhG H
$strhhI s
)hhs t
;hht u
logEnvioii 
.ii 
Exitoii "
.ii" #
Addii# &
(ii& '
	ItemEnvioii' 0
.ii0 1
ItemAdicionadoii1 ?
(ii? @ 
documentoElectronicoii@ T
.iiT U
IdDocumentoiiU `
)ii` a
)iia b
;iib c
}jj 
catchkk 
(kk 
	Exceptionkk  
ekk! "
)kk" #
{ll 
logEnviomm 
.mm 
Errormm "
.mm" #
Addmm# &
(mm& '

documentosmm' 1
[mm1 2
imm2 3
]mm3 4
.mm4 5 
ComprobanteDocumentomm5 I
(mmI J
)mmJ K
+mmL M
$strmmN R
+mmS T
UtilmmU Y
.mmY Z
InicioErrorStringmmZ k
(mmk l
emml m
)mmm n
)mmn o
;mmo p
logEnvionn 
.nn 
LogErrornn %
.nn% &
Addnn& )
(nn) *

documentosnn* 4
[nn4 5
inn5 6
]nn6 7
.nn7 8 
ComprobanteDocumentonn8 L
(nnL M
)nnM N
+nnO P
$strnnQ U
+nnV W
UtilnnX \
.nn\ ]
SoloErrorStringnn] l
(nnl m
ennm n
)nnn o
)nno p
;nnp q
}oo 
}pp 
returnqq 
newqq 
OperationResultqq &
(qq& '
OperationResultEnumqq' :
.qq: ;
Successqq; B
,qqB C
$strqqD _
,qq_ `
$strqqa e
)qqe f
;qqf g
}rr 	
privatett 
OperationResulttt 
EnviarIndividualtt  0
(tt0 1 
DocumentoElectronicott1 E 
documentoElectronicottF Z
,ttZ [
FirmadoResponsett\ k
firmadoResponsettl {
,tt{ |
long	tt} Å
idDocumento
ttÇ ç
)
ttç é
{uu 	
IndicadorExcepcionvv 

logDeEnviovv )
=vv* +
newvv, /
IndicadorExcepcionvv0 B
(vvB C
$strvvC E
)vvE F
;vvF G
OperationResultww 
resultadoCrearEnvioww /
=ww0 1
newww2 5
OperationResultww6 E
(wwE F
)wwF G
;wwG H#
EnviarDocumentoResponsexx #"
envioDocumentoResponsexx$ :
;xx: ;
tryyy 
{zz 
try{{ 
{|| 
resultadoCrearEnvio}} '
=}}( )

CrearEnvio}}* 4
(}}4 5
$str}}5 7
,}}7 8*
FacturacionElectronicaSettings}}9 W
.}}W X
Default}}X _
.}}_ `
TipoEnvioIndividual}}` s
,}}s t
(}}u v
int}}v y
)}}y z
EstadoEnvio	}}z Ö
.
}}Ö Ü
	Pendiente
}}Ü è
,
}}è ê
$str
}}ë ì
,
}}ì î
$str
}}ï ó
,
}}ó ò
$str
}}ô õ
,
}}õ ú
Encoding
}}ù •
.
}}• ¶
UTF8
}}¶ ™
.
}}™ ´
GetBytes
}}´ ≥
(
}}≥ ¥
JsonConvert
}}¥ ø
.
}}ø ¿
SerializeObject
}}¿ œ
(
}}œ –
firmadoResponse
}}– ﬂ
)
}}ﬂ ‡
)
}}‡ ·
,
}}· ‚
null
}}„ Á
,
}}Á Ë
	ModoEnvio
}}È Ú
.
}}Ú Û
Ninguno
}}Û ˙
)
}}˙ ˚
;
}}˚ ¸
Util~~ 
.~~ +
ManejoEnLogicaResultadoSinExito~~ 8
(~~8 9
resultadoCrearEnvio~~9 L
,~~L M
$str~~N |
+~~} ~
idDocumento	~~ ä
)
~~ä ã
;
~~ã å
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ  
)
ÄÄ  !
{
ÅÅ 
return
ÇÇ 
new
ÇÇ 
OperationResult
ÇÇ .
(
ÇÇ. /!
OperationResultEnum
ÇÇ/ B
.
ÇÇB C
Information
ÇÇC N
,
ÇÇN O
$str
ÇÇP f
,
ÇÇf g
$str
ÇÇh o
)
ÇÇo p
;
ÇÇp q
}
ÉÉ 
var
ÑÑ *
resultadoCrearEnvioDocumento
ÑÑ 0
=
ÑÑ1 2!
CrearEnvioDocumento
ÑÑ3 F
(
ÑÑF G!
resultadoCrearEnvio
ÑÑG Z
.
ÑÑZ [
data
ÑÑ[ _
,
ÑÑ_ `
idDocumento
ÑÑa l
)
ÑÑl m
;
ÑÑm n
Util
ÖÖ 
.
ÖÖ -
ManejoEnLogicaResultadoSinExito
ÖÖ 4
(
ÖÖ4 5*
resultadoCrearEnvioDocumento
ÖÖ5 Q
,
ÖÖQ R
$strÖÖS É
+ÖÖÑ Ö$
documentoElectronicoÖÖÜ ö
.ÖÖö õ
IdDocumentoÖÖõ ¶
)ÖÖ¶ ß
;ÖÖß ®
var
ÜÜ 2
$resultadoActualizarDocumentoAEnviado
ÜÜ 8
=
ÜÜ9 :)
ActualizarDocumentoAEnviado
ÜÜ; V
(
ÜÜV W
idDocumento
ÜÜW b
)
ÜÜb c
;
ÜÜc d
Util
áá 
.
áá -
ManejoEnLogicaResultadoSinExito
áá 4
(
áá4 52
$resultadoActualizarDocumentoAEnviado
áá5 Y
,
ááY Z
$stráá[ á
+ááà â$
documentoElectronicoááä û
.ááû ü
IdDocumentoááü ™
+áá´ ¨
$stráá≠ π
)ááπ ∫
;áá∫ ª$
envioDocumentoResponse
àà &
=
àà' ($
ResolverEnvioDocumento
àà) ?
(
àà? @
firmadoResponse
àà@ O
,
ààO P"
documentoElectronico
ààQ e
,
ààe f!
resultadoCrearEnvio
ààg z
.
ààz {
data
àà{ 
,àà Ä

logDeEnvioààÅ ã
)ààã å
;ààå ç
if
ââ 
(
ââ 
!
ââ $
envioDocumentoResponse
ââ +
.
ââ+ ,
Exito
ââ, 1
)
ââ1 2
{
ää (
ActualizarEnvioDeDocumento
ãã .
(
ãã. /$
envioDocumentoResponse
ãã/ E
,
ããE F!
resultadoCrearEnvio
ããG Z
.
ããZ [
data
ãã[ _
)
ãã_ `
;
ãã` a
throw
åå 
new
åå 
LogicaException
åå -
(
åå- .
$str
åå. V
+
ååW X$
envioDocumentoResponse
ååY o
.
ååo p
MensajeError
ååp |
)
åå| }
;
åå} ~
}
çç 
return
éé 
new
éé 
OperationResult
éé *
(
éé* +!
OperationResultEnum
éé+ >
.
éé> ?
Success
éé? F
,
ééF G
(
ééH I
string
ééI O
.
ééO P
IsNullOrEmpty
ééP ]
(
éé] ^

logDeEnvio
éé^ h
.
ééh i
RegistroExcepcion
ééi z
)
ééz {
?
éé| }
$stréé~ Ä
:ééÅ Ç
EnvironmentééÉ é
.ééé è
NewLineééè ñ
+ééó ò

logDeEnvioééô £
.éé£ §!
RegistroExcepcionéé§ µ
)ééµ ∂
,éé∂ ∑
$stréé∏ º
)ééº Ω
;ééΩ æ
}
èè 
catch
êê 
(
êê 
LogicaException
êê "
e
êê# $
)
êê$ %
{
ëë $
envioDocumentoResponse
íí &
=
íí' ($
ResolverEnvioDocumento
íí) ?
(
íí? @
firmadoResponse
íí@ O
,
ííO P"
documentoElectronico
ííQ e
,
ííe f!
resultadoCrearEnvio
ííg z
.
ííz {
data
íí{ 
,íí Ä

logDeEnvioííÅ ã
)ííã å
;ííå ç
if
ìì 
(
ìì 
!
ìì $
envioDocumentoResponse
ìì +
.
ìì+ ,
Exito
ìì, 1
)
ìì1 2
{
îî (
ActualizarEnvioDeDocumento
ïï .
(
ïï. /$
envioDocumentoResponse
ïï/ E
,
ïïE F!
resultadoCrearEnvio
ïïG Z
.
ïïZ [
data
ïï[ _
)
ïï_ `
;
ïï` a
throw
ññ 
new
ññ 
LogicaException
ññ -
(
ññ- .
$str
ññ. V
+
ññW X$
envioDocumentoResponse
ññY o
.
ñño p
MensajeError
ññp |
)
ññ| }
;
ññ} ~
}
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* Q
,
òòQ R
e
òòS T
)
òòT U
;
òòU V
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
$str
úú* Q
,
úúQ R
e
úúS T
)
úúT U
;
úúU V
}
ùù 
}
ûû 	
public
†† %
EnviarDocumentoResponse
†† &$
ResolverEnvioDocumento
††' =
(
††= >
FirmadoResponse
††> M
firmadoResponse
††N ]
,
††] ^"
DocumentoElectronico
††_ s#
documentoElectronico††t à
,††à â
long††ä é
idEnvio††è ñ
,††ñ ó"
IndicadorExcepcion††ò ™

logDeEnvio††´ µ
)††µ ∂
{
°° 	%
EnviarDocumentoResponse
¢¢ #$
envioDocumentoResponse
¢¢$ :
=
¢¢; <
EnviarDocumento
¢¢= L
(
¢¢L M
firmadoResponse
¢¢M \
,
¢¢\ ]"
documentoElectronico
¢¢^ r
)
¢¢r s
;
¢¢s t
int
££ 
numeroIntentos
££ 
=
££  
$num
££! "
;
££" #
do
§§ 
{
•• 
if
¶¶ 
(
¶¶ 
!
¶¶ $
envioDocumentoResponse
¶¶ +
.
¶¶+ ,
Exito
¶¶, 1
)
¶¶1 2
{
ßß 

logDeEnvio
®® 
.
®® 
RegistroExcepcion
®® 0
=
®®1 2
Environment
®®3 >
.
®®> ?
NewLine
®®? F
+
®®G H$
envioDocumentoResponse
®®I _
.
®®_ `
MensajeError
®®` l
;
®®l m
Thread
©© 
.
©© 
Sleep
©©  
(
©©  !,
FacturacionElectronicaSettings
©©! ?
.
©©? @
Default
©©@ G
.
©©G H6
(TiempoEsperaParaConsultarIterativasEnvio
©©H p
)
©©p q
;
©©q r$
envioDocumentoResponse
™™ *
=
™™+ ,
EnviarDocumento
™™- <
(
™™< =
firmadoResponse
™™= L
,
™™L M"
documentoElectronico
™™N b
)
™™b c
;
™™c d
}
´´ 
if
¨¨ 
(
¨¨ $
envioDocumentoResponse
¨¨ *
.
¨¨* +
Exito
¨¨+ 0
)
¨¨0 1
{
≠≠ 
if
ÆÆ 
(
ÆÆ #
CodigoFESunatSettings
ÆÆ -
.
ÆÆ- .
Default
ÆÆ. 5
.
ÆÆ5 6
C1033
ÆÆ6 ;
.
ÆÆ; <
Equals
ÆÆ< B
(
ÆÆB C$
envioDocumentoResponse
ÆÆC Y
.
ÆÆY Z
CodigoRespuesta
ÆÆZ i
)
ÆÆi j
)
ÆÆj k
{
ØØ $
envioDocumentoResponse
∞∞ .
=
∞∞/ 0*
ConsultarConstanciaDocumento
∞∞1 M
(
∞∞M N"
documentoElectronico
∞∞N b
)
∞∞b c
;
∞∞c d
}
±± (
ActualizarEnvioDeDocumento
≤≤ .
(
≤≤. /$
envioDocumentoResponse
≤≤/ E
,
≤≤E F
idEnvio
≤≤G N
)
≤≤N O
;
≤≤O P
}
≥≥ 
numeroIntentos
¥¥ 
++
¥¥  
;
¥¥  !
}
µµ 
while
µµ 
(
µµ 
!
µµ $
envioDocumentoResponse
µµ ,
.
µµ, -
Exito
µµ- 2
&&
µµ3 5
numeroIntentos
µµ6 D
<
µµE F,
FacturacionElectronicaSettings
µµG e
.
µµe f
Default
µµf m
.
µµm n7
(NumeroIntentosConsultaCDREnvioIndividualµµn ñ
)µµñ ó
;µµó ò
return
∂∂ $
envioDocumentoResponse
∂∂ )
;
∂∂) *
}
∑∑ 	
public
ππ %
EnviarDocumentoResponse
ππ &
EnviarDocumento
ππ' 6
(
ππ6 7
FirmadoResponse
ππ7 F
firmadoResponse
ππG V
,
ππV W"
DocumentoElectronico
ππX l#
documentoElectronicoππm Å
)ππÅ Ç
{
∫∫ 	
var
ªª 
documentoRequest
ªª  
=
ªª! "
new
ªª# &$
EnviarDocumentoRequest
ªª' =
{
ºº 
Ruc
ΩΩ 
=
ΩΩ "
documentoElectronico
ΩΩ *
.
ΩΩ* +
Emisor
ΩΩ+ 1
.
ΩΩ1 2
NroDocumento
ΩΩ2 >
,
ΩΩ> ?

UsuarioSol
ææ 
=
ææ ,
FacturacionElectronicaSettings
ææ ;
.
ææ; <
Default
ææ< C
.
ææC D

UsuarioSol
ææD N
,
ææN O
ClaveSol
øø 
=
øø ,
FacturacionElectronicaSettings
øø 9
.
øø9 :
Default
øø: A
.
øøA B
ClaveSol
øøB J
,
øøJ K
EndPointUrl
¿¿ 
=
¿¿ 9
+DevolverUrlEnvioSunatFacturacionElectronica
¿¿ I
(
¿¿I J
)
¿¿J K
,
¿¿K L
IdDocumento
¡¡ 
=
¡¡ "
documentoElectronico
¡¡ 2
.
¡¡2 3
IdDocumento
¡¡3 >
,
¡¡> ?
TipoDocumento
¬¬ 
=
¬¬ "
documentoElectronico
¬¬  4
.
¬¬4 5
TipoDocumento
¬¬5 B
,
¬¬B C
TramaXmlFirmado
√√ 
=
√√  !
firmadoResponse
√√" 1
.
√√1 2
TramaXmlFirmado
√√2 A
}
ƒƒ 
;
ƒƒ 
return
≈≈ 

RestHelper
≈≈ 
<
≈≈ $
EnviarDocumentoRequest
≈≈ 4
,
≈≈4 5%
EnviarDocumentoResponse
≈≈6 M
>
≈≈M N
.
≈≈N O
Execute
≈≈O V
(
≈≈V W
$str
≈≈W l
,
≈≈l m
documentoRequest
≈≈n ~
,
≈≈~ .
FacturacionElectronicaSettings≈≈Ä û
.≈≈û ü
Default≈≈ü ¶
.≈≈¶ ß,
UrlApiFacturacionElectronica≈≈ß √
)≈≈√ ƒ
;≈≈ƒ ≈
}
∆∆ 	
public
»» %
EnviarDocumentoResponse
»» &*
ConsultarConstanciaDocumento
»»' C
(
»»C D"
DocumentoElectronico
»»D X
	documento
»»Y b
)
»»b c
{
…… 	
try
   
{
ÀÀ 
var
ÃÃ '
consultaConstanciaRequest
ÃÃ -
=
ÃÃ. /
new
ÃÃ0 3'
ConsultaConstanciaRequest
ÃÃ4 M
{
ÕÕ 
Ruc
ŒŒ 
=
ŒŒ 
	documento
ŒŒ #
.
ŒŒ# $
Emisor
ŒŒ$ *
.
ŒŒ* +
NroDocumento
ŒŒ+ 7
,
ŒŒ7 8

UsuarioSol
œœ 
=
œœ  ,
FacturacionElectronicaSettings
œœ! ?
.
œœ? @
Default
œœ@ G
.
œœG H

UsuarioSol
œœH R
,
œœR S
ClaveSol
–– 
=
–– ,
FacturacionElectronicaSettings
–– =
.
––= >
Default
––> E
.
––E F
ClaveSol
––F N
,
––N O
EndPointUrl
—— 
=
——  !,
FacturacionElectronicaSettings
——" @
.
——@ A
Default
——A H
.
——H I1
#URLWebServiceSunatConsultaDocumento
——I l
,
——l m
IdDocumento
““ 
=
““  !
	documento
““" +
.
““+ ,
IdDocumento
““, 7
,
““7 8
TipoDocumento
”” !
=
””" #
	documento
””$ -
.
””- .
TipoDocumento
””. ;
,
””; <
Serie
‘‘ 
=
‘‘ 
	documento
‘‘ %
.
‘‘% &
IdDocumento
‘‘& 1
.
‘‘1 2
Split
‘‘2 7
(
‘‘7 8
$char
‘‘8 ;
)
‘‘; <
[
‘‘< =
$num
‘‘= >
]
‘‘> ?
,
‘‘? @
Numero
’’ 
=
’’ 
Convert
’’ $
.
’’$ %
ToInt32
’’% ,
(
’’, -
	documento
’’- 6
.
’’6 7
IdDocumento
’’7 B
.
’’B C
Split
’’C H
(
’’H I
$char
’’I L
)
’’L M
[
’’M N
$num
’’N O
]
’’O P
)
’’P Q
}
÷÷ 
;
÷÷ 
var
◊◊ 
respuestaConsulta
◊◊ %
=
◊◊& '

RestHelper
◊◊( 2
<
◊◊2 3'
ConsultaConstanciaRequest
◊◊3 L
,
◊◊L M%
EnviarDocumentoResponse
◊◊N e
>
◊◊e f
.
◊◊f g
Execute
◊◊g n
(
◊◊n o
$str◊◊o à
,◊◊à â)
consultaConstanciaRequest◊◊ä £
,◊◊£ §.
FacturacionElectronicaSettings◊◊• √
.◊◊√ ƒ
Default◊◊ƒ À
.◊◊À Ã,
UrlApiFacturacionElectronica◊◊Ã Ë
)◊◊Ë È
;◊◊È Í
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
respuestaConsulta
ÿÿ &
.
ÿÿ& '
Exito
ÿÿ' ,
)
ÿÿ, -
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ -
(
⁄⁄- .
$str
⁄⁄. ^
+
⁄⁄_ `
respuestaConsulta
⁄⁄a r
.
⁄⁄r s
MensajeError
⁄⁄s 
)⁄⁄ Ä
;⁄⁄Ä Å
}
€€ 
return
‹‹ 
respuestaConsulta
‹‹ (
;
‹‹( )
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ 
e
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
throw
‡‡ 
new
‡‡ 
LogicaException
‡‡ )
(
‡‡) *
$str
‡‡* Y
,
‡‡Y Z
e
‡‡[ \
)
‡‡\ ]
;
‡‡] ^
}
·· 
}
‚‚ 	
public
‰‰ 
OperationResult
‰‰ (
ActualizarEnvioDeDocumento
‰‰ 9
(
‰‰9 :%
EnviarDocumentoResponse
‰‰: Q$
envioDocumentoResponse
‰‰R h
,
‰‰h i
long
‰‰j n
idEnvio
‰‰o v
)
‰‰v w
{
ÂÂ 	
try
ÊÊ 
{
ÁÁ 
Envio
ËË 
envioAActualizar
ËË &
=
ËË' (%
GenerarEnvioAActualizar
ËË) @
(
ËË@ A$
envioDocumentoResponse
ËËA W
,
ËËW X
idEnvio
ËËY `
)
ËË` a
;
ËËa b
var
ÌÌ &
resultadoActualizarEnvio
ÌÌ ,
=
ÌÌ- .
_facturacionDatos
ÌÌ/ @
.
ÌÌ@ A
ActualizarEnvio
ÌÌA P
(
ÌÌP Q
envioAActualizar
ÌÌQ a
)
ÌÌa b
;
ÌÌb c
Util
ÓÓ 
.
ÓÓ -
ManejoEnLogicaResultadoSinExito
ÓÓ 4
(
ÓÓ4 5&
resultadoActualizarEnvio
ÓÓ5 M
,
ÓÓM N
$str
ÓÓO s
)
ÓÓs t
;
ÓÓt u
return
ÔÔ 
new
ÔÔ 
OperationResult
ÔÔ *
(
ÔÔ* +!
OperationResultEnum
ÔÔ+ >
.
ÔÔ> ?
Success
ÔÔ? F
,
ÔÔF G
$str
ÔÔH c
,
ÔÔc d
$str
ÔÔe i
)
ÔÔi j
;
ÔÔj k
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
e
ÒÒ 
)
ÒÒ 
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ 
LogicaException
ÛÛ )
(
ÛÛ) *
$str
ÛÛ* U
,
ÛÛU V
e
ÛÛW X
)
ÛÛX Y
;
ÛÛY Z
}
ÙÙ 
}
ıı 	
public
˜˜ 
Envio
˜˜ %
GenerarEnvioAActualizar
˜˜ ,
(
˜˜, -%
EnviarDocumentoResponse
˜˜- D$
envioDocumentoResponse
˜˜E [
,
˜˜[ \
long
˜˜] a
idEnvio
˜˜b i
)
˜˜i j
{
¯¯ 	
try
˘˘ 
{
˙˙ 
OperationResult
˚˚ #
resultadoCrearBinario
˚˚  5
=
˚˚6 7
null
˚˚8 <
;
˚˚< =
if
¸¸ 
(
¸¸ $
envioDocumentoResponse
¸¸ *
.
¸¸* +
Exito
¸¸+ 0
)
¸¸0 1
{
˝˝ #
resultadoCrearBinario
˛˛ )
=
˛˛* +
CrearBinario
˛˛, 8
(
˛˛8 9
Encoding
˛˛9 A
.
˛˛A B
UTF8
˛˛B F
.
˛˛F G
GetBytes
˛˛G O
(
˛˛O P
JsonConvert
˛˛P [
.
˛˛[ \
SerializeObject
˛˛\ k
(
˛˛k l%
envioDocumentoResponse˛˛l Ç
)˛˛Ç É
)˛˛É Ñ
)˛˛Ñ Ö
;˛˛Ö Ü
}
ˇˇ 
var
ÄÄ 
envioAActualizar
ÄÄ $
=
ÄÄ% &
new
ÄÄ' *
Envio
ÄÄ+ 0
{
ÅÅ 
id
ÇÇ 
=
ÇÇ 
idEnvio
ÇÇ  
,
ÇÇ  !
estado
ÉÉ 
=
ÉÉ $
envioDocumentoResponse
ÉÉ 3
.
ÉÉ3 4
Exito
ÉÉ4 9
?
ÉÉ: ;%
DeterminarEstadoDeEnvio
ÉÉ< S
(
ÉÉS T$
envioDocumentoResponse
ÉÉT j
)
ÉÉj k
:
ÉÉl m
(
ÉÉn o
int
ÉÉo r
)
ÉÉr s
EstadoEnvio
ÉÉs ~
.
ÉÉ~ 
	PendienteÉÉ à
,ÉÉà â
codigoRespuesta
ÑÑ #
=
ÑÑ$ %$
envioDocumentoResponse
ÑÑ& <
.
ÑÑ< =
CodigoRespuesta
ÑÑ= L
,
ÑÑL M
observacion
ÖÖ 
=
ÖÖ  !$
envioDocumentoResponse
ÖÖ" 8
.
ÖÖ8 9
Exito
ÖÖ9 >
?
ÖÖ? @$
envioDocumentoResponse
ÖÖA W
.
ÖÖW X
MensajeRespuesta
ÖÖX h
+
ÖÖi j
$str
ÖÖk n
+
ÖÖo p
(
ÖÖq r
string
ÖÖr x
.
ÖÖx y
IsNullOrEmptyÖÖy Ü
(ÖÖÜ á&
envioDocumentoResponseÖÖá ù
.ÖÖù û
MensajeErrorÖÖû ™
)ÖÖ™ ´
?ÖÖ¨ ≠
$strÖÖÆ ∞
:ÖÖ± ≤&
envioDocumentoResponseÖÖ≥ …
.ÖÖ…  
MensajeErrorÖÖ  ÷
)ÖÖ÷ ◊
:ÖÖÿ Ÿ&
envioDocumentoResponseÖÖ⁄ 
.ÖÖ Ò
MensajeErrorÖÖÒ ˝
,ÖÖ˝ ˛ 
idBinarioRespuesta
ÜÜ &
=
ÜÜ' (
null
ÜÜ) -
}
áá 
;
áá 
envioAActualizar
àà  
.
àà  ! 
idBinarioRespuesta
àà! 3
=
àà4 5$
envioDocumentoResponse
àà6 L
.
ààL M
Exito
ààM R
?
ààS T#
resultadoCrearBinario
ààU j
.
ààj k
data
ààk o
:
ààp q
envioAActualizarààr Ç
.ààÇ É"
idBinarioRespuestaààÉ ï
;ààï ñ
return
ââ 
envioAActualizar
ââ '
;
ââ' (
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
e
ãã 
)
ãã 
{
åå 
throw
çç 
new
çç 
LogicaException
çç )
(
çç) *
$str
çç* U
,
ççU V
e
ççW X
)
ççX Y
;
ççY Z
}
éé 
}
èè 	
public
ëë 
int
ëë %
DeterminarEstadoDeEnvio
ëë *
(
ëë* +%
EnviarDocumentoResponse
ëë+ B%
enviarDocumentoResponse
ëëC Z
)
ëëZ [
{
íí 	
int
ìì 
estadoEnvio
ìì 
;
ìì 
if
îî 
(
îî %
enviarDocumentoResponse
îî '
.
îî' (
Exito
îî( -
&&
îî. 0
!
îî1 2
string
îî2 8
.
îî8 9
IsNullOrEmpty
îî9 F
(
îîF G%
enviarDocumentoResponse
îîG ^
.
îî^ _
TramaZipCdr
îî_ j
)
îîj k
)
îîk l
{
ïï 
var
ññ 
codigoDeRespuesta
ññ %
=
ññ& '
Convert
ññ( /
.
ññ/ 0
ToInt32
ññ0 7
(
ññ7 8%
enviarDocumentoResponse
ññ8 O
.
ññO P
CodigoRespuesta
ññP _
)
ññ_ `
;
ññ` a
estadoEnvio
óó 
=
óó 
(
óó 
codigoDeRespuesta
óó 0
==
óó1 3,
FacturacionElectronicaSettings
óó4 R
.
óóR S
Default
óóS Z
.
óóZ [%
CodigoRespuestaAceptado
óó[ r
)
óór s
?
óót u
(
òò 
int
òò 
)
òò 
EstadoEnvio
òò $
.
òò$ %
Aceptado
òò% -
:
òò. /
(
ôô 
codigoDeRespuesta
ôô *
<=
ôô+ -,
FacturacionElectronicaSettings
ôô. L
.
ôôL M
Default
ôôM T
.
ôôT U/
!MaximoCodigoRespuestaConExcepcion
ôôU v
&&
ôôw y
codigoDeRespuesta
öö )
>=
öö* ,,
FacturacionElectronicaSettings
öö- K
.
ööK L
Default
ööL S
.
ööS T/
!MinimoCodigoRespuestaConExcepcion
ööT u
)
ööu v
?
ööw x
(
õõ 
int
õõ  
)
õõ  !
EstadoEnvio
õõ! ,
.
õõ, -
ConExcepcion
õõ- 9
:
õõ: ;
(
úú 
codigoDeRespuesta
úú .
<=
úú/ 1,
FacturacionElectronicaSettings
úú2 P
.
úúP Q
Default
úúQ X
.
úúX Y,
MaximoCodigoRespuestaRechazado
úúY w
&&
ùù 
codigoDeRespuesta
ùù 0
>=
ùù1 3,
FacturacionElectronicaSettings
ùù4 R
.
ùùR S
Default
ùùS Z
.
ùùZ [,
MinimoCodigoRespuestaRechazado
ùù[ y
)
ùùy z
?
ùù{ |
(
ûû  !
int
ûû! $
)
ûû$ %
EstadoEnvio
ûû% 0
.
ûû0 1
	Rechazado
ûû1 :
:
ûû; <
(
üü$ %
codigoDeRespuesta
üü% 6
>=
üü7 9,
FacturacionElectronicaSettings
üü: X
.
üüX Y
Default
üüY `
.
üü` a2
#MinimoCodigoRespuestaConObservacionüüa Ñ
)üüÑ Ö
?üüÜ á
(
††( )
int
††) ,
)
††, -
EstadoEnvio
††- 8
.
††8 9&
AceptadoConObservaciones
††9 Q
:
††R S
(
°°( )
int
°°) ,
)
°°, -
EstadoEnvio
°°- 8
.
°°8 9
ConExcepcion
°°9 E
;
°°E F
if
££ 
(
££ 
estadoEnvio
££ 
!=
££  "
(
££# $
int
££$ '
)
££' (
EstadoEnvio
££( 3
.
££3 4
Aceptado
££4 <
)
££< =
estadoEnvio
§§ 
=
§§  !
Diccionario
§§" -
.
§§- .7
)CodigoFESunatConsideradosAceptadosEnSiges
§§. W
.
§§W X
Contains
§§X `
(
§§` a%
enviarDocumentoResponse
§§a x
.
§§x y
CodigoRespuesta§§y à
)§§à â
?§§ä ã
(§§å ç
int§§ç ê
)§§ê ë
EstadoEnvio§§ë ú
.§§ú ù
Aceptado§§ù •
:§§¶ ß
estadoEnvio§§® ≥
;§§≥ ¥
}
•• 
else
¶¶ 
{
ßß 
estadoEnvio
®® 
=
®® 
(
®® 
int
®® "
)
®®" #
EstadoEnvio
®®# .
.
®®. /
ConExcepcion
®®/ ;
;
®®; <
}
©© 
if
™™ 
(
™™ 
estadoEnvio
™™ 
!=
™™ 
(
™™  
int
™™  #
)
™™# $
EstadoEnvio
™™$ /
.
™™/ 0
Aceptado
™™0 8
)
™™8 9
{
´´ &
EstablecimientoComercial
¨¨ (
sede
¨¨) -
=
¨¨. /
_sedeLogica
¨¨0 ;
.
¨¨; <
ObtenerSede
¨¨< G
(
¨¨G H
)
¨¨H I
;
¨¨I J
_mailer
≠≠ 
.
≠≠ 
	SendEmail
≠≠ !
(
≠≠! " 
AplicacionSettings
≠≠" 4
.
≠≠4 5
Default
≠≠5 <
.
≠≠< =3
%CorreoParaNotificacionDeErrorHangfire
≠≠= b
,
≠≠b c
$str≠≠d Ä
+≠≠Å Ç
$str≠≠É ä
+≠≠ã å
sede≠≠ç ë
.≠≠ë í"
DocumentoIdentidad≠≠í §
+≠≠• ¶
$str≠≠ß ¨
+≠≠≠ Æ
sede≠≠Ø ≥
.≠≠≥ ¥
Nombre≠≠¥ ∫
+≠≠ª º
$str≠≠Ω ¡
+≠≠¬ √
sede≠≠ƒ »
.≠≠» …
NombreComercial≠≠… ÿ
+≠≠Ÿ ⁄
$str≠≠€ ﬁ
,≠≠ﬁ ﬂ
$str≠≠‡ ˙
+≠≠˚ ¸
	Enumerado≠≠˝ Ü
.≠≠Ü á
GetDescription≠≠á ï
(≠≠ï ñ
(≠≠ñ ó
EstadoEnvio≠≠ó ¢
)≠≠¢ £
estadoEnvio≠≠£ Æ
)≠≠Æ Ø
+≠≠∞ ±
$str≠≠≤ ∏
+≠≠π ∫
sede≠≠ª ø
.≠≠ø ¿
Nombre≠≠¿ ∆
)≠≠∆ «
;≠≠« »
}
ÆÆ 
return
ØØ 
estadoEnvio
ØØ 
;
ØØ 
}
∞∞ 	
public
≤≤ 
FirmadoResponse
≤≤ 
FirmarDocumento
≤≤ .
(
≤≤. /
DocumentoResponse
≤≤/ @
documentoResponse
≤≤A R
,
≤≤R S
byte
≤≤T X
[
≤≤X Y
]
≤≤Y Z 
archivoCertificado
≤≤[ m
)
≤≤m n
{
≥≥ 	
try
¥¥ 
{
µµ 
var
∂∂ 
firmado
∂∂ 
=
∂∂ 
new
∂∂ !
FirmadoRequest
∂∂" 0
{
∑∑ 
TramaXmlSinFirma
∏∏ $
=
∏∏% &
documentoResponse
∏∏' 8
.
∏∏8 9
TramaXmlSinFirma
∏∏9 I
,
∏∏I J 
CertificadoDigital
ππ &
=
ππ' (
Convert
ππ) 0
.
ππ0 1
ToBase64String
ππ1 ?
(
ππ? @ 
archivoCertificado
ππ@ R
)
ππR S
,
ππS T!
PasswordCertificado
∫∫ '
=
∫∫( ),
FacturacionElectronicaSettings
∫∫* H
.
∫∫H I
Default
∫∫I P
.
∫∫P Q%
ClaveCertificadoDigital
∫∫Q h
,
∫∫h i
}
ªª 
;
ªª 
var
ºº 
respuestaFirmado
ºº $
=
ºº% &

RestHelper
ºº' 1
<
ºº1 2
FirmadoRequest
ºº2 @
,
ºº@ A
FirmadoResponse
ººB Q
>
ººQ R
.
ººR S
Execute
ººS Z
(
ººZ [
$str
ºº[ g
,
ººg h
firmado
ººi p
,
ººp q-
FacturacionElectronicaSettingsººr ê
.ººê ë
Defaultººë ò
.ººò ô,
UrlApiFacturacionElectronicaººô µ
)ººµ ∂
;ºº∂ ∑
if
ΩΩ 
(
ΩΩ 
!
ΩΩ 
respuestaFirmado
ΩΩ %
.
ΩΩ% &
Exito
ΩΩ& +
)
ΩΩ+ ,
{
ææ 
throw
øø 
new
øø 
LogicaException
øø -
(
øø- .
respuestaFirmado
øø. >
.
øø> ?
MensajeError
øø? K
)
øøK L
;
øøL M
}
¿¿ 
return
¡¡ 
respuestaFirmado
¡¡ '
;
¡¡' (
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
ƒƒ 
throw
≈≈ 
new
≈≈ 
LogicaException
≈≈ )
(
≈≈) *
$str
≈≈* T
,
≈≈T U
e
≈≈V W
)
≈≈W X
;
≈≈X Y
}
∆∆ 
}
«« 	
public
ÀÀ 
OperationResult
ÀÀ 
EnvioBoletas
ÀÀ +
(
ÀÀ+ ,
LogEnvio
ÀÀ, 4
logEnvio
ÀÀ5 =
)
ÀÀ= >
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ /
!EstablecimientoComercialExtendido
œœ 1
sede
œœ2 6
=
œœ7 8
_sedeLogica
œœ9 D
.
œœD E"
ObtenerSedeExtendida
œœE Y
(
œœY Z
)
œœZ [
;
œœ[ \
	Documento
–– 
[
–– 
]
–– 
documentosPorDia
–– ,
;
––, -
var
—— #
noHayBoletasPorEnviar
—— )
=
——* +;
-DevolverBoletasIncluidoBinarioPorEnviarPorDia
——, Y
(
——Y Z
)
——Z [
.
——[ \
Count
——\ a
==
——b d
$num
——e f
;
——f g
do
““ 
{
”” 
documentosPorDia
‘‘ $
=
‘‘% &;
-DevolverBoletasIncluidoBinarioPorEnviarPorDia
‘‘' T
(
‘‘T U
)
‘‘U V
.
‘‘V W
OrderBy
‘‘W ^
(
‘‘^ _
d
‘‘_ `
=>
‘‘a c
d
‘‘d e
.
‘‘e f

idSigescom
‘‘f p
)
‘‘p q
.
‘‘q r
ToArray
‘‘r y
(
‘‘y z
)
‘‘z {
;
‘‘{ |
if
’’ 
(
’’ 
documentosPorDia
’’ (
.
’’( )
Length
’’) /
>
’’0 1
$num
’’2 3
)
’’3 4
{
÷÷ 
var
◊◊ !
resultResumenDiario
◊◊ /
=
◊◊0 1)
ResolverResumenDiarioPorDia
◊◊2 M
(
◊◊M N
sede
◊◊N R
,
◊◊R S
documentosPorDia
◊◊T d
,
◊◊d e
logEnvio
◊◊f n
)
◊◊n o
;
◊◊o p
}
ÿÿ 
}
ŸŸ 
while
⁄⁄ 
(
⁄⁄ 
documentosPorDia
⁄⁄ '
.
⁄⁄' (
Length
⁄⁄( .
>
⁄⁄/ 0
$num
⁄⁄1 2
)
⁄⁄2 3
;
⁄⁄3 4
	Documento
‹‹ 
[
‹‹ 
]
‹‹ #
documentosInvalidados
‹‹ 1
=
‹‹2 3S
EObtenerBoletasInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendiente
‹‹4 y
(
‹‹y z
)
‹‹z {
.
‹‹{ |
ToArray‹‹| É
(‹‹É Ñ
)‹‹Ñ Ö
;‹‹Ö Ü
if
›› 
(
›› #
documentosInvalidados
›› )
.
››) *
Length
››* 0
>
››1 2
$num
››3 4
)
››4 5
{
ﬁﬁ 
ConsultarTickets
‡‡ $
(
‡‡$ %
)
‡‡% &
;
‡‡& '
List
·· 
<
·· 
DateTime
·· !
>
··! "&
fechasDeEmisionDistintas
··# ;
=
··< =#
documentosInvalidados
··> S
.
··S T
Select
··T Z
(
··Z [
d
··[ \
=>
··] _
d
··` a
.
··a b
fechaEmision
··b n
.
··n o
Date
··o s
)
··s t
.
··t u
Distinct
··u }
(
··} ~
)
··~ 
.·· Ä
ToList··Ä Ü
(··Ü á
)··á à
;··à â
foreach
‚‚ 
(
‚‚ 
var
‚‚  
item
‚‚! %
in
‚‚& (&
fechasDeEmisionDistintas
‚‚) A
)
‚‚A B
{
„„ 
try
‰‰ 
{
ÂÂ 
var
ÊÊ 
resultInvalidados
ÊÊ  1
=
ÊÊ2 3#
ResolverResumenDiario
ÊÊ4 I
(
ÊÊI J
sede
ÊÊJ N
,
ÊÊN O#
documentosInvalidados
ÊÊP e
.
ÊÊe f
Where
ÊÊf k
(
ÊÊk l
d
ÊÊl m
=>
ÊÊn p
d
ÊÊq r
.
ÊÊr s
fechaEmision
ÊÊs 
.ÊÊ Ä
DateÊÊÄ Ñ
==ÊÊÖ á
itemÊÊà å
)ÊÊå ç
.ÊÊç é
ToArrayÊÊé ï
(ÊÊï ñ
)ÊÊñ ó
,ÊÊó ò
falseÊÊô û
,ÊÊû ü
$strÊÊ† ’
,ÊÊ’ ÷
$strÊÊ◊ ì
,ÊÊì î
	ModoEnvioÊÊï û
.ÊÊû ü
	AnulacionÊÊü ®
)ÊÊ® ©
;ÊÊ© ™
Util
ÁÁ  
.
ÁÁ  !-
ManejoEnLogicaResultadoSinExito
ÁÁ! @
(
ÁÁ@ A
resultInvalidados
ÁÁA R
,
ÁÁR S
$strÁÁT û
)ÁÁû ü
;ÁÁü †
foreach
ËË #
(
ËË$ %
var
ËË% (
serie
ËË) .
in
ËË/ 1#
documentosInvalidados
ËË2 G
.
ËËG H
Select
ËËH N
(
ËËN O
ed
ËËO Q
=>
ËËR T
ed
ËËU W
.
ËËW X
serieComprobante
ËËX h
)
ËËh i
.
ËËi j
Distinct
ËËj r
(
ËËr s
)
ËËs t
.
ËËt u
ToList
ËËu {
(
ËË{ |
)
ËË| }
)
ËË} ~
{
ÈÈ 
logEnvio
ÍÍ  (
.
ÍÍ( )
Exito
ÍÍ) .
.
ÍÍ. /
Add
ÍÍ/ 2
(
ÍÍ2 3
	ItemEnvio
ÍÍ3 <
.
ÍÍ< =
ItemAnulado
ÍÍ= H
(
ÍÍH I
$str
ÍÍI L
+
ÍÍM N
serie
ÍÍO T
+
ÍÍU V
$str
ÍÍW Z
+
ÍÍ[ \#
documentosInvalidados
ÍÍ] r
.
ÍÍr s
Where
ÍÍs x
(
ÍÍx y
s
ÍÍy z
=>
ÍÍ{ }
s
ÍÍ~ 
.ÍÍ Ä 
serieComprobanteÍÍÄ ê
==ÍÍë ì
serieÍÍî ô
)ÍÍô ö
.ÍÍö õ
OrderByÍÍõ ¢
(ÍÍ¢ £
dÍÍ£ §
=>ÍÍ• ß
ConvertÍÍ® Ø
.ÍÍØ ∞
ToInt32ÍÍ∞ ∑
(ÍÍ∑ ∏
dÍÍ∏ π
.ÍÍπ ∫!
numeroComprobanteÍÍ∫ À
)ÍÍÀ Ã
)ÍÍÃ Õ
.ÍÍÕ Œ
FirstOrDefaultÍÍŒ ‹
(ÍÍ‹ ›
)ÍÍ› ﬁ
.ÍÍﬁ ﬂ!
numeroComprobanteÍÍﬂ 
+ÍÍÒ Ú
$strÍÍÛ ˆ
+ÍÍ˜ ¯%
documentosInvalidadosÍÍ˘ é
.ÍÍé è
WhereÍÍè î
(ÍÍî ï
sÍÍï ñ
=>ÍÍó ô
sÍÍö õ
.ÍÍõ ú 
serieComprobanteÍÍú ¨
==ÍÍ≠ Ø
serieÍÍ∞ µ
)ÍÍµ ∂
.ÍÍ∂ ∑!
OrderByDescendingÍÍ∑ »
(ÍÍ» …
dÍÍ…  
=>ÍÍÀ Õ
ConvertÍÍŒ ’
.ÍÍ’ ÷
ToInt32ÍÍ÷ ›
(ÍÍ› ﬁ
dÍÍﬁ ﬂ
.ÍÍﬂ ‡!
numeroComprobanteÍÍ‡ Ò
)ÍÍÒ Ú
)ÍÍÚ Û
.ÍÍÛ Ù
FirstOrDefaultÍÍÙ Ç
(ÍÍÇ É
)ÍÍÉ Ñ
.ÍÍÑ Ö!
numeroComprobanteÍÍÖ ñ
+ÍÍó ò
$strÍÍô ú
)ÍÍú ù
)ÍÍù û
;ÍÍû ü
}
ÎÎ 
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ (
e
ÌÌ) *
)
ÌÌ* +
{
ÓÓ 
logEnvio
ÔÔ $
.
ÔÔ$ %
Error
ÔÔ% *
.
ÔÔ* +
Add
ÔÔ+ .
(
ÔÔ. /
$str
ÔÔ/ T
+
ÔÔU V
$str
ÔÔW \
+
ÔÔ] ^
Util
ÔÔ_ c
.
ÔÔc d
InicioErrorString
ÔÔd u
(
ÔÔu v
e
ÔÔv w
)
ÔÔw x
)
ÔÔx y
;
ÔÔy z
logEnvio
 $
.
$ %
LogError
% -
.
- .
Add
. 1
(
1 2
$str
2 W
+
X Y
$str
Z _
+
` a
Util
b f
.
f g
SoloErrorString
g v
(
v w
e
w x
)
x y
)
y z
;
z {
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 
if
ÙÙ 
(
ÙÙ #
noHayBoletasPorEnviar
ÙÙ )
&&
ÙÙ* ,#
documentosInvalidados
ÙÙ- B
.
ÙÙB C
Length
ÙÙC I
==
ÙÙJ L
$num
ÙÙM N
)
ÙÙN O
{
ıı 
logEnvio
ˆˆ 
.
ˆˆ  
LogNoHayDocumentos
ˆˆ /
(
ˆˆ/ 0
true
ˆˆ0 4
,
ˆˆ4 5
$str
ˆˆ6 Z
)
ˆˆZ [
;
ˆˆ[ \
}
˜˜ 
return
¯¯ 
new
¯¯ 
OperationResult
¯¯ *
(
¯¯* +!
OperationResultEnum
¯¯+ >
.
¯¯> ?
Success
¯¯? F
,
¯¯F G
$str
¯¯H c
,
¯¯c d
$str
¯¯e i
)
¯¯i j
;
¯¯j k
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
new
¸¸ 
LogicaException
¸¸ )
(
¸¸) *
$str
¸¸* W
,
¸¸W X
e
¸¸Y Z
)
¸¸Z [
;
¸¸[ \
}
˝˝ 
}
˛˛ 	
public
ÄÄ 
OperationResult
ÄÄ )
ResolverResumenDiarioPorDia
ÄÄ :
(
ÄÄ: ;/
!EstablecimientoComercialExtendido
ÄÄ; \
sede
ÄÄ] a
,
ÄÄa b
	Documento
ÄÄc l
[
ÄÄl m
]
ÄÄm n

documentos
ÄÄo y
,
ÄÄy z
LogEnvioÄÄ{ É
logEnvioÄÄÑ å
)ÄÄå ç
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
int
ÑÑ 
tamanyoLote
ÑÑ 
=
ÑÑ  !,
FacturacionElectronicaSettings
ÑÑ" @
.
ÑÑ@ A
Default
ÑÑA H
.
ÑÑH I&
TamanyoLoteResumenDiario
ÑÑI a
;
ÑÑa b
int
ÖÖ )
contadorResumenesProcesados
ÖÖ /
=
ÖÖ0 1
$num
ÖÖ2 3
;
ÖÖ3 4
int
ÜÜ #
totalResumenesAEnviar
ÜÜ )
=
ÜÜ* +
Convert
ÜÜ, 3
.
ÜÜ3 4
ToInt16
ÜÜ4 ;
(
ÜÜ; <
Math
ÜÜ< @
.
ÜÜ@ A
Ceiling
ÜÜA H
(
ÜÜH I
Convert
ÜÜI P
.
ÜÜP Q
	ToDecimal
ÜÜQ Z
(
ÜÜZ [
Convert
ÜÜ[ b
.
ÜÜb c
	ToDecimal
ÜÜc l
(
ÜÜl m

documentos
ÜÜm w
.
ÜÜw x
Length
ÜÜx ~
)
ÜÜ~ 
/ÜÜÄ Å
ConvertÜÜÇ â
.ÜÜâ ä
	ToDecimalÜÜä ì
(ÜÜì î
tamanyoLoteÜÜî ü
)ÜÜü †
)ÜÜ† °
)ÜÜ° ¢
)ÜÜ¢ £
;ÜÜ£ §
while
áá 
(
áá )
contadorResumenesProcesados
áá 2
<
áá3 4#
totalResumenesAEnviar
áá5 J
)
ááJ K
{
àà )
contadorResumenesProcesados
ââ /
++
ââ/ 1
;
ââ1 2
	Documento
ää 
[
ää 
]
ää 
documentosLote
ää  .
=
ää/ 0

documentos
ää1 ;
.
ää; <
Skip
ää< @
(
ää@ A
(
ääA B)
contadorResumenesProcesados
ääB ]
-
ää^ _
$num
ää` a
)
ääa b
*
ääc d
tamanyoLote
ääe p
)
ääp q
.
ääq r
Take
äär v
(
ääv w
tamanyoLoteääw Ç
)ääÇ É
.ääÉ Ñ
ToArrayääÑ ã
(ääã å
)ääå ç
;ääç é
var
ãã 
resultResumen
ãã %
=
ãã& '#
ResolverResumenDiario
ãã( =
(
ãã= >
sede
ãã> B
,
ããB C
documentosLote
ããD R
,
ããR S
true
ããT X
,
ããX Y
$strããZ Ü
,ããÜ á
$strããà π
,ããπ ∫
	ModoEnvioããª ƒ
.ããƒ ≈
Adicionãã≈ Ã
)ããÃ Õ
;ããÕ Œ
Util
åå 
.
åå (
ManageIfResultIsNotSuccess
åå 3
(
åå3 4
resultResumen
åå4 A
,
ååA B
$str
ååC q
)
ååq r
;
åår s
foreach
çç 
(
çç 
var
çç  
serie
çç! &
in
çç' )
documentosLote
çç* 8
.
çç8 9
Select
çç9 ?
(
çç? @
ed
çç@ B
=>
ççC E
ed
ççF H
.
ççH I
serieComprobante
ççI Y
)
ççY Z
.
ççZ [
Distinct
çç[ c
(
ççc d
)
ççd e
.
ççe f
ToList
ççf l
(
ççl m
)
ççm n
)
ççn o
{
éé 
logEnvio
èè  
.
èè  !
Exito
èè! &
.
èè& '
Add
èè' *
(
èè* +
	ItemEnvio
èè+ 4
.
èè4 5
ItemAdicionado
èè5 C
(
èèC D
$str
èèD G
+
èèH I
serie
èèJ O
+
èèP Q
$str
èèR U
+
èèV W
documentosLote
èèX f
.
èèf g
Where
èèg l
(
èèl m
s
èèm n
=>
èèo q
s
èèr s
.
èès t
serieComprobanteèèt Ñ
==èèÖ á
serieèèà ç
)èèç é
.èèé è
OrderByèèè ñ
(èèñ ó
dèèó ò
=>èèô õ
Convertèèú £
.èè£ §
ToInt32èè§ ´
(èè´ ¨
dèè¨ ≠
.èè≠ Æ!
numeroComprobanteèèÆ ø
)èèø ¿
)èè¿ ¡
.èè¡ ¬
FirstOrDefaultèè¬ –
(èè– —
)èè— “
.èè“ ”!
numeroComprobanteèè” ‰
+èèÂ Ê
$strèèÁ Í
+èèÎ Ï
documentosLoteèèÌ ˚
.èè˚ ¸
Whereèè¸ Å
(èèÅ Ç
sèèÇ É
=>èèÑ Ü
sèèá à
.èèà â 
serieComprobanteèèâ ô
==èèö ú
serieèèù ¢
)èè¢ £
.èè£ §!
OrderByDescendingèè§ µ
(èèµ ∂
dèè∂ ∑
=>èè∏ ∫
Convertèèª ¬
.èè¬ √
ToInt32èè√  
(èè  À
dèèÀ Ã
.èèÃ Õ!
numeroComprobanteèèÕ ﬁ
)èèﬁ ﬂ
)èèﬂ ‡
.èè‡ ·
FirstOrDefaultèè· Ô
(èèÔ 
)èè Ò
.èèÒ Ú!
numeroComprobanteèèÚ É
+èèÑ Ö
$strèèÜ â
)èèâ ä
)èèä ã
;èèã å
}
êê 
if
íí 
(
íí 
resultResumen
íí %
.
íí% &
code_result
íí& 1
==
íí2 4!
OperationResultEnum
íí5 H
.
ííH I
Success
ííI P
&&
ííQ S
(
ííT U
(
ííU V
int
ííV Y
)
ííY Z
resultResumen
ííZ g
.
ííg h
information
ííh s
==
íít v
(
ííw x
int
ííx {
)
íí{ |
EstadoEnvioíí| á
.ííá à
Aceptadoííà ê
||ííë ì
(ííî ï
intííï ò
)ííò ô
resultResumenííô ¶
.íí¶ ß
informationííß ≤
==íí≥ µ
(íí∂ ∑
intíí∑ ∫
)íí∫ ª
EstadoEnvioííª ∆
.íí∆ «(
AceptadoConObservacionesíí« ﬂ
)ííﬂ ‡
)íí‡ ·
{
ìì 
if
îî 
(
îî 
documentosLote
îî *
.
îî* +
Any
îî+ .
(
îî. /
d
îî/ 0
=>
îî1 3
d
îî4 5
.
îî5 6
estadoSigescom
îî6 D
==
îîE G
(
îîH I
int
îîI L
)
îîL M0
"EstadoSigescomDocumentoElectronico
îîM o
.
îîo p

Invalidado
îîp z
)
îîz {
)
îî{ |
{
ïï 
	Documento
óó %
[
óó% &
]
óó& '#
documentosInvalidados
óó( =
=
óó> ?
documentosLote
óó@ N
.
óóN O
Where
óóO T
(
óóT U
d
óóU V
=>
óóW Y
d
óóZ [
.
óó[ \
estadoSigescom
óó\ j
==
óók m
(
óón o
int
óóo r
)
óór s1
"EstadoSigescomDocumentoElectronicoóós ï
.óóï ñ

Invalidadoóóñ †
)óó† °
.óó° ¢
ToArrayóó¢ ©
(óó© ™
)óó™ ´
;óó´ ¨
var
ôô %
resultResumenInvalidado
ôô  7
=
ôô8 9.
 ResolverResumenDiarioInvalidados
ôô: Z
(
ôôZ [
sede
ôô[ _
,
ôô_ `#
documentosInvalidados
ôôa v
)
ôôv w
;
ôôw x
Util
öö  
.
öö  !(
ManageIfResultIsNotSuccess
öö! ;
(
öö; <%
resultResumenInvalidado
öö< S
,
ööS T
$strööU É
)ööÉ Ñ
;ööÑ Ö
logEnvio
õõ $
.
õõ$ %
Exito
õõ% *
.
õõ* +
Add
õõ+ .
(
õõ. /
	ItemEnvio
õõ/ 8
.
õõ8 9
ItemAnulado
õõ9 D
(
õõD E
string
õõE K
.
õõK L
Join
õõL P
(
õõP Q
$str
õõQ U
,
õõU V#
documentosInvalidados
õõW l
.
õõl m
Select
õõm s
(
õõs t
d
õõt u
=>
õõv x
d
õõy z
.
õõz {#
ComprobanteDocumentoõõ{ è
(õõè ê
)õõê ë
)õõë í
)õõí ì
)õõì î
)õõî ï
;õõï ñ
}
úú 
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
logEnvio
¢¢ 
.
¢¢ 
Error
¢¢ 
.
¢¢ 
Add
¢¢ "
(
¢¢" #
$str
¢¢# H
+
¢¢I J
$str
¢¢K P
+
¢¢Q R
Util
¢¢S W
.
¢¢W X
InicioErrorString
¢¢X i
(
¢¢i j
e
¢¢j k
)
¢¢k l
)
¢¢l m
;
¢¢m n
logEnvio
££ 
.
££ 
LogError
££ !
.
££! "
Add
££" %
(
££% &
$str
££& K
+
££L M
$str
££N S
+
££T U
Util
££V Z
.
££Z [
SoloErrorString
££[ j
(
££j k
e
££k l
)
££l m
)
££m n
;
££n o
}
§§ 
return
•• 
new
•• 
OperationResult
•• &
(
••& '!
OperationResultEnum
••' :
.
••: ;
Success
••; B
,
••B C
$str
••D _
,
••_ `
$str
••a e
)
••e f
;
••f g
;
••h i
}
¶¶ 	
public
®® 
OperationResult
®® .
 ResolverResumenDiarioInvalidados
®® ?
(
®®? @/
!EstablecimientoComercialExtendido
®®@ a
sede
®®b f
,
®®f g
	Documento
®®h q
[
®®q r
]
®®r s$
documentosInvalidados®®t â
)®®â ä
{
©© 	
try
™™ 
{
´´ 
int
¨¨ 
tamanyoLote
¨¨ 
=
¨¨  !,
FacturacionElectronicaSettings
¨¨" @
.
¨¨@ A
Default
¨¨A H
.
¨¨H I&
TamanyoLoteResumenDiario
¨¨I a
;
¨¨a b
int
≠≠ )
contadorResumenesProcesados
≠≠ /
=
≠≠0 1
$num
≠≠2 3
;
≠≠3 4
int
ÆÆ #
totalResumenesAEnviar
ÆÆ )
=
ÆÆ* +
Convert
ÆÆ, 3
.
ÆÆ3 4
ToInt16
ÆÆ4 ;
(
ÆÆ; <
Math
ÆÆ< @
.
ÆÆ@ A
Ceiling
ÆÆA H
(
ÆÆH I
Convert
ÆÆI P
.
ÆÆP Q
	ToDecimal
ÆÆQ Z
(
ÆÆZ [
Convert
ÆÆ[ b
.
ÆÆb c
	ToDecimal
ÆÆc l
(
ÆÆl m$
documentosInvalidadosÆÆm Ç
.ÆÆÇ É
LengthÆÆÉ â
)ÆÆâ ä
/ÆÆã å
ConvertÆÆç î
.ÆÆî ï
	ToDecimalÆÆï û
(ÆÆû ü
tamanyoLoteÆÆü ™
)ÆÆ™ ´
)ÆÆ´ ¨
)ÆÆ¨ ≠
)ÆÆ≠ Æ
;ÆÆÆ Ø
while
ØØ 
(
ØØ )
contadorResumenesProcesados
ØØ 2
<
ØØ3 4#
totalResumenesAEnviar
ØØ5 J
)
ØØJ K
{
∞∞ )
contadorResumenesProcesados
±± /
++
±±/ 1
;
±±1 2
	Documento
≤≤ 
[
≤≤ 
]
≤≤ 
documentosLote
≤≤  .
=
≤≤/ 0#
documentosInvalidados
≤≤1 F
.
≤≤F G
Skip
≤≤G K
(
≤≤K L
(
≤≤L M)
contadorResumenesProcesados
≤≤M h
-
≤≤i j
$num
≤≤k l
)
≤≤l m
*
≤≤n o
tamanyoLote
≤≤p {
)
≤≤{ |
.
≤≤| }
Take≤≤} Å
(≤≤Å Ç
tamanyoLote≤≤Ç ç
)≤≤ç é
.≤≤é è
ToArray≤≤è ñ
(≤≤ñ ó
)≤≤ó ò
;≤≤ò ô
var
¥¥ '
resultTicketDeInvalidados
¥¥ 1
=
¥¥2 3#
ResolverResumenDiario
¥¥4 I
(
¥¥I J
sede
¥¥J N
,
¥¥N O
documentosLote
¥¥P ^
,
¥¥^ _
false
¥¥` e
,
¥¥e f
$str¥¥g ú
,¥¥ú ù
$str¥¥û ⁄
,¥¥⁄ €
	ModoEnvio¥¥‹ Â
.¥¥Â Ê
	Anulacion¥¥Ê Ô
)¥¥Ô 
;¥¥ Ò
}
µµ 
return
∂∂ 
new
∂∂ 
OperationResult
∂∂ *
(
∂∂* +!
OperationResultEnum
∂∂+ >
.
∂∂> ?
Success
∂∂? F
,
∂∂F G
$str
∂∂H c
,
∂∂c d
$str
∂∂e i
)
∂∂i j
;
∂∂j k
}
∑∑ 
catch
∏∏ 
(
∏∏ 
	Exception
∏∏ 
e
∏∏ 
)
∏∏ 
{
ππ 
throw
∫∫ 
new
∫∫ 
LogicaException
∫∫ )
(
∫∫) *
$str
∫∫* Z
,
∫∫Z [
e
∫∫\ ]
)
∫∫] ^
;
∫∫^ _
}
ªª 
}
ºº 	
public
ææ 
OperationResult
ææ #
ResolverResumenDiario
ææ 4
(
ææ4 5/
!EstablecimientoComercialExtendido
ææ5 V
sede
ææW [
,
ææ[ \
	Documento
ææ] f
[
ææf g
]
ææg h

documentos
ææi s
,
ææs t
bool
ææu y4
%cambiarEstadoItemDeAnuladoAAdicionadoææz ü
,ææü †
stringææ° ß!
mensajeErrorEnvioææ® π
,ææπ ∫
stringææª ¡*
mensajeErrorConsultaTicketææ¬ ‹
,ææ‹ ›
	ModoEnvioææﬁ Á
	modoEnvioææË Ò
)ææÒ Ú
{
øø 	
try
¿¿ 
{
¡¡ 
var
¬¬ $
documentoResumenDiario
¬¬ *
=
¬¬+ ,'
_generacionArchivosLogica
¬¬- F
.
¬¬F G"
ObtenerResumenDiario
¬¬G [
(
¬¬[ \

documentos
¬¬\ f
,
¬¬f g
sede
¬¬h l
,
¬¬l m4
%cambiarEstadoItemDeAnuladoAAdicionado¬¬n ì
)¬¬ì î
;¬¬î ï
var
√√ ,
documentoResumenDiarioResponse
√√ 2
=
√√3 4

RestHelper
√√5 ?
<
√√? @ 
ResumenDiarioNuevo
√√@ R
,
√√R S
DocumentoResponse
√√T e
>
√√e f
.
√√f g
Execute
√√g n
(
√√n o
$str√√o å
,√√å ç&
documentoResumenDiario√√é §
,√√§ •.
FacturacionElectronicaSettings√√¶ ƒ
.√√ƒ ≈
Default√√≈ Ã
.√√Ã Õ,
UrlApiFacturacionElectronica√√Õ È
)√√È Í
;√√Í Î
if
ƒƒ 
(
ƒƒ 
!
ƒƒ ,
documentoResumenDiarioResponse
ƒƒ 3
.
ƒƒ3 4
Exito
ƒƒ4 9
)
ƒƒ9 :
{
≈≈ 
throw
∆∆ 
new
∆∆ 
LogicaException
∆∆ -
(
∆∆- .,
documentoResumenDiarioResponse
∆∆. L
.
∆∆L M
MensajeError
∆∆M Y
)
∆∆Y Z
;
∆∆Z [
}
«« 
else
»» 
{
…… 
var
    
archivoCertificado
   *
=
  + , 
ObtenerCertificado
  - ?
(
  ? @$
documentoResumenDiario
  @ V
.
  V W
Emisor
  W ]
.
  ] ^
NroDocumento
  ^ j
)
  j k
;
  k l
var
ÀÀ 
firmadoResponse
ÀÀ '
=
ÀÀ( )
FirmarDocumento
ÀÀ* 9
(
ÀÀ9 :,
documentoResumenDiarioResponse
ÀÀ: X
,
ÀÀX Y 
archivoCertificado
ÀÀZ l
)
ÀÀl m
;
ÀÀm n
var
ÃÃ 
resultadoEnvio
ÃÃ &
=
ÃÃ' (!
EnviarResumenDiario
ÃÃ) <
(
ÃÃ< =$
documentoResumenDiario
ÃÃ= S
,
ÃÃS T
firmadoResponse
ÃÃU d
,
ÃÃd e

documentos
ÃÃf p
.
ÃÃp q
Select
ÃÃq w
(
ÃÃw x
d
ÃÃx y
=>
ÃÃz |
d
ÃÃ} ~
.
ÃÃ~ 
idÃÃ Å
)ÃÃÅ Ç
.ÃÃÇ É
ToArrayÃÃÉ ä
(ÃÃä ã
)ÃÃã å
,ÃÃå ç
	modoEnvioÃÃé ó
)ÃÃó ò
;ÃÃò ô
Util
ÕÕ 
.
ÕÕ -
ManejoEnLogicaResultadoSinExito
ÕÕ 8
(
ÕÕ8 9
resultadoEnvio
ÕÕ9 G
,
ÕÕG H
mensajeErrorEnvio
ÕÕI Z
)
ÕÕZ [
;
ÕÕ[ \
Thread
œœ 
.
œœ 
Sleep
œœ  
(
œœ  !,
FacturacionElectronicaSettings
œœ! ?
.
œœ? @
Default
œœ@ G
.
œœG H3
%TiempoEsperaParaConsultarEnvioResumen
œœH m
)
œœm n
;
œœn o
var
—— 
resultadoTicket
—— '
=
——( )
ConsultarTicket
——* 9
(
——9 :
sede
——: >
.
——> ? 
DocumentoIdentidad
——? Q
,
——Q R
new
——S V
EnvioSimplificado
——W h
(
——h i
)
——i j
{
——k l
Id
——m o
=
——p q
resultadoEnvio——r Ä
.——Ä Å
data——Å Ö
,——Ö Ü
NumeroTicket——á ì
=——î ï
(——ñ ó
string——ó ù
)——ù û
resultadoEnvio——û ¨
.——¨ ≠
information——≠ ∏
}——π ∫
)——∫ ª
;——ª º
Util
““ 
.
““ -
ManejoEnLogicaResultadoSinExito
““ 8
(
““8 9
resultadoTicket
““9 H
,
““H I(
mensajeErrorConsultaTicket
““J d
)
““d e
;
““e f
return
”” 
new
”” 
OperationResult
”” .
(
””. /!
OperationResultEnum
””/ B
.
””B C
Success
””C J
,
””J K
$str
””L g
,
””g h
$str
””i m
)
””m n
{
‘‘ 
information
’’ #
=
’’$ %
resultadoTicket
’’& 5
.
’’5 6
information
’’6 A
}
÷÷ 
;
÷÷ 
}
◊◊ 
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
new
€€ 
LogicaException
€€ )
(
€€) *
$str
€€* j
,
€€j k
e
€€l m
)
€€m n
;
€€n o
}
‹‹ 
}
›› 	
public
ﬂﬂ 
OperationResult
ﬂﬂ !
EnviarResumenDiario
ﬂﬂ 2
(
ﬂﬂ2 3 
ResumenDiarioNuevo
ﬂﬂ3 E 
resumenDiarioNuevo
ﬂﬂF X
,
ﬂﬂX Y
FirmadoResponse
ﬂﬂZ i
firmadoResponse
ﬂﬂj y
,
ﬂﬂy z
long
ﬂﬂ{ 
[ﬂﬂ Ä
]ﬂﬂÄ Å
idDocumentosﬂﬂÇ é
,ﬂﬂé è
	ModoEnvioﬂﬂê ô
	modoEnvioﬂﬂö £
)ﬂﬂ£ §
{
‡‡ 	
try
·· 
{
‚‚ 
OperationResult
„„ 
resultCrearEnvio
„„  0
=
„„1 2
null
„„3 7
;
„„7 8
try
‰‰ 
{
ÂÂ 
resultCrearEnvio
ÊÊ $
=
ÊÊ% &

CrearEnvio
ÊÊ' 1
(
ÊÊ1 2 
resumenDiarioNuevo
ÊÊ2 D
.
ÊÊD E
IdDocumento
ÊÊE P
.
ÊÊP Q
Split
ÊÊQ V
(
ÊÊV W
$char
ÊÊW Z
)
ÊÊZ [
[
ÊÊ[ \
$num
ÊÊ\ ]
]
ÊÊ] ^
,
ÊÊ^ _,
FacturacionElectronicaSettings
ÊÊ` ~
.
ÊÊ~ 
DefaultÊÊ Ü
.ÊÊÜ á&
TipoEnvioResumenDiarioÊÊá ù
,ÊÊù û
(ÊÊü †
intÊÊ† £
)ÊÊ£ §
EstadoEnvioÊÊ§ Ø
.ÊÊØ ∞
	PendienteÊÊ∞ π
,ÊÊπ ∫
$strÊÊª Ω
,ÊÊΩ æ
$strÊÊø ¡
,ÊÊ¡ ¬
$strÊÊ√ ≈
,ÊÊ≈ ∆
EncodingÊÊ« œ
.ÊÊœ –
UTF8ÊÊ– ‘
.ÊÊ‘ ’
GetBytesÊÊ’ ›
(ÊÊ› ﬁ
JsonConvertÊÊﬁ È
.ÊÊÈ Í
SerializeObjectÊÊÍ ˘
(ÊÊ˘ ˙
firmadoResponseÊÊ˙ â
)ÊÊâ ä
)ÊÊä ã
,ÊÊã å
nullÊÊç ë
,ÊÊë í
	modoEnvioÊÊì ú
)ÊÊú ù
;ÊÊù û
Util
ÁÁ 
.
ÁÁ -
ManejoEnLogicaResultadoSinExito
ÁÁ 8
(
ÁÁ8 9
resultCrearEnvio
ÁÁ9 I
,
ÁÁI J
$str
ÁÁK ~
+ÁÁ Ä"
resumenDiarioNuevoÁÁÅ ì
.ÁÁì î
IdDocumentoÁÁî ü
)ÁÁü †
;ÁÁ† °
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ  
)
ÈÈ  !
{
ÍÍ 
return
ÎÎ 
new
ÎÎ 
OperationResult
ÎÎ .
(
ÎÎ. /!
OperationResultEnum
ÎÎ/ B
.
ÎÎB C
Information
ÎÎC N
,
ÎÎN O
$str
ÎÎP f
,
ÎÎf g
$str
ÎÎh o
)
ÎÎo p
;
ÎÎp q
}
ÏÏ 
var
ÌÌ -
resultCrearEnvioDocumentoMasivo
ÌÌ 3
=
ÌÌ4 5'
CrearEnvioDocumentoMasivo
ÌÌ6 O
(
ÌÌO P
resultCrearEnvio
ÌÌP `
.
ÌÌ` a
data
ÌÌa e
,
ÌÌe f
idDocumentos
ÌÌg s
)
ÌÌs t
;
ÌÌt u
Util
ÓÓ 
.
ÓÓ -
ManejoEnLogicaResultadoSinExito
ÓÓ 4
(
ÓÓ4 5-
resultCrearEnvioDocumentoMasivo
ÓÓ5 T
,
ÓÓT U
$strÓÓV â
)ÓÓâ ä
;ÓÓä ã
var
ÔÔ 1
#resultActualizarDocumentosAEnviados
ÔÔ 7
=
ÔÔ8 9+
ActualizarDocumentosAEnviados
ÔÔ: W
(
ÔÔW X
idDocumentos
ÔÔX d
)
ÔÔd e
;
ÔÔe f
Util
 
.
 -
ManejoEnLogicaResultadoSinExito
 4
(
4 51
#resultActualizarDocumentosAEnviados
5 X
,
X Y
$strZ ì
)ì î
;î ï
var
ÚÚ $
enviarDocumentoRequest
ÚÚ *
=
ÚÚ+ ,
new
ÚÚ- 0$
EnviarDocumentoRequest
ÚÚ1 G
{
ÛÛ 
Ruc
ÙÙ 
=
ÙÙ  
resumenDiarioNuevo
ÙÙ ,
.
ÙÙ, -
Emisor
ÙÙ- 3
.
ÙÙ3 4
NroDocumento
ÙÙ4 @
,
ÙÙ@ A

UsuarioSol
ıı 
=
ıı  ,
FacturacionElectronicaSettings
ıı! ?
.
ıı? @
Default
ıı@ G
.
ııG H

UsuarioSol
ııH R
,
ııR S
ClaveSol
ˆˆ 
=
ˆˆ ,
FacturacionElectronicaSettings
ˆˆ =
.
ˆˆ= >
Default
ˆˆ> E
.
ˆˆE F
ClaveSol
ˆˆF N
,
ˆˆN O
EndPointUrl
˜˜ 
=
˜˜  !9
+DevolverUrlEnvioSunatFacturacionElectronica
˜˜" M
(
˜˜M N
)
˜˜N O
,
˜˜O P
IdDocumento
¯¯ 
=
¯¯  ! 
resumenDiarioNuevo
¯¯" 4
.
¯¯4 5
IdDocumento
¯¯5 @
,
¯¯@ A
TramaXmlFirmado
˘˘ #
=
˘˘$ %
firmadoResponse
˘˘& 5
.
˘˘5 6
TramaXmlFirmado
˘˘6 E
}
˙˙ 
;
˙˙ 
var
˚˚ #
enviarResumenResponse
˚˚ )
=
˚˚* +

RestHelper
˚˚, 6
<
˚˚6 7$
EnviarDocumentoRequest
˚˚7 M
,
˚˚M N#
EnviarResumenResponse
˚˚O d
>
˚˚d e
.
˚˚e f
Execute
˚˚f m
(
˚˚m n
$str˚˚n Å
,˚˚Å Ç&
enviarDocumentoRequest˚˚É ô
,˚˚ô ö.
FacturacionElectronicaSettings˚˚õ π
.˚˚π ∫
Default˚˚∫ ¡
.˚˚¡ ¬,
UrlApiFacturacionElectronica˚˚¬ ﬁ
)˚˚ﬁ ﬂ
;˚˚ﬂ ‡
if
¸¸ 
(
¸¸ 
!
¸¸ #
enviarResumenResponse
¸¸ *
.
¸¸* +
Exito
¸¸+ 0
)
¸¸0 1
{
˝˝ 
throw
˛˛ 
new
˛˛ 
LogicaException
˛˛ -
(
˛˛- .#
enviarResumenResponse
˛˛. C
.
˛˛C D
MensajeError
˛˛D P
)
˛˛P Q
;
˛˛Q R
}
ˇˇ 
var
ÄÄ 
envioAActualizar
ÄÄ $
=
ÄÄ% &
new
ÄÄ' *
Envio
ÄÄ+ 0
{
ÅÅ 
id
ÇÇ 
=
ÇÇ 
resultCrearEnvio
ÇÇ )
.
ÇÇ) *
data
ÇÇ* .
,
ÇÇ. /
estado
ÉÉ 
=
ÉÉ #
enviarResumenResponse
ÉÉ 2
.
ÉÉ2 3
Exito
ÉÉ3 8
?
ÉÉ9 :
(
ÉÉ; <
int
ÉÉ< ?
)
ÉÉ? @
EstadoEnvio
ÉÉ@ K
.
ÉÉK L
	Pendiente
ÉÉL U
:
ÉÉV W
(
ÉÉX Y
int
ÉÉY \
)
ÉÉ\ ]
EstadoEnvio
ÉÉ] h
.
ÉÉh i
	Rechazado
ÉÉi r
,
ÉÉr s
observacion
ÑÑ 
=
ÑÑ  !
string
ÑÑ" (
.
ÑÑ( )
IsNullOrEmpty
ÑÑ) 6
(
ÑÑ6 7#
enviarResumenResponse
ÑÑ7 L
.
ÑÑL M
MensajeError
ÑÑM Y
)
ÑÑY Z
?
ÑÑ[ \
$str
ÑÑ] _
:
ÑÑ` a#
enviarResumenResponse
ÑÑb w
.
ÑÑw x
MensajeErrorÑÑx Ñ
,ÑÑÑ Ö
numeroTicket
ÖÖ  
=
ÖÖ! "#
enviarResumenResponse
ÖÖ# 8
.
ÖÖ8 9
	NroTicket
ÖÖ9 B
}
ÜÜ 
;
ÜÜ 4
&ActualizarEstadoObservacionTicketEnvio
áá 6
(
áá6 7
envioAActualizar
áá7 G
)
ááG H
;
ááH I
OperationResult
éé 
result
éé  &
=
éé' (
new
éé) ,
OperationResult
éé- <
(
éé< =!
OperationResultEnum
éé= P
.
ééP Q
Success
ééQ X
,
ééX Y
$str
ééZ u
,
ééu v
$str
ééw {
)
éé{ |
{
èè 
data
êê 
=
êê 
resultCrearEnvio
êê +
.
êê+ ,
data
êê, 0
,
êê0 1
information
ëë 
=
ëë  !#
enviarResumenResponse
ëë" 7
.
ëë7 8
	NroTicket
ëë8 A
}
íí 
;
íí 
return
ìì 
result
ìì 
;
ìì 
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
e
ïï 
)
ïï 
{
ññ 
throw
óó 
new
óó 
LogicaException
óó )
(
óó) *
$str
óó* J
,
óóJ K
e
óóL M
)
óóM N
;
óóN O
}
òò 
}
ôô 	
public
üü 
OperationResult
üü 
EnvioNotasCredito
üü 0
(
üü0 1
LogEnvio
üü1 9
logEnvio
üü: B
)
üüB C
{
†† 	
try
°° 
{
¢¢ 
OperationResult
££ 
result
££  &
=
££' (
null
££) -
;
££- ./
!EstablecimientoComercialExtendido
§§ 1
sede
§§2 6
=
§§7 8
_sedeLogica
§§9 D
.
§§D E"
ObtenerSedeExtendida
§§E Y
(
§§Y Z
)
§§Z [
;
§§[ \
	Documento
•• 
[
•• 
]
•• #
notasCreditoPorEnviar
•• 1
=
••2 3:
,DevolverNotasCreditoIncluidoBinarioPorEnviar
••4 `
(
••` a
)
••a b
.
••b c
ToArray
••c j
(
••j k
)
••k l
;
••l m
if
¶¶ 
(
¶¶ #
notasCreditoPorEnviar
¶¶ )
.
¶¶) *
Length
¶¶* 0
>
¶¶1 2
$num
¶¶3 4
)
¶¶4 5
{
ßß 
result
®® 
=
®®  
ResolverEnvioNotas
®® /
(
®®/ 0#
notasCreditoPorEnviar
®®0 E
,
®®E F
logEnvio
®®G O
)
®®O P
;
®®P Q
}
©© 
var
™™ /
!documentosIndividualesInvalidados
™™ 5
=
™™6 7N
@ObtenerNotasCreditoInvalidadasAceptadasPeroSinComunicacionDeBaja
™™8 x
(
™™x y
)
™™y z
.
™™z {
ToArray™™{ Ç
(™™Ç É
)™™É Ñ
;™™Ñ Ö
if
´´ 
(
´´ /
!documentosIndividualesInvalidados
´´ 5
.
´´5 6
Count
´´6 ;
(
´´; <
)
´´< =
>
´´> ?
$num
´´@ A
)
´´A B
{
¨¨ 
var
≠≠ <
.resultadoResolverComunicacionBajaNoComunicadas
≠≠ F
=
≠≠G H&
ResolverComunicacionBaja
≠≠I a
(
≠≠a b
sede
≠≠b f
,
≠≠f g0
!documentosIndividualesInvalidados≠≠h â
,≠≠â ä
logEnvio≠≠ã ì
)≠≠ì î
;≠≠î ï
}
ÆÆ 
	Documento
ØØ 
[
ØØ 
]
ØØ #
documentosInvalidados
ØØ 1
=
ØØ2 3X
JObtenerNotasCreditoInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendiente
ØØ4 ~
(
ØØ~ 
)ØØ Ä
.ØØÄ Å
ToArrayØØÅ à
(ØØà â
)ØØâ ä
;ØØä ã
if
∞∞ 
(
∞∞ #
documentosInvalidados
∞∞ )
.
∞∞) *
Count
∞∞* /
(
∞∞/ 0
)
∞∞0 1
>
∞∞2 3
$num
∞∞4 5
)
∞∞5 6
{
±± 
	Documento
≤≤ 
[
≤≤ 
]
≤≤ *
documentosBoletasInvalidados
≤≤  <
=
≤≤= >#
documentosInvalidados
≤≤? T
.
≤≤T U
Where
≤≤U Z
(
≤≤Z [
d
≤≤[ \
=>
≤≤] _
d
≤≤` a
.
≤≤a b
serieComprobante
≤≤b r
.
≤≤r s
	Substring
≤≤s |
(
≤≤| }
$num
≤≤} ~
,
≤≤~ 
$num≤≤Ä Å
)≤≤Å Ç
==≤≤É Ö.
FacturacionElectronicaSettings≤≤Ü §
.≤≤§ •
Default≤≤• ¨
.≤≤¨ ≠7
'PrefijoSerieNotaCreditoNotaDebitoBoleta≤≤≠ ‘
)≤≤‘ ’
.≤≤’ ÷
ToArray≤≤÷ ›
(≤≤› ﬁ
)≤≤ﬁ ﬂ
;≤≤ﬂ ‡
List
≥≥ 
<
≥≥ 
DateTime
≥≥ !
>
≥≥! "1
#fechasDeEmisionDistintasInvalidadas
≥≥# F
=
≥≥G H*
documentosBoletasInvalidados
≥≥I e
.
≥≥e f
Select
≥≥f l
(
≥≥l m
d
≥≥m n
=>
≥≥o q
d
≥≥r s
.
≥≥s t
fechaEmision≥≥t Ä
.≥≥Ä Å
Date≥≥Å Ö
)≥≥Ö Ü
.≥≥Ü á
Distinct≥≥á è
(≥≥è ê
)≥≥ê ë
.≥≥ë í
ToList≥≥í ò
(≥≥ò ô
)≥≥ô ö
;≥≥ö õ
foreach
¥¥ 
(
¥¥ 
var
¥¥  
item
¥¥! %
in
¥¥& (1
#fechasDeEmisionDistintasInvalidadas
¥¥) L
)
¥¥L M
{
µµ 
try
∂∂ 
{
∑∑ 
var
∏∏ 
documentosDelDia
∏∏  0
=
∏∏1 2*
documentosBoletasInvalidados
∏∏3 O
.
∏∏O P
Where
∏∏P U
(
∏∏U V
d
∏∏V W
=>
∏∏X Z
d
∏∏[ \
.
∏∏\ ]
fechaEmision
∏∏] i
.
∏∏i j
Date
∏∏j n
==
∏∏o q
item
∏∏r v
)
∏∏v w
.
∏∏w x
ToArray
∏∏x 
(∏∏ Ä
)∏∏Ä Å
;∏∏Å Ç
var
ππ "
resultadoInvalidados
ππ  4
=
ππ5 6#
ResolverResumenDiario
ππ7 L
(
ππL M
sede
ππM Q
,
ππQ R
documentosDelDia
ππS c
,
ππc d
false
ππe j
,
ππj k
$strππl ¥
,ππ¥ µ
$strππ∂ â
,ππâ ä
	ModoEnvioππã î
.ππî ï
	Anulacionππï û
)ππû ü
;ππü †
Util
∫∫  
.
∫∫  !-
ManejoEnLogicaResultadoSinExito
∫∫! @
(
∫∫@ A"
resultadoInvalidados
∫∫A U
,
∫∫U V
$str∫∫W ™
)∫∫™ ´
;∫∫´ ¨
}
ªª 
catch
ºº 
(
ºº 
	Exception
ºº (
e
ºº) *
)
ºº* +
{
ΩΩ 
logEnvio
ææ $
.
ææ$ %
Error
ææ% *
.
ææ* +
Add
ææ+ .
(
ææ. /
string
ææ/ 5
.
ææ5 6
Join
ææ6 :
(
ææ: ;
$str
ææ; ?
,
ææ? @*
documentosBoletasInvalidados
ææA ]
.
ææ] ^
Where
ææ^ c
(
ææc d
d
ææd e
=>
ææf h
d
ææi j
.
ææj k
fechaEmision
ææk w
.
ææw x
Date
ææx |
==
ææ} 
itemææÄ Ñ
)ææÑ Ö
)ææÖ Ü
+ææá à
$strææâ é
+ææè ê
Utilææë ï
.ææï ñ!
InicioErrorStringææñ ß
(ææß ®
eææ® ©
)ææ© ™
)ææ™ ´
;ææ´ ¨
logEnvio
øø $
.
øø$ %
LogError
øø% -
.
øø- .
Add
øø. 1
(
øø1 2
string
øø2 8
.
øø8 9
Join
øø9 =
(
øø= >
$str
øø> B
,
øøB C*
documentosBoletasInvalidados
øøD `
.
øø` a
Where
øøa f
(
øøf g
d
øøg h
=>
øøi k
d
øøl m
.
øøm n
fechaEmision
øøn z
.
øøz {
Date
øø{ 
==øøÄ Ç
itemøøÉ á
)øøá à
)øøà â
+øøä ã
$strøøå ë
+øøí ì
Utiløøî ò
.øøò ô
SoloErrorStringøøô ®
(øø® ©
eøø© ™
)øø™ ´
)øø´ ¨
;øø¨ ≠
}
¿¿ 
}
¡¡ 
}
¬¬ 
if
√√ 
(
√√ #
notasCreditoPorEnviar
√√ )
.
√√) *
Length
√√* 0
==
√√1 3
$num
√√4 5
&&
√√6 8/
!documentosIndividualesInvalidados
√√9 Z
.
√√Z [
Count
√√[ `
(
√√` a
)
√√a b
==
√√c e
$num
√√f g
&&
√√h j$
documentosInvalidados√√k Ä
.√√Ä Å
Count√√Å Ü
(√√Ü á
)√√á à
==√√â ã
$num√√å ç
)√√ç é
{
ƒƒ 
logEnvio
≈≈ 
.
≈≈  
LogNoHayDocumentos
≈≈ /
(
≈≈/ 0
true
≈≈0 4
,
≈≈4 5
$str
≈≈6 Z
)
≈≈Z [
;
≈≈[ \
}
∆∆ 
}
«« 
catch
»» 
(
»» 
	Exception
»» 
e
»» 
)
»» 
{
…… 
logEnvio
   
.
   
Error
   
.
   
Add
   "
(
  " #
$str
  # N
+
  O P
$str
  Q V
+
  W X
Util
  Y ]
.
  ] ^
InicioErrorString
  ^ o
(
  o p
e
  p q
)
  q r
)
  r s
;
  s t
logEnvio
ÀÀ 
.
ÀÀ 
LogError
ÀÀ !
.
ÀÀ! "
Add
ÀÀ" %
(
ÀÀ% &
$str
ÀÀ& Q
+
ÀÀR S
$str
ÀÀT Y
+
ÀÀZ [
Util
ÀÀ\ `
.
ÀÀ` a
SoloErrorString
ÀÀa p
(
ÀÀp q
e
ÀÀq r
)
ÀÀr s
)
ÀÀs t
;
ÀÀt u
}
ÃÃ 
return
ÕÕ 
new
ÕÕ 
OperationResult
ÕÕ &
(
ÕÕ& '!
OperationResultEnum
ÕÕ' :
.
ÕÕ: ;
Success
ÕÕ; B
,
ÕÕB C
$str
ÕÕD _
,
ÕÕ_ `
$str
ÕÕa e
)
ÕÕe f
;
ÕÕf g
}
ŒŒ 	
public
–– 
OperationResult
–– 
EnvioNotasDebito
–– /
(
––/ 0
LogEnvio
––0 8
logEnvio
––9 A
)
––A B
{
—— 	
try
““ 
{
”” /
!EstablecimientoComercialExtendido
‘‘ 1
sede
‘‘2 6
=
‘‘7 8
_sedeLogica
‘‘9 D
.
‘‘D E"
ObtenerSedeExtendida
‘‘E Y
(
‘‘Y Z
)
‘‘Z [
;
‘‘[ \
	Documento
’’ 
[
’’ 
]
’’ "
notasDebitoPorEnviar
’’ 0
=
’’1 29
+DevolverNotasDebitoIncluidoBinarioPorEnviar
’’3 ^
(
’’^ _
)
’’_ `
.
’’` a
ToArray
’’a h
(
’’h i
)
’’i j
;
’’j k
if
÷÷ 
(
÷÷ "
notasDebitoPorEnviar
÷÷ (
.
÷÷( )
Length
÷÷) /
>
÷÷0 1
$num
÷÷2 3
)
÷÷3 4
{
◊◊  
ResolverEnvioNotas
ÿÿ &
(
ÿÿ& '"
notasDebitoPorEnviar
ÿÿ' ;
,
ÿÿ; <
logEnvio
ÿÿ= E
)
ÿÿE F
;
ÿÿF G
}
ŸŸ 
	Documento
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ 2
$documentosInvalidadosEnvioIndividual
⁄⁄ @
=
⁄⁄A BN
?ObtenerNotasDebitoInvalidadasAceptadasPeroSinComunicacionDeBaja⁄⁄C Ç
(⁄⁄Ç É
)⁄⁄É Ñ
.⁄⁄Ñ Ö
ToArray⁄⁄Ö å
(⁄⁄å ç
)⁄⁄ç é
;⁄⁄é è
if
€€ 
(
€€ 2
$documentosInvalidadosEnvioIndividual
€€ 8
.
€€8 9
Count
€€9 >
(
€€> ?
)
€€? @
>
€€A B
$num
€€C D
)
€€D E
{
‹‹ &
ResolverComunicacionBaja
›› ,
(
››, -
sede
››- 1
,
››1 22
$documentosInvalidadosEnvioIndividual
››3 W
,
››W X
logEnvio
››Y a
)
››a b
;
››b c
}
ﬁﬁ 
	Documento
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ /
!documentosInvalidadosEnvioResumen
ﬂﬂ =
=
ﬂﬂ> ?X
IObtenerNotasDebitoInvalidadasEnviadasAceptadasUnaSolaVezSinEnvioPendienteﬂﬂ@ â
(ﬂﬂâ ä
)ﬂﬂä ã
.ﬂﬂã å
ToArrayﬂﬂå ì
(ﬂﬂì î
)ﬂﬂî ï
;ﬂﬂï ñ
if
‡‡ 
(
‡‡ /
!documentosInvalidadosEnvioResumen
‡‡ 5
.
‡‡5 6
Count
‡‡6 ;
(
‡‡; <
)
‡‡< =
>
‡‡> ?
$num
‡‡@ A
)
‡‡A B
{
·· 
	Documento
‚‚ 
[
‚‚ 
]
‚‚ *
documentosBoletasInvalidados
‚‚  <
=
‚‚= >/
!documentosInvalidadosEnvioResumen
‚‚? `
.
‚‚` a
Where
‚‚a f
(
‚‚f g
d
‚‚g h
=>
‚‚i k
d
‚‚l m
.
‚‚m n
serieComprobante
‚‚n ~
.
‚‚~ 
	Substring‚‚ à
(‚‚à â
$num‚‚â ä
,‚‚ä ã
$num‚‚å ç
)‚‚ç é
==‚‚è ë.
FacturacionElectronicaSettings‚‚í ∞
.‚‚∞ ±
Default‚‚± ∏
.‚‚∏ π7
'PrefijoSerieNotaCreditoNotaDebitoBoleta‚‚π ‡
)‚‚‡ ·
.‚‚· ‚
ToArray‚‚‚ È
(‚‚È Í
)‚‚Í Î
;‚‚Î Ï
List
„„ 
<
„„ 
DateTime
„„ !
>
„„! "1
#fechasDeEmisionDistintasInvalidadas
„„# F
=
„„G H*
documentosBoletasInvalidados
„„I e
.
„„e f
Select
„„f l
(
„„l m
d
„„m n
=>
„„o q
d
„„r s
.
„„s t
fechaEmision„„t Ä
.„„Ä Å
Date„„Å Ö
)„„Ö Ü
.„„Ü á
Distinct„„á è
(„„è ê
)„„ê ë
.„„ë í
ToList„„í ò
(„„ò ô
)„„ô ö
;„„ö õ
foreach
‰‰ 
(
‰‰ 
var
‰‰  
item
‰‰! %
in
‰‰& (1
#fechasDeEmisionDistintasInvalidadas
‰‰) L
)
‰‰L M
{
ÂÂ 
try
ÊÊ 
{
ÁÁ 
var
ËË 
documentosDelDia
ËË  0
=
ËË1 2*
documentosBoletasInvalidados
ËË3 O
.
ËËO P
Where
ËËP U
(
ËËU V
d
ËËV W
=>
ËËX Z
d
ËË[ \
.
ËË\ ]
fechaEmision
ËË] i
.
ËËi j
Date
ËËj n
==
ËËo q
item
ËËr v
)
ËËv w
.
ËËw x
ToArray
ËËx 
(ËË Ä
)ËËÄ Å
;ËËÅ Ç
var
ÈÈ "
resultadoInvalidados
ÈÈ  4
=
ÈÈ5 6#
ResolverResumenDiario
ÈÈ7 L
(
ÈÈL M
sede
ÈÈM Q
,
ÈÈQ R
documentosDelDia
ÈÈS c
,
ÈÈc d
false
ÈÈe j
,
ÈÈj k
$strÈÈl ¥
,ÈÈ¥ µ
$strÈÈ∂ â
,ÈÈâ ä
	ModoEnvioÈÈã î
.ÈÈî ï
	AnulacionÈÈï û
)ÈÈû ü
;ÈÈü †
Util
ÍÍ  
.
ÍÍ  !-
ManejoEnLogicaResultadoSinExito
ÍÍ! @
(
ÍÍ@ A"
resultadoInvalidados
ÍÍA U
,
ÍÍU V
$strÍÍW ™
)ÍÍ™ ´
;ÍÍ´ ¨
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ (
e
ÏÏ) *
)
ÏÏ* +
{
ÌÌ 
logEnvio
ÓÓ $
.
ÓÓ$ %
Error
ÓÓ% *
.
ÓÓ* +
Add
ÓÓ+ .
(
ÓÓ. /
string
ÓÓ/ 5
.
ÓÓ5 6
Join
ÓÓ6 :
(
ÓÓ: ;
$str
ÓÓ; ?
,
ÓÓ? @*
documentosBoletasInvalidados
ÓÓA ]
.
ÓÓ] ^
Where
ÓÓ^ c
(
ÓÓc d
d
ÓÓd e
=>
ÓÓf h
d
ÓÓi j
.
ÓÓj k
fechaEmision
ÓÓk w
.
ÓÓw x
Date
ÓÓx |
==
ÓÓ} 
itemÓÓÄ Ñ
)ÓÓÑ Ö
)ÓÓÖ Ü
+ÓÓá à
$strÓÓâ é
+ÓÓè ê
UtilÓÓë ï
.ÓÓï ñ!
InicioErrorStringÓÓñ ß
(ÓÓß ®
eÓÓ® ©
)ÓÓ© ™
)ÓÓ™ ´
;ÓÓ´ ¨
logEnvio
ÔÔ $
.
ÔÔ$ %
LogError
ÔÔ% -
.
ÔÔ- .
Add
ÔÔ. 1
(
ÔÔ1 2
string
ÔÔ2 8
.
ÔÔ8 9
Join
ÔÔ9 =
(
ÔÔ= >
$str
ÔÔ> B
,
ÔÔB C*
documentosBoletasInvalidados
ÔÔD `
.
ÔÔ` a
Where
ÔÔa f
(
ÔÔf g
d
ÔÔg h
=>
ÔÔi k
d
ÔÔl m
.
ÔÔm n
fechaEmision
ÔÔn z
.
ÔÔz {
Date
ÔÔ{ 
==ÔÔÄ Ç
itemÔÔÉ á
)ÔÔá à
)ÔÔà â
+ÔÔä ã
$strÔÔå ë
+ÔÔí ì
UtilÔÔî ò
.ÔÔò ô
SoloErrorStringÔÔô ®
(ÔÔ® ©
eÔÔ© ™
)ÔÔ™ ´
)ÔÔ´ ¨
;ÔÔ¨ ≠
}
 
}
ÒÒ 
}
ÚÚ 
if
ÛÛ 
(
ÛÛ "
notasDebitoPorEnviar
ÛÛ (
.
ÛÛ( )
Length
ÛÛ) /
==
ÛÛ0 2
$num
ÛÛ3 4
&&
ÛÛ5 72
$documentosInvalidadosEnvioIndividual
ÛÛ8 \
.
ÛÛ\ ]
Count
ÛÛ] b
(
ÛÛb c
)
ÛÛc d
==
ÛÛe g
$num
ÛÛh i
&&
ÛÛj l0
!documentosInvalidadosEnvioResumenÛÛm é
.ÛÛé è
CountÛÛè î
(ÛÛî ï
)ÛÛï ñ
==ÛÛó ô
$numÛÛö õ
)ÛÛõ ú
{
ÙÙ 
logEnvio
ıı 
.
ıı  
LogNoHayDocumentos
ıı /
(
ıı/ 0
true
ıı0 4
,
ıı4 5
$str
ıı6 Y
)
ııY Z
;
ııZ [
}
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
e
¯¯ 
)
¯¯ 
{
˘˘ 
logEnvio
˙˙ 
.
˙˙ 
Error
˙˙ 
.
˙˙ 
Add
˙˙ "
(
˙˙" #
$str
˙˙# C
+
˙˙D E
$str
˙˙F K
+
˙˙L M
Util
˙˙N R
.
˙˙R S
InicioErrorString
˙˙S d
(
˙˙d e
e
˙˙e f
)
˙˙f g
)
˙˙g h
;
˙˙h i
logEnvio
˚˚ 
.
˚˚ 
LogError
˚˚ !
.
˚˚! "
Add
˚˚" %
(
˚˚% &
$str
˚˚& F
+
˚˚G H
$str
˚˚I N
+
˚˚O P
Util
˚˚Q U
.
˚˚U V
SoloErrorString
˚˚V e
(
˚˚e f
e
˚˚f g
)
˚˚g h
)
˚˚h i
;
˚˚i j
}
¸¸ 
return
˝˝ 
new
˝˝ 
OperationResult
˝˝ &
(
˝˝& '!
OperationResultEnum
˝˝' :
.
˝˝: ;
Success
˝˝; B
,
˝˝B C
$str
˝˝D _
,
˝˝_ `
$str
˝˝a e
)
˝˝e f
;
˝˝f g
}
˛˛ 	
public
ÄÄ 
OperationResult
ÄÄ  
ResolverEnvioNotas
ÄÄ 1
(
ÄÄ1 2
	Documento
ÄÄ2 ;
[
ÄÄ; <
]
ÄÄ< =

documentos
ÄÄ> H
,
ÄÄH I
LogEnvio
ÄÄJ R
logEnvio
ÄÄS [
)
ÄÄ[ \
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
OperationResult
ÑÑ 
result
ÑÑ  &
=
ÑÑ' (
null
ÑÑ) -
;
ÑÑ- ./
!EstablecimientoComercialExtendido
ÖÖ 1
sede
ÖÖ2 6
=
ÖÖ7 8
_sedeLogica
ÖÖ9 D
.
ÖÖD E"
ObtenerSedeExtendida
ÖÖE Y
(
ÖÖY Z
)
ÖÖZ [
;
ÖÖ[ \
List
ÜÜ 
<
ÜÜ 
	Documento
ÜÜ 
>
ÜÜ &
documentosNotasDeBoletas
ÜÜ  8
=
ÜÜ9 :
new
ÜÜ; >
List
ÜÜ? C
<
ÜÜC D
	Documento
ÜÜD M
>
ÜÜM N
(
ÜÜN O
)
ÜÜO P
;
ÜÜP Q
List
áá 
<
áá 
	Documento
áá 
>
áá '
documentosNotasDeFacturas
áá  9
=
áá: ;
new
áá< ?
List
áá@ D
<
ááD E
	Documento
ááE N
>
ááN O
(
ááO P
)
ááP Q
;
ááQ R
List
àà 
<
àà 
	Documento
àà 
>
àà 2
$documentosNotasDeFacturasAdicionadas
àà  D
=
ààE F
new
ààG J
List
ààK O
<
ààO P
	Documento
ààP Y
>
ààY Z
(
ààZ [
)
àà[ \
;
àà\ ]
List
ââ 
<
ââ 
	Documento
ââ 
>
ââ /
!documentosNotasDeFacturasAnuladas
ââ  A
=
ââB C
new
ââD G
List
ââH L
<
ââL M
	Documento
ââM V
>
ââV W
(
ââW X
)
ââX Y
;
ââY Z'
documentosNotasDeFacturas
ãã )
.
ãã) *
AddRange
ãã* 2
(
ãã2 3

documentos
ãã3 =
.
ãã= >
Where
ãã> C
(
ããC D
d
ããD E
=>
ããF H
d
ããI J
.
ããJ K
serieComprobante
ããK [
.
ãã[ \
	Substring
ãã\ e
(
ããe f
$num
ããf g
,
ããg h
$num
ããi j
)
ããj k
==
ããl n-
FacturacionElectronicaSettingsãão ç
.ããç é
Defaultããé ï
.ããï ñ8
(PrefijoSerieNotaCreditoNotaDebitoFacturaããñ æ
)ããæ ø
)ããø ¿
;ãã¿ ¡&
documentosNotasDeBoletas
åå (
.
åå( )
AddRange
åå) 1
(
åå1 2

documentos
åå2 <
.
åå< =
Where
åå= B
(
ååB C
d
ååC D
=>
ååE G
d
ååH I
.
ååI J
serieComprobante
ååJ Z
.
ååZ [
	Substring
åå[ d
(
ååd e
$num
ååe f
,
ååf g
$num
ååh i
)
ååi j
==
ååk m-
FacturacionElectronicaSettingsåån å
.ååå ç
Defaultååç î
.ååî ï7
'PrefijoSerieNotaCreditoNotaDebitoBoletaååï º
)ååº Ω
)ååΩ æ
;ååæ ø2
$documentosNotasDeFacturasAdicionadas
éé 4
=
éé5 6'
documentosNotasDeFacturas
éé7 P
.
ééP Q
Where
ééQ V
(
ééV W
d
ééW X
=>
ééY [
d
éé\ ]
.
éé] ^
estado
éé^ d
==
éée g
(
ééh i
int
ééi l
)
éél m)
EstadoDocumentoElectronicoéém á
.ééá à

Adicionadoééà í
)ééí ì
.ééì î
ToListééî ö
(ééö õ
)ééõ ú
;ééú ù/
!documentosNotasDeFacturasAnuladas
èè 1
=
èè2 3'
documentosNotasDeFacturas
èè4 M
.
èèM N
Where
èèN S
(
èèS T
d
èèT U
=>
èèV X
d
èèY Z
.
èèZ [
estado
èè[ a
==
èèb d
(
èèe f
int
èèf i
)
èèi j)
EstadoDocumentoElectronicoèèj Ñ
.èèÑ Ö
AnuladoèèÖ å
)èèå ç
.èèç é
ToListèèé î
(èèî ï
)èèï ñ
;èèñ ó
if
êê 
(
êê 2
$documentosNotasDeFacturasAdicionadas
êê 8
.
êê8 9
Count
êê9 >
>
êê? @
$num
êêA B
)
êêB C
{
ëë 
var
ìì :
,resultEnvioDocumentoNotasFacturasAdicionadas
ìì D
=
ììE F%
ResolverEnvioIndividual
ììG ^
(
ìì^ _3
$documentosNotasDeFacturasAdicionadasìì_ É
.ììÉ Ñ
ToArrayììÑ ã
(ììã å
)ììå ç
,ììç é
logEnvioììè ó
)ììó ò
;ììò ô
}
îî 
if
ïï 
(
ïï /
!documentosNotasDeFacturasAnuladas
ïï 5
.
ïï5 6
Count
ïï6 ;
>
ïï< =
$num
ïï> ?
)
ïï? @
{
ññ 
var
óó .
 resultadoResolverEnvioIndividual
óó 8
=
óó9 :%
ResolverEnvioIndividual
óó; R
(
óóR S/
!documentosNotasDeFacturasAnuladas
óóS t
.
óót u
ToArray
óóu |
(
óó| }
)
óó} ~
,
óó~ 
logEnvioóóÄ à
)óóà â
;óóâ ä
List
òò 
<
òò 
	Documento
òò "
>
òò" #.
 documentosAceptadosParaDarDeBaja
òò$ D
=
òòE F
ObtenerDocumentos
òòG X
(
òòX Y

documentos
òòY c
.
òòc d
Select
òòd j
(
òòj k
d
òòk l
=>
òòm o
d
òòp q
.
òòq r
id
òòr t
)
òòt u
.
òòu v
ToList
òòv |
(
òò| }
)
òò} ~
)
òò~ 
.òò Ä
WhereòòÄ Ö
(òòÖ Ü
dòòÜ á
=>òòà ä
dòòã å
.òòå ç
EnvioDocumentoòòç õ
.òòõ ú
Countòòú °
(òò° ¢
edòò¢ §
=>òò• ß
edòò® ™
.òò™ ´
Envioòò´ ∞
.òò∞ ±
estadoòò± ∑
==òò∏ ∫
(òòª º
intòòº ø
)òòø ¿
EstadoEnvioòò¿ À
.òòÀ Ã
AceptadoòòÃ ‘
||òò’ ◊
edòòÿ ⁄
.òò⁄ €
Envioòò€ ‡
.òò‡ ·
estadoòò· Á
==òòË Í
(òòÎ Ï
intòòÏ Ô
)òòÔ 
EstadoEnvioòò ˚
.òò˚ ¸(
AceptadoConObservacionesòò¸ î
)òòî ï
>òòñ ó
$numòòò ô
)òòô ö
.òòö õ
ToListòòõ °
(òò° ¢
)òò¢ £
;òò£ §
if
ôô 
(
ôô .
 documentosAceptadosParaDarDeBaja
ôô 8
.
ôô8 9
Count
ôô9 >
(
ôô> ?
)
ôô? @
>
ôôA B
$num
ôôC D
)
ôôD E
{
öö 
List
õõ 
<
õõ 
DateTime
õõ %
>
õõ% &&
fechasDeEmisionDistintas
õõ' ?
=
õõ@ A.
 documentosAceptadosParaDarDeBaja
õõB b
.
õõb c
Select
õõc i
(
õõi j
d
õõj k
=>
õõl n
d
õõo p
.
õõp q
fechaEmision
õõq }
.
õõ} ~
Dateõõ~ Ç
)õõÇ É
.õõÉ Ñ
DistinctõõÑ å
(õõå ç
)õõç é
.õõé è
ToListõõè ï
(õõï ñ
)õõñ ó
;õõó ò
foreach
úú 
(
úú  !
var
úú! $
item
úú% )
in
úú* ,&
fechasDeEmisionDistintas
úú- E
)
úúE F
{
ùù 
var
üü :
,resultadoEnvioDocumentoNotasFacturasAnuladas
üü  L
=
üüM N&
ResolverComunicacionBaja
üüO g
(
üüg h
sede
üüh l
,
üül m/
 documentosAceptadosParaDarDeBajaüün é
.üüé è
Whereüüè î
(üüî ï
düüï ñ
=>üüó ô
düüö õ
.üüõ ú
fechaEmisionüüú ®
.üü® ©
Dateüü© ≠
==üüÆ ∞
itemüü± µ
)üüµ ∂
.üü∂ ∑
ToArrayüü∑ æ
(üüæ ø
)üüø ¿
,üü¿ ¡
logEnvioüü¬  
)üü  À
;üüÀ Ã
}
†† 
}
°° 
}
¢¢ 
if
§§ 
(
§§ &
documentosNotasDeBoletas
§§ ,
.
§§, -
Count
§§- 2
(
§§2 3
)
§§3 4
>
§§5 6
$num
§§7 8
)
§§8 9
{
•• 
List
¶¶ 
<
¶¶ 
DateTime
¶¶ !
>
¶¶! "&
fechasDeEmisionDistintas
¶¶# ;
=
¶¶< =&
documentosNotasDeBoletas
¶¶> V
.
¶¶V W
Select
¶¶W ]
(
¶¶] ^
d
¶¶^ _
=>
¶¶` b
d
¶¶c d
.
¶¶d e
fechaEmision
¶¶e q
.
¶¶q r
Date
¶¶r v
)
¶¶v w
.
¶¶w x
Distinct¶¶x Ä
(¶¶Ä Å
)¶¶Å Ç
.¶¶Ç É
ToList¶¶É â
(¶¶â ä
)¶¶ä ã
;¶¶ã å
foreach
ßß 
(
ßß 
var
ßß  
item
ßß! %
in
ßß& (&
fechasDeEmisionDistintas
ßß) A
)
ßßA B
{
®® 
var
©© 1
#resultadoEnvioDocumentoNotasBoletas
©© ?
=
©©@ A)
ResolverResumenDiarioPorDia
©©B ]
(
©©] ^
sede
©©^ b
,
©©b c&
documentosNotasDeBoletas
©©d |
.
©©| }
Where©©} Ç
(©©Ç É
d©©É Ñ
=>©©Ö á
d©©à â
.©©â ä
fechaEmision©©ä ñ
.©©ñ ó
Date©©ó õ
==©©ú û
item©©ü £
)©©£ §
.©©§ •
ToArray©©• ¨
(©©¨ ≠
)©©≠ Æ
,©©Æ Ø
logEnvio©©∞ ∏
)©©∏ π
;©©π ∫
Util
™™ 
.
™™ -
ManejoEnLogicaResultadoSinExito
™™ <
(
™™< =1
#resultadoEnvioDocumentoNotasBoletas
™™= `
,
™™` a
$str™™b ë
)™™ë í
;™™í ì
}
´´ 
}
¨¨ 
result
ÆÆ 
=
ÆÆ 
new
ÆÆ 
OperationResult
ÆÆ ,
(
ÆÆ, -!
OperationResultEnum
ÆÆ- @
.
ÆÆ@ A
Success
ÆÆA H
,
ÆÆH I
$str
ÆÆJ e
,
ÆÆe f
$str
ÆÆg k
)
ÆÆk l
;
ÆÆl m
return
ØØ 
result
ØØ 
;
ØØ 
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
e
±± 
)
±± 
{
≤≤ 
throw
≥≥ 
new
≥≥ 
LogicaException
≥≥ )
(
≥≥) *
$str
≥≥* O
,
≥≥O P
e
≥≥Q R
)
≥≥R S
;
≥≥S T
}
¥¥ 
}
µµ 	
public
ªª 
OperationResult
ªª %
EnvioComunicacionesBaja
ªª 6
(
ªª6 7
LogEnvio
ªª7 ?
logEnvio
ªª@ H
)
ªªH I
{
ºº 	
try
ΩΩ 
{
ææ /
!EstablecimientoComercialExtendido
øø 1
sede
øø2 6
=
øø7 8
_sedeLogica
øø9 D
.
øøD E"
ObtenerSedeExtendida
øøE Y
(
øøY Z
)
øøZ [
;
øø[ \
var
¿¿ (
noHayComunicacionesAEnviar
¿¿ .
=
¿¿/ 0
!
¿¿1 2.
 HayFacturasInvalidadasNoEnviadas
¿¿2 R
(
¿¿R S
)
¿¿S T
;
¿¿T U
while
¡¡ 
(
¡¡ .
 HayFacturasInvalidadasNoEnviadas
¡¡ 7
(
¡¡7 8
)
¡¡8 9
)
¡¡9 :
{
¬¬ 
var
√√ 

documentos
√√ "
=
√√# $9
+DevolverFacturasInvalidadasNoEnviadasPorDia
√√% P
(
√√P Q
)
√√Q R
.
√√R S
ToArray
√√S Z
(
√√Z [
)
√√[ \
;
√√\ ]
var
ƒƒ .
 resultadoResolverEnvioIndividual
ƒƒ 8
=
ƒƒ9 :%
ResolverEnvioIndividual
ƒƒ; R
(
ƒƒR S

documentos
ƒƒS ]
,
ƒƒ] ^
logEnvio
ƒƒ_ g
)
ƒƒg h
;
ƒƒh i
var
≈≈ .
 documentosAceptadosParaDarDeBaja
≈≈ 8
=
≈≈9 :
ObtenerDocumentos
≈≈; L
(
≈≈L M

documentos
≈≈M W
.
≈≈W X
Select
≈≈X ^
(
≈≈^ _
d
≈≈_ `
=>
≈≈a c
d
≈≈d e
.
≈≈e f
id
≈≈f h
)
≈≈h i
.
≈≈i j
ToList
≈≈j p
(
≈≈p q
)
≈≈q r
)
≈≈r s
.
≈≈s t
Where
≈≈t y
(
≈≈y z
d
≈≈z {
=>
≈≈| ~
d≈≈ Ä
.≈≈Ä Å
EnvioDocumento≈≈Å è
.≈≈è ê
Count≈≈ê ï
(≈≈ï ñ
ed≈≈ñ ò
=>≈≈ô õ
ed≈≈ú û
.≈≈û ü
Envio≈≈ü §
.≈≈§ •
estado≈≈• ´
==≈≈¨ Æ
(≈≈Ø ∞
int≈≈∞ ≥
)≈≈≥ ¥
EstadoEnvio≈≈¥ ø
.≈≈ø ¿
Aceptado≈≈¿ »
||≈≈… À
ed≈≈Ã Œ
.≈≈Œ œ
Envio≈≈œ ‘
.≈≈‘ ’
estado≈≈’ €
==≈≈‹ ﬁ
(≈≈ﬂ ‡
int≈≈‡ „
)≈≈„ ‰
EstadoEnvio≈≈‰ Ô
.≈≈Ô (
AceptadoConObservaciones≈≈ à
)≈≈à â
>≈≈ä ã
$num≈≈å ç
)≈≈ç é
.≈≈é è
ToList≈≈è ï
(≈≈ï ñ
)≈≈ñ ó
;≈≈ó ò
if
∆∆ 
(
∆∆ .
 documentosAceptadosParaDarDeBaja
∆∆ 8
.
∆∆8 9
Count
∆∆9 >
(
∆∆> ?
)
∆∆? @
>
∆∆A B
$num
∆∆C D
)
∆∆D E
{
«« 
var
»» /
!resultadoResolverComunicacionBaja
»» =
=
»»> ?&
ResolverComunicacionBaja
»»@ X
(
»»X Y
sede
»»Y ]
,
»»] ^.
 documentosAceptadosParaDarDeBaja
»»_ 
.»» Ä
ToArray»»Ä á
(»»á à
)»»à â
,»»â ä
logEnvio»»ã ì
)»»ì î
;»»î ï
}
…… 
}
   
var
ÃÃ #
documentosInvalidados
ÃÃ )
=
ÃÃ* +J
<ObtenerFacturasInvalidadasAceptadasPeroSinComunicacionDeBaja
ÃÃ, h
(
ÃÃh i
)
ÃÃi j
.
ÃÃj k
ToArray
ÃÃk r
(
ÃÃr s
)
ÃÃs t
;
ÃÃt u
if
ÕÕ 
(
ÕÕ #
documentosInvalidados
ÕÕ )
.
ÕÕ) *
Length
ÕÕ* 0
>
ÕÕ1 2
$num
ÕÕ3 4
)
ÕÕ4 5
{
ŒŒ 
var
œœ &
fechasDeEmisionDistintas
œœ 0
=
œœ1 2#
documentosInvalidados
œœ3 H
.
œœH I
Select
œœI O
(
œœO P
d
œœP Q
=>
œœR T
d
œœU V
.
œœV W
fechaEmision
œœW c
.
œœc d
Date
œœd h
)
œœh i
.
œœi j
Distinct
œœj r
(
œœr s
)
œœs t
.
œœt u
ToList
œœu {
(
œœ{ |
)
œœ| }
;
œœ} ~
foreach
–– 
(
–– 
var
––  
item
––! %
in
––& (&
fechasDeEmisionDistintas
––) A
)
––A B
{
—— 
var
““  
documentosPorFecha
““ .
=
““/ 0#
documentosInvalidados
““1 F
.
““F G
Where
““G L
(
““L M
d
““M N
=>
““O Q
d
““R S
.
““S T
fechaEmision
““T `
.
““` a
Date
““a e
==
““f h
item
““i m
)
““m n
.
““n o
ToArray
““o v
(
““v w
)
““w x
;
““x y
var
”” "
resultadoInvalidados
”” 0
=
””1 2&
ResolverComunicacionBaja
””3 K
(
””K L
sede
””L P
,
””P Q 
documentosPorFecha
””R d
,
””d e
logEnvio
””f n
)
””n o
;
””o p
}
‘‘ 
}
’’ 
if
÷÷ 
(
÷÷ 
logEnvio
÷÷ 
.
÷÷ 
NoHayDocumentos
÷÷ ,
&&
÷÷- /(
noHayComunicacionesAEnviar
÷÷0 J
&&
÷÷K M#
documentosInvalidados
÷÷N c
.
÷÷c d
Length
÷÷d j
==
÷÷k m
$num
÷÷n o
)
÷÷o p
{
◊◊ 
logEnvio
ÿÿ 
.
ÿÿ  
LogNoHayDocumentos
ÿÿ /
(
ÿÿ/ 0
true
ÿÿ0 4
,
ÿÿ4 5
$str
ÿÿ6 R
)
ÿÿR S
;
ÿÿS T
}
ŸŸ 
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
logEnvio
›› 
.
›› 
Error
›› 
.
›› 
Add
›› "
(
››" #
$str
››# Z
+
››[ \
$str
››] `
+
››a b
Util
››c g
.
››g h
InicioErrorString
››h y
(
››y z
e
››z {
)
››{ |
)
››| }
;
››} ~
logEnvio
ﬁﬁ 
.
ﬁﬁ 
LogError
ﬁﬁ !
.
ﬁﬁ! "
Add
ﬁﬁ" %
(
ﬁﬁ% &
$str
ﬁﬁ& ]
+
ﬁﬁ^ _
$str
ﬁﬁ` e
+
ﬁﬁf g
Util
ﬁﬁh l
.
ﬁﬁl m
SoloErrorString
ﬁﬁm |
(
ﬁﬁ| }
e
ﬁﬁ} ~
)
ﬁﬁ~ 
)ﬁﬁ Ä
;ﬁﬁÄ Å
}
ﬂﬂ 
return
‡‡ 
new
‡‡ 
OperationResult
‡‡ &
(
‡‡& '!
OperationResultEnum
‡‡' :
.
‡‡: ;
Success
‡‡; B
,
‡‡B C
$str
‡‡D _
,
‡‡_ `
$str
‡‡a e
)
‡‡e f
;
‡‡f g
}
·· 	
public
„„ 
OperationResult
„„ &
ResolverComunicacionBaja
„„ 7
(
„„7 8/
!EstablecimientoComercialExtendido
„„8 Y
sede
„„Z ^
,
„„^ _
	Documento
„„` i
[
„„i j
]
„„j k

documentos
„„l v
,
„„v w
LogEnvio„„x Ä
logEnvio„„Å â
)„„â ä
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
ComunicacionBaja
ÁÁ  
comunicacionBaja
ÁÁ! 1
=
ÁÁ2 3'
_generacionArchivosLogica
ÁÁ4 M
.
ÁÁM N%
ObtenerComunicacionBaja
ÁÁN e
(
ÁÁe f

documentos
ÁÁf p
,
ÁÁp q
sede
ÁÁr v
)
ÁÁv w
;
ÁÁw x
var
ËË 
documentoResponse
ËË %
=
ËË& '

RestHelper
ËË( 2
<
ËË2 3
ComunicacionBaja
ËË3 C
,
ËËC D
DocumentoResponse
ËËE V
>
ËËV W
.
ËËW X
Execute
ËËX _
(
ËË_ `
$str
ËË` }
,
ËË} ~
comunicacionBajaËË è
,ËËè ê.
FacturacionElectronicaSettingsËËë Ø
.ËËØ ∞
DefaultËË∞ ∑
.ËË∑ ∏,
UrlApiFacturacionElectronicaËË∏ ‘
)ËË‘ ’
;ËË’ ÷
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
documentoResponse
ÈÈ &
.
ÈÈ& '
Exito
ÈÈ' ,
)
ÈÈ, -
{
ÍÍ 
throw
ÎÎ 
new
ÎÎ 
LogicaException
ÎÎ -
(
ÎÎ- .
documentoResponse
ÎÎ. ?
.
ÎÎ? @
MensajeError
ÎÎ@ L
)
ÎÎL M
;
ÎÎM N
}
ÏÏ 
else
ÌÌ 
{
ÓÓ 
var
ÔÔ  
archivoCertificado
ÔÔ *
=
ÔÔ+ , 
ObtenerCertificado
ÔÔ- ?
(
ÔÔ? @
sede
ÔÔ@ D
.
ÔÔD E 
DocumentoIdentidad
ÔÔE W
)
ÔÔW X
;
ÔÔX Y
var
 
firmadoResponse
 '
=
( )
FirmarDocumento
* 9
(
9 :
documentoResponse
: K
,
K L 
archivoCertificado
M _
)
_ `
;
` a
var
ÒÒ 
resultadoEnvio
ÒÒ &
=
ÒÒ' ($
EnviarComunicacionBaja
ÒÒ) ?
(
ÒÒ? @
sede
ÒÒ@ D
,
ÒÒD E
comunicacionBaja
ÒÒF V
,
ÒÒV W
firmadoResponse
ÒÒX g
,
ÒÒg h

documentos
ÒÒi s
.
ÒÒs t
Select
ÒÒt z
(
ÒÒz {
d
ÒÒ{ |
=>
ÒÒ} 
dÒÒÄ Å
.ÒÒÅ Ç
idÒÒÇ Ñ
)ÒÒÑ Ö
.ÒÒÖ Ü
ToArrayÒÒÜ ç
(ÒÒç é
)ÒÒé è
)ÒÒè ê
;ÒÒê ë
Util
ÚÚ 
.
ÚÚ -
ManejoEnLogicaResultadoSinExito
ÚÚ 8
(
ÚÚ8 9
resultadoEnvio
ÚÚ9 G
,
ÚÚG H
$str
ÚÚI q
)
ÚÚq r
;
ÚÚr s
Thread
ÙÙ 
.
ÙÙ 
Sleep
ÙÙ  
(
ÙÙ  !,
FacturacionElectronicaSettings
ÙÙ! ?
.
ÙÙ? @
Default
ÙÙ@ G
.
ÙÙG H3
%TiempoEsperaParaConsultarEnvioResumen
ÙÙH m
)
ÙÙm n
;
ÙÙn o
OperationResult
ˆˆ #
resultadoTicket
ˆˆ$ 3
=
ˆˆ4 5
ConsultarTicket
ˆˆ6 E
(
ˆˆE F
sede
ˆˆF J
.
ˆˆJ K 
DocumentoIdentidad
ˆˆK ]
,
ˆˆ] ^
new
ˆˆ_ b
EnvioSimplificado
ˆˆc t
(
ˆˆt u
)
ˆˆu v
{
ˆˆw x
Id
ˆˆy {
=
ˆˆ| }
resultadoEnvioˆˆ~ å
.ˆˆå ç
dataˆˆç ë
,ˆˆë í
NumeroTicketˆˆì ü
=ˆˆ† °
(ˆˆ¢ £
stringˆˆ£ ©
)ˆˆ© ™
resultadoEnvioˆˆ™ ∏
.ˆˆ∏ π
informationˆˆπ ƒ
}ˆˆ≈ ∆
)ˆˆ∆ «
;ˆˆ« »
Util
˜˜ 
.
˜˜ -
ManejoEnLogicaResultadoSinExito
˜˜ 8
(
˜˜8 9
resultadoTicket
˜˜9 H
,
˜˜H I
$str
˜˜J }
)
˜˜} ~
;
˜˜~ 
logEnvio
¯¯ 
.
¯¯ 
Exito
¯¯ "
.
¯¯" #
Add
¯¯# &
(
¯¯& '
	ItemEnvio
¯¯' 0
.
¯¯0 1
ItemAnulado
¯¯1 <
(
¯¯< =
string
¯¯= C
.
¯¯C D
Join
¯¯D H
(
¯¯H I
$str
¯¯I M
,
¯¯M N

documentos
¯¯O Y
.
¯¯Y Z
Select
¯¯Z `
(
¯¯` a
d
¯¯a b
=>
¯¯c e
d
¯¯f g
.
¯¯g h"
ComprobanteDocumento
¯¯h |
(
¯¯| }
)
¯¯} ~
)
¯¯~ 
)¯¯ Ä
)¯¯Ä Å
)¯¯Å Ç
;¯¯Ç É
}
˘˘ 
}
˙˙ 
catch
˚˚ 
(
˚˚ 
	Exception
˚˚ 
e
˚˚ 
)
˚˚ 
{
¸¸ 
logEnvio
˝˝ 
.
˝˝ 
Error
˝˝ 
.
˝˝ 
Add
˝˝ "
(
˝˝" #
string
˝˝# )
.
˝˝) *
Join
˝˝* .
(
˝˝. /
$str
˝˝/ 3
,
˝˝3 4

documentos
˝˝5 ?
.
˝˝? @
Select
˝˝@ F
(
˝˝F G
d
˝˝G H
=>
˝˝I K
d
˝˝L M
.
˝˝M N"
ComprobanteDocumento
˝˝N b
(
˝˝b c
)
˝˝c d
)
˝˝d e
)
˝˝e f
+
˝˝g h
$str
˝˝i l
+
˝˝m n
Util
˝˝o s
.
˝˝s t 
InicioErrorString˝˝t Ö
(˝˝Ö Ü
e˝˝Ü á
)˝˝á à
)˝˝à â
;˝˝â ä
logEnvio
˛˛ 
.
˛˛ 
LogError
˛˛ !
.
˛˛! "
Add
˛˛" %
(
˛˛% &
string
˛˛& ,
.
˛˛, -
Join
˛˛- 1
(
˛˛1 2
$str
˛˛2 6
,
˛˛6 7

documentos
˛˛8 B
.
˛˛B C
Select
˛˛C I
(
˛˛I J
d
˛˛J K
=>
˛˛L N
d
˛˛O P
.
˛˛P Q"
ComprobanteDocumento
˛˛Q e
(
˛˛e f
)
˛˛f g
)
˛˛g h
)
˛˛h i
+
˛˛j k
$str
˛˛l q
+
˛˛r s
Util
˛˛t x
.
˛˛x y
SoloErrorString˛˛y à
(˛˛à â
e˛˛â ä
)˛˛ä ã
)˛˛ã å
;˛˛å ç
}
ˇˇ 
return
ÄÄ 
new
ÄÄ 
OperationResult
ÄÄ &
(
ÄÄ& '!
OperationResultEnum
ÄÄ' :
.
ÄÄ: ;
Success
ÄÄ; B
,
ÄÄB C
$str
ÄÄD _
,
ÄÄ_ `
$str
ÄÄa e
)
ÄÄe f
;
ÄÄf g
}
ÅÅ 	
public
ÉÉ 
OperationResult
ÉÉ $
EnviarComunicacionBaja
ÉÉ 5
(
ÉÉ5 6&
EstablecimientoComercial
ÉÉ6 N
sede
ÉÉO S
,
ÉÉS T
ComunicacionBaja
ÉÉU e
comunicacionBaja
ÉÉf v
,
ÉÉv w
FirmadoResponseÉÉx á
firmadoResponseÉÉà ó
,ÉÉó ò
longÉÉô ù
[ÉÉù û
]ÉÉû ü
idDocumentosÉÉ† ¨
)ÉÉ¨ ≠
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
OperationResult
áá 
result
áá  &
=
áá' (
null
áá) -
;
áá- .
var
àà $
enviarDocumentoRequest
àà *
=
àà+ ,
new
àà- 0$
EnviarDocumentoRequest
àà1 G
{
ââ 
Ruc
ää 
=
ää 
sede
ää 
.
ää  
DocumentoIdentidad
ää 1
,
ää1 2

UsuarioSol
ãã 
=
ãã  ,
FacturacionElectronicaSettings
ãã! ?
.
ãã? @
Default
ãã@ G
.
ããG H

UsuarioSol
ããH R
,
ããR S
ClaveSol
åå 
=
åå ,
FacturacionElectronicaSettings
åå =
.
åå= >
Default
åå> E
.
ååE F
ClaveSol
ååF N
,
ååN O
EndPointUrl
çç 
=
çç  !9
+DevolverUrlEnvioSunatFacturacionElectronica
çç" M
(
ççM N
)
ççN O
,
ççO P
IdDocumento
éé 
=
éé  !
comunicacionBaja
éé" 2
.
éé2 3
IdDocumento
éé3 >
,
éé> ?
TipoDocumento
èè !
=
èè" #,
FacturacionElectronicaSettings
èè$ B
.
èèB C
Default
èèC J
.
èèJ K.
 CodigoTipoDocumentoResumenDiario
èèK k
,
èèk l
TramaXmlFirmado
êê #
=
êê$ %
firmadoResponse
êê& 5
.
êê5 6
TramaXmlFirmado
êê6 E
}
ëë 
;
ëë 
var
íí #
enviarResumenResponse
íí )
=
íí* +

RestHelper
íí, 6
<
íí6 7$
EnviarDocumentoRequest
íí7 M
,
ííM N#
EnviarResumenResponse
ííO d
>
ííd e
.
ííe f
Execute
ííf m
(
íím n
$stríín Å
,ííÅ Ç&
enviarDocumentoRequestííÉ ô
,ííô ö.
FacturacionElectronicaSettingsííõ π
.ííπ ∫
Defaultíí∫ ¡
.íí¡ ¬,
UrlApiFacturacionElectronicaíí¬ ﬁ
)ííﬁ ﬂ
;ííﬂ ‡
if
ìì 
(
ìì 
!
ìì #
enviarResumenResponse
ìì *
.
ìì* +
Exito
ìì+ 0
)
ìì0 1
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï -
(
ïï- .#
enviarResumenResponse
ïï. C
.
ïïC D
MensajeError
ïïD P
)
ïïP Q
;
ïïQ R
}
ññ 
var
óó 
resultCrearEnvio
óó $
=
óó% &

CrearEnvio
óó' 1
(
óó1 2
comunicacionBaja
óó2 B
.
óóB C
IdDocumento
óóC N
.
óóN O
Split
óóO T
(
óóT U
$char
óóU X
)
óóX Y
[
óóY Z
$num
óóZ [
]
óó[ \
,
óó\ ],
FacturacionElectronicaSettings
óó^ |
.
óó| }
Defaultóó} Ñ
.óóÑ Ö+
TipoEnvioComunicacionDeBajaóóÖ †
,óó† °%
enviarResumenResponseóó¢ ∑
.óó∑ ∏
Exitoóó∏ Ω
?óóæ ø
(óó¿ ¡
intóó¡ ƒ
)óóƒ ≈
EstadoEnvioóó≈ –
.óó– —
	Pendienteóó— ⁄
:óó€ ‹
(óó› ﬁ
intóóﬁ ·
)óó· ‚
EstadoEnvioóó‚ Ì
.óóÌ Ó
	RechazadoóóÓ ˜
,óó˜ ¯
$stróó˘ ˚
,óó˚ ¸
(óó˝ ˛
stringóó˛ Ñ
.óóÑ Ö
IsNullOrEmptyóóÖ í
(óóí ì%
enviarResumenResponseóóì ®
.óó® ©
MensajeErroróó© µ
)óóµ ∂
?óó∑ ∏
$stróóπ ª
:óóº Ω%
enviarResumenResponseóóæ ”
.óó” ‘
MensajeErroróó‘ ‡
)óó‡ ·
,óó· ‚%
enviarResumenResponseóó„ ¯
.óó¯ ˘
	NroTicketóó˘ Ç
,óóÇ É
EncodingóóÑ å
.óóå ç
UTF8óóç ë
.óóë í
GetBytesóóí ö
(óóö õ
JsonConvertóóõ ¶
.óó¶ ß
SerializeObjectóóß ∂
(óó∂ ∑
firmadoResponseóó∑ ∆
)óó∆ «
)óó« »
,óó» …
nullóó  Œ
,óóŒ œ
	ModoEnvioóó– Ÿ
.óóŸ ⁄
Ningunoóó⁄ ·
)óó· ‚
;óó‚ „
Util
òò 
.
òò -
ManejoEnLogicaResultadoSinExito
òò 4
(
òò4 5
resultCrearEnvio
òò5 E
,
òòE F
$stròòG Ä
+òòÅ Ç%
enviarResumenResponseòòÉ ò
.òòò ô
	NroTicketòòô ¢
+òò£ §
$stròò• ®
+òò© ™ 
comunicacionBajaòò´ ª
.òòª º
IdDocumentoòòº «
+òò» …
$stròò  Õ
+òòŒ œ
(òò– —
stringòò— ◊
.òò◊ ÿ
IsNullOrEmptyòòÿ Â
(òòÂ Ê%
enviarResumenResponseòòÊ ˚
.òò˚ ¸
MensajeErroròò¸ à
)òòà â
?òòä ã
$stròòå é
:òòè ê%
enviarResumenResponseòòë ¶
.òò¶ ß
MensajeErroròòß ≥
)òò≥ ¥
)òò¥ µ
;òòµ ∂
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
$num
ôô 
;
ôô 
i
ôô  !
<
ôô" #
idDocumentos
ôô$ 0
.
ôô0 1
Length
ôô1 7
;
ôô7 8
i
ôô9 :
++
ôô: <
)
ôô< =
{
öö 
var
õõ '
resultCrearEnvioDocumento
õõ 1
=
õõ2 3!
CrearEnvioDocumento
õõ4 G
(
õõG H
resultCrearEnvio
õõH X
.
õõX Y
data
õõY ]
,
õõ] ^
idDocumentos
õõ_ k
[
õõk l
i
õõl m
]
õõm n
)
õõn o
;
õõo p
Util
úú 
.
úú -
ManejoEnLogicaResultadoSinExito
úú 8
(
úú8 9'
resultCrearEnvioDocumento
úú9 R
,
úúR S
$str
úúT }
)
úú} ~
;
úú~ 
}
ùù 
result
ûû 
=
ûû 
new
ûû 
OperationResult
ûû ,
(
ûû, -!
OperationResultEnum
ûû- @
.
ûû@ A
Success
ûûA H
,
ûûH I
$str
ûûJ e
,
ûûe f
$str
ûûg k
)
ûûk l
{
üü 
data
†† 
=
†† 
resultCrearEnvio
†† +
.
††+ ,
data
††, 0
,
††0 1
information
°° 
=
°°  !#
enviarResumenResponse
°°" 7
.
°°7 8
	NroTicket
°°8 A
}
¢¢ 
;
¢¢ 
return
££ 
result
££ 
;
££ 
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
e
•• 
)
•• 
{
¶¶ 
throw
ßß 
new
ßß 
LogicaException
ßß )
(
ßß) *
$str
ßß* S
,
ßßS T
e
ßßU V
)
ßßV W
;
ßßW X
}
®® 
}
©© 	
public
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
<
ÉÉ 
OperationResult
ÉÉ )
>
ÉÉ) *(
EnviarGuiaDeRemisionManual
ÉÉ+ E
(
ÉÉE F
DateTime
ÉÉF N

fechaDesde
ÉÉO Y
,
ÉÉY Z
DateTime
ÉÉ[ c

fechaHasta
ÉÉd n
,
ÉÉn o0
!EstablecimientoComercialExtendidoÉÉp ë
sedeÉÉí ñ
,ÉÉñ ó
intÉÉò õ

idEmpleadoÉÉú ¶
,ÉÉ¶ ß
stringÉÉ® Æ
pathÉÉØ ≥
)ÉÉ≥ ¥
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
List
áá 
<
áá 
long
áá 
>
áá 
idsGuiasRemision
áá +
=
áá, -
_operacionLogica
áá. >
.
áá> ?2
$ObtenerIdsGuiaRemisionPorEnviarSunat
áá? c
(
áác d

fechaDesde
áád n
,
áán o

fechaHasta
ááp z
)
ááz {
;
áá{ |
foreach
àà 
(
àà 
var
àà 
idGuiaRemision
àà +
in
àà, .
idsGuiasRemision
àà/ ?
)
àà? @
{
ââ 
await
ää ,
TransmitirEnviarGuiaDeRemision
ää 8
(
ää8 9
idGuiaRemision
ää9 G
,
ääG H
sede
ääI M
,
ääM N

idEmpleado
ääO Y
,
ääY Z
path
ää[ _
)
ää_ `
;
ää` a
}
ãã 
return
åå 
new
åå 
OperationResult
åå *
(
åå* +!
OperationResultEnum
åå+ >
.
åå> ?
Success
åå? F
,
ååF G
$str
ååH c
,
ååc d
$str
ååe i
)
ååi j
;
ååj k
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
new
êê 
LogicaException
êê )
(
êê) *
$str
êê* ^
,
êê^ _
e
êê` a
)
êêa b
;
êêb c
}
ëë 
}
íí 	
public
îî 
async
îî 
Task
îî 
<
îî 
OperationResult
îî )
>
îî) *,
TransmitirEnviarGuiaDeRemision
îî+ I
(
îîI J
long
îîJ N
idMovimiento
îîO [
,
îî[ \/
!EstablecimientoComercialExtendido
îî] ~
sedeîî É
,îîÉ Ñ
intîîÖ à

idEmpleadoîîâ ì
,îîì î
stringîîï õ
pathîîú †
)îî† °
{
ïï 	
try
ññ 
{
óó !
MovimientoDeAlmacen
òò #

movimiento
òò$ .
=
òò/ 0
_operacionLogica
òò1 A
.
òòA B+
ObtenerMovimientoDeMercaderia
òòB _
(
òò_ `
idMovimiento
òò` l
)
òòl m
;
òòm n
var
ôô '
detalleMaestroComprobante
ôô -
=
ôô. /
await
ôô0 5
_maestroLogica
ôô6 D
.
ôôD E*
ObtenerDetallesMaestrosAsync
ôôE a
(
ôôa b
MaestroSettings
ôôb q
.
ôôq r
Default
ôôr y
.
ôôy z!
IdMaestroDocumentoôôz å
)ôôå ç
;ôôç é
var
öö 
proveedores
öö 
=
öö  !!
_actorNegocioLogica
öö" 5
.
öö5 6(
ObtenerProveedoresVigentes
öö6 P
(
ööP Q
)
ööQ R
;
ööR S
var
õõ 
modalidades
õõ 
=
õõ  !
await
õõ" '
_maestroLogica
õõ( 6
.
õõ6 7*
ObtenerDetallesMaestrosAsync
õõ7 S
(
õõS T
MaestroSettings
õõT c
.
õõc d
Default
õõd k
.
õõk l+
IdMaestroModalidadDeTrasladoõõl à
)õõà â
;õõâ ä
var
úú 
motivos
úú 
=
úú 
await
úú #
_maestroLogica
úú$ 2
.
úú2 3*
ObtenerDetallesMaestrosAsync
úú3 O
(
úúO P
MaestroSettings
úúP _
.
úú_ `
Default
úú` g
.
úúg h(
IdMaestroMotivoDeTrasladoúúh Å
)úúÅ Ç
;úúÇ É
GuiaDeRemision
ùù 
guiaDeRemision
ùù -
=
ùù. /
new
ùù0 3
GuiaDeRemision
ùù4 B
(
ùùB C

movimiento
ùùC M
,
ùùM N
sede
ùùO S
,
ùùS T
new
ùùU X7
(EstablecimientoComercialExtendidoConLogoùùY Å
(ùùÅ Ç

movimientoùùÇ å
.ùùå ç
Transaccionùùç ò
(ùùò ô
)ùùô ö
.ùùö õ
Actor_negocio2ùùõ ©
.ùù© ™
Actor_negocio2ùù™ ∏
)ùù∏ π
,ùùπ ∫
nullùùª ø
,ùùø ¿
falseùù¡ ∆
,ùù∆ «
(ùù» …0
 ModoImpresionCaracteristicasEnumùù… È
)ùùÈ Í
VentasSettingsùùÍ ¯
.ùù¯ ˘
Defaultùù˘ Ä
.ùùÄ Å,
modoImpresionCaracteristicasùùÅ ù
,ùùù û
proveedoresùùü ™
,ùù™ ´
modalidadesùù¨ ∑
,ùù∑ ∏
motivosùùπ ¿
)ùù¿ ¡
;ùù¡ ¬
GuiaRemision
ûû 
guiaRemision
ûû )
=
ûû* +'
_generacionArchivosLogica
ûû, E
.
ûûE F7
)ObtenerDocumentoElectronicoGuiaDeRemision
ûûF o
(
ûûo p
guiaDeRemision
ûûp ~
)
ûû~ 
;ûû Ä
Envio
üü 
	envioGuia
üü 
=
üü  !
await
üü" ''
ResolverEnvioGuiaRemision
üü( A
(
üüA B
guiaRemision
üüB N
,
üüN O
path
üüP T
)
üüT U
;
üüU V
var
†† 
	resultado
†† 
=
†† 
await
††  %!
CrearGuiaDeRemision
††& 9
(
††9 :
guiaDeRemision
††: H
,
††H I'
detalleMaestroComprobante
††J c
,
††c d
	envioGuia
††e n
,
††n o

idEmpleado
††p z
)
††z {
;
††{ |
return
°° 
	resultado
°°  
;
°°  !
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
new
•• 
LogicaException
•• )
(
••) *
$str
••* ^
,
••^ _
e
••` a
)
••a b
;
••b c
}
¶¶ 
}
ßß 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
OperationResult
™™ )
>
™™) *!
CrearGuiaDeRemision
™™+ >
(
™™> ?
GuiaDeRemision
™™? M
guiasDeRemision
™™N ]
,
™™] ^
List
™™_ c
<
™™c d
Detalle_maestro
™™d s
>
™™s t)
detallesMaestroComprobante™™u è
,™™è ê
Envio™™ë ñ
envio™™ó ú
,™™ú ù
int™™û °

idEmpleado™™¢ ¨
)™™¨ ≠
{
´´ 	
try
¨¨ 
{
≠≠ 
GuiaRemision
ÆÆ 
guiaRemision
ÆÆ )
=
ÆÆ* +'
_generacionArchivosLogica
ÆÆ, E
.
ÆÆE F7
)ObtenerDocumentoElectronicoGuiaDeRemision
ÆÆF o
(
ÆÆo p
guiasDeRemision
ÆÆp 
)ÆÆ Ä
;ÆÆÄ Å
	Documento
ØØ 
	documento
ØØ #
=
ØØ$ %
new
ØØ& )
	Documento
ØØ* 3
{
∞∞ 

idSigescom
±± 
=
±±  
guiasDeRemision
±±! 0
.
±±0 1
IdOrden
±±1 8
,
±±8 9#
codigoTipoComprobante
≤≤ )
=
≤≤* +
guiaRemision
≤≤, 8
.
≤≤8 9
TipoDocumento
≤≤9 F
,
≤≤F G
serieComprobante
≥≥ $
=
≥≥% &
guiaRemision
≥≥' 3
.
≥≥3 4
IdDocumento
≥≥4 ?
.
≥≥? @
Split
≥≥@ E
(
≥≥E F
$char
≥≥F I
)
≥≥I J
[
≥≥J K
$num
≥≥K L
]
≥≥L M
,
≥≥M N
numeroComprobante
¥¥ %
=
¥¥& '
guiaRemision
¥¥( 4
.
¥¥4 5
IdDocumento
¥¥5 @
.
¥¥@ A
Split
¥¥A F
(
¥¥F G
$char
¥¥G J
)
¥¥J K
[
¥¥K L
$num
¥¥L M
]
¥¥M N
,
¥¥N O
fechaEmision
µµ  
=
µµ! "
DateTime
µµ# +
.
µµ+ ,
Parse
µµ, 1
(
µµ1 2
guiaRemision
µµ2 >
.
µµ> ?
FechaEmision
µµ? K
)
µµK L
,
µµL M
tipoComprobante
∂∂ #
=
∂∂$ %(
detallesMaestroComprobante
∂∂& @
.
∂∂@ A
Single
∂∂A G
(
∂∂G H
d
∂∂H I
=>
∂∂J L
d
∂∂M N
.
∂∂N O
codigo
∂∂O U
==
∂∂V X
guiaRemision
∂∂Y e
.
∂∂e f
TipoDocumento
∂∂f s
)
∂∂s t
.
∂∂t u
nombre
∂∂u {
,
∂∂{ |
estado
∑∑ 
=
∑∑ 
guiasDeRemision
∑∑ ,
.
∑∑, -
IdEstadoActual
∑∑- ;
==
∑∑< >
MaestroSettings
∑∑? N
.
∑∑N O
Default
∑∑O V
.
∑∑V W.
 IdDetalleMaestroEstadoConfirmado
∑∑W w
?
∑∑x y
(
∑∑z {
int
∑∑{ ~
)
∑∑~ )
EstadoDocumentoElectronico∑∑ ô
.∑∑ô ö

Adicionado∑∑ö §
:∑∑• ¶
(∑∑ß ®
int∑∑® ´
)∑∑´ ¨*
EstadoDocumentoElectronico∑∑¨ ∆
.∑∑∆ «
Anulado∑∑« Œ
,∑∑Œ œ
estadoSigescom
∏∏ "
=
∏∏# $
guiasDeRemision
∏∏% 4
.
∏∏4 5
IdEstadoActual
∏∏5 C
==
∏∏D F
MaestroSettings
∏∏G V
.
∏∏V W
Default
∏∏W ^
.
∏∏^ _.
 IdDetalleMaestroEstadoConfirmado
∏∏_ 
?∏∏Ä Å
(∏∏Ç É
int∏∏É Ü
)∏∏Ü á2
"EstadoSigescomDocumentoElectronico∏∏á ©
.∏∏© ™

Confirmado∏∏™ ¥
:∏∏µ ∂
(∏∏∑ ∏
int∏∏∏ ª
)∏∏ª º2
"EstadoSigescomDocumentoElectronico∏∏º ﬁ
.∏∏ﬁ ﬂ

Invalidado∏∏ﬂ È
,∏∏È Í
Binario
ππ 
=
ππ 
new
ππ !
Binario
ππ" )
{
ππ* +
archivoBinario
ππ, :
=
ππ; <
Encoding
ππ= E
.
ππE F
UTF8
ππF J
.
ππJ K
GetBytes
ππK S
(
ππS T
JsonConvert
ππT _
.
ππ_ `
SerializeObject
ππ` o
(
ππo p
guiaRemision
ππp |
)
ππ| }
)
ππ} ~
}ππ Ä
}
∫∫ 
;
∫∫ 
EnvioDocumento
ªª 
envioDocumento
ªª -
=
ªª. /
new
ªª0 3
EnvioDocumento
ªª4 B
{
ºº 
Envio
ΩΩ 
=
ΩΩ 
envio
ΩΩ !
,
ΩΩ! "
	Documento
ææ 
=
ææ 
	documento
ææ  )
}
øø 
;
øø  
Evento_transaccion
¿¿ "
eventoTransaccion
¿¿# 4
=
¿¿5 6
new
¿¿7 : 
Evento_transaccion
¿¿; M
{
¡¡ 
id_empleado
¬¬ 
=
¬¬  !

idEmpleado
¬¬" ,
,
¬¬, -
id_transaccion
√√ "
=
√√# $
guiasDeRemision
√√% 4
.
√√4 5
IdOrden
√√5 <
,
√√< =
	id_evento
ƒƒ 
=
ƒƒ 
MaestroSettings
ƒƒ  /
.
ƒƒ/ 0
Default
ƒƒ0 7
.
ƒƒ7 8/
!IdDetalleMaestroEstadoTransmitido
ƒƒ8 Y
,
ƒƒY Z
fecha
≈≈ 
=
≈≈ 
DateTimeUtil
≈≈ (
.
≈≈( )
FechaActual
≈≈) 4
(
≈≈4 5
)
≈≈5 6
,
≈≈6 7

comentario
∆∆ 
=
∆∆  
$str
∆∆! W
}
«« 
;
«« 
var
»» '
resultCrearEnvioDocumento
»» -
=
»». /
_facturacionDatos
»»0 A
.
»»A B!
CrearEnvioDocumento
»»B U
(
»»U V
envioDocumento
»»V d
)
»»d e
;
»»e f
Util
…… 
.
…… -
ManejoEnLogicaResultadoSinExito
…… 4
(
……4 5'
resultCrearEnvioDocumento
……5 N
,
……N O
$str
……P |
)
……| }
;
……} ~
OperationResult
   
	resultado
    )
;
  ) *
if
ÀÀ 
(
ÀÀ 
envio
ÀÀ 
.
ÀÀ 
codigoRespuesta
ÀÀ )
==
ÀÀ* ,,
FacturacionElectronicaSettings
ÀÀ- K
.
ÀÀK L
Default
ÀÀL S
.
ÀÀS T%
CodigoRespuestaAceptado
ÀÀT k
.
ÀÀk l
ToString
ÀÀl t
(
ÀÀt u
)
ÀÀu v
)
ÀÀv w
{
ÃÃ 
var
ÕÕ "
urlGuiaRemisionSunat
ÕÕ ,
=
ÕÕ- .
await
ÕÕ/ 42
$GenerarUrlGuiaRemisionRespuestaSunat
ÕÕ5 Y
(
ÕÕY Z
JsonConvert
ÕÕZ e
.
ÕÕe f
DeserializeObject
ÕÕf w
<
ÕÕw x&
EnviarDocumentoResponseÕÕx è
>ÕÕè ê
(ÕÕê ë
EncodingÕÕë ô
.ÕÕô ö
UTF8ÕÕö û
.ÕÕû ü
	GetStringÕÕü ®
(ÕÕ® ©
envioÕÕ© Æ
.ÕÕÆ Ø
Binario1ÕÕØ ∑
.ÕÕ∑ ∏
archivoBinarioÕÕ∏ ∆
)ÕÕ∆ «
)ÕÕ« »
.ÕÕ» …
TramaZipCdrÕÕ… ‘
)ÕÕ‘ ’
;ÕÕ’ ÷
	resultado
ŒŒ 
=
ŒŒ 
_operacionLogica
ŒŒ  0
.
ŒŒ0 1:
,CrearEventoTransaccionInformacionTransaccion
ŒŒ1 ]
(
ŒŒ] ^
eventoTransaccion
ŒŒ^ o
,
ŒŒo p#
urlGuiaRemisionSunatŒŒq Ö
)ŒŒÖ Ü
;ŒŒÜ á
Util
œœ 
.
œœ -
ManejoEnLogicaResultadoSinExito
œœ 8
(
œœ8 9
	resultado
œœ9 B
,
œœB C
$strœœD ô
)œœô ö
;œœö õ
}
–– 
else
—— 
{
““ 
	resultado
”” 
=
”” 
_operacionLogica
””  0
.
””0 1$
CrearEventoTransaccion
””1 G
(
””G H
eventoTransaccion
””H Y
)
””Y Z
;
””Z [
Util
‘‘ 
.
‘‘ -
ManejoEnLogicaResultadoSinExito
‘‘ 8
(
‘‘8 9
	resultado
‘‘9 B
,
‘‘B C
$str
‘‘D v
)
‘‘v w
;
‘‘w x
}
’’ 
return
÷÷ 
	resultado
÷÷  
;
÷÷  !
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* p
,
⁄⁄p q
e
⁄⁄r s
)
⁄⁄s t
;
⁄⁄t u
}
€€ 
}
‹‹ 	
public
›› 
async
›› 
Task
›› 
<
›› 
string
››  
>
››  !2
$GenerarUrlGuiaRemisionRespuestaSunat
››" F
(
››F G
string
››G M!
constanciaRecepcion
››N a
)
››a b
{
ﬁﬁ 	
string
ﬂﬂ "
urlGuiaRemisionSunat
ﬂﬂ '
=
ﬂﬂ( )
string
ﬂﬂ* 0
.
ﬂﬂ0 1
Empty
ﬂﬂ1 6
;
ﬂﬂ6 7
var
‡‡ 

returnByte
‡‡ 
=
‡‡ 
Convert
‡‡ $
.
‡‡$ %
FromBase64String
‡‡% 5
(
‡‡5 6!
constanciaRecepcion
‡‡6 I
)
‡‡I J
;
‡‡J K
using
·· 
(
·· 
var
·· 
memRespuesta
·· #
=
··$ %
new
··& )
MemoryStream
··* 6
(
··6 7

returnByte
··7 A
)
··A B
)
··B C
{
‚‚ 
using
„„ 
(
„„ 
var
„„ 
zipFile
„„ "
=
„„# $
new
„„% (

ZipArchive
„„) 3
(
„„3 4
memRespuesta
„„4 @
,
„„@ A
ZipArchiveMode
„„B P
.
„„P Q
Read
„„Q U
)
„„U V
)
„„V W
{
‰‰ 
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ  
entry
ÂÂ! &
in
ÂÂ' )
zipFile
ÂÂ* 1
.
ÂÂ1 2
Entries
ÂÂ2 9
)
ÂÂ9 :
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
entry
ÁÁ "
.
ÁÁ" #
Name
ÁÁ# '
.
ÁÁ' (
EndsWith
ÁÁ( 0
(
ÁÁ0 1
$str
ÁÁ1 7
)
ÁÁ7 8
)
ÁÁ8 9
continue
ÁÁ: B
;
ÁÁB C
using
ËË 
(
ËË 
var
ËË "
ms
ËË# %
=
ËË& '
entry
ËË( -
.
ËË- .
Open
ËË. 2
(
ËË2 3
)
ËË3 4
)
ËË4 5
{
ÈÈ 
var
ÍÍ 
responseReader
ÍÍ  .
=
ÍÍ/ 0
new
ÍÍ1 4
StreamReader
ÍÍ5 A
(
ÍÍA B
ms
ÍÍB D
)
ÍÍD E
;
ÍÍE F
var
ÎÎ 
responseString
ÎÎ  .
=
ÎÎ/ 0
await
ÎÎ1 6
responseReader
ÎÎ7 E
.
ÎÎE F
ReadToEndAsync
ÎÎF T
(
ÎÎT U
)
ÎÎU V
;
ÎÎV W
var
ÌÌ 
xmlDoc
ÌÌ  &
=
ÌÌ' (
new
ÌÌ) ,
XmlDocument
ÌÌ- 8
(
ÌÌ8 9
)
ÌÌ9 :
;
ÌÌ: ;
xmlDoc
ÓÓ "
.
ÓÓ" #
LoadXml
ÓÓ# *
(
ÓÓ* +
responseString
ÓÓ+ 9
)
ÓÓ9 :
;
ÓÓ: ;
var
ÔÔ 
xmlnsManager
ÔÔ  ,
=
ÔÔ- .
new
ÔÔ/ 2!
XmlNamespaceManager
ÔÔ3 F
(
ÔÔF G
xmlDoc
ÔÔG M
.
ÔÔM N
	NameTable
ÔÔN W
)
ÔÔW X
;
ÔÔX Y
xmlnsManager
 (
.
( )
AddNamespace
) 5
(
5 6
$str
6 :
,
: ;
$str< Ä
)Ä Å
;Å Ç
xmlnsManager
ÒÒ (
.
ÒÒ( )
AddNamespace
ÒÒ) 5
(
ÒÒ5 6
$str
ÒÒ6 ;
,
ÒÒ; <
$strÒÒ= á
)ÒÒá à
;ÒÒà â
xmlnsManager
ÚÚ (
.
ÚÚ( )
AddNamespace
ÚÚ) 5
(
ÚÚ5 6
$str
ÚÚ6 ;
,
ÚÚ; <
$strÚÚ= É
)ÚÚÉ Ñ
;ÚÚÑ Ö"
urlGuiaRemisionSunat
ÛÛ 0
=
ÛÛ1 2
xmlDoc
ÛÛ3 9
.
ÛÛ9 :
SelectSingleNode
ÛÛ: J
(
ÛÛJ K
$strÛÛK ß
,ÛÛß ®
xmlnsManagerÛÛ© µ
)ÛÛµ ∂
?ÛÛ∂ ∑
.ÛÛ∑ ∏
	InnerTextÛÛ∏ ¡
;ÛÛ¡ ¬
}
ÙÙ 
}
ıı 
}
ˆˆ 
}
˜˜ 
return
¯¯ "
urlGuiaRemisionSunat
¯¯ '
;
¯¯' (
}
˘˘ 	
public
¸¸ 
async
¸¸ 
Task
¸¸ 
<
¸¸ 
Envio
¸¸ 
>
¸¸  '
ResolverEnvioGuiaRemision
¸¸! :
(
¸¸: ;
GuiaRemision
¸¸; G
guiaRemision
¸¸H T
,
¸¸T U
string
¸¸V \
path
¸¸] a
)
¸¸a b
{
˝˝ 	
try
˛˛ 
{
ˇˇ 
DocumentoResponse
ÄÄ !
documentoResponse
ÄÄ" 3
=
ÄÄ4 5

RestHelper
ÄÄ6 @
<
ÄÄ@ A
GuiaRemision
ÄÄA M
,
ÄÄM N
DocumentoResponse
ÄÄO `
>
ÄÄ` a
.
ÄÄa b
Execute
ÄÄb i
(
ÄÄi j
ObtenerMetodoApi
ÄÄj z
(
ÄÄz {
guiaRemisionÄÄ{ á
.ÄÄá à
TipoDocumentoÄÄà ï
)ÄÄï ñ
,ÄÄñ ó
guiaRemisionÄÄò §
,ÄÄ§ •.
FacturacionElectronicaSettingsÄÄ¶ ƒ
.ÄÄƒ ≈
DefaultÄÄ≈ Ã
.ÄÄÃ Õ,
UrlApiFacturacionElectronicaÄÄÕ È
)ÄÄÈ Í
;ÄÄÍ Î
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
documentoResponse
ÅÅ &
.
ÅÅ& '
Exito
ÅÅ' ,
)
ÅÅ, -
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
LogicaException
ÉÉ -
(
ÉÉ- .
documentoResponse
ÉÉ. ?
.
ÉÉ? @
MensajeError
ÉÉ@ L
)
ÉÉL M
;
ÉÉM N
}
ÑÑ 
var
ÖÖ  
archivoCertificado
ÖÖ &
=
ÖÖ' ( 
ObtenerCertificado
ÖÖ) ;
(
ÖÖ; <
guiaRemision
ÖÖ< H
.
ÖÖH I
	Remitente
ÖÖI R
.
ÖÖR S
NroDocumento
ÖÖS _
)
ÖÖ_ `
;
ÖÖ` a
var
ÜÜ 
firmadoResponse
ÜÜ #
=
ÜÜ$ % 
FirmarGuiaRemision
ÜÜ& 8
(
ÜÜ8 9
documentoResponse
ÜÜ9 J
,
ÜÜJ K 
archivoCertificado
ÜÜL ^
)
ÜÜ^ _
;
ÜÜ_ `
var
áá 
envioGuiaRemision
áá %
=
áá& '
await
áá( - 
EnviarGuiaRemision
áá. @
(
áá@ A
guiaRemision
ááA M
,
ááM N
firmadoResponse
ááO ^
,
áá^ _
path
áá` d
)
áád e
;
ááe f
return
àà 
envioGuiaRemision
àà (
;
àà( )
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
new
åå 
LogicaException
åå )
(
åå) *
$str
åå* [
,
åå[ \
e
åå] ^
)
åå^ _
;
åå_ `
}
çç 
}
éé 	
public
êê 
FirmadoResponse
êê  
FirmarGuiaRemision
êê 1
(
êê1 2
DocumentoResponse
êê2 C
documentoResponse
êêD U
,
êêU V
byte
êêW [
[
êê[ \
]
êê\ ] 
archivoCertificado
êê^ p
)
êêp q
{
ëë 	
try
íí 
{
ìì 
var
îî 
firmado
îî 
=
îî 
new
îî !
FirmadoRequest
îî" 0
{
ïï 
TramaXmlSinFirma
ññ $
=
ññ% &
documentoResponse
ññ' 8
.
ññ8 9
TramaXmlSinFirma
ññ9 I
,
ññI J 
CertificadoDigital
óó &
=
óó' (
Convert
óó) 0
.
óó0 1
ToBase64String
óó1 ?
(
óó? @ 
archivoCertificado
óó@ R
)
óóR S
,
óóS T!
PasswordCertificado
òò '
=
òò( ),
FacturacionElectronicaSettings
òò* H
.
òòH I
Default
òòI P
.
òòP Q%
ClaveCertificadoDigital
òòQ h
,
òòh i
}
ôô 
;
ôô 
var
öö 
respuestaFirmado
öö $
=
öö% &

RestHelper
öö' 1
<
öö1 2
FirmadoRequest
öö2 @
,
öö@ A
FirmadoResponse
ööB Q
>
ööQ R
.
ööR S
Execute
ööS Z
(
ööZ [
$str
öö[ s
,
öös t
firmado
ööu |
,
öö| }-
FacturacionElectronicaSettingsöö~ ú
.ööú ù
Defaultööù §
.öö§ •,
UrlApiFacturacionElectronicaöö• ¡
)öö¡ ¬
;öö¬ √
if
õõ 
(
õõ 
!
õõ 
respuestaFirmado
õõ %
.
õõ% &
Exito
õõ& +
)
õõ+ ,
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù -
(
ùù- .
respuestaFirmado
ùù. >
.
ùù> ?
MensajeError
ùù? K
)
ùùK L
;
ùùL M
}
ûû 
return
üü 
respuestaFirmado
üü '
;
üü' (
}
†† 
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
¢¢ 
throw
££ 
new
££ 
LogicaException
££ )
(
££) *
$str
££* O
,
££O P
e
££Q R
)
££R S
;
££S T
}
§§ 
}
•• 	
private
ßß 
async
ßß 
Task
ßß 
<
ßß 
Envio
ßß  
>
ßß  ! 
EnviarGuiaRemision
ßß" 4
(
ßß4 5
GuiaRemision
ßß5 A
guiaRemision
ßßB N
,
ßßN O
FirmadoResponse
ßßP _
firmadoResponse
ßß` o
,
ßßo p
string
ßßq w
path
ßßx |
)
ßß| }
{
®® 	
try
©© 
{
™™ 
var
´´  
tokenEnvioResponse
´´ &
=
´´' (+
ObtenerTokenEnvioGuiaRemision
´´) F
(
´´F G
guiaRemision
´´G S
.
´´S T
	Remitente
´´T ]
.
´´] ^
NroDocumento
´´^ j
)
´´j k
;
´´k l
var
¨¨ $
envioDocumentoResponse
¨¨ *
=
¨¨+ ,
await
¨¨- 2
EnvioGuiaRemision
¨¨3 D
(
¨¨D E
guiaRemision
¨¨E Q
,
¨¨Q R
firmadoResponse
¨¨S b
,
¨¨b c 
tokenEnvioResponse
¨¨d v
,
¨¨v w
path
¨¨x |
)
¨¨| }
;
¨¨} ~
var
≠≠ #
obtenerRespuestaSunat
≠≠ )
=
≠≠* +
true
≠≠, 0
;
≠≠0 1
var
ÆÆ 
numeroIntentos
ÆÆ "
=
ÆÆ# $
$num
ÆÆ% &
;
ÆÆ& '-
RespuestaEnvioDocumentoResponse
ØØ /-
respuestaEnvioDocumentoResponse
ØØ0 O
;
ØØO P
do
∞∞ 
{
±± 
Thread
≤≤ 
.
≤≤ 
Sleep
≤≤  
(
≤≤  !,
FacturacionElectronicaSettings
≤≤! ?
.
≤≤? @
Default
≤≤@ G
.
≤≤G HK
<TiempoEsperaParaConsultarRespuestaGuiaRemisionEnMilisegundos≤≤H Ñ
)≤≤Ñ Ö
;≤≤Ö Ü-
respuestaEnvioDocumentoResponse
≥≥ 3
=
≥≥4 5/
!ObtenerRespuestaEnvioGuiaRemision
≥≥6 W
(
≥≥W X$
envioDocumentoResponse
≥≥X n
,
≥≥n o!
tokenEnvioResponse≥≥p Ç
)≥≥Ç É
;≥≥É Ñ#
obtenerRespuestaSunat
¥¥ )
=
¥¥* +-
respuestaEnvioDocumentoResponse
¥¥, K
.
¥¥K L
codRespuesta
¥¥L X
==
¥¥Y [,
FacturacionElectronicaSettings
¥¥\ z
.
¥¥z {
Default¥¥{ Ç
.¥¥Ç É7
'CodigoApiEnProcesoRespuestaGuiaRemision¥¥É ™
;¥¥™ ´
numeroIntentos
µµ "
++
µµ" $
;
µµ$ %
}
∂∂ 
while
∂∂ 
(
∂∂ #
obtenerRespuestaSunat
∂∂ .
&&
∂∂/ 1,
FacturacionElectronicaSettings
∂∂2 P
.
∂∂P Q
Default
∂∂Q X
.
∂∂X Y7
(NumeroIntentosConsultaCDREnvioIndividual∂∂Y Å
>=∂∂Ç Ñ
numeroIntentos∂∂Ö ì
)∂∂ì î
;∂∂î ï%
EnviarDocumentoResponse
∑∑ '%
enviarDocumentoResponse
∑∑( ?
=
∑∑@ A-
respuestaEnvioDocumentoResponse
∑∑B a
.
∑∑a b
	Convertir
∑∑b k
(
∑∑k l
)
∑∑l m
;
∑∑m n
var
∏∏ 
envio
∏∏ 
=
∏∏ 
GenerarEnvio
∏∏ (
(
∏∏( )
firmadoResponse
∏∏) 8
,
∏∏8 9$
envioDocumentoResponse
∏∏: P
,
∏∏P Q%
enviarDocumentoResponse
∏∏R i
)
∏∏i j
;
∏∏j k
return
ππ 
envio
ππ 
;
ππ 
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
e
ªª 
)
ªª 
{
ºº 
throw
ΩΩ 
new
ΩΩ 
LogicaException
ΩΩ )
(
ΩΩ) *
$str
ΩΩ* X
,
ΩΩX Y
e
ΩΩZ [
)
ΩΩ[ \
;
ΩΩ\ ]
}
ææ 
}
øø 	
public
¡¡ 
Envio
¡¡ 
GenerarEnvio
¡¡ !
(
¡¡! "
FirmadoResponse
¡¡" 1
firmadoResponse
¡¡2 A
,
¡¡A B$
EnvioDocumentoResponse
¡¡C Y$
envioDocumentoResponse
¡¡Z p
,
¡¡p q&
EnviarDocumentoResponse¡¡r â'
enviarDocumentoResponse¡¡ä °
)¡¡° ¢
{
¬¬ 	
try
√√ 
{
ƒƒ 
var
≈≈ 
estadoEnvio
≈≈ 
=
≈≈  !1
#DeterminarEstadoDeEnvioGuiaRemision
≈≈" E
(
≈≈E F%
enviarDocumentoResponse
≈≈F ]
)
≈≈] ^
;
≈≈^ _
estadoEnvio
∆∆ 
=
∆∆ %
enviarDocumentoResponse
∆∆ 5
.
∆∆5 6
CodigoRespuesta
∆∆6 E
==
∆∆F H,
FacturacionElectronicaSettings
∆∆I g
.
∆∆g h
Default
∆∆h o
.
∆∆o p6
'CodigoApiEnProcesoRespuestaGuiaRemision∆∆p ó
?∆∆ò ô
(∆∆ö õ
int∆∆õ û
)∆∆û ü
EstadoEnvio∆∆ü ™
.∆∆™ ´
	Pendiente∆∆´ ¥
:∆∆µ ∂
estadoEnvio∆∆∑ ¬
;∆∆¬ √
Envio
«« 
envio
«« 
=
«« 
new
«« !
Envio
««" '
{
»» 

fechaEnvio
…… 
=
……  
DateTimeUtil
……! -
.
……- .
FechaActual
……. 9
(
……9 :
)
……: ;
,
……; < 
identificadorEnvio
   &
=
  ' (
$str
  ) +
,
  + ,
	tipoEnvio
ÀÀ 
=
ÀÀ ,
FacturacionElectronicaSettings
ÀÀ  >
.
ÀÀ> ?
Default
ÀÀ? F
.
ÀÀF G!
TipoEnvioIndividual
ÀÀG Z
,
ÀÀZ [
estado
ÃÃ 
=
ÃÃ 
estadoEnvio
ÃÃ (
,
ÃÃ( )
codigoRespuesta
ÕÕ #
=
ÕÕ$ %%
enviarDocumentoResponse
ÕÕ& =
.
ÕÕ= >
CodigoRespuesta
ÕÕ> M
,
ÕÕM N
observacion
ŒŒ 
=
ŒŒ  !%
enviarDocumentoResponse
ŒŒ" 9
.
ŒŒ9 :
MensajeRespuesta
ŒŒ: J
,
ŒŒJ K
numeroTicket
œœ  
=
œœ! "$
envioDocumentoResponse
œœ# 9
.
œœ9 :
	numTicket
œœ: C
,
œœC D
	modoEnvio
–– 
=
–– 
(
––  !
int
––! $
)
––$ %
	ModoEnvio
––% .
.
––. /
Ninguno
––/ 6
}
—— 
;
—— 
Binario
““ 
envioBinario
““ $
=
““% &
new
““' *
Binario
““+ 2
{
““3 4
archivoBinario
““5 C
=
““D E
Encoding
““F N
.
““N O
UTF8
““O S
.
““S T
GetBytes
““T \
(
““\ ]
JsonConvert
““] h
.
““h i
SerializeObject
““i x
(
““x y
firmadoResponse““y à
)““à â
)““â ä
}““ã å
;““å ç
envio
”” 
.
”” 
Binario
”” 
=
”” 
envioBinario
””  ,
;
””, -
Binario
‘‘ 
respuestaBinario
‘‘ (
=
‘‘) *%
enviarDocumentoResponse
‘‘+ B
.
‘‘B C
CodigoRespuesta
‘‘C R
==
‘‘S U,
FacturacionElectronicaSettings
‘‘V t
.
‘‘t u
Default
‘‘u |
.
‘‘| }6
'CodigoApiEnProcesoRespuestaGuiaRemision‘‘} §
?‘‘• ¶
null‘‘ß ´
:‘‘¨ ≠
new‘‘Æ ±
Binario‘‘≤ π
{‘‘∫ ª
archivoBinario‘‘º  
=‘‘À Ã
Encoding‘‘Õ ’
.‘‘’ ÷
UTF8‘‘÷ ⁄
.‘‘⁄ €
GetBytes‘‘€ „
(‘‘„ ‰
JsonConvert‘‘‰ Ô
.‘‘Ô 
SerializeObject‘‘ ˇ
(‘‘ˇ Ä'
enviarDocumentoResponse‘‘Ä ó
)‘‘ó ò
)‘‘ò ô
}‘‘ö õ
;‘‘õ ú
envio
’’ 
.
’’ 
Binario1
’’ 
=
’’  
respuestaBinario
’’! 1
;
’’1 2
return
÷÷ 
envio
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* F
,
⁄⁄F G
e
⁄⁄H I
)
⁄⁄I J
;
⁄⁄J K
}
€€ 
}
‹‹ 	
private
ﬁﬁ  
TokenEnvioResponse
ﬁﬁ "+
ObtenerTokenEnvioGuiaRemision
ﬁﬁ# @
(
ﬁﬁ@ A
string
ﬁﬁA G
ruc
ﬁﬁH K
)
ﬁﬁK L
{
ﬂﬂ 	
try
‡‡ 
{
·· 
var
‚‚  
tokenEnvioResponse
‚‚ &
=
‚‚' (

RestHelper
‚‚) 3
<
‚‚3 4
string
‚‚4 :
,
‚‚: ; 
TokenEnvioResponse
‚‚< N
>
‚‚N O
.
‚‚O P
GetTokenSeguridad
‚‚P a
(
‚‚a b
ruc
‚‚b e
)
‚‚e f
;
‚‚f g
return
„„  
tokenEnvioResponse
„„ )
;
„„) *
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
LogicaException
ÁÁ )
(
ÁÁ) *
$str
ÁÁ* e
,
ÁÁe f
e
ÁÁg h
)
ÁÁh i
;
ÁÁi j
}
ËË 
}
ÈÈ 	
private
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ $
EnvioDocumentoResponse
ÎÎ 1
>
ÎÎ1 2
EnvioGuiaRemision
ÎÎ3 D
(
ÎÎD E
GuiaRemision
ÎÎE Q
guiaRemision
ÎÎR ^
,
ÎÎ^ _
FirmadoResponse
ÎÎ` o
firmadoResponse
ÎÎp 
,ÎÎ Ä"
TokenEnvioResponseÎÎÅ ì"
tokenEnvioResponseÎÎî ¶
,ÎÎ¶ ß
stringÎÎ® Æ
pathÎÎØ ≥
)ÎÎ≥ ¥
{
ÏÏ 	
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 
nombreDocumento
ÔÔ #
=
ÔÔ$ %
$"
ÔÔ& (
{
ÔÔ( )
guiaRemision
ÔÔ) 5
.
ÔÔ5 6
	Remitente
ÔÔ6 ?
.
ÔÔ? @
NroDocumento
ÔÔ@ L
}
ÔÔL M
$str
ÔÔM N
{
ÔÔN O
MaestroSettings
ÔÔO ^
.
ÔÔ^ _
Default
ÔÔ_ f
.
ÔÔf g:
+CodigoDetalleMaestroGuiaDeRemisionRemitenteÔÔg í
}ÔÔí ì
$strÔÔì î
{ÔÔî ï
guiaRemisionÔÔï °
.ÔÔ° ¢
IdDocumentoÔÔ¢ ≠
}ÔÔ≠ Æ
"ÔÔÆ Ø
;ÔÔØ ∞
var
 %
urlApiCpeSunatDocumento
 +
=
, -
$"
. 0
{
0 1,
FacturacionElectronicaSettings
1 O
.
O P
Default
P W
.
W X!
UrlApiCpeSunatEnvio
X k
}
k l
{
l m
nombreDocumento
m |
}
| }
"
} ~
;
~ 
var
ÒÒ 

archivoZip
ÒÒ 
=
ÒÒ  
await
ÒÒ! &

GenerarZip
ÒÒ' 1
(
ÒÒ1 2
firmadoResponse
ÒÒ2 A
.
ÒÒA B
TramaXmlFirmado
ÒÒB Q
,
ÒÒQ R
nombreDocumento
ÒÒS b
,
ÒÒb c
path
ÒÒd h
)
ÒÒh i
;
ÒÒi j
var
ÚÚ 
hashArchivoZip
ÚÚ "
=
ÚÚ# $
Obtener256Hash
ÚÚ% 3
(
ÚÚ3 4
$"
ÚÚ4 6
{
ÚÚ6 7
path
ÚÚ7 ;
}
ÚÚ; <
$str
ÚÚ< =
{
ÚÚ= >
nombreDocumento
ÚÚ> M
}
ÚÚM N
$str
ÚÚN R
"
ÚÚR S
)
ÚÚS T
;
ÚÚT U
File
ÛÛ 
.
ÛÛ 
Delete
ÛÛ 
(
ÛÛ 
$"
ÛÛ 
{
ÛÛ 
path
ÛÛ #
}
ÛÛ# $
$str
ÛÛ$ %
{
ÛÛ% &
nombreDocumento
ÛÛ& 5
}
ÛÛ5 6
$str
ÛÛ6 :
"
ÛÛ: ;
)
ÛÛ; <
;
ÛÛ< =
var
ÙÙ 
autorizacion
ÙÙ  
=
ÙÙ! "
$"
ÙÙ# %
$str
ÙÙ% ,
{
ÙÙ, - 
tokenEnvioResponse
ÙÙ- ?
.
ÙÙ? @
access_token
ÙÙ@ L
}
ÙÙL M
"
ÙÙM N
;
ÙÙN O
var
ıı #
envioDocumentoRequest
ıı )
=
ıı* +
new
ıı, /#
EnvioDocumentoRequest
ıı0 E
{
ˆˆ 
archivo
˜˜ 
=
˜˜ 
new
˜˜ !
Archivo
˜˜" )
{
¯¯ 
	arcGreZip
˘˘ !
=
˘˘" #

archivoZip
˘˘$ .
,
˘˘. /
hashZip
˙˙ 
=
˙˙  !
hashArchivoZip
˙˙" 0
,
˙˙0 1

nomArchivo
˚˚ "
=
˚˚# $
$"
˚˚% '
{
˚˚' (
nombreDocumento
˚˚( 7
}
˚˚7 8
$str
˚˚8 <
"
˚˚< =
,
˚˚= >
}
¸¸ 
}
˝˝ 
;
˝˝ 
var
˛˛  
envioDocumentoJson
˛˛ &
=
˛˛' (
JsonConvert
˛˛) 4
.
˛˛4 5
SerializeObject
˛˛5 D
(
˛˛D E#
envioDocumentoRequest
˛˛E Z
)
˛˛Z [
;
˛˛[ \
var
ˇˇ $
envioDocumentoResponse
ˇˇ *
=
ˇˇ+ ,

RestHelper
ˇˇ- 7
<
ˇˇ7 8
string
ˇˇ8 >
,
ˇˇ> ?$
EnvioDocumentoResponse
ˇˇ@ V
>
ˇˇV W
.
ˇˇW X
Execute
ˇˇX _
(
ˇˇ_ `%
urlApiCpeSunatDocumento
ˇˇ` w
,
ˇˇw x
autorizacionˇˇy Ö
,ˇˇÖ Ü"
envioDocumentoJsonˇˇá ô
)ˇˇô ö
;ˇˇö õ
return
Ä	Ä	 $
envioDocumentoResponse
Ä	Ä	 -
;
Ä	Ä	- .
}
Å	Å	 
catch
Ç	Ç	 
(
Ç	Ç	 
	Exception
Ç	Ç	 
e
Ç	Ç	 
)
Ç	Ç	 
{
É	É	 
throw
Ñ	Ñ	 
new
Ñ	Ñ	 
LogicaException
Ñ	Ñ	 )
(
Ñ	Ñ	) *
$str
Ñ	Ñ	* f
,
Ñ	Ñ	f g
e
Ñ	Ñ	h i
)
Ñ	Ñ	i j
;
Ñ	Ñ	j k
}
Ö	Ö	 
}
Ü	Ü	 	
private
à	à	 -
RespuestaEnvioDocumentoResponse
à	à	 //
!ObtenerRespuestaEnvioGuiaRemision
à	à	0 Q
(
à	à	Q R$
EnvioDocumentoResponse
à	à	R h$
envioDocumentoResponse
à	à	i 
,à	à	 Ä"
TokenEnvioResponseà	à	Å ì"
tokenEnvioResponseà	à	î ¶
)à	à	¶ ß
{
â	â	 	
try
ä	ä	 
{
ã	ã	 
var
å	å	 

urlRequest
å	å	 
=
å	å	  
$"
å	å	! #
{
å	å	# $,
FacturacionElectronicaSettings
å	å	$ B
.
å	å	B C
Default
å	å	C J
.
å	å	J K%
UrlApiCpeSunatRespuesta
å	å	K b
}
å	å	b c
{
å	å	c d$
envioDocumentoResponse
å	å	d z
.
å	å	z {
	numTicketå	å	{ Ñ
}å	å	Ñ Ö
"å	å	Ö Ü
;å	å	Ü á
var
ç	ç	 
autorizacion
ç	ç	  
=
ç	ç	! "
$"
ç	ç	# %
$str
ç	ç	% ,
{
ç	ç	, - 
tokenEnvioResponse
ç	ç	- ?
.
ç	ç	? @
access_token
ç	ç	@ L
}
ç	ç	L M
"
ç	ç	M N
;
ç	ç	N O
var
é	é	 -
respuestaEnvioDocumentoResponse
é	é	 3
=
é	é	4 5

RestHelper
é	é	6 @
<
é	é	@ A
string
é	é	A G
,
é	é	G H-
RespuestaEnvioDocumentoResponse
é	é	I h
>
é	é	h i
.
é	é	i j

ExecuteGet
é	é	j t
(
é	é	t u

urlRequest
é	é	u 
,é	é	 Ä
autorizacioné	é	Å ç
)é	é	ç é
;é	é	é è
return
è	è	 -
respuestaEnvioDocumentoResponse
è	è	 6
;
è	è	6 7
}
ê	ê	 
catch
ë	ë	 
(
ë	ë	 
	Exception
ë	ë	 
e
ë	ë	 
)
ë	ë	 
{
í	í	 
throw
ì	ì	 
new
ì	ì	 
LogicaException
ì	ì	 )
(
ì	ì	) *
$str
ì	ì	* o
,
ì	ì	o p
e
ì	ì	q r
)
ì	ì	r s
;
ì	ì	s t
}
î	î	 
}
ï	ï	 	
public
ñ	ñ	 
int
ñ	ñ	 1
#DeterminarEstadoDeEnvioGuiaRemision
ñ	ñ	 6
(
ñ	ñ	6 7%
EnviarDocumentoResponse
ñ	ñ	7 N%
enviarDocumentoResponse
ñ	ñ	O f
)
ñ	ñ	f g
{
ó	ó	 	
int
ò	ò	 
estadoEnvio
ò	ò	 
;
ò	ò	 
if
ô	ô	 
(
ô	ô	 %
enviarDocumentoResponse
ô	ô	 '
.
ô	ô	' (
Exito
ô	ô	( -
)
ô	ô	- .
{
ö	ö	 
var
õ	õ	 
codigoDeRespuesta
õ	õ	 %
=
õ	õ	& '
Convert
õ	õ	( /
.
õ	õ	/ 0
ToInt32
õ	õ	0 7
(
õ	õ	7 8%
enviarDocumentoResponse
õ	õ	8 O
.
õ	õ	O P
CodigoRespuesta
õ	õ	P _
)
õ	õ	_ `
;
õ	õ	` a
estadoEnvio
ú	ú	 
=
ú	ú	 
(
ú	ú	 
codigoDeRespuesta
ú	ú	 0
==
ú	ú	1 3,
FacturacionElectronicaSettings
ú	ú	4 R
.
ú	ú	R S
Default
ú	ú	S Z
.
ú	ú	Z [%
CodigoRespuestaAceptado
ú	ú	[ r
)
ú	ú	r s
?
ú	ú	t u
(
ù	ù	 
int
ù	ù	 
)
ù	ù	 
EstadoEnvio
ù	ù	 $
.
ù	ù	$ %
Aceptado
ù	ù	% -
:
ù	ù	. /
(
û	û	 
codigoDeRespuesta
û	û	 *
<=
û	û	+ -,
FacturacionElectronicaSettings
û	û	. L
.
û	û	L M
Default
û	û	M T
.
û	û	T U/
!MaximoCodigoRespuestaConExcepcion
û	û	U v
&&
û	û	w y
codigoDeRespuesta
ü	ü	 )
>=
ü	ü	* ,,
FacturacionElectronicaSettings
ü	ü	- K
.
ü	ü	K L
Default
ü	ü	L S
.
ü	ü	S T/
!MinimoCodigoRespuestaConExcepcion
ü	ü	T u
)
ü	ü	u v
?
ü	ü	w x
(
†	†	 
int
†	†	  
)
†	†	  !
EstadoEnvio
†	†	! ,
.
†	†	, -
ConExcepcion
†	†	- 9
:
†	†	: ;
(
°	°	 
codigoDeRespuesta
°	°	 .
<=
°	°	/ 1,
FacturacionElectronicaSettings
°	°	2 P
.
°	°	P Q
Default
°	°	Q X
.
°	°	X Y,
MaximoCodigoRespuestaRechazado
°	°	Y w
&&
¢	¢	 
codigoDeRespuesta
¢	¢	 0
>=
¢	¢	1 3,
FacturacionElectronicaSettings
¢	¢	4 R
.
¢	¢	R S
Default
¢	¢	S Z
.
¢	¢	Z [,
MinimoCodigoRespuestaRechazado
¢	¢	[ y
)
¢	¢	y z
?
¢	¢	{ |
(
£	£	  !
int
£	£	! $
)
£	£	$ %
EstadoEnvio
£	£	% 0
.
£	£	0 1
	Rechazado
£	£	1 :
:
£	£	; <
(
§	§	$ %
codigoDeRespuesta
§	§	% 6
>=
§	§	7 9,
FacturacionElectronicaSettings
§	§	: X
.
§	§	X Y
Default
§	§	Y `
.
§	§	` a2
#MinimoCodigoRespuestaConObservacion§	§	a Ñ
)§	§	Ñ Ö
?§	§	Ü á
(
•	•	( )
int
•	•	) ,
)
•	•	, -
EstadoEnvio
•	•	- 8
.
•	•	8 9&
AceptadoConObservaciones
•	•	9 Q
:
•	•	R S
(
¶	¶	( )
int
¶	¶	) ,
)
¶	¶	, -
EstadoEnvio
¶	¶	- 8
.
¶	¶	8 9
ConExcepcion
¶	¶	9 E
;
¶	¶	E F
if
®	®	 
(
®	®	 
estadoEnvio
®	®	 
!=
®	®	  "
(
®	®	# $
int
®	®	$ '
)
®	®	' (
EstadoEnvio
®	®	( 3
.
®	®	3 4
Aceptado
®	®	4 <
)
®	®	< =
estadoEnvio
©	©	 
=
©	©	  !
Diccionario
©	©	" -
.
©	©	- .7
)CodigoFESunatConsideradosAceptadosEnSiges
©	©	. W
.
©	©	W X
Contains
©	©	X `
(
©	©	` a%
enviarDocumentoResponse
©	©	a x
.
©	©	x y
CodigoRespuesta©	©	y à
)©	©	à â
?©	©	ä ã
(©	©	å ç
int©	©	ç ê
)©	©	ê ë
EstadoEnvio©	©	ë ú
.©	©	ú ù
Aceptado©	©	ù •
:©	©	¶ ß
estadoEnvio©	©	® ≥
;©	©	≥ ¥
}
™	™	 
else
´	´	 
{
¨	¨	 
estadoEnvio
≠	≠	 
=
≠	≠	 
(
≠	≠	 
int
≠	≠	 "
)
≠	≠	" #
EstadoEnvio
≠	≠	# .
.
≠	≠	. /
ConExcepcion
≠	≠	/ ;
;
≠	≠	; <
}
Æ	Æ	 
return
Ø	Ø	 
estadoEnvio
Ø	Ø	 
;
Ø	Ø	 
}
∞	∞	 	
public
±	±	 
async
±	±	 
Task
±	±	 
<
±	±	 
string
±	±	  
>
±	±	  !

GenerarZip
±	±	" ,
(
±	±	, -
string
±	±	- 3
tramaXml
±	±	4 <
,
±	±	< =
string
±	±	> D
nombreArchivo
±	±	E R
,
±	±	R S
string
±	±	T Z
path
±	±	[ _
)
±	±	_ `
{
≤	≤	 	
byte
≥	≥	 
[
≥	≥	 
]
≥	≥	 
memoryStreamBytes
≥	≥	 $
;
≥	≥	$ %
using
¥	¥	 
(
¥	¥	 
var
¥	¥	 
memoryStream
¥	¥	 #
=
¥	¥	$ %
new
¥	¥	& )
MemoryStream
¥	¥	* 6
(
¥	¥	6 7
)
¥	¥	7 8
)
¥	¥	8 9
{
µ	µ	 
using
∂	∂	 
(
∂	∂	 
var
∂	∂	 

zipArchive
∂	∂	 %
=
∂	∂	& '
new
∂	∂	( +

ZipArchive
∂	∂	, 6
(
∂	∂	6 7
memoryStream
∂	∂	7 C
,
∂	∂	C D
ZipArchiveMode
∂	∂	E S
.
∂	∂	S T
Create
∂	∂	T Z
)
∂	∂	Z [
)
∂	∂	[ \
{
∑	∑	 
var
∏	∏	 
zipItem
∏	∏	 
=
∏	∏	  !

zipArchive
∏	∏	" ,
.
∏	∏	, -
CreateEntry
∏	∏	- 8
(
∏	∏	8 9
$"
∏	∏	9 ;
{
∏	∏	; <
nombreArchivo
∏	∏	< I
}
∏	∏	I J
$str
∏	∏	J N
"
∏	∏	N O
)
∏	∏	O P
;
∏	∏	P Q
using
π	π	 
(
π	π	 
var
π	π	 
zipFile
π	π	 &
=
π	π	' (
zipItem
π	π	) 0
.
π	π	0 1
Open
π	π	1 5
(
π	π	5 6
)
π	π	6 7
)
π	π	7 8
{
∫	∫	 
var
ª	ª	 
data
ª	ª	  
=
ª	ª	! "
Convert
ª	ª	# *
.
ª	ª	* +
FromBase64String
ª	ª	+ ;
(
ª	ª	; <
tramaXml
ª	ª	< D
)
ª	ª	D E
;
ª	ª	E F
await
º	º	 
zipFile
º	º	 %
.
º	º	% &

WriteAsync
º	º	& 0
(
º	º	0 1
data
º	º	1 5
,
º	º	5 6
$num
º	º	7 8
,
º	º	8 9
data
º	º	: >
.
º	º	> ?
Length
º	º	? E
)
º	º	E F
;
º	º	F G
}
Ω	Ω	 
}
æ	æ	 
memoryStreamBytes
ø	ø	 !
=
ø	ø	" #
memoryStream
ø	ø	$ 0
.
ø	ø	0 1
ToArray
ø	ø	1 8
(
ø	ø	8 9
)
ø	ø	9 :
;
ø	ø	: ;
}
¿	¿	 
File
¡	¡	 
.
¡	¡	 
WriteAllBytes
¡	¡	 
(
¡	¡	 
$"
¡	¡	 !
{
¡	¡	! "
path
¡	¡	" &
}
¡	¡	& '
$str
¡	¡	' (
{
¡	¡	( )
nombreArchivo
¡	¡	) 6
}
¡	¡	6 7
$str
¡	¡	7 ;
"
¡	¡	; <
,
¡	¡	< =
memoryStreamBytes
¡	¡	> O
)
¡	¡	O P
;
¡	¡	P Q
var
¬	¬	 
	zipResult
¬	¬	 
=
¬	¬	 
File
¬	¬	  
.
¬	¬	  !
ReadAllBytes
¬	¬	! -
(
¬	¬	- .
$"
¬	¬	. 0
{
¬	¬	0 1
path
¬	¬	1 5
}
¬	¬	5 6
$str
¬	¬	6 7
{
¬	¬	7 8
nombreArchivo
¬	¬	8 E
}
¬	¬	E F
$str
¬	¬	F J
"
¬	¬	J K
)
¬	¬	K L
;
¬	¬	L M
var
√	√	 
	resultado
√	√	 
=
√	√	 
Convert
√	√	 #
.
√	√	# $
ToBase64String
√	√	$ 2
(
√	√	2 3
	zipResult
√	√	3 <
)
√	√	< =
;
√	√	= >
return
ƒ	ƒ	 
	resultado
ƒ	ƒ	 
;
ƒ	ƒ	 
}
≈	≈	 	
public
«	«	 
string
«	«	 
Obtener256Hash
«	«	 $
(
«	«	$ %
string
«	«	% +
filename
«	«	, 4
)
«	«	4 5
{
»	»	 	
HashAlgorithm
…	…	 
hash
…	…	 
=
…	…	  
new
…	…	! $
SHA256Managed
…	…	% 2
(
…	…	2 3
)
…	…	3 4
;
…	…	4 5

FileStream
 	 	 
fs
 	 	 
=
 	 	 
new
 	 	 

FileStream
 	 	  *
(
 	 	* +
filename
 	 	+ 3
,
 	 	3 4
FileMode
 	 	5 =
.
 	 	= >
Open
 	 	> B
,
 	 	B C

FileAccess
 	 	D N
.
 	 	N O
Read
 	 	O S
)
 	 	S T
;
 	 	T U
string
À	À	 
resul
À	À	 
=
À	À	 
ArrayToString
À	À	 (
(
À	À	( )
hash
À	À	) -
.
À	À	- .
ComputeHash
À	À	. 9
(
À	À	9 :
fs
À	À	: <
)
À	À	< =
)
À	À	= >
;
À	À	> ?
fs
Ã	Ã	 
.
Ã	Ã	 
Close
Ã	Ã	 
(
Ã	Ã	 
)
Ã	Ã	 
;
Ã	Ã	 
return
Õ	Õ	 
resul
Õ	Õ	 
;
Õ	Õ	 
}
Œ	Œ	 	
private
–	–	 
string
–	–	 
ArrayToString
–	–	 $
(
–	–	$ %
byte
–	–	% )
[
–	–	) *
]
–	–	* +
	byteArray
–	–	, 5
)
–	–	5 6
{
—	—	 	
StringBuilder
“	“	 
sb
“	“	 
=
“	“	 
new
“	“	 "
StringBuilder
“	“	# 0
(
“	“	0 1
	byteArray
“	“	1 :
.
“	“	: ;
Length
“	“	; A
)
“	“	A B
;
“	“	B C
for
”	”	 
(
”	”	 
int
”	”	 
i
”	”	 
=
”	”	 
$num
”	”	 
;
”	”	 
i
”	”	 
<=
”	”	  
	byteArray
”	”	! *
.
”	”	* +
Length
”	”	+ 1
-
”	”	2 3
$num
”	”	4 5
;
”	”	5 6
i
”	”	7 8
++
”	”	8 :
)
”	”	: ;
sb
‘	‘	 
.
‘	‘	 
Append
‘	‘	 
(
‘	‘	 
	byteArray
‘	‘	 #
[
‘	‘	# $
i
‘	‘	$ %
]
‘	‘	% &
.
‘	‘	& '
ToString
‘	‘	' /
(
‘	‘	/ 0
$str
‘	‘	0 4
)
‘	‘	4 5
.
‘	‘	5 6
ToLower
‘	‘	6 =
(
‘	‘	= >
)
‘	‘	> ?
)
‘	‘	? @
;
‘	‘	@ A
return
’	’	 
sb
’	’	 
.
’	’	 
ToString
’	’	 
(
’	’	 
)
’	’	  
;
’	’	  !
}
÷	÷	 	
public
ÿ	ÿ	 
OperationResult
ÿ	ÿ	 *
ConsultarGuiasRemisionManual
ÿ	ÿ	 ;
(
ÿ	ÿ	; <
)
ÿ	ÿ	< =
{
Ÿ	Ÿ	 	
try
⁄	⁄	 
{
€	€	 &
EstablecimientoComercial
‹	‹	 (
sede
‹	‹	) -
=
‹	‹	. /
_sedeLogica
‹	‹	0 ;
.
‹	‹	; <
ObtenerSede
‹	‹	< G
(
‹	‹	G H
)
‹	‹	H I
;
‹	‹	I J
List
›	›	 
<
›	›	 
EnvioSimplificado
›	›	 &
>
›	›	& '&
enviosSinCodigoRespuesta
›	›	( @
=
›	›	A B/
!ObtenerEnviosSinCodigoDeRespuesta
›	›	C d
(
›	›	d e
)
›	›	e f
;
›	›	f g
List
ﬁ	ﬁ	 
<
ﬁ	ﬁ	 
EnvioSimplificado
ﬁ	ﬁ	 &
>
ﬁ	ﬁ	& 'A
3enviosConTicketSinCodigoRespuestaTicketGuiaRemision
ﬁ	ﬁ	( [
=
ﬁ	ﬁ	\ ]&
enviosSinCodigoRespuesta
ﬁ	ﬁ	^ v
.
ﬁ	ﬁ	v w
Where
ﬁ	ﬁ	w |
(
ﬁ	ﬁ	| }
e
ﬁ	ﬁ	} ~
=>ﬁ	ﬁ	 Å
!ﬁ	ﬁ	Ç É
stringﬁ	ﬁ	É â
.ﬁ	ﬁ	â ä
IsNullOrEmptyﬁ	ﬁ	ä ó
(ﬁ	ﬁ	ó ò
eﬁ	ﬁ	ò ô
.ﬁ	ﬁ	ô ö
NumeroTicketﬁ	ﬁ	ö ¶
)ﬁ	ﬁ	¶ ß
&&ﬁ	ﬁ	® ™
eﬁ	ﬁ	´ ¨
.ﬁ	ﬁ	¨ ≠#
CodigoTipoDocumentoﬁ	ﬁ	≠ ¿
==ﬁ	ﬁ	¡ √
MaestroSettingsﬁ	ﬁ	ƒ ”
.ﬁ	ﬁ	” ‘
Defaultﬁ	ﬁ	‘ €
.ﬁ	ﬁ	€ ‹;
+CodigoDetalleMaestroGuiaDeRemisionRemitenteﬁ	ﬁ	‹ á
)ﬁ	ﬁ	á à
.ﬁ	ﬁ	à â
ToListﬁ	ﬁ	â è
(ﬁ	ﬁ	è ê
)ﬁ	ﬁ	ê ë
;ﬁ	ﬁ	ë í
foreach
‡	‡	 
(
‡	‡	 
var
‡	‡	 
envioAConsultar
‡	‡	 ,
in
‡	‡	- /A
3enviosConTicketSinCodigoRespuestaTicketGuiaRemision
‡	‡	0 c
)
‡	‡	c d
{
·	·	 0
"ResolverConsultaTicketGuiaRemision
‚	‚	 6
(
‚	‚	6 7
sede
‚	‚	7 ;
.
‚	‚	; < 
DocumentoIdentidad
‚	‚	< N
,
‚	‚	N O
envioAConsultar
‚	‚	P _
)
‚	‚	_ `
;
‚	‚	` a
}
„	„	 
return
‰	‰	 
new
‰	‰	 
OperationResult
‰	‰	 *
(
‰	‰	* +!
OperationResultEnum
‰	‰	+ >
.
‰	‰	> ?
Success
‰	‰	? F
,
‰	‰	F G
$str
‰	‰	H c
,
‰	‰	c d
$str
‰	‰	e i
)
‰	‰	i j
;
‰	‰	j k
}
Â	Â	 
catch
Ê	Ê	 
(
Ê	Ê	 
	Exception
Ê	Ê	 
e
Ê	Ê	 
)
Ê	Ê	 
{
Á	Á	 
throw
Ë	Ë	 
new
Ë	Ë	 
LogicaException
Ë	Ë	 )
(
Ë	Ë	) *
$str
Ë	Ë	* P
,
Ë	Ë	P Q
e
Ë	Ë	R S
)
Ë	Ë	S T
;
Ë	Ë	T U
}
È	È	 
}
Í	Í	 	
}
Ï	Ï	 
}Ì	Ì	 Ç∏
fD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_ReenvioPendientes.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public 
OperationResult $
ResolverEnviosPendientes 7
(7 8
)8 9
{ 	
try 
{ *
LogEnvioFacturacionElectronica .
logEnvioFacturacion/ B
=C D
newE H*
LogEnvioFacturacionElectronicaI g
(g h
)h i
;i j-
!EstablecimientoComercialExtendido 1
sede2 6
=7 8
_sedeLogica9 D
.D E 
ObtenerSedeExtendidaE Y
(Y Z
)Z [
;[ \
List 
< 
Envio 
> 
enviosPendientes ,
=- .+
ObteneEnviosPendientesAReenviar/ N
(N O
)O P
;P Q
if 
( 
enviosPendientes $
.$ %
Count% *
(* +
)+ ,
>- .
$num/ 0
)0 1
{ 
List 
< 
Envio 
> (
enviosIndividualesPendientes  <
== >
enviosPendientes? O
.O P
WhereP U
(U V
eV W
=>X Z
e[ \
.\ ]
	tipoEnvio] f
==g i+
FacturacionElectronicaSettings	j à
.
à â
Default
â ê
.
ê ë!
TipoEnvioIndividual
ë §
)
§ •
.
• ¶
ToList
¶ ¨
(
¨ ≠
)
≠ Æ
;
Æ Ø
List 
< 
Envio 
> 9
-enviosResumenDiariosDeBoletasYNotasPendientes  M
=N O
enviosPendientesP `
.` a
Wherea f
(f g
eg h
=>i k
el m
.m n
	tipoEnvion w
==x z+
FacturacionElectronicaSettings	{ ô
.
ô ö
Default
ö °
.
° ¢$
TipoEnvioResumenDiario
¢ ∏
)
∏ π
.
π ∫
ToList
∫ ¿
(
¿ ¡
)
¡ ¬
;
¬ √
List 
< 
Envio 
> ,
 enviosComunicacionBajaPendientes  @
=A B
enviosPendientesC S
.S T
WhereT Y
(Y Z
eZ [
=>\ ^
e_ `
.` a
	tipoEnvioa j
==k m+
FacturacionElectronicaSettings	n å
.
å ç
Default
ç î
.
î ï)
TipoEnvioComunicacionDeBaja
ï ∞
)
∞ ±
.
± ≤
ToList
≤ ∏
(
∏ π
)
π ∫
;
∫ ª
List 
< 
Envio 
> $
enviosFacturasPendientes  8
=9 :(
enviosIndividualesPendientes; W
.W X
WhereX ]
(] ^
e^ _
=>` b
ec d
.d e
EnvioDocumentoe s
.s t
FirstOrDefault	t Ç
(
Ç É
)
É Ñ
.
Ñ Ö
	Documento
Ö é
.
é è#
codigoTipoComprobante
è §
==
• ß
MaestroSettings
® ∑
.
∑ ∏
Default
∏ ø
.
ø ¿)
CodigoDetalleMaestroFactura
¿ €
)
€ ‹
.
‹ ›
ToList
› „
(
„ ‰
)
‰ Â
;
Â Ê
List!! 
<!! 
Envio!! 
>!! !
enviosGuiasPendientes!!  5
=!!6 7(
enviosIndividualesPendientes!!8 T
.!!T U
Where!!U Z
(!!Z [
e!![ \
=>!!] _
e!!` a
.!!a b
EnvioDocumento!!b p
.!!p q
FirstOrDefault!!q 
(	!! Ä
)
!!Ä Å
.
!!Å Ç
	Documento
!!Ç ã
.
!!ã å#
codigoTipoComprobante
!!å °
==
!!¢ §
MaestroSettings
!!• ¥
.
!!¥ µ
Default
!!µ º
.
!!º Ω9
+CodigoDetalleMaestroGuiaDeRemisionRemitente
!!Ω Ë
)
!!Ë È
.
!!È Í
ToList
!!Í 
(
!! Ò
)
!!Ò Ú
;
!!Ú Û
List## 
<## 
Envio## 
>## (
enviosNotasCreditoPendientes##  <
=##= >(
enviosIndividualesPendientes##? [
.##[ \
Where##\ a
(##a b
e##b c
=>##d f
e##g h
.##h i
EnvioDocumento##i w
.##w x
FirstOrDefault	##x Ü
(
##Ü á
)
##á à
.
##à â
	Documento
##â í
.
##í ì#
codigoTipoComprobante
##ì ®
==
##© ´
MaestroSettings
##¨ ª
.
##ª º
Default
##º √
.
##√ ƒ/
!CodigoDetalleMaestroNotaDeCredito
##ƒ Â
)
##Â Ê
.
##Ê Á
ToList
##Á Ì
(
##Ì Ó
)
##Ó Ô
;
##Ô 
List$$ 
<$$ 
Envio$$ 
>$$ '
enviosNotasDebitoPendientes$$  ;
=$$< =(
enviosIndividualesPendientes$$> Z
.$$Z [
Where$$[ `
($$` a
e$$a b
=>$$c e
e$$f g
.$$g h
EnvioDocumento$$h v
.$$v w
FirstOrDefault	$$w Ö
(
$$Ö Ü
)
$$Ü á
.
$$á à
	Documento
$$à ë
.
$$ë í#
codigoTipoComprobante
$$í ß
==
$$® ™
MaestroSettings
$$´ ∫
.
$$∫ ª
Default
$$ª ¬
.
$$¬ √.
 CodigoDetalleMaestroNotaDeDebito
$$√ „
)
$$„ ‰
.
$$‰ Â
ToList
$$Â Î
(
$$Î Ï
)
$$Ï Ì
;
$$Ì Ó+
ResolverResumenDiarioPendientes'' 3
(''3 4
sede''4 8
,''8 99
-enviosResumenDiariosDeBoletasYNotasPendientes'': g
,''g h
logEnvioFacturacion''i |
.''| }
BoletasVenta	''} â
)
''â ä
;
''ä ã+
ResolverEnvioFacturasPendientes)) 3
())3 4$
enviosFacturasPendientes))4 L
,))L M
logEnvioFacturacion))N a
.))a b
Factura))b i
)))i j
;))j k/
#ResolverEnvioNotasCreditoPendientes++ 7
(++7 8(
enviosNotasCreditoPendientes++8 T
,++T U'
enviosNotasDebitoPendientes++V q
,++q r 
logEnvioFacturacion	++s Ü
.
++Ü á
NotaCredito
++á í
)
++í ì
;
++ì î.
"ResolverComunicacionBajaPendientes-- 6
(--6 7
sede--7 ;
,--; <,
 enviosComunicacionBajaPendientes--= ]
,--] ^
logEnvioFacturacion--_ r
.--r s
Factura--s z
)--z {
;--{ |
}.. 
return// 
new// 
OperationResult// *
(//* +
OperationResultEnum//+ >
.//> ?
Success//? F
,//F G
$str//H c
,//c d
$str//e i
)//i j
;//j k
}00 
catch11 
(11 
	Exception11 
e11 
)11 
{22 
throw33 
new33 
	Exception33 #
(33# $
$str33$ g
,33g h
e33i j
)33j k
;33k l
}44 
}55 	
public77 
OperationResult77 +
ResolverResumenDiarioPendientes77 >
(77> ?-
!EstablecimientoComercialExtendido77? `
sede77a e
,77e f
List77g k
<77k l
Envio77l q
>77q r
enviosPendientes	77s É
,
77É Ñ
LogEnvio
77Ö ç
logEnvio
77é ñ
)
77ñ ó
{88 	
try99 
{:: 
OperationResult;; 
result;;  &
=;;' (
null;;) -
;;;- .
foreach<< 
(<< 
Envio<< 
envio<< $
in<<% '
enviosPendientes<<( 8
)<<8 9
{== 
if>> 
(>> 
	ModoEnvio>> !
.>>! "
	Anulacion>>" +
==>>, .
(>>/ 0
	ModoEnvio>>0 9
)>>9 :
envio>>: ?
.>>? @
	modoEnvio>>@ I
)>>I J
{?? 
	Documento@@ !
[@@! "
]@@" #'
documentosDeEnvioPendientes@@$ ?
=@@@ A
envio@@B G
.@@G H
EnvioDocumento@@H V
.@@V W
Select@@W ]
(@@] ^
ed@@^ `
=>@@a c
ed@@d f
.@@f g
	Documento@@g p
)@@p q
.@@q r
ToArray@@r y
(@@y z
)@@z {
;@@{ |
varAA 1
%resultResolverResumenDiarioInvalidadoAA A
=AAB C,
 ResolverResumenDiarioInvalidadosAAD d
(AAd e
sedeAAe i
,AAi j(
documentosDeEnvioPendientes	AAk Ü
)
AAÜ á
;
AAá à
UtilBB 
.BB +
ManejoEnLogicaResultadoSinExitoBB <
(BB< =1
%resultResolverResumenDiarioInvalidadoBB= b
,BBb c
$str	BBd ©
)
BB© ™
;
BB™ ´
}CC 
elseDD 
{EE 
	DocumentoFF !
[FF! "
]FF" #'
documentosDeEnvioPendientesFF$ ?
=FF@ A
envioFFB G
.FFG H
EnvioDocumentoFFH V
.FFV W
SelectFFW ]
(FF] ^
edFF^ `
=>FFa c
edFFd f
.FFf g
	DocumentoFFg p
)FFp q
.FFq r
ToArrayFFr y
(FFy z
)FFz {
;FF{ |
varGG '
resultResolverResumenDiarioGG 7
=GG8 9'
ResolverResumenDiarioPorDiaGG: U
(GGU V
sedeGGV Z
,GGZ ['
documentosDeEnvioPendientesGG\ w
,GGw x
logEnvio	GGy Å
)
GGÅ Ç
;
GGÇ É
UtilHH 
.HH +
ManejoEnLogicaResultadoSinExitoHH <
(HH< ='
resultResolverResumenDiarioHH= X
,HHX Y
$str	HHZ ì
)
HHì î
;
HHî ï
}II 
}JJ 
varKK 3
'resultActualizarEstadosEnviosPendientesKK ;
=KK< =-
!ActualizarEstadosEnviosPendientesKK> _
(KK_ `
enviosPendientesKK` p
)KKp q
;KKq r
UtilLL 
.LL +
ManejoEnLogicaResultadoSinExitoLL 4
(LL4 53
'resultActualizarEstadosEnviosPendientesLL5 \
,LL\ ]
$str	LL^ Æ
)
LLÆ Ø
;
LLØ ∞
resultMM 
=MM 
newMM 
OperationResultMM ,
(MM, -
OperationResultEnumMM- @
.MM@ A
SuccessMMA H
,MMH I
$strMMJ e
,MMe f
$strMMg k
)MMk l
;MMl m
returnNN 
resultNN 
;NN 
}OO 
catchPP 
(PP 
	ExceptionPP 
ePP 
)PP 
{QQ 
throwRR 
newRR 
LogicaExceptionRR )
(RR) *
$strRR* Z
,RRZ [
eRR\ ]
)RR] ^
;RR^ _
}SS 
}TT 	
publicVV 
OperationResultVV +
ResolverEnvioFacturasPendientesVV >
(VV> ?
ListVV? C
<VVC D
EnvioVVD I
>VVI J
enviosPendientesVVK [
,VV[ \
LogEnvioVV] e
logEnvioVVf n
)VVn o
{WW 	
tryXX 
{YY 
OperationResultZZ 
resultZZ  &
=ZZ' (
nullZZ) -
;ZZ- .
if[[ 
([[ 
enviosPendientes[[ $
.[[$ %
Count[[% *
>[[+ ,
$num[[- .
)[[. /
{\\ 
var]] )
resultResolverEnvioIndividual]] 5
=]]6 7#
ResolverEnvioIndividual]]8 O
(]]O P
enviosPendientes]]P `
.]]` a

SelectMany]]a k
(]]k l
e]]l m
=>]]n p
e]]q r
.]]r s
EnvioDocumento	]]s Å
)
]]Å Ç
.
]]Ç É
Select
]]É â
(
]]â ä
ed
]]ä å
=>
]]ç è
ed
]]ê í
.
]]í ì
	Documento
]]ì ú
)
]]ú ù
.
]]ù û
ToArray
]]û •
(
]]• ¶
)
]]¶ ß
,
]]ß ®
logEnvio
]]© ±
)
]]± ≤
;
]]≤ ≥
Util__ 
.__ +
ManejoEnLogicaResultadoSinExito__ 8
(__8 9)
resultResolverEnvioIndividual__9 V
,__V W
$str	__X ã
)
__ã å
;
__å ç
var`` 3
'resultActualizarEstadosEnviosPendientes`` ?
=``@ A-
!ActualizarEstadosEnviosPendientes``B c
(``c d
enviosPendientes``d t
)``t u
;``u v
Utilaa 
.aa +
ManejoEnLogicaResultadoSinExitoaa 8
(aa8 93
'resultActualizarEstadosEnviosPendientesaa9 `
,aa` a
$str	aab ≤
)
aa≤ ≥
;
aa≥ ¥
resultbb 
=bb 
newbb  
OperationResultbb! 0
(bb0 1
OperationResultEnumbb1 D
.bbD E
SuccessbbE L
,bbL M
$strbbN i
,bbi j
$strbbk o
)bbo p
;bbp q
}cc 
returndd 
resultdd 
;dd 
}ee 
catchff 
(ff 
	Exceptionff 
eff 
)ff 
{gg 
throwhh 
newhh 
LogicaExceptionhh )
(hh) *
$strhh* ]
,hh] ^
ehh_ `
)hh` a
;hha b
}ii 
}jj 	
publicll 
OperationResultll /
#ResolverEnvioNotasCreditoPendientesll B
(llB C
ListllC G
<llG H
EnviollH M
>llM N"
notasCreditoPendientesllO e
,lle f
Listllg k
<llk l
Enviolll q
>llq r"
notasDebitoPendientes	lls à
,
llà â
LogEnvio
llä í
logEnvio
llì õ
)
llõ ú
{mm 	
trynn 
{oo 
OperationResultpp 
resultpp  &
=pp' (
nullpp) -
;pp- .
ifqq 
(qq "
notasCreditoPendientesqq *
.qq* +
Countqq+ 0
>qq1 2
$numqq3 4
)qq4 5
{rr 
varss $
resultResolverEnvioNotasss 0
=ss1 2
ResolverEnvioNotasss3 E
(ssE F"
notasCreditoPendientesssF \
.ss\ ]

SelectManyss] g
(ssg h
essh i
=>ssj l
essm n
.ssn o
EnvioDocumentosso }
)ss} ~
.ss~ 
Select	ss Ö
(
ssÖ Ü
ed
ssÜ à
=>
ssâ ã
ed
sså é
.
ssé è
	Documento
ssè ò
)
ssò ô
.
ssô ö
ToArray
ssö °
(
ss° ¢
)
ss¢ £
,
ss£ §
logEnvio
ss• ≠
)
ss≠ Æ
;
ssÆ Ø
Utiltt 
.tt +
ManejoEnLogicaResultadoSinExitott 8
(tt8 9$
resultResolverEnvioNotastt9 Q
,ttQ R
$str	ttS ã
)
ttã å
;
ttå ç
varuu 3
'resultActualizarEstadosEnviosPendientesuu ?
=uu@ A-
!ActualizarEstadosEnviosPendientesuuB c
(uuc d"
notasCreditoPendientesuud z
)uuz {
;uu{ |
Utilvv 
.vv +
ManejoEnLogicaResultadoSinExitovv 8
(vv8 93
'resultActualizarEstadosEnviosPendientesvv9 `
,vv` a
$str	vvb ≤
)
vv≤ ≥
;
vv≥ ¥
resultww 
=ww 
newww  
OperationResultww! 0
(ww0 1
OperationResultEnumww1 D
.wwD E
SuccesswwE L
,wwL M
$strwwN i
,wwi j
$strwwk o
)wwo p
;wwp q
}xx 
returnyy 
resultyy 
;yy 
}zz 
catch{{ 
({{ 
	Exception{{ 
e{{ 
){{ 
{|| 
throw}} 
new}} 
LogicaException}} )
(}}) *
$str}}* b
,}}b c
e}}d e
)}}e f
;}}f g
}~~ 
} 	
public
ÄÄ 
OperationResult
ÄÄ 0
"ResolverEnvioNotasDebitoPendientes
ÄÄ A
(
ÄÄA B
List
ÄÄB F
<
ÄÄF G
Envio
ÄÄG L
>
ÄÄL M$
notasCreditoPendientes
ÄÄN d
,
ÄÄd e
List
ÄÄf j
<
ÄÄj k
Envio
ÄÄk p
>
ÄÄp q$
notasDebitoPendientesÄÄr á
,ÄÄá à
LogEnvioÄÄâ ë
logEnvioÄÄí ö
)ÄÄö õ
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
OperationResult
ÑÑ 
result
ÑÑ  &
=
ÑÑ' (
null
ÑÑ) -
;
ÑÑ- .
if
ÖÖ 
(
ÖÖ #
notasDebitoPendientes
ÖÖ )
.
ÖÖ) *
Count
ÖÖ* /
>
ÖÖ0 1
$num
ÖÖ2 3
)
ÖÖ3 4
{
ÜÜ 
var
áá &
resultResolverEnvioNotas
áá 0
=
áá1 2 
ResolverEnvioNotas
áá3 E
(
ááE F#
notasDebitoPendientes
ááF [
.
áá[ \

SelectMany
áá\ f
(
ááf g
e
áág h
=>
áái k
e
áál m
.
áám n
EnvioDocumento
áán |
)
áá| }
.
áá} ~
Selectáá~ Ñ
(ááÑ Ö
edááÖ á
=>ááà ä
edááã ç
.ááç é
	Documentoááé ó
)ááó ò
.ááò ô
ToArrayááô †
(áá† °
)áá° ¢
,áá¢ £
logEnvioáá§ ¨
)áá¨ ≠
;áá≠ Æ
Util
àà 
.
àà -
ManejoEnLogicaResultadoSinExito
àà 8
(
àà8 9&
resultResolverEnvioNotas
àà9 Q
,
ààQ R
$strààS ä
)ààä ã
;ààã å
var
ââ 5
'resultActualizarEstadosEnviosPendientes
ââ ?
=
ââ@ A/
!ActualizarEstadosEnviosPendientes
ââB c
(
ââc d#
notasDebitoPendientes
ââd y
)
âây z
;
ââz {
Util
ää 
.
ää -
ManejoEnLogicaResultadoSinExito
ää 8
(
ää8 95
'resultActualizarEstadosEnviosPendientes
ää9 `
,
ää` a
$strääb ≤
)ää≤ ≥
;ää≥ ¥
result
ãã 
=
ãã 
new
ãã  
OperationResult
ãã! 0
(
ãã0 1!
OperationResultEnum
ãã1 D
.
ããD E
Success
ããE L
,
ããL M
$str
ããN i
,
ããi j
$str
ããk o
)
ãão p
;
ããp q
}
åå 
return
çç 
result
çç 
;
çç 
}
éé 
catch
èè 
(
èè 
	Exception
èè 
e
èè 
)
èè 
{
êê 
throw
ëë 
new
ëë 
LogicaException
ëë )
(
ëë) *
$str
ëë* a
,
ëëa b
e
ëëc d
)
ëëd e
;
ëëe f
}
íí 
}
ìì 	
public
ïï 
OperationResult
ïï 0
"ResolverComunicacionBajaPendientes
ïï A
(
ïïA B/
!EstablecimientoComercialExtendido
ïïB c
sede
ïïd h
,
ïïh i
List
ïïj n
<
ïïn o
Envio
ïïo t
>
ïït u
enviosPendientesïïv Ü
,ïïÜ á
LogEnvioïïà ê
logEnvioïïë ô
)ïïô ö
{
ññ 	
try
óó 
{
òò 
OperationResult
ôô 
result
ôô  &
=
ôô' (
null
ôô) -
;
ôô- .
if
öö 
(
öö 
enviosPendientes
öö $
.
öö$ %
Count
öö% *
>
öö+ ,
$num
öö- .
)
öö. /
{
õõ 
var
úú ,
resultResolverComunicacionBaja
úú 6
=
úú7 8&
ResolverComunicacionBaja
úú9 Q
(
úúQ R
sede
úúR V
,
úúV W
enviosPendientes
úúX h
.
úúh i

SelectMany
úúi s
(
úús t
e
úút u
=>
úúv x
e
úúy z
.
úúz {
EnvioDocumentoúú{ â
)úúâ ä
.úúä ã
Selectúúã ë
(úúë í
edúúí î
=>úúï ó
edúúò ö
.úúö õ
	Documentoúúõ §
)úú§ •
.úú• ¶
ToArrayúú¶ ≠
(úú≠ Æ
)úúÆ Ø
,úúØ ∞
logEnvioúú± π
)úúπ ∫
;úú∫ ª
Util
ùù 
.
ùù -
ManejoEnLogicaResultadoSinExito
ùù 8
(
ùù8 9,
resultResolverComunicacionBaja
ùù9 W
,
ùùW X
$strùùY í
)ùùí ì
;ùùì î
var
ûû 5
'resultActualizarEstadosEnviosPendientes
ûû ?
=
ûû@ A/
!ActualizarEstadosEnviosPendientes
ûûB c
(
ûûc d
enviosPendientes
ûûd t
)
ûût u
;
ûûu v
Util
üü 
.
üü -
ManejoEnLogicaResultadoSinExito
üü 8
(
üü8 95
'resultActualizarEstadosEnviosPendientes
üü9 `
,
üü` a
$strüüb ≤
)üü≤ ≥
;üü≥ ¥
result
†† 
=
†† 
new
††  
OperationResult
††! 0
(
††0 1!
OperationResultEnum
††1 D
.
††D E
Success
††E L
,
††L M
$str
††N i
,
††i j
$str
††k o
)
††o p
;
††p q
}
°° 
return
¢¢ 
result
¢¢ 
;
¢¢ 
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ )
(
¶¶) *
$str
¶¶* c
,
¶¶c d
e
¶¶e f
)
¶¶f g
;
¶¶g h
}
ßß 
}
®® 	
public
™™ 
OperationResult
™™ /
!ActualizarEstadosEnviosPendientes
™™ @
(
™™@ A
List
™™A E
<
™™E F
Envio
™™F K
>
™™K L
envios
™™M S
)
™™S T
{
´´ 	
try
¨¨ 
{
≠≠ 
OperationResult
ÆÆ 
result
ÆÆ  &
=
ÆÆ' (
new
ÆÆ) ,
OperationResult
ÆÆ- <
(
ÆÆ< =
)
ÆÆ= >
;
ÆÆ> ?
foreach
ØØ 
(
ØØ 
var
ØØ 
envio
ØØ "
in
ØØ# %
envios
ØØ& ,
)
ØØ, -
{
∞∞ 
envio
±± 
.
±± 
estado
±±  
=
±±! "
(
±±# $
int
±±$ '
)
±±' (
EstadoEnvio
±±( 3
.
±±3 4

Descartado
±±4 >
;
±±> ?
result
≤≤ 
=
≤≤ #
ActualizarEstadoEnvio
≤≤ 2
(
≤≤2 3
envio
≤≤3 8
)
≤≤8 9
;
≤≤9 :
}
≥≥ 
return
¥¥ 
result
¥¥ 
;
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
new
∏∏ 
LogicaException
∏∏ )
(
∏∏) *
$str
∏∏* `
,
∏∏` a
e
∏∏b c
)
∏∏c d
;
∏∏d e
}
ππ 
}
∫∫ 	
}
ææ 
}øø ‘ª
hD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_ReenvioConExcepcion.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public"" 
async"" 
Task"" 
<"" 
OperationResult"" )
>"") *&
ResolverEnviosConExcepcion""+ E
(""E F
)""F G
{## 	
try$$ 
{%% *
LogEnvioFacturacionElectronica&& .
logEnvioFacturacion&&/ B
=&&C D
new&&E H*
LogEnvioFacturacionElectronica&&I g
(&&g h
)&&h i
;&&i j-
!EstablecimientoComercialExtendido'' 1
sede''2 6
=''7 8
_sedeLogica''9 D
.''D E 
ObtenerSedeExtendida''E Y
(''Y Z
)''Z [
;''[ \
List(( 
<(( 
Envio(( 
>(( 
enviosConExcepcion(( .
=((/ 0-
!ObteneEnviosConExcepcionAReenviar((1 R
(((R S
)((S T
;((T U
if)) 
()) 
enviosConExcepcion)) &
.))& '
Count))' ,
()), -
)))- .
>))/ 0
$num))1 2
)))2 3
{** 
List,, 
<,, 
Envio,, 
>,, *
enviosIndividualesConExcepcion,,  >
=,,? @
enviosConExcepcion,,A S
.,,S T
Where,,T Y
(,,Y Z
e,,Z [
=>,,\ ^
e,,_ `
.,,` a
	tipoEnvio,,a j
==,,k m+
FacturacionElectronicaSettings	,,n å
.
,,å ç
Default
,,ç î
.
,,î ï!
TipoEnvioIndividual
,,ï ®
)
,,® ©
.
,,© ™
ToList
,,™ ∞
(
,,∞ ±
)
,,± ≤
;
,,≤ ≥
List-- 
<-- 
Envio-- 
>-- ;
/enviosResumenDiariosDeBoletasYNotasConExcepcion--  O
=--P Q
enviosConExcepcion--R d
.--d e
Where--e j
(--j k
e--k l
=>--m o
e--p q
.--q r
	tipoEnvio--r {
==--| ~+
FacturacionElectronicaSettings	-- ù
.
--ù û
Default
--û •
.
--• ¶$
TipoEnvioResumenDiario
--¶ º
)
--º Ω
.
--Ω æ
ToList
--æ ƒ
(
--ƒ ≈
)
--≈ ∆
;
--∆ «
List.. 
<.. 
Envio.. 
>.. .
"enviosComunicacionBajaConExcepcion..  B
=..C D
enviosConExcepcion..E W
...W X
Where..X ]
(..] ^
e..^ _
=>..` b
e..c d
...d e
	tipoEnvio..e n
==..o q+
FacturacionElectronicaSettings	..r ê
.
..ê ë
Default
..ë ò
.
..ò ô)
TipoEnvioComunicacionDeBaja
..ô ¥
)
..¥ µ
.
..µ ∂
ToList
..∂ º
(
..º Ω
)
..Ω æ
;
..æ ø
List00 
<00 
Envio00 
>00 &
enviosFacturasConExcepcion00  :
=00; <*
enviosIndividualesConExcepcion00= [
.00[ \
Where00\ a
(00a b
e00b c
=>00d f
e00g h
.00h i
EnvioDocumento00i w
.00w x
FirstOrDefault	00x Ü
(
00Ü á
)
00á à
.
00à â
	Documento
00â í
.
00í ì#
codigoTipoComprobante
00ì ®
==
00© ´
MaestroSettings
00¨ ª
.
00ª º
Default
00º √
.
00√ ƒ)
CodigoDetalleMaestroFactura
00ƒ ﬂ
)
00ﬂ ‡
.
00‡ ·
ToList
00· Á
(
00Á Ë
)
00Ë È
;
00È Í
List22 
<22 
Envio22 
>22 #
enviosGuiasConExcepcion22  7
=228 9*
enviosIndividualesConExcepcion22: X
.22X Y
Where22Y ^
(22^ _
e22_ `
=>22a c
e22d e
.22e f
EnvioDocumento22f t
.22t u
FirstOrDefault	22u É
(
22É Ñ
)
22Ñ Ö
.
22Ö Ü
	Documento
22Ü è
.
22è ê#
codigoTipoComprobante
22ê •
==
22¶ ®
MaestroSettings
22© ∏
.
22∏ π
Default
22π ¿
.
22¿ ¡9
+CodigoDetalleMaestroGuiaDeRemisionRemitente
22¡ Ï
)
22Ï Ì
.
22Ì Ó
ToList
22Ó Ù
(
22Ù ı
)
22ı ˆ
;
22ˆ ˜
List44 
<44 
Envio44 
>44 *
enviosNotasCreditoConExcepcion44  >
=44? @*
enviosIndividualesConExcepcion44A _
.44_ `
Where44` e
(44e f
e44f g
=>44h j
e44k l
.44l m
EnvioDocumento44m {
.44{ |
FirstOrDefault	44| ä
(
44ä ã
)
44ã å
.
44å ç
	Documento
44ç ñ
.
44ñ ó#
codigoTipoComprobante
44ó ¨
==
44≠ Ø
MaestroSettings
44∞ ø
.
44ø ¿
Default
44¿ «
.
44« »/
!CodigoDetalleMaestroNotaDeCredito
44» È
)
44È Í
.
44Í Î
ToList
44Î Ò
(
44Ò Ú
)
44Ú Û
;
44Û Ù
List55 
<55 
Envio55 
>55 )
enviosNotasDebitoConExcepcion55  =
=55> ?*
enviosIndividualesConExcepcion55@ ^
.55^ _
Where55_ d
(55d e
e55e f
=>55g i
e55j k
.55k l
EnvioDocumento55l z
.55z {
FirstOrDefault	55{ â
(
55â ä
)
55ä ã
.
55ã å
	Documento
55å ï
.
55ï ñ#
codigoTipoComprobante
55ñ ´
==
55¨ Æ
MaestroSettings
55Ø æ
.
55æ ø
Default
55ø ∆
.
55∆ «.
 CodigoDetalleMaestroNotaDeDebito
55« Á
)
55Á Ë
.
55Ë È
ToList
55È Ô
(
55Ô 
)
55 Ò
;
55Ò Ú-
!ResolverResumenDiarioConExcepcion88 5
(885 6
sede886 :
,88: ;;
/enviosResumenDiariosDeBoletasYNotasConExcepcion88< k
,88k l 
logEnvioFacturacion	88m Ä
.
88Ä Å
BoletasVenta
88Å ç
)
88ç é
;
88é è-
!ResolverEnvioFacturasConExcepcion:: 5
(::5 6&
enviosFacturasConExcepcion::6 P
,::P Q
logEnvioFacturacion::R e
.::e f
Factura::f m
)::m n
;::n o1
%ResolverEnvioNotasCreditoConExcepcion<< 9
(<<9 :*
enviosNotasCreditoConExcepcion<<: X
,<<X Y)
enviosNotasDebitoConExcepcion<<Z w
,<<w x 
logEnvioFacturacion	<<y å
.
<<å ç
NotaCredito
<<ç ò
)
<<ò ô
;
<<ô ö0
$ResolverComunicacionBajaConExcepcion>> 8
(>>8 9
sede>>9 =
,>>= >.
"enviosComunicacionBajaConExcepcion>>? a
,>>a b
logEnvioFacturacion>>c v
.>>v w
Factura>>w ~
)>>~ 
;	>> Ä
}?? 
return@@ 
new@@ 
OperationResult@@ *
(@@* +
OperationResultEnum@@+ >
.@@> ?
Success@@? F
,@@F G
$str@@H c
,@@c d
$str@@e i
)@@i j
;@@j k
}AA 
catchBB 
(BB 
	ExceptionBB 
eBB 
)BB 
{CC 
throwDD 
newDD 
	ExceptionDD #
(DD# $
$strDD$ j
,DDj k
eDDl m
)DDm n
;DDn o
}EE 
}FF 	
publicHH 
OperationResultHH -
!ResolverResumenDiarioConExcepcionHH @
(HH@ A-
!EstablecimientoComercialExtendidoHHA b
sedeHHc g
,HHg h
ListHHi m
<HHm n
EnvioHHn s
>HHs t
enviosConExcepcion	HHu á
,
HHá à
LogEnvio
HHâ ë
logEnvio
HHí ö
)
HHö õ
{II 	
tryJJ 
{KK 
OperationResultLL 
resultLL  &
=LL' (
nullLL) -
;LL- .
foreachMM 
(MM 
EnvioMM 
envioMM $
inMM% '
enviosConExcepcionMM( :
)MM: ;
{NN 
ifOO 
(OO 
	ModoEnvioOO !
.OO! "
	AnulacionOO" +
==OO, .
(OO/ 0
	ModoEnvioOO0 9
)OO9 :
envioOO: ?
.OO? @
	modoEnvioOO@ I
)OOI J
{PP 
	DocumentoQQ !
[QQ! "
]QQ" #)
documentosDeEnvioConExcepcionQQ$ A
=QQB C
envioQQD I
.QQI J
EnvioDocumentoQQJ X
.QQX Y
SelectQQY _
(QQ_ `
edQQ` b
=>QQc e
edQQf h
.QQh i
	DocumentoQQi r
)QQr s
.QQs t
ToArrayQQt {
(QQ{ |
)QQ| }
;QQ} ~
varRR 1
%resultResolverResumenDiarioInvalidadoRR A
=RRB C,
 ResolverResumenDiarioInvalidadosRRD d
(RRd e
sedeRRe i
,RRi j*
documentosDeEnvioConExcepcion	RRk à
)
RRà â
;
RRâ ä
UtilSS 
.SS +
ManejoEnLogicaResultadoSinExitoSS <
(SS< =1
%resultResolverResumenDiarioInvalidadoSS= b
,SSb c
$str	SSd ¨
)
SS¨ ≠
;
SS≠ Æ
}TT 
elseUU 
{VV 
	DocumentoWW !
[WW! "
]WW" #)
documentosDeEnvioConExcepcionWW$ A
=WWB C
envioWWD I
.WWI J
EnvioDocumentoWWJ X
.WWX Y
SelectWWY _
(WW_ `
edWW` b
=>WWc e
edWWf h
.WWh i
	DocumentoWWi r
)WWr s
.WWs t
ToArrayWWt {
(WW{ |
)WW| }
;WW} ~
varXX '
resultResolverResumenDiarioXX 7
=XX8 9'
ResolverResumenDiarioPorDiaXX: U
(XXU V
sedeXXV Z
,XXZ [)
documentosDeEnvioConExcepcionXX\ y
,XXy z
logEnvio	XX{ É
)
XXÉ Ñ
;
XXÑ Ö
UtilYY 
.YY +
ManejoEnLogicaResultadoSinExitoYY <
(YY< ='
resultResolverResumenDiarioYY= X
,YYX Y
$str	YYZ ñ
)
YYñ ó
;
YYó ò
}ZZ 
}[[ 
var\\ 5
)resultActualizarEstadosEnviosConExcepcion\\ =
=\\> ?/
#ActualizarEstadosEnviosConExcepcion\\@ c
(\\c d
enviosConExcepcion\\d v
)\\v w
;\\w x
Util]] 
.]] +
ManejoEnLogicaResultadoSinExito]] 4
(]]4 55
)resultActualizarEstadosEnviosConExcepcion]]5 ^
,]]^ _
$str	]]` ≤
)
]]≤ ≥
;
]]≥ ¥
result^^ 
=^^ 
new^^ 
OperationResult^^ ,
(^^, -
OperationResultEnum^^- @
.^^@ A
Success^^A H
,^^H I
$str^^J e
,^^e f
$str^^g k
)^^k l
;^^l m
return__ 
result__ 
;__ 
}`` 
catchaa 
(aa 
	Exceptionaa 
eaa 
)aa 
{bb 
throwcc 
newcc 
LogicaExceptioncc )
(cc) *
$strcc* ]
,cc] ^
ecc_ `
)cc` a
;cca b
}dd 
}ee 	
publicgg 
OperationResultgg -
!ResolverEnvioFacturasConExcepciongg @
(gg@ A
ListggA E
<ggE F
EnvioggF K
>ggK L
enviosConExcepcionggM _
,gg_ `
LogEnviogga i
logEnvioggj r
)ggr s
{hh 	
tryii 
{jj 
OperationResultkk 
resultkk  &
=kk' (
nullkk) -
;kk- .
ifll 
(ll 
enviosConExcepcionll &
.ll& '
Countll' ,
>ll- .
$numll/ 0
)ll0 1
{mm 
varnn )
resultResolverEnvioIndividualnn 5
=nn6 7#
ResolverEnvioIndividualnn8 O
(nnO P
enviosConExcepcionnnP b
.nnb c

SelectManynnc m
(nnm n
ennn o
=>nnp r
enns t
.nnt u
EnvioDocumento	nnu É
)
nnÉ Ñ
.
nnÑ Ö
Select
nnÖ ã
(
nnã å
ed
nnå é
=>
nnè ë
ed
nní î
.
nnî ï
	Documento
nnï û
)
nnû ü
.
nnü †
ToArray
nn† ß
(
nnß ®
)
nn® ©
,
nn© ™
logEnvio
nn´ ≥
)
nn≥ ¥
;
nn¥ µ
Utilpp 
.pp +
ManejoEnLogicaResultadoSinExitopp 8
(pp8 9)
resultResolverEnvioIndividualpp9 V
,ppV W
$str	ppX é
)
ppé è
;
ppè ê
varqq 5
)resultActualizarEstadosEnviosConExcepcionqq A
=qqB C/
#ActualizarEstadosEnviosConExcepcionqqD g
(qqg h
enviosConExcepcionqqh z
)qqz {
;qq{ |
Utilrr 
.rr +
ManejoEnLogicaResultadoSinExitorr 8
(rr8 95
)resultActualizarEstadosEnviosConExcepcionrr9 b
,rrb c
$str	rrd ∂
)
rr∂ ∑
;
rr∑ ∏
resultss 
=ss 
newss  
OperationResultss! 0
(ss0 1
OperationResultEnumss1 D
.ssD E
SuccessssE L
,ssL M
$strssN i
,ssi j
$strssk o
)sso p
;ssp q
}tt 
returnuu 
resultuu 
;uu 
}vv 
catchww 
(ww 
	Exceptionww 
eww 
)ww 
{xx 
throwyy 
newyy 
LogicaExceptionyy )
(yy) *
$stryy* `
,yy` a
eyyb c
)yyc d
;yyd e
}zz 
}{{ 	
public}} 
OperationResult}} 1
%ResolverEnvioNotasCreditoConExcepcion}} D
(}}D E
List}}E I
<}}I J
Envio}}J O
>}}O P$
notasCreditoConExcepcion}}Q i
,}}i j
List}}k o
<}}o p
Envio}}p u
>}}u v$
notasDebitoConExcepcion	}}w é
,
}}é è
LogEnvio
}}ê ò
logEnvio
}}ô °
)
}}° ¢
{~~ 	
try 
{
ÄÄ 
OperationResult
ÅÅ 
result
ÅÅ  &
=
ÅÅ' (
null
ÅÅ) -
;
ÅÅ- .
if
ÇÇ 
(
ÇÇ &
notasCreditoConExcepcion
ÇÇ ,
.
ÇÇ, -
Count
ÇÇ- 2
>
ÇÇ3 4
$num
ÇÇ5 6
)
ÇÇ6 7
{
ÉÉ 
var
ÑÑ &
resultResolverEnvioNotas
ÑÑ 0
=
ÑÑ1 2 
ResolverEnvioNotas
ÑÑ3 E
(
ÑÑE F&
notasCreditoConExcepcion
ÑÑF ^
.
ÑÑ^ _

SelectMany
ÑÑ_ i
(
ÑÑi j
e
ÑÑj k
=>
ÑÑl n
e
ÑÑo p
.
ÑÑp q
EnvioDocumento
ÑÑq 
)ÑÑ Ä
.ÑÑÄ Å
SelectÑÑÅ á
(ÑÑá à
edÑÑà ä
=>ÑÑã ç
edÑÑé ê
.ÑÑê ë
	DocumentoÑÑë ö
)ÑÑö õ
.ÑÑõ ú
ToArrayÑÑú £
(ÑÑ£ §
)ÑÑ§ •
,ÑÑ• ¶
logEnvioÑÑß Ø
)ÑÑØ ∞
;ÑÑ∞ ±
Util
ÖÖ 
.
ÖÖ -
ManejoEnLogicaResultadoSinExito
ÖÖ 8
(
ÖÖ8 9&
resultResolverEnvioNotas
ÖÖ9 Q
,
ÖÖQ R
$strÖÖS é
)ÖÖé è
;ÖÖè ê
var
ÜÜ 7
)resultActualizarEstadosEnviosConExcepcion
ÜÜ A
=
ÜÜB C1
#ActualizarEstadosEnviosConExcepcion
ÜÜD g
(
ÜÜg h'
notasCreditoConExcepcionÜÜh Ä
)ÜÜÄ Å
;ÜÜÅ Ç
Util
áá 
.
áá -
ManejoEnLogicaResultadoSinExito
áá 8
(
áá8 97
)resultActualizarEstadosEnviosConExcepcion
áá9 b
,
ááb c
$stráád ∂
)áá∂ ∑
;áá∑ ∏
result
àà 
=
àà 
new
àà  
OperationResult
àà! 0
(
àà0 1!
OperationResultEnum
àà1 D
.
ààD E
Success
ààE L
,
ààL M
$str
ààN i
,
àài j
$str
ààk o
)
àào p
;
ààp q
}
ââ 
return
ää 
result
ää 
;
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
LogicaException
éé )
(
éé) *
$str
éé* e
,
éée f
e
éég h
)
ééh i
;
ééi j
}
èè 
}
êê 	
public
ëë 
OperationResult
ëë 2
$ResolverEnvioNotasDebitoConExcepcion
ëë C
(
ëëC D
List
ëëD H
<
ëëH I
Envio
ëëI N
>
ëëN O&
notasCreditoConExcepcion
ëëP h
,
ëëh i
List
ëëj n
<
ëën o
Envio
ëëo t
>
ëët u&
notasDebitoConExcepcionëëv ç
,ëëç é
LogEnvioëëè ó
logEnvioëëò †
)ëë† °
{
íí 	
try
ìì 
{
îî 
OperationResult
ïï 
result
ïï  &
=
ïï' (
null
ïï) -
;
ïï- .
if
ññ 
(
ññ %
notasDebitoConExcepcion
ññ +
.
ññ+ ,
Count
ññ, 1
>
ññ2 3
$num
ññ4 5
)
ññ5 6
{
óó 
var
òò &
resultResolverEnvioNotas
òò 0
=
òò1 2 
ResolverEnvioNotas
òò3 E
(
òòE F%
notasDebitoConExcepcion
òòF ]
.
òò] ^

SelectMany
òò^ h
(
òòh i
e
òòi j
=>
òòk m
e
òòn o
.
òòo p
EnvioDocumento
òòp ~
)
òò~ 
.òò Ä
SelectòòÄ Ü
(òòÜ á
edòòá â
=>òòä å
edòòç è
.òòè ê
	Documentoòòê ô
)òòô ö
.òòö õ
ToArrayòòõ ¢
(òò¢ £
)òò£ §
,òò§ •
logEnvioòò¶ Æ
)òòÆ Ø
;òòØ ∞
Util
ôô 
.
ôô -
ManejoEnLogicaResultadoSinExito
ôô 8
(
ôô8 9&
resultResolverEnvioNotas
ôô9 Q
,
ôôQ R
$strôôS ç
)ôôç é
;ôôé è
var
öö 7
)resultActualizarEstadosEnviosConExcepcion
öö A
=
ööB C1
#ActualizarEstadosEnviosConExcepcion
ööD g
(
öög h%
notasDebitoConExcepcion
ööh 
)öö Ä
;ööÄ Å
Util
õõ 
.
õõ -
ManejoEnLogicaResultadoSinExito
õõ 8
(
õõ8 97
)resultActualizarEstadosEnviosConExcepcion
õõ9 b
,
õõb c
$strõõd ∂
)õõ∂ ∑
;õõ∑ ∏
result
úú 
=
úú 
new
úú  
OperationResult
úú! 0
(
úú0 1!
OperationResultEnum
úú1 D
.
úúD E
Success
úúE L
,
úúL M
$str
úúN i
,
úúi j
$str
úúk o
)
úúo p
;
úúp q
}
ùù 
return
ûû 
result
ûû 
;
ûû 
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ )
(
¢¢) *
$str
¢¢* d
,
¢¢d e
e
¢¢f g
)
¢¢g h
;
¢¢h i
}
££ 
}
§§ 	
public
¶¶ 
OperationResult
¶¶ 2
$ResolverComunicacionBajaConExcepcion
¶¶ C
(
¶¶C D/
!EstablecimientoComercialExtendido
¶¶D e
sede
¶¶f j
,
¶¶j k
List
¶¶l p
<
¶¶p q
Envio
¶¶q v
>
¶¶v w!
enviosConExcepcion¶¶x ä
,¶¶ä ã
LogEnvio¶¶å î
logEnvio¶¶ï ù
)¶¶ù û
{
ßß 	
try
®® 
{
©© 
OperationResult
™™ 
result
™™  &
=
™™' (
null
™™) -
;
™™- .
if
´´ 
(
´´  
enviosConExcepcion
´´ &
.
´´& '
Count
´´' ,
>
´´- .
$num
´´/ 0
)
´´0 1
{
¨¨ 
var
≠≠ ,
resultResolverComunicacionBaja
≠≠ 6
=
≠≠7 8&
ResolverComunicacionBaja
≠≠9 Q
(
≠≠Q R
sede
≠≠R V
,
≠≠V W 
enviosConExcepcion
≠≠X j
.
≠≠j k

SelectMany
≠≠k u
(
≠≠u v
e
≠≠v w
=>
≠≠x z
e
≠≠{ |
.
≠≠| }
EnvioDocumento≠≠} ã
)≠≠ã å
.≠≠å ç
Select≠≠ç ì
(≠≠ì î
ed≠≠î ñ
=>≠≠ó ô
ed≠≠ö ú
.≠≠ú ù
	Documento≠≠ù ¶
)≠≠¶ ß
.≠≠ß ®
ToArray≠≠® Ø
(≠≠Ø ∞
)≠≠∞ ±
,≠≠± ≤
logEnvio≠≠≥ ª
)≠≠ª º
;≠≠º Ω
Util
ÆÆ 
.
ÆÆ -
ManejoEnLogicaResultadoSinExito
ÆÆ 8
(
ÆÆ8 9,
resultResolverComunicacionBaja
ÆÆ9 W
,
ÆÆW X
$strÆÆY ï
)ÆÆï ñ
;ÆÆñ ó
var
ØØ 7
)resultActualizarEstadosEnviosConExcepcion
ØØ A
=
ØØB C1
#ActualizarEstadosEnviosConExcepcion
ØØD g
(
ØØg h 
enviosConExcepcion
ØØh z
)
ØØz {
;
ØØ{ |
Util
∞∞ 
.
∞∞ -
ManejoEnLogicaResultadoSinExito
∞∞ 8
(
∞∞8 97
)resultActualizarEstadosEnviosConExcepcion
∞∞9 b
,
∞∞b c
$str∞∞d ∂
)∞∞∂ ∑
;∞∞∑ ∏
result
±± 
=
±± 
new
±±  
OperationResult
±±! 0
(
±±0 1!
OperationResultEnum
±±1 D
.
±±D E
Success
±±E L
,
±±L M
$str
±±N i
,
±±i j
$str
±±k o
)
±±o p
;
±±p q
}
≤≤ 
return
≥≥ 
result
≥≥ 
;
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
LogicaException
∑∑ )
(
∑∑) *
$str
∑∑* f
,
∑∑f g
e
∑∑h i
)
∑∑i j
;
∑∑j k
}
∏∏ 
}
ππ 	
public
ªª 
OperationResult
ªª 1
#ActualizarEstadosEnviosConExcepcion
ªª B
(
ªªB C
List
ªªC G
<
ªªG H
Envio
ªªH M
>
ªªM N
envios
ªªO U
)
ªªU V
{
ºº 	
try
ΩΩ 
{
ææ 
OperationResult
øø 
result
øø  &
=
øø' (
new
øø) ,
OperationResult
øø- <
(
øø< =
)
øø= >
;
øø> ?
foreach
¿¿ 
(
¿¿ 
var
¿¿ 
envio
¿¿ "
in
¿¿# %
envios
¿¿& ,
)
¿¿, -
{
¡¡ 
envio
¬¬ 
.
¬¬ 
estado
¬¬  
=
¬¬! "
(
¬¬# $
int
¬¬$ '
)
¬¬' (
EstadoEnvio
¬¬( 3
.
¬¬3 4$
DescartadoPorExcepcion
¬¬4 J
;
¬¬J K
result
√√ 
=
√√ #
ActualizarEstadoEnvio
√√ 2
(
√√2 3
envio
√√3 8
)
√√8 9
;
√√9 :
}
ƒƒ 
return
≈≈ 
result
≈≈ 
;
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
new
…… 
LogicaException
…… )
(
……) *
$str
……* c
,
……c d
e
……e f
)
……f g
;
……g h
}
   
}
ÀÀ 	
}
œœ 
}–– Ê¶
fD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_ReenvioRechazados.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public"" 
OperationResult"" "
ResolverEnvioRechazado"" 5
(""5 6
int""6 9
idEnvio"": A
)""A B
{## 	
try$$ 
{%% *
LogEnvioFacturacionElectronica&& .
logEnvioFacturacion&&/ B
=&&C D
new&&E H*
LogEnvioFacturacionElectronica&&I g
(&&g h
)&&h i
;&&i j
OperationResult'' 
result''  &
=''' (
null'') -
;''- .
Envio(( 
envio(( 
=(( 
ObtenerEnvio(( *
(((* +
idEnvio((+ 2
)((2 3
;((3 4
var)) 
documentoPrevio)) #
=))$ %6
*ObtenerDocumentoElectronicoIncluidoBinario))& P
())P Q
envio))Q V
.))V W
EnvioDocumento))W e
.))e f
First))f k
())k l
)))l m
.))m n
	Documento))n w
.))w x
id))x z
)))z {
;)){ |
bool**  
envioEstaEnPendiente** )
=*** +
false**, 1
;**1 2
if++ 
(++ 
$num++ 
==++ 
documentoPrevio++ (
.++( )
EnvioDocumento++) 7
.++7 8
Where++8 =
(++= >
ed++> @
=>++A C
ed++D F
.++F G
Envio++G L
.++L M
estado++M S
==++T V
(++W X
int++X [
)++[ \
EstadoEnvio++\ g
.++g h
	Pendiente++h q
)++q r
.++r s
Count++s x
(++x y
)++y z
)++z {
{,,  
envioEstaEnPendiente-- (
=--) *
true--+ /
;--/ 0
}.. 
if// 
(//  
envioEstaEnPendiente// (
)//( )
{00 
ConsultarTickets11 $
(11$ %
)11% &
;11& '
var22 
documentoConsultado22 +
=22, -6
*ObtenerDocumentoElectronicoIncluidoBinario22. X
(22X Y
envio22Y ^
.22^ _
EnvioDocumento22_ m
.22m n
First22n s
(22s t
)22t u
.22u v
	Documento22v 
.	22 Ä
id
22Ä Ç
)
22Ç É
;
22É Ñ
if33 
(33 
$num33 
==33 
documentoPrevio33 ,
.33, -
EnvioDocumento33- ;
.33; <
Where33< A
(33A B
ed33B D
=>33E G
ed33H J
.33J K
Envio33K P
.33P Q
estado33Q W
==33X Z
(33[ \
int33\ _
)33_ `
EstadoEnvio33` k
.33k l
	Pendiente33l u
)33u v
.33v w
Count33w |
(33| }
)33} ~
)33~ 
{44 
var55 0
$resultActualizarEstadoEnvioRechazado55 @
=55A B*
ActualizarEstadoEnvioRechazado55C a
(55a b
envio55b g
)55g h
;55h i
Util66 
.66 +
ManejoEnLogicaResultadoSinExito66 <
(66< =
result66= C
,66C D
$str	66E ë
)
66ë í
;
66í ì
}77 
else88 
{99 
throw:: 
new:: !
LogicaException::" 1
(::1 2
$str::2 b
)::b c
;::c d
};; 
}<< 
else== 
{>> -
!EstablecimientoComercialExtendido?? 5
sede??6 :
=??; <
_sedeLogica??= H
.??H I 
ObtenerSedeExtendida??I ]
(??] ^
)??^ _
;??_ `
List@@ 
<@@ 
string@@ 
>@@  
codigosNotas@@! -
=@@. /
new@@0 3
List@@4 8
<@@8 9
string@@9 ?
>@@? @
{@@A B
MaestroSettings@@C R
.@@R S
Default@@S Z
.@@Z [-
!CodigoDetalleMaestroNotaDeCredito@@[ |
,@@| }
MaestroSettings	@@~ ç
.
@@ç é
Default
@@é ï
.
@@ï ñ.
 CodigoDetalleMaestroNotaDeDebito
@@ñ ∂
}
@@∑ ∏
;
@@∏ π
ifAA 
(AA 
envioAA 
.AA 
	tipoEnvioAA '
==AA( **
FacturacionElectronicaSettingsAA+ I
.AAI J
DefaultAAJ Q
.AAQ R
TipoEnvioIndividualAAR e
)AAe f
{BB 
ifCC 
(CC 
envioCC !
.CC! "
EnvioDocumentoCC" 0
.CC0 1
FirstOrDefaultCC1 ?
(CC? @
)CC@ A
.CCA B
	DocumentoCCB K
.CCK L!
codigoTipoComprobanteCCL a
==CCb d
MaestroSettingsCCe t
.CCt u
DefaultCCu |
.CC| }(
CodigoDetalleMaestroFactura	CC} ò
)
CCò ô
{DD 
resultEE "
=EE# $ 
ResolverEnvioFacturaEE% 9
(EE9 :
envioEE: ?
)EE? @
;EE@ A
}FF 
elseGG 
ifGG 
(GG  !
codigosNotasGG! -
.GG- .
ContainsGG. 6
(GG6 7
envioGG7 <
.GG< =
EnvioDocumentoGG= K
.GGK L
FirstOrDefaultGGL Z
(GGZ [
)GG[ \
.GG\ ]
	DocumentoGG] f
.GGf g!
codigoTipoComprobanteGGg |
)GG| }
)GG} ~
{HH 
resultII "
=II# $
ResolverEnvioNotaII% 6
(II6 7
envioII7 <
)II< =
;II= >
}JJ 
}KK 
elseLL 
ifLL 
(LL 
envioLL "
.LL" #
	tipoEnvioLL# ,
==LL- /*
FacturacionElectronicaSettingsLL0 N
.LLN O
DefaultLLO V
.LLV W"
TipoEnvioResumenDiarioLLW m
)LLm n
{MM 
resultNN 
=NN  !
ResolverResumenDiarioNN! 6
(NN6 7
sedeNN7 ;
,NN; <
envioNN= B
)NNB C
;NNC D
}OO 
elsePP 
ifPP 
(PP 
envioPP "
.PP" #
	tipoEnvioPP# ,
==PP- /*
FacturacionElectronicaSettingsPP0 N
.PPN O
DefaultPPO V
.PPV W'
TipoEnvioComunicacionDeBajaPPW r
)PPr s
{QQ 
resultRR 
=RR  $
ResolverComunicacionBajaRR! 9
(RR9 :
sedeRR: >
,RR> ?
envioRR@ E
)RRE F
;RRF G
}SS 
UtilTT 
.TT +
ManejoEnLogicaResultadoSinExitoTT 8
(TT8 9
resultTT9 ?
,TT? @
$strTTA g
)TTg h
;TTh i
varUU 0
$resultActualizarEstadoEnvioRechazadoUU <
=UU= >*
ActualizarEstadoEnvioRechazadoUU? ]
(UU] ^
envioUU^ c
)UUc d
;UUd e
UtilVV 
.VV +
ManejoEnLogicaResultadoSinExitoVV 8
(VV8 9
resultVV9 ?
,VV? @
$str	VVA ç
)
VVç é
;
VVé è
}WW 
returnXX 
newXX 
OperationResultXX *
(XX* +
OperationResultEnumXX+ >
.XX> ?
SuccessXX? F
,XXF G
$strXXH c
,XXc d
$strXXe i
)XXi j
;XXj k
}YY 
catchZZ 
(ZZ 
	ExceptionZZ 
eZZ 
)ZZ 
{[[ 
throw\\ 
new\\ 
LogicaException\\ )
(\\) *
$str\\* Y
,\\Y Z
e\\[ \
)\\\ ]
;\\] ^
}]] 
}^^ 	
public`` 
OperationResult`` "
ResolverEnvioPendiente`` 5
(``5 6
int``6 9
idEnvio``: A
)``A B
{aa 	
trybb 
{cc 
OperationResultdd 
resultdd  &
=dd' (
nulldd) -
;dd- .
Envioee 
envioee 
=ee 
ObtenerEnvioee *
(ee* +
idEnvioee+ 2
)ee2 3
;ee3 4-
!EstablecimientoComercialExtendidoff 1
sedeff2 6
=ff7 8
_sedeLogicaff9 D
.ffD E 
ObtenerSedeExtendidaffE Y
(ffY Z
)ffZ [
;ff[ \
Listgg 
<gg 
stringgg 
>gg 
codigosNotasgg )
=gg* +
newgg, /
Listgg0 4
<gg4 5
stringgg5 ;
>gg; <
{gg= >
MaestroSettingsgg? N
.ggN O
DefaultggO V
.ggV W-
!CodigoDetalleMaestroNotaDeCreditoggW x
,ggx y
MaestroSettings	ggz â
.
ggâ ä
Default
ggä ë
.
ggë í.
 CodigoDetalleMaestroNotaDeDebito
ggí ≤
}
gg≥ ¥
;
gg¥ µ
ifhh 
(hh 
enviohh 
.hh 
	tipoEnviohh #
==hh$ &*
FacturacionElectronicaSettingshh' E
.hhE F
DefaulthhF M
.hhM N
TipoEnvioIndividualhhN a
)hha b
{ii 
ifjj 
(jj 
enviojj 
.jj 
EnvioDocumentojj ,
.jj, -
FirstOrDefaultjj- ;
(jj; <
)jj< =
.jj= >
	Documentojj> G
.jjG H!
codigoTipoComprobantejjH ]
==jj^ `
MaestroSettingsjja p
.jjp q
Defaultjjq x
.jjx y(
CodigoDetalleMaestroFactura	jjy î
)
jjî ï
{kk 
resultll 
=ll   
ResolverEnvioFacturall! 5
(ll5 6
envioll6 ;
)ll; <
;ll< =
}mm 
elsenn 
ifnn 
(nn 
codigosNotasnn )
.nn) *
Containsnn* 2
(nn2 3
envionn3 8
.nn8 9
EnvioDocumentonn9 G
.nnG H
FirstOrDefaultnnH V
(nnV W
)nnW X
.nnX Y
	DocumentonnY b
.nnb c!
codigoTipoComprobantennc x
)nnx y
)nny z
{oo 
resultpp 
=pp  
ResolverEnvioNotapp! 2
(pp2 3
enviopp3 8
)pp8 9
;pp9 :
}qq 
}rr 
elsess 
ifss 
(ss 
envioss 
.ss 
	tipoEnvioss (
==ss) +*
FacturacionElectronicaSettingsss, J
.ssJ K
DefaultssK R
.ssR S"
TipoEnvioResumenDiariossS i
)ssi j
{tt 
resultuu 
=uu !
ResolverResumenDiariouu 2
(uu2 3
sedeuu3 7
,uu7 8
enviouu9 >
)uu> ?
;uu? @
}vv 
elseww 
ifww 
(ww 
envioww 
.ww 
	tipoEnvioww (
==ww) +*
FacturacionElectronicaSettingsww, J
.wwJ K
DefaultwwK R
.wwR S'
TipoEnvioComunicacionDeBajawwS n
)wwn o
{xx 
resultyy 
=yy $
ResolverComunicacionBajayy 5
(yy5 6
sedeyy6 :
,yy: ;
envioyy< A
)yyA B
;yyB C
}zz 
Util{{ 
.{{ +
ManejoEnLogicaResultadoSinExito{{ 4
({{4 5
result{{5 ;
,{{; <
$str{{= c
){{c d
;{{d e
var|| 0
$resultActualizarEstadoEnvioPendiente|| 8
=||9 :*
ActualizarEstadoEnvioPendiente||; Y
(||Y Z
envio||Z _
)||_ `
;||` a
Util}} 
.}} +
ManejoEnLogicaResultadoSinExito}} 4
(}}4 5
result}}5 ;
,}}; <
$str}}= }
)}}} ~
;}}~ 
return 
new 
OperationResult *
(* +
OperationResultEnum+ >
.> ?
Success? F
,F G
$strH c
,c d
$stre i
)i j
;j k
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
e
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
LogicaException
ÉÉ )
(
ÉÉ) *
$str
ÉÉ* Y
,
ÉÉY Z
e
ÉÉ[ \
)
ÉÉ\ ]
;
ÉÉ] ^
}
ÑÑ 
}
ÖÖ 	
public
áá 
OperationResult
áá #
ResolverResumenDiario
áá 4
(
áá4 5/
!EstablecimientoComercialExtendido
áá5 V
sede
ááW [
,
áá[ \
Envio
áá] b
envio
áác h
)
ááh i
{
àà 	
try
ââ 
{
ää 
OperationResult
ãã 
result
ãã  &
;
ãã& '
if
åå 
(
åå 
envio
åå 
.
åå 
	modoEnvio
åå #
==
åå$ &
(
åå' (
int
åå( +
)
åå+ ,
	ModoEnvio
åå, 5
.
åå5 6
Adicion
åå6 =
)
åå= >
{
çç 
result
éé 
=
éé )
ResolverResumenDiarioPorDia
éé 8
(
éé8 9
sede
éé9 =
,
éé= >
envio
éé? D
.
ééD E
EnvioDocumento
ééE S
.
ééS T
Select
ééT Z
(
ééZ [
ed
éé[ ]
=>
éé^ `
ed
ééa c
.
ééc d
	Documento
ééd m
)
éém n
.
één o
ToArray
ééo v
(
éév w
)
ééw x
,
ééx y
new
ééz }
LogEnvioéé~ Ü
(ééÜ á
)ééá à
)ééà â
;ééâ ä
Util
èè 
.
èè -
ManejoEnLogicaResultadoSinExito
èè 8
(
èè8 9
result
èè9 ?
,
èè? @
$str
èèA f
)
èèf g
;
èèg h
}
êê 
else
ëë 
{
íí 
result
ìì 
=
ìì .
 ResolverResumenDiarioInvalidados
ìì =
(
ìì= >
sede
ìì> B
,
ììB C
envio
ììD I
.
ììI J
EnvioDocumento
ììJ X
.
ììX Y
Select
ììY _
(
ìì_ `
ed
ìì` b
=>
ììc e
ed
ììf h
.
ììh i
	Documento
ììi r
)
ììr s
.
ììs t
ToArray
ììt {
(
ìì{ |
)
ìì| }
)
ìì} ~
;
ìì~ 
Util
îî 
.
îî -
ManejoEnLogicaResultadoSinExito
îî 8
(
îî8 9
result
îî9 ?
,
îî? @
$str
îîA f
)
îîf g
;
îîg h
}
ïï 
return
ññ 
result
ññ 
;
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
throw
öö 
new
öö 
LogicaException
öö )
(
öö) *
$str
öö* O
,
ööO P
e
ööQ R
)
ööR S
;
ööS T
}
õõ 
}
úú 	
public
ûû 
OperationResult
ûû "
ResolverEnvioFactura
ûû 3
(
ûû3 4
Envio
ûû4 9
envio
ûû: ?
)
ûû? @
{
üü 	
try
†† 
{
°° 
OperationResult
¢¢ 
result
¢¢  &
=
¢¢' (%
ResolverEnvioIndividual
¢¢) @
(
¢¢@ A
envio
¢¢A F
.
¢¢F G
EnvioDocumento
¢¢G U
.
¢¢U V
Select
¢¢V \
(
¢¢\ ]
ed
¢¢] _
=>
¢¢` b
ed
¢¢c e
.
¢¢e f
	Documento
¢¢f o
)
¢¢o p
.
¢¢p q
ToArray
¢¢q x
(
¢¢x y
)
¢¢y z
,
¢¢z {
new
¢¢| 
LogEnvio¢¢Ä à
(¢¢à â
)¢¢â ä
)¢¢ä ã
;¢¢ã å
Util
££ 
.
££ -
ManejoEnLogicaResultadoSinExito
££ 4
(
££4 5
result
££5 ;
,
££; <
$str
££= d
)
££d e
;
££e f
return
§§ 
result
§§ 
;
§§ 
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* Q
,
®®Q R
e
®®S T
)
®®T U
;
®®U V
}
©© 
}
™™ 	
public
¨¨ 
OperationResult
¨¨ 
ResolverEnvioNota
¨¨ 0
(
¨¨0 1
Envio
¨¨1 6
envio
¨¨7 <
)
¨¨< =
{
≠≠ 	
try
ÆÆ 
{
ØØ 
OperationResult
∞∞ 
result
∞∞  &
=
∞∞' ( 
ResolverEnvioNotas
∞∞) ;
(
∞∞; <
envio
∞∞< A
.
∞∞A B
EnvioDocumento
∞∞B P
.
∞∞P Q
Select
∞∞Q W
(
∞∞W X
ed
∞∞X Z
=>
∞∞[ ]
ed
∞∞^ `
.
∞∞` a
	Documento
∞∞a j
)
∞∞j k
.
∞∞k l
ToArray
∞∞l s
(
∞∞s t
)
∞∞t u
,
∞∞u v
new
∞∞w z
LogEnvio∞∞{ É
(∞∞É Ñ
)∞∞Ñ Ö
)∞∞Ö Ü
;∞∞Ü á
Util
±± 
.
±± -
ManejoEnLogicaResultadoSinExito
±± 4
(
±±4 5
result
±±5 ;
,
±±; <
$str
±±= a
)
±±a b
;
±±b c
return
≤≤ 
result
≤≤ 
;
≤≤ 
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∂∂ 
new
∂∂ 
LogicaException
∂∂ )
(
∂∂) *
$str
∂∂* O
,
∂∂O P
e
∂∂Q R
)
∂∂R S
;
∂∂S T
}
∑∑ 
}
∏∏ 	
public
∫∫ 
OperationResult
∫∫ &
ResolverComunicacionBaja
∫∫ 7
(
∫∫7 8/
!EstablecimientoComercialExtendido
∫∫8 Y
sede
∫∫Z ^
,
∫∫^ _
Envio
∫∫` e
envio
∫∫f k
)
∫∫k l
{
ªª 	
try
ºº 
{
ΩΩ 
OperationResult
ææ 
result
ææ  &
=
ææ' (&
ResolverComunicacionBaja
ææ) A
(
ææA B
sede
ææB F
,
ææF G
envio
ææH M
.
ææM N
EnvioDocumento
ææN \
.
ææ\ ]
Select
ææ] c
(
ææc d
ed
ææd f
=>
ææg i
ed
ææj l
.
ææl m
	Documento
ææm v
)
ææv w
.
ææw x
ToArray
ææx 
(ææ Ä
)ææÄ Å
,ææÅ Ç
newææÉ Ü
LogEnvioææá è
(ææè ê
)ææê ë
)ææë í
;ææí ì
Util
øø 
.
øø -
ManejoEnLogicaResultadoSinExito
øø 4
(
øø4 5
result
øø5 ;
,
øø; <
$str
øø= i
)
øøi j
;
øøj k
return
¿¿ 
result
¿¿ 
;
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* V
,
ƒƒV W
e
ƒƒX Y
)
ƒƒY Z
;
ƒƒZ [
}
≈≈ 
}
∆∆ 	
public
»» 
OperationResult
»» ,
ActualizarEstadoEnvioPendiente
»» =
(
»»= >
Envio
»»> C
envioPendiente
»»D R
)
»»R S
{
…… 	
try
   
{
ÀÀ 
envioPendiente
ÃÃ 
.
ÃÃ 
estado
ÃÃ %
=
ÃÃ& '
(
ÃÃ( )
int
ÃÃ) ,
)
ÃÃ, -
EstadoEnvio
ÃÃ- 8
.
ÃÃ8 9

Descartado
ÃÃ9 C
;
ÃÃC D
return
ÕÕ #
ActualizarEstadoEnvio
ÕÕ ,
(
ÕÕ, -
envioPendiente
ÕÕ- ;
)
ÕÕ; <
;
ÕÕ< =
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
e
œœ 
)
œœ 
{
–– 
throw
—— 
new
—— 
LogicaException
—— )
(
——) *
$str
——* ]
,
——] ^
e
——_ `
)
——` a
;
——a b
}
““ 
}
”” 	
public
’’ 
OperationResult
’’ ,
ActualizarEstadoEnvioRechazado
’’ =
(
’’= >
Envio
’’> C
envioRechazado
’’D R
)
’’R S
{
÷÷ 	
try
◊◊ 
{
ÿÿ 
envioRechazado
ŸŸ 
.
ŸŸ 
estado
ŸŸ %
=
ŸŸ& '
(
ŸŸ( )
int
ŸŸ) ,
)
ŸŸ, -
EstadoEnvio
ŸŸ- 8
.
ŸŸ8 9"
DescartadoPorRechazo
ŸŸ9 M
;
ŸŸM N
return
⁄⁄ #
ActualizarEstadoEnvio
⁄⁄ ,
(
⁄⁄, -
envioRechazado
⁄⁄- ;
)
⁄⁄; <
;
⁄⁄< =
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
e
‹‹ 
)
‹‹ 
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
LogicaException
ﬁﬁ )
(
ﬁﬁ) *
$str
ﬁﬁ* ]
,
ﬁﬁ] ^
e
ﬁﬁ_ `
)
ﬁﬁ` a
;
ﬁﬁa b
}
ﬂﬂ 
}
‡‡ 	
}
‰‰ 
}ÂÂ ¡Œ
`D:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_Transmision.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public 
string 7
+DevolverUrlEnvioSunatFacturacionElectronica A
(A B
)B C
{ 	
return *
FacturacionElectronicaSettings 1
.1 2
Default2 9
.9 : 
EnvioSunatDesarrollo: N
?O P*
FacturacionElectronicaSettingsQ o
.o p
Defaultp w
.w x?
2URLWebServiceSunatFacturacionElectronicaDesarrollo	x ™
:
´ ¨,
FacturacionElectronicaSettings
≠ À
.
À Ã
Default
Ã ”
.
” ‘@
2URLWebServiceSunatFacturacionElectronicaProduccion
‘ Ü
;
Ü á
} 	
public 
string :
.DevolverUrlEnvioSunatGuiaDeRemisionElectronica D
(D E
)E F
{ 	
return *
FacturacionElectronicaSettings 1
.1 2
Default2 9
.9 : 
EnvioSunatDesarrollo: N
?O P*
FacturacionElectronicaSettingsQ o
.o p
Defaultp w
.w xB
5URLWebServiceSunatGuiaDeRemisionElectronicaDesarrollo	x ≠
:
Æ Ø,
FacturacionElectronicaSettings
∞ Œ
.
Œ œ
Default
œ ÷
.
÷ ◊C
5URLWebServiceSunatGuiaDeRemisionElectronicaProduccion
◊ å
;
å ç
} 	
public   
string   
ObtenerMetodoApi   &
(  & '
string  ' -
codigoTipoDocumento  . A
)  A B
{!! 	
string"" 
	metodoApi"" 
;"" 
switch## 
(## 
codigoTipoDocumento## '
)##' (
{$$ 
case%% 
$str%% 
:%% 
	metodoApi&& 
=&& 
$str&&  8
;&&8 9
break'' 
;'' 
case(( 
$str(( 
:(( 
	metodoApi)) 
=)) 
$str))  7
;))7 8
break** 
;** 
case++ 
$str++ 
:++ 
	metodoApi,, 
=,, 
$str,,  9
;,,9 :
break-- 
;-- 
default.. 
:.. 
	metodoApi// 
=// 
$str//  4
;//4 5
break00 
;00 
}11 
return22 
	metodoApi22 
;22 
}33 	
public55 
async55 
Task55 
<55 
OperationResult55 )
>55) *-
!TransmitirAFacturacionElectronica55+ L
(55L M
int55M P

idEmpleado55Q [
,55[ \-
!EstablecimientoComercialExtendido55] ~
sede	55 É
)
55É Ñ
{66 	
try77 
{88 
OperationResult99 
result99  &
=99' (
null99) -
;99- .
var:: %
detalleMaestroComprobante:: -
=::. /
await::0 5
_maestroLogica::6 D
.::D E(
ObtenerDetallesMaestrosAsync::E a
(::a b
MaestroSettings::b q
.::q r
Default::r y
.::y z
IdMaestroDocumento	::z å
)
::å ç
;
::ç é
var;; 
tiposNotasDeCredito;; '
=;;( )
await;;* /
_maestroLogica;;0 >
.;;> ?(
ObtenerDetallesMaestrosAsync;;? [
(;;[ \
MaestroSettings;;\ k
.;;k l
Default;;l s
.;;s t4
'IdMaestroTipoDeNotaDeCreditoElectronica	;;t õ
)
;;õ ú
;
;;ú ù
var<< 
tiposNotasDeDebito<< &
=<<' (
await<<) .
_maestroLogica<</ =
.<<= >(
ObtenerDetallesMaestrosAsync<<> Z
(<<Z [
MaestroSettings<<[ j
.<<j k
Default<<k r
.<<r s3
&IdMaestroTipoDeNotaDeDebitoElectronica	<<s ô
)
<<ô ö
;
<<ö õ
var== 
proveedores== 
===  !
_actorNegocioLogica==" 5
.==5 6&
ObtenerProveedoresVigentes==6 P
(==P Q
)==Q R
;==R S
var>> #
modalidadesDeTransporte>> +
=>>, -
await>>. 3
_maestroLogica>>4 B
.>>B C(
ObtenerDetallesMaestrosAsync>>C _
(>>_ `
MaestroSettings>>` o
.>>o p
Default>>p w
.>>w x)
IdMaestroModalidadDeTraslado	>>x î
)
>>î ï
;
>>ï ñ
var?? 
motivosDeTransporte?? '
=??( )
await??* /
_maestroLogica??0 >
.??> ?(
ObtenerDetallesMaestrosAsync??? [
(??[ \
MaestroSettings??\ k
.??k l
Default??l s
.??s t&
IdMaestroMotivoDeTraslado	??t ç
)
??ç é
;
??é è
var@@ 
fechaActual@@ 
=@@  !
_operacionLogica@@" 2
.@@2 3
FechaActual@@3 >
(@@> ?
)@@? @
;@@@ A4
(TransmitirBoletasAFacturacionElectronicaBB 8
(BB8 9%
detalleMaestroComprobanteBB9 R
,BBR S

idEmpleadoBBT ^
,BB^ _
sedeBB` d
,BBd e
fechaActualBBf q
)BBq r
;BBr s
ListDD 
<DD 
FacturaDD 
>DD <
0ordenesDeVentasConFacturaConfirmadasEInvalidadasDD N
=DDO P
FacturaDDQ X
.DDX Y
ConvertDDY `
(DD` a
_operacionLogicaDDa q
.DDq rC
6ObtenerOrdenesDeVentaConFacturaConfirmadasEInvalidadas	DDr ®
(
DD® ©

idEmpleado
DD© ≥
,
DD≥ ¥
fechaActual
DDµ ¿
)
DD¿ ¡
,
DD¡ ¬
sede
DD√ «
,
DD« »
(
DD…  .
 ModoImpresionCaracteristicasEnum
DD  Í
)
DDÍ Î
VentasSettings
DDÎ ˘
.
DD˘ ˙
Default
DD˙ Å
.
DDÅ Ç*
modoImpresionCaracteristicas
DDÇ û
)
DDû ü
;
DDü †5
)TransmitirFacturasAFacturacionElectronicaEE 9
(EE9 :<
0ordenesDeVentasConFacturaConfirmadasEInvalidadasEE: j
,EEj k&
detalleMaestroComprobante	EEl Ö
,
EEÖ Ü

idEmpleado
EEá ë
,
EEë í
fechaActual
EEì û
)
EEû ü
;
EEü †
ListGG 
<GG 
NotaDeCreditoGG "
>GG" #9
-notasDeCreditoDeBoletaConfirmadasEInvalidadasGG$ Q
=GGR S
NotaDeCreditoGGT a
.GGa b
ConvertGGb i
(GGi j
_operacionLogicaGGj z
.GGz {F
9ObtenerOperacionesConNotaDeCreditoConfirmadasEInvalidadas	GG{ ¥
(
GG¥ µ

idEmpleado
GGµ ø
,
GGø ¿
fechaActual
GG¡ Ã
,
GGÃ Õ
MaestroSettings
GGŒ ›
.
GG› ﬁ
Default
GGﬁ Â
.
GGÂ Ê/
!IdDetalleMaestroComprobanteBoleta
GGÊ á
)
GGá à
,
GGà â
sede
GGä é
,
GGé è!
tiposNotasDeCredito
GGê £
,
GG£ §
(
GG• ¶.
 ModoImpresionCaracteristicasEnum
GG¶ ∆
)
GG∆ «
VentasSettings
GG« ’
.
GG’ ÷
Default
GG÷ ›
.
GG› ﬁ*
modoImpresionCaracteristicas
GGﬁ ˙
)
GG˙ ˚
;
GG˚ ¸;
/TransmitirNotasDeCreditoAFacturacionElectronicaHH ?
(HH? @9
-notasDeCreditoDeBoletaConfirmadasEInvalidadasHH@ m
,HHm n&
detalleMaestroComprobante	HHo à
,
HHà â

idEmpleado
HHä î
,
HHî ï
fechaActual
HHñ °
)
HH° ¢
;
HH¢ £
ListJJ 
<JJ 
NotaDeDebitoJJ !
>JJ! "8
,notasDeDebitoDeBoletaConfirmadasEInvalidadasJJ# O
=JJP Q
NotaDeDebitoJJR ^
.JJ^ _
ConvertJJ_ f
(JJf g
_operacionLogicaJJg w
.JJw xE
8ObtenerOperacionesConNotaDeDebitoConfirmadasEInvalidadas	JJx ∞
(
JJ∞ ±

idEmpleado
JJ± ª
,
JJª º
fechaActual
JJΩ »
,
JJ» …
MaestroSettings
JJ  Ÿ
.
JJŸ ⁄
Default
JJ⁄ ·
.
JJ· ‚/
!IdDetalleMaestroComprobanteBoleta
JJ‚ É
)
JJÉ Ñ
,
JJÑ Ö
sede
JJÜ ä
,
JJä ã 
tiposNotasDeDebito
JJå û
,
JJû ü
(
JJ† °.
 ModoImpresionCaracteristicasEnum
JJ° ¡
)
JJ¡ ¬
VentasSettings
JJ¬ –
.
JJ– —
Default
JJ— ÿ
.
JJÿ Ÿ*
modoImpresionCaracteristicas
JJŸ ı
)
JJı ˆ
;
JJˆ ˜:
.TransmitirNotasDeDebitoAFacturacionElectronicaKK >
(KK> ?8
,notasDeDebitoDeBoletaConfirmadasEInvalidadasKK? k
,KKk l&
detalleMaestroComprobante	KKm Ü
,
KKÜ á

idEmpleado
KKà í
,
KKí ì
fechaActual
KKî ü
)
KKü †
;
KK† °
ListMM 
<MM 
NotaDeCreditoMM "
>MM" #:
.notasDeCreditoDeFacturaConfirmadasEInvalidadasMM$ R
=MMS T
NotaDeCreditoMMU b
.MMb c
ConvertMMc j
(MMj k
_operacionLogicaMMk {
.MM{ |F
9ObtenerOperacionesConNotaDeCreditoConfirmadasEInvalidadas	MM| µ
(
MMµ ∂

idEmpleado
MM∂ ¿
,
MM¿ ¡
fechaActual
MM¬ Õ
,
MMÕ Œ
MaestroSettings
MMœ ﬁ
.
MMﬁ ﬂ
Default
MMﬂ Ê
.
MMÊ Á0
"IdDetalleMaestroComprobanteFactura
MMÁ â
)
MMâ ä
,
MMä ã
sede
MMå ê
,
MMê ë!
tiposNotasDeCredito
MMí •
,
MM• ¶
(
MMß ®.
 ModoImpresionCaracteristicasEnum
MM® »
)
MM» …
VentasSettings
MM… ◊
.
MM◊ ÿ
Default
MMÿ ﬂ
.
MMﬂ ‡*
modoImpresionCaracteristicas
MM‡ ¸
)
MM¸ ˝
;
MM˝ ˛;
/TransmitirNotasDeCreditoAFacturacionElectronicaNN ?
(NN? @:
.notasDeCreditoDeFacturaConfirmadasEInvalidadasNN@ n
,NNn o&
detalleMaestroComprobante	NNp â
,
NNâ ä

idEmpleado
NNã ï
,
NNï ñ
fechaActual
NNó ¢
)
NN¢ £
;
NN£ §
ListPP 
<PP 
NotaDeDebitoPP !
>PP! "9
-notasDeDebitoDeFacturaConfirmadasEInvalidadasPP# P
=PPQ R
NotaDeDebitoPPS _
.PP_ `
ConvertPP` g
(PPg h
_operacionLogicaPPh x
.PPx yE
8ObtenerOperacionesConNotaDeDebitoConfirmadasEInvalidadas	PPy ±
(
PP± ≤

idEmpleado
PP≤ º
,
PPº Ω
fechaActual
PPæ …
,
PP…  
MaestroSettings
PPÀ ⁄
.
PP⁄ €
Default
PP€ ‚
.
PP‚ „0
"IdDetalleMaestroComprobanteFactura
PP„ Ö
)
PPÖ Ü
,
PPÜ á
sede
PPà å
,
PPå ç 
tiposNotasDeDebito
PPé †
,
PP† °
(
PP¢ £.
 ModoImpresionCaracteristicasEnum
PP£ √
)
PP√ ƒ
VentasSettings
PPƒ “
.
PP“ ”
Default
PP” ⁄
.
PP⁄ €*
modoImpresionCaracteristicas
PP€ ˜
)
PP˜ ¯
;
PP¯ ˘:
.TransmitirNotasDeDebitoAFacturacionElectronicaQQ >
(QQ> ?9
-notasDeDebitoDeFacturaConfirmadasEInvalidadasQQ? l
,QQl m&
detalleMaestroComprobante	QQn á
,
QQá à

idEmpleado
QQâ ì
,
QQì î
fechaActual
QQï †
)
QQ† °
;
QQ° ¢
ListSS 
<SS 
GuiaDeRemisionSS #
>SS# $2
&guiasDeRemisionConfirmadasEInvalidadasSS% K
=SSL M
GuiaDeRemisionSSN \
.SS\ ]
ConvertSS] d
(SSd e
_operacionLogicaSSe u
.SSu v:
-ObtenerGuiasDeRemisionConfirmadasEInvalidadas	SSv £
(
SS£ §

idEmpleado
SS§ Æ
,
SSÆ Ø
fechaActual
SS∞ ª
)
SSª º
,
SSº Ω
sede
SSæ ¬
,
SS¬ √
(
SSƒ ≈.
 ModoImpresionCaracteristicasEnum
SS≈ Â
)
SSÂ Ê
VentasSettings
SSÊ Ù
.
SSÙ ı
Default
SSı ¸
.
SS¸ ˝*
modoImpresionCaracteristicas
SS˝ ô
,
SSô ö
proveedores
SSõ ¶
,
SS¶ ß%
modalidadesDeTransporte
SS® ø
,
SSø ¿!
motivosDeTransporte
SS¡ ‘
)
SS‘ ’
;
SS’ ÷;
/TransmitirGuiaDeRemisionAFacturacionElectronicaTT ?
(TT? @2
&guiasDeRemisionConfirmadasEInvalidadasTT@ f
,TTf g&
detalleMaestroComprobante	TTh Å
,
TTÅ Ç

idEmpleado
TTÉ ç
,
TTç é
fechaActual
TTè ö
)
TTö õ
;
TTõ ú
resultVV 
=VV 
newVV 
OperationResultVV ,
(VV, -
OperationResultEnumVV- @
.VV@ A
SuccessVVA H
,VVH I
$strVVJ e
,VVe f
$strVVg k
)VVk l
;VVl m
returnWW 
resultWW 
;WW 
}XX 
catchYY 
(YY 
	ExceptionYY 
eYY 
)YY 
{ZZ 
throw[[ 
new[[ 
LogicaException[[ )
([[) *
$str[[* Z
,[[Z [
e[[\ ]
)[[] ^
;[[^ _
}\\ 
}]] 	
public__ 
OperationResult__ 4
(TransmitirBoletasAFacturacionElectronica__ G
(__G H
List__H L
<__L M
Detalle_maestro__M \
>__\ ]&
detallesMaestroComprobante__^ x
,__x y
int__z }

idEmpleado	__~ à
,
__à â/
!EstablecimientoComercialExtendido
__ä ´
sede
__¨ ∞
,
__∞ ±
DateTime
__≤ ∫
fechaActual
__ª ∆
)
__∆ «
{`` 	
Listaa 
<aa 
BoletaDeVentaaa 
>aa 
boletasDeVentaaa  .
=aa/ 0
newaa1 4
Listaa5 9
<aa9 :
BoletaDeVentaaa: G
>aaG H
(aaH I
)aaI J
;aaJ K
trybb 
{cc 
OperationResultdd 
resultdd  &
=dd' (
nulldd) -
;dd- .
doee 
{ff 
Listgg 
<gg 
	Documentogg "
>gg" #$
listaDocumentosAIngresargg$ <
=gg= >
newgg? B
ListggC G
<ggG H
	DocumentoggH Q
>ggQ R
(ggR S
)ggS T
;ggT U
Listhh 
<hh 
Evento_transaccionhh +
>hh+ ,!
listaEventosAIngresarhh- B
=hhC D
newhhE H
ListhhI M
<hhM N
Evento_transaccionhhN `
>hh` a
(hha b
)hhb c
;hhc d
boletasDeVentaii "
=ii# $
BoletaDeVentaii% 2
.ii2 3
Convertii3 :
(ii: ;
_operacionLogicaii; K
.iiK LB
5ObtenerOrdenesDeVentaConBoletaConfirmadasEInvalidadas	iiL Å
(
iiÅ Ç

idEmpleado
iiÇ å
,
iiå ç
fechaActual
iié ô
,
iiô ö,
FacturacionElectronicaSettings
iiõ π
.
iiπ ∫
Default
ii∫ ¡
.
ii¡ ¬8
*Tama√±oLoteTransferenciaDocumentosEFactura
ii¬ Î
)
iiÎ Ï
,
iiÏ Ì
sede
iiÓ Ú
,
iiÚ Û
(
iiÙ ı.
 ModoImpresionCaracteristicasEnum
iiı ï
)
iiï ñ
VentasSettings
iiñ §
.
ii§ •
Default
ii• ¨
.
ii¨ ≠*
modoImpresionCaracteristicas
ii≠ …
)
ii…  
;
ii  À
foreachjj 
(jj 
varjj  
itemjj! %
injj& (
boletasDeVentajj) 7
)jj7 8
{kk  
DocumentoElectronicoll ,
	documentoll- 6
=ll7 8%
_generacionArchivosLogicall9 R
.llR S-
!ObtenerDocumentoElectronicoBoletallS t
(llt u
itemllu y
)lly z
;llz {$
listaDocumentosAIngresarmm 0
.mm0 1
Addmm1 4
(mm4 5
newmm5 8
	Documentomm9 B
{nn 

idSigescomoo &
=oo' (
itemoo) -
.oo- .
IdOrdenoo. 5
,oo5 6!
codigoTipoComprobantepp 1
=pp2 3
	documentopp4 =
.pp= >
TipoDocumentopp> K
,ppK L
serieComprobanteqq ,
=qq- .
	documentoqq/ 8
.qq8 9
IdDocumentoqq9 D
.qqD E
SplitqqE J
(qqJ K
$charqqK N
)qqN O
[qqO P
$numqqP Q
]qqQ R
,qqR S
numeroComprobanterr -
=rr. /
	documentorr0 9
.rr9 :
IdDocumentorr: E
.rrE F
SplitrrF K
(rrK L
$charrrL O
)rrO P
[rrP Q
$numrrQ R
]rrR S
,rrS T
fechaEmisionss (
=ss) *
DateTimess+ 3
.ss3 4
Parsess4 9
(ss9 :
	documentoss: C
.ssC D
FechaEmisionssD P
+ssQ R
$strssS V
+ssW X
	documentossY b
.ssb c
HoraEmisionssc n
)ssn o
,sso p
tipoComprobantett +
=tt, -&
detallesMaestroComprobantett. H
.ttH I
SinglettI O
(ttO P
dttP Q
=>ttR T
dttU V
.ttV W
codigottW ]
==tt^ `
	documentotta j
.ttj k
TipoDocumentottk x
)ttx y
.tty z
nombre	ttz Ä
,
ttÄ Å
estadouu "
=uu# $
itemuu% )
.uu) *
IdEstadoActualuu* 8
==uu9 ;
MaestroSettingsuu< K
.uuK L
DefaultuuL S
.uuS T,
 IdDetalleMaestroEstadoConfirmadouuT t
?uuu v
(uuw x
intuux {
)uu{ |'
EstadoDocumentoElectronico	uu| ñ
.
uuñ ó

Adicionado
uuó °
:
uu¢ £
(
uu§ •
int
uu• ®
)
uu® ©(
EstadoDocumentoElectronico
uu© √
.
uu√ ƒ
Anulado
uuƒ À
,
uuÀ Ã
estadoSigescomvv *
=vv+ ,
itemvv- 1
.vv1 2
IdEstadoActualvv2 @
==vvA C
MaestroSettingsvvD S
.vvS T
DefaultvvT [
.vv[ \,
 IdDetalleMaestroEstadoConfirmadovv\ |
?vv} ~
(	vv Ä
int
vvÄ É
)
vvÉ Ñ0
"EstadoSigescomDocumentoElectronico
vvÑ ¶
.
vv¶ ß

Confirmado
vvß ±
:
vv≤ ≥
(
vv¥ µ
int
vvµ ∏
)
vv∏ π0
"EstadoSigescomDocumentoElectronico
vvπ €
.
vv€ ‹

Invalidado
vv‹ Ê
,
vvÊ Á
Binarioww #
=ww$ %
newww& )
Binarioww* 1
{ww2 3
archivoBinarioww4 B
=wwC D
EncodingwwE M
.wwM N
UTF8wwN R
.wwR S
GetByteswwS [
(ww[ \
JsonConvertww\ g
.wwg h
SerializeObjectwwh w
(www x
	documento	wwx Å
)
wwÅ Ç
)
wwÇ É
}
wwÑ Ö
}xx 
)xx 
;xx !
listaEventosAIngresaryy -
.yy- .
Addyy. 1
(yy1 2
newyy2 5
Evento_transaccionyy6 H
{zz 
id_empleado{{ '
={{( )

idEmpleado{{* 4
,{{4 5
id_transaccion|| *
=||+ ,
item||- 1
.||1 2
IdOrden||2 9
,||9 :
	id_evento}} %
=}}& '
MaestroSettings}}( 7
.}}7 8
Default}}8 ?
.}}? @-
!IdDetalleMaestroEstadoTransmitido}}@ a
,}}a b
fecha~~ !
=~~" #
fechaActual~~$ /
,~~/ 0

comentario &
=' (
$str) _
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ &
listaDocumentosAIngresar
ÇÇ 0
!=
ÇÇ1 3
null
ÇÇ4 8
&&
ÇÇ9 ;&
listaDocumentosAIngresar
ÇÇ< T
.
ÇÇT U
Count
ÇÇU Z
(
ÇÇZ [
)
ÇÇ[ \
>
ÇÇ] ^
$num
ÇÇ_ `
)
ÇÇ` a
{
ÉÉ 
var
ÑÑ *
resultCrearDocumentosMasivos
ÑÑ 8
=
ÑÑ9 :$
CrearDocumentosMasivos
ÑÑ; Q
(
ÑÑQ R&
listaDocumentosAIngresar
ÑÑR j
)
ÑÑj k
;
ÑÑk l
Util
ÖÖ 
.
ÖÖ -
ManejoEnLogicaResultadoSinExito
ÖÖ <
(
ÖÖ< =*
resultCrearDocumentosMasivos
ÖÖ= Y
,
ÖÖY Z
$strÖÖ[ Ñ
)ÖÖÑ Ö
;ÖÖÖ Ü
var
ÜÜ /
!resultCrearEventosDeTransacciones
ÜÜ =
=
ÜÜ> ?
_operacionLogica
ÜÜ@ P
.
ÜÜP Q)
CrearEventosDeTransacciones
ÜÜQ l
(
ÜÜl m$
listaEventosAIngresarÜÜm Ç
)ÜÜÇ É
;ÜÜÉ Ñ
Util
áá 
.
áá -
ManejoEnLogicaResultadoSinExito
áá <
(
áá< =/
!resultCrearEventosDeTransacciones
áá= ^
,
áá^ _
$stráá` Å
)ááÅ Ç
;ááÇ É
}
àà 
}
ââ 
while
ââ 
(
ââ 
boletasDeVenta
ââ '
.
ââ' (
Count
ââ( -
==
ââ. 0,
FacturacionElectronicaSettings
ââ1 O
.
ââO P
Default
ââP W
.
ââW X9
*Tama√±oLoteTransferenciaDocumentosEFacturaââX Å
)ââÅ Ç
;ââÇ É
result
ää 
=
ää 
new
ää 
OperationResult
ää ,
(
ää, -!
OperationResultEnum
ää- @
.
ää@ A
Success
ääA H
,
ääH I
$str
ääJ e
,
ääe f
$str
ääg k
)
ääk l
;
ääl m
return
ãã 
result
ãã 
;
ãã 
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* s
,
èès t
e
èèu v
)
èèv w
;
èèw x
}
êê 
}
ëë 	
public
ìì 
OperationResult
ìì 7
)TransmitirFacturasAFacturacionElectronica
ìì H
(
ììH I
List
ììI M
<
ììM N
Factura
ììN U
>
ììU V
facturas
ììW _
,
ìì_ `
List
ììa e
<
ììe f
Detalle_maestro
ììf u
>
ììu v)
detallesMaestroComprobanteììw ë
,ììë í
intììì ñ

idEmpleadoììó °
,ìì° ¢
DateTimeìì£ ´
fechaActualìì¨ ∑
)ìì∑ ∏
{
îî 	
try
ïï 
{
ññ 
OperationResult
óó 
result
óó  &
=
óó' (
null
óó) -
;
óó- .
List
òò 
<
òò 
	Documento
òò 
>
òò &
listaDocumentosAIngresar
òò  8
=
òò9 :
new
òò; >
List
òò? C
<
òòC D
	Documento
òòD M
>
òòM N
(
òòN O
)
òòO P
;
òòP Q
List
ôô 
<
ôô  
Evento_transaccion
ôô '
>
ôô' (#
listaEventosAIngresar
ôô) >
=
ôô? @
new
ôôA D
List
ôôE I
<
ôôI J 
Evento_transaccion
ôôJ \
>
ôô\ ]
(
ôô] ^
)
ôô^ _
;
ôô_ `
var
öö 
rondas
öö 
=
öö 
Math
öö !
.
öö! "
Ceiling
öö" )
(
öö) *
(
öö* +
double
öö+ 1
)
öö1 2
facturas
öö2 :
.
öö: ;
Count
öö; @
/
ööA B,
FacturacionElectronicaSettings
ööC a
.
ööa b
Default
ööb i
.
ööi j9
*Tama√±oLoteTransferenciaDocumentosEFacturaööj ì
)ööì î
;ööî ï
for
õõ 
(
õõ 
int
õõ 
rondaActual
õõ $
=
õõ% &
$num
õõ' (
;
õõ( )
rondaActual
õõ* 5
<
õõ6 7
rondas
õõ8 >
;
õõ> ?
rondaActual
õõ@ K
++
õõK M
)
õõM N
{
úú 
var
ùù 
subList
ùù 
=
ùù  !
facturas
ùù" *
.
ùù* +
Skip
ùù+ /
(
ùù/ 0
rondaActual
ùù0 ;
*
ùù< =,
FacturacionElectronicaSettings
ùù> \
.
ùù\ ]
Default
ùù] d
.
ùùd e9
*Tama√±oLoteTransferenciaDocumentosEFacturaùùe é
)ùùé è
.ùùè ê
Takeùùê î
(ùùî ï.
FacturacionElectronicaSettingsùùï ≥
.ùù≥ ¥
Defaultùù¥ ª
.ùùª º:
*Tama√±oLoteTransferenciaDocumentosEFacturaùùº Â
)ùùÂ Ê
;ùùÊ Á
foreach
ûû 
(
ûû 
var
ûû  
item
ûû! %
in
ûû& (
subList
ûû) 0
)
ûû0 1
{
üü "
DocumentoElectronico
†† ,
	documento
††- 6
=
††7 8'
_generacionArchivosLogica
††9 R
.
††R S0
"ObtenerDocumentoElectronicoFactura
††S u
(
††u v
item
††v z
)
††z {
;
††{ |&
listaDocumentosAIngresar
°° 0
.
°°0 1
Add
°°1 4
(
°°4 5
new
°°5 8
	Documento
°°9 B
{
¢¢ 

idSigescom
££ &
=
££' (
item
££) -
.
££- .
IdOrden
££. 5
,
££5 6#
codigoTipoComprobante
§§ 1
=
§§2 3
	documento
§§4 =
.
§§= >
TipoDocumento
§§> K
,
§§K L
serieComprobante
•• ,
=
••- .
	documento
••/ 8
.
••8 9
IdDocumento
••9 D
.
••D E
Split
••E J
(
••J K
$char
••K N
)
••N O
[
••O P
$num
••P Q
]
••Q R
,
••R S
numeroComprobante
¶¶ -
=
¶¶. /
	documento
¶¶0 9
.
¶¶9 :
IdDocumento
¶¶: E
.
¶¶E F
Split
¶¶F K
(
¶¶K L
$char
¶¶L O
)
¶¶O P
[
¶¶P Q
$num
¶¶Q R
]
¶¶R S
,
¶¶S T
fechaEmision
ßß (
=
ßß) *
DateTime
ßß+ 3
.
ßß3 4
Parse
ßß4 9
(
ßß9 :
	documento
ßß: C
.
ßßC D
FechaEmision
ßßD P
+
ßßQ R
$str
ßßS V
+
ßßW X
	documento
ßßY b
.
ßßb c
HoraEmision
ßßc n
)
ßßn o
,
ßßo p
tipoComprobante
®® +
=
®®, -(
detallesMaestroComprobante
®®. H
.
®®H I
Single
®®I O
(
®®O P
d
®®P Q
=>
®®R T
d
®®U V
.
®®V W
codigo
®®W ]
==
®®^ `
	documento
®®a j
.
®®j k
TipoDocumento
®®k x
)
®®x y
.
®®y z
nombre®®z Ä
,®®Ä Å
estado
©© "
=
©©# $
item
©©% )
.
©©) *
IdEstadoActual
©©* 8
==
©©9 ;
MaestroSettings
©©< K
.
©©K L
Default
©©L S
.
©©S T.
 IdDetalleMaestroEstadoConfirmado
©©T t
?
©©u v
(
©©w x
int
©©x {
)
©©{ |)
EstadoDocumentoElectronico©©| ñ
.©©ñ ó

Adicionado©©ó °
:©©¢ £
(©©§ •
int©©• ®
)©©® ©*
EstadoDocumentoElectronico©©© √
.©©√ ƒ
Anulado©©ƒ À
,©©À Ã
estadoSigescom
™™ *
=
™™+ ,
item
™™- 1
.
™™1 2
IdEstadoActual
™™2 @
==
™™A C
MaestroSettings
™™D S
.
™™S T
Default
™™T [
.
™™[ \.
 IdDetalleMaestroEstadoConfirmado
™™\ |
?
™™} ~
(™™ Ä
int™™Ä É
)™™É Ñ2
"EstadoSigescomDocumentoElectronico™™Ñ ¶
.™™¶ ß

Confirmado™™ß ±
:™™≤ ≥
(™™¥ µ
int™™µ ∏
)™™∏ π2
"EstadoSigescomDocumentoElectronico™™π €
.™™€ ‹

Invalidado™™‹ Ê
,™™Ê Á
Binario
´´ #
=
´´$ %
new
´´& )
Binario
´´* 1
{
´´2 3
archivoBinario
´´4 B
=
´´C D
Encoding
´´E M
.
´´M N
UTF8
´´N R
.
´´R S
GetBytes
´´S [
(
´´[ \
JsonConvert
´´\ g
.
´´g h
SerializeObject
´´h w
(
´´w x
	documento´´x Å
)´´Å Ç
)´´Ç É
}´´Ñ Ö
}
¨¨ 
)
¨¨ 
;
¨¨ #
listaEventosAIngresar
≠≠ -
.
≠≠- .
Add
≠≠. 1
(
≠≠1 2
new
≠≠2 5 
Evento_transaccion
≠≠6 H
{
ÆÆ 
id_empleado
ØØ '
=
ØØ( )

idEmpleado
ØØ* 4
,
ØØ4 5
id_transaccion
∞∞ *
=
∞∞+ ,
item
∞∞- 1
.
∞∞1 2
IdOrden
∞∞2 9
,
∞∞9 :
	id_evento
±± %
=
±±& '
MaestroSettings
±±( 7
.
±±7 8
Default
±±8 ?
.
±±? @/
!IdDetalleMaestroEstadoTransmitido
±±@ a
,
±±a b
fecha
≤≤ !
=
≤≤" #
fechaActual
≤≤$ /
,
≤≤/ 0

comentario
≥≥ &
=
≥≥' (
$str
≥≥) _
}
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 
}
∂∂ 
if
∑∑ 
(
∑∑ 
facturas
∑∑ 
!=
∑∑ 
null
∑∑  $
&&
∑∑% '
facturas
∑∑( 0
.
∑∑0 1
Count
∑∑1 6
(
∑∑6 7
)
∑∑7 8
>
∑∑9 :
$num
∑∑; <
)
∑∑< =
{
∏∏ 
var
ππ *
resultCrearDocumentosMasivos
ππ 4
=
ππ5 6$
CrearDocumentosMasivos
ππ7 M
(
ππM N&
listaDocumentosAIngresar
ππN f
)
ππf g
;
ππg h
Util
∫∫ 
.
∫∫ -
ManejoEnLogicaResultadoSinExito
∫∫ 8
(
∫∫8 9*
resultCrearDocumentosMasivos
∫∫9 U
,
∫∫U V
$str∫∫W Å
)∫∫Å Ç
;∫∫Ç É
var
ªª /
!resultCrearEventosDeTransacciones
ªª 9
=
ªª: ;
_operacionLogica
ªª< L
.
ªªL M)
CrearEventosDeTransacciones
ªªM h
(
ªªh i#
listaEventosAIngresar
ªªi ~
)
ªª~ 
;ªª Ä
Util
ºº 
.
ºº -
ManejoEnLogicaResultadoSinExito
ºº 8
(
ºº8 9/
!resultCrearEventosDeTransacciones
ºº9 Z
,
ººZ [
$str
ºº\ }
)
ºº} ~
;
ºº~ 
}
ΩΩ 
result
ææ 
=
ææ 
new
ææ 
OperationResult
ææ ,
(
ææ, -!
OperationResultEnum
ææ- @
.
ææ@ A
Success
ææA H
,
ææH I
$str
ææJ e
,
ææe f
$str
ææg k
)
ææk l
;
ææl m
return
øø 
result
øø 
;
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* k
,
√√k l
e
√√m n
)
√√n o
;
√√o p
}
ƒƒ 
}
≈≈ 	
public
«« 
OperationResult
«« =
/TransmitirNotasDeCreditoAFacturacionElectronica
«« N
(
««N O
List
««O S
<
««S T
NotaDeCredito
««T a
>
««a b
notasDeCredito
««c q
,
««q r
List
««s w
<
««w x
Detalle_maestro««x á
>««á à*
detallesMaestroComprobante««â £
,««£ §
int««• ®

idEmpleado««© ≥
,««≥ ¥
DateTime««µ Ω
fechaActual««æ …
)««…  
{
»» 	
try
…… 
{
   
OperationResult
ÀÀ 
result
ÀÀ  &
=
ÀÀ' (
null
ÀÀ) -
;
ÀÀ- .
List
ÃÃ 
<
ÃÃ 
	Documento
ÃÃ 
>
ÃÃ &
listaDocumentosAIngresar
ÃÃ  8
=
ÃÃ9 :
null
ÃÃ; ?
;
ÃÃ? @
List
ÕÕ 
<
ÕÕ  
Evento_transaccion
ÕÕ '
>
ÕÕ' (#
listaEventosAIngresar
ÕÕ) >
=
ÕÕ? @
null
ÕÕA E
;
ÕÕE F
var
ŒŒ 
rondas
ŒŒ 
=
ŒŒ 
Math
ŒŒ !
.
ŒŒ! "
Ceiling
ŒŒ" )
(
ŒŒ) *
(
ŒŒ* +
double
ŒŒ+ 1
)
ŒŒ1 2
notasDeCredito
ŒŒ2 @
.
ŒŒ@ A
Count
ŒŒA F
/
ŒŒG H,
FacturacionElectronicaSettings
ŒŒI g
.
ŒŒg h
Default
ŒŒh o
.
ŒŒo p9
*Tama√±oLoteTransferenciaDocumentosEFacturaŒŒp ô
)ŒŒô ö
;ŒŒö õ
for
œœ 
(
œœ 
int
œœ 
rondaActual
œœ $
=
œœ% &
$num
œœ' (
;
œœ( )
rondaActual
œœ* 5
<
œœ6 7
rondas
œœ8 >
;
œœ> ?
rondaActual
œœ@ K
++
œœK M
)
œœM N
{
–– &
listaDocumentosAIngresar
—— ,
=
——- .
new
——/ 2
List
——3 7
<
——7 8
	Documento
——8 A
>
——A B
(
——B C
)
——C D
;
——D E#
listaEventosAIngresar
““ )
=
““* +
new
““, /
List
““0 4
<
““4 5 
Evento_transaccion
““5 G
>
““G H
(
““H I
)
““I J
;
““J K
var
”” 
subList
”” 
=
””  !
notasDeCredito
””" 0
.
””0 1
Skip
””1 5
(
””5 6
rondaActual
””6 A
*
””B C,
FacturacionElectronicaSettings
””D b
.
””b c
Default
””c j
.
””j k9
*Tama√±oLoteTransferenciaDocumentosEFactura””k î
)””î ï
.””ï ñ
Take””ñ ö
(””ö õ.
FacturacionElectronicaSettings””õ π
.””π ∫
Default””∫ ¡
.””¡ ¬:
*Tama√±oLoteTransferenciaDocumentosEFactura””¬ Î
)””Î Ï
;””Ï Ì
foreach
‘‘ 
(
‘‘ 
var
‘‘  
item
‘‘! %
in
‘‘& (
subList
‘‘) 0
)
‘‘0 1
{
’’ "
DocumentoElectronico
÷÷ ,
	documento
÷÷- 6
=
÷÷7 8'
_generacionArchivosLogica
÷÷9 R
.
÷÷R S4
&ObtenerDocumentoElectronicoNotaCredito
÷÷S y
(
÷÷y z
item
÷÷z ~
)
÷÷~ 
;÷÷ Ä&
listaDocumentosAIngresar
◊◊ 0
.
◊◊0 1
Add
◊◊1 4
(
◊◊4 5
new
◊◊5 8
	Documento
◊◊9 B
{
ÿÿ 

idSigescom
ŸŸ &
=
ŸŸ' (
item
ŸŸ) -
.
ŸŸ- .
IdOrden
ŸŸ. 5
,
ŸŸ5 6#
codigoTipoComprobante
⁄⁄ 1
=
⁄⁄2 3
	documento
⁄⁄4 =
.
⁄⁄= >
TipoDocumento
⁄⁄> K
,
⁄⁄K L
serieComprobante
€€ ,
=
€€- .
	documento
€€/ 8
.
€€8 9
IdDocumento
€€9 D
.
€€D E
Split
€€E J
(
€€J K
$char
€€K N
)
€€N O
[
€€O P
$num
€€P Q
]
€€Q R
,
€€R S
numeroComprobante
‹‹ -
=
‹‹. /
	documento
‹‹0 9
.
‹‹9 :
IdDocumento
‹‹: E
.
‹‹E F
Split
‹‹F K
(
‹‹K L
$char
‹‹L O
)
‹‹O P
[
‹‹P Q
$num
‹‹Q R
]
‹‹R S
,
‹‹S T
fechaEmision
›› (
=
››) *
DateTime
››+ 3
.
››3 4
Parse
››4 9
(
››9 :
	documento
››: C
.
››C D
FechaEmision
››D P
+
››Q R
$str
››S V
+
››W X
	documento
››Y b
.
››b c
HoraEmision
››c n
)
››n o
,
››o p
tipoComprobante
ﬁﬁ +
=
ﬁﬁ, -(
detallesMaestroComprobante
ﬁﬁ. H
.
ﬁﬁH I
Single
ﬁﬁI O
(
ﬁﬁO P
d
ﬁﬁP Q
=>
ﬁﬁR T
d
ﬁﬁU V
.
ﬁﬁV W
codigo
ﬁﬁW ]
==
ﬁﬁ^ `
	documento
ﬁﬁa j
.
ﬁﬁj k
TipoDocumento
ﬁﬁk x
)
ﬁﬁx y
.
ﬁﬁy z
nombreﬁﬁz Ä
,ﬁﬁÄ Å
estado
ﬂﬂ "
=
ﬂﬂ# $
item
ﬂﬂ% )
.
ﬂﬂ) *
IdEstadoActual
ﬂﬂ* 8
==
ﬂﬂ9 ;
MaestroSettings
ﬂﬂ< K
.
ﬂﬂK L
Default
ﬂﬂL S
.
ﬂﬂS T.
 IdDetalleMaestroEstadoConfirmado
ﬂﬂT t
?
ﬂﬂu v
(
ﬂﬂw x
int
ﬂﬂx {
)
ﬂﬂ{ |)
EstadoDocumentoElectronicoﬂﬂ| ñ
.ﬂﬂñ ó

Adicionadoﬂﬂó °
:ﬂﬂ¢ £
(ﬂﬂ§ •
intﬂﬂ• ®
)ﬂﬂ® ©*
EstadoDocumentoElectronicoﬂﬂ© √
.ﬂﬂ√ ƒ
Anuladoﬂﬂƒ À
,ﬂﬂÀ Ã
estadoSigescom
‡‡ *
=
‡‡+ ,
item
‡‡- 1
.
‡‡1 2
IdEstadoActual
‡‡2 @
==
‡‡A C
MaestroSettings
‡‡D S
.
‡‡S T
Default
‡‡T [
.
‡‡[ \.
 IdDetalleMaestroEstadoConfirmado
‡‡\ |
?
‡‡} ~
(‡‡ Ä
int‡‡Ä É
)‡‡É Ñ2
"EstadoSigescomDocumentoElectronico‡‡Ñ ¶
.‡‡¶ ß

Confirmado‡‡ß ±
:‡‡≤ ≥
(‡‡¥ µ
int‡‡µ ∏
)‡‡∏ π2
"EstadoSigescomDocumentoElectronico‡‡π €
.‡‡€ ‹

Invalidado‡‡‹ Ê
,‡‡Ê Á
Binario
·· #
=
··$ %
new
··& )
Binario
··* 1
{
··2 3
archivoBinario
··4 B
=
··C D
Encoding
··E M
.
··M N
UTF8
··N R
.
··R S
GetBytes
··S [
(
··[ \
JsonConvert
··\ g
.
··g h
SerializeObject
··h w
(
··w x
	documento··x Å
)··Å Ç
)··Ç É
}··Ñ Ö
}
‚‚ 
)
‚‚ 
;
‚‚ #
listaEventosAIngresar
„„ -
.
„„- .
Add
„„. 1
(
„„1 2
new
„„2 5 
Evento_transaccion
„„6 H
{
‰‰ 
id_empleado
ÂÂ '
=
ÂÂ( )

idEmpleado
ÂÂ* 4
,
ÂÂ4 5
id_transaccion
ÊÊ *
=
ÊÊ+ ,
item
ÊÊ- 1
.
ÊÊ1 2
IdOrden
ÊÊ2 9
,
ÊÊ9 :
	id_evento
ÁÁ %
=
ÁÁ& '
MaestroSettings
ÁÁ( 7
.
ÁÁ7 8
Default
ÁÁ8 ?
.
ÁÁ? @/
!IdDetalleMaestroEstadoTransmitido
ÁÁ@ a
,
ÁÁa b
fecha
ËË !
=
ËË" #
fechaActual
ËË$ /
,
ËË/ 0

comentario
ÈÈ &
=
ÈÈ' (
$str
ÈÈ) _
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 
var
ÏÏ *
resultCrearDocumentosMasivos
ÏÏ 4
=
ÏÏ5 6$
CrearDocumentosMasivos
ÏÏ7 M
(
ÏÏM N&
listaDocumentosAIngresar
ÏÏN f
)
ÏÏf g
;
ÏÏg h
Util
ÌÌ 
.
ÌÌ -
ManejoEnLogicaResultadoSinExito
ÌÌ 8
(
ÌÌ8 9*
resultCrearDocumentosMasivos
ÌÌ9 U
,
ÌÌU V
$strÌÌW â
)ÌÌâ ä
;ÌÌä ã
var
ÓÓ /
!resultCrearEventosDeTransacciones
ÓÓ 9
=
ÓÓ: ;
_operacionLogica
ÓÓ< L
.
ÓÓL M)
CrearEventosDeTransacciones
ÓÓM h
(
ÓÓh i#
listaEventosAIngresar
ÓÓi ~
)
ÓÓ~ 
;ÓÓ Ä
Util
ÔÔ 
.
ÔÔ -
ManejoEnLogicaResultadoSinExito
ÔÔ 8
(
ÔÔ8 9/
!resultCrearEventosDeTransacciones
ÔÔ9 Z
,
ÔÔZ [
$str
ÔÔ\ }
)
ÔÔ} ~
;
ÔÔ~ 
}
 
result
ÒÒ 
=
ÒÒ 
new
ÒÒ 
OperationResult
ÒÒ ,
(
ÒÒ, -!
OperationResultEnum
ÒÒ- @
.
ÒÒ@ A
Success
ÒÒA H
,
ÒÒH I
$str
ÒÒJ e
,
ÒÒe f
$str
ÒÒg k
)
ÒÒk l
;
ÒÒl m
return
ÚÚ 
result
ÚÚ 
;
ÚÚ 
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
e
ÙÙ 
)
ÙÙ 
{
ıı 
throw
ˆˆ 
new
ˆˆ 
LogicaException
ˆˆ )
(
ˆˆ) *
$str
ˆˆ* s
,
ˆˆs t
e
ˆˆu v
)
ˆˆv w
;
ˆˆw x
}
˜˜ 
}
¯¯ 	
public
˙˙ 
OperationResult
˙˙ <
.TransmitirNotasDeDebitoAFacturacionElectronica
˙˙ M
(
˙˙M N
List
˙˙N R
<
˙˙R S
NotaDeDebito
˙˙S _
>
˙˙_ `
notasDeDebito
˙˙a n
,
˙˙n o
List
˙˙p t
<
˙˙t u
Detalle_maestro˙˙u Ñ
>˙˙Ñ Ö*
detallesMaestroComprobante˙˙Ü †
,˙˙† °
int˙˙¢ •

idEmpleado˙˙¶ ∞
,˙˙∞ ±
DateTime˙˙≤ ∫
fechaActual˙˙ª ∆
)˙˙∆ «
{
˚˚ 	
try
¸¸ 
{
˝˝ 
OperationResult
˛˛ 
result
˛˛  &
=
˛˛' (
null
˛˛) -
;
˛˛- .
List
ˇˇ 
<
ˇˇ 
	Documento
ˇˇ 
>
ˇˇ &
listaDocumentosAIngresar
ˇˇ  8
=
ˇˇ9 :
new
ˇˇ; >
List
ˇˇ? C
<
ˇˇC D
	Documento
ˇˇD M
>
ˇˇM N
(
ˇˇN O
)
ˇˇO P
;
ˇˇP Q
List
ÄÄ 
<
ÄÄ  
Evento_transaccion
ÄÄ '
>
ÄÄ' (#
listaEventosAIngresar
ÄÄ) >
=
ÄÄ? @
new
ÄÄA D
List
ÄÄE I
<
ÄÄI J 
Evento_transaccion
ÄÄJ \
>
ÄÄ\ ]
(
ÄÄ] ^
)
ÄÄ^ _
;
ÄÄ_ `
var
ÅÅ 
rondas
ÅÅ 
=
ÅÅ 
Math
ÅÅ !
.
ÅÅ! "
Ceiling
ÅÅ" )
(
ÅÅ) *
(
ÅÅ* +
double
ÅÅ+ 1
)
ÅÅ1 2
notasDeDebito
ÅÅ2 ?
.
ÅÅ? @
Count
ÅÅ@ E
/
ÅÅF G,
FacturacionElectronicaSettings
ÅÅH f
.
ÅÅf g
Default
ÅÅg n
.
ÅÅn o9
*Tama√±oLoteTransferenciaDocumentosEFacturaÅÅo ò
)ÅÅò ô
;ÅÅô ö
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
rondaActual
ÇÇ $
=
ÇÇ% &
$num
ÇÇ' (
;
ÇÇ( )
rondaActual
ÇÇ* 5
<
ÇÇ6 7
rondas
ÇÇ8 >
;
ÇÇ> ?
rondaActual
ÇÇ@ K
++
ÇÇK M
)
ÇÇM N
{
ÉÉ 
var
ÑÑ 
subList
ÑÑ 
=
ÑÑ  !
notasDeDebito
ÑÑ" /
.
ÑÑ/ 0
Skip
ÑÑ0 4
(
ÑÑ4 5
rondaActual
ÑÑ5 @
*
ÑÑA B,
FacturacionElectronicaSettings
ÑÑC a
.
ÑÑa b
Default
ÑÑb i
.
ÑÑi j9
*Tama√±oLoteTransferenciaDocumentosEFacturaÑÑj ì
)ÑÑì î
.ÑÑî ï
TakeÑÑï ô
(ÑÑô ö.
FacturacionElectronicaSettingsÑÑö ∏
.ÑÑ∏ π
DefaultÑÑπ ¿
.ÑÑ¿ ¡:
*Tama√±oLoteTransferenciaDocumentosEFacturaÑÑ¡ Í
)ÑÑÍ Î
;ÑÑÎ Ï
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ  
item
ÖÖ! %
in
ÖÖ& (
subList
ÖÖ) 0
)
ÖÖ0 1
{
ÜÜ "
DocumentoElectronico
áá ,
	documento
áá- 6
=
áá7 8'
_generacionArchivosLogica
áá9 R
.
ááR S3
%ObtenerDocumentoElectronicoNotaDebito
ááS x
(
ááx y
item
ááy }
)
áá} ~
;
áá~ &
listaDocumentosAIngresar
àà 0
.
àà0 1
Add
àà1 4
(
àà4 5
new
àà5 8
	Documento
àà9 B
{
ââ 

idSigescom
ää &
=
ää' (
item
ää) -
.
ää- .
IdOrden
ää. 5
,
ää5 6#
codigoTipoComprobante
ãã 1
=
ãã2 3
	documento
ãã4 =
.
ãã= >
TipoDocumento
ãã> K
,
ããK L
serieComprobante
åå ,
=
åå- .
	documento
åå/ 8
.
åå8 9
IdDocumento
åå9 D
.
ååD E
Split
ååE J
(
ååJ K
$char
ååK N
)
ååN O
[
ååO P
$num
ååP Q
]
ååQ R
,
ååR S
numeroComprobante
çç -
=
çç. /
	documento
çç0 9
.
çç9 :
IdDocumento
çç: E
.
ççE F
Split
ççF K
(
ççK L
$char
ççL O
)
ççO P
[
ççP Q
$num
ççQ R
]
ççR S
,
ççS T
fechaEmision
éé (
=
éé) *
DateTime
éé+ 3
.
éé3 4
Parse
éé4 9
(
éé9 :
	documento
éé: C
.
ééC D
FechaEmision
ééD P
+
ééQ R
$str
ééS V
+
ééW X
	documento
ééY b
.
ééb c
HoraEmision
ééc n
)
één o
,
ééo p
tipoComprobante
èè +
=
èè, -(
detallesMaestroComprobante
èè. H
.
èèH I
Single
èèI O
(
èèO P
d
èèP Q
=>
èèR T
d
èèU V
.
èèV W
codigo
èèW ]
==
èè^ `
	documento
èèa j
.
èèj k
TipoDocumento
èèk x
)
èèx y
.
èèy z
nombreèèz Ä
,èèÄ Å
estado
êê "
=
êê# $
item
êê% )
.
êê) *
IdEstadoActual
êê* 8
==
êê9 ;
MaestroSettings
êê< K
.
êêK L
Default
êêL S
.
êêS T.
 IdDetalleMaestroEstadoConfirmado
êêT t
?
êêu v
(
êêw x
int
êêx {
)
êê{ |)
EstadoDocumentoElectronicoêê| ñ
.êêñ ó

Adicionadoêêó °
:êê¢ £
(êê§ •
intêê• ®
)êê® ©*
EstadoDocumentoElectronicoêê© √
.êê√ ƒ
Anuladoêêƒ À
,êêÀ Ã
estadoSigescom
ëë *
=
ëë+ ,
item
ëë- 1
.
ëë1 2
IdEstadoActual
ëë2 @
==
ëëA C
MaestroSettings
ëëD S
.
ëëS T
Default
ëëT [
.
ëë[ \.
 IdDetalleMaestroEstadoConfirmado
ëë\ |
?
ëë} ~
(ëë Ä
intëëÄ É
)ëëÉ Ñ2
"EstadoSigescomDocumentoElectronicoëëÑ ¶
.ëë¶ ß

Confirmadoëëß ±
:ëë≤ ≥
(ëë¥ µ
intëëµ ∏
)ëë∏ π2
"EstadoSigescomDocumentoElectronicoëëπ €
.ëë€ ‹

Invalidadoëë‹ Ê
,ëëÊ Á
Binario
íí #
=
íí$ %
new
íí& )
Binario
íí* 1
{
íí2 3
archivoBinario
íí4 B
=
ííC D
Encoding
ííE M
.
ííM N
UTF8
ííN R
.
ííR S
GetBytes
ííS [
(
íí[ \
JsonConvert
íí\ g
.
ííg h
SerializeObject
ííh w
(
ííw x
	documentoííx Å
)ííÅ Ç
)ííÇ É
}ííÑ Ö
}
ìì 
)
ìì 
;
ìì #
listaEventosAIngresar
îî -
.
îî- .
Add
îî. 1
(
îî1 2
new
îî2 5 
Evento_transaccion
îî6 H
{
ïï 
id_empleado
ññ '
=
ññ( )

idEmpleado
ññ* 4
,
ññ4 5
id_transaccion
óó *
=
óó+ ,
item
óó- 1
.
óó1 2
IdOrden
óó2 9
,
óó9 :
	id_evento
òò %
=
òò& '
MaestroSettings
òò( 7
.
òò7 8
Default
òò8 ?
.
òò? @/
!IdDetalleMaestroEstadoTransmitido
òò@ a
,
òòa b
fecha
ôô !
=
ôô" #
fechaActual
ôô$ /
,
ôô/ 0

comentario
öö &
=
öö' (
$str
öö) _
}
õõ 
)
õõ 
;
õõ 
}
úú 
}
ùù 
if
ûû 
(
ûû 
notasDeDebito
ûû !
!=
ûû" $
null
ûû% )
&&
ûû* ,
notasDeDebito
ûû- :
.
ûû: ;
Count
ûû; @
(
ûû@ A
)
ûûA B
>
ûûC D
$num
ûûE F
)
ûûF G
{
üü 
var
†† *
resultCrearDocumentosMasivos
†† 4
=
††5 6$
CrearDocumentosMasivos
††7 M
(
††M N&
listaDocumentosAIngresar
††N f
)
††f g
;
††g h
Util
°° 
.
°° -
ManejoEnLogicaResultadoSinExito
°° 8
(
°°8 9*
resultCrearDocumentosMasivos
°°9 U
,
°°U V
$str°°W à
)°°à â
;°°â ä
var
¢¢ /
!resultCrearEventosDeTransacciones
¢¢ 9
=
¢¢: ;
_operacionLogica
¢¢< L
.
¢¢L M)
CrearEventosDeTransacciones
¢¢M h
(
¢¢h i#
listaEventosAIngresar
¢¢i ~
)
¢¢~ 
;¢¢ Ä
Util
££ 
.
££ -
ManejoEnLogicaResultadoSinExito
££ 8
(
££8 9/
!resultCrearEventosDeTransacciones
££9 Z
,
££Z [
$str
££\ }
)
££} ~
;
££~ 
}
§§ 
result
•• 
=
•• 
new
•• 
OperationResult
•• ,
(
••, -!
OperationResultEnum
••- @
.
••@ A
Success
••A H
,
••H I
$str
••J e
,
••e f
$str
••g k
)
••k l
;
••l m
return
¶¶ 
result
¶¶ 
;
¶¶ 
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
©© 
throw
™™ 
new
™™ 
LogicaException
™™ )
(
™™) *
$str
™™* r
,
™™r s
e
™™t u
)
™™u v
;
™™v w
}
´´ 
}
¨¨ 	
public
ÆÆ 
OperationResult
ÆÆ =
/TransmitirGuiaDeRemisionAFacturacionElectronica
ÆÆ N
(
ÆÆN O
List
ÆÆO S
<
ÆÆS T
GuiaDeRemision
ÆÆT b
>
ÆÆb c
guiasDeRemision
ÆÆd s
,
ÆÆs t
List
ÆÆu y
<
ÆÆy z
Detalle_maestroÆÆz â
>ÆÆâ ä*
detallesMaestroComprobanteÆÆã •
,ÆÆ• ¶
intÆÆß ™

idEmpleadoÆÆ´ µ
,ÆÆµ ∂
DateTimeÆÆ∑ ø
fechaActualÆÆ¿ À
)ÆÆÀ Ã
{
ØØ 	
try
∞∞ 
{
±± 
OperationResult
≤≤ 
result
≤≤  &
=
≤≤' (
null
≤≤) -
;
≤≤- .
List
≥≥ 
<
≥≥ 
	Documento
≥≥ 
>
≥≥ &
listaDocumentosAIngresar
≥≥  8
=
≥≥9 :
new
≥≥; >
List
≥≥? C
<
≥≥C D
	Documento
≥≥D M
>
≥≥M N
(
≥≥N O
)
≥≥O P
;
≥≥P Q
List
¥¥ 
<
¥¥  
Evento_transaccion
¥¥ '
>
¥¥' (#
listaEventosAIngresar
¥¥) >
=
¥¥? @
new
¥¥A D
List
¥¥E I
<
¥¥I J 
Evento_transaccion
¥¥J \
>
¥¥\ ]
(
¥¥] ^
)
¥¥^ _
;
¥¥_ `
var
µµ 
rondas
µµ 
=
µµ 
Math
µµ !
.
µµ! "
Ceiling
µµ" )
(
µµ) *
(
µµ* +
double
µµ+ 1
)
µµ1 2
guiasDeRemision
µµ2 A
.
µµA B
Count
µµB G
/
µµH I,
FacturacionElectronicaSettings
µµJ h
.
µµh i
Default
µµi p
.
µµp q9
*Tama√±oLoteTransferenciaDocumentosEFacturaµµq ö
)µµö õ
;µµõ ú
for
∂∂ 
(
∂∂ 
int
∂∂ 
rondaActual
∂∂ $
=
∂∂% &
$num
∂∂' (
;
∂∂( )
rondaActual
∂∂* 5
<
∂∂6 7
rondas
∂∂8 >
;
∂∂> ?
rondaActual
∂∂@ K
++
∂∂K M
)
∂∂M N
{
∑∑ 
var
∏∏ 
subList
∏∏ 
=
∏∏  !
guiasDeRemision
∏∏" 1
.
∏∏1 2
Skip
∏∏2 6
(
∏∏6 7
rondaActual
∏∏7 B
*
∏∏C D,
FacturacionElectronicaSettings
∏∏E c
.
∏∏c d
Default
∏∏d k
.
∏∏k l9
*Tama√±oLoteTransferenciaDocumentosEFactura∏∏l ï
)∏∏ï ñ
.∏∏ñ ó
Take∏∏ó õ
(∏∏õ ú.
FacturacionElectronicaSettings∏∏ú ∫
.∏∏∫ ª
Default∏∏ª ¬
.∏∏¬ √:
*Tama√±oLoteTransferenciaDocumentosEFactura∏∏√ Ï
)∏∏Ï Ì
;∏∏Ì Ó
foreach
ππ 
(
ππ 
var
ππ  
item
ππ! %
in
ππ& (
subList
ππ) 0
)
ππ0 1
{
∫∫ 
GuiaRemision
ªª $
	documento
ªª% .
=
ªª/ 0'
_generacionArchivosLogica
ªª1 J
.
ªªJ K7
)ObtenerDocumentoElectronicoGuiaDeRemision
ªªK t
(
ªªt u
item
ªªu y
)
ªªy z
;
ªªz {&
listaDocumentosAIngresar
ºº 0
.
ºº0 1
Add
ºº1 4
(
ºº4 5
new
ºº5 8
	Documento
ºº9 B
{
ΩΩ 

idSigescom
ææ &
=
ææ' (
item
ææ) -
.
ææ- .
IdOrden
ææ. 5
,
ææ5 6#
codigoTipoComprobante
øø 1
=
øø2 3
	documento
øø4 =
.
øø= >
TipoDocumento
øø> K
,
øøK L
serieComprobante
¿¿ ,
=
¿¿- .
	documento
¿¿/ 8
.
¿¿8 9
IdDocumento
¿¿9 D
.
¿¿D E
Split
¿¿E J
(
¿¿J K
$char
¿¿K N
)
¿¿N O
[
¿¿O P
$num
¿¿P Q
]
¿¿Q R
,
¿¿R S
numeroComprobante
¡¡ -
=
¡¡. /
	documento
¡¡0 9
.
¡¡9 :
IdDocumento
¡¡: E
.
¡¡E F
Split
¡¡F K
(
¡¡K L
$char
¡¡L O
)
¡¡O P
[
¡¡P Q
$num
¡¡Q R
]
¡¡R S
,
¡¡S T
fechaEmision
¬¬ (
=
¬¬) *
DateTime
¬¬+ 3
.
¬¬3 4
Parse
¬¬4 9
(
¬¬9 :
	documento
¬¬: C
.
¬¬C D
FechaEmision
¬¬D P
)
¬¬P Q
,
¬¬Q R
tipoComprobante
√√ +
=
√√, -(
detallesMaestroComprobante
√√. H
.
√√H I
Single
√√I O
(
√√O P
d
√√P Q
=>
√√R T
d
√√U V
.
√√V W
codigo
√√W ]
==
√√^ `
	documento
√√a j
.
√√j k
TipoDocumento
√√k x
)
√√x y
.
√√y z
nombre√√z Ä
,√√Ä Å
estado
ƒƒ "
=
ƒƒ# $
item
ƒƒ% )
.
ƒƒ) *
IdEstadoActual
ƒƒ* 8
==
ƒƒ9 ;
MaestroSettings
ƒƒ< K
.
ƒƒK L
Default
ƒƒL S
.
ƒƒS T.
 IdDetalleMaestroEstadoConfirmado
ƒƒT t
?
ƒƒu v
(
ƒƒw x
int
ƒƒx {
)
ƒƒ{ |)
EstadoDocumentoElectronicoƒƒ| ñ
.ƒƒñ ó

Adicionadoƒƒó °
:ƒƒ¢ £
(ƒƒ§ •
intƒƒ• ®
)ƒƒ® ©*
EstadoDocumentoElectronicoƒƒ© √
.ƒƒ√ ƒ
Anuladoƒƒƒ À
,ƒƒÀ Ã
estadoSigescom
≈≈ *
=
≈≈+ ,
item
≈≈- 1
.
≈≈1 2
IdEstadoActual
≈≈2 @
==
≈≈A C
MaestroSettings
≈≈D S
.
≈≈S T
Default
≈≈T [
.
≈≈[ \.
 IdDetalleMaestroEstadoConfirmado
≈≈\ |
?
≈≈} ~
(≈≈ Ä
int≈≈Ä É
)≈≈É Ñ2
"EstadoSigescomDocumentoElectronico≈≈Ñ ¶
.≈≈¶ ß

Confirmado≈≈ß ±
:≈≈≤ ≥
(≈≈¥ µ
int≈≈µ ∏
)≈≈∏ π2
"EstadoSigescomDocumentoElectronico≈≈π €
.≈≈€ ‹

Invalidado≈≈‹ Ê
,≈≈Ê Á
Binario
∆∆ #
=
∆∆$ %
new
∆∆& )
Binario
∆∆* 1
{
∆∆2 3
archivoBinario
∆∆4 B
=
∆∆C D
Encoding
∆∆E M
.
∆∆M N
UTF8
∆∆N R
.
∆∆R S
GetBytes
∆∆S [
(
∆∆[ \
JsonConvert
∆∆\ g
.
∆∆g h
SerializeObject
∆∆h w
(
∆∆w x
	documento∆∆x Å
)∆∆Å Ç
)∆∆Ç É
}∆∆Ñ Ö
}
«« 
)
«« 
;
«« #
listaEventosAIngresar
»» -
.
»»- .
Add
»». 1
(
»»1 2
new
»»2 5 
Evento_transaccion
»»6 H
{
…… 
id_empleado
   '
=
  ( )

idEmpleado
  * 4
,
  4 5
id_transaccion
ÀÀ *
=
ÀÀ+ ,
item
ÀÀ- 1
.
ÀÀ1 2
IdOrden
ÀÀ2 9
,
ÀÀ9 :
	id_evento
ÃÃ %
=
ÃÃ& '
MaestroSettings
ÃÃ( 7
.
ÃÃ7 8
Default
ÃÃ8 ?
.
ÃÃ? @/
!IdDetalleMaestroEstadoTransmitido
ÃÃ@ a
,
ÃÃa b
fecha
ÕÕ !
=
ÕÕ" #
fechaActual
ÕÕ$ /
,
ÕÕ/ 0

comentario
ŒŒ &
=
ŒŒ' (
$str
ŒŒ) _
}
œœ 
)
œœ 
;
œœ 
}
–– 
}
—— 
if
““ 
(
““ 
guiasDeRemision
““ #
!=
““$ &
null
““' +
&&
““, .
guiasDeRemision
““/ >
.
““> ?
Count
““? D
(
““D E
)
““E F
>
““G H
$num
““I J
)
““J K
{
”” 
var
‘‘ *
resultCrearDocumentosMasivos
‘‘ 4
=
‘‘5 6$
CrearDocumentosMasivos
‘‘7 M
(
‘‘M N&
listaDocumentosAIngresar
‘‘N f
)
‘‘f g
;
‘‘g h
Util
’’ 
.
’’ -
ManejoEnLogicaResultadoSinExito
’’ 8
(
’’8 9*
resultCrearDocumentosMasivos
’’9 U
,
’’U V
$str’’W â
)’’â ä
;’’ä ã
var
÷÷ /
!resultCrearEventosDeTransacciones
÷÷ 9
=
÷÷: ;
_operacionLogica
÷÷< L
.
÷÷L M)
CrearEventosDeTransacciones
÷÷M h
(
÷÷h i#
listaEventosAIngresar
÷÷i ~
)
÷÷~ 
;÷÷ Ä
Util
◊◊ 
.
◊◊ -
ManejoEnLogicaResultadoSinExito
◊◊ 8
(
◊◊8 9/
!resultCrearEventosDeTransacciones
◊◊9 Z
,
◊◊Z [
$str
◊◊\ }
)
◊◊} ~
;
◊◊~ 
}
ÿÿ 
result
ŸŸ 
=
ŸŸ 
new
ŸŸ 
OperationResult
ŸŸ ,
(
ŸŸ, -!
OperationResultEnum
ŸŸ- @
.
ŸŸ@ A
Success
ŸŸA H
,
ŸŸH I
$str
ŸŸJ e
,
ŸŸe f
$str
ŸŸg k
)
ŸŸk l
;
ŸŸl m
return
⁄⁄ 
result
⁄⁄ 
;
⁄⁄ 
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
e
‹‹ 
)
‹‹ 
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
LogicaException
ﬁﬁ )
(
ﬁﬁ) *
$str
ﬁﬁ* t
,
ﬁﬁt u
e
ﬁﬁv w
)
ﬁﬁw x
;
ﬁﬁx y
}
ﬂﬂ 
}
‡‡ 	
}
„„ 
}‰‰ Äö
eD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_RegeneracionJson.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public"" 
async"" 
Task"" 
<"" 
OperationResult"" )
>"") *"
RegenerarJsonDocumento""+ A
(""A B
long""B F
idDocumento""G R
)""R S
{## 	
try$$ 
{%% -
!EstablecimientoComercialExtendido&& 1
sede&&2 6
=&&7 8
_sedeLogica&&9 D
.&&D E 
ObtenerSedeExtendida&&E Y
(&&Y Z
)&&Z [
;&&[ \
	Documento'' 
	documento'' #
=''$ %6
*ObtenerDocumentoElectronicoIncluidoBinario''& P
(''P Q
idDocumento''Q \
)''\ ]
;''] ^
byte(( 
[(( 
](( 
archivo(( 
=((  
null((! %
;((% &
if** 
(** 
	documento** 
.** !
codigoTipoComprobante** 3
==**4 6
MaestroSettings**7 F
.**F G
Default**G N
.**N O&
CodigoDetalleMaestroBoleta**O i
)**i j
{++ 
archivo,, 
=,, 
RegenerarJsonBoleta,, 1
(,,1 2
	documento,,2 ;
.,,; <

idSigescom,,< F
,,,F G
sede,,H L
),,L M
;,,M N
}-- 
else.. 
if.. 
(.. 
	documento.. "
..." #!
codigoTipoComprobante..# 8
==..9 ;
MaestroSettings..< K
...K L
Default..L S
...S T'
CodigoDetalleMaestroFactura..T o
)..o p
{// 
archivo00 
=00  
RegenerarJsonFactura00 2
(002 3
	documento003 <
.00< =

idSigescom00= G
,00G H
sede00I M
)00M N
;00N O
}11 
else22 
if22 
(22 
	documento22 "
.22" #!
codigoTipoComprobante22# 8
==229 ;
MaestroSettings22< K
.22K L
Default22L S
.22S T-
!CodigoDetalleMaestroNotaDeCredito22T u
)22u v
{33 
archivo44 
=44 
await44 #'
RegenerarJsonNotasDeCredito44$ ?
(44? @
	documento44@ I
.44I J

idSigescom44J T
,44T U
sede44V Z
)44Z [
;44[ \
}55 
else66 
if66 
(66 
	documento66 "
.66" #!
codigoTipoComprobante66# 8
==669 ;
MaestroSettings66< K
.66K L
Default66L S
.66S T,
 CodigoDetalleMaestroNotaDeDebito66T t
)66t u
{77 
archivo88 
=88 
await88 #&
RegenerarJsonNotasDeDebito88$ >
(88> ?
	documento88? H
.88H I

idSigescom88I S
,88S T
sede88U Y
)88Y Z
;88Z [
}99 
else:: 
if:: 
(:: 
	documento:: "
.::" #!
codigoTipoComprobante::# 8
==::9 ;
MaestroSettings::< K
.::K L
Default::L S
.::S T7
+CodigoDetalleMaestroGuiaDeRemisionRemitente::T 
)	:: Ä
{;; 
archivo<< 
=<< 
await<< #'
RegenerarJsonGuiaDeRemision<<$ ?
(<<? @
	documento<<@ I
.<<I J

idSigescom<<J T
,<<T U
sede<<V Z
)<<Z [
;<<[ \
}== 
Binario>> 
binario>> 
=>>  !
new>>" %
Binario>>& -
(>>- .
)>>. /
{?? 
id@@ 
=@@ 
	documento@@ "
.@@" #
idBinarioDocumento@@# 5
,@@5 6
archivoBinarioAA "
=AA# $
archivoAA% ,
}BB 
;BB 
OperationResultCC 
resultCC  &
=CC' (
ActualizarBinarioCC) :
(CC: ;
binarioCC; B
)CCB C
;CCC D
UtilDD 
.DD +
ManejoEnLogicaResultadoSinExitoDD 4
(DD4 5
resultDD5 ;
,DD; <
$strDD= g
)DDg h
;DDh i
returnEE 
resultEE 
;EE 
}FF 
catchHH 
(HH 
	ExceptionHH 
eHH 
)HH 
{II 
throwJJ 
newJJ 
LogicaExceptionJJ )
(JJ) *
$strJJ* T
,JJT U
eJJV W
)JJW X
;JJX Y
}KK 
}LL 	
publicNN 
byteNN 
[NN 
]NN 
RegenerarJsonBoletaNN )
(NN) *
longNN* .
idOrdenNN/ 6
,NN6 7-
!EstablecimientoComercialExtendidoNN8 Y
sedeNNZ ^
)NN^ _
{OO 	
tryPP 
{QQ 
OrdenDeVentaRR 
ordenDeVentaRR )
=RR* +
_operacionLogicaRR, <
.RR< =
ObtenerOrdenDeVentaRR= P
(RRP Q
idOrdenRRQ X
)RRX Y
;RRY Z-
!EstablecimientoComercialExtendidoTT 1
establecimientoTT2 A
=TTB C!
_establecimientoDatosTTD Y
.TTY Z5
(ObtenerEstablecimientoComercialExtendido	TTZ Ç
(
TTÇ É
(
TTÉ Ñ
int
TTÑ á
)
TTá à
ordenDeVenta
TTà î
.
TTî ï
Transaccion
TTï †
(
TT† °
)
TT° ¢
.
TT¢ £
Actor_negocio2
TT£ ±
.
TT± ≤$
id_actor_negocio_padre
TT≤ »
)
TT» …
;
TT…  
BoletaDeVentaUU 
boletaDeVentaUU +
=UU, -
newUU. 1
BoletaDeVentaUU2 ?
(UU? @
ordenDeVentaUU@ L
,UUL M
sedeUUN R
,UUR S
establecimientoUUT c
,UUc d
nullUUe i
,UUi j
falseUUk p
,UUp q
(UUr s-
 ModoImpresionCaracteristicasEnum	UUs ì
)
UUì î
VentasSettings
UUî ¢
.
UU¢ £
Default
UU£ ™
.
UU™ ´*
modoImpresionCaracteristicas
UU´ «
)
UU« »
;
UU» … 
DocumentoElectronicoVV $ 
documentoElectronicoVV% 9
=VV: ;%
_generacionArchivosLogicaVV< U
.VVU V-
!ObtenerDocumentoElectronicoBoletaVVV w
(VVw x
boletaDeVenta	VVx Ö
)
VVÖ Ü
;
VVÜ á
returnWW 
EncodingWW 
.WW  
UTF8WW  $
.WW$ %
GetBytesWW% -
(WW- .
JsonConvertWW. 9
.WW9 :
SerializeObjectWW: I
(WWI J 
documentoElectronicoWWJ ^
)WW^ _
)WW_ `
;WW` a
}XX 
catchYY 
(YY 
	ExceptionYY 
eYY 
)YY 
{ZZ 
throw[[ 
new[[ 
	Exception[[ #
([[# $
$str[[$ S
,[[S T
e[[U V
)[[V W
;[[W X
}\\ 
}]] 	
public__ 
byte__ 
[__ 
]__  
RegenerarJsonFactura__ *
(__* +
long__+ /
idOrden__0 7
,__7 8-
!EstablecimientoComercialExtendido__9 Z
sede__[ _
)___ `
{`` 	
tryaa 
{bb 
OrdenDeVentacc 
ordenDeVentacc )
=cc* +
_operacionLogicacc, <
.cc< =
ObtenerOrdenDeVentacc= P
(ccP Q
idOrdenccQ X
)ccX Y
;ccY Z-
!EstablecimientoComercialExtendidodd 1
establecimientodd2 A
=ddB C!
_establecimientoDatosddD Y
.ddY Z<
/ObtenerEstablecimientoComercialExtendidoConLogo	ddZ â
(
ddâ ä
(
ddä ã
int
ddã é
)
ddé è
ordenDeVenta
ddè õ
.
ddõ ú
Transaccion
ddú ß
(
ddß ®
)
dd® ©
.
dd© ™
Actor_negocio2
dd™ ∏
.
dd∏ π$
id_actor_negocio_padre
ddπ œ
)
ddœ –
;
dd– —
Facturaee 
facturaee 
=ee  !
newee" %
Facturaee& -
(ee- .
ordenDeVentaee. :
,ee: ;
sedeee< @
,ee@ A
establecimientoeeB Q
,eeQ R
nulleeS W
,eeW X
falseeeY ^
,ee^ _
(ee` a-
 ModoImpresionCaracteristicasEnum	eea Å
)
eeÅ Ç
VentasSettings
eeÇ ê
.
eeê ë
Default
eeë ò
.
eeò ô*
modoImpresionCaracteristicas
eeô µ
)
eeµ ∂
;
ee∂ ∑ 
DocumentoElectronicoff $ 
documentoElectronicoff% 9
=ff: ;%
_generacionArchivosLogicaff< U
.ffU V.
"ObtenerDocumentoElectronicoFacturaffV x
(ffx y
factura	ffy Ä
)
ffÄ Å
;
ffÅ Ç
returngg 
Encodinggg 
.gg  
UTF8gg  $
.gg$ %
GetBytesgg% -
(gg- .
JsonConvertgg. 9
.gg9 :
SerializeObjectgg: I
(ggI J 
documentoElectronicoggJ ^
)gg^ _
)gg_ `
;gg` a
}hh 
catchii 
(ii 
	Exceptionii 
eii 
)ii 
{jj 
throwkk 
newkk 
	Exceptionkk #
(kk# $
$strkk$ T
,kkT U
ekkV W
)kkW X
;kkX Y
}ll 
}mm 	
publicoo 
asyncoo 
Taskoo 
<oo 
byteoo 
[oo 
]oo  
>oo  !'
RegenerarJsonNotasDeCreditooo" =
(oo= >
longoo> B
idOrdenooC J
,ooJ K-
!EstablecimientoComercialExtendidoooL m
sedeoon r
)oor s
{pp 	
tryqq 
{rr 
OperacionDeVentass  
operacionDeVentass! 1
=ss2 3
_operacionLogicass4 D
.ssD E
ObtenerOrdenDeVentassE X
(ssX Y
idOrdenssY `
)ss` a
;ssa b4
(EstablecimientoComercialExtendidoConLogott 8
establecimientott9 H
=ttI J!
_establecimientoDatosttK `
.tt` a<
/ObtenerEstablecimientoComercialExtendidoConLogo	tta ê
(
ttê ë
(
ttë í
int
ttí ï
)
ttï ñ
operacionDeVenta
ttñ ¶
.
tt¶ ß
Transaccion
ttß ≤
(
tt≤ ≥
)
tt≥ ¥
.
tt¥ µ
Actor_negocio2
ttµ √
.
tt√ ƒ$
id_actor_negocio_padre
ttƒ ⁄
)
tt⁄ €
;
tt€ ‹
varvv 
tiposNotasDeCreditovv '
=vv( )
awaitvv* /
_maestroLogicavv0 >
.vv> ?(
ObtenerDetallesMaestrosAsyncvv? [
(vv[ \
MaestroSettingsvv\ k
.vvk l
Defaultvvl s
.vvs t4
'IdMaestroTipoDeNotaDeCreditoElectronica	vvt õ
)
vvõ ú
;
vvú ù
NotaDeCreditoww 
notaDeCreditoww +
=ww, -
newww. 1
NotaDeCreditoww2 ?
(ww? @
operacionDeVentaww@ P
,wwP Q
sedewwR V
,wwV W
establecimientowwX g
,wwg h
tiposNotasDeCreditowwi |
,ww| }
null	ww~ Ç
,
wwÇ É
false
wwÑ â
,
wwâ ä
(
wwã å.
 ModoImpresionCaracteristicasEnum
wwå ¨
)
ww¨ ≠
VentasSettings
ww≠ ª
.
wwª º
Default
wwº √
.
ww√ ƒ*
modoImpresionCaracteristicas
wwƒ ‡
)
ww‡ ·
;
ww· ‚ 
DocumentoElectronicoxx $ 
documentoElectronicoxx% 9
=xx: ;%
_generacionArchivosLogicaxx< U
.xxU V2
&ObtenerDocumentoElectronicoNotaCreditoxxV |
(xx| }
notaDeCredito	xx} ä
)
xxä ã
;
xxã å
returnyy 
Encodingyy 
.yy  
UTF8yy  $
.yy$ %
GetBytesyy% -
(yy- .
JsonConvertyy. 9
.yy9 :
SerializeObjectyy: I
(yyI J 
documentoElectronicoyyJ ^
)yy^ _
)yy_ `
;yy` a
}zz 
catch{{ 
({{ 
	Exception{{ 
e{{ 
){{ 
{|| 
throw}} 
new}} 
	Exception}} #
(}}# $
$str}}$ \
,}}\ ]
e}}^ _
)}}_ `
;}}` a
}~~ 
} 	
public
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ  
>
ÅÅ  !(
RegenerarJsonNotasDeDebito
ÅÅ" <
(
ÅÅ< =
long
ÅÅ= A
idOrden
ÅÅB I
,
ÅÅI J/
!EstablecimientoComercialExtendido
ÅÅK l
sede
ÅÅm q
)
ÅÅq r
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
OperacionDeVenta
ÖÖ  
operacionDeVenta
ÖÖ! 1
=
ÖÖ2 3
_operacionLogica
ÖÖ4 D
.
ÖÖD E!
ObtenerOrdenDeVenta
ÖÖE X
(
ÖÖX Y
idOrden
ÖÖY `
)
ÖÖ` a
;
ÖÖa b/
!EstablecimientoComercialExtendido
ÜÜ 1
establecimiento
ÜÜ2 A
=
ÜÜB C#
_establecimientoDatos
ÜÜD Y
.
ÜÜY Z7
(ObtenerEstablecimientoComercialExtendidoÜÜZ Ç
(ÜÜÇ É
(ÜÜÉ Ñ
intÜÜÑ á
)ÜÜá à 
operacionDeVentaÜÜà ò
.ÜÜò ô
TransaccionÜÜô §
(ÜÜ§ •
)ÜÜ• ¶
.ÜÜ¶ ß
Actor_negocio2ÜÜß µ
.ÜÜµ ∂&
id_actor_negocio_padreÜÜ∂ Ã
)ÜÜÃ Õ
;ÜÜÕ Œ
var
áá  
tiposNotasDeDebito
áá &
=
áá' (
await
áá) .
_maestroLogica
áá/ =
.
áá= >*
ObtenerDetallesMaestrosAsync
áá> Z
(
ááZ [
MaestroSettings
áá[ j
.
ááj k
Default
áák r
.
áár s5
&IdMaestroTipoDeNotaDeDebitoElectronicaáás ô
)ááô ö
;ááö õ
NotaDeDebito
àà 
notaDeDebito
àà )
=
àà* +
new
àà, /
NotaDeDebito
àà0 <
(
àà< =
operacionDeVenta
àà= M
,
ààM N
sede
ààO S
,
ààS T
establecimiento
ààU d
,
ààd e 
tiposNotasDeDebito
ààf x
,
ààx y
null
ààz ~
,
àà~ 
falseààÄ Ö
,ààÖ Ü
(ààá à0
 ModoImpresionCaracteristicasEnumààà ®
)àà® ©
VentasSettingsàà© ∑
.àà∑ ∏
Defaultàà∏ ø
.ààø ¿,
modoImpresionCaracteristicasàà¿ ‹
)àà‹ ›
;àà› ﬁ"
DocumentoElectronico
ââ $"
documentoElectronico
ââ% 9
=
ââ: ;'
_generacionArchivosLogica
ââ< U
.
ââU V3
%ObtenerDocumentoElectronicoNotaDebito
ââV {
(
ââ{ |
notaDeDebitoââ| à
)ââà â
;âââ ä
return
ää 
Encoding
ää 
.
ää  
UTF8
ää  $
.
ää$ %
GetBytes
ää% -
(
ää- .
JsonConvert
ää. 9
.
ää9 :
SerializeObject
ää: I
(
ääI J"
documentoElectronico
ääJ ^
)
ää^ _
)
ää_ `
;
ää` a
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
	Exception
éé #
(
éé# $
$str
éé$ [
,
éé[ \
e
éé] ^
)
éé^ _
;
éé_ `
}
èè 
}
êê 	
public
íí 
async
íí 
Task
íí 
<
íí 
byte
íí 
[
íí 
]
íí  
>
íí  !)
RegenerarJsonGuiaDeRemision
íí" =
(
íí= >
long
íí> B
idMovimiento
ííC O
,
ííO P/
!EstablecimientoComercialExtendido
ííQ r
sede
íís w
)
ííw x
{
ìì 	
try
îî 
{
ïï !
MovimientoDeAlmacen
ññ #!
movimientoDeAlmacen
ññ$ 7
=
ññ8 9
_operacionLogica
ññ: J
.
ññJ K+
ObtenerMovimientoDeMercaderia
ññK h
(
ññh i
idMovimiento
ññi u
)
ññu v
;
ññv w/
!EstablecimientoComercialExtendido
óó 1
establecimiento
óó2 A
=
óóB C#
_establecimientoDatos
óóD Y
.
óóY Z7
(ObtenerEstablecimientoComercialExtendidoóóZ Ç
(óóÇ É
(óóÉ Ñ
intóóÑ á
)óóá à#
movimientoDeAlmacenóóà õ
.óóõ ú
Transaccionóóú ß
(óóß ®
)óó® ©
.óó© ™
Actor_negocio2óó™ ∏
.óó∏ π&
id_actor_negocio_padreóóπ œ
)óóœ –
;óó– —
var
òò 
proveedores
òò 
=
òò  !!
_actorNegocioLogica
òò" 5
.
òò5 6(
ObtenerProveedoresVigentes
òò6 P
(
òòP Q
)
òòQ R
;
òòR S
var
ôô %
modalidadesDeTransporte
ôô +
=
ôô, -
await
ôô. 3
_maestroLogica
ôô4 B
.
ôôB C*
ObtenerDetallesMaestrosAsync
ôôC _
(
ôô_ `
MaestroSettings
ôô` o
.
ôôo p
Default
ôôp w
.
ôôw x+
IdMaestroModalidadDeTrasladoôôx î
)ôôî ï
;ôôï ñ
var
öö !
motivosDeTransporte
öö '
=
öö( )
await
öö* /
_maestroLogica
öö0 >
.
öö> ?*
ObtenerDetallesMaestrosAsync
öö? [
(
öö[ \
MaestroSettings
öö\ k
.
öök l
Default
ööl s
.
öös t(
IdMaestroMotivoDeTrasladoööt ç
)ööç é
;ööé è
GuiaDeRemision
õõ 
guiaDeRemision
õõ -
=
õõ. /
new
õõ0 3
GuiaDeRemision
õõ4 B
(
õõB C!
movimientoDeAlmacen
õõC V
,
õõV W
sede
õõX \
,
õõ\ ]
establecimiento
õõ^ m
,
õõm n
null
õõo s
,
õõs t
false
õõu z
,
õõz {
(
õõ| }/
 ModoImpresionCaracteristicasEnumõõ} ù
)õõù û
VentasSettingsõõû ¨
.õõ¨ ≠
Defaultõõ≠ ¥
.õõ¥ µ,
modoImpresionCaracteristicasõõµ —
,õõ— “
proveedoresõõ” ﬁ
,õõﬁ ﬂ'
modalidadesDeTransporteõõ‡ ˜
,õõ˜ ¯#
motivosDeTransporteõõ˘ å
)õõå ç
;õõç é
GuiaRemision
úú 
guiaRemision
úú )
=
úú* +'
_generacionArchivosLogica
úú, E
.
úúE F7
)ObtenerDocumentoElectronicoGuiaDeRemision
úúF o
(
úúo p
guiaDeRemision
úúp ~
)
úú~ 
;úú Ä
return
ùù 
Encoding
ùù 
.
ùù  
UTF8
ùù  $
.
ùù$ %
GetBytes
ùù% -
(
ùù- .
JsonConvert
ùù. 9
.
ùù9 :
SerializeObject
ùù: I
(
ùùI J
guiaRemision
ùùJ V
)
ùùV W
)
ùùW X
;
ùùX Y
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
	Exception
°° #
(
°°# $
$str
°°$ ]
,
°°] ^
e
°°_ `
)
°°` a
;
°°a b
}
¢¢ 
}
££ 	
}
¶¶ 
}ßß º”
TD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
:6 7)
IFacturacionElectronicaLogica8 U
{ 
public #
IFacturacionRepositorio &
_facturacionDatos' 8
;8 9
public %
IGeneracionArchivosLogica (%
_generacionArchivosLogica) B
;B C
private 
readonly 
IActorNegocioLogica ,
_actorNegocioLogica- @
;@ A
private 
readonly 
IOperacionLogica )
_operacionLogica* :
;: ;
private 
readonly (
IEstablecimiento_Repositorio 5!
_establecimientoDatos6 K
;K L
private 
readonly 
ISede_Logica %
_sedeLogica& 1
;1 2
private 
readonly 
IMaestroLogica '
_maestroLogica( 6
;6 7
private   
readonly   
IMailer    
_mailer  ! (
;  ( )
public"" (
FacturacionElectronicaLogica"" +
(""+ ,#
IFacturacionRepositorio"", C
facturacionDatos""D T
,""T U
IActorNegocioLogica""V i
actorNegocioLogica""j |
,""| }
IOperacionLogica	""~ é
operacionLogica
""è û
,
""û ü
IMaestroLogica
""† Æ
maestroLogica
""Ø º
,
""º Ω'
IGeneracionArchivosLogica
""æ ◊&
generacionArchivosLogica
""ÿ 
,
"" Ò
IMailer
""Ú ˘
mailer
""˙ Ä
,
""Ä Å
ISede_Logica
""Ç é

sedeLogica
""è ô
,
""ô ö*
IEstablecimiento_Repositorio
""õ ∑"
establecimientoDatos
""∏ Ã
)
""Ã Õ
{## 	
_facturacionDatos$$ 
=$$ 
facturacionDatos$$  0
;$$0 1%
_generacionArchivosLogica%% %
=%%& '$
generacionArchivosLogica%%( @
;%%@ A
_actorNegocioLogica&& 
=&&  !
actorNegocioLogica&&" 4
;&&4 5
_operacionLogica'' 
='' 
operacionLogica'' .
;''. /
_maestroLogica(( 
=(( 
maestroLogica(( *
;((* +
_mailer)) 
=)) 
mailer)) 
;)) 
_sedeLogica** 
=** 

sedeLogica** $
;**$ %!
_establecimientoDatos++ !
=++" # 
establecimientoDatos++$ 8
;++8 9
},, 	
public.. 
ActorComercial.. 
ObtenerEmisor.. +
(..+ ,
int.., /
idEmisor..0 8
)..8 9
{// 	
try00 
{11 
return22 
_actorNegocioLogica22 *
.22* +!
ObtenerActorComercial22+ @
(22@ A
idEmisor22A I
)22I J
;22J K
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{55 
throw66 
e66 
;66 
}77 
}88 	
public:: 
byte:: 
[:: 
]:: 
ObtenerCertificado:: (
(::( )
string::) /
nombreCertificado::0 A
)::A B
{;; 	
try<< 
{== 
string>> 
downloadUrl>> "
=>># $*
FacturacionElectronicaSettings>>% C
.>>C D
Default>>D K
.>>K L/
#UrlServidorFptCertificadosDigitales>>L o
;>>o p
string?? 
usuario?? 
=??  *
FacturacionElectronicaSettings??! ?
.??? @
Default??@ G
.??G H3
'UsuarioServidorFptCertificadosDigitales??H o
;??o p
string@@ 
password@@ 
=@@  !*
FacturacionElectronicaSettings@@" @
.@@@ A
Default@@A H
.@@H I4
(PasswordServidorFptCertificadosDigitales@@I q
;@@q r
FtpWebRequestBB 
requestBB %
=BB& '
(BB( )
FtpWebRequestBB) 6
)BB6 7

WebRequestBB7 A
.BBA B
CreateBBB H
(BBH I
stringBBI O
.BBO P
FormatBBP V
(BBV W
$strBBW d
,BBd e
downloadUrlBBf q
,BBq r
nombreCertificado	BBs Ñ
)
BBÑ Ö
)
BBÖ Ü
;
BBÜ á
requestDD 
.DD 
MethodDD 
=DD  
WebRequestMethodsDD! 2
.DD2 3
FtpDD3 6
.DD6 7
DownloadFileDD7 C
;DDC D
requestEE 
.EE 
CredentialsEE #
=EE$ %
newEE& )
NetworkCredentialEE* ;
(EE; <
usuarioEE< C
,EEC D
passwordEEE M
)EEM N
;EEN O
requestFF 
.FF 
	UseBinaryFF !
=FF" #
trueFF$ (
;FF( )
requestGG 
.GG 
ProxyGG 
=GG 
nullGG  $
;GG$ %
FtpWebResponseII 
responseII '
=II( )
(II* +
FtpWebResponseII+ 9
)II9 :
requestII: A
.IIA B
GetResponseIIB M
(IIM N
)IIN O
;IIO P
StreamKK 
streamKK 
=KK 
responseKK  (
.KK( )
GetResponseStreamKK) :
(KK: ;
)KK; <
;KK< =
MemoryStreamNN 
memoryStreamNN )
=NN* +
newNN, /
MemoryStreamNN0 <
(NN< =
)NN= >
;NN> ?
byteOO 
[OO 
]OO 
chunkOO 
=OO 
newOO "
byteOO# '
[OO' (
$numOO( ,
]OO, -
;OO- .
intPP 
	bytesReadPP 
;PP 
whileQQ 
(QQ 
(QQ 
	bytesReadQQ !
=QQ" #
streamQQ$ *
.QQ* +
ReadQQ+ /
(QQ/ 0
chunkQQ0 5
,QQ5 6
$numQQ7 8
,QQ8 9
chunkQQ: ?
.QQ? @
LengthQQ@ F
)QQF G
)QQG H
>QQI J
$numQQK L
)QQL M
{RR 
memoryStreamSS  
.SS  !
WriteSS! &
(SS& '
chunkSS' ,
,SS, -
$numSS. /
,SS/ 0
	bytesReadSS1 :
)SS: ;
;SS; <
}TT 
responseUU 
.UU 
CloseUU 
(UU 
)UU  
;UU  !
streamVV 
.VV 
CloseVV 
(VV 
)VV 
;VV 
returnXX 
memoryStreamXX #
.XX# $
ToArrayXX$ +
(XX+ ,
)XX, -
;XX- .
}YY 
catchZZ 
(ZZ 
	ExceptionZZ 
)ZZ 
{[[ 
throw\\ 
new\\ 
LogicaException\\ )
(\\) *
$str\\* S
)\\S T
;\\T U
}]] 
}^^ 	
publicbb 
OperationResultbb "
CrearDocumentosMasivosbb 5
(bb5 6
Listbb6 :
<bb: ;
	Documentobb; D
>bbD E
documentosAIngresarbbF Y
)bbY Z
{cc 	
trydd 
{ee 
returnff 
_facturacionDatosff (
.ff( )"
CrearDocumentosMasivosff) ?
(ff? @
documentosAIngresarff@ S
)ffS T
;ffT U
}gg 
catchhh 
(hh 
	Exceptionhh 
ehh 
)hh 
{ii 
throwjj 
newjj 
LogicaExceptionjj )
(jj) *
$strjj* W
,jjW X
ejjY Z
)jjZ [
;jj[ \
}kk 
}ll 	
publicnn 
OperationResultnn '
ActualizarDocumentoAEnviadonn :
(nn: ;
longnn; ?
idDocumentonn@ K
)nnK L
{oo 	
trypp 
{qq 
returnrr 
_facturacionDatosrr (
.rr( )'
ActualizarDocumentoAEnviadorr) D
(rrD E
idDocumentorrE P
)rrP Q
;rrQ R
}ss 
catchtt 
(tt 
	Exceptiontt 
ett 
)tt 
{uu 
throwvv 
newvv 
LogicaExceptionvv )
(vv) *
$strvv* W
,vvW X
evvY Z
)vvZ [
;vv[ \
}ww 
}xx 	
publiczz 
OperationResultzz )
ActualizarDocumentosAEnviadoszz <
(zz< =
longzz= A
[zzA B
]zzB C
idDocumentoszzD P
)zzP Q
{{{ 	
try|| 
{}} 
return~~ 
_facturacionDatos~~ (
.~~( ))
ActualizarDocumentosAEnviados~~) F
(~~F G
idDocumentos~~G S
)~~S T
;~~T U
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* W
,
ÇÇW X
e
ÇÇY Z
)
ÇÇZ [
;
ÇÇ[ \
}
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
List
ÜÜ 
<
ÜÜ 
	Documento
ÜÜ 
>
ÜÜ 
ObtenerDocumentos
ÜÜ 0
(
ÜÜ0 1
List
ÜÜ1 5
<
ÜÜ5 6
long
ÜÜ6 :
>
ÜÜ: ;
idDocumentos
ÜÜ< H
)
ÜÜH I
{
áá 	
try
àà 
{
ââ %
IFacturacionRepositorio
ãã '#
nuevaFacturacionDatos
ãã( =
=
ãã> ?
_facturacionDatos
ãã@ Q
.
ããQ R%
ObtenerNuevoRepositorio
ããR i
(
ããi j
)
ããj k
;
ããk l
return
åå #
nuevaFacturacionDatos
åå ,
.
åå, -
ObtenerDocumentos
åå- >
(
åå> ?
idDocumentos
åå? K
)
ååK L
.
ååL M
ToList
ååM S
(
ååS T
)
ååT U
;
ååU V
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
e
êê 
;
êê 
}
ëë 
}
íí 	
public
îî 
	Documento
îî 8
*ObtenerDocumentoElectronicoIncluidoBinario
îî C
(
îîC D
long
îîD H
id
îîI K
)
îîK L
{
ïï 	
try
ññ 
{
óó %
IFacturacionRepositorio
ôô '#
nuevaFacturacionDatos
ôô( =
=
ôô> ?
_facturacionDatos
ôô@ Q
.
ôôQ R%
ObtenerNuevoRepositorio
ôôR i
(
ôôi j
)
ôôj k
;
ôôk l
return
öö #
nuevaFacturacionDatos
öö ,
.
öö, -8
*ObtenerDocumentoElectronicoIncluidoBinario
öö- W
(
ööW X
id
ööX Z
)
ööZ [
;
öö[ \
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
ùù 
throw
ûû 
e
ûû 
;
ûû 
}
üü 
}
†† 	
public
¢¢ 
List
¢¢ 
<
¢¢ 
	Documento
¢¢ 
>
¢¢ *
ObtenerDocumentosEntreFechas
¢¢ ;
(
¢¢; <
DateTime
¢¢< D

fechaDesde
¢¢E O
,
¢¢O P
DateTime
¢¢Q Y

fechaHasta
¢¢Z d
)
¢¢d e
{
££ 	
try
§§ 
{
•• 
return
¶¶ 
_facturacionDatos
¶¶ (
.
¶¶( )*
ObtenerDocumentosEntreFechas
¶¶) E
(
¶¶E F

fechaDesde
¶¶F P
,
¶¶P Q

fechaHasta
¶¶R \
)
¶¶\ ]
.
¶¶] ^
ToList
¶¶^ d
(
¶¶d e
)
¶¶e f
;
¶¶f g
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
©© 
throw
™™ 
new
™™ 
LogicaException
™™ )
(
™™) *
$str
™™* T
,
™™T U
e
™™V W
)
™™W X
;
™™X Y
}
´´ 
}
¨¨ 	
public
≤≤ 
OperationResult
≤≤ 

CrearEnvio
≤≤ )
(
≤≤) *
string
≤≤* 0 
identificadorEnvio
≤≤1 C
,
≤≤C D
string
≤≤E K
	tipoEnvio
≤≤L U
,
≤≤U V
int
≤≤W Z
estado
≤≤[ a
,
≤≤a b
string
≤≤c i
codigoRespuesta
≤≤j y
,
≤≤y z
string≤≤{ Å
observacion≤≤Ç ç
,≤≤ç é
string≤≤è ï
numeroTicket≤≤ñ ¢
,≤≤¢ £
byte≤≤§ ®
[≤≤® ©
]≤≤© ™
envio≤≤´ ∞
,≤≤∞ ±
byte≤≤≤ ∂
[≤≤∂ ∑
]≤≤∑ ∏
	respuesta≤≤π ¬
,≤≤¬ √
	ModoEnvio≤≤ƒ Õ
	modoEnvio≤≤Œ ◊
)≤≤◊ ÿ
{
≥≥ 	
try
¥¥ 
{
µµ 
Envio
∂∂ 

nuevoEnvio
∂∂  
=
∂∂! "
new
∂∂# &
Envio
∂∂' ,
{
∑∑ 

fechaEnvio
∏∏ 
=
∏∏  
DateTimeUtil
∏∏  ,
.
∏∏, -
FechaActual
∏∏- 8
(
∏∏8 9
)
∏∏9 :
,
∏∏: ; 
identificadorEnvio
ππ &
=
ππ' ( 
identificadorEnvio
ππ) ;
,
ππ; <
	tipoEnvio
∫∫ 
=
∫∫ 
	tipoEnvio
∫∫  )
,
∫∫) *
estado
ªª 
=
ªª 
estado
ªª #
,
ªª# $
codigoRespuesta
ºº #
=
ºº$ %
codigoRespuesta
ºº& 5
,
ºº5 6
observacion
ΩΩ 
=
ΩΩ  !
observacion
ΩΩ" -
,
ΩΩ- .
numeroTicket
ææ  
=
ææ! "
numeroTicket
ææ# /
,
ææ/ 0
	modoEnvio
øø 
=
øø 
(
øø  !
int
øø! $
)
øø$ %
	modoEnvio
øø% .
}
¿¿ 
;
¿¿ 
Binario
¡¡ 
envioBinario
¡¡ $
=
¡¡% &
new
¡¡' *
Binario
¡¡+ 2
{
¡¡3 4
archivoBinario
¡¡5 C
=
¡¡D E
envio
¡¡F K
}
¡¡L M
;
¡¡M N

nuevoEnvio
¬¬ 
.
¬¬ 
Binario
¬¬ "
=
¬¬# $
envioBinario
¬¬% 1
;
¬¬1 2
if
√√ 
(
√√ 
	respuesta
√√ 
!=
√√  
null
√√! %
)
√√% &
{
ƒƒ 
Binario
≈≈ 
respuestaBinario
≈≈ ,
=
≈≈- .
new
≈≈/ 2
Binario
≈≈3 :
{
≈≈; <
archivoBinario
≈≈= K
=
≈≈L M
	respuesta
≈≈N W
}
≈≈X Y
;
≈≈Y Z

nuevoEnvio
∆∆ 
.
∆∆ 
Binario1
∆∆ '
=
∆∆( )
respuestaBinario
∆∆* :
;
∆∆: ;
}
«« 
else
»» 
{
…… 

nuevoEnvio
   
.
    
idBinarioRespuesta
   1
=
  2 3
null
  4 8
;
  8 9
}
ÀÀ 
return
ÃÃ 
_facturacionDatos
ÃÃ (
.
ÃÃ( )

CrearEnvio
ÃÃ) 3
(
ÃÃ3 4

nuevoEnvio
ÃÃ4 >
)
ÃÃ> ?
;
ÃÃ? @
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* J
,
––J K
e
––L M
)
––M N
;
––N O
}
—— 
}
““ 	
public
‘‘ 
OperationResult
‘‘ #
ActualizarEstadoEnvio
‘‘ 4
(
‘‘4 5
Envio
‘‘5 :
envioAActualizar
‘‘; K
)
‘‘K L
{
’’ 	
try
÷÷ 
{
◊◊ 
return
ÿÿ 
_facturacionDatos
ÿÿ (
.
ÿÿ( )#
ActualizarEstadoEnvio
ÿÿ) >
(
ÿÿ> ?
envioAActualizar
ÿÿ? O
)
ÿÿO P
;
ÿÿP Q
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
e
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
e
‹‹ 
;
‹‹ 
}
›› 
}
ﬁﬁ 	
public
‡‡ 
OperationResult
‡‡ 4
&ActualizarEstadoObservacionTicketEnvio
‡‡ E
(
‡‡E F
Envio
‡‡F K
envioAActualizar
‡‡L \
)
‡‡\ ]
{
·· 	
try
‚‚ 
{
„„ 
return
‰‰ 
_facturacionDatos
‰‰ (
.
‰‰( )4
&ActualizarEstadoObservacionTicketEnvio
‰‰) O
(
‰‰O P
envioAActualizar
‰‰P `
)
‰‰` a
;
‰‰a b
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÁÁ 
throw
ËË 
e
ËË 
;
ËË 
}
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
OperationResult
ÏÏ 
ActualizarEnvios
ÏÏ /
(
ÏÏ/ 0
List
ÏÏ0 4
<
ÏÏ4 5
Envio
ÏÏ5 :
>
ÏÏ: ;
enviosAActualizar
ÏÏ< M
)
ÏÏM N
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
return
 
_facturacionDatos
 (
.
( )
ActualizarEnvios
) 9
(
9 :
enviosAActualizar
: K
)
K L
;
L M
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
new
ÙÙ 
LogicaException
ÙÙ )
(
ÙÙ) *
$str
ÙÙ* O
,
ÙÙO P
e
ÙÙQ R
)
ÙÙR S
;
ÙÙS T
}
ıı 
}
ˆˆ 	
public
¯¯ 
Envio
¯¯ 
ObtenerEnvio
¯¯ !
(
¯¯! "
long
¯¯" &
idEnvio
¯¯' .
)
¯¯. /
{
˘˘ 	
try
˙˙ 
{
˚˚ 
return
¸¸ 
_facturacionDatos
¸¸ (
.
¸¸( )
ObtenerEnvio
¸¸) 5
(
¸¸5 6
idEnvio
¸¸6 =
)
¸¸= >
;
¸¸> ?
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* E
,
ÄÄE F
e
ÄÄG H
)
ÄÄH I
;
ÄÄI J
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
List
ÑÑ 
<
ÑÑ 
EnvioSimplificado
ÑÑ %
>
ÑÑ% &/
!ObtenerEnviosSinCodigoDeRespuesta
ÑÑ' H
(
ÑÑH I
)
ÑÑI J
{
ÖÖ 	
try
ÜÜ 
{
áá 
return
àà 
_facturacionDatos
àà (
.
àà( )/
!ObtenerEnviosSinCodigoDeRespuesta
àà) J
(
ààJ K
)
ààK L
.
ààL M
ToList
ààM S
(
ààS T
)
ààT U
;
ààU V
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
e
åå 
;
åå 
}
çç 
}
éé 	
public
êê 
List
êê 
<
êê 
Envio
êê 
>
êê &
ObtenerEnviosEntreFechas
êê 3
(
êê3 4
DateTime
êê4 <

fechaDesde
êê= G
,
êêG H
DateTime
êêI Q

fechaHasta
êêR \
)
êê\ ]
{
ëë 	
try
íí 
{
ìì 
return
îî 
_facturacionDatos
îî (
.
îî( )G
9ObtenerEnviosInclusiveEnvioDocumentoYDocumentoEntreFechas
îî) b
(
îîb c

fechaDesde
îîc m
,
îîm n

fechaHasta
îîo y
)
îîy z
.
îîz {
ToListîî{ Å
(îîÅ Ç
)îîÇ É
;îîÉ Ñ
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* P
,
òòP Q
e
òòR S
)
òòS T
;
òòT U
}
öö 
}
õõ 	
public
†† 
List
†† 
<
†† 
Envio
†† 
>
†† /
!ObteneEnviosConExcepcionAReenviar
†† <
(
††< =
)
††= >
{
°° 	
try
¢¢ 
{
££ 
List
§§ 
<
§§ 
Envio
§§ 
>
§§ 
enviosPorReenviar
§§ -
=
§§. /
new
§§0 3
List
§§4 8
<
§§8 9
Envio
§§9 >
>
§§> ?
(
§§? @
)
§§@ A
;
§§A B
enviosPorReenviar
¶¶ !
=
¶¶" #
_facturacionDatos
¶¶$ 5
.
¶¶5 6;
-ObtenerEnviosIncluidoDocumentoIncluidoBinario
¶¶6 c
(
¶¶c d
(
¶¶d e
int
¶¶e h
)
¶¶h i
EstadoEnvio
¶¶i t
.
¶¶t u
ConExcepcion¶¶u Å
)¶¶Å Ç
.¶¶Ç É
ToList¶¶É â
(¶¶â ä
)¶¶ä ã
;¶¶ã å
return
ßß 
enviosPorReenviar
ßß (
;
ßß( )
}
®® 
catch
©© 
(
©© 
	Exception
©© 
e
©© 
)
©© 
{
™™ 
throw
´´ 
e
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
public
ØØ 
List
ØØ 
<
ØØ 
Envio
ØØ 
>
ØØ -
ObteneEnviosPendientesAReenviar
ØØ :
(
ØØ: ;
)
ØØ; <
{
∞∞ 	
try
±± 
{
≤≤ 
List
≥≥ 
<
≥≥ 
Envio
≥≥ 
>
≥≥ 
enviosPorReenviar
≥≥ -
=
≥≥. /
new
≥≥0 3
List
≥≥4 8
<
≥≥8 9
Envio
≥≥9 >
>
≥≥> ?
(
≥≥? @
)
≥≥@ A
;
≥≥A B
enviosPorReenviar
µµ !
=
µµ" #
_facturacionDatos
µµ$ 5
.
µµ5 6;
-ObtenerEnviosIncluidoDocumentoIncluidoBinario
µµ6 c
(
µµc d
(
µµd e
int
µµe h
)
µµh i
EstadoEnvio
µµi t
.
µµt u
	Pendiente
µµu ~
)
µµ~ 
.µµ Ä
ToListµµÄ Ü
(µµÜ á
)µµá à
;µµà â
return
∂∂ 
enviosPorReenviar
∂∂ (
;
∂∂( )
}
∑∑ 
catch
∏∏ 
(
∏∏ 
	Exception
∏∏ 
e
∏∏ 
)
∏∏ 
{
ππ 
throw
∫∫ 
e
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
public
¬¬ 
OperationResult
¬¬ !
CrearEnvioDocumento
¬¬ 2
(
¬¬2 3
long
¬¬3 7
idEnvio
¬¬8 ?
,
¬¬? @
long
¬¬A E
idDocumento
¬¬F Q
)
¬¬Q R
{
√√ 	
try
ƒƒ 
{
≈≈ 
EnvioDocumento
∆∆ !
nuevoEnvioDocumento
∆∆ 2
=
∆∆3 4
new
∆∆5 8
EnvioDocumento
∆∆9 G
{
«« 
idEnvio
»» 
=
»» 
idEnvio
»» %
,
»»% &
idDocumento
…… 
=
……  !
idDocumento
……" -
}
   
;
   
return
ÀÀ 
_facturacionDatos
ÀÀ (
.
ÀÀ( )!
CrearEnvioDocumento
ÀÀ) <
(
ÀÀ< =!
nuevoEnvioDocumento
ÀÀ= P
)
ÀÀP Q
;
ÀÀQ R
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
e
ÕÕ 
)
ÕÕ 
{
ŒŒ 
throw
œœ 
new
œœ 
LogicaException
œœ )
(
œœ) *
$str
œœ* V
,
œœV W
e
œœX Y
)
œœY Z
;
œœZ [
}
–– 
}
—— 	
public
”” 
OperationResult
”” '
CrearEnvioDocumentoMasivo
”” 8
(
””8 9
long
””9 =
idEnvio
””> E
,
””E F
long
””G K
[
””K L
]
””L M
idDocumentos
””N Z
)
””Z [
{
‘‘ 	
try
’’ 
{
÷÷ 
return
◊◊ 
_facturacionDatos
◊◊ (
.
◊◊( )'
CrearEnvioDocumentoMasivo
◊◊) B
(
◊◊B C
idEnvio
◊◊C J
,
◊◊J K
idDocumentos
◊◊L X
)
◊◊X Y
;
◊◊Y Z
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
new
€€ 
LogicaException
€€ )
(
€€) *
$str
€€* O
,
€€O P
e
€€Q R
)
€€R S
;
€€S T
}
‹‹ 
}
›› 	
public
„„ 
OperationResult
„„ 
CrearBinario
„„ +
(
„„+ ,
byte
„„, 0
[
„„0 1
]
„„1 2
archivo
„„3 :
)
„„: ;
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
Binario
ÁÁ 
nuevoBinario
ÁÁ $
=
ÁÁ% &
new
ÁÁ' *
Binario
ÁÁ+ 2
{
ËË 
archivoBinario
ÈÈ "
=
ÈÈ# $
archivo
ÈÈ% ,
}
ÍÍ 
;
ÍÍ 
return
ÎÎ 
_facturacionDatos
ÎÎ (
.
ÎÎ( )
CrearBinario
ÎÎ) 5
(
ÎÎ5 6
nuevoBinario
ÎÎ6 B
)
ÎÎB C
;
ÎÎC D
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* K
,
ÔÔK L
e
ÔÔM N
)
ÔÔN O
;
ÔÔO P
}
 
}
ÒÒ 	
public
ÛÛ 
byte
ÛÛ 
[
ÛÛ 
]
ÛÛ 
ObtenerArchivo
ÛÛ $
(
ÛÛ$ %
long
ÛÛ% )
id
ÛÛ* ,
)
ÛÛ, -
{
ÙÙ 	
try
ıı 
{
ˆˆ 
return
˜˜ 
_facturacionDatos
˜˜ (
.
˜˜( )
ObtenerBinario
˜˜) 7
(
˜˜7 8
id
˜˜8 :
)
˜˜: ;
;
˜˜; <
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
e
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
e
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
public
ˇˇ 
OperationResult
ˇˇ 
ActualizarBinario
ˇˇ 0
(
ˇˇ0 1
Binario
ˇˇ1 8
binario
ˇˇ9 @
)
ˇˇ@ A
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
return
ÉÉ 
_facturacionDatos
ÉÉ (
.
ÉÉ( )
ActualizarBinario
ÉÉ) :
(
ÉÉ: ;
binario
ÉÉ; B
)
ÉÉB C
;
ÉÉC D
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
ÜÜ 
throw
áá 
e
áá 
;
áá 
}
àà 
}
ââ 	
}
çç 
}éé í
WD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\FacturacionElectronicaLogica_Qr.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

partial 
class (
FacturacionElectronicaLogica 5
{ 
public 
string 
	ObtenerQR 
(  
OrdenDeVenta  ,
orden- 2
,2 3$
EstablecimientoComercial4 L
sedeM Q
)Q R
{		 	
return

 
(

 
sede

 
.

 
DocumentoIdentidad

 +
+

+ ,
$str

, /
+

0 1
orden

2 7
.

7 8
Comprobante

8 C
(

C D
)

D E
.

E F

NombreTipo

F P
+

P Q
$str

R U
+

V W
orden

X ]
.

] ^
Comprobante

^ i
(

i j
)

j k
.

k l
NumeroDeSerie

l y
+

y z
$str

z }
+

} ~
orden	

~ É
.


É Ñ
Comprobante


Ñ è
(


è ê
)


ê ë
.


ë í!
NumeroDeComprobante


í •
+


• ¶
$str


¶ ©
+


© ™
orden 
. 
Igv 
( 
) 
+ 
$str  
+  !
orden! &
.& '
Total' ,
+, -
$str- 0
+0 1
orden1 6
.6 7
FechaEmision7 C
+C D
$strE H
+H I
ordenI N
.N O4
(CodigoSunatTipoDocumentoIdentidadClienteO w
+w x
$strx {
+{ |
orden	} Ç
.
Ç É-
NumeroDocumentoIdentidadCliente
É ¢
+
¢ £
$str
£ ¶
+
¶ ß
$str
® ™
)
™ ´
;
´ ¨
} 	
public 
string 
	ObtenerQR 
(  
MovimientoDeAlmacen  3

movimiento4 >
,> ?$
EstablecimientoComercial@ X
sedeY ]
)] ^
{ 	
return 
( 
sede 
. 
DocumentoIdentidad +
+, -
$str. 1
+2 3

movimiento4 >
.> ?
Comprobante? J
(J K
)K L
.L M

NombreTipoM W
+X Y
$strZ ]
+^ _

movimiento` j
.j k
Comprobantek v
(v w
)w x
.x y
NumeroDeSerie	y Ü
+
á à
$str
â å
+
ç é

movimiento
è ô
.
ô ö
Comprobante
ö •
(
• ¶
)
¶ ß
.
ß ®!
NumeroDeComprobante
® ª
+
º Ω
$str
æ ¡
+
¬ √

movimiento
ƒ Œ
.
Œ œ
FechaEmision
œ €
+
‹ ›
$str
ﬁ ·
+
‚ „

movimiento
‰ Ó
.
Ó Ô
Tercero
Ô ˆ
(
ˆ ˜
)
˜ ¯
.
¯ ˘/
!CodigoSunatTipoDocumentoIdentidad
˘ ö
(
ö õ
)
õ ú
+
ù û
$str
ü ¢
+
£ §

movimiento
• Ø
.
Ø ∞
Tercero
∞ ∑
(
∑ ∏
)
∏ π
.
π ∫ 
DocumentoIdentidad
∫ Ã
+
Õ Œ
$str
œ “
+
” ‘
$str
’ ◊
)
◊ ÿ
;
ÿ Ÿ
} 	
} 
} Ç®
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\GeneracionArchivosLogica.cs
	namespace 	
Tsp
 
. "
FacturacionElectronica $
.$ %
Logica% +
{ 
public 

class $
GeneracionArchivosLogica )
:* +%
IGeneracionArchivosLogica, E
{ 
private 
readonly 
IOperacionLogica )
_operacionLogica* :
;: ;
private 
readonly 
IMaestroLogica '
_maestroLogica( 6
;6 7
private 
readonly #
IFacturacionRepositorio 0
_facturacionDatos1 B
=C D
nullE I
;I J
public $
GeneracionArchivosLogica '
(' (
IOperacionLogica( 8
operacionLogica9 H
,H I
IMaestroLogicaJ X
maestroLogicaY f
,f g#
IFacturacionRepositorioh 
facturacionDatos
Ä ê
)
ê ë
{ 	
_operacionLogica 
= 
operacionLogica .
;. /
_maestroLogica 
= 
maestroLogica *
;* +
_facturacionDatos 
= 
facturacionDatos  0
;0 1
} 	
public!!  
DocumentoElectronico!! #.
"ObtenerDocumentoElectronicoFactura!!$ F
(!!F G
Factura!!G N
factura!!O V
)!!V W
{"" 	
try## 
{$$  
DocumentoElectronico%% $ 
documentoElectronico%%% 9
=%%: ;
new%%< ? 
DocumentoElectronico%%@ T
{&& 
Emisor'' 
='' 
CrearEmisor'' (
(''( )
factura'') 0
.''0 1
Emisor''1 7
)''7 8
,''8 9
Receptor(( 
=(( 
CrearReceptor(( ,
(((, -
factura((- 4
.((4 5
Receptor((5 =
)((= >
,((> ?
IdDocumento)) 
=))  !
factura))" )
.))) *
Serie))* /
+))0 1
$str))2 5
+))6 7
factura))8 ?
.))? @
Numero))@ F
,))F G
FechaEmision**  
=**! "
factura**# *
.*** +
FechaEmision**+ 7
.**7 8
ToString**8 @
(**@ A
$str**A M
)**M N
,**N O
HoraEmision++ 
=++  !
factura++" )
.++) *
FechaEmision++* 6
.++6 7
ToString++7 ?
(++? @
$str++@ J
)++J K
,++K L
Moneda,, 
=,, 
factura,, $
.,,$ %
CodigoSunatMoneda,,% 6
,,,6 7
TipoDocumento-- !
=--" #
factura--$ +
.--+ ,
CodigoSunatTipo--, ;
,--; <
TotalIgv.. 
=.. 
factura.. &
...& '
Igv..' *
,..* +
TotalIcbper// 
=//  !
factura//" )
.//) *
Icbper//* 0
,//0 1

TotalVenta00 
=00  
factura00! (
.00( )
ImporteTotal00) 5
,005 6
Gravadas11 
=11 
factura11 &
.11& '#
ImporteOperacionGravada11' >
,11> ?

Exoneradas22 
=22  
factura22! (
.22( )%
ImporteOperacionExonerada22) B
,22B C
	Inafectas33 
=33 
$num33  !
,33! "
	Gratuitas44 
=44 
$num44  !
,44! "
DescuentoGlobal55 #
=55$ %
factura55& -
.55- .
	Descuento55. 7
,557 8
TotalOtrosTributos66 &
=66' (
$num66) *
,66* +
MontoEnLetras77 !
=77" #
factura77$ +
.77+ , 
ImporteTotalEnLetras77, @
,77@ A
Observacion88 
=88  !
factura88" )
.88) *
Observacion88* 5
.885 6
Length886 <
>88= >
$num88? B
?88C D
factura88E L
.88L M
Observacion88M X
.88X Y
	Substring88Y b
(88b c
$num88c d
,88d e
$num88f i
)88i j
:88k l
factura88m t
.88t u
Observacion	88u Ä
,
88Ä Å
Items99 
=99 
factura99 #
.99# $
MostrarPlaca99$ 0
?991 2
CrearDetalles993 @
(99@ A
factura99A H
.99H I
Detalles99I Q
,99Q R
factura99S Z
.99Z [
ValorIcbper99[ f
,99f g
factura99h o
.99o p
Placa99p u
)99u v
:99w x
CrearDetalles	99y Ü
(
99Ü á
factura
99á é
.
99é è
Detalles
99è ó
,
99ó ò
factura
99ô †
.
99† °
ValorIcbper
99° ¨
)
99¨ ≠
,
99≠ Æ
	FormaPago:: 
=:: 
factura::  '
.::' (
	FormaPago::( 1
,::1 2
MontoACredito;; !
=;;" #
factura;;$ +
.;;+ ,
MontoACredito;;, 9
,;;9 :
Cuotas<< 
=<< 
GenerarCuotas<< *
(<<* +
factura<<+ 2
.<<2 3
Cuotas<<3 9
)<<9 :
}== 
;== 
return>>  
documentoElectronico>> +
;>>+ ,
}?? 
catch@@ 
(@@ 
	Exception@@ 
e@@ 
)@@ 
{AA 
throwBB 
newBB 
	ExceptionBB #
(BB# $
eBB$ %
.BB% &
MessageBB& -
)BB- .
;BB. /
}CC 
}DD 	
publicFF  
DocumentoElectronicoFF #-
!ObtenerDocumentoElectronicoBoletaFF$ E
(FFE F
BoletaDeVentaFFF S
boletaDeVentaFFT a
)FFa b
{GG 	
tryHH 
{II  
DocumentoElectronicoJJ $ 
documentoElectronicoJJ% 9
=JJ: ;
newJJ< ? 
DocumentoElectronicoJJ@ T
{KK 
EmisorLL 
=LL 
CrearEmisorLL (
(LL( )
boletaDeVentaLL) 6
.LL6 7
EmisorLL7 =
)LL= >
,LL> ?
ReceptorMM 
=MM 
CrearReceptorMM ,
(MM, -
boletaDeVentaMM- :
.MM: ;
ReceptorMM; C
)MMC D
,MMD E
IdDocumentoNN 
=NN  !
boletaDeVentaNN" /
.NN/ 0
SerieNN0 5
+NN6 7
$strNN8 ;
+NN< =
boletaDeVentaNN> K
.NNK L
NumeroNNL R
,NNR S
FechaEmisionOO  
=OO! "
boletaDeVentaOO# 0
.OO0 1
FechaEmisionOO1 =
.OO= >
ToStringOO> F
(OOF G
$strOOG S
)OOS T
,OOT U
HoraEmisionPP 
=PP  !
boletaDeVentaPP" /
.PP/ 0
FechaEmisionPP0 <
.PP< =
ToStringPP= E
(PPE F
$strPPF P
)PPP Q
,PPQ R
MonedaQQ 
=QQ 
boletaDeVentaQQ *
.QQ* +
CodigoSunatMonedaQQ+ <
,QQ< =
TipoDocumentoRR !
=RR" #
boletaDeVentaRR$ 1
.RR1 2
CodigoSunatTipoRR2 A
,RRA B
TotalIgvTT 
=TT 
boletaDeVentaTT ,
.TT, -
IgvTT- 0
,TT0 1
TotalIcbperUU 
=UU  !
boletaDeVentaUU" /
.UU/ 0
IcbperUU0 6
,UU6 7

TotalVentaVV 
=VV  
boletaDeVentaVV! .
.VV. /
ImporteTotalVV/ ;
,VV; <
GravadasWW 
=WW 
boletaDeVentaWW ,
.WW, -#
ImporteOperacionGravadaWW- D
,WWD E

ExoneradasXX 
=XX  
boletaDeVentaXX! .
.XX. /%
ImporteOperacionExoneradaXX/ H
,XXH I
DescuentoGlobalYY #
=YY$ %
boletaDeVentaYY& 3
.YY3 4
	DescuentoYY4 =
,YY= >
TotalOtrosTributosZZ &
=ZZ' (
$numZZ) *
,ZZ* +
MontoEnLetras[[ !
=[[" #
boletaDeVenta[[$ 1
.[[1 2 
ImporteTotalEnLetras[[2 F
,[[F G
Observacion\\ 
=\\  !
boletaDeVenta\\" /
.\\/ 0
Observacion\\0 ;
.\\; <
Length\\< B
>\\C D
$num\\E H
?\\I J
boletaDeVenta\\K X
.\\X Y
Observacion\\Y d
.\\d e
	Substring\\e n
(\\n o
$num\\o p
,\\p q
$num\\r u
)\\u v
:\\w x
boletaDeVenta	\\y Ü
.
\\Ü á
Observacion
\\á í
,
\\í ì
Items]] 
=]] 
boletaDeVenta]] )
.]]) *
MostrarPlaca]]* 6
?]]7 8
CrearDetalles]]9 F
(]]F G
boletaDeVenta]]G T
.]]T U
Detalles]]U ]
,]]] ^
boletaDeVenta]]_ l
.]]l m
ValorIcbper]]m x
,]]x y
boletaDeVenta	]]z á
.
]]á à
Placa
]]à ç
)
]]ç é
:
]]è ê
CrearDetalles
]]ë û
(
]]û ü
boletaDeVenta
]]ü ¨
.
]]¨ ≠
Detalles
]]≠ µ
,
]]µ ∂
boletaDeVenta
]]∑ ƒ
.
]]ƒ ≈
ValorIcbper
]]≈ –
)
]]– —
}^^ 
;^^ 
return__  
documentoElectronico__ +
;__+ ,
}`` 
catchaa 
(aa 
	Exceptionaa 
eaa 
)aa 
{bb 
throwcc 
newcc 
	Exceptioncc #
(cc# $
ecc$ %
.cc% &
Messagecc& -
)cc- .
;cc. /
}dd 
}ee 	
publicgg  
DocumentoElectronicogg #2
&ObtenerDocumentoElectronicoNotaCreditogg$ J
(ggJ K
NotaDeCreditoggK X
notaDeCreditoggY f
)ggf g
{hh 	
tryii 
{jj  
DocumentoElectronicokk $ 
documentoElectronicokk% 9
=kk: ;
newkk< ? 
DocumentoElectronicokk@ T
{ll 
Emisormm 
=mm 
CrearEmisormm (
(mm( )
notaDeCreditomm) 6
.mm6 7
Emisormm7 =
)mm= >
,mm> ?
Receptornn 
=nn 
CrearReceptornn ,
(nn, -
notaDeCreditonn- :
.nn: ;
Receptornn; C
)nnC D
,nnD E
IdDocumentooo 
=oo  !
notaDeCreditooo" /
.oo/ 0
Serieoo0 5
+oo6 7
$stroo8 ;
+oo< =
notaDeCreditooo> K
.ooK L
NumeroooL R
,ooR S
FechaEmisionpp  
=pp! "
notaDeCreditopp# 0
.pp0 1
FechaEmisionpp1 =
.pp= >
ToStringpp> F
(ppF G
$strppG S
)ppS T
,ppT U
HoraEmisionqq 
=qq  !
notaDeCreditoqq" /
.qq/ 0
FechaEmisionqq0 <
.qq< =
ToStringqq= E
(qqE F
$strqqF P
)qqP Q
,qqQ R
Monedarr 
=rr 
notaDeCreditorr *
.rr* +
CodigoSunatMonedarr+ <
,rr< =
TipoDocumentoss !
=ss" #
notaDeCreditoss$ 1
.ss1 2
CodigoSunatTiposs2 A
,ssA B
TotalIgvtt 
=tt 
notaDeCreditott ,
.tt, -
Igvtt- 0
,tt0 1
TotalIcbperuu 
=uu  !
notaDeCreditouu" /
.uu/ 0
Icbperuu0 6
,uu6 7

TotalVentavv 
=vv  
notaDeCreditovv! .
.vv. /
ImporteTotalvv/ ;
,vv; <
Gravadasww 
=ww 
notaDeCreditoww ,
.ww, -#
ImporteOperacionGravadaww- D
,wwD E

Exoneradasxx 
=xx  
notaDeCreditoxx! .
.xx. /%
ImporteOperacionExoneradaxx/ H
,xxH I
DescuentoGlobalyy #
=yy$ %
notaDeCreditoyy& 3
.yy3 4
	Descuentoyy4 =
,yy= >
MontoEnLetraszz !
=zz" #
notaDeCreditozz$ 1
.zz1 2 
ImporteTotalEnLetraszz2 F
,zzF G
Observacion{{ 
={{  !
notaDeCredito{{" /
.{{/ 0
Observacion{{0 ;
.{{; <
Length{{< B
>{{C D
$num{{E H
?{{I J
notaDeCredito{{K X
.{{X Y
Observacion{{Y d
.{{d e
	Substring{{e n
({{n o
$num{{o p
,{{p q
$num{{r u
){{u v
:{{w x
notaDeCredito	{{y Ü
.
{{Ü á
Observacion
{{á í
,
{{í ì
Items|| 
=|| 
CrearDetalles|| )
(||) *
notaDeCredito||* 7
.||7 8
Detalles||8 @
,||@ A
notaDeCredito||B O
.||O P
ValorIcbper||P [
)||[ \
,||\ ]
Discrepancias}} !
=}}" #
CrearDiscrepancia}}$ 5
(}}5 6
notaDeCredito}}6 C
.}}C D
Discrepancia}}D P
)}}P Q
,}}Q R
Relacionados~~  
=~~! "
CrearRelacionado~~# 3
(~~3 4
notaDeCredito~~4 A
.~~A B 
DocumentoRelacionado~~B V
)~~V W
} 
; 
return
ÄÄ "
documentoElectronico
ÄÄ +
;
ÄÄ+ ,
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
	Exception
ÑÑ #
(
ÑÑ# $
e
ÑÑ$ %
.
ÑÑ% &
Message
ÑÑ& -
)
ÑÑ- .
;
ÑÑ. /
}
ÖÖ 
}
ÜÜ 	
public
àà "
DocumentoElectronico
àà #3
%ObtenerDocumentoElectronicoNotaDebito
àà$ I
(
ààI J
NotaDeDebito
ààJ V
notaDeDebito
ààW c
)
ààc d
{
ââ 	
try
ää 
{
ãã "
DocumentoElectronico
åå $"
documentoElectronico
åå% 9
=
åå: ;
new
åå< ?"
DocumentoElectronico
åå@ T
{
çç 
Emisor
éé 
=
éé 
CrearEmisor
éé (
(
éé( )
notaDeDebito
éé) 5
.
éé5 6
Emisor
éé6 <
)
éé< =
,
éé= >
Receptor
èè 
=
èè 
CrearReceptor
èè ,
(
èè, -
notaDeDebito
èè- 9
.
èè9 :
Receptor
èè: B
)
èèB C
,
èèC D
IdDocumento
êê 
=
êê  !
notaDeDebito
êê" .
.
êê. /
Serie
êê/ 4
+
êê5 6
$str
êê7 :
+
êê; <
notaDeDebito
êê= I
.
êêI J
Numero
êêJ P
,
êêP Q
FechaEmision
ëë  
=
ëë! "
notaDeDebito
ëë# /
.
ëë/ 0
FechaEmision
ëë0 <
.
ëë< =
ToString
ëë= E
(
ëëE F
$str
ëëF R
)
ëëR S
,
ëëS T
HoraEmision
íí 
=
íí  !
notaDeDebito
íí" .
.
íí. /
FechaEmision
íí/ ;
.
íí; <
ToString
íí< D
(
ííD E
$str
ííE O
)
ííO P
,
ííP Q
Moneda
ìì 
=
ìì 
notaDeDebito
ìì )
.
ìì) *
CodigoSunatMoneda
ìì* ;
,
ìì; <
TipoDocumento
îî !
=
îî" #
notaDeDebito
îî$ 0
.
îî0 1
CodigoSunatTipo
îî1 @
,
îî@ A
TotalIgv
ïï 
=
ïï 
notaDeDebito
ïï +
.
ïï+ ,
Igv
ïï, /
,
ïï/ 0
TotalIcbper
ññ 
=
ññ  !
notaDeDebito
ññ" .
.
ññ. /
Icbper
ññ/ 5
,
ññ5 6

TotalVenta
óó 
=
óó  
notaDeDebito
óó! -
.
óó- .
ImporteTotal
óó. :
,
óó: ;
Gravadas
òò 
=
òò 
notaDeDebito
òò +
.
òò+ ,%
ImporteOperacionGravada
òò, C
,
òòC D

Exoneradas
ôô 
=
ôô  
notaDeDebito
ôô! -
.
ôô- .'
ImporteOperacionExonerada
ôô. G
,
ôôG H
DescuentoGlobal
öö #
=
öö$ %
notaDeDebito
öö& 2
.
öö2 3
	Descuento
öö3 <
,
öö< =
MontoEnLetras
õõ !
=
õõ" #
notaDeDebito
õõ$ 0
.
õõ0 1"
ImporteTotalEnLetras
õõ1 E
,
õõE F
Observacion
úú 
=
úú  !
notaDeDebito
úú" .
.
úú. /
Observacion
úú/ :
.
úú: ;
Length
úú; A
>
úúB C
$num
úúD G
?
úúH I
notaDeDebito
úúJ V
.
úúV W
Observacion
úúW b
.
úúb c
	Substring
úúc l
(
úúl m
$num
úúm n
,
úún o
$num
úúp s
)
úús t
:
úúu v
notaDeDebitoúúw É
.úúÉ Ñ
ObservacionúúÑ è
,úúè ê
Items
ùù 
=
ùù 
CrearDetalles
ùù )
(
ùù) *
notaDeDebito
ùù* 6
.
ùù6 7
Detalles
ùù7 ?
,
ùù? @
notaDeDebito
ùùA M
.
ùùM N
ValorIcbper
ùùN Y
)
ùùY Z
,
ùùZ [
Discrepancias
ûû !
=
ûû" #
CrearDiscrepancia
ûû$ 5
(
ûû5 6
notaDeDebito
ûû6 B
.
ûûB C
Discrepancia
ûûC O
)
ûûO P
,
ûûP Q
Relacionados
üü  
=
üü! "
CrearRelacionado
üü# 3
(
üü3 4
notaDeDebito
üü4 @
.
üü@ A"
DocumentoRelacionado
üüA U
)
üüU V
}
†† 
;
†† 
return
°° "
documentoElectronico
°° +
;
°°+ ,
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
new
•• 
	Exception
•• #
(
••# $
e
••$ %
.
••% &
Message
••& -
)
••- .
;
••. /
}
¶¶ 
}
ßß 	
public
©© 
GuiaRemision
©© 7
)ObtenerDocumentoElectronicoGuiaDeRemision
©© E
(
©©E F
GuiaDeRemision
©©F T
guiaDeRemision
©©U c
)
©©c d
{
™™ 	
try
´´ 
{
¨¨ 
GuiaRemision
≠≠ 
guiaRemision
≠≠ )
=
≠≠* +
new
≠≠, /
GuiaRemision
≠≠0 <
{
ÆÆ 
	Remitente
ØØ 
=
ØØ  
CrearContribuyente
ØØ  2
(
ØØ2 3
guiaDeRemision
ØØ3 A
.
ØØA B
Emisor
ØØB H
)
ØØH I
,
ØØI J
Destinatario
∞∞  
=
∞∞! "
MaestroSettings
∞∞# 2
.
∞∞2 3
Default
∞∞3 :
.
∞∞: ;;
-CodigoDetalleMaestroMotivoDeTrasladoPorCompra
∞∞; h
==
∞∞i k
guiaDeRemision
∞∞l z
.
∞∞z {#
CodigoMotivoTraslado∞∞{ è
?∞∞ê ë"
CrearContribuyente∞∞í §
(∞∞§ •
guiaDeRemision∞∞• ≥
.∞∞≥ ¥
Emisor∞∞¥ ∫
)∞∞∫ ª
:∞∞º Ω"
CrearContribuyente∞∞æ –
(∞∞– —
guiaDeRemision∞∞— ﬂ
.∞∞ﬂ ‡
Receptor∞∞‡ Ë
)∞∞Ë È
,∞∞È Í
Tercero
±± 
=
±± 
MaestroSettings
±± -
.
±±- .
Default
±±. 5
.
±±5 6;
-CodigoDetalleMaestroMotivoDeTrasladoPorCompra
±±6 c
==
±±d f
guiaDeRemision
±±g u
.
±±u v#
CodigoMotivoTraslado±±v ä
?±±ã å"
CrearContribuyente±±ç ü
(±±ü †
guiaDeRemision±±† Æ
.±±Æ Ø
Receptor±±Ø ∑
)±±∑ ∏
:±±π ∫
null±±ª ø
,±±ø ¿
IdDocumento
≤≤ 
=
≤≤  !
guiaDeRemision
≤≤" 0
.
≤≤0 1
Serie
≤≤1 6
+
≤≤7 8
$str
≤≤9 <
+
≤≤= >
guiaDeRemision
≤≤? M
.
≤≤M N
Numero
≤≤N T
,
≤≤T U
FechaEmision
≥≥  
=
≥≥! "
guiaDeRemision
≥≥# 1
.
≥≥1 2
FechaEmision
≥≥2 >
.
≥≥> ?
ToString
≥≥? G
(
≥≥G H
$str
≥≥H T
)
≥≥T U
,
≥≥U V
HoraEmision
¥¥ 
=
¥¥  !
guiaDeRemision
¥¥" 0
.
¥¥0 1
FechaEmision
¥¥1 =
.
¥¥= >
ToString
¥¥> F
(
¥¥F G
$str
¥¥G Q
)
¥¥Q R
,
¥¥R S
TipoDocumento
µµ !
=
µµ" #
guiaDeRemision
µµ$ 2
.
µµ2 3
CodigoSunatTipo
µµ3 B
,
µµB C
Glosa
∂∂ 
=
∂∂ 
guiaDeRemision
∂∂ *
.
∂∂* +
Observacion
∂∂+ 6
.
∂∂6 7
Length
∂∂7 =
>
∂∂> ?
$num
∂∂@ C
?
∂∂D E
guiaDeRemision
∂∂F T
.
∂∂T U
Observacion
∂∂U `
.
∂∂` a
	Substring
∂∂a j
(
∂∂j k
$num
∂∂k l
,
∂∂l m
$num
∂∂n q
)
∂∂q r
:
∂∂s t
guiaDeRemision∂∂u É
.∂∂É Ñ
Observacion∂∂Ñ è
,∂∂è ê
ModalidadTraslado
∑∑ %
=
∑∑& '
guiaDeRemision
∑∑( 6
.
∑∑6 7'
CodigoModalidadTransporte
∑∑7 P
,
∑∑P Q"
CodigoMotivoTraslado
∏∏ (
=
∏∏) *
guiaDeRemision
∏∏+ 9
.
∏∏9 :"
CodigoMotivoTraslado
∏∏: N
,
∏∏N O
DescripcionMotivo
ππ %
=
ππ& '
guiaDeRemision
ππ( 6
.
ππ6 7
MotivoTraslado
ππ7 E
,
ππE F
PesoBrutoTotal
∫∫ "
=
∫∫# $
guiaDeRemision
∫∫% 3
.
∫∫3 4
PesoBrutoTotal
∫∫4 B
,
∫∫B C

NroPallets
ªª 
=
ªª  
guiaDeRemision
ªª! /
.
ªª/ 0
NumeroBultos
ªª0 <
,
ªª< =!
FechaInicioTraslado
ºº '
=
ºº( )
guiaDeRemision
ºº* 8
.
ºº8 9!
FechaInicioTraslado
ºº9 L
.
ººL M
ToString
ººM U
(
ººU V
$str
ººV b
)
ººb c
,
ººc d
RucTransportista
ΩΩ $
=
ΩΩ% &
guiaDeRemision
ΩΩ' 5
.
ΩΩ5 6
Transportista
ΩΩ6 C
?
ΩΩC D
.
ΩΩD E 
DocumentoIdentidad
ΩΩE W
,
ΩΩW X&
RazonSocialTransportista
ææ ,
=
ææ- .
guiaDeRemision
ææ/ =
.
ææ= >
Transportista
ææ> K
?
ææK L
.
ææL M
RazonSocial
ææM X
,
ææX Y#
NroDocumentoConductor
øø )
=
øø* +
guiaDeRemision
øø, :
.
øø: ;
	Conductor
øø; D
?
øøD E
.
øøE F 
DocumentoIdentidad
øøF X
,
øøX Y
NombresConductor
¿¿ $
=
¿¿% &
guiaDeRemision
¿¿' 5
.
¿¿5 6
	Conductor
¿¿6 ?
?
¿¿? @
.
¿¿@ A
Nombres
¿¿A H
,
¿¿H I 
ApellidosConductor
¡¡ &
=
¡¡' (
guiaDeRemision
¡¡) 7
.
¡¡7 8
	Conductor
¡¡8 A
?
¡¡A B
.
¡¡B C
	Apellidos
¡¡C L
,
¡¡L M"
NroLicenciaConductor
¬¬ (
=
¬¬) *
guiaDeRemision
¬¬+ 9
.
¬¬9 :
	Conductor
¬¬: C
?
¬¬C D
.
¬¬D E
NumeroLicencia
¬¬E S
,
¬¬S T
NroPlacaVehiculo
√√ $
=
√√% &
guiaDeRemision
√√' 5
.
√√5 6
	Conductor
√√6 ?
?
√√? @
.
√√@ A
Placa
√√A F
,
√√F G
DireccionPartida
ƒƒ $
=
ƒƒ% &
new
ƒƒ' *
OpenInvoicePeru
ƒƒ+ :
.
ƒƒ: ;
Comun
ƒƒ; @
.
ƒƒ@ A
Dto
ƒƒA D
.
ƒƒD E
Modelos
ƒƒE L
.
ƒƒL M
	Direccion
ƒƒM V
{
≈≈ 
Ubigeo
∆∆ 
=
∆∆  
guiaDeRemision
∆∆! /
.
∆∆/ 0#
UbigeoDireccionOrigen
∆∆0 E
,
∆∆E F
DireccionCompleta
«« )
=
««* +
guiaDeRemision
««, :
.
««: ;
DireccionOrigen
««; J
.
««J K
Length
««K Q
>
««R S
$num
««T W
?
««X Y
guiaDeRemision
««Z h
.
««h i
DireccionOrigen
««i x
.
««x y
	Substring««y Ç
(««Ç É
$num««É Ñ
,««Ñ Ö
$num««Ü â
)««â ä
:««ã å
guiaDeRemision««ç õ
.««õ ú
DireccionOrigen««ú ´
,««´ ¨#
CodigoEstablecimiento
»» -
=
»». /
guiaDeRemision
»»0 >
.
»»> ?"
CodigoMotivoTraslado
»»? S
==
»»T V
MaestroSettings
»»W f
.
»»f g
Default
»»g n
.
»»n oS
DCodigoDetalleMaestroMotivoDeTrasladoPorTrasladoEntreEstablecimientos»»o ≥
?»»¥ µ
$str»»∂ º
:»»Ω æ
null»»ø √
}
…… 
,
…… 
DireccionLlegada
   $
=
  % &
new
  ' *
OpenInvoicePeru
  + :
.
  : ;
Comun
  ; @
.
  @ A
Dto
  A D
.
  D E
Modelos
  E L
.
  L M
	Direccion
  M V
{
ÀÀ 
Ubigeo
ÃÃ 
=
ÃÃ  
guiaDeRemision
ÃÃ! /
.
ÃÃ/ 0$
UbigeoDireccionDestino
ÃÃ0 F
,
ÃÃF G
DireccionCompleta
ÕÕ )
=
ÕÕ* +
guiaDeRemision
ÕÕ, :
.
ÕÕ: ;
DireccionDestino
ÕÕ; K
.
ÕÕK L
Length
ÕÕL R
>
ÕÕS T
$num
ÕÕU X
?
ÕÕY Z
guiaDeRemision
ÕÕ[ i
.
ÕÕi j
DireccionDestino
ÕÕj z
.
ÕÕz {
	SubstringÕÕ{ Ñ
(ÕÕÑ Ö
$numÕÕÖ Ü
,ÕÕÜ á
$numÕÕà ã
)ÕÕã å
:ÕÕç é
guiaDeRemisionÕÕè ù
.ÕÕù û 
DireccionDestinoÕÕû Æ
,ÕÕÆ Ø#
CodigoEstablecimiento
ŒŒ -
=
ŒŒ. /
guiaDeRemision
ŒŒ0 >
.
ŒŒ> ?"
CodigoMotivoTraslado
ŒŒ? S
==
ŒŒT V
MaestroSettings
ŒŒW f
.
ŒŒf g
Default
ŒŒg n
.
ŒŒn oS
DCodigoDetalleMaestroMotivoDeTrasladoPorTrasladoEntreEstablecimientosŒŒo ≥
?ŒŒ¥ µ
$strŒŒ∂ º
:ŒŒΩ æ
nullŒŒø √
}
œœ 
,
œœ 

Transbordo
–– 
=
––  
false
––! &
,
––& '
CodigoPuerto
——  
=
——! "
string
——# )
.
——) *
Empty
——* /
,
——/ 0
NumeroContenedor
““ $
=
““% &
string
““' -
.
““- .
Empty
““. 3
,
““3 4 
BienesATransportar
”” &
=
””' (
CrearDetallesGuia
””) :
(
””: ;
guiaDeRemision
””; I
.
””I J
Detalles
””J R
)
””R S
,
””S T
}
‘‘ 
;
‘‘ 
return
÷÷ 
guiaRemision
÷÷ #
;
÷÷# $
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
	Exception
⁄⁄ #
(
⁄⁄# $
e
⁄⁄$ %
.
⁄⁄% &
Message
⁄⁄& -
)
⁄⁄- .
;
⁄⁄. /
}
€€ 
}
‹‹ 	
private
ﬁﬁ 
Compania
ﬁﬁ 
CrearEmisor
ﬁﬁ $
(
ﬁﬁ$ %
Emisor
ﬁﬁ% +
emisor
ﬁﬁ, 2
)
ﬁﬁ2 3
{
ﬂﬂ 	
return
‡‡ 
new
‡‡ 
Compania
‡‡ 
(
‡‡  
)
‡‡  !
{
·· 
TipoDocumento
‚‚ 
=
‚‚ 
emisor
‚‚  &
.
‚‚& '/
!CodigoSunatTipoDocumentoIdentidad
‚‚' H
,
‚‚H I
NroDocumento
„„ 
=
„„ 
emisor
„„ %
.
„„% &&
NumeroDocumentoIdentidad
„„& >
,
„„> ?
NombreLegal
‰‰ 
=
‰‰ 
emisor
‰‰ $
.
‰‰$ %
RazonSocial
‰‰% 0
,
‰‰0 1
NombreComercial
ÂÂ 
=
ÂÂ  !
emisor
ÂÂ" (
.
ÂÂ( )
NombreComercial
ÂÂ) 8
,
ÂÂ8 9
CodigoAnexo
ÊÊ 
=
ÊÊ 
emisor
ÊÊ $
.
ÊÊ$ %#
CodigoEstablecimiento
ÊÊ% :
}
ÁÁ 
;
ÁÁ 
}
ËË 	
private
ÈÈ 
Compania
ÈÈ 
CrearEmisor
ÈÈ $
(
ÈÈ$ %/
!EstablecimientoComercialExtendido
ÈÈ% F
emisor
ÈÈG M
)
ÈÈM N
{
ÍÍ 	
return
ÎÎ 
new
ÎÎ 
Compania
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
{
ÏÏ 
TipoDocumento
ÌÌ 
=
ÌÌ 
emisor
ÌÌ  &
.
ÌÌ& '/
!CodigoSunatTipoDocumentoIdentidad
ÌÌ' H
,
ÌÌH I
NroDocumento
ÓÓ 
=
ÓÓ 
emisor
ÓÓ %
.
ÓÓ% & 
DocumentoIdentidad
ÓÓ& 8
,
ÓÓ8 9
NombreLegal
ÔÔ 
=
ÔÔ 
emisor
ÔÔ $
.
ÔÔ$ %
Nombre
ÔÔ% +
,
ÔÔ+ ,
NombreComercial
 
=
  !
emisor
" (
.
( )
NombreComercial
) 8
,
8 9
CodigoAnexo
ÒÒ 
=
ÒÒ 
emisor
ÒÒ $
.
ÒÒ$ %
Codigo
ÒÒ% +
}
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
private
ÙÙ 
Compania
ÙÙ 
CrearReceptor
ÙÙ &
(
ÙÙ& '
Receptor
ÙÙ' /
receptor
ÙÙ0 8
)
ÙÙ8 9
{
ıı 	
return
ˆˆ 
new
ˆˆ 
Compania
ˆˆ 
(
ˆˆ  
)
ˆˆ  !
{
˜˜ 
TipoDocumento
¯¯ 
=
¯¯ 
receptor
¯¯  (
.
¯¯( )/
!CodigoSunatTipoDocumentoIdentidad
¯¯) J
,
¯¯J K
NroDocumento
˘˘ 
=
˘˘ 
receptor
˘˘ '
.
˘˘' ()
DocumentoIdentidadParaSunat
˘˘( C
,
˘˘C D
NombreLegal
˙˙ 
=
˙˙ 
receptor
˙˙ &
.
˙˙& '
RazonSocial
˙˙' 2
,
˙˙2 3
CodigoAnexo
˚˚ 
=
˚˚ 
$str
˚˚  
}
¸¸ 
;
¸¸ 
}
˝˝ 	
private
˛˛ 
Contribuyente
˛˛  
CrearContribuyente
˛˛ 0
(
˛˛0 1
Emisor
˛˛1 7
emisor
˛˛8 >
)
˛˛> ?
{
ˇˇ 	
return
ÄÄ 
new
ÄÄ 
Contribuyente
ÄÄ $
(
ÄÄ$ %
)
ÄÄ% &
{
ÅÅ 
TipoDocumento
ÇÇ 
=
ÇÇ 
emisor
ÇÇ  &
.
ÇÇ& '/
!CodigoSunatTipoDocumentoIdentidad
ÇÇ' H
,
ÇÇH I
NroDocumento
ÉÉ 
=
ÉÉ 
emisor
ÉÉ %
.
ÉÉ% &&
NumeroDocumentoIdentidad
ÉÉ& >
,
ÉÉ> ?
NombreLegal
ÑÑ 
=
ÑÑ 
emisor
ÑÑ $
.
ÑÑ$ %
RazonSocial
ÑÑ% 0
,
ÑÑ0 1
NombreComercial
ÖÖ 
=
ÖÖ  !
emisor
ÖÖ" (
.
ÖÖ( )
NombreComercial
ÖÖ) 8
,
ÖÖ8 9
}
ÜÜ 
;
ÜÜ 
}
áá 	
private
ââ 
Contribuyente
ââ  
CrearContribuyente
ââ 0
(
ââ0 1
Receptor
ââ1 9
receptor
ââ: B
)
ââB C
{
ää 	
return
ãã 
new
ãã 
Contribuyente
ãã $
(
ãã$ %
)
ãã% &
{
åå 
TipoDocumento
çç 
=
çç 
receptor
çç  (
.
çç( )/
!CodigoSunatTipoDocumentoIdentidad
çç) J
,
ççJ K
NroDocumento
éé 
=
éé 
receptor
éé '
.
éé' ()
DocumentoIdentidadParaSunat
éé( C
,
ééC D
NombreLegal
èè 
=
èè 
receptor
èè &
.
èè& '
RazonSocial
èè' 2
,
èè2 3
}
êê 
;
êê 
}
ëë 	
private
íí 
List
íí 
<
íí 
Discrepancia
íí !
>
íí! "
CrearDiscrepancia
íí# 4
(
íí4 5

Referencia
íí5 ?

referencia
íí@ J
)
ííJ K
{
ìì 	
return
îî 
new
îî 
List
îî 
<
îî 
Discrepancia
îî (
>
îî( )
{
ïï 
new
ññ 
Discrepancia
ññ (
{
óó 
NroReferencia
òò )
=
òò* +

referencia
òò, 6
.
òò6 7
NroReferencia
òò7 D
,
òòD E
Tipo
ôô  
=
ôô! "

referencia
ôô# -
.
ôô- .
Tipo
ôô. 2
,
ôô2 3
Descripcion
öö '
=
öö( )

referencia
öö* 4
.
öö4 5
Descripcion
öö5 @
}
õõ 
}
úú 
;
úú 
}
ùù 	
private
üü 
List
üü 
<
üü 
CuotaDocumento
üü #
>
üü# $
GenerarCuotas
üü% 2
(
üü2 3
List
üü3 7
<
üü7 8
DetalleCuota
üü8 D
>
üüD E
cuotas
üüF L
)
üüL M
{
†† 	
List
°° 
<
°° 
CuotaDocumento
°° 
>
°°  
detallesCuota
°°! .
=
°°/ 0
new
°°1 4
List
°°5 9
<
°°9 :
CuotaDocumento
°°: H
>
°°H I
(
°°I J
)
°°J K
;
°°K L
foreach
¢¢ 
(
¢¢ 
var
¢¢ 
cuota
¢¢ 
in
¢¢ !
cuotas
¢¢" (
)
¢¢( )
{
££ 
CuotaDocumento
§§ 
detalle
§§ &
=
§§' (
new
§§) ,
CuotaDocumento
§§- ;
(
§§; <
)
§§< =
{
•• 
Codigo
¶¶ 
=
¶¶ 
cuota
¶¶ "
.
¶¶" #
Codigo
¶¶# )
,
¶¶) *
Monto
ßß 
=
ßß 
cuota
ßß !
.
ßß! "
Monto
ßß" '
,
ßß' (
FechaVencimiento
®® $
=
®®% &
cuota
®®' ,
.
®®, -
FechaVencimiento
®®- =
.
®®= >
ToString
®®> F
(
®®F G
$str
®®G S
)
®®S T
}
©© 
;
©© 
detallesCuota
™™ 
.
™™ 
Add
™™ !
(
™™! "
detalle
™™" )
)
™™) *
;
™™* +
}
´´ 
return
¨¨ 
detallesCuota
¨¨  
;
¨¨  !
}
≠≠ 	
private
ØØ 
List
ØØ 
<
ØØ "
DocumentoRelacionado
ØØ )
>
ØØ) *
CrearRelacionado
ØØ+ ;
(
ØØ; <
Relacionado
ØØ< G
relacionado
ØØH S
)
ØØS T
{
∞∞ 	
return
±± 
new
±± 
List
±± 
<
±± "
DocumentoRelacionado
±± 0
>
±±0 1
{
≤≤ 
new
≥≥ "
DocumentoRelacionado
≥≥ 0
{
¥¥ 
NroDocumento
µµ (
=
µµ) *
relacionado
µµ+ 6
.
µµ6 7
NroDocumento
µµ7 C
,
µµC D
TipoDocumento
∂∂ )
=
∂∂* +
relacionado
∂∂, 7
.
∂∂7 8
TipoDocumento
∂∂8 E
}
∑∑ 
}
∏∏ 
;
∏∏ 
}
ππ 	
public
ªª 
List
ªª 
<
ªª 
DetalleDocumento
ªª $
>
ªª$ %
CrearDetalles
ªª& 3
(
ªª3 4
List
ªª4 8
<
ªª8 9
Detalle
ªª9 @
>
ªª@ A
detalles
ªªB J
)
ªªJ K
{
ºº 	
List
ΩΩ 
<
ΩΩ 
DetalleDocumento
ΩΩ !
>
ΩΩ! "
detallesDocumento
ΩΩ# 4
=
ΩΩ5 6
new
ΩΩ7 :
List
ΩΩ; ?
<
ΩΩ? @
DetalleDocumento
ΩΩ@ P
>
ΩΩP Q
(
ΩΩQ R
)
ΩΩR S
;
ΩΩS T
int
ææ 
correlativo
ææ 
=
ææ 
$num
ææ 
;
ææ  
foreach
øø 
(
øø 
var
øø 
item
øø 
in
øø  
detalles
øø! )
)
øø) *
{
¿¿ 
detallesDocumento
¡¡ !
.
¡¡! "
Add
¡¡" %
(
¡¡% &
new
¡¡& )
DetalleDocumento
¡¡* :
{
¬¬ 
Id
√√ 
=
√√ 
correlativo
√√ $
++
√√$ &
,
√√& '
Cantidad
ƒƒ 
=
ƒƒ 
item
ƒƒ #
.
ƒƒ# $
Cantidad
ƒƒ$ ,
,
ƒƒ, -
UnidadMedida
≈≈  
=
≈≈! "
$str
≈≈# (
,
≈≈( )

CodigoItem
∆∆ 
=
∆∆  
item
∆∆! %
.
∆∆% &
Codigo
∆∆& ,
,
∆∆, -
Descripcion
«« 
=
««  !!
CrearCaracteristica
««" 5
(
««5 6
item
««6 :
)
««: ;
,
««; <
PrecioUnitario
»» "
=
»»# $
item
»»% )
.
»») *
ImporteUnitario
»»* 9
,
»»9 :
PrecioReferencial
…… %
=
……& '
item
……( ,
.
……, -
ImporteUnitario
……- <
,
……< =

TipoPrecio
   
=
    
$str
  ! %
,
  % &
TipoImpuesto
ÀÀ  
=
ÀÀ! "
item
ÀÀ# '
.
ÀÀ' (

ImporteIgv
ÀÀ( 2
>
ÀÀ3 4
$num
ÀÀ5 6
?
ÀÀ7 8
$str
ÀÀ9 =
:
ÀÀ> ?
$str
ÀÀ@ D
,
ÀÀD E
Impuesto
ÃÃ 
=
ÃÃ 
item
ÃÃ #
.
ÃÃ# $

ImporteIgv
ÃÃ$ .
,
ÃÃ. /
ImpuestoUnitario
ÕÕ $
=
ÕÕ% &
item
ÕÕ' +
.
ÕÕ+ ,

ImporteIgv
ÕÕ, 6
/
ÕÕ7 8
item
ÕÕ9 =
.
ÕÕ= >
Cantidad
ÕÕ> F
,
ÕÕF G
OtroImpuesto
ŒŒ  
=
ŒŒ! "
$num
ŒŒ# $
,
ŒŒ$ %
	Descuento
œœ 
=
œœ 
item
œœ  $
.
œœ$ %
	Descuento
œœ% .
,
œœ. /

TotalVenta
–– 
=
––  
item
––! %
.
––% &
ImporteTotal
––& 2
-
––3 4
item
––5 9
.
––9 :

ImporteIgv
––: D
,
––D E
}
—— 
)
—— 
;
—— 
}
““ 
return
”” 
detallesDocumento
”” $
;
””$ %
}
‘‘ 	
public
÷÷ 
List
÷÷ 
<
÷÷ 
DetalleDocumento
÷÷ $
>
÷÷$ %
CrearDetalles
÷÷& 3
(
÷÷3 4
List
÷÷4 8
<
÷÷8 9
Detalle
÷÷9 @
>
÷÷@ A
detalles
÷÷B J
,
÷÷J K
decimal
÷÷L S
valorIcbper
÷÷T _
)
÷÷_ `
{
◊◊ 	
List
ÿÿ 
<
ÿÿ 
DetalleDocumento
ÿÿ !
>
ÿÿ! "
detallesDocumento
ÿÿ# 4
=
ÿÿ5 6
new
ÿÿ7 :
List
ÿÿ; ?
<
ÿÿ? @
DetalleDocumento
ÿÿ@ P
>
ÿÿP Q
(
ÿÿQ R
)
ÿÿR S
;
ÿÿS T
int
ŸŸ 
correlativo
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ  
foreach
⁄⁄ 
(
⁄⁄ 
var
⁄⁄ 
item
⁄⁄ 
in
⁄⁄  
detalles
⁄⁄! )
)
⁄⁄) *
{
€€ 
detallesDocumento
‹‹ !
.
‹‹! "
Add
‹‹" %
(
‹‹% &
new
‹‹& )
DetalleDocumento
‹‹* :
{
›› 
Id
ﬁﬁ 
=
ﬁﬁ 
correlativo
ﬁﬁ $
++
ﬁﬁ$ &
,
ﬁﬁ& '
Cantidad
ﬂﬂ 
=
ﬂﬂ 
item
ﬂﬂ #
.
ﬂﬂ# $
Cantidad
ﬂﬂ$ ,
,
ﬂﬂ, -
UnidadMedida
‡‡  
=
‡‡! "
$str
‡‡# (
,
‡‡( )

CodigoItem
·· 
=
··  
item
··! %
.
··% &
Codigo
··& ,
,
··, -
Descripcion
‚‚ 
=
‚‚  !!
CrearCaracteristica
‚‚" 5
(
‚‚5 6
item
‚‚6 :
)
‚‚: ;
,
‚‚; <
PrecioUnitario
„„ "
=
„„# $
item
„„% )
.
„„) *
ImporteUnitario
„„* 9
,
„„9 :
PrecioReferencial
‰‰ %
=
‰‰& '
item
‰‰( ,
.
‰‰, -
ImporteUnitario
‰‰- <
,
‰‰< =

TipoPrecio
ÂÂ 
=
ÂÂ  
$str
ÂÂ! %
,
ÂÂ% &
TipoImpuesto
ÊÊ  
=
ÊÊ! "
item
ÊÊ# '
.
ÊÊ' (

ImporteIgv
ÊÊ( 2
>
ÊÊ3 4
$num
ÊÊ5 6
?
ÊÊ7 8
$str
ÊÊ9 =
:
ÊÊ> ?
$str
ÊÊ@ D
,
ÊÊD E
Impuesto
ÁÁ 
=
ÁÁ 
item
ÁÁ #
.
ÁÁ# $

ImporteIgv
ÁÁ$ .
,
ÁÁ. /
ImpuestoUnitario
ËË $
=
ËË% &
item
ËË' +
.
ËË+ ,

ImporteIgv
ËË, 6
/
ËË7 8
item
ËË9 =
.
ËË= >
Cantidad
ËË> F
,
ËËF G
OtroImpuesto
ÈÈ  
=
ÈÈ! "
$num
ÈÈ# $
,
ÈÈ$ %
	Descuento
ÍÍ 
=
ÍÍ 
item
ÍÍ  $
.
ÍÍ$ %
	Descuento
ÍÍ% .
,
ÍÍ. /

TotalVenta
ÎÎ 
=
ÎÎ  
item
ÎÎ! %
.
ÎÎ% &
ImporteTotal
ÎÎ& 2
-
ÎÎ3 4
item
ÎÎ5 9
.
ÎÎ9 :

ImporteIgv
ÎÎ: D
,
ÎÎD E
Icbper
ÏÏ 
=
ÏÏ 
(
ÏÏ 
item
ÏÏ "
.
ÏÏ" #
IdConceptoBasico
ÏÏ# 3
==
ÏÏ4 6
MaestroSettings
ÏÏ7 F
.
ÏÏF G
Default
ÏÏG N
.
ÏÏN O9
+IdDetalleMaestroConceptoBasicoBolsaPlastica
ÏÏO z
)
ÏÏz {
?
ÏÏ| }
itemÏÏ~ Ç
.ÏÏÇ É
CantidadÏÏÉ ã
*ÏÏå ç
valorIcbperÏÏé ô
:ÏÏö õ
$numÏÏú ù
,ÏÏù û

TasaIcbper
ÌÌ 
=
ÌÌ  
valorIcbper
ÌÌ! ,
}
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ 
return
 
detallesDocumento
 $
;
$ %
}
ÒÒ 	
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
DetalleDocumento
ÛÛ $
>
ÛÛ$ %
CrearDetalles
ÛÛ& 3
(
ÛÛ3 4
List
ÛÛ4 8
<
ÛÛ8 9
Detalle
ÛÛ9 @
>
ÛÛ@ A
detalles
ÛÛB J
,
ÛÛJ K
decimal
ÛÛL S
valorIcbper
ÛÛT _
,
ÛÛ_ `
string
ÛÛa g
placa
ÛÛh m
)
ÛÛm n
{
ÙÙ 	
List
ıı 
<
ıı 
DetalleDocumento
ıı !
>
ıı! "
detallesDocumento
ıı# 4
=
ıı5 6
new
ıı7 :
List
ıı; ?
<
ıı? @
DetalleDocumento
ıı@ P
>
ııP Q
(
ııQ R
)
ııR S
;
ııS T
int
ˆˆ 
correlativo
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ  
foreach
˜˜ 
(
˜˜ 
var
˜˜ 
item
˜˜ 
in
˜˜  
detalles
˜˜! )
)
˜˜) *
{
¯¯ 
detallesDocumento
˘˘ !
.
˘˘! "
Add
˘˘" %
(
˘˘% &
new
˘˘& )
DetalleDocumento
˘˘* :
{
˙˙ 
Id
˚˚ 
=
˚˚ 
correlativo
˚˚ $
++
˚˚$ &
,
˚˚& '
Cantidad
¸¸ 
=
¸¸ 
item
¸¸ #
.
¸¸# $
Cantidad
¸¸$ ,
,
¸¸, -
UnidadMedida
˝˝  
=
˝˝! "
$str
˝˝# (
,
˝˝( )

CodigoItem
˛˛ 
=
˛˛  
item
˛˛! %
.
˛˛% &
Codigo
˛˛& ,
,
˛˛, -
Descripcion
ˇˇ 
=
ˇˇ  !!
CrearCaracteristica
ˇˇ" 5
(
ˇˇ5 6
item
ˇˇ6 :
)
ˇˇ: ;
,
ˇˇ; <
PrecioUnitario
ÄÄ "
=
ÄÄ# $
item
ÄÄ% )
.
ÄÄ) *
ImporteUnitario
ÄÄ* 9
,
ÄÄ9 :
PrecioReferencial
ÅÅ %
=
ÅÅ& '
item
ÅÅ( ,
.
ÅÅ, -
ImporteUnitario
ÅÅ- <
,
ÅÅ< =

TipoPrecio
ÇÇ 
=
ÇÇ  
$str
ÇÇ! %
,
ÇÇ% &
TipoImpuesto
ÉÉ  
=
ÉÉ! "
item
ÉÉ# '
.
ÉÉ' (

ImporteIgv
ÉÉ( 2
>
ÉÉ3 4
$num
ÉÉ5 6
?
ÉÉ7 8
$str
ÉÉ9 =
:
ÉÉ> ?
$str
ÉÉ@ D
,
ÉÉD E
Impuesto
ÑÑ 
=
ÑÑ 
item
ÑÑ #
.
ÑÑ# $

ImporteIgv
ÑÑ$ .
,
ÑÑ. /
ImpuestoUnitario
ÖÖ $
=
ÖÖ% &
item
ÖÖ' +
.
ÖÖ+ ,

ImporteIgv
ÖÖ, 6
/
ÖÖ7 8
item
ÖÖ9 =
.
ÖÖ= >
Cantidad
ÖÖ> F
,
ÖÖF G
OtroImpuesto
ÜÜ  
=
ÜÜ! "
$num
ÜÜ# $
,
ÜÜ$ %
	Descuento
áá 
=
áá 
item
áá  $
.
áá$ %
	Descuento
áá% .
,
áá. /

TotalVenta
àà 
=
àà  
item
àà! %
.
àà% &
ImporteTotal
àà& 2
-
àà3 4
item
àà5 9
.
àà9 :

ImporteIgv
àà: D
,
ààD E
Icbper
ââ 
=
ââ 
(
ââ 
item
ââ "
.
ââ" #
IdConceptoBasico
ââ# 3
==
ââ4 6
MaestroSettings
ââ7 F
.
ââF G
Default
ââG N
.
ââN O9
+IdDetalleMaestroConceptoBasicoBolsaPlastica
ââO z
)
ââz {
?
ââ| }
itemââ~ Ç
.ââÇ É
CantidadââÉ ã
*ââå ç
valorIcbperââé ô
:ââö õ
$numââú ù
,ââù û

TasaIcbper
ää 
=
ää  
valorIcbper
ää! ,
,
ää, -
PlacaVehiculo
ãã !
=
ãã" #
placa
ãã$ )
}
åå 
)
åå 
;
åå 
}
çç 
return
éé 
detallesDocumento
éé $
;
éé$ %
}
èè 	
private
ëë 
string
ëë !
CrearCaracteristica
ëë *
(
ëë* +
Detalle
ëë+ 2
detalle
ëë3 :
)
ëë: ;
{
íí 	
string
ìì 
	resultado
ìì 
=
ìì 
detalle
ìì &
.
ìì& '
Concepto
ìì' /
;
ìì/ 0
foreach
îî 
(
îî 
var
îî 
item
îî 
in
îî  
detalle
îî! (
.
îî( )$
CaracteristicasComunes
îî) ?
)
îî? @
{
ïï 
	resultado
ññ 
=
ññ 
	resultado
ññ %
+
ññ& '
$str
ññ( -
+
ññ. /
item
ññ0 4
.
ññ4 5"
NombreCaracteristica
ññ5 I
+
ññJ K
$str
ññL O
+
ññP Q
item
ññR V
.
ññV W
Valor
ññW \
;
ññ\ ]
}
óó 
{
òò 
foreach
ôô 
(
ôô 
var
ôô 
item
ôô !
in
ôô" $
detalle
ôô% ,
.
ôô, -$
CaracteristicasPropias
ôô- C
)
ôôC D
	resultado
öö 
=
öö 
	resultado
öö  )
+
öö* +
$str
öö, 1
+
öö2 3
item
öö4 8
.
öö8 9
Nombre
öö9 ?
+
öö@ A
$str
ööB E
+
ööF G
item
ööH L
.
ööL M
Valor
ööM R
;
ööR S
}
õõ 
	resultado
úú 
=
úú 
	resultado
úú !
.
úú! "
Length
úú" (
>
úú) *
$num
úú+ .
?
úú/ 0
	resultado
úú1 :
.
úú: ;
	Substring
úú; D
(
úúD E
$num
úúE F
,
úúF G
$num
úúH K
)
úúK L
:
úúM N
	resultado
úúO X
;
úúX Y
return
ùù 
	resultado
ùù 
;
ùù 
}
ûû 	
public
†† 
List
†† 
<
†† 
DetalleGuia
†† 
>
††  
CrearDetallesGuia
††! 2
(
††2 3
List
††3 7
<
††7 8
Detalle
††8 ?
>
††? @
detalles
††A I
)
††I J
{
°° 	
List
¢¢ 
<
¢¢ 
DetalleGuia
¢¢ 
>
¢¢ 
detallesGuia
¢¢ *
=
¢¢+ ,
new
¢¢- 0
List
¢¢1 5
<
¢¢5 6
DetalleGuia
¢¢6 A
>
¢¢A B
(
¢¢B C
)
¢¢C D
;
¢¢D E
int
££ 
correlativo
££ 
=
££ 
$num
££ 
;
££  
foreach
§§ 
(
§§ 
var
§§ 
item
§§ 
in
§§  
detalles
§§! )
)
§§) *
{
•• 
detallesGuia
¶¶ 
.
¶¶ 
Add
¶¶  
(
¶¶  !
new
¶¶! $
DetalleGuia
¶¶% 0
{
ßß 
Correlativo
®® 
=
®®  !
correlativo
®®" -
++
®®- /
,
®®/ 0

CodigoItem
©© 
=
©©  
item
©©! %
.
©©% &
Codigo
©©& ,
,
©©, -
Descripcion
™™ 
=
™™  !
item
™™" &
.
™™& '
Concepto
™™' /
,
™™/ 0
UnidadMedida
´´  
=
´´! "
$str
´´# (
,
´´( )
Cantidad
¨¨ 
=
¨¨ 
item
¨¨ #
.
¨¨# $
Cantidad
¨¨$ ,
,
¨¨, -
LineaReferencia
≠≠ #
=
≠≠$ %
$num
≠≠& '
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
return
∞∞ 
detallesGuia
∞∞ 
;
∞∞  
}
±± 	
private
≥≥ 
Compania
≥≥ 
CrearEmisor
≥≥ $
(
≥≥$ %
ActorComercial
≥≥% 3
emisor
≥≥4 :
)
≥≥: ;
{
¥¥ 	
return
µµ 
new
µµ 
Compania
µµ 
(
µµ  
)
µµ  !
{
∂∂ 
TipoDocumento
∑∑ 
=
∑∑ 
emisor
∑∑  &
.
∑∑& '/
!CodigoSunatTipoDocumentoIdentidad
∑∑' H
(
∑∑H I
)
∑∑I J
,
∑∑J K
NroDocumento
∏∏ 
=
∏∏ 
emisor
∏∏ %
.
∏∏% & 
DocumentoIdentidad
∏∏& 8
,
∏∏8 9
NombreLegal
ππ 
=
ππ 
emisor
ππ $
.
ππ$ %
RazonSocial
ππ% 0
,
ππ0 1
NombreComercial
∫∫ 
=
∫∫  !
emisor
∫∫" (
.
∫∫( )
NombreComercial
∫∫) 8
,
∫∫8 9
CodigoAnexo
ªª 
=
ªª 
emisor
ªª $
.
ªª$ %
Codigo
ªª% +
}
ºº 
;
ºº 
}
ΩΩ 	
public
øø  
ResumenDiarioNuevo
øø !"
ObtenerResumenDiario
øø" 6
(
øø6 7
	Documento
øø7 @
[
øø@ A
]
øøA B

documentos
øøC M
,
øøM N/
!EstablecimientoComercialExtendido
øøO p
emisor
øøq w
,
øøw x
bool
øøy }4
%cambiarEstadoItemDeAnuladoAAdicionadoøø~ £
)øø£ §
{
¿¿ 	
try
¡¡ 
{
¬¬ 
string
√√ 
fechaEmision
√√ #
=
√√$ %
DateTimeUtil
√√% 1
.
√√1 2
FechaActual
√√2 =
(
√√= >
)
√√> ?
.
√√? @
ToString
√√@ H
(
√√H I
$str
√√I U
)
√√U V
;
√√V W 
ResumenDiarioNuevo
ƒƒ " 
resumenDiarioNuevo
ƒƒ# 5
=
ƒƒ6 7
new
ƒƒ8 ; 
ResumenDiarioNuevo
ƒƒ< N
{
≈≈ 
IdDocumento
∆∆ 
=
∆∆  !,
FacturacionElectronicaSettings
∆∆" @
.
∆∆@ A
Default
∆∆A H
.
∆∆H I.
 CodigoTipoDocumentoResumenDiario
∆∆I i
+
∆∆j k
$str
∆∆l o
+
∆∆p q
fechaEmision
∆∆r ~
.
∆∆~ 
Split∆∆ Ñ
(∆∆Ñ Ö
$char∆∆Ö à
)∆∆à â
[∆∆â ä
$num∆∆ä ã
]∆∆ã å
+∆∆ç é
fechaEmision∆∆è õ
.∆∆õ ú
Split∆∆ú °
(∆∆° ¢
$char∆∆¢ •
)∆∆• ¶
[∆∆¶ ß
$num∆∆ß ®
]∆∆® ©
+∆∆™ ´
fechaEmision∆∆¨ ∏
.∆∆∏ π
Split∆∆π æ
(∆∆æ ø
$char∆∆ø ¬
)∆∆¬ √
[∆∆√ ƒ
$num∆∆ƒ ≈
]∆∆≈ ∆
+∆∆« »
$str∆∆… Ã
+∆∆Õ Œ
Convert∆∆œ ÷
.∆∆÷ ◊
ToString∆∆◊ ﬂ
(∆∆ﬂ ‡1
!ObtenerIdentificadorResumenDiario∆∆‡ Å
(∆∆Å Ç
Convert∆∆Ç â
.∆∆â ä

ToDateTime∆∆ä î
(∆∆î ï
fechaEmision∆∆ï °
)∆∆° ¢
)∆∆¢ £
)∆∆£ §
,∆∆§ •
Emisor
«« 
=
«« 
CrearEmisor
«« (
(
««( )
emisor
««) /
)
««/ 0
,
««0 1
FechaEmision
»»  
=
»»! "
fechaEmision
»»# /
,
»»/ 0
FechaReferencia
…… #
=
……$ %

documentos
……& 0
[
……0 1
$num
……1 2
]
……2 3
.
……3 4
fechaEmision
……4 @
.
……@ A
ToString
……A I
(
……I J
$str
……J V
)
……V W
,
……W X
	Resumenes
   
=
   $
CrearGrupoResumenNuevo
    6
(
  6 7

documentos
  7 A
,
  A B3
%cambiarEstadoItemDeAnuladoAAdicionado
  C h
)
  h i
}
ÀÀ 
;
ÀÀ 
return
ÃÃ  
resumenDiarioNuevo
ÃÃ )
;
ÃÃ) *
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* N
,
––N O
e
––P Q
)
––Q R
;
––R S
}
—— 
}
““ 	
public
‘‘ 
List
‘‘ 
<
‘‘ 
GrupoResumenNuevo
‘‘ %
>
‘‘% &$
CrearGrupoResumenNuevo
‘‘' =
(
‘‘= >
	Documento
‘‘> G
[
‘‘G H
]
‘‘H I

documentos
‘‘J T
,
‘‘T U
bool
‘‘V Z4
%cambiarEstadoItemDeAnuladoAAdicionado‘‘[ Ä
)‘‘Ä Å
{
’’ 	
List
÷÷ 
<
÷÷ 
GrupoResumenNuevo
÷÷ "
>
÷÷" #
resumenesDiarios
÷÷$ 4
=
÷÷5 6
new
÷÷7 :
List
÷÷; ?
<
÷÷? @
GrupoResumenNuevo
÷÷@ Q
>
÷÷Q R
(
÷÷R S
)
÷÷S T
;
÷÷T U
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
i
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
i
ÿÿ 
<
ÿÿ 

documentos
ÿÿ  *
.
ÿÿ* +
Length
ÿÿ+ 1
;
ÿÿ1 2
i
ÿÿ3 4
++
ÿÿ4 6
)
ÿÿ6 7
{
ŸŸ "
DocumentoElectronico
⁄⁄ $"
documentoElectronico
⁄⁄% 9
=
⁄⁄: ;
JsonConvert
⁄⁄< G
.
⁄⁄G H
DeserializeObject
⁄⁄H Y
<
⁄⁄Y Z"
DocumentoElectronico
⁄⁄Z n
>
⁄⁄n o
(
⁄⁄o p
Encoding
⁄⁄p x
.
⁄⁄x y
UTF8
⁄⁄y }
.
⁄⁄} ~
	GetString⁄⁄~ á
(⁄⁄á à

documentos⁄⁄à í
[⁄⁄í ì
i⁄⁄ì î
]⁄⁄î ï
.⁄⁄ï ñ
Binario⁄⁄ñ ù
.⁄⁄ù û
archivoBinario⁄⁄û ¨
)⁄⁄¨ ≠
)⁄⁄≠ Æ
;⁄⁄Æ Ø
GrupoResumenNuevo
‹‹ !
grupoResumenNuevo
‹‹" 3
=
‹‹4 5
new
‹‹6 9
GrupoResumenNuevo
‹‹: K
{
›› 
Id
ﬁﬁ 
=
ﬁﬁ 
i
ﬁﬁ 
+
ﬁﬁ 
$num
ﬁﬁ 
,
ﬁﬁ 
TipoDocumento
ﬂﬂ !
=
ﬂﬂ" #"
documentoElectronico
ﬂﬂ$ 8
.
ﬂﬂ8 9
TipoDocumento
ﬂﬂ9 F
,
ﬂﬂF G
IdDocumento
‡‡ 
=
‡‡  !"
documentoElectronico
‡‡" 6
.
‡‡6 7
IdDocumento
‡‡7 B
,
‡‡B C"
NroDocumentoReceptor
·· (
=
··) *"
documentoElectronico
··+ ?
.
··? @
Receptor
··@ H
.
··H I
NroDocumento
··I U
,
··U V#
TipoDocumentoReceptor
‚‚ )
=
‚‚* +"
documentoElectronico
‚‚, @
.
‚‚@ A
Receptor
‚‚A I
.
‚‚I J
TipoDocumento
‚‚J W
,
‚‚W X
CodigoEstadoItem
„„ $
=
„„% &
(
„„' (

documentos
„„( 2
[
„„2 3
i
„„3 4
]
„„4 5
.
„„5 6
estado
„„6 <
==
„„= ?
(
„„@ A
int
„„A D
)
„„D E(
EstadoDocumentoElectronico
„„E _
.
„„_ `
Anulado
„„` g
&&
„„h j4
%cambiarEstadoItemDeAnuladoAAdicionado„„k ê
)„„ê ë
?„„í ì
(„„î ï
int„„ï ò
)„„ò ô*
EstadoDocumentoElectronico„„ô ≥
.„„≥ ¥

Adicionado„„¥ æ
:„„ø ¿

documentos„„¡ À
[„„À Ã
i„„Ã Õ
]„„Õ Œ
.„„Œ œ
estado„„œ ’
,„„’ ÷
Moneda
‰‰ 
=
‰‰ "
documentoElectronico
‰‰ 1
.
‰‰1 2
Moneda
‰‰2 8
,
‰‰8 9
TotalIgv
ÂÂ 
=
ÂÂ "
documentoElectronico
ÂÂ 3
.
ÂÂ3 4
TotalIgv
ÂÂ4 <
,
ÂÂ< =
TotalIcbper
ÊÊ 
=
ÊÊ  !"
documentoElectronico
ÊÊ" 6
.
ÊÊ6 7
TotalIcbper
ÊÊ7 B
,
ÊÊB C

TotalVenta
ÁÁ 
=
ÁÁ  "
documentoElectronico
ÁÁ! 5
.
ÁÁ5 6

TotalVenta
ÁÁ6 @
,
ÁÁ@ A
Gravadas
ËË 
=
ËË "
documentoElectronico
ËË 3
.
ËË3 4
Gravadas
ËË4 <
,
ËË< =

Exoneradas
ÈÈ 
=
ÈÈ  "
documentoElectronico
ÈÈ! 5
.
ÈÈ5 6

Exoneradas
ÈÈ6 @
,
ÈÈ@ A
	Inafectas
ÍÍ 
=
ÍÍ "
documentoElectronico
ÍÍ  4
.
ÍÍ4 5
	Inafectas
ÍÍ5 >
,
ÍÍ> ?
	Gratuitas
ÎÎ 
=
ÎÎ "
documentoElectronico
ÎÎ  4
.
ÎÎ4 5
	Gratuitas
ÎÎ5 >
,
ÎÎ> ?!
TotalOtrosImpuestos
ÏÏ '
=
ÏÏ( )"
documentoElectronico
ÏÏ* >
.
ÏÏ> ? 
TotalOtrosTributos
ÏÏ? Q
,
ÏÏQ R
CorrelativoInicio
ÌÌ %
=
ÌÌ& '
Convert
ÌÌ( /
.
ÌÌ/ 0
ToInt32
ÌÌ0 7
(
ÌÌ7 8

documentos
ÌÌ8 B
.
ÌÌB C
First
ÌÌC H
(
ÌÌH I
)
ÌÌI J
.
ÌÌJ K
id
ÌÌK M
)
ÌÌM N
,
ÌÌN O
CorrelativoFin
ÓÓ "
=
ÓÓ# $
Convert
ÓÓ% ,
.
ÓÓ, -
ToInt32
ÓÓ- 4
(
ÓÓ4 5

documentos
ÓÓ5 ?
.
ÓÓ? @
Last
ÓÓ@ D
(
ÓÓD E
)
ÓÓE F
.
ÓÓF G
id
ÓÓG I
)
ÓÓI J
,
ÓÓJ K
TotalDescuentos
ÔÔ #
=
ÔÔ$ %"
documentoElectronico
ÔÔ& :
.
ÔÔ: ;
DescuentoGlobal
ÔÔ; J
}
 
;
 
if
ÚÚ 
(
ÚÚ 
grupoResumenNuevo
ÚÚ %
.
ÚÚ% &
TipoDocumento
ÚÚ& 3
==
ÚÚ4 6
MaestroSettings
ÚÚ7 F
.
ÚÚF G
Default
ÚÚG N
.
ÚÚN O/
!CodigoDetalleMaestroNotaDeCredito
ÚÚO p
||
ÚÚq s 
grupoResumenNuevoÚÚt Ö
.ÚÚÖ Ü
TipoDocumentoÚÚÜ ì
==ÚÚî ñ
MaestroSettingsÚÚó ¶
.ÚÚ¶ ß
DefaultÚÚß Æ
.ÚÚÆ Ø0
 CodigoDetalleMaestroNotaDeDebitoÚÚØ œ
)ÚÚœ –
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
!
ÙÙ ,
DocumentoReferenciaFueAceptado
ÙÙ 7
(
ÙÙ7 8"
documentoElectronico
ÙÙ8 L
.
ÙÙL M
Relacionados
ÙÙM Y
.
ÙÙY Z
FirstOrDefault
ÙÙZ h
(
ÙÙh i
)
ÙÙi j
.
ÙÙj k
TipoDocumento
ÙÙk x
,
ÙÙx y#
documentoElectronicoÙÙz é
.ÙÙé è
RelacionadosÙÙè õ
.ÙÙõ ú
FirstOrDefaultÙÙú ™
(ÙÙ™ ´
)ÙÙ´ ¨
.ÙÙ¨ ≠
NroDocumentoÙÙ≠ π
)ÙÙπ ∫
)ÙÙ∫ ª
{
ıı 
throw
ˆˆ 
new
ˆˆ !
LogicaException
ˆˆ" 1
(
ˆˆ1 2
$str
ˆˆ2 S
+
ˆˆT U"
documentoElectronico
ˆˆV j
.
ˆˆj k
Relacionados
ˆˆk w
.
ˆˆw x
FirstOrDefaultˆˆx Ü
(ˆˆÜ á
)ˆˆá à
.ˆˆà â
TipoDocumentoˆˆâ ñ
+ˆˆó ò
$strˆˆô ú
+ˆˆù û$
documentoElectronicoˆˆü ≥
.ˆˆ≥ ¥
Relacionadosˆˆ¥ ¿
.ˆˆ¿ ¡
FirstOrDefaultˆˆ¡ œ
(ˆˆœ –
)ˆˆ– —
.ˆˆ— “
NroDocumentoˆˆ“ ﬁ
+ˆˆﬂ ‡
$strˆˆ· ˚
)ˆˆ˚ ¸
;ˆˆ¸ ˝
}
˜˜ 
grupoResumenNuevo
¯¯ %
.
¯¯% &&
TipoDocumentoRelacionado
¯¯& >
=
¯¯? @"
documentoElectronico
¯¯A U
.
¯¯U V
Relacionados
¯¯V b
.
¯¯b c
FirstOrDefault
¯¯c q
(
¯¯q r
)
¯¯r s
.
¯¯s t
TipoDocumento¯¯t Å
;¯¯Å Ç
grupoResumenNuevo
˘˘ %
.
˘˘% &"
DocumentoRelacionado
˘˘& :
=
˘˘; <"
documentoElectronico
˘˘= Q
.
˘˘Q R
Relacionados
˘˘R ^
.
˘˘^ _
FirstOrDefault
˘˘_ m
(
˘˘m n
)
˘˘n o
.
˘˘o p
NroDocumento
˘˘p |
;
˘˘| }
}
˙˙ 
resumenesDiarios
˚˚  
.
˚˚  !
Add
˚˚! $
(
˚˚$ %
grupoResumenNuevo
˚˚% 6
)
˚˚6 7
;
˚˚7 8
}
¸¸ 
return
˝˝ 
resumenesDiarios
˝˝ #
;
˝˝# $
}
˛˛ 	
public
ÄÄ 
ComunicacionBaja
ÄÄ %
ObtenerComunicacionBaja
ÄÄ  7
(
ÄÄ7 8
	Documento
ÄÄ8 A
[
ÄÄA B
]
ÄÄB C

documentos
ÄÄD N
,
ÄÄN O/
!EstablecimientoComercialExtendido
ÄÄP q
emisor
ÄÄr x
)
ÄÄx y
{
ÅÅ 	
string
ÇÇ 
fechaEmision
ÇÇ 
=
ÇÇ  !
DateTimeUtil
ÇÇ! -
.
ÇÇ- .
FechaActual
ÇÇ. 9
(
ÇÇ9 :
)
ÇÇ: ;
.
ÇÇ; <
ToString
ÇÇ< D
(
ÇÇD E
$str
ÇÇE Q
)
ÇÇQ R
;
ÇÇR S
return
ÉÉ 
new
ÉÉ 
ComunicacionBaja
ÉÉ '
{
ÑÑ 
Emisor
ÖÖ 
=
ÖÖ 
CrearEmisor
ÖÖ $
(
ÖÖ$ %
emisor
ÖÖ% +
)
ÖÖ+ ,
,
ÖÖ, -
IdDocumento
ÜÜ 
=
ÜÜ 
$str
ÜÜ "
+
ÜÜ# $
$str
ÜÜ% (
+
ÜÜ) *
fechaEmision
ÜÜ+ 7
.
ÜÜ7 8
Split
ÜÜ8 =
(
ÜÜ= >
$char
ÜÜ> A
)
ÜÜA B
[
ÜÜB C
$num
ÜÜC D
]
ÜÜD E
+
ÜÜF G
fechaEmision
ÜÜH T
.
ÜÜT U
Split
ÜÜU Z
(
ÜÜZ [
$char
ÜÜ[ ^
)
ÜÜ^ _
[
ÜÜ_ `
$num
ÜÜ` a
]
ÜÜa b
+
ÜÜc d
fechaEmision
ÜÜe q
.
ÜÜq r
Split
ÜÜr w
(
ÜÜw x
$char
ÜÜx {
)
ÜÜ{ |
[
ÜÜ| }
$num
ÜÜ} ~
]
ÜÜ~ 
+ÜÜÄ Å
$strÜÜÇ Ö
+ÜÜÜ á
ConvertÜÜà è
.ÜÜè ê
ToStringÜÜê ò
(ÜÜò ô4
$ObtenerIdentificadorComunicacionBajaÜÜô Ω
(ÜÜΩ æ
ConvertÜÜæ ≈
.ÜÜ≈ ∆

ToDateTimeÜÜ∆ –
(ÜÜ– —
fechaEmisionÜÜ— ›
)ÜÜ› ﬁ
)ÜÜﬁ ﬂ
)ÜÜﬂ ‡
,ÜÜ‡ ·
FechaEmision
áá 
=
áá 
DateTimeUtil
áá *
.
áá* +
FechaActual
áá+ 6
(
áá6 7
)
áá7 8
.
áá8 9
ToString
áá9 A
(
ááA B
$str
ááB N
)
ááN O
,
ááO P
FechaReferencia
àà 
=
àà  !

documentos
àà" ,
[
àà, -
$num
àà- .
]
àà. /
.
àà/ 0
fechaEmision
àà0 <
.
àà< =
ToString
àà= E
(
ààE F
$str
ààF R
)
ààR S
,
ààS T
Bajas
ââ 
=
ââ (
CrearBajasComunicacionBaja
ââ 2
(
ââ2 3

documentos
ââ3 =
)
ââ= >
}
ää 
;
ää 
}
ãã 	
public
çç 
List
çç 
<
çç 
DocumentoBaja
çç !
>
çç! "(
CrearBajasComunicacionBaja
çç# =
(
çç= >
	Documento
çç> G
[
ççG H
]
ççH I

documentos
ççJ T
)
ççT U
{
éé 	
List
èè 
<
èè 
DocumentoBaja
èè 
>
èè 
documentoBajas
èè  .
=
èè/ 0
new
èè1 4
List
èè5 9
<
èè9 :
DocumentoBaja
èè: G
>
èèG H
(
èèH I
)
èèI J
;
èèJ K
for
ëë 
(
ëë 
int
ëë 
i
ëë 
=
ëë 
$num
ëë 
;
ëë 
i
ëë 
<
ëë 

documentos
ëë  *
.
ëë* +
Length
ëë+ 1
;
ëë1 2
i
ëë3 4
++
ëë4 6
)
ëë6 7
{
íí "
DocumentoElectronico
ìì $"
documentoElectronico
ìì% 9
=
ìì: ;
JsonConvert
ìì< G
.
ììG H
DeserializeObject
ììH Y
<
ììY Z"
DocumentoElectronico
ììZ n
>
ììn o
(
ììo p
Encoding
ììp x
.
ììx y
UTF8
ììy }
.
ìì} ~
	GetStringìì~ á
(ììá à

documentosììà í
[ììí ì
iììì î
]ììî ï
.ììï ñ
Binarioììñ ù
.ììù û
archivoBinarioììû ¨
)ìì¨ ≠
)ìì≠ Æ
;ììÆ Ø
documentoBajas
ïï 
.
ïï 
Add
ïï "
(
ïï" #
new
ïï# &
DocumentoBaja
ïï' 4
{
ññ 
Id
óó 
=
óó 
i
óó 
+
óó 
$num
óó 
,
óó 
TipoDocumento
òò !
=
òò" #"
documentoElectronico
òò$ 8
.
òò8 9
TipoDocumento
òò9 F
,
òòF G
Serie
ôô 
=
ôô "
documentoElectronico
ôô 0
.
ôô0 1
IdDocumento
ôô1 <
.
ôô< =
Split
ôô= B
(
ôôB C
$char
ôôC F
)
ôôF G
[
ôôG H
$num
ôôH I
]
ôôI J
,
ôôJ K
Correlativo
öö 
=
öö  !"
documentoElectronico
öö" 6
.
öö6 7
IdDocumento
öö7 B
.
ööB C
Split
ööC H
(
ööH I
$char
ööI L
)
ööL M
[
ööM N
$num
ööN O
]
ööO P
,
ööP Q

MotivoBaja
õõ 
=
õõ  
$str
õõ! ;
+
õõ< ="
documentoElectronico
õõ> R
.
õõR S
IdDocumento
õõS ^
,
õõ^ _
}
úú 
)
úú 
;
úú 
}
ùù 
return
ûû 
documentoBajas
ûû !
;
ûû! "
}
üü 	
public
°° 
int
°° /
!ObtenerIdentificadorResumenDiario
°° 4
(
°°4 5
DateTime
°°5 =
fechaConsulta
°°> K
)
°°K L
{
¢¢ 	
try
££ 
{
§§ 
return
•• 
_facturacionDatos
•• (
.
••( )"
ObtenerIdentificador
••) =
(
••= >
fechaConsulta
••> K
,
••K L,
FacturacionElectronicaSettings
••M k
.
••k l
Default
••l s
.
••s t%
TipoEnvioResumenDiario••t ä
)••ä ã
+••å ç
$num••é è
;••è ê
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
e
©© 
;
©© 
}
™™ 
}
´´ 	
public
≠≠ 
bool
≠≠ ,
DocumentoReferenciaFueAceptado
≠≠ 2
(
≠≠2 3
string
≠≠3 9
tipoDocumento
≠≠: G
,
≠≠G H
string
≠≠I O
numeroDocumento
≠≠P _
)
≠≠_ `
{
ÆÆ 	
try
ØØ 
{
∞∞ 
List
±± 
<
±± 
int
±± 
>
±± !
estadosDeAceptacion
±± -
=
±±. /
new
±±0 3
List
±±4 8
<
±±8 9
int
±±9 <
>
±±< =
{
±±> ?
(
±±@ A
int
±±A D
)
±±D E
EstadoEnvio
±±E P
.
±±P Q
Aceptado
±±Q Y
,
±±Y Z
(
±±[ \
int
±±\ _
)
±±_ `
EstadoEnvio
±±` k
.
±±k l'
AceptadoConObservaciones±±l Ñ
}±±Ö Ü
;±±Ü á
return
≤≤ 
_facturacionDatos
≤≤ (
.
≤≤( ),
DocumentoReferenciaFueAceptado
≤≤) G
(
≤≤G H
tipoDocumento
≤≤H U
,
≤≤U V
numeroDocumento
≤≤W f
,
≤≤f g!
estadosDeAceptacion
≤≤h {
)
≤≤{ |
;
≤≤| }
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∑∑ 
e
∑∑ 
;
∑∑ 
}
∏∏ 
}
ππ 	
public
ªª 
int
ªª 2
$ObtenerIdentificadorComunicacionBaja
ªª 7
(
ªª7 8
DateTime
ªª8 @
fechaConsulta
ªªA N
)
ªªN O
{
ºº 	
try
ΩΩ 
{
ææ 
return
øø 
_facturacionDatos
øø (
.
øø( )"
ObtenerIdentificador
øø) =
(
øø= >
fechaConsulta
øø> K
,
øøK L,
FacturacionElectronicaSettings
øøM k
.
øøk l
Default
øøl s
.
øøs t*
TipoEnvioComunicacionDeBajaøøt è
)øøè ê
+øøë í
$numøøì î
;øøî ï
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
e
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 	
}
∆∆ 
}«« ˚
FD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ActorNegocioLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ActorNegocioLogica +
:, -
IActorNegocioLogica. A
{ 
private 
readonly 
IActorRepositorio *
_actorRepositorio+ <
;< =
private 
readonly 
IActor_Repositorio +
_actor_Repositorio, >
;> ?
private 
readonly #
ITransaccionRepositorio 0#
_transaccionRepositorio1 H
;H I
private 
readonly 
IMaestroRepositorio ,
_maestroRepositorio- @
;@ A
private 
readonly )
ICentroDeAtencion_Repositorio 6(
_centroDeAtencionRepositorio7 S
;S T
private 
readonly 
IRoles_Repositorio +
_rolesRepositorio, =
;= >
private 
readonly $
IInventarioActual_Logica 1$
_inventarioActual_Logica2 J
;J K
private   
readonly   *
IValidacionActorNegocio_Logica   7*
_validacionActorNegocio_Logica  8 V
;  V W
private!! 
readonly!! %
IVinculoActor_Repositorio!! 2%
_vinculoActor_Repositorio!!3 L
;!!L M
private"" 
readonly"" &
IConsultaActor_Repositorio"" 3&
_consultaActor_Repositorio""4 N
;""N O
public%% 
ActorNegocioLogica%% !
(%%! "
IActorRepositorio%%" 3
actorRepositorio%%4 D
,%%D E 
IConceptoRepositorio%%F Z
conceptoRepositorio%%[ n
,%%n o$
ITransaccionRepositorio	%%p á$
transaccionRepositorio
%%à û
,
%%û ü!
IMaestroRepositorio
%%† ≥ 
maestroRepositorio
%%¥ ∆
,
%%∆ «&
IInventarioActual_Logica
%%» ‡%
inventarioActual_Logica
%%· ¯
,
%%¯ ˘+
ICentroDeAtencion_Repositorio
%%˙ ó)
centroDeAtencionRepositorio
%%ò ≥
,
%%≥ ¥ 
IRoles_Repositorio
%%µ «
rolesRepositorio
%%» ÿ
,
%%ÿ Ÿ 
IActor_Repositorio
%%⁄ Ï
actor_Repositorio
%%Ì ˛
,
%%˛ ˇ,
IValidacionActorNegocio_Logica
%%Ä û+
validacionActorNegocio_Logica
%%ü º
,
%%º Ω'
IVinculoActor_Repositorio
%%æ ◊&
vinculoActor_Repositorio
%%ÿ 
,
%% Ò(
IConsultaActor_Repositorio
%%Ú å'
consultaActor_Repositorio
%%ç ¶
)
%%¶ ß
{&& 	
_actorRepositorio'' 
='' 
actorRepositorio''  0
;''0 1
_actor_Repositorio(( 
=((  
actor_Repositorio((! 2
;((2 3#
_transaccionRepositorio)) #
=))$ %"
transaccionRepositorio))& <
;))< =
_maestroRepositorio** 
=**  !
maestroRepositorio**" 4
;**4 5$
_inventarioActual_Logica++ $
=++% &#
inventarioActual_Logica++' >
;++> ?(
_centroDeAtencionRepositorio,, (
=,,) *'
centroDeAtencionRepositorio,,+ F
;,,F G
_rolesRepositorio-- 
=-- 
rolesRepositorio--  0
;--0 1*
_validacionActorNegocio_Logica.. *
=..+ ,)
validacionActorNegocio_Logica..- J
;..J K%
_vinculoActor_Repositorio// %
=//& '$
vinculoActor_Repositorio//( @
;//@ A&
_consultaActor_Repositorio00 &
=00' (%
consultaActor_Repositorio00) B
;00B C
}11 	
public22 
ActorNegocioLogica22 !
(22! "
)22" #
{33 	
}44 	
public88 -
!RespuestaVerificacionActorNegocio88 0
VerificarActor881 ?
(88? @
int88@ C
idTipoDocumento88D S
,88S T
string88U [
numeroDocumento88\ k
,88k l
int88m p
idRol88q v
)88v w
{99 	
try:: 
{;; 
return<< 
_actorRepositorio<< (
.<<( )
verificarActor<<) 7
(<<7 8
idTipoDocumento<<8 G
,<<G H
numeroDocumento<<I X
,<<X Y
idRol<<Z _
)<<_ `
;<<` a
}== 
catch>> 
(>> 
	Exception>> 
e>> 
)>> 
{>>  !
throw>>" '
e>>( )
;>>) *
}>>+ ,
}?? 	
public@@ 
List@@ 
<@@ 

Tipo_actor@@ 
>@@ 
ObtenerTiposDeActor@@  3
(@@3 4
)@@4 5
{AA 	
tryBB 
{BB 
returnBB 
_actorRepositorioBB *
.BB* +
obtenerTiposDeActorBB+ >
(BB> ?
)BB? @
.BB@ A
ToListBBA G
(BBG H
)BBH I
;BBI J
}BBK L
catchCC 
(CC 
	ExceptionCC 
eCC 
)CC 
{CC  !
throwCC" '
eCC( )
;CC) *
}CC+ ,
}EE 	
publicFF 
ListFF 
<FF 
Clase_actorFF 
>FF  $
ObtenerTiposDeClaseActorFF! 9
(FF9 :
intFF: =
idTipoActorFF> I
)FFI J
{GG 	
tryHH 
{HH 
returnHH 
_actorRepositorioHH *
.HH* + 
obtenerClasesDeActorHH+ ?
(HH? @
idTipoActorHH@ K
)HHK L
.HHL M
ToListHHM S
(HHS T
)HHT U
;HHU V
}HHW X
catchII 
(II 
	ExceptionII 
eII 
)II 
{II  !
throwII" '
eII( )
;II) *
}II+ ,
}JJ 	
publicKK 
ListKK 
<KK 
Estado_legalKK  
>KK  !%
ObtenerTiposDeEstadoLegalKK" ;
(KK; <
intKK< ?
idTipoActorKK@ K
)KKK L
{LL 	
tryMM 
{MM 
returnMM 
_actorRepositorioMM *
.MM* +!
obtenerEstadosLegalesMM+ @
(MM@ A
idTipoActorMMA L
)MML M
.MMM N
ToListMMN T
(MMT U
)MMU V
;MMV W
}MMX Y
catchNN 
(NN 
	ExceptionNN 
eNN 
)NN 
{NN  !
throwNN" '
eNN( )
;NN) *
}NN+ ,
}OO 	
publicPP 
ListPP 
<PP 
Clase_actorPP 
>PP  
ObtenerListaSexosPP! 2
(PP2 3
)PP3 4
{QQ 	
intRR 
idTipoActorNaturalRR "
=RR# $
ActorSettingsRR% 2
.RR2 3
DefaultRR3 :
.RR: ;%
IdTipoActorPersonaNaturalRR; T
;RRT U
trySS 
{SS 
returnSS 
_actorRepositorioSS *
.SS* + 
obtenerClasesDeActorSS+ ?
(SS? @
idTipoActorNaturalSS@ R
)SSR S
.SSS T
ToListSST Z
(SSZ [
)SS[ \
;SS\ ]
}SS^ _
catchTT 
(TT 
	ExceptionTT 
eTT 
)TT 
{TT  !
throwTT" '
eTT( )
;TT) *
}TT+ ,
}UU 	
publicVV 
ListVV 
<VV 
Clase_actorVV 
>VV  '
ObtenerListaTiposDeSociedadVV! <
(VV< =
)VV= >
{WW 	
intXX 
idTipoActorJuridicaXX #
=XX$ %
ActorSettingsXX& 3
.XX3 4
DefaultXX4 ;
.XX; <&
IdTipoActorPersonaJuridicaXX< V
;XXV W
tryYY 
{YY 
returnYY 
_actorRepositorioYY *
.YY* + 
obtenerClasesDeActorYY+ ?
(YY? @
idTipoActorJuridicaYY@ S
)YYS T
.YYT U
ToListYYU [
(YY[ \
)YY\ ]
;YY] ^
}YY_ `
catchZZ 
(ZZ 
	ExceptionZZ 
eZZ 
)ZZ 
{ZZ  !
throwZZ" '
eZZ( )
;ZZ) *
}ZZ+ ,
}[[ 	
public\\ 
List\\ 
<\\ 
Estado_legal\\  
>\\  !&
ObtenerListaEstadosCiviles\\" <
(\\< =
)\\= >
{]] 	
int^^ 
idTipoActorNatural^^ "
=^^# $
ActorSettings^^% 2
.^^2 3
Default^^3 :
.^^: ;%
IdTipoActorPersonaNatural^^; T
;^^T U
try__ 
{__ 
return__ 
_actorRepositorio__ *
.__* +!
obtenerEstadosLegales__+ @
(__@ A
idTipoActorNatural__A S
)__S T
.__T U
ToList__U [
(__[ \
)__\ ]
;__] ^
}___ `
catch`` 
(`` 
	Exception`` 
e`` 
)`` 
{``  !
throw``" '
e``( )
;``) *
}``+ ,
}aa 	
publicbb 
stringbb $
ObtenerDenominacionClasebb .
(bb. /
intbb/ 2
idTipoActorbb3 >
)bb> ?
{cc 	
trydd 
{ee 
returnff 
(ff 
_actorRepositorioff )
.ff) *$
obtenerDenominacionClaseff* B
(ffB C
idTipoActorffC N
)ffN O
)ffO P
;ffP Q
}gg 
catchhh 
(hh 
	Exceptionhh 
ehh 
)hh 
{hh  !
throwhh" '
ehh( )
;hh) *
}hh+ ,
}ii 	
publicjj 
stringjj  
ObtenerProximoCodigojj *
(jj* +
intjj+ .
idRoljj/ 4
)jj4 5
{kk 	
tryll 
{mm 
stringnn 
maximoCodigonn #
=nn$ %
_actorRepositorionn& 7
.nn7 8
obtenerMaximoCodigonn8 K
(nnK L
idRolnnL Q
)nnQ R
;nnR S
returnoo 
(oo 
Convertoo 
.oo  
ToInt32oo  '
(oo' (
maximoCodigooo( 4
)oo4 5
+oo6 7
$numoo8 9
)oo9 :
.oo: ;
ToStringoo; C
(ooC D
)ooD E
;ooE F
}pp 
catchqq 
(qq 
	Exceptionqq 
eqq 
)qq 
{qq  !
throwqq" '
eqq( )
;qq) *
}qq+ ,
}rr 	
publicss 
ActorComercialss !
ObtenerActorComercialss 3
(ss3 4
intss4 7
idss8 :
)ss: ;
{tt 	
tryuu 
{vv 
Actor_negocioww 
actorNegocioww *
=ww+ ,
_actor_Repositorioww- ?
.ww? @!
ObtenerActorDeNegocioww@ U
(wwU V
idwwV X
)wwX Y
;wwY Z
returnxx 
newxx 
ActorComercialxx )
(xx) *
actorNegocioxx* 6
)xx6 7
;xx7 8
}yy 
catchzz 
(zz 
	Exceptionzz 
ezz 
)zz 
{zz  !
throwzz" '
;zz' (
}zz) *
}{{ 	
public|| 
List|| 
<|| 
Rol|| 
>||  
ObtenerRolesPersonal|| -
(||- .
)||. /
{}} 	
try~~ 
{ 
return
ÄÄ 
_rolesRepositorio
ÄÄ (
.
ÄÄ( )
ObtenerRolesHijos
ÄÄ) :
(
ÄÄ: ;
ActorSettings
ÄÄ; H
.
ÄÄH I
Default
ÄÄI P
.
ÄÄP Q
IdRolEmpleado
ÄÄQ ^
)
ÄÄ^ _
.
ÄÄ_ `
ToList
ÄÄ` f
(
ÄÄf g
)
ÄÄg h
;
ÄÄh i
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÇÇ  !
throw
ÇÇ" '
e
ÇÇ( )
;
ÇÇ) *
}
ÇÇ+ ,
}
ÉÉ 	
public
ÑÑ 
string
ÑÑ ,
ObtenerDireccionActorComercial
ÑÑ 4
(
ÑÑ4 5
int
ÑÑ5 8
id
ÑÑ9 ;
)
ÑÑ; <
{
ÖÖ 	
try
ÜÜ 
{
áá 
string
àà 
	direccion
àà  
=
àà! "
$str
àà# %
;
àà% &
ActorComercial
ââ 
actor
ââ $
=
ââ% &
new
ââ' *
ActorComercial
ââ+ 9
(
ââ9 : 
_actor_Repositorio
ââ: L
.
ââL M#
ObtenerActorDeNegocio
ââM b
(
ââb c
id
ââc e
)
ââe f
)
ââf g
;
ââg h
if
ää 
(
ää 
actor
ää 
.
ää 
DomicilioFiscal
ää )
(
ää) *
)
ää* +
!=
ää, .
null
ää/ 3
)
ää3 4
{
ãã 
	direccion
åå 
=
åå 
(
åå  !
actor
åå! &
.
åå& '
DomicilioFiscal
åå' 6
(
åå6 7
)
åå7 8
.
åå8 9
detalle
åå9 @
+
ååA B
$str
ååC H
+
ååI J
actor
ååK P
.
ååP Q
DomicilioFiscal
ååQ `
(
åå` a
)
ååa b
.
ååb c
Ubigeo
ååc i
.
ååi j
descripcion_larga
ååj {
)
åå{ |
.
åå| }
ToUpperåå} Ñ
(ååÑ Ö
)ååÖ Ü
;ååÜ á
}
çç 
return
éé 
	direccion
éé  
;
éé  !
}
èè 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
throw
íí 
e
íí 
;
íí 
}
ìì 
}
îî 	
public
ïï 
int
ïï 4
&ObtenerIdUbigeoDireccionActorComercial
ïï 9
(
ïï9 :
int
ïï: =
id
ïï> @
)
ïï@ A
{
ññ 	
try
óó 
{
òò 
int
ôô 
ubigeo
ôô 
=
ôô 
$num
ôô 
;
ôô 
ActorComercial
öö 
actor
öö $
=
öö% &
new
öö' *
ActorComercial
öö+ 9
(
öö9 : 
_actor_Repositorio
öö: L
.
ööL M#
ObtenerActorDeNegocio
ööM b
(
ööb c
id
ööc e
)
ööe f
)
ööf g
;
öög h
if
õõ 
(
õõ 
actor
õõ 
.
õõ 
DomicilioFiscal
õõ )
(
õõ) *
)
õõ* +
!=
õõ, .
null
õõ/ 3
)
õõ3 4
{
úú 
ubigeo
ùù 
=
ùù 
actor
ùù "
.
ùù" #
DomicilioFiscal
ùù# 2
(
ùù2 3
)
ùù3 4
.
ùù4 5
Ubigeo
ùù5 ;
.
ùù; <
id
ùù< >
;
ùù> ?
}
ûû 
return
üü 
ubigeo
üü 
;
üü 
}
†† 
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
¢¢ 
throw
££ 
e
££ 
;
££ 
}
§§ 
}
•• 	
public
¶¶ 
ItemGenerico
¶¶ 2
$ObtenerUbigeoDireccionActorComercial
¶¶ @
(
¶¶@ A
int
¶¶A D
id
¶¶E G
)
¶¶G H
{
ßß 	
try
®® 
{
©© 
ItemGenerico
™™ 
ubigeo
™™ #
=
™™$ %
new
™™& )
ItemGenerico
™™* 6
(
™™6 7
)
™™7 8
;
™™8 9
ActorComercial
´´ 
actor
´´ $
=
´´% &
new
´´' *
ActorComercial
´´+ 9
(
´´9 : 
_actor_Repositorio
´´: L
.
´´L M#
ObtenerActorDeNegocio
´´M b
(
´´b c
id
´´c e
)
´´e f
)
´´f g
;
´´g h
if
¨¨ 
(
¨¨ 
actor
¨¨ 
.
¨¨ 
DomicilioFiscal
¨¨ )
(
¨¨) *
)
¨¨* +
!=
¨¨, .
null
¨¨/ 3
)
¨¨3 4
{
≠≠ 
ubigeo
ÆÆ 
=
ÆÆ 
new
ÆÆ  
ItemGenerico
ÆÆ! -
{
ØØ 
Id
∞∞ 
=
∞∞ 
actor
∞∞ "
.
∞∞" #
DomicilioFiscal
∞∞# 2
(
∞∞2 3
)
∞∞3 4
.
∞∞4 5
Ubigeo
∞∞5 ;
.
∞∞; <
id
∞∞< >
,
∞∞> ?
Nombre
±± 
=
±±  
actor
±±! &
.
±±& '
DomicilioFiscal
±±' 6
(
±±6 7
)
±±7 8
.
±±8 9
Ubigeo
±±9 ?
.
±±? @
descripcion_larga
±±@ Q
}
≤≤ 
;
≤≤ 
}
≥≥ 
return
¥¥ 
ubigeo
¥¥ 
;
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
e
∏∏ 
;
∏∏ 
}
ππ 
}
∫∫ 	
public
ªª 
string
ªª 3
%ObtenerDetalleDireccionActorComercial
ªª ;
(
ªª; <
int
ªª< ?
id
ªª@ B
)
ªªB C
{
ºº 	
try
ΩΩ 
{
ææ 
string
øø 
	direccion
øø  
=
øø! "
$str
øø# %
;
øø% &
ActorComercial
¿¿ 
actor
¿¿ $
=
¿¿% &
new
¿¿' *
ActorComercial
¿¿+ 9
(
¿¿9 : 
_actor_Repositorio
¿¿: L
.
¿¿L M#
ObtenerActorDeNegocio
¿¿M b
(
¿¿b c
id
¿¿c e
)
¿¿e f
)
¿¿f g
;
¿¿g h
if
¡¡ 
(
¡¡ 
actor
¡¡ 
.
¡¡ 
DomicilioFiscal
¡¡ )
(
¡¡) *
)
¡¡* +
!=
¡¡, .
null
¡¡/ 3
)
¡¡3 4
{
¬¬ 
	direccion
√√ 
=
√√ 
actor
√√  %
.
√√% &
DomicilioFiscal
√√& 5
(
√√5 6
)
√√6 7
.
√√7 8
detalle
√√8 ?
.
√√? @
ToUpper
√√@ G
(
√√G H
)
√√H I
;
√√I J
}
ƒƒ 
return
≈≈ 
	direccion
≈≈  
;
≈≈  !
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
e
…… 
;
…… 
}
   
}
ÀÀ 	
public
œœ 
OperationResult
œœ 

CrearTurno
œœ )
(
œœ) *
int
œœ* - 
idCentroDeAtencion
œœ. @
,
œœ@ A
int
œœB E

idEmpleado
œœF P
,
œœP Q
DateTime
œœR Z
desde
œœ[ `
,
œœ` a
DateTime
œœb j
hasta
œœk p
)
œœp q
{
–– 	
try
—— 
{
““ 
DateTime
”” 
fechaActual
”” $
=
””% &
DateTimeUtil
””' 3
.
””3 4
FechaActual
””4 ?
(
””? @
)
””@ A
;
””A B#
Vinculo_Actor_Negocio
‘‘ %
turno
‘‘& +
=
‘‘, -
new
‘‘. 1#
Vinculo_Actor_Negocio
‘‘2 G
(
‘‘G H
)
‘‘H I
;
‘‘I J
turno
’’ 
.
’’ (
id_actor_negocio_principal
’’ 0
=
’’1 2 
idCentroDeAtencion
’’3 E
;
’’E F
turno
÷÷ 
.
÷÷ (
id_actor_negocio_vinculado
÷÷ 0
=
÷÷1 2

idEmpleado
÷÷3 =
;
÷÷= >
turno
◊◊ 
.
◊◊ 

es_vigente
◊◊  
=
◊◊! "
(
◊◊# $
hasta
◊◊$ )
>
◊◊* +
fechaActual
◊◊, 7
.
◊◊7 8
Date
◊◊8 <
)
◊◊< =
;
◊◊= >
turno
ÿÿ 
.
ÿÿ 
desde
ÿÿ 
=
ÿÿ 
desde
ÿÿ #
;
ÿÿ# $
turno
ŸŸ 
.
ŸŸ 
hasta
ŸŸ 
=
ŸŸ 
hasta
ŸŸ #
;
ŸŸ# $
turno
⁄⁄ 
.
⁄⁄ 
descripcion
⁄⁄ !
=
⁄⁄" #
$str
⁄⁄$ &
;
⁄⁄& '
turno
€€ 
.
€€ 
tipo_vinculo
€€ "
=
€€# $
(
€€% &
int
€€& )
)
€€) *
TipoVinculo
€€* 5
.
€€5 6
Turno
€€6 ;
;
€€; <
return
‹‹ '
_vinculoActor_Repositorio
‹‹ 0
.
‹‹0 1&
CrearVinculoActorNegocio
‹‹1 I
(
‹‹I J
turno
‹‹J O
)
‹‹O P
;
‹‹P Q
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ 
e
ﬁﬁ 
)
ﬁﬁ 
{
ﬁﬁ  !
throw
ﬁﬁ" '
e
ﬁﬁ( )
;
ﬁﬁ) *
}
ﬁﬁ+ ,
}
ﬂﬂ 	
public
‡‡ 
TurnoDeEmpleado
‡‡ 
ObtenerTurno
‡‡ +
(
‡‡+ ,
int
‡‡, /
idTurno
‡‡0 7
)
‡‡7 8
{
·· 	
try
‚‚ 
{
„„ 
return
‰‰ 
new
‰‰ 
TurnoDeEmpleado
‰‰ *
(
‰‰* +
_actorRepositorio
‰‰+ <
.
‰‰< =<
.ObtenerVinculoActorNegocioSegunElTipoDeVinculo
‰‰= k
(
‰‰k l
idTurno
‰‰l s
,
‰‰s t
(
‰‰u v
int
‰‰v y
)
‰‰y z
TipoVinculo‰‰z Ö
.‰‰Ö Ü
Turno‰‰Ü ã
)‰‰ã å
)‰‰å ç
;‰‰ç é
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÊÊ  !
throw
ÊÊ" '
e
ÊÊ( )
;
ÊÊ) *
}
ÊÊ+ ,
}
ÁÁ 	
public
ËË 
List
ËË 
<
ËË 
TurnoDeEmpleado
ËË #
>
ËË# $
ObtenerTurnos
ËË% 2
(
ËË2 3
)
ËË3 4
{
ÈÈ 	
try
ÍÍ 
{
ÎÎ 
return
ÏÏ 
TurnoDeEmpleado
ÏÏ &
.
ÏÏ& '
Convert
ÏÏ' .
(
ÏÏ. /
_actorRepositorio
ÏÏ/ @
.
ÏÏ@ A=
/ObtenerVinculosActorNegocioSegunElTipoDeVinculo
ÏÏA p
(
ÏÏp q
(
ÏÏq r
int
ÏÏr u
)
ÏÏu v
TipoVinculoÏÏv Å
.ÏÏÅ Ç
TurnoÏÏÇ á
)ÏÏá à
.ÏÏà â
ToListÏÏâ è
(ÏÏè ê
)ÏÏê ë
)ÏÏë í
;ÏÏí ì
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
e
ÓÓ 
)
ÓÓ 
{
ÓÓ  !
throw
ÓÓ" '
e
ÓÓ( )
;
ÓÓ) *
}
ÓÓ+ ,
}
ÔÔ 	
public
 
OperationResult
 
ActualizarTurno
 .
(
. /
int
/ 2
id
3 5
,
5 6
int
7 : 
idCentroDeAtencion
; M
,
M N
int
O R

idEmpleado
S ]
,
] ^
DateTime
_ g
desde
h m
,
m n
DateTime
o w
hasta
x }
)
} ~
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
DateTime
ÙÙ 
fechaActual
ÙÙ $
=
ÙÙ% &
DateTimeUtil
ÙÙ' 3
.
ÙÙ3 4
FechaActual
ÙÙ4 ?
(
ÙÙ? @
)
ÙÙ@ A
;
ÙÙA B#
Vinculo_Actor_Negocio
ıı %
turno
ıı& +
=
ıı, -
new
ıı. 1#
Vinculo_Actor_Negocio
ıı2 G
(
ııG H
)
ııH I
;
ııI J
turno
ˆˆ 
.
ˆˆ 
id
ˆˆ 
=
ˆˆ 
id
ˆˆ 
;
ˆˆ 
turno
˜˜ 
.
˜˜ (
id_actor_negocio_principal
˜˜ 0
=
˜˜1 2 
idCentroDeAtencion
˜˜3 E
;
˜˜E F
turno
¯¯ 
.
¯¯ (
id_actor_negocio_vinculado
¯¯ 0
=
¯¯1 2

idEmpleado
¯¯3 =
;
¯¯= >
turno
˘˘ 
.
˘˘ 

es_vigente
˘˘  
=
˘˘! "
(
˘˘# $
hasta
˘˘$ )
>
˘˘* +
fechaActual
˘˘, 7
.
˘˘7 8
Date
˘˘8 <
)
˘˘< =
;
˘˘= >
turno
˙˙ 
.
˙˙ 
desde
˙˙ 
=
˙˙ 
desde
˙˙ #
;
˙˙# $
turno
˚˚ 
.
˚˚ 
hasta
˚˚ 
=
˚˚ 
hasta
˚˚ #
;
˚˚# $
turno
¸¸ 
.
¸¸ 
descripcion
¸¸ !
=
¸¸" #
$str
¸¸$ &
;
¸¸& '
turno
˝˝ 
.
˝˝ 
tipo_vinculo
˝˝ "
=
˝˝# $
(
˝˝% &
int
˝˝& )
)
˝˝) *
TipoVinculo
˝˝* 5
.
˝˝5 6
Turno
˝˝6 ;
;
˝˝; <
return
˛˛ 
_actorRepositorio
˛˛ (
.
˛˛( )+
ActualizarVinculoActorNegocio
˛˛) F
(
˛˛F G
turno
˛˛G L
)
˛˛L M
;
˛˛M N
}
ˇˇ 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÄÄ  !
throw
ÄÄ" '
e
ÄÄ( )
;
ÄÄ) *
}
ÄÄ+ ,
}
ÅÅ 	
public
ÖÖ 
OperationResult
ÖÖ $
CrearCarteraDeClientes
ÖÖ 5
(
ÖÖ5 6
int
ÖÖ6 9 
idCentroDeAtencion
ÖÖ: L
,
ÖÖL M
List
ÖÖN R
<
ÖÖR S
int
ÖÖS V
>
ÖÖV W

idClientes
ÖÖX b
)
ÖÖb c
{
ÜÜ 	
try
áá 
{
àà 
List
ââ 
<
ââ #
Vinculo_Actor_Negocio
ââ *
>
ââ* +
carteraDeClientes
ââ, =
=
ââ> ?
new
ââ@ C
List
ââD H
<
ââH I#
Vinculo_Actor_Negocio
ââI ^
>
ââ^ _
(
ââ_ `
)
ââ` a
;
ââa b
DateTime
ää 
fechaActual
ää $
=
ää% &
DateTimeUtil
ää' 3
.
ää3 4
FechaActual
ää4 ?
(
ää? @
)
ää@ A
;
ääA B
DateTime
ãã 
fechaFin
ãã !
=
ãã" #
fechaActual
ãã$ /
.
ãã/ 0
AddYears
ãã0 8
(
ãã8 9
$num
ãã9 ;
)
ãã; <
;
ãã< =
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå  !
<
åå" #

idClientes
åå$ .
.
åå. /
Count
åå/ 4
;
åå4 5
i
åå6 7
++
åå7 9
)
åå9 :
{
çç #
Vinculo_Actor_Negocio
éé )
vinculo
éé* 1
=
éé2 3
new
éé4 7#
Vinculo_Actor_Negocio
éé8 M
{
èè (
id_actor_negocio_principal
êê 2
=
êê3 4 
idCentroDeAtencion
êê5 G
,
êêG H(
id_actor_negocio_vinculado
ëë 2
=
ëë3 4

idClientes
ëë5 ?
[
ëë? @
i
ëë@ A
]
ëëA B
,
ëëB C
desde
íí 
=
íí 
fechaActual
íí  +
,
íí+ ,
hasta
ìì 
=
ìì 
fechaFin
ìì  (
,
ìì( )
descripcion
îî #
=
îî$ %
$str
îî& (
,
îî( )
tipo_vinculo
ïï $
=
ïï% &
(
ïï' (
int
ïï( +
)
ïï+ ,
TipoVinculo
ïï, 7
.
ïï7 8
CarteraDeCliente
ïï8 H
,
ïïH I

es_vigente
ññ "
=
ññ# $
true
ññ% )
}
óó 
;
óó 
carteraDeClientes
òò %
.
òò% &
Add
òò& )
(
òò) *
vinculo
òò* 1
)
òò1 2
;
òò2 3
}
ôô 
return
öö 
_actorRepositorio
öö (
.
öö( )'
CrearVinculosActorNegocio
öö) B
(
ööB C
carteraDeClientes
ööC T
)
ööT U
;
ööU V
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
úú  !
throw
úú" '
e
úú( )
;
úú) *
}
úú+ ,
}
ùù 	
public
ûû 
OperationResult
ûû )
ActualizarCarteraDeClientes
ûû :
(
ûû: ;
int
ûû; > 
idCentroDeAtencion
ûû? Q
,
ûûQ R
List
ûûS W
<
ûûW X
int
ûûX [
>
ûû[ \

idClientes
ûû] g
)
ûûg h
{
üü 	
try
†† 
{
°° 
List
¢¢ 
<
¢¢ #
Vinculo_Actor_Negocio
¢¢ *
>
¢¢* +
carteraDeClientes
¢¢, =
=
¢¢> ?
new
¢¢@ C
List
¢¢D H
<
¢¢H I#
Vinculo_Actor_Negocio
¢¢I ^
>
¢¢^ _
(
¢¢_ `
)
¢¢` a
;
¢¢a b
DateTime
££ 
fechaActual
££ $
=
££% &
DateTimeUtil
££' 3
.
££3 4
FechaActual
££4 ?
(
££? @
)
££@ A
;
££A B
DateTime
§§ 
fechaFin
§§ !
=
§§" #
fechaActual
§§$ /
.
§§/ 0
AddYears
§§0 8
(
§§8 9
$num
§§9 ;
)
§§; <
;
§§< =
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
••  !
<
••" #

idClientes
••$ .
.
••. /
Count
••/ 4
;
••4 5
i
••6 7
++
••7 9
)
••9 :
{
¶¶ #
Vinculo_Actor_Negocio
ßß )
vinculo
ßß* 1
=
ßß2 3
new
ßß4 7#
Vinculo_Actor_Negocio
ßß8 M
{
®® (
id_actor_negocio_principal
©© 2
=
©©3 4 
idCentroDeAtencion
©©5 G
,
©©G H(
id_actor_negocio_vinculado
™™ 2
=
™™3 4

idClientes
™™5 ?
[
™™? @
i
™™@ A
]
™™A B
,
™™B C
desde
´´ 
=
´´ 
fechaActual
´´  +
,
´´+ ,
hasta
¨¨ 
=
¨¨ 
fechaFin
¨¨  (
,
¨¨( )
descripcion
≠≠ #
=
≠≠$ %
$str
≠≠& (
,
≠≠( )
tipo_vinculo
ÆÆ $
=
ÆÆ% &
(
ÆÆ' (
int
ÆÆ( +
)
ÆÆ+ ,
TipoVinculo
ÆÆ, 7
.
ÆÆ7 8
CarteraDeCliente
ÆÆ8 H
,
ÆÆH I

es_vigente
ØØ "
=
ØØ# $
true
ØØ% )
}
∞∞ 
;
∞∞ 
carteraDeClientes
±± %
.
±±% &
Add
±±& )
(
±±) *
vinculo
±±* 1
)
±±1 2
;
±±2 3
}
≤≤ 
return
≥≥ 
_actorRepositorio
≥≥ (
.
≥≥( ),
ActualizarVinculosActorNegocio
≥≥) G
(
≥≥G H 
idCentroDeAtencion
≥≥H Z
,
≥≥Z [
carteraDeClientes
≥≥\ m
,
≥≥m n
(
≥≥o p
int
≥≥p s
)
≥≥s t
TipoVinculo
≥≥t 
.≥≥ Ä 
CarteraDeCliente≥≥Ä ê
)≥≥ê ë
;≥≥ë í
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
µµ  !
throw
µµ" '
e
µµ( )
;
µµ) *
}
µµ+ ,
}
∂∂ 	
public
∑∑ 
List
∑∑ 
<
∑∑ 
CarteraDeClientes
∑∑ %
>
∑∑% &'
ObtenerCarterasDeClientes
∑∑' @
(
∑∑@ A
)
∑∑A B
{
∏∏ 	
try
ππ 
{
∫∫ 
return
ªª 
CarteraDeClientes
ªª (
.
ªª( )
Convert
ªª) 0
(
ªª0 1
_actorRepositorio
ªª1 B
.
ªªB C+
ObtenerVinculosActorDeNegocio
ªªC `
(
ªª` a
(
ªªa b
int
ªªb e
)
ªªe f
TipoVinculo
ªªf q
.
ªªq r
CarteraDeClienteªªr Ç
)ªªÇ É
.ªªÉ Ñ
ToListªªÑ ä
(ªªä ã
)ªªã å
)ªªå ç
;ªªç é
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
e
ΩΩ 
)
ΩΩ 
{
ææ 
throw
øø 
e
øø 
;
øø 
}
¿¿ 
}
¡¡ 	
public
¬¬ 
CarteraDeClientes
¬¬  ;
-ObtenerCarteraDeClientesSegunCentroDeAtencion
¬¬! N
(
¬¬N O
int
¬¬O R
idCentroAtencion
¬¬S c
)
¬¬c d
{
√√ 	
try
ƒƒ 
{
≈≈ 
return
∆∆ 
new
∆∆ 
CarteraDeClientes
∆∆ ,
(
∆∆, -
_actorRepositorio
∆∆- >
.
∆∆> ?+
ObtenerVinculosActorDeNegocio
∆∆? \
(
∆∆\ ]
idCentroAtencion
∆∆] m
,
∆∆m n
(
∆∆o p
int
∆∆p s
)
∆∆s t
TipoVinculo
∆∆t 
.∆∆ Ä 
CarteraDeCliente∆∆Ä ê
)∆∆ê ë
.∆∆ë í
ToList∆∆í ò
(∆∆ò ô
)∆∆ô ö
)∆∆ö õ
;∆∆õ ú
}
«« 
catch
»» 
(
»» 
	Exception
»» 
e
»» 
)
»» 
{
…… 
throw
   
e
   
;
   
}
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
List
ŒŒ 
<
ŒŒ 
Cliente
ŒŒ 
>
ŒŒ D
6ObtenerClientesSegunElCentroDeAtencionYElTipoDeVinculo
ŒŒ S
(
ŒŒS T
int
ŒŒT W 
idCentroDeAtencion
ŒŒX j
,
ŒŒj k
int
ŒŒl o
tipoDeVinculo
ŒŒp }
)
ŒŒ} ~
{
œœ 	
try
–– 
{
—— 
return
““ 
Cliente
““ 
.
““ 
Convert
““ &
(
““& '
_actorRepositorio
““' 8
.
““8 9`
QObtenerActoresDeNegocioSegunActorNegocioPrincipalYElTipoDeVinculoIncluyendoCuotas““9 ä
(““ä ã"
idCentroDeAtencion““ã ù
,““ù û
tipoDeVinculo““ü ¨
)““¨ ≠
.““≠ Æ
ToList““Æ ¥
(““¥ µ
)““µ ∂
)““∂ ∑
;““∑ ∏
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
e
‘‘ 
)
‘‘ 
{
’’ 
throw
÷÷ 
e
÷÷ 
;
÷÷ 
}
◊◊ 
}
ÿÿ 	
public
ŸŸ 
List
ŸŸ 
<
ŸŸ 
int
ŸŸ 
>
ŸŸ >
0ObtenerIdsCentrosDeAtencionDeLaCarteraDeClientes
ŸŸ I
(
ŸŸI J
)
ŸŸJ K
{
⁄⁄ 	
try
€€ 
{
‹‹ 
return
›› 
_actorRepositorio
›› (
.
››( )F
8ObtenerIdsActoresDeNegocioPrincipalDeVinculoActorNegocio
››) a
(
››a b
(
››b c
int
››c f
)
››f g
TipoVinculo
››g r
.
››r s
CarteraDeCliente››s É
)››É Ñ
.››Ñ Ö
ToList››Ö ã
(››ã å
)››å ç
;››ç é
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
e
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
throw
·· 
e
·· 
;
·· 
}
‚‚ 
}
„„ 	
public
‰‰ 
List
‰‰ 
<
‰‰ $
SelectorActorComercial
‰‰ *
>
‰‰* +>
0ObtenerActoresComercialesVigentesPorRolYBusqueda
‰‰, \
(
‰‰\ ]
int
‰‰] `
idRol
‰‰a f
,
‰‰f g
string
‰‰h n
cadenaBusqueda
‰‰o }
)
‰‰} ~
{
ÂÂ 	
try
ÊÊ 
{
ÁÁ 
List
ËË 
<
ËË $
SelectorActorComercial
ËË +
>
ËË+ ,
	resultado
ËË- 6
=
ËË7 8
_actorRepositorio
ËË9 J
.
ËËJ K>
0ObtenerActoresComercialesVigentesPorRolYBusqueda
ËËK {
(
ËË{ |
idRolËË| Å
,ËËÅ Ç
cadenaBusquedaËËÉ ë
)ËËë í
.ËËí ì
ToListËËì ô
(ËËô ö
)ËËö õ
;ËËõ ú
return
ÈÈ 
	resultado
ÈÈ  
;
ÈÈ  !
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
e
ÎÎ 
)
ÎÎ 
{
ÏÏ 
throw
ÌÌ 
new
ÌÌ 
LogicaException
ÌÌ )
(
ÌÌ) *
$str
ÌÌ* P
,
ÌÌP Q
e
ÌÌR S
)
ÌÌS T
;
ÌÌT U
}
ÓÓ 
}
ÔÔ 	
public
 
List
 
<
 
ItemGenerico
  
>
  !:
,ObtenerActoresComercialesPorCentroDeAtencion
" N
(
N O
int
O R 
idCentroDeAtencion
S e
)
e f
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
List
ÙÙ 
<
ÙÙ 
ItemGenerico
ÙÙ !
>
ÙÙ! "
	resultado
ÙÙ# ,
=
ÙÙ- .
_actorRepositorio
ÙÙ/ @
.
ÙÙ@ A:
,ObtenerActoresComercialesPorCentroDeAtencion
ÙÙA m
(
ÙÙm n!
idCentroDeAtencionÙÙn Ä
)ÙÙÄ Å
.ÙÙÅ Ç
ToListÙÙÇ à
(ÙÙà â
)ÙÙâ ä
;ÙÙä ã
return
ıı 
	resultado
ıı  
;
ıı  !
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
new
˘˘ 
LogicaException
˘˘ )
(
˘˘) *
$str
˘˘* P
,
˘˘P Q
e
˘˘R S
)
˘˘S T
;
˘˘T U
}
˙˙ 
}
˚˚ 	
public
¸¸ 
ItemGenerico
¸¸ 2
$DeterminarTipoDeDocumentoDeIdentidad
¸¸ @
(
¸¸@ A
string
¸¸A G
	documento
¸¸H Q
)
¸¸Q R
{
˝˝ 	
ItemGenerico
˛˛ $
tipoDocumentoIdentidad
˛˛ /
=
˛˛0 1
null
˛˛2 6
;
˛˛6 7
if
ˇˇ 
(
ˇˇ 
	documento
ˇˇ 
.
ˇˇ 
Length
ˇˇ  
==
ˇˇ! #
$num
ˇˇ$ %
)
ˇˇ% &
{
ÄÄ $
tipoDocumentoIdentidad
ÅÅ &
=
ÅÅ' (
new
ÅÅ) ,
ItemGenerico
ÅÅ- 9
{
ÅÅ: ;
Id
ÅÅ< >
=
ÅÅ? @
ActorSettings
ÅÅA N
.
ÅÅN O
Default
ÅÅO V
.
ÅÅV W)
IdTipoDocumentoIdentidadDni
ÅÅW r
,
ÅÅr s
Nombre
ÅÅt z
=
ÅÅ{ |
$strÅÅ} Ç
,ÅÅÇ É
ValorÅÅÑ â
=ÅÅä ã
$strÅÅå ë
}ÅÅí ì
;ÅÅì î
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
	documento
ÉÉ 
.
ÉÉ 
Length
ÉÉ %
==
ÉÉ& (
$num
ÉÉ) +
)
ÉÉ+ ,
{
ÑÑ $
tipoDocumentoIdentidad
ÖÖ &
=
ÖÖ' (
new
ÖÖ) ,
ItemGenerico
ÖÖ- 9
{
ÖÖ: ;
Id
ÖÖ< >
=
ÖÖ? @
ActorSettings
ÖÖA N
.
ÖÖN O
Default
ÖÖO V
.
ÖÖV W)
IdTipoDocumentoIdentidadRuc
ÖÖW r
,
ÖÖr s
Nombre
ÖÖt z
=
ÖÖ{ |
$strÖÖ} Ç
,ÖÖÇ É
ValorÖÖÑ â
=ÖÖä ã
$strÖÖå ë
}ÖÖí ì
;ÖÖì î
}
ÜÜ 
return
áá $
tipoDocumentoIdentidad
áá )
;
áá) *
}
àà 	
public
ââ 
ItemGenerico
ââ /
!ObtenerTipoDeDocumentoDeIdentidad
ââ =
(
ââ= >
int
ââ> A
idTipoDocumento
ââB Q
)
ââQ R
{
ää 	
var
ãã 
tipoDocumento
ãã 
=
ãã !
_maestroRepositorio
ãã  3
.
ãã3 4
ObtenerDetalle
ãã4 B
(
ããB C
idTipoDocumento
ããC R
)
ããR S
;
ããS T
ItemGenerico
åå $
tipoDocumentoIdentidad
åå /
=
åå0 1
new
åå2 5
ItemGenerico
åå6 B
{
ååC D
Id
ååE G
=
ååH I
tipoDocumento
ååJ W
.
ååW X
id
ååX Z
,
ååZ [
Nombre
åå\ b
=
ååc d
tipoDocumento
ååe r
.
åår s
valor
åås x
,
ååx y
Valor
ååz 
=ååÄ Å
tipoDocumentoååÇ è
.ååè ê
valorååê ï
}ååñ ó
;ååó ò
return
çç $
tipoDocumentoIdentidad
çç )
;
çç) *
}
éé 	
public
èè 
int
èè :
,ObtenerA√±osDeVigenciaDeActorComercialPorRol
èè >
(
èè> ?
int
èè? B
idRol
èèC H
)
èèH I
{
êê 	
if
ëë 
(
ëë 
idRol
ëë 
==
ëë 
ActorSettings
ëë &
.
ëë& '
Default
ëë' .
.
ëë. /
IdRolCliente
ëë/ ;
)
ëë; <
{
íí 
return
ìì 
ActorSettings
ìì $
.
ìì$ %
Default
ìì% ,
.
ìì, ->
0vigenciaEnAnyosPorDefectoDeActorDeNegocioCliente
ìì- ]
;
ìì] ^
}
îî 
else
ïï 
{
ññ 
return
óó 
ActorSettings
óó $
.
óó$ %
Default
óó% ,
.
óó, -@
2vigenciaEnAnyosPorDefectoDeActorDeNegocioProveedor
óó- _
;
óó_ `
}
òò 
}
ôô 	
public
†† 
OperationResult
†† #
GuardarActorComercial
†† 4
(
††4 5
int
††5 8
idRol
††9 >
,
††> ?$
RegistroActorComercial
††@ V
actorComercial
††W e
)
††e f
{
°° 	
try
¢¢ 
{
££ 
OperationResult
§§ 
result
§§  &
=
§§' (
new
§§) ,
OperationResult
§§- <
(
§§< =
)
§§= >
;
§§> ?
DateTime
•• 
fechaActual
•• $
=
••% &
DateTimeUtil
••' 3
.
••3 4
FechaActual
••4 ?
(
••? @
)
••@ A
;
••A B
actorComercial
ßß 
.
ßß $
TipoDocumentoIdentidad
ßß 5
=
ßß6 7/
!ObtenerTipoDeDocumentoDeIdentidad
ßß8 Y
(
ßßY Z
actorComercial
ßßZ h
.
ßßh i$
TipoDocumentoIdentidad
ßßi 
.ßß Ä
IdßßÄ Ç
)ßßÇ É
;ßßÉ Ñ,
_validacionActorNegocio_Logica
®® .
.
®®. /'
ValidarDocumentoIdentidad
®®/ H
(
®®H I
actorComercial
®®I W
.
®®W X&
NumeroDocumentoIdentidad
®®X p
,
®®p q
actorComercial®®r Ä
.®®Ä Å&
TipoDocumentoIdentidad®®Å ó
)®®ó ò
;®®ò ô,
_validacionActorNegocio_Logica
©© .
.
©©. />
0ValidarExisteActorConElMismoDocumentoYDistintoId
©©/ _
(
©©_ `
actorComercial
©©` n
.
©©n o
IdActor
©©o v
,
©©v w
actorComercial©©x Ü
.©©Ü á(
NumeroDocumentoIdentidad©©á ü
)©©ü †
;©©† °,
_validacionActorNegocio_Logica
™™ .
.
™™. /C
5ValidarExisteActorComercialConElMismoDocumentoVigente
™™/ d
(
™™d e
idRol
™™e j
,
™™j k
actorComercial
™™l z
.
™™z {'
NumeroDocumentoIdentidad™™{ ì
,™™ì î
actorComercial™™ï £
.™™£ §
Id™™§ ¶
)™™¶ ß
;™™ß ®
if
´´ 
(
´´ 
actorComercial
´´ "
.
´´" #
Id
´´# %
!=
´´& (
$num
´´) *
)
´´* +,
_validacionActorNegocio_Logica
´´, J
.
´´J K1
#ValidarOperaciondesDeActorComercial
´´K n
(
´´n o
idRol
´´o t
,
´´t u
actorComercial´´v Ñ
.´´Ñ Ö
Id´´Ö á
,´´á à
actorComercial´´â ó
.´´ó ò(
NumeroDocumentoIdentidad´´ò ∞
)´´∞ ±
;´´± ≤
actorComercial
≠≠ 
.
≠≠ 
Codigo
≠≠ %
=
≠≠& '
actorComercial
≠≠( 6
.
≠≠6 7
Codigo
≠≠7 =
??
≠≠> @"
ObtenerProximoCodigo
≠≠A U
(
≠≠U V
idRol
≠≠V [
)
≠≠[ \
;
≠≠\ ]
DateTime
ÆÆ 
fechaInicial
ÆÆ %
=
ÆÆ& '
fechaActual
ÆÆ( 3
;
ÆÆ3 4
DateTime
ØØ 

fechaFinal
ØØ #
=
ØØ$ %
fechaInicial
ØØ& 2
.
ØØ2 3
AddYears
ØØ3 ;
(
ØØ; <:
,ObtenerA√±osDeVigenciaDeActorComercialPorRol
ØØ< g
(
ØØg h
idRol
ØØh m
)
ØØm n
)
ØØn o
;
ØØo p
actorComercial
∞∞ 
.
∞∞ 
Correo
∞∞ %
=
∞∞& '
actorComercial
∞∞( 6
.
∞∞6 7
Correo
∞∞7 =
??
∞∞> @
$str
∞∞A C
;
∞∞C D
actorComercial
±± 
.
±± 
Telefono
±± '
=
±±( )
actorComercial
±±* 8
.
±±8 9
Telefono
±±9 A
??
±±B D
$str
±±E G
;
±±G H
actorComercial
≤≤ 
.
≤≤ 
NombreCorto
≤≤ *
=
≤≤+ ,
actorComercial
≤≤- ;
.
≤≤; <
NombreCorto
≤≤< G
??
≤≤H J
$str
≤≤K M
;
≤≤M N
actorComercial
≥≥ 
.
≥≥ 
NombreComercial
≥≥ .
=
≥≥/ 0
actorComercial
≥≥1 ?
.
≥≥? @
NombreComercial
≥≥@ O
??
≥≥P R
$str
≥≥S U
;
≥≥U V
actorComercial
¥¥ 
.
¥¥ 
NombreComercial
¥¥ .
=
¥¥/ 0
idRol
¥¥1 6
==
¥¥7 9
ActorSettings
¥¥: G
.
¥¥G H
Default
¥¥H O
.
¥¥O P
IdRolEmpleado
¥¥P ]
?
¥¥^ _
actorComercial
¥¥` n
.
¥¥n o
Nombres
¥¥o v
+
¥¥w x
$str
¥¥y |
+
¥¥} ~
actorComercial¥¥ ç
.¥¥ç é
ApellidoPaterno¥¥é ù
+¥¥û ü
$str¥¥† £
+¥¥§ •
actorComercial¥¥¶ ¥
.¥¥¥ µ
ApellidoMaterno¥¥µ ƒ
:¥¥≈ ∆
actorComercial¥¥« ’
.¥¥’ ÷
NombreComercial¥¥÷ Â
;¥¥Â Ê
if
µµ 
(
µµ 
idRol
µµ 
==
µµ 
ActorSettings
µµ (
.
µµ( )
Default
µµ) 0
.
µµ0 1
IdRolEmpleado
µµ1 >
)
µµ> ?
{
∂∂ 
actorComercial
∑∑ "
.
∑∑" #
NombreCorto
∑∑# .
=
∑∑/ 0
actorComercial
∑∑1 ?
.
∑∑? @
Nombres
∑∑@ G
+
∑∑H I
$str
∑∑J M
+
∑∑N O
actorComercial
∑∑P ^
.
∑∑^ _
ApellidoPaterno
∑∑_ n
.
∑∑n o
	Substring
∑∑o x
(
∑∑x y
$num
∑∑y z
,
∑∑z {
$num
∑∑| }
)
∑∑} ~
+∑∑ Ä
actorComercial∑∑Å è
.∑∑è ê
ApellidoMaterno∑∑ê ü
.∑∑ü †
	Substring∑∑† ©
(∑∑© ™
$num∑∑™ ´
,∑∑´ ¨
$num∑∑≠ Æ
)∑∑Æ Ø
;∑∑Ø ∞
}
∏∏ 
actorComercial
ππ 
.
ππ 
Nacionalidad
ππ +
=
ππ, -
actorComercial
ππ. <
.
ππ< =
Nacionalidad
ππ= I
??
ππJ L
new
ππM P
ItemGenerico
ππQ ]
(
ππ] ^
MaestroSettings
ππ^ m
.
ππm n
Default
ππn u
.
ππu v)
IdDetalleMaestroNacionPeruππv ê
,ππê ë
MaestroSettingsππí °
.ππ° ¢
Defaultππ¢ ©
.ππ© ™.
NombreDetalleMaestroNacionPeruππ™ »
)ππ» …
;ππ…  
actorComercial
∫∫ 
.
∫∫ 
FechaNacimiento
∫∫ .
=
∫∫/ 0
actorComercial
∫∫1 ?
.
∫∫? @
FechaNacimiento
∫∫@ O
==
∫∫P R
new
∫∫S V
DateTime
∫∫W _
(
∫∫_ `
)
∫∫` a
?
∫∫b c
fechaActual
∫∫d o
:
∫∫p q
actorComercial∫∫r Ä
.∫∫Ä Å
FechaNacimiento∫∫Å ê
;∫∫ê ë
actorComercial
ªª 
.
ªª 
TipoPersona
ªª *
=
ªª+ ,
actorComercial
ªª- ;
.
ªª; <
TipoPersona
ªª< G
??
ªªH J
(
ªªK L
actorComercial
ªªL Z
.
ªªZ [$
TipoDocumentoIdentidad
ªª[ q
.
ªªq r
Id
ªªr t
==
ªªu w
ActorSettingsªªx Ö
.ªªÖ Ü
DefaultªªÜ ç
.ªªç é+
IdTipoDocumentoIdentidadRucªªé ©
?ªª™ ´
newªª¨ Ø
ItemGenericoªª∞ º
(ªªº Ω
actorComercialªªΩ À
.ªªÀ Ã(
NumeroDocumentoIdentidadªªÃ ‰
.ªª‰ Â

StartsWithªªÂ Ô
(ªªÔ 
$strªª Ù
)ªªÙ ı
?ªªˆ ˜
ActorSettingsªª¯ Ö
.ªªÖ Ü
DefaultªªÜ ç
.ªªç é)
IdTipoActorPersonaNaturalªªé ß
:ªª® ©
ActorSettingsªª™ ∑
.ªª∑ ∏
Defaultªª∏ ø
.ªªø ¿*
IdTipoActorPersonaJuridicaªª¿ ⁄
)ªª⁄ €
:ªª‹ ›
newªªﬁ ·
ItemGenericoªª‚ Ó
(ªªÓ Ô
ActorSettingsªªÔ ¸
.ªª¸ ˝
Defaultªª˝ Ñ
.ªªÑ Ö)
IdTipoActorPersonaNaturalªªÖ û
)ªªû ü
)ªªü †
;ªª† °
actorComercial
ΩΩ 
.
ΩΩ  
NombreORazonSocial
ΩΩ 1
=
ΩΩ2 3
actorComercial
ΩΩ4 B
.
ΩΩB C
TipoPersona
ΩΩC N
.
ΩΩN O
Id
ΩΩO Q
==
ΩΩR T
ActorSettings
ΩΩU b
.
ΩΩb c
Default
ΩΩc j
.
ΩΩj k(
IdTipoActorPersonaNaturalΩΩk Ñ
?ΩΩÖ Ü
actorComercialΩΩá ï
.ΩΩï ñ
ApellidoPaternoΩΩñ •
+ΩΩ¶ ß
$strΩΩ® ´
+ΩΩ¨ ≠
actorComercialΩΩÆ º
.ΩΩº Ω
ApellidoMaternoΩΩΩ Ã
+ΩΩÕ Œ
$strΩΩœ “
+ΩΩ” ‘
actorComercialΩΩ’ „
.ΩΩ„ ‰
NombresΩΩ‰ Î
:ΩΩÏ Ì
actorComercialΩΩÓ ¸
.ΩΩ¸ ˝"
NombreORazonSocialΩΩ˝ è
;ΩΩè ê
actorComercial
ææ 
.
ææ 

ClaseActor
ææ )
=
ææ* +
actorComercial
ææ, :
.
ææ: ;

ClaseActor
ææ; E
??
ææF H
(
ææI J
actorComercial
ææJ X
.
ææX Y
TipoPersona
ææY d
.
ææd e
Id
ææe g
==
ææh j
ActorSettings
ææk x
.
ææx y
Defaultææy Ä
.ææÄ Å)
IdTipoActorPersonaNaturalææÅ ö
?ææõ ú
newææù †
ItemGenericoææ° ≠
(ææ≠ Æ
ActorSettingsææÆ ª
.ææª º
Defaultææº √
.ææ√ ƒ4
$IdClaseActorPersonaNaturalPorDefectoææƒ Ë
,ææË È
ActorSettingsææÍ ˜
.ææ˜ ¯
Defaultææ¯ ˇ
.ææˇ Ä8
(NombreClaseActorPersonaNaturalPorDefectoææÄ ®
)ææ® ©
:ææ™ ´
newææ¨ Ø
ItemGenericoææ∞ º
(ææº Ω
ActorSettingsææΩ  
.ææ  À
DefaultææÀ “
.ææ“ ”5
%IdClaseActorPersonaJuridicaPorDefectoææ” ¯
)ææ¯ ˘
)ææ˘ ˙
;ææ˙ ˚
actorComercial
øø 
.
øø 
EstadoLegal
øø *
=
øø+ ,
actorComercial
øø- ;
.
øø; <
EstadoLegal
øø< G
??
øøH J
(
øøK L
actorComercial
øøL Z
.
øøZ [
TipoPersona
øø[ f
.
øøf g
Id
øøg i
==
øøj l
ActorSettings
øøm z
.
øøz {
Defaultøø{ Ç
.øøÇ É)
IdTipoActorPersonaNaturaløøÉ ú
?øøù û
newøøü ¢
ItemGenericoøø£ Ø
(øøØ ∞
ActorSettingsøø∞ Ω
.øøΩ æ
Defaultøøæ ≈
.øø≈ ∆:
*IdEstadoLegalActorPersonaNaturalPorDefectoøø∆ 
)øø Ò
:øøÚ Û
newøøÙ ˜
ItemGenericoøø¯ Ñ
(øøÑ Ö
ActorSettingsøøÖ í
.øøí ì
Defaultøøì ö
.øøö õ;
+IdEstadoLegalActorPersonaJuridicaPorDefectoøøõ ∆
)øø∆ «
)øø« »
;øø» …
Actor
¡¡ 
actor
¡¡ 
=
¡¡ 
new
¡¡ !
Actor
¡¡" '
(
¡¡' (
actorComercial
¡¡( 6
.
¡¡6 7$
TipoDocumentoIdentidad
¡¡7 M
.
¡¡M N
Id
¡¡N P
,
¡¡P Q
actorComercial
¡¡R `
.
¡¡` a
FechaNacimiento
¡¡a p
,
¡¡p q
actorComercial¡¡r Ä
.¡¡Ä Å(
NumeroDocumentoIdentidad¡¡Å ô
,¡¡ô ö
actorComercial¡¡õ ©
.¡¡© ™"
NombreORazonSocial¡¡™ º
,¡¡º Ω
actorComercial¡¡æ Ã
.¡¡Ã Õ
NombreComercial¡¡Õ ‹
,¡¡‹ ›
actorComercial¡¡ﬁ Ï
.¡¡Ï Ì
Telefono¡¡Ì ı
,¡¡ı ˆ
actorComercial¡¡˜ Ö
.¡¡Ö Ü
TipoPersona¡¡Ü ë
.¡¡ë í
Id¡¡í î
,¡¡î ï
ActorSettings¡¡ñ £
.¡¡£ §
Default¡¡§ ´
.¡¡´ ¨%
IdFotoActorPorDefecto¡¡¨ ¡
,¡¡¡ ¬
actorComercial¡¡√ —
.¡¡— “

ClaseActor¡¡“ ‹
.¡¡‹ ›
Id¡¡› ﬂ
,¡¡ﬂ ‡
actorComercial¡¡· Ô
.¡¡Ô 
EstadoLegal¡¡ ˚
.¡¡˚ ¸
Id¡¡¸ ˛
,¡¡˛ ˇ
actorComercial¡¡Ä é
.¡¡é è
Correo¡¡è ï
,¡¡ï ñ
actorComercial¡¡ó •
.¡¡• ¶
NombreCorto¡¡¶ ±
,¡¡± ≤
$str¡¡≥ µ
)¡¡µ ∂
{
¬¬ '
id_detalle_multiproposito
√√ -
=
√√. /
actorComercial
√√0 >
.
√√> ?
Nacionalidad
√√? K
.
√√K L
Id
√√L N
}
ƒƒ 
;
ƒƒ 
actor
≈≈ 
.
≈≈ 
	Direccion
≈≈ 
.
≈≈  
Add
≈≈  #
(
≈≈# $
actorComercial
≈≈$ 2
.
≈≈2 3
DomicilioFiscal
≈≈3 B
!=
≈≈C E
null
≈≈F J
?
≈≈K L
actorComercial
≈≈M [
.
≈≈[ \
DomicilioFiscal
≈≈\ k
.
≈≈k l
Convert
≈≈l s
(
≈≈s t
)
≈≈t u
:
≈≈v w&
DireccionNoEspecificada≈≈x è
(≈≈è ê
)≈≈ê ë
)≈≈ë í
;≈≈í ì
Actor_negocio
«« 
actor_negocio
«« +
=
««, -
new
««. 1
Actor_negocio
««2 ?
(
««? @
idRol
««@ E
,
««E F
fechaInicial
««G S
,
««S T

fechaFinal
««U _
,
««_ `
actorComercial
««a o
.
««o p
Codigo
««p v
,
««v w
true
««x |
,
««| }
false««~ É
,««É Ñ
$str««Ö á
)««á à
{««â ä
Actor««ã ê
=««ë í
actor««ì ò
}««ô ö
;««ö õ
if
…… 
(
…… 
idRol
…… 
==
…… 
ActorSettings
…… *
.
……* +
Default
……+ 2
.
……2 3
IdRolCliente
……3 ?
)
……? @
{
   
if
ÀÀ 
(
ÀÀ 
ActorSettings
ÀÀ %
.
ÀÀ% &
Default
ÀÀ& -
.
ÀÀ- .4
&PermitirComprobantePorDefectoEnCliente
ÀÀ. T
)
ÀÀT U
{
ÃÃ 
actorComercial
ÕÕ &
.
ÕÕ& ''
ComprobantePredeterminado
ÕÕ' @
=
ÕÕA B
actorComercial
ÕÕC Q
.
ÕÕQ R'
ComprobantePredeterminado
ÕÕR k
??
ÕÕl n
new
ÕÕo r
ItemGenerico
ÕÕs 
(ÕÕ Ä
MaestroSettingsÕÕÄ è
.ÕÕè ê
DefaultÕÕê ó
.ÕÕó ò;
+IdDetalleMaestroComprobanteNotaVentaInternaÕÕò √
)ÕÕ√ ƒ
;ÕÕƒ ≈
actor_negocio
ŒŒ %
.
ŒŒ% &%
Parametro_actor_negocio
ŒŒ& =
.
ŒŒ= >
Add
ŒŒ> A
(
ŒŒA B
new
ŒŒB E%
Parametro_actor_negocio
ŒŒF ]
(
ŒŒ] ^
MaestroSettings
ŒŒ^ m
.
ŒŒm n
Default
ŒŒn u
.
ŒŒu vJ
;IdDetalleMaestroParametroComprobanteDeClientePredeterminadoŒŒv ±
,ŒŒ± ≤
actorComercialŒŒ≥ ¡
.ŒŒ¡ ¬)
ComprobantePredeterminadoŒŒ¬ €
.ŒŒ€ ‹
IdŒŒ‹ ﬁ
.ŒŒﬁ ﬂ
ToStringŒŒﬂ Á
(ŒŒÁ Ë
)ŒŒË È
)ŒŒÈ Í
)ŒŒÍ Î
;ŒŒÎ Ï
}
œœ 
}
–– 
if
““ 
(
““ 
idRol
““ 
==
““ 
ActorSettings
““ *
.
““* +
Default
““+ 2
.
““2 3
IdRolEmpleado
““3 @
)
““@ A
{
”” 
if
‘‘ 
(
‘‘ 
actorComercial
‘‘ &
.
‘‘& '
Roles
‘‘' ,
!=
‘‘- /
null
‘‘0 4
&&
‘‘5 7
actorComercial
‘‘8 F
.
‘‘F G
Roles
‘‘G L
.
‘‘L M
Count
‘‘M R
>
‘‘S T
$num
‘‘U V
)
‘‘V W
{
’’ 
foreach
÷÷ 
(
÷÷  !
var
÷÷! $
rol
÷÷% (
in
÷÷) +
actorComercial
÷÷, :
.
÷÷: ;
Roles
÷÷; @
)
÷÷@ A
{
◊◊ 
actor_negocio
ÿÿ )
.
ÿÿ) *
Actor
ÿÿ* /
.
ÿÿ/ 0
Actor_negocio
ÿÿ0 =
.
ÿÿ= >
Add
ÿÿ> A
(
ÿÿA B
new
ÿÿB E
Actor_negocio
ÿÿF S
(
ÿÿS T
rol
ÿÿT W
.
ÿÿW X
Id
ÿÿX Z
,
ÿÿZ [
fechaInicial
ÿÿ\ h
,
ÿÿh i

fechaFinal
ÿÿj t
,
ÿÿt u
actorComercialÿÿv Ñ
.ÿÿÑ Ö
CodigoÿÿÖ ã
,ÿÿã å
trueÿÿç ë
,ÿÿë í
falseÿÿì ò
,ÿÿò ô
$strÿÿö ú
)ÿÿú ù
)ÿÿù û
;ÿÿû ü
}
ŸŸ 
}
⁄⁄ 
}
€€ 
if
›› 
(
›› 
actorComercial
›› "
.
››" #
Id
››# %
>
››& '
$num
››( )
)
››) *
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
actorComercial
ﬂﬂ &
.
ﬂﬂ& '
IdActor
ﬂﬂ' .
>
ﬂﬂ/ 0
$num
ﬂﬂ1 2
)
ﬂﬂ2 3
{
‡‡ 
actor_negocio
·· %
.
··% &
id
··& (
=
··) *
actorComercial
··+ 9
.
··9 :
Id
··: <
;
··< =
actor_negocio
‚‚ %
.
‚‚% &
id_actor
‚‚& .
=
‚‚/ 0
actor_negocio
‚‚1 >
.
‚‚> ?
Actor
‚‚? D
.
‚‚D E
id
‚‚E G
=
‚‚H I
actorComercial
‚‚J X
.
‚‚X Y
IdActor
‚‚Y `
;
‚‚` a
actor_negocio
„„ %
.
„„% &
Actor
„„& +
.
„„+ ,
	Direccion
„„, 5
.
„„5 6
ToList
„„6 <
(
„„< =
)
„„= >
.
„„> ?
ForEach
„„? F
(
„„F G
d
„„G H
=>
„„I K
d
„„L M
.
„„M N
id_actor
„„N V
=
„„W X
actorComercial
„„Y g
.
„„g h
IdActor
„„h o
)
„„o p
;
„„p q
actor_negocio
‰‰ %
.
‰‰% &
Actor
‰‰& +
.
‰‰+ ,
Actor_negocio
‰‰, 9
.
‰‰9 :
ToList
‰‰: @
(
‰‰@ A
)
‰‰A B
.
‰‰B C
ForEach
‰‰C J
(
‰‰J K
d
‰‰K L
=>
‰‰M O
d
‰‰P Q
.
‰‰Q R
id_actor
‰‰R Z
=
‰‰[ \
actorComercial
‰‰] k
.
‰‰k l
IdActor
‰‰l s
)
‰‰s t
;
‰‰t u
result
ÂÂ 
=
ÂÂ   
_actor_Repositorio
ÂÂ! 3
.
ÂÂ3 4$
ActualizarActorNegocio
ÂÂ4 J
(
ÂÂJ K
actor_negocio
ÂÂK X
)
ÂÂX Y
;
ÂÂY Z
}
ÊÊ 
else
ÁÁ 
{
ËË 
actor_negocio
ÈÈ %
.
ÈÈ% &
id
ÈÈ& (
=
ÈÈ) *
actorComercial
ÈÈ+ 9
.
ÈÈ9 :
Id
ÈÈ: <
;
ÈÈ< =
actor_negocio
ÍÍ %
.
ÍÍ% &
Actor
ÍÍ& +
.
ÍÍ+ ,
	Direccion
ÍÍ, 5
.
ÍÍ5 6
ToList
ÍÍ6 <
(
ÍÍ< =
)
ÍÍ= >
.
ÍÍ> ?
ForEach
ÍÍ? F
(
ÍÍF G
d
ÍÍG H
=>
ÍÍI K
d
ÍÍL M
.
ÍÍM N
id_actor
ÍÍN V
=
ÍÍW X
actorComercial
ÍÍY g
.
ÍÍg h
IdActor
ÍÍh o
)
ÍÍo p
;
ÍÍp q
actor_negocio
ÎÎ %
.
ÎÎ% &
Actor
ÎÎ& +
.
ÎÎ+ ,
Actor_negocio
ÎÎ, 9
.
ÎÎ9 :
ToList
ÎÎ: @
(
ÎÎ@ A
)
ÎÎA B
.
ÎÎB C
ForEach
ÎÎC J
(
ÎÎJ K
d
ÎÎK L
=>
ÎÎM O
d
ÎÎP Q
.
ÎÎQ R
id_actor
ÎÎR Z
=
ÎÎ[ \
actorComercial
ÎÎ] k
.
ÎÎk l
IdActor
ÎÎl s
)
ÎÎs t
;
ÎÎt u
result
ÏÏ 
=
ÏÏ   
_actor_Repositorio
ÏÏ! 3
.
ÏÏ3 40
"ActualizarActorNegocioCreandoActor
ÏÏ4 V
(
ÏÏV W
actor_negocio
ÏÏW d
)
ÏÏd e
;
ÏÏe f
}
ÌÌ 
}
ÓÓ 
else
ÔÔ 
{
 
if
ÒÒ 
(
ÒÒ 
actorComercial
ÒÒ &
.
ÒÒ& '
IdActor
ÒÒ' .
>
ÒÒ/ 0
$num
ÒÒ1 2
)
ÒÒ2 3
{
ÚÚ 
actor_negocio
ÛÛ %
.
ÛÛ% &
id_actor
ÛÛ& .
=
ÛÛ/ 0
actor_negocio
ÛÛ1 >
.
ÛÛ> ?
Actor
ÛÛ? D
.
ÛÛD E
id
ÛÛE G
=
ÛÛH I
actorComercial
ÛÛJ X
.
ÛÛX Y
IdActor
ÛÛY `
;
ÛÛ` a
actor_negocio
ÙÙ %
.
ÙÙ% &
Actor
ÙÙ& +
.
ÙÙ+ ,
	Direccion
ÙÙ, 5
.
ÙÙ5 6
ToList
ÙÙ6 <
(
ÙÙ< =
)
ÙÙ= >
.
ÙÙ> ?
ForEach
ÙÙ? F
(
ÙÙF G
d
ÙÙG H
=>
ÙÙI K
d
ÙÙL M
.
ÙÙM N
id_actor
ÙÙN V
=
ÙÙW X
actorComercial
ÙÙY g
.
ÙÙg h
IdActor
ÙÙh o
)
ÙÙo p
;
ÙÙp q
actor_negocio
ıı %
.
ıı% &
Actor
ıı& +
.
ıı+ ,
Actor_negocio
ıı, 9
.
ıı9 :
ToList
ıı: @
(
ıı@ A
)
ııA B
.
ııB C
ForEach
ııC J
(
ııJ K
d
ııK L
=>
ııM O
d
ııP Q
.
ııQ R
id_actor
ııR Z
=
ıı[ \
actorComercial
ıı] k
.
ıık l
IdActor
ııl s
)
ııs t
;
ııt u
result
ˆˆ 
=
ˆˆ   
_actor_Repositorio
ˆˆ! 3
.
ˆˆ3 40
"CrearActorNegocioActualizandoActor
ˆˆ4 V
(
ˆˆV W
actor_negocio
ˆˆW d
)
ˆˆd e
;
ˆˆe f
}
˜˜ 
else
¯¯ 
{
˘˘ ,
_validacionActorNegocio_Logica
˙˙ 6
.
˙˙6 7*
ValidarExistenciaDeDocumento
˙˙7 S
(
˙˙S T
actorComercial
˙˙T b
.
˙˙b c$
TipoDocumentoIdentidad
˙˙c y
.
˙˙y z
Id
˙˙z |
,
˙˙| }
actorComercial˙˙~ å
.˙˙å ç(
NumeroDocumentoIdentidad˙˙ç •
)˙˙• ¶
;˙˙¶ ß
result
˚˚ 
=
˚˚   
_actor_Repositorio
˚˚! 3
.
˚˚3 4
CrearActorNegocio
˚˚4 E
(
˚˚E F
actor_negocio
˚˚F S
)
˚˚S T
;
˚˚T U
}
¸¸ 
}
˝˝ 
actorComercial
˛˛ 
.
˛˛ 
Id
˛˛ !
=
˛˛" #
actor_negocio
˛˛$ 1
.
˛˛1 2
id
˛˛2 4
;
˛˛4 5
actorComercial
ˇˇ 
.
ˇˇ 
IdActor
ˇˇ &
=
ˇˇ' (
actor_negocio
ˇˇ) 6
.
ˇˇ6 7
id_actor
ˇˇ7 ?
;
ˇˇ? @
actorComercial
ÄÄ 
.
ÄÄ  
NombreORazonSocial
ÄÄ 1
=
ÄÄ2 3
actorComercial
ÄÄ4 B
.
ÄÄB C 
NombreORazonSocial
ÄÄC U
.
ÄÄU V
Replace
ÄÄV ]
(
ÄÄ] ^
$str
ÄÄ^ a
,
ÄÄa b
$str
ÄÄc f
)
ÄÄf g
;
ÄÄg h
result
ÅÅ 
.
ÅÅ 
information
ÅÅ "
=
ÅÅ# $
actorComercial
ÅÅ% 3
;
ÅÅ3 4
return
ÇÇ 
result
ÇÇ 
;
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
LogicaException
ÜÜ )
(
ÜÜ) *
$str
ÜÜ* X
,
ÜÜX Y
e
ÜÜZ [
)
ÜÜ[ \
;
ÜÜ\ ]
}
áá 
}
àà 	
public
ââ 
ActorComercial_
ââ A
3ObtenerActorComercialCreandoloSiExisteSoloComoActor
ââ R
(
ââR S
int
ââS V
idRol
ââW \
,
ââ\ ]
string
ââ^ d
	documento
ââe n
)
âân o
{
ää 	
ItemGenerico
ãã $
tipoDocumentoIdentidad
ãã /
=
ãã0 12
$DeterminarTipoDeDocumentoDeIdentidad
ãã2 V
(
ããV W
	documento
ããW `
)
ãã` a
;
ããa b
ActorComercial_
çç 
actorComercial
çç *
=
çç+ ,(
_consultaActor_Repositorio
çç- G
.
ççG H$
ObtenerActorComercial_
ççH ^
(
çç^ _
idRol
çç_ d
,
ççd e
	documento
ççf o
)
çço p
;
ççp q
if
éé 
(
éé 
actorComercial
éé 
==
éé !
null
éé" &
&&
éé' )$
tipoDocumentoIdentidad
éé* @
!=
ééA C
null
ééD H
)
ééH I
{
èè 
int
ëë 
idActor
ëë 
=
ëë 
_actorRepositorio
ëë /
.
ëë/ 0
ObtenerIdActor
ëë0 >
(
ëë> ?
	documento
ëë? H
,
ëëH I$
tipoDocumentoIdentidad
ëëJ `
.
ëë` a
Id
ëëa c
)
ëëc d
;
ëëd e
if
íí 
(
íí 
idActor
íí 
>
íí 
$num
íí 
)
íí  
{
ìì 
var
îî 
fechaActual
îî #
=
îî$ %
DateTimeUtil
îî& 2
.
îî2 3
FechaActual
îî3 >
(
îî> ?
)
îî? @
;
îî@ A
var
ïï 
codigo
ïï 
=
ïï  "
ObtenerProximoCodigo
ïï! 5
(
ïï5 6
idRol
ïï6 ;
)
ïï; <
;
ïï< =
DateTime
ññ 
fechaFin
ññ %
=
ññ& '
fechaActual
ññ( 3
.
ññ3 4
AddYears
ññ4 <
(
ññ< =
idRol
ññ= B
==
ññC E
ActorSettings
ññF S
.
ññS T
Default
ññT [
.
ññ[ \
IdRolCliente
ññ\ h
?
ññi j
ActorSettings
ññk x
.
ññx y
Defaultññy Ä
.ññÄ Å@
0vigenciaEnAnyosPorDefectoDeActorDeNegocioClienteññÅ ±
:ññ≤ ≥
idRolññ¥ π
==ññ∫ º
ActorSettingsññΩ  
.ññ  À
DefaultññÀ “
.ññ“ ”
IdRolProveedorññ” ·
?ññ‚ „
ActorSettingsññ‰ Ò
.ññÒ Ú
DefaultññÚ ˘
.ññ˘ ˙
IdRolProveedorññ˙ à
:ññâ ä
ActorSettingsññã ò
.ññò ô
Defaultññô †
.ññ† °G
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaññ° ÿ
)ññÿ Ÿ
;ññŸ ⁄
var
óó 
actorDeNegocio
óó &
=
óó' (
new
óó) ,
Actor_negocio
óó- :
(
óó: ;
idRol
óó; @
,
óó@ A
fechaActual
óóB M
,
óóM N
fechaFin
óóO W
,
óóW X
codigo
óóY _
,
óó_ `
true
óóa e
,
óóe f
false
óóg l
,
óól m
$str
óón p
)
óóp q
{
óór s
id_actor
óót |
=
óó} ~
idActoróó Ü
}óóá à
;óóà â 
_actor_Repositorio
òò &
.
òò& '
CrearActorNegocio
òò' 8
(
òò8 9
actorDeNegocio
òò9 G
)
òòG H
;
òòH I
var
ôô !
nuevoActorComercial
ôô +
=
ôô, - 
_actor_Repositorio
ôô. @
.
ôô@ A#
ObtenerActorComercial
ôôA V
(
ôôV W
actorDeNegocio
ôôW e
.
ôôe f
id
ôôf h
)
ôôh i
;
ôôi j
actorComercial
öö "
=
öö# $!
nuevoActorComercial
öö% 8
;
öö8 9
}
õõ 
}
úú 
return
ùù 
actorComercial
ùù !
;
ùù! "
}
ûû 	
public
üü 
ActorComercial_
üü (
ObtenerActorComercialPorId
üü 9
(
üü9 :
int
üü: =
idRol
üü> C
,
üüC D
int
üüE H
id
üüI K
)
üüK L
{
†† 	
try
°° 
{
¢¢ 
ActorComercial_
££ 
actorComercial
££  .
=
££/ 0(
_consultaActor_Repositorio
££1 K
.
££K L$
ObtenerActorComercial_
££L b
(
££b c
idRol
££c h
,
££h i
id
££j l
)
££l m
;
££m n
return
§§ 
actorComercial
§§ %
;
§§% &
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* U
,
®®U V
e
®®W X
)
®®X Y
;
®®Y Z
}
©© 
}
™™ 	
public
¨¨ 
ActorComercial_
¨¨ A
3ObtenerActorComercialCreandoloSiExisteSoloComoActor
¨¨ R
(
¨¨R S
int
¨¨S V
idRol
¨¨W \
,
¨¨\ ]
int
¨¨^ a
idTipoDocumento
¨¨b q
,
¨¨q r
string
¨¨s y
	documento¨¨z É
)¨¨É Ñ
{
≠≠ 	
ActorComercial_
ØØ 
actorComercial
ØØ *
=
ØØ+ ,(
_consultaActor_Repositorio
ØØ- G
.
ØØG H$
ObtenerActorComercial_
ØØH ^
(
ØØ^ _
idRol
ØØ_ d
,
ØØd e
idTipoDocumento
ØØf u
,
ØØu v
	documentoØØw Ä
)ØØÄ Å
;ØØÅ Ç
if
±± 
(
±± 
actorComercial
±± 
==
±± !
null
±±" &
)
±±& '
{
≤≤ 
int
≥≥ 
idActor
≥≥ 
=
≥≥ 
_actorRepositorio
≥≥ /
.
≥≥/ 0
ObtenerIdActor
≥≥0 >
(
≥≥> ?
	documento
≥≥? H
,
≥≥H I
idTipoDocumento
≥≥J Y
)
≥≥Y Z
;
≥≥Z [
if
¥¥ 
(
¥¥ 
idActor
¥¥ 
>
¥¥ 
$num
¥¥ 
)
¥¥  
{
µµ 
var
∂∂ 
fechaActual
∂∂ #
=
∂∂$ %
DateTimeUtil
∂∂& 2
.
∂∂2 3
FechaActual
∂∂3 >
(
∂∂> ?
)
∂∂? @
;
∂∂@ A
var
∑∑ 
codigo
∑∑ 
=
∑∑  "
ObtenerProximoCodigo
∑∑! 5
(
∑∑5 6
idRol
∑∑6 ;
)
∑∑; <
;
∑∑< =
DateTime
∏∏ 
fechaFin
∏∏ %
=
∏∏& '
fechaActual
∏∏( 3
.
∏∏3 4
AddYears
∏∏4 <
(
∏∏< =
idRol
∏∏= B
==
∏∏C E
ActorSettings
∏∏F S
.
∏∏S T
Default
∏∏T [
.
∏∏[ \
IdRolCliente
∏∏\ h
?
∏∏i j
ActorSettings
∏∏k x
.
∏∏x y
Default∏∏y Ä
.∏∏Ä Å@
0vigenciaEnAnyosPorDefectoDeActorDeNegocioCliente∏∏Å ±
:∏∏≤ ≥
idRol∏∏¥ π
==∏∏∫ º
ActorSettings∏∏Ω  
.∏∏  À
Default∏∏À “
.∏∏“ ”
IdRolProveedor∏∏” ·
?∏∏‚ „
ActorSettings∏∏‰ Ò
.∏∏Ò Ú
Default∏∏Ú ˘
.∏∏˘ ˙
IdRolProveedor∏∏˙ à
:∏∏â ä
ActorSettings∏∏ã ò
.∏∏ò ô
Default∏∏ô †
.∏∏† °G
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna∏∏° ÿ
)∏∏ÿ Ÿ
;∏∏Ÿ ⁄
var
ππ 
actorDeNegocio
ππ &
=
ππ' (
new
ππ) ,
Actor_negocio
ππ- :
(
ππ: ;
idRol
ππ; @
,
ππ@ A
fechaActual
ππB M
,
ππM N
fechaFin
ππO W
,
ππW X
codigo
ππY _
,
ππ_ `
true
ππa e
,
ππe f
false
ππg l
,
ππl m
$str
ππn p
)
ππp q
{
ππr s
id_actor
ππt |
=
ππ} ~
idActorππ Ü
}ππá à
;ππà â 
_actor_Repositorio
∫∫ &
.
∫∫& '
CrearActorNegocio
∫∫' 8
(
∫∫8 9
actorDeNegocio
∫∫9 G
)
∫∫G H
;
∫∫H I
var
ªª !
nuevoActorComercial
ªª +
=
ªª, - 
_actor_Repositorio
ªª. @
.
ªª@ A#
ObtenerActorComercial
ªªA V
(
ªªV W
actorDeNegocio
ªªW e
.
ªªe f
id
ªªf h
)
ªªh i
;
ªªi j
actorComercial
ºº "
=
ºº# $!
nuevoActorComercial
ºº% 8
;
ºº8 9
}
ΩΩ 
}
ææ 
return
øø 
actorComercial
øø !
;
øø! "
}
¿¿ 	
public
¬¬ 
ActorComercial_
¬¬ ,
ResolverYObtenerActorComercial
¬¬ =
(
¬¬= >
int
¬¬> A
idRol
¬¬B G
,
¬¬G H$
RegistroActorComercial
¬¬I _$
registroActorComercial
¬¬` v
)
¬¬v w
{
√√ 	
ActorComercial_
ƒƒ 
actorComercial
ƒƒ *
=
ƒƒ+ ,A
3ObtenerActorComercialCreandoloSiExisteSoloComoActor
ƒƒ- `
(
ƒƒ` a
idRol
ƒƒa f
,
ƒƒf g$
registroActorComercial
ƒƒh ~
.
ƒƒ~ %
TipoDocumentoIdentidadƒƒ ï
.ƒƒï ñ
Idƒƒñ ò
,ƒƒò ô&
registroActorComercialƒƒö ∞
.ƒƒ∞ ±(
NumeroDocumentoIdentidadƒƒ± …
)ƒƒ…  
;ƒƒ  À
if
≈≈ 
(
≈≈ 
actorComercial
≈≈ 
==
≈≈ !
null
≈≈" &
)
≈≈& '
{
∆∆ 
actorComercial
«« 
=
««  
(
««! "
ActorComercial_
««" 1
)
««1 2#
GuardarActorComercial
««2 G
(
««G H
idRol
««H M
,
««M N$
registroActorComercial
««O e
)
««e f
.
««f g
information
««g r
;
««r s
}
»» 
return
…… 
actorComercial
…… !
;
……! "
}
   	
public
ÕÕ 
List
ÕÕ 
<
ÕÕ 
ItemGenerico
ÕÕ  
>
ÕÕ  !-
ObtenerGruposActoresComerciales
ÕÕ" A
(
ÕÕA B
)
ÕÕB C
{
ŒŒ 	
try
œœ 
{
–– 
var
—— )
idsRolesGrupoActorComercial
—— /
=
——0 1
Diccionario
——2 =
.
——= >)
IdsRolesGrupoActorComercial
——> Y
;
——Y Z
var
““ 
gruposClientes
““ "
=
““# $'
_vinculoActor_Repositorio
““% >
.
““> ?-
ObtenerGruposActoresComerciales
““? ^
(
““^ _)
idsRolesGrupoActorComercial
““_ z
.
““z {
ToArray““{ Ç
(““Ç É
)““É Ñ
)““Ñ Ö
.““Ö Ü
ToList““Ü å
(““å ç
)““ç é
;““é è
return
”” 
gruposClientes
”” %
;
””% &
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’ 
e
’’ 
)
’’ 
{
÷÷ 
throw
◊◊ 
new
◊◊ 
LogicaException
◊◊ )
(
◊◊) *
$str
◊◊* X
,
◊◊X Y
e
◊◊Z [
)
◊◊[ \
;
◊◊\ ]
}
ÿÿ 
}
ŸŸ 	
public
€€ 
List
€€ 
<
€€ 
ItemGenerico
€€  
>
€€  !3
%ObtenerGruposActoresComercialesPorRol
€€" G
(
€€G H
int
€€H K
idRol
€€L Q
)
€€Q R
{
‹‹ 	
try
›› 
{
ﬁﬁ 
var
ﬂﬂ 

idRolGrupo
ﬂﬂ 
=
ﬂﬂ  
Diccionario
ﬂﬂ! ,
.
ﬂﬂ, ->
0MapeoRolActorComercialVsIdRolGrupoActorComercial
ﬂﬂ- ]
.
ﬂﬂ] ^
Single
ﬂﬂ^ d
(
ﬂﬂd e
m
ﬂﬂe f
=>
ﬂﬂg i
m
ﬂﬂj k
.
ﬂﬂk l
Key
ﬂﬂl o
==
ﬂﬂp r
idRol
ﬂﬂs x
)
ﬂﬂx y
.
ﬂﬂy z
Value
ﬂﬂz 
;ﬂﬂ Ä
var
‡‡ 
gruposClientes
‡‡ "
=
‡‡# $'
_vinculoActor_Repositorio
‡‡% >
.
‡‡> ?3
%ObtenerGruposActoresComercialesPorRol
‡‡? d
(
‡‡d e

idRolGrupo
‡‡e o
)
‡‡o p
.
‡‡p q
ToList
‡‡q w
(
‡‡w x
)
‡‡x y
;
‡‡y z
return
·· 
gruposClientes
·· %
;
··% &
}
‚‚ 
catch
„„ 
(
„„ 
	Exception
„„ 
e
„„ 
)
„„ 
{
‰‰ 
throw
ÂÂ 
new
ÂÂ 
LogicaException
ÂÂ )
(
ÂÂ) *
$str
ÂÂ* X
,
ÂÂX Y
e
ÂÂZ [
)
ÂÂ[ \
;
ÂÂ\ ]
}
ÊÊ 
}
ÁÁ 	
public
ÈÈ 
List
ÈÈ 
<
ÈÈ 
ItemGenerico
ÈÈ  
>
ÈÈ  !F
8ObtenerActoresComercialesDeGrupoActoresComercialesPorRol
ÈÈ" Z
(
ÈÈZ [
int
ÈÈ[ ^
idRol
ÈÈ_ d
,
ÈÈd e
int
ÈÈf i(
idGrupoActoresComercialesÈÈj É
)ÈÈÉ Ñ
{
ÍÍ 	
try
ÎÎ 
{
ÏÏ 
var
ÌÌ 

idRolGrupo
ÌÌ 
=
ÌÌ  
Diccionario
ÌÌ! ,
.
ÌÌ, ->
0MapeoRolActorComercialVsIdRolGrupoActorComercial
ÌÌ- ]
.
ÌÌ] ^
Single
ÌÌ^ d
(
ÌÌd e
m
ÌÌe f
=>
ÌÌg i
m
ÌÌj k
.
ÌÌk l
Key
ÌÌl o
==
ÌÌp r
idRol
ÌÌs x
)
ÌÌx y
.
ÌÌy z
Value
ÌÌz 
;ÌÌ Ä
var
ÓÓ 
gruposClientes
ÓÓ "
=
ÓÓ# $'
_vinculoActor_Repositorio
ÓÓ% >
.
ÓÓ> ?F
8ObtenerActoresComercialesDeGrupoActoresComercialesPorRol
ÓÓ? w
(
ÓÓw x
(
ÓÓx y
int
ÓÓy |
)
ÓÓ| }
TipoVinculoÓÓ} à
.ÓÓà â
MiembroGrupoÓÓâ ï
,ÓÓï ñ

idRolGrupoÓÓó °
,ÓÓ° ¢)
idGrupoActoresComercialesÓÓ£ º
)ÓÓº Ω
.ÓÓΩ æ
ToListÓÓæ ƒ
(ÓÓƒ ≈
)ÓÓ≈ ∆
;ÓÓ∆ «
return
ÔÔ 
gruposClientes
ÔÔ %
;
ÔÔ% &
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
e
ÒÒ 
)
ÒÒ 
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ 
LogicaException
ÛÛ )
(
ÛÛ) *
$str
ÛÛ* X
,
ÛÛX Y
e
ÛÛZ [
)
ÛÛ[ \
;
ÛÛ\ ]
}
ÙÙ 
}
ıı 	
public
˜˜ 
List
˜˜ 
<
˜˜ 
ItemGenerico
˜˜  
>
˜˜  !C
5ObtenerGruposActoresComercialesPorRolDeActorComercial
˜˜" W
(
˜˜W X
int
˜˜X [
idRol
˜˜\ a
,
˜˜a b
int
˜˜c f
idActorComercial
˜˜g w
)
˜˜w x
{
¯¯ 	
try
˘˘ 
{
˙˙ 
var
˚˚ 

idRolGrupo
˚˚ 
=
˚˚  
Diccionario
˚˚! ,
.
˚˚, ->
0MapeoRolActorComercialVsIdRolGrupoActorComercial
˚˚- ]
.
˚˚] ^
Single
˚˚^ d
(
˚˚d e
m
˚˚e f
=>
˚˚g i
m
˚˚j k
.
˚˚k l
Key
˚˚l o
==
˚˚p r
idRol
˚˚s x
)
˚˚x y
.
˚˚y z
Value
˚˚z 
;˚˚ Ä
var
¸¸ 
gruposClientes
¸¸ "
=
¸¸# $'
_vinculoActor_Repositorio
¸¸% >
.
¸¸> ?C
5ObtenerGruposActoresComercialesPorRolDeActorComercial
¸¸? t
(
¸¸t u
(
¸¸u v
int
¸¸v y
)
¸¸y z
TipoVinculo¸¸z Ö
.¸¸Ö Ü
MiembroGrupo¸¸Ü í
,¸¸í ì

idRolGrupo¸¸î û
,¸¸û ü 
idActorComercial¸¸† ∞
)¸¸∞ ±
.¸¸± ≤
ToList¸¸≤ ∏
(¸¸∏ π
)¸¸π ∫
;¸¸∫ ª
return
˝˝ 
gruposClientes
˝˝ %
;
˝˝% &
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* X
,
ÅÅX Y
e
ÅÅZ [
)
ÅÅ[ \
;
ÅÅ\ ]
}
ÇÇ 
}
ÉÉ 	
}
ÑÑ 
}ÖÖ €
WD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ActorNegocioLogica_CentroDeAtencion.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ActorNegocioLogica +
{ 
})) 
}** Œ©
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ActorNegocioLogica_Cliente.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ActorNegocioLogica +
{ 
	Direccion #
DireccionNoEspecificada )
() *
)* +
{ 	
return 
new 
	Direccion  
(  !
)! "
{ 
id_tipo_direccion !
=" #
MaestroSettings$ 3
.3 4
Default4 ;
.; <8
,IdDetalleMaestroTipoDireccionDomicilioFiscal< h
,h i
	es_activo 
= 
true  
,  !
es_principal 
= 
true #
,# $
	id_nacion 
= 
MaestroSettings +
.+ ,
Default, 3
.3 4&
IdDetalleMaestroNacionPeru4 N
,N O
id_tipo_via 
= 
null "
," #
id_tipo_zona 
= 
null #
,# $
	id_ubigeo 
= 
ActorSettings )
.) *
Default* 1
.1 2"
idUbigeoNoEspecificado2 H
,H I
detalle 
= 
$str 
} 
; 
}   	
public## 
ActorComercial_## "
ObtenerClienteGenerico## 5
(##5 6
)##6 7
{$$ 	
return%% 
_actor_Repositorio%% %
.%%% &!
ObtenerActorComercial%%& ;
(%%; <
ActorSettings%%< I
.%%I J
Default%%J Q
.%%Q R
IdClienteGenerico%%R c
)%%c d
;%%d e
}&& 	
public-- 
OperationResult-- 
CrearCliente-- +
(--+ ,"
RegistroActorComercial--, B
cliente--C J
)--J K
{.. 	
try// 
{00 
return11 !
GuardarActorComercial11 ,
(11, -
ActorSettings11- :
.11: ;
Default11; B
.11B C
IdRolCliente11C O
,11O P
cliente11Q X
)11X Y
;11Y Z
}22 
catch33 
(33 
	Exception33 
e33 
)33 
{44 
return55 
new55 
OperationResult55 *
(55* +
e55+ ,
)55, -
;55- .
}66 
}77 	
public88 
OperationResult88 
CrearCliente88 +
(88+ ,
int88, /
idTipoPersona880 =
,88= >
string88? E
razonSocial88F Q
,88Q R
string88S Y
apellidoPaterno88Z i
,88i j
string88k q
apellidoMaterno	88r Å
,
88Å Ç
string
88É â
nombres
88ä ë
,
88ë í
string
88ì ô
nombreComercial
88ö ©
,
88© ™
string
88´ ±
nombreCorto
88≤ Ω
,
88Ω æ
int
88ø ¬&
idTipoDocumentoIdentidad
88√ €
,
88€ ‹
string
88› „&
numeroDocumentoIdentidad
88‰ ¸
,
88¸ ˝
int
88˛ Å
?
88Å Ç
idClaseActor
88É è
,
88è ê
int
88ë î
?
88î ï 
idEstadoLegalActor
88ñ ®
,
88® ©
string
88™ ∞
correo
88± ∑
,
88∑ ∏
string
88π ø
telefono
88¿ »
,
88» …
List
88  Œ
<
88Œ œ
	Direccion
88œ ÿ
>
88ÿ Ÿ
direcciones
88⁄ Â
,
88Â Ê
int
88Á Í)
idComprobantePredeterminado
88Î Ü
)
88Ü á
{99 	
try:: 
{;; *
_validacionActorNegocio_Logica== .
.==. /(
ValidarExistenciaDeDocumento==/ K
(==K L$
idTipoDocumentoIdentidad==L d
,==d e$
numeroDocumentoIdentidad==f ~
)==~ 
;	== Ä
DateTime?? 
fechaActual?? $
=??% &
DateTimeUtil??' 3
.??3 4
FechaActual??4 ?
(??? @
)??@ A
;??A B
DateTime@@ 
fechaFin@@ !
=@@" #
fechaActual@@$ /
.@@/ 0
AddYears@@0 8
(@@8 9
ActorSettings@@9 F
.@@F G
Default@@G N
.@@N O<
0vigenciaEnAnyosPorDefectoDeActorDeNegocioCliente@@O 
)	@@ Ä
;
@@Ä Å
telefonoAA 
=AA 
telefonoAA #
??AA$ &
$strAA' )
;AA) *
correoBB 
=BB 
correoBB 
??BB  "
$strBB# %
;BB% &
ifDD 
(DD 
idTipoPersonaDD !
==DD" $
ActorSettingsDD% 2
.DD2 3
DefaultDD3 :
.DD: ;%
IdTipoActorPersonaNaturalDD; T
)DDT U
{EE 
idClaseActorFF  
=FF! "
idClaseActorFF# /
!=FF0 2
nullFF3 7
?FF8 9
idClaseActorFF: F
:FFG H
ActorSettingsFFI V
.FFV W
DefaultFFW ^
.FF^ _1
$IdClaseActorPersonaNaturalPorDefecto	FF_ É
;
FFÉ Ñ
idEstadoLegalActorGG &
=GG' (
idEstadoLegalActorGG) ;
!=GG< >
nullGG? C
?GGD E
idEstadoLegalActorGGF X
:GGY Z
ActorSettingsGG[ h
.GGh i
DefaultGGi p
.GGp q7
*IdEstadoLegalActorPersonaNaturalPorDefecto	GGq õ
;
GGõ ú
razonSocialHH 
=HH  !
apellidoPaternoHH" 1
+HH2 3
$strHH4 7
+HH8 9
apellidoMaternoHH: I
+HHJ K
$strHHL O
+HHP Q
nombresHHR Y
;HHY Z
}JJ 
elseKK 
ifKK 
(KK 
idTipoPersonaKK &
==KK' )
ActorSettingsKK* 7
.KK7 8
DefaultKK8 ?
.KK? @&
IdTipoActorPersonaJuridicaKK@ Z
)KKZ [
{LL 
idClaseActorMM  
=MM! "
idClaseActorMM# /
!=MM0 2
nullMM3 7
?MM8 9
idClaseActorMM: F
:MMG H
ActorSettingsMMI V
.MMV W
DefaultMMW ^
.MM^ _2
%IdClaseActorPersonaJuridicaPorDefecto	MM_ Ñ
;
MMÑ Ö
idEstadoLegalActorNN &
=NN' (
idEstadoLegalActorNN) ;
!=NN< >
nullNN? C
?NND E
idEstadoLegalActorNNF X
:NNY Z
ActorSettingsNN[ h
.NNh i
DefaultNNi p
.NNp q8
+IdEstadoLegalActorPersonaJuridicaPorDefecto	NNq ú
;
NNú ù
}PP 
elseQQ 
{RR 
idClaseActorSS  
=SS! "
idClaseActorSS# /
!=SS0 2
nullSS3 7
?SS8 9
idClaseActorSS: F
:SSG H
ActorSettingsSSI V
.SSV W
DefaultSSW ^
.SS^ _1
$IdClaseActorEntidadInternaPorDefecto	SS_ É
;
SSÉ Ñ
idEstadoLegalActorTT &
=TT' (
idEstadoLegalActorTT) ;
!=TT< >
nullTT? C
?TTD E
idEstadoLegalActorTTF X
:TTY Z
ActorSettingsTT[ h
.TTh i
DefaultTTi p
.TTp q7
*IdEstadoLegalActorEntidadInternaPorDefecto	TTq õ
;
TTõ ú
}UU 
ifWW 
(WW $
idTipoDocumentoIdentidadWW ,
==WW- /
ActorSettingsWW0 =
.WW= >
DefaultWW> E
.WWE F'
IdTipoDocumentoIdentidadDniWWF a
&&WWb d$
numeroDocumentoIdentidadWWe }
.WW} ~
Trim	WW~ Ç
(
WWÇ É
)
WWÉ Ñ
.
WWÑ Ö
Length
WWÖ ã
!=
WWå é
$num
WWè ê
)
WWê ë
throw
WWí ó
new
WWò õ
	Exception
WWú •
(
WW• ¶
$str
WW¶ „
)
WW„ ‰
;
WW‰ Â
ifXX 
(XX $
idTipoDocumentoIdentidadXX ,
==XX- /
ActorSettingsXX0 =
.XX= >
DefaultXX> E
.XXE F'
IdTipoDocumentoIdentidadRucXXF a
&&XXb d$
numeroDocumentoIdentidadXXe }
.XX} ~
Trim	XX~ Ç
(
XXÇ É
)
XXÉ Ñ
.
XXÑ Ö
Length
XXÖ ã
!=
XXå é
$num
XXè ë
)
XXë í
throw
XXì ò
new
XXô ú
	Exception
XXù ¶
(
XX¶ ß
$str
XXß Â
)
XXÂ Ê
;
XXÊ Á
stringZZ 
codigoZZ 
=ZZ  
ObtenerProximoCodigoZZ  4
(ZZ4 5
ActorSettingsZZ5 B
.ZZB C
DefaultZZC J
.ZZJ K
IdRolClienteZZK W
)ZZW X
;ZZX Y
Actor_negocio\\ 
cliente\\ %
=\\& '
new\\( +
Actor_negocio\\, 9
(\\9 :
ActorSettings\\: G
.\\G H
Default\\H O
.\\O P
IdRolCliente\\P \
,\\\ ]
fechaActual\\^ i
,\\i j
fechaFin\\k s
,\\s t
codigo\\u {
,\\{ |
true	\\} Å
,
\\Å Ç
false
\\É à
,
\\à â
$str
\\ä å
)
\\å ç
;
\\ç é
Actor__ 
actor__ 
=__ 
new__ !
Actor__" '
(__' ($
idTipoDocumentoIdentidad__( @
,__@ A
fechaActual__B M
,__M N$
numeroDocumentoIdentidad__O g
,__g h
razonSocial__i t
,__t u
nombreComercial	__v Ö
,
__Ö Ü
telefono
__á è
,
__è ê
idTipoPersona
__ë û
,
__û ü
ActorSettings`` !
.``! "
Default``" )
.``) *!
IdFotoActorPorDefecto``* ?
,``? @
(``A B
int``B E
)``E F
idClaseActor``F R
,``R S
(``T U
int``U X
)``X Y
idEstadoLegalActor``Y k
,``k l
correo``m s
,``s t
nombreCorto	``u Ä
,
``Ä Å
$str
``Ç Ñ
)
``Ñ Ö
;
``Ö Ü
ifbb 
(bb 
direccionesbb 
!=bb  "
nullbb# '
)bb' (
{cc 
actordd 
.dd 
	Direcciondd #
=dd$ %
direccionesdd& 1
;dd1 2
}ee 
ifgg 
(gg '
idComprobantePredeterminadogg /
!=gg0 2
$numgg3 4
)gg4 5
{hh 
clienteii 
.ii #
Parametro_actor_negocioii 3
.ii3 4
Addii4 7
(ii7 8
newii8 ;#
Parametro_actor_negocioii< S
(iiS T
MaestroSettingsiiT c
.iic d
Defaultiid k
.iik lH
;IdDetalleMaestroParametroComprobanteDeClientePredeterminado	iil ß
,
iiß ®)
idComprobantePredeterminado
ii© ƒ
.
iiƒ ≈
ToString
ii≈ Õ
(
iiÕ Œ
)
iiŒ œ
)
iiœ –
)
ii– —
;
ii— “
}jj 
clientell 
.ll 
Actorll 
=ll 
actorll  %
;ll% &
returnnn 
_actor_Repositorionn )
.nn) *
CrearActorNegocionn* ;
(nn; <
clientenn< C
)nnC D
;nnD E
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
returnrr 
newrr 
OperationResultrr *
(rr* +
err+ ,
)rr, -
;rr- .
}ss 
}tt 	
publicuu 
OperationResultuu )
CrearClienteActualizandoActoruu <
(uu< =
intuu= @
idActoruuA H
,uuH I
intuuJ M
idTipoActoruuN Y
,uuY Z
stringuu[ a
razonSocialuub m
,uum n
stringuuo u
apellidoPaterno	uuv Ö
,
uuÖ Ü
string
uuá ç
apellidoMaterno
uué ù
,
uuù û
string
uuü •
nombres
uu¶ ≠
,
uu≠ Æ
string
uuØ µ
nombreComercial
uu∂ ≈
,
uu≈ ∆
string
uu« Õ
nombreCorto
uuŒ Ÿ
,
uuŸ ⁄
int
uu€ ﬁ&
idTipoDocumentoIdentidad
uuﬂ ˜
,
uu˜ ¯
string
uu˘ ˇ&
numeroDocumentoIdentidad
uuÄ ò
,
uuò ô
int
uuö ù
?
uuù û
idClaseActor
uuü ´
,
uu´ ¨
int
uu≠ ∞
?
uu∞ ± 
idEstadoLegalActor
uu≤ ƒ
,
uuƒ ≈
string
uu∆ Ã
correo
uuÕ ”
,
uu” ‘
string
uu’ €
telefono
uu‹ ‰
,
uu‰ Â
List
uuÊ Í
<
uuÍ Î
	Direccion
uuÎ Ù
>
uuÙ ı
direcciones
uuˆ Å
,
uuÅ Ç
int
uuÉ Ü)
idComprobantePredeterminado
uuá ¢
)
uu¢ £
{vv 	
tryww 
{xx 
DateTimeyy 
fechaActualyy $
=yy% &
DateTimeUtilyy' 3
.yy3 4
FechaActualyy4 ?
(yy? @
)yy@ A
;yyA B
DateTimezz 
fechaFinzz !
=zz" #
fechaActualzz$ /
.zz/ 0
AddYearszz0 8
(zz8 9
ActorSettingszz9 F
.zzF G
DefaultzzG N
.zzN O<
0vigenciaEnAnyosPorDefectoDeActorDeNegocioClientezzO 
)	zz Ä
;
zzÄ Å
telefono{{ 
={{ 
telefono{{ #
??{{$ &
$str{{' )
;{{) *
correo|| 
=|| 
correo|| 
??||  "
$str||# %
;||% &
if~~ 
(~~ 
idTipoActor~~ 
==~~  "
ActorSettings~~# 0
.~~0 1
Default~~1 8
.~~8 9%
IdTipoActorPersonaNatural~~9 R
)~~R S
{ 
idClaseActor
ÄÄ  
=
ÄÄ! "
idClaseActor
ÄÄ# /
!=
ÄÄ0 2
null
ÄÄ3 7
?
ÄÄ8 9
idClaseActor
ÄÄ: F
:
ÄÄG H
ActorSettings
ÄÄI V
.
ÄÄV W
Default
ÄÄW ^
.
ÄÄ^ _3
$IdClaseActorPersonaNaturalPorDefectoÄÄ_ É
;ÄÄÉ Ñ 
idEstadoLegalActor
ÅÅ &
=
ÅÅ' ( 
idEstadoLegalActor
ÅÅ) ;
!=
ÅÅ< >
null
ÅÅ? C
?
ÅÅD E 
idEstadoLegalActor
ÅÅF X
:
ÅÅY Z
ActorSettings
ÅÅ[ h
.
ÅÅh i
Default
ÅÅi p
.
ÅÅp q9
*IdEstadoLegalActorPersonaNaturalPorDefectoÅÅq õ
;ÅÅõ ú
razonSocial
ÇÇ 
=
ÇÇ  !
apellidoPaterno
ÇÇ" 1
+
ÇÇ2 3
$str
ÇÇ4 7
+
ÇÇ8 9
apellidoMaterno
ÇÇ: I
+
ÇÇJ K
$str
ÇÇL O
+
ÇÇP Q
nombres
ÇÇR Y
;
ÇÇY Z
}
ÉÉ 
else
ÑÑ 
if
ÑÑ 
(
ÑÑ 
idTipoActor
ÑÑ $
==
ÑÑ% '
ActorSettings
ÑÑ( 5
.
ÑÑ5 6
Default
ÑÑ6 =
.
ÑÑ= >(
IdTipoActorPersonaJuridica
ÑÑ> X
)
ÑÑX Y
{
ÖÖ 
idClaseActor
ÜÜ  
=
ÜÜ! "
idClaseActor
ÜÜ# /
!=
ÜÜ0 2
null
ÜÜ3 7
?
ÜÜ8 9
idClaseActor
ÜÜ: F
:
ÜÜG H
ActorSettings
ÜÜI V
.
ÜÜV W
Default
ÜÜW ^
.
ÜÜ^ _4
%IdClaseActorPersonaJuridicaPorDefectoÜÜ_ Ñ
;ÜÜÑ Ö 
idEstadoLegalActor
áá &
=
áá' ( 
idEstadoLegalActor
áá) ;
!=
áá< >
null
áá? C
?
ááD E 
idEstadoLegalActor
ááF X
:
ááY Z
ActorSettings
áá[ h
.
ááh i
Default
áái p
.
ááp q:
+IdEstadoLegalActorPersonaJuridicaPorDefectoááq ú
;ááú ù
}
àà 
else
ââ 
{
ää 
idClaseActor
ãã  
=
ãã! "
idClaseActor
ãã# /
!=
ãã0 2
null
ãã3 7
?
ãã8 9
idClaseActor
ãã: F
:
ããG H
ActorSettings
ããI V
.
ããV W
Default
ããW ^
.
ãã^ _3
$IdClaseActorEntidadInternaPorDefectoãã_ É
;ããÉ Ñ 
idEstadoLegalActor
åå &
=
åå' ( 
idEstadoLegalActor
åå) ;
!=
åå< >
null
åå? C
?
ååD E 
idEstadoLegalActor
ååF X
:
ååY Z
ActorSettings
åå[ h
.
ååh i
Default
ååi p
.
ååp q9
*IdEstadoLegalActorEntidadInternaPorDefectoååq õ
;ååõ ú
}
çç 
string
éé 
codigo
éé 
=
éé "
ObtenerProximoCodigo
éé  4
(
éé4 5
ActorSettings
éé5 B
.
ééB C
Default
ééC J
.
ééJ K
IdRolProveedor
ééK Y
)
ééY Z
;
ééZ [
Actor_negocio
êê 
cliente
êê %
=
êê& '
new
êê( +
Actor_negocio
êê, 9
(
êê9 :
idActor
êê: A
,
êêA B
ActorSettings
êêC P
.
êêP Q
Default
êêQ X
.
êêX Y
IdRolCliente
êêY e
,
êêe f
fechaActual
êêg r
,
êêr s
fechaFin
êêt |
,
êê| }
codigoêê~ Ñ
,êêÑ Ö
trueêêÜ ä
,êêä ã
falseêêå ë
,êêë í
$strêêì ï
,êêï ñ
nullêêó õ
)êêõ ú
;êêú ù
Actor
íí 
actor
íí 
=
íí 
new
íí !
Actor
íí" '
(
íí' (
idActor
íí( /
,
íí/ 0&
idTipoDocumentoIdentidad
íí1 I
,
ííI J
fechaActual
ííK V
,
ííV W&
numeroDocumentoIdentidad
ííX p
,
ííp q
razonSocial
íír }
,
íí} ~
nombreComercialíí é
,ííé è
telefonoííê ò
,ííò ô
idTipoActorííö •
,íí• ¶
ActorSettings
ìì !
.
ìì! "
Default
ìì" )
.
ìì) *#
IdFotoActorPorDefecto
ìì* ?
,
ìì? @
(
ììA B
int
ììB E
)
ììE F
idClaseActor
ììF R
,
ììR S
(
ììT U
int
ììU X
)
ììX Y 
idEstadoLegalActor
ììY k
,
ììk l
correo
ììm s
,
ììs t
nombreCortoììu Ä
,ììÄ Å
$strììÇ Ñ
)ììÑ Ö
;ììÖ Ü
if
ïï 
(
ïï 
direcciones
ïï 
!=
ïï  "
null
ïï# '
)
ïï' (
{
ññ 
actor
óó 
.
óó 
	Direccion
óó #
=
óó$ %
direcciones
óó& 1
;
óó1 2
}
òò 
if
öö 
(
öö )
idComprobantePredeterminado
öö /
!=
öö0 2
$num
öö3 4
)
öö4 5
{
õõ 
cliente
úú 
.
úú %
Parametro_actor_negocio
úú 3
.
úú3 4
Add
úú4 7
(
úú7 8
new
úú8 ;%
Parametro_actor_negocio
úú< S
(
úúS T
MaestroSettings
úúT c
.
úúc d
Default
úúd k
.
úúk lJ
;IdDetalleMaestroParametroComprobanteDeClientePredeterminadoúúl ß
,úúß ®+
idComprobantePredeterminadoúú© ƒ
.úúƒ ≈
ToStringúú≈ Õ
(úúÕ Œ
)úúŒ œ
)úúœ –
)úú– —
;úú— “
}
ùù 
cliente
üü 
.
üü 
Actor
üü 
=
üü 
actor
üü  %
;
üü% &
return
°° 
_actorRepositorio
°° (
.
°°( )0
"CrearActorNegocioActualizandoActor
°°) K
(
°°K L
cliente
°°L S
)
°°S T
;
°°T U
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
return
•• 
new
•• 
OperationResult
•• *
(
••* +
e
••+ ,
)
••, -
;
••- .
}
¶¶ 
}
ßß 	
public
©© 
OperationResult
©© 
ActualizarCliente
©© 0
(
©©0 1
int
©©1 4
	idCliente
©©5 >
,
©©> ?
int
©©@ C
idActor
©©D K
,
©©K L
string
©©M S
codigo
©©T Z
,
©©Z [
int
©©\ _
idTipoActor
©©` k
,
©©k l
string
©©m s
razonSocial
©©t 
,©© Ä
string©©Å á
apellidoPaterno©©à ó
,©©ó ò
string©©ô ü
apellidoMaterno©©† Ø
,©©Ø ∞
string©©± ∑
nombres©©∏ ø
,©©ø ¿
string©©¡ «
nombreComercial©©» ◊
,©©◊ ÿ
string©©Ÿ ﬂ
nombreCorto©©‡ Î
,©©Î Ï
int©©Ì (
idTipoDocumentoIdentidad©©Ò â
,©©â ä
string©©ã ë(
numeroDocumentoIdentidad©©í ™
,©©™ ´
int©©¨ Ø
?©©Ø ∞
idClaseActor©©± Ω
,©©Ω æ
int©©ø ¬
?©©¬ √"
idEstadoLegalActor©©ƒ ÷
,©©÷ ◊
string©©ÿ ﬁ
correo©©ﬂ Â
,©©Â Ê
string©©Á Ì
telefono©©Ó ˆ
,©©ˆ ˜
List©©¯ ¸
<©©¸ ˝
	Direccion©©˝ Ü
>©©Ü á
direcciones©©à ì
,©©ì î
int©©ï ò+
idComprobantePredeterminado©©ô ¥
)©©¥ µ
{
™™ 	
try
´´ 
{
¨¨ 
DateTime
≠≠ 
fechaActual
≠≠ $
=
≠≠% &
DateTimeUtil
≠≠' 3
.
≠≠3 4
FechaActual
≠≠4 ?
(
≠≠? @
)
≠≠@ A
;
≠≠A B
DateTime
ÆÆ 
fechaFin
ÆÆ !
=
ÆÆ" #
fechaActual
ÆÆ$ /
.
ÆÆ/ 0
AddYears
ÆÆ0 8
(
ÆÆ8 9
ActorSettings
ÆÆ9 F
.
ÆÆF G
Default
ÆÆG N
.
ÆÆN O>
0vigenciaEnAnyosPorDefectoDeActorDeNegocioCliente
ÆÆO 
)ÆÆ Ä
;ÆÆÄ Å
telefono
ØØ 
=
ØØ 
telefono
ØØ #
??
ØØ$ &
$str
ØØ' )
;
ØØ) *
correo
∞∞ 
=
∞∞ 
correo
∞∞ 
??
∞∞  "
$str
∞∞# %
;
∞∞% &
codigo
±± 
=
±± 
codigo
±± 
??
±±  "
$str
±±# %
;
±±% &
if
≥≥ 
(
≥≥ 
idTipoActor
≥≥ 
==
≥≥  "
ActorSettings
≥≥# 0
.
≥≥0 1
Default
≥≥1 8
.
≥≥8 9'
IdTipoActorPersonaNatural
≥≥9 R
)
≥≥R S
{
¥¥ 
idClaseActor
µµ  
=
µµ! "
idClaseActor
µµ# /
!=
µµ0 2
null
µµ3 7
?
µµ8 9
idClaseActor
µµ: F
:
µµG H
ActorSettings
µµI V
.
µµV W
Default
µµW ^
.
µµ^ _3
$IdClaseActorPersonaNaturalPorDefectoµµ_ É
;µµÉ Ñ 
idEstadoLegalActor
∂∂ &
=
∂∂' ( 
idEstadoLegalActor
∂∂) ;
!=
∂∂< >
null
∂∂? C
?
∂∂D E 
idEstadoLegalActor
∂∂F X
:
∂∂Y Z
ActorSettings
∂∂[ h
.
∂∂h i
Default
∂∂i p
.
∂∂p q9
*IdEstadoLegalActorPersonaNaturalPorDefecto∂∂q õ
;∂∂õ ú
razonSocial
∑∑ 
=
∑∑  !
apellidoPaterno
∑∑" 1
+
∑∑2 3
$str
∑∑4 7
+
∑∑8 9
apellidoMaterno
∑∑: I
+
∑∑J K
$str
∑∑L O
+
∑∑P Q
nombres
∑∑R Y
;
∑∑Y Z
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
idTipoActor
ππ $
==
ππ% '
ActorSettings
ππ( 5
.
ππ5 6
Default
ππ6 =
.
ππ= >(
IdTipoActorPersonaJuridica
ππ> X
)
ππX Y
{
∫∫ 
idClaseActor
ªª  
=
ªª! "
idClaseActor
ªª# /
!=
ªª0 2
null
ªª3 7
?
ªª8 9
idClaseActor
ªª: F
:
ªªG H
ActorSettings
ªªI V
.
ªªV W
Default
ªªW ^
.
ªª^ _4
%IdClaseActorPersonaJuridicaPorDefectoªª_ Ñ
;ªªÑ Ö 
idEstadoLegalActor
ºº &
=
ºº' ( 
idEstadoLegalActor
ºº) ;
!=
ºº< >
null
ºº? C
?
ººD E 
idEstadoLegalActor
ººF X
:
ººY Z
ActorSettings
ºº[ h
.
ººh i
Default
ººi p
.
ººp q:
+IdEstadoLegalActorPersonaJuridicaPorDefectoººq ú
;ººú ù
}
ΩΩ 
else
ææ 
{
øø 
idClaseActor
¿¿  
=
¿¿! "
idClaseActor
¿¿# /
!=
¿¿0 2
null
¿¿3 7
?
¿¿8 9
idClaseActor
¿¿: F
:
¿¿G H
ActorSettings
¿¿I V
.
¿¿V W
Default
¿¿W ^
.
¿¿^ _3
$IdClaseActorEntidadInternaPorDefecto¿¿_ É
;¿¿É Ñ 
idEstadoLegalActor
¡¡ &
=
¡¡' ( 
idEstadoLegalActor
¡¡) ;
!=
¡¡< >
null
¡¡? C
?
¡¡D E 
idEstadoLegalActor
¡¡F X
:
¡¡Y Z
ActorSettings
¡¡[ h
.
¡¡h i
Default
¡¡i p
.
¡¡p q9
*IdEstadoLegalActorEntidadInternaPorDefecto¡¡q õ
;¡¡õ ú
}
¬¬ 
Actor_negocio
ƒƒ 
cliente
ƒƒ %
=
ƒƒ& '
new
ƒƒ( +
Actor_negocio
ƒƒ, 9
(
ƒƒ9 :
	idCliente
ƒƒ: C
,
ƒƒC D
idActor
ƒƒE L
,
ƒƒL M
ActorSettings
ƒƒN [
.
ƒƒ[ \
Default
ƒƒ\ c
.
ƒƒc d
IdRolCliente
ƒƒd p
,
ƒƒp q
fechaActual
ƒƒr }
,
ƒƒ} ~
fechaFinƒƒ á
,ƒƒá à
codigoƒƒâ è
,ƒƒè ê
trueƒƒë ï
,ƒƒï ñ
falseƒƒó ú
,ƒƒú ù
$strƒƒû †
)ƒƒ† °
;ƒƒ° ¢
Actor
∆∆ 
actor
∆∆ 
=
∆∆ 
new
∆∆ !
Actor
∆∆" '
(
∆∆' (
idActor
∆∆( /
,
∆∆/ 0&
idTipoDocumentoIdentidad
∆∆1 I
,
∆∆I J
fechaActual
∆∆K V
,
∆∆V W&
numeroDocumentoIdentidad
∆∆X p
,
∆∆p q
razonSocial
∆∆r }
,
∆∆} ~
nombreComercial∆∆ é
,∆∆é è
telefono
«« 
,
«« 
idTipoActor
«« )
,
««) *
ActorSettings
»» !
.
»»! "
Default
»»" )
.
»») *#
IdFotoActorPorDefecto
»»* ?
,
»»? @
(
»»A B
int
»»B E
)
»»E F
idClaseActor
»»F R
,
»»R S
(
»»T U
int
»»U X
)
»»X Y 
idEstadoLegalActor
»»Y k
,
»»k l
correo
»»m s
,
»»s t
nombreCorto»»u Ä
,»»Ä Å
$str»»Ç Ñ
)»»Ñ Ö
;»»Ö Ü
if
   
(
   
direcciones
   
!=
    "
null
  # '
)
  ' (
{
ÀÀ 
actor
ÃÃ 
.
ÃÃ 
	Direccion
ÃÃ #
=
ÃÃ$ %
direcciones
ÃÃ& 1
;
ÃÃ1 2
}
ÕÕ 
if
œœ 
(
œœ )
idComprobantePredeterminado
œœ /
!=
œœ0 2
$num
œœ3 4
)
œœ4 5
{
–– 
cliente
—— 
.
—— %
Parametro_actor_negocio
—— 3
.
——3 4
Add
——4 7
(
——7 8
new
——8 ;%
Parametro_actor_negocio
——< S
(
——S T
	idCliente
——T ]
,
——] ^
MaestroSettings
——_ n
.
——n o
Default
——o v
.
——v wJ
;IdDetalleMaestroParametroComprobanteDeClientePredeterminado——w ≤
,——≤ ≥+
idComprobantePredeterminado——¥ œ
.——œ –
ToString——– ÿ
(——ÿ Ÿ
)——Ÿ ⁄
)——⁄ €
)——€ ‹
;——‹ ›
}
““ 
cliente
‘‘ 
.
‘‘ 
Actor
‘‘ 
=
‘‘ 
actor
‘‘  %
;
‘‘% &
return
÷÷  
_actor_Repositorio
÷÷ )
.
÷÷) *$
ActualizarActorNegocio
÷÷* @
(
÷÷@ A
cliente
÷÷A H
)
÷÷H I
;
÷÷I J
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
return
⁄⁄ 
new
⁄⁄ 
OperationResult
⁄⁄ *
(
⁄⁄* +
e
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
}
€€ 
}
‹‹ 	
public
›› 
OperationResult
›› 
DarDeBajaCliente
›› /
(
››/ 0
int
››0 3
	idCliente
››4 =
)
››= >
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
return
··  
_actor_Repositorio
·· )
.
··) *(
DarDeBajaActorNegocioAhora
··* D
(
··D E
	idCliente
··E N
,
··N O
ActorSettings
··P ]
.
··] ^
Default
··^ e
.
··e f
IdRolCliente
··f r
)
··r s
;
··s t
}
‚‚ 
catch
„„ 
(
„„ 
	Exception
„„ 
e
„„ 
)
„„ 
{
‰‰ 
throw
ÂÂ 
e
ÂÂ 
;
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ 
ResumenCliente
ÏÏ "
>
ÏÏ" #%
ObtenerClientesVigentes
ÏÏ$ ;
(
ÏÏ; <
)
ÏÏ< =
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
return
  
_actor_Repositorio
 )
.
) *,
ObtenerResumenClientesVigentes
* H
(
H I
)
I J
.
J K
ToList
K Q
(
Q R
)
R S
;
S T
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
e
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 	
public
¯¯ 
async
¯¯ 
Task
¯¯ 
<
¯¯ 
List
¯¯ 
<
¯¯ 
ItemGenerico
¯¯ +
>
¯¯+ ,
>
¯¯, -7
)ObtenerClientesVigentesComoItemsGenericos
¯¯. W
(
¯¯W X
)
¯¯X Y
{
˘˘ 	
try
˙˙ 
{
˚˚ 
return
¸¸ 
(
¸¸ 
await
¸¸ 
_actorRepositorio
¸¸ /
.
¸¸/ 0J
<ObtenerActoresDeNegocioPrincipalesVigentesComoItemsGenericos
¸¸0 l
(
¸¸l m
ActorSettings
¸¸m z
.
¸¸z {
Default¸¸{ Ç
.¸¸Ç É
IdRolEmpleado¸¸É ê
,¸¸ê ë
ActorSettings¸¸í ü
.¸¸ü †
Default¸¸† ß
.¸¸ß ®
IdRolCliente¸¸® ¥
)¸¸¥ µ
)¸¸µ ∂
.¸¸∂ ∑
ToList¸¸∑ Ω
(¸¸Ω æ
)¸¸æ ø
;¸¸ø ¿
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
e
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
public
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
<
ÉÉ 
List
ÉÉ 
<
ÉÉ 
ItemGenerico
ÉÉ +
>
ÉÉ+ ,
>
ÉÉ, -?
1ObtenerClientesVigentesComoItemsGenericosPorIdRol
ÉÉ. _
(
ÉÉ_ `
)
ÉÉ` a
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
var
áá 
clientes
áá 
=
áá 
(
áá  
await
áá  %
_actorRepositorio
áá& 7
.
áá7 8R
DObtenerActoresDeNegocioPrincipalesVigentesComoItemsGenericosPorIdRol
áá8 |
(
áá| }
ActorSettingsáá} ä
.ááä ã
Defaultááã í
.ááí ì
IdRolClienteááì ü
)ááü †
)áá† °
.áá° ¢
ToListáá¢ ®
(áá® ©
)áá© ™
;áá™ ´
clientes
àà 
.
àà 
ForEach
àà  
(
àà  !
c
àà! "
=>
àà# %
c
àà& '
.
àà' (
Nombre
àà( .
=
àà/ 0
c
àà1 2
.
àà2 3
Nombre
àà3 9
.
àà9 :
Replace
àà: A
(
ààA B
$str
ààB E
,
ààE F
$str
ààG J
)
ààJ K
)
ààK L
;
ààL M
return
ââ 
clientes
ââ 
;
ââ  
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
e
ãã 
)
ãã 
{
åå 
throw
çç 
e
çç 
;
çç 
}
éé 
}
èè 	
public
íí 
List
íí 
<
íí 
Modelo
íí 
.
íí 
	Entidades
íí $
.
íí$ %
Custom
íí% +
.
íí+ ,
Cliente
íí, 3
>
íí3 4.
 ObtenerClientesConCuotasVigentes
íí5 U
(
ííU V
)
ííV W
{
ìì 	
try
îî 
{
ïï 
return
ññ 
Modelo
ññ 
.
ññ 
	Entidades
ññ '
.
ññ' (
Custom
ññ( .
.
ññ. /
Cliente
ññ/ 6
.
ññ6 7
Convert
ññ7 >
(
ññ> ?
_actorRepositorio
ññ? P
.
ññP QK
<ObtenerActorDeNegocioIncluidoTransaccion1PorRolVigentesAhoraññQ ç
(ññç é
ActorSettingsññé õ
.ññõ ú
Defaultññú £
.ññ£ §
IdRolClienteññ§ ∞
)ññ∞ ±
.ññ± ≤
ToListññ≤ ∏
(ññ∏ π
)ññπ ∫
)ññ∫ ª
;ññª º
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
throw
öö 
e
öö 
;
öö 
}
õõ 
}
úú 	
public
ûû 
List
ûû 
<
ûû 
Modelo
ûû 
.
ûû 
	Entidades
ûû $
.
ûû$ %
Custom
ûû% +
.
ûû+ ,
Cliente
ûû, 3
>
ûû3 4.
 ObtenerClientesVigentesParaVenta
ûû5 U
(
ûûU V
)
ûûV W
{
üü 	
try
†† 
{
°° 
return
¢¢ 
Modelo
¢¢ 
.
¢¢ 
	Entidades
¢¢ '
.
¢¢' (
Custom
¢¢( .
.
¢¢. /
Cliente
¢¢/ 6
.
¢¢6 7
Convert
¢¢7 >
(
¢¢> ?
_actorRepositorio
¢¢? P
.
¢¢P QD
5obtenerActorDeNegocioIncluidoActorPorRolVigentesAhora¢¢Q Ü
(¢¢Ü á
ActorSettings¢¢á î
.¢¢î ï
Default¢¢ï ú
.¢¢ú ù
IdRolCliente¢¢ù ©
)¢¢© ™
.¢¢™ ´
ToList¢¢´ ±
(¢¢± ≤
)¢¢≤ ≥
)¢¢≥ ¥
;¢¢¥ µ
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
e
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
public
™™ 
Cliente
™™ 
ObtenerCliente
™™ %
(
™™% &
int
™™& )
id
™™* ,
)
™™, -
{
´´ 	
try
¨¨ 
{
≠≠ 
Actor_negocio
ÆÆ 
actorNegocio
ÆÆ *
=
ÆÆ+ ,
_actorRepositorio
ÆÆ- >
.
ÆÆ> ?#
obtenerActorDeNegocio
ÆÆ? T
(
ÆÆT U
id
ÆÆU W
,
ÆÆW X
ActorSettings
ÆÆY f
.
ÆÆf g
Default
ÆÆg n
.
ÆÆn o
IdRolCliente
ÆÆo {
)
ÆÆ{ |
;
ÆÆ| }
return
ØØ 
new
ØØ 
Modelo
ØØ !
.
ØØ! "
	Entidades
ØØ" +
.
ØØ+ ,
Custom
ØØ, 2
.
ØØ2 3
Cliente
ØØ3 :
(
ØØ: ;
actorNegocio
ØØ; G
)
ØØG H
;
ØØH I
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
e
±± 
)
±± 
{
≤≤ 
throw
≥≥ 
e
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 	
public
ºº 
ActorComercial_
ºº "
ObtenerClientePorDni
ºº 3
(
ºº3 4
string
ºº4 :
dni
ºº; >
)
ºº> ?
{
ΩΩ 	
Modelo
ææ 
.
ææ 
Custom
ææ 
.
ææ 
ActorComercial_
ææ )
cliente
ææ* 1
=
ææ2 3
null
ææ4 8
;
ææ8 9
var
øø 
actorDeNegocio
øø 
=
øø  
_actorRepositorio
øø! 2
.
øø2 3?
1ObtenerActorDeNegocioVigentePorDocumentoIdentidad
øø3 d
(
øød e
dni
øøe h
,
øøh i
ActorSettings
øøj w
.
øøw x
Default
øøx 
.øø Ä
IdRolClienteøøÄ å
)øøå ç
;øøç é
if
¿¿ 
(
¿¿ 
actorDeNegocio
¿¿ 
!=
¿¿ !
null
¿¿" &
)
¿¿& '
{
¡¡ 
cliente
¬¬ 
=
¬¬ 
new
¬¬ 
ActorComercial_
¬¬ -
(
¬¬- .
actorDeNegocio
¬¬. <
)
¬¬< =
;
¬¬= >
}
√√ 
return
ƒƒ 
cliente
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
…… 
string
…… )
ObtenerUltimaPlacaDeCliente
…… 1
(
……1 2
int
……2 5
	idCliente
……6 ?
)
……? @
{
   	
try
ÀÀ 
{
ÃÃ 
return
ÕÕ %
_transaccionRepositorio
ÕÕ .
.
ÕÕ. /Y
KObtenerUltimoRegistroDeDetalleTransaccionDeTransaccionOrdenVentaDeUnCliente
ÕÕ/ z
(
ÕÕz {
	idClienteÕÕ{ Ñ
)ÕÕÑ Ö
;ÕÕÖ Ü
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
e
œœ 
)
œœ 
{
–– 
throw
—— 
new
—— 
LogicaException
—— )
(
——) *
$str
——* x
)
——x y
;
——y z
}
““ 
}
”” 	
}
‘‘ 
}÷÷ ‚Ë
OD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ActorNegocioLogica_Empleado.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ActorNegocioLogica +
{ 
public 
List 
< 
Empleado 
> "
ObtenerCajerosVigentes 4
(4 5
)5 6
{ 	
return 
Empleado 
. 
Convert #
(# $
_actorRepositorio$ 5
.5 6*
ObtenerActorDeNegocioPrincipal6 T
(T U
ActorSettingsU b
.b c
Defaultc j
.j k
IdRolEmpleadok x
,x y
ActorSettings	z á
.
á à
Default
à è
.
è ê
IdRolCajero
ê õ
,
õ ú
true
ù °
)
° ¢
.
¢ £
ToList
£ ©
(
© ™
)
™ ´
)
´ ¨
;
¨ ≠
} 	
public 
List 
< 
Empleado 
> &
ObtenerAlmacenerosVigentes 8
(8 9
)9 :
{ 	
return 
Empleado 
. 
Convert #
(# $
_actorRepositorio$ 5
.5 6*
ObtenerActorDeNegocioPrincipal6 T
(T U
ActorSettingsU b
.b c
Defaultc j
.j k
IdRolEmpleadok x
,x y
ActorSettings	z á
.
á à
Default
à è
.
è ê
IdRolAlmacenero
ê ü
,
ü †
true
° •
)
• ¶
.
¶ ß
ToList
ß ≠
(
≠ Æ
)
Æ Ø
)
Ø ∞
;
∞ ±
} 	
public 
List 
< 
Empleado 
> %
ObtenerVendedoresVigentes 7
(7 8
)8 9
{ 	
return   
Empleado   
.   
Convert   #
(  # $
_actorRepositorio  $ 5
.  5 6*
ObtenerActorDeNegocioPrincipal  6 T
(  T U
ActorSettings  U b
.  b c
Default  c j
.  j k
IdRolEmpleado  k x
,  x y
ActorSettings	  z á
.
  á à
Default
  à è
.
  è ê
IdRolVendedor
  ê ù
,
  ù û
true
  ü £
)
  £ §
.
  § •
ToList
  • ´
(
  ´ ¨
)
  ¨ ≠
)
  ≠ Æ
;
  Æ Ø
}"" 	
public$$ 
List$$ 
<$$ 
Empleado$$ 
>$$ &
ObtenerCompradoresVigentes$$ 8
($$8 9
)$$9 :
{%% 	
return&& 
Empleado&& 
.&& 
Convert&& #
(&&# $
_actorRepositorio&&$ 5
.&&5 6*
ObtenerActorDeNegocioPrincipal&&6 T
(&&T U
ActorSettings&&U b
.&&b c
Default&&c j
.&&j k
IdRolEmpleado&&k x
,&&x y
ActorSettings	&&z á
.
&&á à
Default
&&à è
.
&&è ê
IdRolComprador
&&ê û
,
&&û ü
true
&&† §
)
&&§ •
.
&&• ¶
ToList
&&¶ ¨
(
&&¨ ≠
)
&&≠ Æ
)
&&Æ Ø
;
&&Ø ∞
}(( 	
public)) 
DateTime)) 
FechaValidaParaBD)) )
())) *
DateTime))* 2
fechaNacimiento))3 B
)))B C
{** 	
DateTime,, !
fechaNacimientoValido,, *
;,,* +
DateTime-- 

dateNullBD-- 
=--  !
new--" %
DateTime--& .
(--. /
$num--/ 3
,--3 4
$num--5 7
,--7 8
$num--9 :
,--: ;
$num--< =
,--= >
$num--? @
,--@ A
$num--B C
)--C D
;--D E
int.. 
result.. 
=.. 
DateTime.. !
...! "
Compare.." )
(..) *

dateNullBD..* 4
,..4 5
fechaNacimiento..6 E
)..E F
;..F G
if00 
(00 
result00 
==00 
$num00 
)00 
{11 !
fechaNacimientoValido22 %
=22& '
DateTimeUtil22( 4
.224 5
FechaActual225 @
(22@ A
)22A B
;22B C
return33 !
fechaNacimientoValido33 ,
;33, -
}44 
return66 
fechaNacimiento66 "
;66" #
}77 	
public88 
OperationResult88 
CrearEmpleado88 ,
(88, -
string88- 3
codigo884 :
,88: ;
int88< ?$
idTipoDocumentoIdentidad88@ X
,88X Y
string88Z `$
numeroDocumentoIdentidad88a y
,88y z
string	88{ Å
apellidoPaterno
88Ç ë
,
88ë í
string
88ì ô
apellidoMaterno
88ö ©
,
88© ™
string
88´ ±
nombres
88≤ π
,
88π ∫
string
88ª ¡
correo
88¬ »
,
88» …
int
88  Õ
idClaseActor
88Œ ⁄
,
88⁄ €
int
88‹ ﬂ 
idEstadoLegalActor
88‡ Ú
,
88Ú Û
DateTime
88Ù ¸
fechaNacimiento
88˝ å
,
88å ç
string
88é î
telefono
88ï ù
,
88ù û
List
88ü £
<
88£ §
int
88§ ß
>
88ß ®
roles
88© Æ
,
88Æ Ø
List
88∞ ¥
<
88¥ µ
	Direccion
88µ æ
>
88æ ø
direcciones
88¿ À
)
88À Ã
{99 	
try:: 
{;; *
_validacionActorNegocio_Logica== .
.==. /(
ValidarExistenciaDeDocumento==/ K
(==K L$
idTipoDocumentoIdentidad==L d
,==d e$
numeroDocumentoIdentidad==f ~
)==~ 
;	== Ä
DateTime>> 
fechaActual>> $
=>>% &
DateTimeUtil>>' 3
.>>3 4
FechaActual>>4 ?
(>>? @
)>>@ A
;>>A B
DateTime?? 
fechaFin?? !
=??" #
fechaActual??$ /
.??/ 0
AddYears??0 8
(??8 9
ActorSettings??9 F
.??F G
Default??G N
.??N OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	??O Ü
)
??Ü á
;
??á à
telefono@@ 
=@@ 
telefono@@ #
??@@$ &
$str@@' )
;@@) *
correoAA 
=AA 
correoAA 
??AA  "
$strAA# %
;AA% &
ifFF 
(FF $
idTipoDocumentoIdentidadFF ,
==FF- /
ActorSettingsFF0 =
.FF= >
DefaultFF> E
.FFE F'
IdTipoDocumentoIdentidadDniFFF a
&&FFb d$
numeroDocumentoIdentidadFFe }
.FF} ~
Trim	FF~ Ç
(
FFÇ É
)
FFÉ Ñ
.
FFÑ Ö
Length
FFÖ ã
!=
FFå é
$num
FFè ê
)
FFê ë
throw
FFí ó
new
FFò õ
	Exception
FFú •
(
FF• ¶
$str
FF¶ „
)
FF„ ‰
;
FF‰ Â
ifGG 
(GG $
idTipoDocumentoIdentidadGG ,
==GG- /
ActorSettingsGG0 =
.GG= >
DefaultGG> E
.GGE F'
IdTipoDocumentoIdentidadRucGGF a
&&GGb d$
numeroDocumentoIdentidadGGe }
.GG} ~
Trim	GG~ Ç
(
GGÇ É
)
GGÉ Ñ
.
GGÑ Ö
Length
GGÖ ã
!=
GGå é
$num
GGè ë
)
GGë í
throw
GGì ò
new
GGô ú
	Exception
GGù ¶
(
GG¶ ß
$str
GGß Â
)
GGÂ Ê
;
GGÊ Á
codigoII 
=II 
codigoII 
??II  " 
ObtenerProximoCodigoII# 7
(II7 8
ActorSettingsII8 E
.IIE F
DefaultIIF M
.IIM N
IdRolEmpleadoIIN [
)II[ \
;II\ ]
Actor_negocioKK 
empleadoKK &
=KK' (
newKK) ,
Actor_negocioKK- :
(KK: ;
ActorSettingsKK; H
.KKH I
DefaultKKI P
.KKP Q
IdRolEmpleadoKKQ ^
,KK^ _
fechaActualKK` k
,KKk l
fechaFinKKm u
,KKu v
codigoKKw }
,KK} ~
true	KK É
,
KKÉ Ñ
false
KKÖ ä
,
KKä ã
$str
KKå é
)
KKé è
;
KKè ê
varMM 
primerNombreMM  
=MM! "
apellidoPaternoMM# 2
+MM3 4
$strMM5 8
+MM9 :
apellidoMaternoMM; J
+MMK L
$strMMM P
+MMQ R
nombresMMS Z
;MMZ [
varNN 
segundoNombreNN !
=NN" #
nombresNN$ +
+NN, -
$strNN. 1
+NN2 3
apellidoPaternoNN4 C
+NND E
$strNNF I
+NNJ K
apellidoMaternoNNL [
;NN[ \
varOO 
tercerNombreOO  
=OO! "
nombresOO# *
+OO+ ,
$strOO- 0
+OO1 2
apellidoPaternoOO3 B
.OOB C
	SubstringOOC L
(OOL M
$numOOM N
,OON O
$numOOP Q
)OOQ R
+OOS T
apellidoMaternoOOU d
.OOd e
	SubstringOOe n
(OOn o
$numOOo p
,OOp q
$numOOr s
)OOs t
;OOt u
ActorPP 
actorPP 
=PP 
newPP !
ActorPP" '
(PP' ($
idTipoDocumentoIdentidadPP( @
,PP@ A
FechaValidaParaBDPPB S
(PPS T
fechaNacimientoPPT c
)PPc d
,PPd e$
numeroDocumentoIdentidadPPf ~
,PP~ 
primerNombre
PPÄ å
,
PPå ç
segundoNombre
PPé õ
,
PPõ ú
telefono
PPù •
,
PP• ¶
ActorSettings
PPß ¥
.
PP¥ µ
Default
PPµ º
.
PPº Ω'
IdTipoActorPersonaNatural
PPΩ ÷
,
PP÷ ◊
ActorSettings
PPÿ Â
.
PPÂ Ê
Default
PPÊ Ì
.
PPÌ Ó#
IdFotoActorPorDefecto
PPÓ É
,
PPÉ Ñ
idClaseActor
PPÖ ë
,
PPë í 
idEstadoLegalActor
PPì •
,
PP• ¶
correo
PPß ≠
,
PP≠ Æ
tercerNombre
PPØ ª
,
PPª º
$str
PPΩ ø
)
PPø ¿
;
PP¿ ¡
actorRR 
.RR 
	DireccionRR 
=RR  !
direccionesRR" -
;RR- .
empleadoTT 
.TT 
ActorTT 
=TT  
actorTT! &
;TT& '
ifVV 
(VV 
rolesVV 
!=VV 
nullVV !
)VV! "
{WW 
foreachXX 
(XX 
varXX  
itemXX! %
inXX& (
rolesXX) .
)XX. /
{YY 
empleadoZZ  
.ZZ  !
ActorZZ! &
.ZZ& '
Actor_negocioZZ' 4
.ZZ4 5
AddZZ5 8
(ZZ8 9
newZZ9 <
Actor_negocioZZ= J
(ZZJ K
itemZZK O
,ZZO P
fechaActualZZQ \
,ZZ\ ]
fechaFinZZ^ f
,ZZf g
codigoZZh n
,ZZn o
trueZZp t
,ZZt u
falseZZv {
,ZZ{ |
$strZZ} 
)	ZZ Ä
)
ZZÄ Å
;
ZZÅ Ç
}[[ 
}\\ 
return]] 
_actor_Repositorio]] )
.]]) *
CrearActorNegocio]]* ;
(]]; <
empleado]]< D
)]]D E
;]]E F
}^^ 
catch__ 
(__ 
	Exception__ 
e__ 
)__ 
{`` 
throwaa 
newaa 
LogicaExceptionaa )
(aa) *
$straa* F
,aaF G
eaaG H
)aaH I
;aaI J
}bb 
}cc 	
publicdd 
OperationResultdd *
CrearEmpleadoActualizandoActordd =
(dd= >
intdd> A
idActorddB I
,ddI J
stringddK Q
codigoddR X
,ddX Y
intddZ ]$
idTipoDocumentoIdentidaddd^ v
,ddv w
stringddx ~%
numeroDocumentoIdentidad	dd ó
,
ddó ò
string
ddô ü
apellidoPaterno
dd† Ø
,
ddØ ∞
string
dd± ∑
apellidoMaterno
dd∏ «
,
dd« »
string
dd… œ
nombres
dd– ◊
,
dd◊ ÿ
string
ddŸ ﬂ
correo
dd‡ Ê
,
ddÊ Á
int
ddË Î
idClaseActor
ddÏ ¯
,
dd¯ ˘
int
dd˙ ˝ 
idEstadoLegalActor
dd˛ ê
,
ddê ë
DateTime
ddí ö
fechaNacimiento
ddõ ™
,
dd™ ´
string
dd¨ ≤
telefono
dd≥ ª
,
ddª º
List
ddΩ ¡
<
dd¡ ¬
int
dd¬ ≈
>
dd≈ ∆
roles
dd« Ã
,
ddÃ Õ
List
ddŒ “
<
dd“ ”
	Direccion
dd” ‹
>
dd‹ ›
direcciones
ddﬁ È
)
ddÈ Í
{ee 	
tryff 
{gg 
DateTimehh 
fechaActualhh $
=hh% &
DateTimeUtilhh' 3
.hh3 4
FechaActualhh4 ?
(hh? @
)hh@ A
;hhA B
DateTimeii 
fechaFinii !
=ii" #
fechaActualii$ /
.ii/ 0
AddYearsii0 8
(ii8 9
ActorSettingsii9 F
.iiF G
DefaultiiG N
.iiN OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	iiO Ü
)
iiÜ á
;
iiá à
telefonojj 
=jj 
telefonojj #
??jj$ &
$strjj' )
;jj) *
correokk 
=kk 
correokk 
??kk  "
$strkk# %
;kk% &
codigomm 
=mm 
codigomm 
??mm  " 
ObtenerProximoCodigomm# 7
(mm7 8
ActorSettingsmm8 E
.mmE F
DefaultmmF M
.mmM N
IdRolEmpleadommN [
)mm[ \
;mm\ ]
Actor_negociooo 
empleadooo &
=oo' (
newoo) ,
Actor_negociooo- :
(oo: ;
idActoroo; B
,ooB C
ActorSettingsooD Q
.ooQ R
DefaultooR Y
.ooY Z
IdRolEmpleadoooZ g
,oog h
fechaActualooi t
,oot u
fechaFinoov ~
,oo~ 
codigo
ooÄ Ü
,
ooÜ á
true
ooà å
,
ooå ç
false
ooé ì
,
ooì î
$str
ooï ó
,
ooó ò
null
ooô ù
)
ooù û
;
ooû ü
varqq 
primerNombreqq  
=qq! "
apellidoPaternoqq# 2
+qq3 4
$strqq5 8
+qq9 :
apellidoMaternoqq; J
+qqK L
$strqqM P
+qqQ R
nombresqqS Z
;qqZ [
varrr 
segundoNombrerr !
=rr" #
nombresrr$ +
+rr, -
$strrr. 1
+rr2 3
apellidoPaternorr4 C
+rrD E
$strrrF I
+rrJ K
apellidoMaternorrL [
;rr[ \
varss 
tercerNombress  
=ss! "
nombresss# *
+ss+ ,
$strss- 0
+ss1 2
apellidoPaternoss3 B
.ssB C
	SubstringssC L
(ssL M
$numssM N
,ssN O
$numssP Q
)ssQ R
+ssS T
apellidoMaternossU d
.ssd e
	Substringsse n
(ssn o
$numsso p
,ssp q
$numssr s
)sss t
;sst u
Actortt 
actortt 
=tt 
newtt !
Actortt" '
(tt' (
idActortt( /
,tt/ 0$
idTipoDocumentoIdentidadtt1 I
,ttI J
FechaValidaParaBDttK \
(tt\ ]
fechaNacimientott] l
)ttl m
,ttm n%
numeroDocumentoIdentidad	tto á
,
ttá à
primerNombre
ttâ ï
,
ttï ñ
segundoNombre
ttó §
,
tt§ •
telefono
tt¶ Æ
,
ttÆ Ø
ActorSettings
tt∞ Ω
.
ttΩ æ
Default
ttæ ≈
.
tt≈ ∆'
IdTipoActorPersonaNatural
tt∆ ﬂ
,
ttﬂ ‡
ActorSettings
tt· Ó
.
ttÓ Ô
Default
ttÔ ˆ
.
ttˆ ˜#
IdFotoActorPorDefecto
tt˜ å
,
ttå ç
idClaseActor
tté ö
,
ttö õ 
idEstadoLegalActor
ttú Æ
,
ttÆ Ø
correo
tt∞ ∂
,
tt∂ ∑
tercerNombre
tt∏ ƒ
,
ttƒ ≈
$str
tt∆ »
)
tt» …
;
tt…  
actorvv 
.vv 
	Direccionvv 
=vv  !
direccionesvv" -
;vv- .
empleadoxx 
.xx 
Actorxx 
=xx  
actorxx! &
;xx& '
ifzz 
(zz 
roleszz 
!=zz 
nullzz !
)zz! "
{{{ 
foreach|| 
(|| 
var||  
item||! %
in||& (
roles||) .
)||. /
{}} 
empleado~~  
.~~  !
Actor~~! &
.~~& '
Actor_negocio~~' 4
.~~4 5
Add~~5 8
(~~8 9
new~~9 <
Actor_negocio~~= J
(~~J K
item~~K O
,~~O P
fechaActual~~Q \
,~~\ ]
fechaFin~~^ f
,~~f g
codigo~~h n
,~~n o
true~~p t
,~~t u
false~~v {
,~~{ |
$str~~} 
)	~~ Ä
)
~~Ä Å
;
~~Å Ç
} 
}
ÄÄ 
return
ÅÅ 
_actorRepositorio
ÅÅ (
.
ÅÅ( )0
"CrearActorNegocioActualizandoActor
ÅÅ) K
(
ÅÅK L
empleado
ÅÅL T
)
ÅÅT U
;
ÅÅU V
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ 
e
ÉÉ 
)
ÉÉ 
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
LogicaException
ÖÖ )
(
ÖÖ) *
$str
ÖÖ* \
,
ÖÖ\ ]
e
ÖÖ] ^
)
ÖÖ^ _
;
ÖÖ_ `
}
ÜÜ 
}
áá 	
public
ââ 
OperationResult
ââ  
ActualizarEmpleado
ââ 1
(
ââ1 2
int
ââ2 5

idEmpleado
ââ6 @
,
ââ@ A
int
ââB E
idActor
ââF M
,
ââM N
string
ââO U
codigo
ââV \
,
ââ\ ]
int
ââ^ a&
idTipoDocumentoIdentidad
ââb z
,
ââz {
stringââ| Ç(
numeroDocumentoIdentidadââÉ õ
,ââõ ú
stringââù £
apellidoPaternoââ§ ≥
,ââ≥ ¥
stringââµ ª
apellidoMaternoââº À
,ââÀ Ã
stringââÕ ”
nombresââ‘ €
,ââ€ ‹
stringââ› „
correoââ‰ Í
,ââÍ Î
intââÏ Ô
idClaseActorââ ¸
,ââ¸ ˝
intââ˛ Å"
idEstadoLegalActorââÇ î
,ââî ï
DateTimeââñ û
fechaNacimientoââü Æ
,ââÆ Ø
stringââ∞ ∂
telefonoââ∑ ø
,ââø ¿
Listââ¡ ≈
<ââ≈ ∆
intââ∆ …
>ââ…  
rolesââÀ –
,ââ– —
Listââ“ ÷
<ââ÷ ◊
	Direccionââ◊ ‡
>ââ‡ ·
direccionesââ‚ Ì
)ââÌ Ó
{
ää 	
try
ãã 
{
åå 
DateTime
çç 
fechaActual
çç $
=
çç% &
DateTimeUtil
çç' 3
.
çç3 4
FechaActual
çç4 ?
(
çç? @
)
çç@ A
;
ççA B
DateTime
éé 
fechaFin
éé !
=
éé" #
fechaActual
éé$ /
.
éé/ 0
AddYears
éé0 8
(
éé8 9
ActorSettings
éé9 F
.
ééF G
Default
ééG N
.
ééN OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaééO Ü
)ééÜ á
;ééá à
telefono
êê 
=
êê 
telefono
êê #
??
êê$ &
$str
êê' )
;
êê) *
correo
ëë 
=
ëë 
correo
ëë 
??
ëë  "
$str
ëë# %
;
ëë% &
codigo
íí 
=
íí 
codigo
íí 
??
íí  "&
numeroDocumentoIdentidad
íí# ;
;
íí; <
Actor_negocio
îî 
empleado
îî &
=
îî' (
new
îî) ,
Actor_negocio
îî- :
(
îî: ;

idEmpleado
îî; E
,
îîE F
idActor
îîG N
,
îîN O
ActorSettings
îîP ]
.
îî] ^
Default
îî^ e
.
îîe f
IdRolEmpleado
îîf s
,
îîs t
fechaActualîîu Ä
,îîÄ Å
fechaFinîîÇ ä
,îîä ã
codigoîîå í
,îîí ì
trueîîî ò
,îîò ô
falseîîö ü
,îîü †
$strîî° £
)îî£ §
;îî§ •
var
ññ 
primerNombre
ññ  
=
ññ! "
apellidoPaterno
ññ# 2
+
ññ3 4
$str
ññ5 8
+
ññ9 :
apellidoMaterno
ññ; J
+
ññK L
$str
ññM P
+
ññQ R
nombres
ññS Z
;
ññZ [
var
óó 
segundoNombre
óó !
=
óó" #
nombres
óó$ +
+
óó, -
$str
óó. 1
+
óó2 3
apellidoPaterno
óó4 C
+
óóD E
$str
óóF I
+
óóJ K
apellidoMaterno
óóL [
;
óó[ \
var
òò 
tercerNombre
òò  
=
òò! "
nombres
òò# *
+
òò+ ,
$str
òò- 0
+
òò1 2
apellidoPaterno
òò3 B
.
òòB C
	Substring
òòC L
(
òòL M
$num
òòM N
,
òòN O
$num
òòP Q
)
òòQ R
+
òòS T
apellidoMaterno
òòU d
.
òòd e
	Substring
òòe n
(
òòn o
$num
òòo p
,
òòp q
$num
òòr s
)
òòs t
;
òòt u
Actor
ôô 
actor
ôô 
=
ôô 
new
ôô !
Actor
ôô" '
(
ôô' (
idActor
ôô( /
,
ôô/ 0&
idTipoDocumentoIdentidad
ôô1 I
,
ôôI J
FechaValidaParaBD
ôôK \
(
ôô\ ]
fechaNacimiento
ôô] l
)
ôôl m
,
ôôm n'
numeroDocumentoIdentidadôôo á
,ôôá à
primerNombreôôâ ï
,ôôï ñ
segundoNombreôôó §
,ôô§ •
telefonoôô¶ Æ
,ôôÆ Ø
ActorSettingsôô∞ Ω
.ôôΩ æ
Defaultôôæ ≈
.ôô≈ ∆)
IdTipoActorPersonaNaturalôô∆ ﬂ
,ôôﬂ ‡
ActorSettingsôô· Ó
.ôôÓ Ô
DefaultôôÔ ˆ
.ôôˆ ˜%
IdFotoActorPorDefectoôô˜ å
,ôôå ç
idClaseActorôôé ö
,ôôö õ"
idEstadoLegalActorôôú Æ
,ôôÆ Ø
correoôô∞ ∂
,ôô∂ ∑
tercerNombreôô∏ ƒ
,ôôƒ ≈
$strôô∆ »
)ôô» …
;ôô…  
actor
õõ 
.
õõ 
	Direccion
õõ 
=
õõ  !
direcciones
õõ" -
;
õõ- .
empleado
ùù 
.
ùù 
Actor
ùù 
=
ùù  
actor
ùù! &
;
ùù& '
if
üü 
(
üü 
roles
üü 
!=
üü 
null
üü !
)
üü! "
{
†† 
foreach
°° 
(
°° 
var
°°  
item
°°! %
in
°°& (
roles
°°) .
)
°°. /
{
¢¢ 
empleado
££  
.
££  !
Actor
££! &
.
££& '
Actor_negocio
££' 4
.
££4 5
Add
££5 8
(
££8 9
new
££9 <
Actor_negocio
££= J
(
££J K
idActor
££K R
,
££R S
item
££T X
,
££X Y
fechaActual
££Z e
,
££e f
fechaFin
££g o
,
££o p
codigo
££q w
,
££w x
true
££y }
,
££} ~
false££ Ñ
,££Ñ Ö
$str££Ü à
,££à â
null££ä é
)££é è
)££è ê
;££ê ë
}
§§ 
}
•• 
var
¶¶ )
resultadoActualizarEmpleado
¶¶ /
=
¶¶/ 0 
_actor_Repositorio
¶¶1 C
.
¶¶C D$
ActualizarActorNegocio
¶¶D Z
(
¶¶Z [
empleado
¶¶[ c
)
¶¶c d
;
¶¶d e
return
ßß )
resultadoActualizarEmpleado
ßß 2
;
ßß2 3
}
®® 
catch
©© 
(
©© 
	Exception
©© 
e
©© 
)
©© 
{
™™ 
throw
´´ 
new
´´ 
LogicaException
´´ )
(
´´) *
$str
´´* K
,
´´K L
e
´´L M
)
´´M N
;
´´N O
}
¨¨ 
}
≠≠ 	
public
ØØ 
Empleado
ØØ 
ObtenerEmpleado
ØØ '
(
ØØ' (
int
ØØ( +
id
ØØ, .
)
ØØ. /
{
∞∞ 	
try
±± 
{
≤≤ 
Actor_negocio
≥≥ 
actorNegocio
≥≥ *
=
≥≥+ ,
_actorRepositorio
≥≥- >
.
≥≥> ?#
obtenerActorDeNegocio
≥≥? T
(
≥≥T U
id
≥≥U W
,
≥≥W X
ActorSettings
≥≥Y f
.
≥≥f g
Default
≥≥g n
.
≥≥n o
IdRolEmpleado
≥≥o |
)
≥≥| }
;
≥≥} ~
return
¥¥ 
new
¥¥ 
Empleado
¥¥ #
(
¥¥# $
actorNegocio
¥¥$ 0
)
¥¥0 1
;
¥¥1 2
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
e
∏∏ 
;
∏∏ 
}
ππ 
}
∫∫ 	
public
ªª 
List
ªª 
<
ªª 
Empleado
ªª 
>
ªª &
ObtenerEmpleadosVigentes
ªª 6
(
ªª6 7
)
ªª7 8
{
ºº 	
try
ΩΩ 
{
ΩΩ 
return
ΩΩ 
Empleado
ΩΩ !
.
ΩΩ! "
Convert
ΩΩ" )
(
ΩΩ) * 
_actor_Repositorio
ΩΩ* <
.
ΩΩ< =6
(ObtenerActorDeNegocioPorRolVigentesAhora
ΩΩ= e
(
ΩΩe f
ActorSettings
ΩΩf s
.
ΩΩs t
Default
ΩΩt {
.
ΩΩ{ |
IdRolEmpleadoΩΩ| â
)ΩΩâ ä
.ΩΩä ã
ToListΩΩã ë
(ΩΩë í
)ΩΩí ì
)ΩΩì î
;ΩΩî ï
}ΩΩñ ó
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
ææ  !
throw
ææ" '
e
ææ( )
;
ææ) *
}
ææ+ ,
}
øø 	
public
¡¡ 
OperationResult
¡¡ 
EstablecerUsuario
¡¡ 0
(
¡¡0 1
string
¡¡1 7
	idUsuario
¡¡8 A
,
¡¡A B
int
¡¡C F

idEmpleado
¡¡G Q
)
¡¡Q R
{
¬¬ 	
try
√√ 
{
ƒƒ 
return
≈≈ 
_actorRepositorio
≈≈ (
.
≈≈( )!
establecerIdUsuario
≈≈) <
(
≈≈< =
	idUsuario
≈≈= F
,
≈≈F G

idEmpleado
≈≈H R
)
≈≈R S
;
≈≈S T
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
e
…… 
;
…… 
}
   
}
ÀÀ 	
public
œœ 
OperationResult
œœ 
DarDeBajaEmpleado
œœ 0
(
œœ0 1
int
œœ1 4

idEmpleado
œœ5 ?
)
œœ? @
{
–– 	
try
—— 
{
““ 
return
””  
_actor_Repositorio
”” )
.
””) *(
DarDeBajaActorNegocioAhora
””* D
(
””D E

idEmpleado
””E O
,
””O P
ActorSettings
””Q ^
.
””^ _
Default
””_ f
.
””f g
IdRolEmpleado
””g t
)
””t u
;
””u v
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’ 
e
’’ 
)
’’ 
{
÷÷ 
throw
◊◊ 
e
◊◊ 
;
◊◊ 
}
ÿÿ 
}
ŸŸ 	
public
⁄⁄ 
int
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ 1
#obtenerAccionesPosiblesParaEmpleado
⁄⁄ 8
(
⁄⁄8 9
string
⁄⁄9 ?
	idUsuario
⁄⁄@ I
,
⁄⁄I J
int
⁄⁄K N
idTipoTransaccion
⁄⁄O `
)
⁄⁄` a
{
€€ 	
try
‹‹ 
{
›› 
return
ﬁﬁ 
_actorRepositorio
ﬁﬁ (
.
ﬁﬁ( )%
obtenerAccionesPosibles
ﬁﬁ) @
(
ﬁﬁ@ A
	idUsuario
ﬁﬁA J
,
ﬁﬁJ K
idTipoTransaccion
ﬁﬁL ]
)
ﬁﬁ] ^
;
ﬁﬁ^ _
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
·· 
throw
‚‚ 
e
‚‚ 
;
‚‚ 
}
„„ 
}
‰‰ 	
public
ÂÂ 
int
ÂÂ 
[
ÂÂ 
]
ÂÂ (
ObtenerIdsAccionesPosibles
ÂÂ /
(
ÂÂ/ 0
string
ÂÂ0 6
	idUsuario
ÂÂ7 @
,
ÂÂ@ A
int
ÂÂB E

idEmpleado
ÂÂF P
)
ÂÂP Q
{
ÊÊ 	
try
ÁÁ 
{
ËË 
throw
ÈÈ 
new
ÈÈ %
NotImplementedException
ÈÈ 1
(
ÈÈ1 2
)
ÈÈ2 3
;
ÈÈ3 4
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
e
ÎÎ 
)
ÎÎ 
{
ÏÏ 
throw
ÌÌ 
e
ÌÌ 
;
ÌÌ 
}
ÓÓ 
}
ÔÔ 	
}
ÒÒ 
}ÚÚ ˝‹
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ActorNegocioLogica_Proveedor.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ActorNegocioLogica +
{ 
public 
OperationResult 
CrearProveedor -
(- .
int. 1
idTipoPersona2 ?
,? @
stringA G
razonSocialH S
,S T
stringU [
apellidoPaterno\ k
,k l
stringm s
apellidoMaterno	t É
,
É Ñ
string
Ö ã
nombres
å ì
,
ì î
string
ï õ
nombreComercial
ú ´
,
´ ¨
string
≠ ≥
nombreCorto
¥ ø
,
ø ¿
int
¡ ƒ&
idTipoDocumentoIdentidad
≈ ›
,
› ﬁ
string $
numeroDocumentoIdentidad +
,+ ,
int- 0
?0 1
idClaseActor2 >
,> ?
int@ C
?C D
idEstadoLegalActorE W
,W X
stringY _
correo` f
,f g
stringh n
telefonoo w
,w x
Listy }
<} ~
	Direccion	~ á
>
á à
direcciones
â î
)
î ï
{ 	
try 
{ *
_validacionActorNegocio_Logica .
.. /(
ValidarExistenciaDeDocumento/ K
(K L$
idTipoDocumentoIdentidadL d
,d e$
numeroDocumentoIdentidadf ~
)~ 
;	 Ä
DateTime 
fechaActual $
=% &
DateTimeUtil' 3
.3 4
FechaActual4 ?
(? @
)@ A
;A B
DateTime 
fechaFin !
=" #
fechaActual$ /
./ 0
AddYears0 8
(8 9
ActorSettings9 F
.F G
DefaultG N
.N O?
2vigenciaEnAnyosPorDefectoDeActorDeNegocioProveedor	O Å
)
Å Ç
;
Ç É
telefono 
= 
telefono #
??$ &
$str' )
;) *
correo 
= 
correo 
??  "
$str# %
;% &
if 
( 
idTipoPersona !
==" $
ActorSettings% 2
.2 3
Default3 :
.: ;%
IdTipoActorPersonaNatural; T
)T U
{ 
idClaseActor  
=! "
idClaseActor# /
!=0 2
null3 7
?8 9
idClaseActor: F
:G H
ActorSettingsI V
.V W
DefaultW ^
.^ _1
$IdClaseActorPersonaNaturalPorDefecto	_ É
;
É Ñ
idEstadoLegalActor   &
=  ' (
idEstadoLegalActor  ) ;
!=  < >
null  ? C
?  D E
idEstadoLegalActor  F X
:  Y Z
ActorSettings  [ h
.  h i
Default  i p
.  p q7
*IdEstadoLegalActorPersonaNaturalPorDefecto	  q õ
;
  õ ú
razonSocial!! 
=!!  !
apellidoPaterno!!" 1
+!!2 3
$str!!4 7
+!!8 9
apellidoMaterno!!: I
+!!J K
$str!!L O
+!!P Q
nombres!!R Y
;!!Y Z
}"" 
else## 
if## 
(## 
idTipoPersona## &
==##' )
ActorSettings##* 7
.##7 8
Default##8 ?
.##? @&
IdTipoActorPersonaJuridica##@ Z
)##Z [
{$$ 
idClaseActor%%  
=%%! "
idClaseActor%%# /
!=%%0 2
null%%3 7
?%%8 9
idClaseActor%%: F
:%%G H
ActorSettings%%I V
.%%V W
Default%%W ^
.%%^ _2
%IdClaseActorPersonaJuridicaPorDefecto	%%_ Ñ
;
%%Ñ Ö
idEstadoLegalActor&& &
=&&' (
idEstadoLegalActor&&) ;
!=&&< >
null&&? C
?&&D E
idEstadoLegalActor&&F X
:&&Y Z
ActorSettings&&[ h
.&&h i
Default&&i p
.&&p q8
+IdEstadoLegalActorPersonaJuridicaPorDefecto	&&q ú
;
&&ú ù
}'' 
else(( 
{)) 
idClaseActor**  
=**! "
idClaseActor**# /
!=**0 2
null**3 7
?**8 9
idClaseActor**: F
:**G H
ActorSettings**I V
.**V W
Default**W ^
.**^ _1
$IdClaseActorEntidadInternaPorDefecto	**_ É
;
**É Ñ
idEstadoLegalActor++ &
=++' (
idEstadoLegalActor++) ;
!=++< >
null++? C
?++D E
idEstadoLegalActor++F X
:++Y Z
ActorSettings++[ h
.++h i
Default++i p
.++p q7
*IdEstadoLegalActorEntidadInternaPorDefecto	++q õ
;
++õ ú
},, 
if.. 
(.. $
idTipoDocumentoIdentidad.. ,
==..- /
ActorSettings..0 =
...= >
Default..> E
...E F'
IdTipoDocumentoIdentidadDni..F a
&&..b d$
numeroDocumentoIdentidad..e }
...} ~
Trim	..~ Ç
(
..Ç É
)
..É Ñ
.
..Ñ Ö
Length
..Ö ã
!=
..å é
$num
..è ê
)
..ê ë
throw
..í ó
new
..ò õ
	Exception
..ú •
(
..• ¶
$str
..¶ „
)
..„ ‰
;
..‰ Â
if// 
(// $
idTipoDocumentoIdentidad// ,
==//- /
ActorSettings//0 =
.//= >
Default//> E
.//E F'
IdTipoDocumentoIdentidadRuc//F a
&&//b d$
numeroDocumentoIdentidad//e }
.//} ~
Trim	//~ Ç
(
//Ç É
)
//É Ñ
.
//Ñ Ö
Length
//Ö ã
!=
//å é
$num
//è ë
)
//ë í
throw
//ì ò
new
//ô ú
	Exception
//ù ¶
(
//¶ ß
$str
//ß Â
)
//Â Ê
;
//Ê Á
string11 
codigo11 
=11  
ObtenerProximoCodigo11  4
(114 5
ActorSettings115 B
.11B C
Default11C J
.11J K
IdRolProveedor11K Y
)11Y Z
;11Z [
Actor_negocio33 
	proveedor33 '
=33( )
new33* -
Actor_negocio33. ;
(33; <
ActorSettings33< I
.33I J
Default33J Q
.33Q R
IdRolProveedor33R `
,33` a
fechaActual33b m
,33m n
fechaFin33o w
,33w x
codigo33y 
,	33 Ä
true
33Å Ö
,
33Ö Ü
false
33á å
,
33å ç
$str
33é ê
)
33ê ë
;
33ë í
Actor66 
actor66 
=66 
new66 !
Actor66" '
(66' ($
idTipoDocumentoIdentidad66( @
,66@ A
fechaActual66B M
,66M N$
numeroDocumentoIdentidad66O g
,66g h
razonSocial66i t
,66t u
nombreComercial	66v Ö
,
66Ö Ü
telefono
66á è
,
66è ê
idTipoPersona
66ë û
,
66û ü
ActorSettings77 !
.77! "
Default77" )
.77) *!
IdFotoActorPorDefecto77* ?
,77? @
(77A B
int77B E
)77E F
idClaseActor77F R
,77R S
(77T U
int77U X
)77X Y
idEstadoLegalActor77Y k
,77k l
correo77m s
,77s t
nombreCorto	77u Ä
,
77Ä Å
$str
77Ç Ñ
)
77Ñ Ö
;
77Ö Ü
if99 
(99 
direcciones99 
!=99  "
null99# '
)99' (
{:: 
actor;; 
.;; 
	Direccion;; #
=;;$ %
direcciones;;& 1
;;;1 2
}<< 
	proveedor>> 
.>> 
Actor>> 
=>>  !
actor>>" '
;>>' (
returnAA 
_actor_RepositorioAA )
.AA) *
CrearActorNegocioAA* ;
(AA; <
	proveedorAA< E
)AAE F
;AAF G
}BB 
catchCC 
(CC 
	ExceptionCC 
eCC 
)CC 
{DD 
returnEE 
newEE 
OperationResultEE *
(EE* +
eEE+ ,
)EE, -
;EE- .
}FF 
}GG 	
publicHH 
OperationResultHH +
CrearProveedorActualizandoActorHH >
(HH> ?
intHH? B
idActorHHC J
,HHJ K
intHHL O
idTipoActorHHP [
,HH[ \
stringHH] c
razonSocialHHd o
,HHo p
stringHHq w
apellidoPaterno	HHx á
,
HHá à
string
HHâ è
apellidoMaterno
HHê ü
,
HHü †
string
HH° ß
nombres
HH® Ø
,
HHØ ∞
string
HH± ∑
nombreComercial
HH∏ «
,
HH« »
string
HH… œ
nombreCorto
HH– €
,
HH€ ‹
intII $
idTipoDocumentoIdentidadII (
,II( )
stringII* 0$
numeroDocumentoIdentidadII1 I
,III J
intIIK N
?IIN O
idClaseActorIIP \
,II\ ]
intII^ a
?IIa b
idEstadoLegalActorIIc u
,IIu v
stringIIw }
correo	II~ Ñ
,
IIÑ Ö
string
IIÜ å
telefono
IIç ï
,
IIï ñ
List
IIó õ
<
IIõ ú
	Direccion
IIú •
>
II• ¶
direcciones
IIß ≤
)
II≤ ≥
{JJ 	
tryKK 
{LL 
DateTimeMM 
fechaActualMM $
=MM% &
DateTimeUtilMM' 3
.MM3 4
FechaActualMM4 ?
(MM? @
)MM@ A
;MMA B
DateTimeNN 
fechaFinNN !
=NN" #
fechaActualNN$ /
.NN/ 0
AddYearsNN0 8
(NN8 9
ActorSettingsNN9 F
.NNF G
DefaultNNG N
.NNN O?
2vigenciaEnAnyosPorDefectoDeActorDeNegocioProveedor	NNO Å
)
NNÅ Ç
;
NNÇ É
telefonoOO 
=OO 
telefonoOO #
??OO$ &
$strOO' )
;OO) *
correoPP 
=PP 
correoPP 
??PP  "
$strPP# %
;PP% &
ifRR 
(RR 
idTipoActorRR 
==RR  "
ActorSettingsRR# 0
.RR0 1
DefaultRR1 8
.RR8 9%
IdTipoActorPersonaNaturalRR9 R
)RRR S
{SS 
idClaseActorTT  
=TT! "
idClaseActorTT# /
!=TT0 2
nullTT3 7
?TT8 9
idClaseActorTT: F
:TTG H
ActorSettingsTTI V
.TTV W
DefaultTTW ^
.TT^ _1
$IdClaseActorPersonaNaturalPorDefecto	TT_ É
;
TTÉ Ñ
idEstadoLegalActorUU &
=UU' (
idEstadoLegalActorUU) ;
!=UU< >
nullUU? C
?UUD E
idEstadoLegalActorUUF X
:UUY Z
ActorSettingsUU[ h
.UUh i
DefaultUUi p
.UUp q7
*IdEstadoLegalActorPersonaNaturalPorDefecto	UUq õ
;
UUõ ú
razonSocialVV 
=VV  !
apellidoPaternoVV" 1
+VV2 3
$strVV4 7
+VV8 9
apellidoMaternoVV: I
+VVJ K
$strVVL O
+VVP Q
nombresVVR Y
;VVY Z
}WW 
elseXX 
ifXX 
(XX 
idTipoActorXX $
==XX% '
ActorSettingsXX( 5
.XX5 6
DefaultXX6 =
.XX= >&
IdTipoActorPersonaJuridicaXX> X
)XXX Y
{YY 
idClaseActorZZ  
=ZZ! "
idClaseActorZZ# /
!=ZZ0 2
nullZZ3 7
?ZZ8 9
idClaseActorZZ: F
:ZZG H
ActorSettingsZZI V
.ZZV W
DefaultZZW ^
.ZZ^ _2
%IdClaseActorPersonaJuridicaPorDefecto	ZZ_ Ñ
;
ZZÑ Ö
idEstadoLegalActor[[ &
=[[' (
idEstadoLegalActor[[) ;
!=[[< >
null[[? C
?[[D E
idEstadoLegalActor[[F X
:[[Y Z
ActorSettings[[[ h
.[[h i
Default[[i p
.[[p q8
+IdEstadoLegalActorPersonaJuridicaPorDefecto	[[q ú
;
[[ú ù
}\\ 
else]] 
{^^ 
idClaseActor__  
=__! "
idClaseActor__# /
!=__0 2
null__3 7
?__8 9
idClaseActor__: F
:__G H
ActorSettings__I V
.__V W
Default__W ^
.__^ _1
$IdClaseActorEntidadInternaPorDefecto	___ É
;
__É Ñ
idEstadoLegalActor`` &
=``' (
idEstadoLegalActor``) ;
!=``< >
null``? C
?``D E
idEstadoLegalActor``F X
:``Y Z
ActorSettings``[ h
.``h i
Default``i p
.``p q7
*IdEstadoLegalActorEntidadInternaPorDefecto	``q õ
;
``õ ú
}aa 
stringcc 
codigocc 
=cc  
ObtenerProximoCodigocc  4
(cc4 5
ActorSettingscc5 B
.ccB C
DefaultccC J
.ccJ K
IdRolProveedorccK Y
)ccY Z
;ccZ [
Actor_negocioee 
	proveedoree '
=ee( )
newee* -
Actor_negocioee. ;
(ee; <
idActoree< C
,eeC D
ActorSettingseeE R
.eeR S
DefaulteeS Z
.eeZ [
IdRolProveedoree[ i
,eei j
fechaActualeek v
,eev w
fechaFin	eex Ä
,
eeÄ Å
codigo
eeÇ à
,
eeà â
true
eeä é
,
eeé è
false
eeê ï
,
eeï ñ
$str
eeó ô
,
eeô ö
null
eeú †
)
ee† °
;
ee° ¢
Actorgg 
actorgg 
=gg 
newgg !
Actorgg" '
(gg' (
idActorgg( /
,gg/ 0$
idTipoDocumentoIdentidadgg1 I
,ggI J
fechaActualggK V
,ggV W$
numeroDocumentoIdentidadggX p
,ggp q
razonSocialggr }
,gg} ~
nombreComercial	gg é
,
ggé è
telefono
ggê ò
,
ggò ô
idTipoActor
ggö •
,
gg• ¶
ActorSettingshh !
.hh! "
Defaulthh" )
.hh) *!
IdFotoActorPorDefectohh* ?
,hh? @
(hhA B
inthhB E
)hhE F
idClaseActorhhF R
,hhR S
(hhT U
inthhU X
)hhX Y
idEstadoLegalActorhhY k
,hhk l
correohhm s
,hhs t
nombreCorto	hhu Ä
,
hhÄ Å
$str
hhÇ Ñ
)
hhÑ Ö
;
hhÖ Ü
ifjj 
(jj 
direccionesjj 
!=jj  "
nulljj# '
)jj' (
{kk 
actorll 
.ll 
	Direccionll #
=ll$ %
direccionesll& 1
;ll1 2
}mm 
	proveedoroo 
.oo 
Actoroo 
=oo  !
actoroo" '
;oo' (
returnqq 
_actorRepositorioqq (
.qq( ).
"CrearActorNegocioActualizandoActorqq) K
(qqK L
	proveedorqqL U
)qqU V
;qqV W
}rr 
catchss 
(ss 
	Exceptionss 
ess 
)ss 
{tt 
returnuu 
newuu 
OperationResultuu *
(uu* +
euu+ ,
)uu, -
;uu- .
}vv 
}ww 	
publicyy 
OperationResultyy 
ActualizarProveedoryy 2
(yy2 3
intyy3 6
idProveedoryy7 B
,yyB C
intyyD G
idActoryyH O
,yyO P
stringyyQ W
codigoyyX ^
,yy^ _
intyy` c
idTipoActoryyd o
,yyo p
stringyyq w
razonSocial	yyx É
,
yyÉ Ñ
string
yyÖ ã
apellidoPaterno
yyå õ
,
yyõ ú
string
yyù £
apellidoMaterno
yy§ ≥
,
yy≥ ¥
string
yyµ ª
nombres
yyº √
,
yy√ ƒ
string
yy≈ À
nombreComercial
yyÃ €
,
yy€ ‹
stringzz 
nombreCortozz 
,zz 
intzz  #$
idTipoDocumentoIdentidadzz$ <
,zz< =
stringzz> D$
numeroDocumentoIdentidadzzE ]
,zz] ^
intzz_ b
?zzb c
idClaseActorzzd p
,zzp q
intzzr u
?zzu v
idEstadoLegalActor	zzw â
,
zzâ ä
string
zzã ë
correo
zzí ò
,
zzò ô
string
zzö †
telefono
zz° ©
,
zz© ™
List
zz´ Ø
<
zzØ ∞
	Direccion
zz∞ π
>
zzπ ∫
direcciones
zzª ∆
)
zz∆ «
{{{ 	
try|| 
{}} 
DateTime~~ 
fechaActual~~ $
=~~% &
DateTimeUtil~~' 3
.~~3 4
FechaActual~~4 ?
(~~? @
)~~@ A
;~~A B
DateTime 
fechaFin !
=" #
fechaActual$ /
./ 0
AddYears0 8
(8 9
ActorSettings9 F
.F G
DefaultG N
.N O?
2vigenciaEnAnyosPorDefectoDeActorDeNegocioProveedor	O Å
)
Å Ç
;
Ç É
telefono
ÄÄ 
=
ÄÄ 
telefono
ÄÄ #
??
ÄÄ$ &
$str
ÄÄ' )
;
ÄÄ) *
correo
ÅÅ 
=
ÅÅ 
correo
ÅÅ 
??
ÅÅ  "
$str
ÅÅ# %
;
ÅÅ% &
codigo
ÇÇ 
=
ÇÇ 
codigo
ÇÇ 
??
ÇÇ  "
$str
ÇÇ# %
;
ÇÇ% &
if
ÑÑ 
(
ÑÑ 
idTipoActor
ÑÑ 
==
ÑÑ  "
ActorSettings
ÑÑ# 0
.
ÑÑ0 1
Default
ÑÑ1 8
.
ÑÑ8 9'
IdTipoActorPersonaNatural
ÑÑ9 R
)
ÑÑR S
{
ÖÖ 
idClaseActor
ÜÜ  
=
ÜÜ! "
idClaseActor
ÜÜ# /
!=
ÜÜ0 2
null
ÜÜ3 7
?
ÜÜ8 9
idClaseActor
ÜÜ: F
:
ÜÜG H
ActorSettings
ÜÜI V
.
ÜÜV W
Default
ÜÜW ^
.
ÜÜ^ _3
$IdClaseActorPersonaNaturalPorDefectoÜÜ_ É
;ÜÜÉ Ñ 
idEstadoLegalActor
áá &
=
áá' ( 
idEstadoLegalActor
áá) ;
!=
áá< >
null
áá? C
?
ááD E 
idEstadoLegalActor
ááF X
:
ááY Z
ActorSettings
áá[ h
.
ááh i
Default
áái p
.
ááp q9
*IdEstadoLegalActorPersonaNaturalPorDefectoááq õ
;ááõ ú
razonSocial
àà 
=
àà  !
apellidoPaterno
àà" 1
+
àà2 3
$str
àà4 7
+
àà8 9
apellidoMaterno
àà: I
+
ààJ K
$str
ààL O
+
ààP Q
nombres
ààR Y
;
ààY Z
}
ââ 
else
ää 
if
ää 
(
ää 
idTipoActor
ää $
==
ää% '
ActorSettings
ää( 5
.
ää5 6
Default
ää6 =
.
ää= >(
IdTipoActorPersonaJuridica
ää> X
)
ääX Y
{
ãã 
idClaseActor
åå  
=
åå! "
idClaseActor
åå# /
!=
åå0 2
null
åå3 7
?
åå8 9
idClaseActor
åå: F
:
ååG H
ActorSettings
ååI V
.
ååV W
Default
ååW ^
.
åå^ _4
%IdClaseActorPersonaJuridicaPorDefectoåå_ Ñ
;ååÑ Ö 
idEstadoLegalActor
çç &
=
çç' ( 
idEstadoLegalActor
çç) ;
!=
çç< >
null
çç? C
?
ççD E 
idEstadoLegalActor
ççF X
:
ççY Z
ActorSettings
çç[ h
.
ççh i
Default
ççi p
.
ççp q:
+IdEstadoLegalActorPersonaJuridicaPorDefectoççq ú
;ççú ù
}
éé 
else
èè 
{
êê 
idClaseActor
ëë  
=
ëë! "
idClaseActor
ëë# /
!=
ëë0 2
null
ëë3 7
?
ëë8 9
idClaseActor
ëë: F
:
ëëG H
ActorSettings
ëëI V
.
ëëV W
Default
ëëW ^
.
ëë^ _3
$IdClaseActorEntidadInternaPorDefectoëë_ É
;ëëÉ Ñ 
idEstadoLegalActor
íí &
=
íí' ( 
idEstadoLegalActor
íí) ;
!=
íí< >
null
íí? C
?
ííD E 
idEstadoLegalActor
ííF X
:
ííY Z
ActorSettings
íí[ h
.
ííh i
Default
ííi p
.
ííp q9
*IdEstadoLegalActorEntidadInternaPorDefectoííq õ
;ííõ ú
}
ìì 
Actor_negocio
ññ 
	proveedor
ññ '
=
ññ( )
new
ññ* -
Actor_negocio
ññ. ;
(
ññ; <
idProveedor
ññ< G
,
ññG H
idActor
ññI P
,
ññP Q
ActorSettings
ññR _
.
ññ_ `
Default
ññ` g
.
ññg h
IdRolProveedor
ññh v
,
ññv w
fechaActualññx É
,ññÉ Ñ
fechaFinññÖ ç
,ññç é
codigoññè ï
,ññï ñ
trueññó õ
,ññõ ú
falseññù ¢
,ññ¢ £
$strññ§ ¶
)ññ¶ ß
;ññß ®
Actor
òò 
actor
òò 
=
òò 
new
òò !
Actor
òò" '
(
òò' (
idActor
òò( /
,
òò/ 0&
idTipoDocumentoIdentidad
òò1 I
,
òòI J
fechaActual
òòK V
,
òòV W&
numeroDocumentoIdentidad
òòX p
,
òòp q
razonSocial
òòr }
,
òò} ~
nombreComercialòò é
,òòé è
telefono
ôô 
,
ôô 
idTipoActor
ôô )
,
ôô) *
ActorSettings
öö !
.
öö! "
Default
öö" )
.
öö) *#
IdFotoActorPorDefecto
öö* ?
,
öö? @
(
ööA B
int
ööB E
)
ööE F
idClaseActor
ööF R
,
ööR S
(
ööT U
int
ööU X
)
ööX Y 
idEstadoLegalActor
ööY k
,
öök l
correo
ööm s
,
öös t
nombreCortoööu Ä
,ööÄ Å
$strööÇ Ñ
)ööÑ Ö
;ööÖ Ü
if
úú 
(
úú 
direcciones
úú 
!=
úú  "
null
úú# '
)
úú' (
{
ùù 
actor
ûû 
.
ûû 
	Direccion
ûû #
=
ûû$ %
direcciones
ûû& 1
;
ûû1 2
}
üü 
	proveedor
°° 
.
°° 
Actor
°° 
=
°°  !
actor
°°" '
;
°°' (
return
££  
_actor_Repositorio
££ )
.
££) *$
ActualizarActorNegocio
££* @
(
££@ A
	proveedor
££A J
)
££J K
;
££K L
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
e
•• 
)
•• 
{
¶¶ 
return
ßß 
new
ßß 
OperationResult
ßß *
(
ßß* +
e
ßß+ ,
)
ßß, -
;
ßß- .
}
®® 
}
©© 	
public
™™ 
OperationResult
™™  
DarDeBajaProveedor
™™ 1
(
™™1 2
int
™™2 5
idProveedor
™™6 A
)
™™A B
{
´´ 	
try
¨¨ 
{
≠≠ 
return
ÆÆ  
_actor_Repositorio
ÆÆ )
.
ÆÆ) *(
DarDeBajaActorNegocioAhora
ÆÆ* D
(
ÆÆD E
idProveedor
ÆÆE P
,
ÆÆP Q
ActorSettings
ÆÆR _
.
ÆÆ_ `
Default
ÆÆ` g
.
ÆÆg h
IdRolProveedor
ÆÆh v
)
ÆÆv w
;
ÆÆw x
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
e
∞∞ 
)
∞∞ 
{
±± 
throw
≤≤ 
e
≤≤ 
;
≤≤ 
}
≥≥ 
}
¥¥ 	
public
∏∏ 
List
∏∏ 
<
∏∏ 
	Proveedor
∏∏ 
>
∏∏  
ObtenerProveedores
∏∏ 1
(
∏∏1 2
)
∏∏2 3
{
ππ 	
try
∫∫ 
{
ªª 
return
ºº 
	Proveedor
ºº  
.
ºº  !
Convert
ºº! (
(
ºº( )
_actorRepositorio
ºº) :
.
ºº: ;C
5obtenerActorDeNegocioIncluidoActorPorRolVigentesAhora
ºº; p
(
ººp q
ActorSettings
ººq ~
.
ºº~ 
Defaultºº Ü
.ººÜ á
IdRolProveedorººá ï
)ººï ñ
.ººñ ó
ToListººó ù
(ººù û
)ººû ü
)ººü †
;ºº† °
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
øø 
throw
¿¿ 
e
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 	
public
ƒƒ 
List
ƒƒ 
<
ƒƒ 
	Proveedor
ƒƒ 
>
ƒƒ (
ObtenerProveedoresVigentes
ƒƒ 9
(
ƒƒ9 :
)
ƒƒ: ;
{
≈≈ 	
try
∆∆ 
{
«« 
return
»» 
	Proveedor
»»  
.
»»  !
Convert
»»! (
(
»»( ) 
_actor_Repositorio
»») ;
.
»»; <6
(ObtenerActorDeNegocioPorRolVigentesAhora
»»< d
(
»»d e
ActorSettings
»»e r
.
»»r s
Default
»»s z
.
»»z {
IdRolProveedor»»{ â
)»»â ä
.»»ä ã
ToList»»ã ë
(»»ë í
)»»í ì
)»»ì î
;»»î ï
}
…… 
catch
   
(
   
	Exception
   
e
   
)
   
{
ÀÀ 
throw
ÃÃ 
e
ÃÃ 
;
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
public
–– 
	Proveedor
–– 
ObtenerProveedor
–– )
(
––) *
int
––* -
id
––. 0
)
––0 1
{
—— 	
try
““ 
{
”” 
Actor_negocio
‘‘ 
actorNegocio
‘‘ *
=
‘‘+ ,
_actorRepositorio
‘‘- >
.
‘‘> ?#
obtenerActorDeNegocio
‘‘? T
(
‘‘T U
id
‘‘U W
,
‘‘W X
ActorSettings
‘‘Y f
.
‘‘f g
Default
‘‘g n
.
‘‘n o
IdRolProveedor
‘‘o }
)
‘‘} ~
;
‘‘~ 
return
’’ 
new
’’ 
	Proveedor
’’ $
(
’’$ %
actorNegocio
’’% 1
)
’’1 2
;
’’2 3
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
ŸŸ 
e
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
}
€€ 	
public
›› 
async
›› 
Task
›› 
<
›› 
List
›› 
<
›› 
ItemGenerico
›› +
>
››+ ,
>
››, -:
,ObtenerProveedoresVigentesComoItemsGenericos
››. Z
(
››Z [
)
››[ \
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
var
·· 
proveedores
·· 
=
··  !
(
··" #
await
··# (
_actorRepositorio
··) :
.
··: ;R
DObtenerActoresDeNegocioPrincipalesVigentesComoItemsGenericosPorIdRol
··; 
(·· Ä
ActorSettings··Ä ç
.··ç é
Default··é ï
.··ï ñ
IdRolProveedor··ñ §
)··§ •
)··• ¶
.··¶ ß
ToList··ß ≠
(··≠ Æ
)··Æ Ø
;··Ø ∞
proveedores
‚‚ 
.
‚‚ 
ForEach
‚‚ #
(
‚‚# $
p
‚‚$ %
=>
‚‚& (
p
‚‚) *
.
‚‚* +
Nombre
‚‚+ 1
=
‚‚2 3
p
‚‚4 5
.
‚‚5 6
Nombre
‚‚6 <
.
‚‚< =
Replace
‚‚= D
(
‚‚D E
$str
‚‚E H
,
‚‚H I
$str
‚‚J M
)
‚‚M N
)
‚‚N O
;
‚‚O P
return
„„ 
proveedores
„„ "
;
„„" #
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
e
ÁÁ 
;
ÁÁ 
}
ËË 
}
ÈÈ 	
}
ÏÏ 
}ÔÔ è°
KD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Almacen.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public   
List   
<   
Detalle_transaccion   '
>  ' (4
(CalcularDetallesDeMovimientoDeMercaderia  ) Q
(  Q R
int  R U
	idAlmacen  V _
,  _ `
int  a d4
'idTipoTransaccionMovimientoDeMercaderia	  e å
,
  å ç
List
  é í
<
  í ì!
Detalle_transaccion
  ì ¶
>
  ¶ ß
detallesOrden
  ® µ
,
  µ ∂$
UserProfileSessionData
  ∑ Õ
sesionUsuario
  Œ €
,
  € ‹
long
  › ·'
idOperacionMovientoOrigen
  ‚ ˚
,
  ˚ ¸
bool
  ˝ Å,
detallesDeMovimientoDesdeOrden
  Ç †
)
  † °
{!! 	
List"" 
<"" 
Detalle_transaccion"" $
>""$ % 
detallesDeMovimiento""& :
=""; <
new""= @
List""A E
<""E F
Detalle_transaccion""F Y
>""Y Z
(""Z [
)""[ \
;""\ ]
if$$ 
($$ 
Diccionario$$ 
.$$ O
CTiposDeTransaccionMovimientoDeBienesConCostoUnitarioSegunInventario$$ _
.$$_ `
Contains$$` h
($$h i4
'idTipoTransaccionMovimientoDeMercaderia	$$i ê
)
$$ê ë
)
$$ë í
{%% 
var'' )
idTransaccionInventarioactual'' 1
=''2 3
sesionUsuario''4 A
.''A B%
ObtenerIdInventarioActual''B [
(''[ \
	idAlmacen''\ e
)''e f
;''f g
List)) 
<)) 
Detalle_transaccion)) (
>))( )$
detallesInventarioactual))* B
=))C D"
transaccionRepositorio))E [
.))[ \&
ObtenerDetallesTransaccion))\ v
())v w*
idTransaccionInventarioactual	))w î
,
))î ï
detallesOrden
))ñ £
.
))£ §
Select
))§ ™
(
))™ ´
d
))´ ¨
=>
))≠ Ø
d
))∞ ±
.
))± ≤!
id_concepto_negocio
))≤ ≈
)
))≈ ∆
.
))∆ «
ToArray
))« Œ
(
))Œ œ
)
))œ –
)
))– —
.
))— “
ToList
))“ ÿ
(
))ÿ Ÿ
)
))Ÿ ⁄
;
))⁄ €
foreach++ 
(++ 
var++ 
detalle++ $
in++% '
detallesOrden++( 5
)++5 6
{,, 
var-- 
nuevoDetalle-- $
=--% &
detalle--' .
.--. /
Clone--/ 4
(--4 5
)--5 6
;--6 7
var.. 
detalleInventario.. )
=..* +$
detallesInventarioactual.., D
...D E
Single..E K
(..K L
dif..L O
=>..P R
dif..S V
...V W
id_concepto_negocio..W j
==..k m
nuevoDetalle..n z
...z { 
id_concepto_negocio	..{ é
)
..é è
;
..è ê
nuevoDetalle//  
.//  !
precio_unitario//! 0
=//1 2
detalleInventario//3 D
.//D E
precio_unitario//E T
;//T U
nuevoDetalle00  
.00  !
total00! &
=00' (
nuevoDetalle00) 5
.005 6
cantidad006 >
*00? @
nuevoDetalle00A M
.00M N
precio_unitario00N ]
;00] ^ 
detallesDeMovimiento11 (
.11( )
Add11) ,
(11, -
nuevoDetalle11- 9
)119 :
;11: ;
}22 
}33 
else55 
if55 
(55 
Diccionario55  
.55  !Q
ETiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeLaOrden55! f
.55f g
Contains55g o
(55o p4
'idTipoTransaccionMovimientoDeMercaderia	55p ó
)
55ó ò
)
55ò ô
{66  
detallesDeMovimiento77 $
=77% &
Detalle_transaccion77' :
.77: ;
Clone77; @
(77@ A
detallesOrden77A N
)77N O
;77O P
foreach88 
(88 
var88 
detalle88 $
in88% ' 
detallesDeMovimiento88( <
)88< =
{99 
detalle:: 
.:: 
total:: !
=::" #
TransaccionSettings::$ 7
.::7 8
Default::8 ?
.::? @
AplicaLeyAmazonia::@ Q
?::R S
detalle::T [
.::[ \
total::\ a
:::b c
detalle::d k
.::k l
total::l q
-::r s
detalle::t {
.::{ |
igv::| 
;	:: Ä
detalle;; 
.;; 
precio_unitario;; +
=;;, -
detalle;;. 5
.;;5 6
total;;6 ;
/;;< =
detalle;;> E
.;;E F
cantidad;;F N
;;;N O
}<< 
}== 
else?? 
if?? 
(?? 
Diccionario??  
.??  !g
[TiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeMovimientoDeTransaccionOrigen??! |
.??| }
Contains	??} Ö
(
??Ö Ü5
'idTipoTransaccionMovimientoDeMercaderia
??Ü ≠
)
??≠ Æ
)
??Æ Ø
{@@ 
varAA -
!detallesMovimientoOperacionOrigenAA 5
=AA6 7"
transaccionRepositorioAA8 N
.AAN O&
ObtenerDetallesTransaccionAAO i
(AAi j&
idOperacionMovientoOrigen	AAj É
)
AAÉ Ñ
.
AAÑ Ö
ToList
AAÖ ã
(
AAã å
)
AAå ç
;
AAç é
ifCC 
(CC *
detallesDeMovimientoDesdeOrdenCC 2
||CC3 53
'idTipoTransaccionMovimientoDeMercaderiaCC6 ]
==CC^ `
TransaccionSettingsCCa t
.CCt u
DefaultCCu |
.CC| }N
AIdTipoDeTransaccionIngresoDeMercaderiaPorDevolucionPorItemEnVenta	CC} æ
||
CCø ¡5
'idTipoTransaccionMovimientoDeMercaderia
CC¬ È
==
CCÍ Ï!
TransaccionSettings
CCÌ Ä
.
CCÄ Å
Default
CCÅ à
.
CCà âO
AIdTipoDeTransaccionSalidaDeMercaderiaPorDevolucionPorItemEnCompra
CCâ  
)
CC  À
{DD 
foreachEE 
(EE 
varEE  
detalleOrdenEE! -
inEE. 0
detallesOrdenEE1 >
)EE> ?
{FF 
ifGG 
(GG 
detalleOrdenGG (
.GG( )
cantidadGG) 1
>GG2 3
$numGG4 5
)GG5 6
{HH 
varII 
nuevoDetalleII  ,
=II- .
detalleOrdenII/ ;
.II; <
CloneII< A
(IIA B
)IIB C
;IIC D
varJJ "
detalleOperacionOrigenJJ  6
=JJ7 8-
!detallesMovimientoOperacionOrigenJJ9 Z
.JJZ [
SingleJJ[ a
(JJa b
difJJb e
=>JJf h
difJJi l
.JJl m 
id_concepto_negocio	JJm Ä
==
JJÅ É
nuevoDetalle
JJÑ ê
.
JJê ë!
id_concepto_negocio
JJë §
)
JJ§ •
;
JJ• ¶
nuevoDetalleKK (
.KK( )
precio_unitarioKK) 8
=KK9 :"
detalleOperacionOrigenKK; Q
.KKQ R
precio_unitarioKKR a
;KKa b
nuevoDetalleLL (
.LL( )
totalLL) .
=LL/ 0
nuevoDetalleLL1 =
.LL= >
cantidadLL> F
*LLG H
nuevoDetalleLLI U
.LLU V
precio_unitarioLLV e
;LLe f 
detallesDeMovimientoMM 0
.MM0 1
AddMM1 4
(MM4 5
nuevoDetalleMM5 A
)MMA B
;MMB C
}NN 
}OO 
}PP 
elseQQ 
{RR  
detallesDeMovimientoSS (
=SS) *
Detalle_transaccionSS+ >
.SS> ?
CloneSS? D
(SSD E-
!detallesMovimientoOperacionOrigenSSE f
)SSf g
.SSg h
ToListSSh n
(SSn o
)SSo p
;SSp q
}UU 
}VV 
returnWW  
detallesDeMovimientoWW '
;WW' (
}XX 	
privateee 
Transaccionee .
"GenerarSalidaDeMercaderiaParaVentaee >
(ee> ?
Transaccionee? J
ventaeeK P
,eeP Q
inteeR U

idEmpleadoeeV `
,ee` a
inteeb e
idCentroAtencioneef v
,eev w
inteex {
	idCliente	ee| Ö
,
eeÖ Ü
string
eeá ç(
codigoDeSalidaDeMercaderia
eeé ®
,
ee® ©
DateTime
ee™ ≤
fechaRegistro
ee≥ ¿
,
ee¿ ¡!
MovimientoDeAlmacen
ee¬ ’ 
salidaDeMercaderia
ee÷ Ë
,
eeË È$
UserProfileSessionData
eeÍ Ä
sesionDeUsuario
eeÅ ê
)
eeê ë
{ff 	
vargg 
observaciongg 
=gg 
(gg 
Stringgg %
.gg% &
IsNullOrEmptygg& 3
(gg3 4
salidaDeMercaderiagg4 F
.ggF G
ObservacionggG R
(ggR S
)ggS T
)ggT U
||ggV X
StringggY _
.gg_ `
IsNullOrWhiteSpacegg` r
(ggr s
salidaDeMercaderia	ggs Ö
.
ggÖ Ü
Observacion
ggÜ ë
(
ggë í
)
ggí ì
)
ggì î
)
ggî ï
?
ggñ ó
$str
ggò °
:
gg¢ £ 
salidaDeMercaderia
gg§ ∂
.
gg∂ ∑
Observacion
gg∑ ¬
(
gg¬ √
)
gg√ ƒ
;
ggƒ ≈
Transaccionii $
salidaMercaderiaPorVentaii 0
=ii1 2
newii3 6
Transaccionii7 B
(iiB C&
codigoDeSalidaDeMercaderiaiiC ]
,ii] ^
nullii_ c
,iic d
fechaRegistroiie r
,iir s 
TransaccionSettings	iit á
.
iiá à
Default
iià è
.
iiè ê3
%IdTipoTransaccionSalidaBienesPorVenta
iiê µ
,
iiµ ∂
venta
ii∑ º
.
iiº Ω
id_unidad_negocio
iiΩ Œ
,
iiŒ œ
true
ii– ‘
,
ii‘ ’
fechaRegistro
ii÷ „
,
ii„ ‰
fechaRegistro
iiÂ Ú
,
iiÚ Û
observacion
iiÙ ˇ
,
iiˇ Ä
fechaRegistro
iiÅ é
,
iié è

idEmpleado
iiê ö
,
iiö õ
venta
iiú °
.
ii° ¢
importe_total
ii¢ Ø
,
iiØ ∞
idCentroAtencion
ii± ¡
,
ii¡ ¬
venta
ii√ »
.
ii» …
	id_moneda
ii… “
,
ii“ ”
venta
ii‘ Ÿ
.
iiŸ ⁄
tipo_cambio
ii⁄ Â
,
iiÂ Ê
null
iiÁ Î
,
iiÎ Ï
	idCliente
iiÌ ˆ
)
iiˆ ˜
{jj 
Comprobantell 
=ll $
GenerarComprobantePropioll 6
(ll6 7
salidaDeMercaderiall7 I
.llI J
IdSerieSeleccionadallJ ]
,ll] ^
salidaDeMercaderiall_ q
.llq r
NumeroIngresado	llr Å
)
llÅ Ç
}mm 
;mm 
varoo  
detallesDeMovimientooo $
=oo% &4
(CalcularDetallesDeMovimientoDeMercaderiaoo' O
(ooO P
idCentroAtencionooP `
,oo` a
TransaccionSettingsoob u
.oou v
Defaultoov }
.oo} ~2
%IdTipoTransaccionSalidaBienesPorVenta	oo~ £
,
oo£ § 
salidaDeMercaderia
oo• ∑
.
oo∑ ∏ 
DetalleTransaccion
oo∏  
(
oo  À
)
ooÀ Ã
,
ooÃ Õ
sesionDeUsuario
ooŒ ›
,
oo› ﬁ
$num
ooﬂ ‡
,
oo‡ ·
false
oo‚ Á
)
ooÁ Ë
;
ooË È$
salidaMercaderiaPorVentaqq $
.qq$ %
AgregarDetallesqq% 4
(qq4 5 
detallesDeMovimientoqq5 I
)qqI J
;qqJ K
salidaDeMercaderiass 
.ss 
DocumentoReferenciass 2
=ss3 4
ventass5 :
.ss: ;
Comprobantess; F
.ssF G
numero_seriessG S
+ssT U
$strssV Y
+ssZ [
ventass\ a
.ssa b
Comprobantessb m
.ssm n
numerossn t
;sst u$
salidaMercaderiaPorVentatt $
=tt% &)
ResolverParametrosTransacciontt' D
(ttD E$
salidaMercaderiaPorVentattE ]
,tt] ^
salidaDeMercaderiatt_ q
.ttq r 
FechaInicioTraslado	ttr Ö
,
ttÖ Ü 
salidaDeMercaderia
ttá ô
.
ttô ö
IdTransportista
ttö ©
,
tt© ™ 
salidaDeMercaderia
tt´ Ω
.
ttΩ æ
Placa
ttæ √
,
tt√ ƒ 
salidaDeMercaderia
tt≈ ◊
.
tt◊ ÿ
IdConductor
ttÿ „
,
tt„ ‰ 
salidaDeMercaderia
ttÂ ˜
.
tt˜ ¯
NumeroLicencia
tt¯ Ü
,
ttÜ á 
salidaDeMercaderia
ttà ö
.
ttö õ#
IdModalidadTransporte
ttõ ∞
,
tt∞ ± 
salidaDeMercaderia
tt≤ ƒ
.
ttƒ ≈
IdMotivoTraslado
tt≈ ’
,
tt’ ÷
null
tt◊ €
,
tt€ ‹ 
salidaDeMercaderia
tt› Ô
.
ttÔ 
PesoBrutoTotal
tt ˛
,
tt˛ ˇ 
salidaDeMercaderia
ttÄ í
.
ttí ì
NumeroBultos
ttì ü
,
ttü † 
salidaDeMercaderia
tt° ≥
.
tt≥ ¥
DireccionOrigen
tt¥ √
,
tt√ ƒ 
salidaDeMercaderia
tt≈ ◊
.
tt◊ ÿ
IdUbigeoOrigen
ttÿ Ê
,
ttÊ Á 
salidaDeMercaderia
ttË ˙
.
tt˙ ˚
DireccionDestino
tt˚ ã
,
ttã å 
salidaDeMercaderia
ttç ü
.
ttü †
IdUbigeoDestino
tt† Ø
,
ttØ ∞ 
salidaDeMercaderia
tt± √
.
tt√ ƒ!
DocumentoReferencia
ttƒ ◊
)
tt◊ ÿ
;
ttÿ Ÿ
Estado_transaccionvv &
estadoDeLaSalidaMercaderiavv 9
=vv: ;
newvv< ?
Estado_transaccionvv@ R
(vvR S

idEmpleadovvS ]
,vv] ^
MaestroSettingsvv_ n
.vvn o
Defaultvvo v
.vvv w-
 IdDetalleMaestroEstadoConfirmado	vvw ó
,
vvó ò
fechaRegistro
vvô ¶
,
vv¶ ß
$str
vv® ˇ
)
vvˇ Ä
;
vvÄ Å$
salidaMercaderiaPorVentaww $
.ww$ %
Estado_transaccionww% 7
.ww7 8
Addww8 ;
(ww; <&
estadoDeLaSalidaMercaderiaww< V
)wwV W
;wwW X
returnxx $
salidaMercaderiaPorVentaxx +
;xx+ ,
}yy 	
private
ää 
Transaccion
ää +
GenerarMovimientoDeMercaderia
ää 9
(
ää9 :
Transaccion
ää: E
	operacion
ääF O
,
ääO P
int
ääQ T

idEmpleado
ääU _
,
ää_ `
int
ääa d
	idAlmacen
ääe n
,
ään o
int
ääp s
	idTercero
äät }
,
ää} ~
intää Ç7
'idTipoTransaccionMovimientoDeMercaderiaääÉ ™
,ää™ ´
DateTimeää¨ ¥
fechaRegistroääµ ¬
,ää¬ √
stringääƒ  
observacionääÀ ÷
,ää÷ ◊
Listääÿ ‹
<ää‹ ›#
Detalle_transaccionää› 
>ää Ò
detallesääÚ ˙
,ää˙ ˚&
UserProfileSessionDataää¸ í
sesionDeUsuarioääì ¢
,ää¢ £
longää§ ®+
idOperacionMovimientoOrigenää© ƒ
)ääƒ ≈
{
ãã 	
string
éé 
codigo
éé 
=
éé %
codigosOperacion_Logica
éé 3
.
éé3 43
%ObtenerSiguienteCodigoParaFacturacion
éé4 Y
(
ééY Z
	operacion
ééZ c
.
ééc d
codigo
ééd j
+
éék l
$str
éém p
+
ééq r
Diccionario
éés ~
.
éé~ 6
'MapeoTipoTransaccionVsCodigoDeOperacionéé ¶
.éé¶ ß
Singleééß ≠
(éé≠ Æ
mééÆ Ø
=>éé∞ ≤
méé≥ ¥
.éé¥ µ
Keyééµ ∏
==ééπ ª7
'idTipoTransaccionMovimientoDeMercaderiaééº „
)éé„ ‰
.éé‰ Â
ValueééÂ Í
,ééÍ Î7
'idTipoTransaccionMovimientoDeMercaderiaééÏ ì
)ééì î
;ééî ï
Transaccion
êê $
movimientoDeMercaderia
êê .
=
êê/ 0
new
êê1 4
Transaccion
êê5 @
(
êê@ A
codigo
êêA G
,
êêG H
null
êêI M
,
êêM N
fechaRegistro
êêO \
,
êê\ ]6
'idTipoTransaccionMovimientoDeMercaderiaêê^ Ö
,êêÖ Ü
	operacionêêá ê
.êêê ë!
id_unidad_negocioêêë ¢
,êê¢ £
trueêê§ ®
,êê® ©
fechaRegistroêê™ ∑
,êê∑ ∏
fechaRegistroêêπ ∆
,êê∆ «
observacionêê» ”
,êê” ‘
fechaRegistroêê’ ‚
,êê‚ „

idEmpleadoêê‰ Ó
,êêÓ Ô
	operacionêê ˘
.êê˘ ˙
importe_totalêê˙ á
,êêá à
	idAlmacenêêâ í
,êêí ì
	operacionêêî ù
.êêù û
	id_monedaêêû ß
,êêß ®
	operacionêê© ≤
.êê≤ ≥
tipo_cambioêê≥ æ
,êêæ ø
nullêê¿ ƒ
,êêƒ ≈
	idTerceroêê∆ œ
)êêœ –
{
ëë 
Comprobante
ìì 
=
ìì 
	operacion
ìì '
.
ìì' (
Comprobante
ìì( 3
}
îî 
;
îî 
var
óó "
detallesDeMovimiento
óó $
=
óó% &6
(CalcularDetallesDeMovimientoDeMercaderia
óó' O
(
óóO P
	idAlmacen
óóP Y
,
óóY Z6
'idTipoTransaccionMovimientoDeMercaderiaóó[ Ç
,óóÇ É
detallesóóÑ å
,óóå ç
sesionDeUsuarioóóé ù
,óóù û+
idOperacionMovimientoOrigenóóü ∫
,óó∫ ª
falseóóº ¡
)óó¡ ¬
;óó¬ √$
movimientoDeMercaderia
ôô "
.
ôô" #
AgregarDetalles
ôô# 2
(
ôô2 3"
detallesDeMovimiento
ôô3 G
)
ôôG H
;
ôôH I 
Estado_transaccion
üü +
estadoDelMovimientoMercaderia
üü <
=
üü= >
new
üü? B 
Estado_transaccion
üüC U
(
üüU V

idEmpleado
üüV `
,
üü` a
MaestroSettings
üüb q
.
üüq r
Default
üür y
.
üüy z/
 IdDetalleMaestroEstadoConfirmadoüüz ö
,üüö õ
fechaRegistroüüú ©
,üü© ™
$strüü´ ˝
)üü˝ ˛
;üü˛ ˇ$
movimientoDeMercaderia
†† "
.
††" # 
Estado_transaccion
††# 5
.
††5 6
Add
††6 9
(
††9 :+
estadoDelMovimientoMercaderia
††: W
)
††W X
;
††X Y
return
¢¢ $
movimientoDeMercaderia
¢¢ )
;
¢¢) *
}
££ 	
private
ßß 
Transaccion
ßß +
GenerarMovimientoDeMercaderia
ßß 9
(
ßß9 :
Transaccion
ßß: E
	operacion
ßßF O
,
ßßO P
int
ßßQ T

idEmpleado
ßßU _
,
ßß_ `
int
ßßa d
idCentroAtencion
ßße u
,
ßßu v
int
ßßw z
	idTerceroßß{ Ñ
,ßßÑ Ö
intßßÜ â7
'idTipoTransaccionMovimientoDeMercaderiaßßä ±
,ßß± ≤
DateTimeßß≥ ª
fechaRegistroßßº …
,ßß…  
stringßßÀ —
observacionßß“ ›
,ßß› ﬁ
Listßßﬂ „
<ßß„ ‰"
DetalleDeOperacionßß‰ ˆ
>ßßˆ ˜
detallesßß¯ Ä
,ßßÄ Å&
UserProfileSessionDataßßÇ ò
sesionDeUsuarioßßô ®
,ßß® ©
longßß™ Æ+
idOperacionMovimientoOrigenßßØ  
)ßß  À
{
®® 	
List
™™ 
<
™™ !
Detalle_transaccion
™™ $
>
™™$ %+
detallesTransaccionSoloBienes
™™& C
=
™™D E
detalles
™™F N
.
™™N O
Where
™™O T
(
™™T U
d
™™U V
=>
™™W Y
d
™™Z [
.
™™[ \
Producto
™™\ d
.
™™d e
EsBien
™™e k
)
™™k l
.
™™l m
Select
™™m s
(
™™s t
d
™™t u
=>
™™v x
d
™™y z
.
™™z {!
DetalleTransaccion™™{ ç
(™™ç é
)™™é è
)™™è ê
.™™ê ë
ToList™™ë ó
(™™ó ò
)™™ò ô
;™™ô ö
return
ÆÆ +
GenerarMovimientoDeMercaderia
ÆÆ 0
(
ÆÆ0 1
	operacion
ÆÆ1 :
,
ÆÆ: ;

idEmpleado
ÆÆ< F
,
ÆÆF G
idCentroAtencion
ÆÆH X
,
ÆÆX Y
	idTercero
ÆÆZ c
,
ÆÆc d6
'idTipoTransaccionMovimientoDeMercaderiaÆÆe å
,ÆÆå ç
fechaRegistroÆÆé õ
,ÆÆõ ú
observacionÆÆù ®
,ÆÆ® ©-
detallesTransaccionSoloBienesÆÆ™ «
,ÆÆ« »
sesionDeUsuarioÆÆ… ÿ
,ÆÆÿ Ÿ+
idOperacionMovimientoOrigenÆÆ⁄ ı
)ÆÆı ˆ
;ÆÆˆ ˜
}
ØØ 	
private
¥¥ 
Transaccion
¥¥ +
ResolverParametrosTransaccion
¥¥ 9
(
¥¥9 :
Transaccion
¥¥: E"
movimientoMercaderia
¥¥F Z
,
¥¥Z [
DateTime
¥¥\ d#
fechaInicioTransporte
¥¥e z
,
¥¥z {
int
¥¥| 
idTransportista¥¥Ä è
,¥¥è ê
string¥¥ë ó
placaTransporte¥¥ò ß
,¥¥ß ®
int¥¥© ¨
idConductor¥¥≠ ∏
,¥¥∏ π
string¥¥∫ ¿(
numeroLicenciaTransporte¥¥¡ Ÿ
,¥¥Ÿ ⁄
int¥¥€ ﬁ&
idModalidadTransaporte¥¥ﬂ ı
,¥¥ı ˆ
int¥¥˜ ˙#
idMotivoTransaporte¥¥˚ é
,¥¥é è
string¥¥ê ñ!
descripcionMotivo¥¥ó ®
,¥¥® ©
decimal¥¥™ ±
pesoBrutoTotal¥¥≤ ¿
,¥¥¿ ¡
int¥¥¬ ≈
numeroBultos¥¥∆ “
,¥¥“ ”
string¥¥‘ ⁄'
direccionOrigenTraslado¥¥€ Ú
,¥¥Ú Û
int¥¥Ù ˜&
idUbigeoOrigenTraslado¥¥¯ é
,¥¥é è
string¥¥ê ñ(
direccionDestinoTraslado¥¥ó Ø
,¥¥Ø ∞
int¥¥± ¥'
idUbigeoDestinoTraslado¥¥µ Ã
,¥¥Ã Õ
string¥¥Œ ‘#
documentoReferencia¥¥’ Ë
)¥¥Ë È
{
µµ 	
if
∑∑ 
(
∑∑ %
direccionOrigenTraslado
∑∑ '
!=
∑∑( *
null
∑∑+ /
)
∑∑/ 0
{
∏∏ "
movimientoMercaderia
ππ $
.
ππ$ %#
Parametro_transaccion
ππ% :
.
ππ: ;
Add
ππ; >
(
ππ> ?
new
ππ? B#
Parametro_transaccion
ππC X
(
ππX Y
MaestroSettings
ππY h
.
ππh i
Default
ππi p
.
ππp q?
0IdDetalleMaestroParametroDireccionOrigenTrasladoππq °
,ππ° ¢'
direccionOrigenTrasladoππ£ ∫
.ππ∫ ª
ToStringππª √
(ππ√ ƒ
)ππƒ ≈
)ππ≈ ∆
)ππ∆ «
;ππ« »
}
∫∫ 
if
ªª 
(
ªª &
direccionDestinoTraslado
ªª (
!=
ªª) +
null
ªª, 0
)
ªª0 1
{
ºº "
movimientoMercaderia
ΩΩ $
.
ΩΩ$ %#
Parametro_transaccion
ΩΩ% :
.
ΩΩ: ;
Add
ΩΩ; >
(
ΩΩ> ?
new
ΩΩ? B#
Parametro_transaccion
ΩΩC X
(
ΩΩX Y
MaestroSettings
ΩΩY h
.
ΩΩh i
Default
ΩΩi p
.
ΩΩp q@
1IdDetalleMaestroParametroDireccionDestinoTrasladoΩΩq ¢
,ΩΩ¢ £(
direccionDestinoTrasladoΩΩ§ º
.ΩΩº Ω
ToStringΩΩΩ ≈
(ΩΩ≈ ∆
)ΩΩ∆ «
)ΩΩ« »
)ΩΩ» …
;ΩΩ…  
}
ææ 
if
øø 
(
øø #
fechaInicioTransporte
øø %
!=
øø& (
null
øø) -
)
øø- .
{
¿¿ "
movimientoMercaderia
¡¡ $
.
¡¡$ %#
Parametro_transaccion
¡¡% :
.
¡¡: ;
Add
¡¡; >
(
¡¡> ?
new
¡¡? B#
Parametro_transaccion
¡¡C X
(
¡¡X Y
MaestroSettings
¡¡Y h
.
¡¡h i
Default
¡¡i p
.
¡¡p q=
.IdDetalleMaestroParametroFechaInicioTransporte¡¡q ü
,¡¡ü †%
fechaInicioTransporte¡¡° ∂
.¡¡∂ ∑
ToString¡¡∑ ø
(¡¡ø ¿
)¡¡¿ ¡
)¡¡¡ ¬
)¡¡¬ √
;¡¡√ ƒ
}
¬¬ 
if
√√ 
(
√√ $
idModalidadTransaporte
√√ &
==
√√' )
MaestroSettings
√√* 9
.
√√9 :
Default
√√: A
.
√√A BB
4IdDetalleMaestroModalidadDeTrasladoTransportePublico
√√B v
)
√√v w
{
ƒƒ 
if
≈≈ 
(
≈≈ 
idTransportista
≈≈ #
!=
≈≈$ &
$num
≈≈' (
)
≈≈( )
{
∆∆ "
movimientoMercaderia
«« (
.
««( )#
Parametro_transaccion
««) >
.
««> ?
Add
««? B
(
««B C
new
««C F#
Parametro_transaccion
««G \
(
««\ ]
MaestroSettings
««] l
.
««l m
Default
««m t
.
««t u7
(IdDetalleMaestroParametroIdTransportista««u ù
,««ù û
idTransportista««ü Æ
.««Æ Ø
ToString««Ø ∑
(««∑ ∏
)««∏ π
)««π ∫
)««∫ ª
;««ª º
}
»» 
}
…… 
if
   
(
   $
idModalidadTransaporte
   &
==
  ' )
MaestroSettings
  * 9
.
  9 :
Default
  : A
.
  A BB
4IdDetalleMaestroModalidadDeTrasladoTransportePrivado
  B v
)
  v w
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
idConductor
ÃÃ 
!=
ÃÃ  "
$num
ÃÃ# $
)
ÃÃ$ %
{
ÕÕ "
movimientoMercaderia
ŒŒ (
.
ŒŒ( )#
Parametro_transaccion
ŒŒ) >
.
ŒŒ> ?
Add
ŒŒ? B
(
ŒŒB C
new
ŒŒC F#
Parametro_transaccion
ŒŒG \
(
ŒŒ\ ]
MaestroSettings
ŒŒ] l
.
ŒŒl m
Default
ŒŒm t
.
ŒŒt u3
$IdDetalleMaestroParametroIdConductorŒŒu ô
,ŒŒô ö
idConductorŒŒõ ¶
.ŒŒ¶ ß
ToStringŒŒß Ø
(ŒŒØ ∞
)ŒŒ∞ ±
)ŒŒ± ≤
)ŒŒ≤ ≥
;ŒŒ≥ ¥
}
œœ 
if
–– 
(
–– &
numeroLicenciaTransporte
–– ,
!=
––- /
null
––0 4
)
––4 5
{
—— "
movimientoMercaderia
““ (
.
““( )#
Parametro_transaccion
““) >
.
““> ?
Add
““? B
(
““B C
new
““C F#
Parametro_transaccion
““G \
(
““\ ]
MaestroSettings
““] l
.
““l m
Default
““m t
.
““t uC
4IdDetalleMaestroParametroNumeroLicenciaTransportista““u ©
,““© ™(
numeroLicenciaTransporte““´ √
.““√ ƒ
ToString““ƒ Ã
(““Ã Õ
)““Õ Œ
)““Œ œ
)““œ –
;““– —
}
”” 
if
‘‘ 
(
‘‘ 
placaTransporte
‘‘ #
!=
‘‘$ &
null
‘‘' +
)
‘‘+ ,
{
’’ "
movimientoMercaderia
÷÷ (
.
÷÷( )#
Parametro_transaccion
÷÷) >
.
÷÷> ?
Add
÷÷? B
(
÷÷B C
new
÷÷C F#
Parametro_transaccion
÷÷G \
(
÷÷\ ]
MaestroSettings
÷÷] l
.
÷÷l m
Default
÷÷m t
.
÷÷t u?
0IdDetalleMaestroParametroPlacaMarcaTransportista÷÷u •
,÷÷• ¶
placaTransporte÷÷ß ∂
.÷÷∂ ∑
ToString÷÷∑ ø
(÷÷ø ¿
)÷÷¿ ¡
)÷÷¡ ¬
)÷÷¬ √
;÷÷√ ƒ
}
◊◊ 
}
ÿÿ 
if
ŸŸ 
(
ŸŸ $
idModalidadTransaporte
ŸŸ &
!=
ŸŸ' )
$num
ŸŸ* +
)
ŸŸ+ ,
{
⁄⁄ "
movimientoMercaderia
€€ $
.
€€$ %#
Parametro_transaccion
€€% :
.
€€: ;
Add
€€; >
(
€€> ?
new
€€? B#
Parametro_transaccion
€€C X
(
€€X Y
MaestroSettings
€€Y h
.
€€h i
Default
€€i p
.
€€p q=
.IdDetalleMaestroParametroIdModalidadTransporte€€q ü
,€€ü †&
idModalidadTransaporte€€° ∑
.€€∑ ∏
ToString€€∏ ¿
(€€¿ ¡
)€€¡ ¬
)€€¬ √
)€€√ ƒ
;€€ƒ ≈
}
‹‹ 
if
›› 
(
›› !
idMotivoTransaporte
›› #
!=
››$ &
$num
››' (
)
››( )
{
ﬁﬁ "
movimientoMercaderia
ﬂﬂ $
.
ﬂﬂ$ %#
Parametro_transaccion
ﬂﬂ% :
.
ﬂﬂ: ;
Add
ﬂﬂ; >
(
ﬂﬂ> ?
new
ﬂﬂ? B#
Parametro_transaccion
ﬂﬂC X
(
ﬂﬂX Y
MaestroSettings
ﬂﬂY h
.
ﬂﬂh i
Default
ﬂﬂi p
.
ﬂﬂp q:
+IdDetalleMaestroParametroIdMotivoTransporteﬂﬂq ú
,ﬂﬂú ù#
idMotivoTransaporteﬂﬂû ±
.ﬂﬂ± ≤
ToStringﬂﬂ≤ ∫
(ﬂﬂ∫ ª
)ﬂﬂª º
)ﬂﬂº Ω
)ﬂﬂΩ æ
;ﬂﬂæ ø
}
‡‡ 
if
·· 
(
·· 
descripcionMotivo
·· !
!=
··" $
null
··% )
)
··) *
{
‚‚ "
movimientoMercaderia
„„ $
.
„„$ %#
Parametro_transaccion
„„% :
.
„„: ;
Add
„„; >
(
„„> ?
new
„„? B#
Parametro_transaccion
„„C X
(
„„X Y
MaestroSettings
„„Y h
.
„„h i
Default
„„i p
.
„„p qA
2IdDetalleMaestroParametroDescripcionMotivoTraslado„„q £
,„„£ §!
descripcionMotivo„„• ∂
.„„∂ ∑
ToString„„∑ ø
(„„ø ¿
)„„¿ ¡
)„„¡ ¬
)„„¬ √
;„„√ ƒ
}
‰‰ 
if
ÂÂ 
(
ÂÂ 
pesoBrutoTotal
ÂÂ 
!=
ÂÂ !
$num
ÂÂ" #
)
ÂÂ# $
{
ÊÊ "
movimientoMercaderia
ÁÁ $
.
ÁÁ$ %#
Parametro_transaccion
ÁÁ% :
.
ÁÁ: ;
Add
ÁÁ; >
(
ÁÁ> ?
new
ÁÁ? B#
Parametro_transaccion
ÁÁC X
(
ÁÁX Y
MaestroSettings
ÁÁY h
.
ÁÁh i
Default
ÁÁi p
.
ÁÁp q6
'IdDetalleMaestroParametroPesoBrutoTotalÁÁq ò
,ÁÁò ô
pesoBrutoTotalÁÁö ®
.ÁÁ® ©
ToStringÁÁ© ±
(ÁÁ± ≤
)ÁÁ≤ ≥
)ÁÁ≥ ¥
)ÁÁ¥ µ
;ÁÁµ ∂
}
ËË 
if
ÈÈ 
(
ÈÈ 
numeroBultos
ÈÈ 
!=
ÈÈ 
$num
ÈÈ  !
)
ÈÈ! "
{
ÍÍ "
movimientoMercaderia
ÎÎ $
.
ÎÎ$ %#
Parametro_transaccion
ÎÎ% :
.
ÎÎ: ;
Add
ÎÎ; >
(
ÎÎ> ?
new
ÎÎ? B#
Parametro_transaccion
ÎÎC X
(
ÎÎX Y
MaestroSettings
ÎÎY h
.
ÎÎh i
Default
ÎÎi p
.
ÎÎp q4
%IdDetalleMaestroParametroNumeroBultosÎÎq ñ
,ÎÎñ ó
numeroBultosÎÎò §
.ÎÎ§ •
ToStringÎÎ• ≠
(ÎÎ≠ Æ
)ÎÎÆ Ø
)ÎÎØ ∞
)ÎÎ∞ ±
;ÎÎ± ≤
}
ÏÏ 
if
ÌÌ 
(
ÌÌ $
idUbigeoOrigenTraslado
ÌÌ &
!=
ÌÌ' )
$num
ÌÌ* +
)
ÌÌ+ ,
{
ÓÓ "
movimientoMercaderia
ÔÔ $
.
ÔÔ$ %#
Parametro_transaccion
ÔÔ% :
.
ÔÔ: ;
Add
ÔÔ; >
(
ÔÔ> ?
new
ÔÔ? B#
Parametro_transaccion
ÔÔC X
(
ÔÔX Y
MaestroSettings
ÔÔY h
.
ÔÔh i
Default
ÔÔi p
.
ÔÔp q>
/IdDetalleMaestroParametroIdUbigeoOrigenTrasladoÔÔq †
,ÔÔ† °&
idUbigeoOrigenTrasladoÔÔ¢ ∏
.ÔÔ∏ π
ToStringÔÔπ ¡
(ÔÔ¡ ¬
)ÔÔ¬ √
)ÔÔ√ ƒ
)ÔÔƒ ≈
;ÔÔ≈ ∆
}
 
if
ÒÒ 
(
ÒÒ %
idUbigeoDestinoTraslado
ÒÒ '
!=
ÒÒ( *
$num
ÒÒ+ ,
)
ÒÒ, -
{
ÚÚ "
movimientoMercaderia
ÛÛ $
.
ÛÛ$ %#
Parametro_transaccion
ÛÛ% :
.
ÛÛ: ;
Add
ÛÛ; >
(
ÛÛ> ?
new
ÛÛ? B#
Parametro_transaccion
ÛÛC X
(
ÛÛX Y
MaestroSettings
ÛÛY h
.
ÛÛh i
Default
ÛÛi p
.
ÛÛp q?
0IdDetalleMaestroParametroIdUbigeoDestinoTrasladoÛÛq °
,ÛÛ° ¢'
idUbigeoDestinoTrasladoÛÛ£ ∫
.ÛÛ∫ ª
ToStringÛÛª √
(ÛÛ√ ƒ
)ÛÛƒ ≈
)ÛÛ≈ ∆
)ÛÛ∆ «
;ÛÛ« »
}
ÙÙ 
if
ıı 
(
ıı 
!
ıı 
string
ıı 
.
ıı 
IsNullOrEmpty
ıı %
(
ıı% &!
documentoReferencia
ıı& 9
)
ıı9 :
)
ıı: ;
{
ˆˆ "
movimientoMercaderia
˜˜ $
.
˜˜$ %#
Parametro_transaccion
˜˜% :
.
˜˜: ;
Add
˜˜; >
(
˜˜> ?
new
˜˜? B#
Parametro_transaccion
˜˜C X
(
˜˜X Y
MaestroSettings
˜˜Y h
.
˜˜h i
Default
˜˜i p
.
˜˜p qA
2IdDetalleMaestroParametroDocumentoReferenciaDeGuia˜˜q £
,˜˜£ §#
documentoReferencia˜˜• ∏
.˜˜∏ π
ToString˜˜π ¡
(˜˜¡ ¬
)˜˜¬ √
)˜˜√ ƒ
)˜˜ƒ ≈
;˜˜≈ ∆
}
¯¯ 
return
˘˘ "
movimientoMercaderia
˘˘ '
;
˘˘' (
}
˙˙ 	
public
ˇˇ 
Transaccion
ˇˇ 4
&GenerarSerieComprobanteYOrdenDeAlmacen
ˇˇ A
(
ˇˇA B
Transaccion
ˇˇB M
	operacion
ˇˇN W
,
ˇˇW X
int
ˇˇY \
idCentroAtencion
ˇˇ] m
,
ˇˇm n
int
ˇˇo r

idEmpleado
ˇˇs }
,
ˇˇ} ~
intˇˇ Ç
	idAlmacenˇˇÉ å
,ˇˇå ç
DateTimeˇˇé ñ
fechaTransporteˇˇó ¶
,ˇˇ¶ ß
DateTimeˇˇ® ∞
fechaRegistroˇˇ± æ
,ˇˇæ ø
intˇˇ¿ √#
idEstadoTransaccionˇˇƒ ◊
,ˇˇ◊ ÿ
stringˇˇŸ ﬂ,
observacionEstadoTransaccionˇˇ‡ ¸
,ˇˇ¸ ˝
stringˇˇ˛ Ñ
observacionˇˇÖ ê
,ˇˇê ë
Listˇˇí ñ
<ˇˇñ ó"
DetalleDeOperacionˇˇó ©
>ˇˇ© ™
detallesˇˇ´ ≥
)ˇˇ≥ ¥
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
Serie_comprobante
ÑÑ !
serie
ÑÑ" '
=
ÑÑ( )$
transaccionRepositorio
ÑÑ* @
.
ÑÑ@ AN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteÑÑA Ä
(ÑÑÄ Å
MaestroSettingsÑÑÅ ê
.ÑÑê ë
DefaultÑÑë ò
.ÑÑò ô9
)IdDetalleMaestroComprobanteOrdenDeAlmacenÑÑô ¬
,ÑÑ¬ √ 
idCentroAtencionÑÑƒ ‘
)ÑÑ‘ ’
;ÑÑ’ ÷
return
ÜÜ #
GenerarOrdenDeAlmacen
ÜÜ ,
(
ÜÜ, -
	operacion
ÜÜ- 6
,
ÜÜ6 7

idEmpleado
ÜÜ8 B
,
ÜÜB C
	idAlmacen
ÜÜD M
,
ÜÜM N
serie
ÜÜO T
.
ÜÜT U
id
ÜÜU W
,
ÜÜW X
fechaTransporte
ÜÜY h
,
ÜÜh i
fechaRegistro
ÜÜj w
,
ÜÜw x"
idEstadoTransaccionÜÜy å
,ÜÜå ç,
observacionEstadoTransaccionÜÜé ™
,ÜÜ™ ´
observacionÜÜ¨ ∑
,ÜÜ∑ ∏
detallesÜÜπ ¡
)ÜÜ¡ ¬
;ÜÜ¬ √
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
new
ää 
LogicaException
ää )
(
ää) *
$str
ää* s
)
ääs t
;
äät u
}
ãã 
}
åå 	
public
éé 
Transaccion
éé #
GenerarOrdenDeAlmacen
éé 0
(
éé0 1
Transaccion
éé1 <
	operacion
éé= F
,
ééF G
int
ééH K

idEmpleado
ééL V
,
ééV W
int
ééX [
	idAlmacen
éé\ e
,
éée f
int
éég j 
idSerieComprobante
éék }
,
éé} ~
DateTimeéé á
fechaTransporteééà ó
,ééó ò
DateTimeééô °
fechaRegistroéé¢ Ø
,ééØ ∞
intéé± ¥#
idEstadoTransaccionééµ »
,éé» …
stringéé  –,
observacionEstadoTransaccionéé— Ì
,ééÌ Ó
stringééÔ ı
observacionééˆ Å
,ééÅ Ç
ListééÉ á
<ééá à"
DetalleDeOperacionééà ö
>ééö õ
detallesééú §
)éé§ •
{
èè 	
try
êê 
{
ëë 
List
ìì 
<
ìì !
Detalle_transaccion
ìì (
>
ìì( ))
detalles_transaccion_bienes
ìì* E
=
ììF G
detalles
ììH P
.
ììP Q
Where
ììQ V
(
ììV W
d
ììW X
=>
ììY [
d
ìì\ ]
.
ìì] ^
Producto
ìì^ f
.
ììf g
EsBien
ììg m
)
ììm n
.
ììn o
Select
ììo u
(
ììu v
d
ììv w
=>
ììx z
d
ìì{ |
.
ìì| }!
DetalleTransaccionìì} è
(ììè ê
)ììê ë
)ììë í
.ììí ì
ToListììì ô
(ììô ö
)ììö õ
;ììõ ú
string
ïï 
codigo
ïï 
=
ïï %
codigosOperacion_Logica
ïï  7
.
ïï7 83
%ObtenerSiguienteCodigoParaFacturacion
ïï8 ]
(
ïï] ^
	operacion
ïï^ g
.
ïïg h
codigo
ïïh n
+
ïïo p
$str
ïïq t
+
ïïu v
Diccionarioïïw Ç
.ïïÇ É7
'MapeoTipoTransaccionVsCodigoDeOperacionïïÉ ™
.ïï™ ´
Singleïï´ ±
(ïï± ≤
nïï≤ ≥
=>ïï¥ ∂
nïï∑ ∏
.ïï∏ π
Keyïïπ º
==ïïΩ ø#
TransaccionSettingsïï¿ ”
.ïï” ‘
Defaultïï‘ €
.ïï€ ‹1
!IdTipoDeTransaccionOrdenDeAlmacenïï‹ ˝
)ïï˝ ˛
.ïï˛ ˇ
Valueïïˇ Ñ
,ïïÑ Ö#
TransaccionSettingsïïÜ ô
.ïïô ö
Defaultïïö °
.ïï° ¢1
!IdTipoDeTransaccionOrdenDeAlmacenïï¢ √
)ïï√ ƒ
;ïïƒ ≈
Transaccion
óó 
ordenDeAlmacen
óó *
=
óó+ ,
new
óó- 0
Transaccion
óó1 <
(
óó< =
codigo
óó= C
,
óóC D
null
óóE I
,
óóI J
fechaRegistro
óóK X
,
óóX Y!
TransaccionSettings
óóZ m
.
óóm n
Default
óón u
.
óóu v0
!IdTipoDeTransaccionOrdenDeAlmacenóóv ó
,óóó ò
	operacionóóô ¢
.óó¢ £!
id_unidad_negocioóó£ ¥
,óó¥ µ
trueóó∂ ∫
,óó∫ ª
fechaRegistroóóº …
,óó…  
fechaTransporteóóÀ ⁄
,óó⁄ €
observacionóó‹ Á
,óóÁ Ë
fechaRegistroóóÈ ˆ
,óóˆ ˜

idEmpleadoóó¯ Ç
,óóÇ É
	operacionóóÑ ç
.óóç é
importe_totalóóé õ
,óóõ ú
	idAlmacenóóù ¶
,óó¶ ß
	operacionóó® ±
.óó± ≤
	id_monedaóó≤ ª
,óóª º
	operacionóóΩ ∆
.óó∆ «
tipo_cambioóó« “
,óó“ ”
nullóó‘ ÿ
,óóÿ Ÿ
	operacionóó⁄ „
.óó„ ‰(
id_actor_negocio_externoóó‰ ¸
)óó¸ ˝
{
òò 
Comprobante
öö 
=
öö  !3
%GenerarComprobantePropioAutonumerable
öö" G
(
ööG H 
idSerieComprobante
ööH Z
)
ööZ [
}
õõ 
;
õõ 
ordenDeAlmacen
ùù 
.
ùù 
AgregarDetalles
ùù .
(
ùù. /)
detalles_transaccion_bienes
ùù/ J
)
ùùJ K
;
ùùK L
ordenDeAlmacen
üü 
.
üü #
Parametro_transaccion
üü 4
.
üü4 5
Add
üü5 8
(
üü8 9
new
üü9 <#
Parametro_transaccion
üü= R
(
üüR S
MaestroSettings
üüS b
.
üüb c
Default
üüc j
.
üüj k?
0IdDetalleMaestroParametroEstadoEntregaMercaderiaüük õ
,üüõ ú
(üüù û
(üüû ü
intüüü ¢
)üü¢ £
IngresoTotalüü£ Ø
.üüØ ∞
Noüü∞ ≤
)üü≤ ≥
.üü≥ ¥
ToStringüü¥ º
(üüº Ω
)üüΩ æ
)üüæ ø
)üüø ¿
;üü¿ ¡ 
Estado_transaccion
°° "$
estadoDeOrdenDeAlmacen
°°# 9
=
°°: ;
new
°°< ? 
Estado_transaccion
°°@ R
(
°°R S

idEmpleado
°°S ]
,
°°] ^!
idEstadoTransaccion
°°_ r
,
°°r s
fechaRegistro°°t Å
,°°Å Ç,
observacionEstadoTransaccion°°É ü
)°°ü †
;°°† °
ordenDeAlmacen
¢¢ 
.
¢¢  
Estado_transaccion
¢¢ 1
.
¢¢1 2
Add
¢¢2 5
(
¢¢5 6$
estadoDeOrdenDeAlmacen
¢¢6 L
)
¢¢L M
;
¢¢M N
return
§§ 
ordenDeAlmacen
§§ %
;
§§% &
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* Y
,
®®Y Z
e
®®[ \
)
®®\ ]
;
®®] ^
}
©© 
}
™™ 	
public
¨¨ 
OperationResult
¨¨ #
GuardarOrdenDeAlmacen
¨¨ 4
(
¨¨4 5
long
¨¨5 9 
idOrdenDeOperacion
¨¨: L
,
¨¨L M
int
¨¨N Q

idEmpleado
¨¨R \
,
¨¨\ ]
int
¨¨^ a
idCentroAtencion
¨¨b r
,
¨¨r s
int
¨¨t w!
idSerieComprobante¨¨x ä
,¨¨ä ã
int¨¨å è
	idAlmacen¨¨ê ô
,¨¨ô ö
DateTime¨¨õ £
fechaTransporte¨¨§ ≥
,¨¨≥ ¥
string¨¨µ ª
observacion¨¨º «
,¨¨« »
List¨¨… Õ
<¨¨Õ Œ"
DetalleDeOperacion¨¨Œ ‡
>¨¨‡ ·
detalles¨¨‚ Í
,¨¨Í Î
bool¨¨Ï $
generacionTotalOrden¨¨Ò Ö
)¨¨Ö Ü
{
≠≠ 	
try
ÆÆ 
{
ØØ 
DateTime
∞∞ 
fechaActual
∞∞ $
=
∞∞% &
DateTimeUtil
∞∞' 3
.
∞∞3 4
FechaActual
∞∞4 ?
(
∞∞? @
)
∞∞@ A
;
∞∞A B%
OperacionGenericaNivel3
≤≤ '
ordenDeOperacion
≤≤( 8
=
≤≤9 :
new
≤≤; >%
OperacionGenericaNivel3
≤≤? V
(
≤≤V W$
transaccionRepositorio
≤≤W m
.
≤≤m n1
"ObtenerTransaccionInclusiveEstados≤≤n ê
(≤≤ê ë"
idOrdenDeOperacion≤≤ë £
)≤≤£ §
)≤≤§ •
;≤≤• ¶
Transaccion
¥¥ 
ordenDeAlmacen
¥¥ *
=
¥¥+ ,#
GenerarOrdenDeAlmacen
¥¥- B
(
¥¥B C
ordenDeOperacion
¥¥C S
.
¥¥S T
Transaccion
¥¥T _
(
¥¥_ `
)
¥¥` a
.
¥¥a b
Transaccion2
¥¥b n
,
¥¥n o

idEmpleado
¥¥p z
,
¥¥z {
	idAlmacen¥¥| Ö
,¥¥Ö Ü"
idSerieComprobante¥¥á ô
,¥¥ô ö
fechaTransporte¥¥õ ™
,¥¥™ ´
fechaActual¥¥¨ ∑
,¥¥∑ ∏
MaestroSettings¥¥π »
.¥¥» …
Default¥¥… –
.¥¥– —0
 IdDetalleMaestroEstadoConfirmado¥¥— Ò
,¥¥Ò Ú
$str¥¥Û •
,¥¥• ¶
observacion¥¥ß ≤
,¥¥≤ ≥
detalles¥¥¥ º
)¥¥º Ω
;¥¥Ω æ
ordenDeAlmacen
∂∂ 
.
∂∂ '
id_transaccion_referencia
∂∂ 8
=
∂∂9 :
ordenDeOperacion
∂∂; K
.
∂∂K L
Id
∂∂L N
;
∂∂N O
ordenDeAlmacen
∏∏ 
.
∏∏ "
id_transaccion_padre
∏∏ 3
=
∏∏4 5
ordenDeOperacion
∏∏6 F
.
∏∏F G
Transaccion
∏∏G R
(
∏∏R S
)
∏∏S T
.
∏∏T U"
id_transaccion_padre
∏∏U i
;
∏∏i j#
Parametro_transaccion
∫∫ %"
parametroTransaccion
∫∫& :
=
∫∫; <
null
∫∫= A
;
∫∫A B
if
ªª 
(
ªª "
generacionTotalOrden
ªª (
)
ªª( )
{
ºº "
parametroTransaccion
ΩΩ (
=
ΩΩ) *
ordenDeOperacion
ΩΩ+ ;
.
ΩΩ; <
Transaccion
ΩΩ< G
(
ΩΩG H
)
ΩΩH I
.
ΩΩI J#
Parametro_transaccion
ΩΩJ _
.
ΩΩ_ `
SingleOrDefault
ΩΩ` o
(
ΩΩo p
pcn
ΩΩp s
=>
ΩΩt v
pcn
ΩΩw z
.
ΩΩz {
id_parametroΩΩ{ á
==ΩΩà ä
MaestroSettingsΩΩã ö
.ΩΩö õ
DefaultΩΩõ ¢
.ΩΩ¢ £G
7IdDetalleMaestroParametroEstadoGeneracionOrdenDeAlmacenΩΩ£ ⁄
)ΩΩ⁄ €
;ΩΩ€ ‹"
parametroTransaccion
ææ (
.
ææ( )
valor
ææ) .
=
ææ/ 0
$str
ææ1 4
;
ææ4 5
}
øø 
return
¿¿ $
transaccionRepositorio
¿¿ -
.
¿¿- .=
/CrearTransaccionYActualizarParametroTransaccion
¿¿. ]
(
¿¿] ^
ordenDeAlmacen
¿¿^ l
,
¿¿l m#
parametroTransaccion¿¿n Ç
)¿¿Ç É
;¿¿É Ñ
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* Y
,
ƒƒY Z
e
ƒƒ[ \
)
ƒƒ\ ]
;
ƒƒ] ^
}
≈≈ 
}
∆∆ 	
public
ÙÙ 
OperationResult
ÙÙ +
GuardarMovimientoOrdenAlmacen
ÙÙ <
(
ÙÙ< ='
RegistroMovimientoAlmacen
ÙÙ= V$
movimientoOrdenAlmacen
ÙÙW m
,
ÙÙm n%
UserProfileSessionDataÙÙo Ö
sesionUsuarioÙÙÜ ì
)ÙÙì î
{
ıı 	
try
ˆˆ 
{
˜˜ 
var
¯¯ 
fechaActual
¯¯ 
=
¯¯  !
DateTimeUtil
¯¯" .
.
¯¯. /
FechaActual
¯¯/ :
(
¯¯: ;
)
¯¯; <
;
¯¯< =
var
˘˘ #
transaccionOrdenVenta
˘˘ )
=
˘˘* +$
transaccionRepositorio
˘˘, B
.
˘˘B C 
ObtenerTransaccion
˘˘C U
(
˘˘U V$
movimientoOrdenAlmacen
˘˘V l
.
˘˘l m
IdOrdenDeAlmacen
˘˘m }
)
˘˘} ~
;
˘˘~ $
movimientoOrdenAlmacen
˚˚ &
.
˚˚& '
Observacion
˚˚' 2
=
˚˚3 4
(
˚˚5 6
String
˚˚6 <
.
˚˚< =
IsNullOrEmpty
˚˚= J
(
˚˚J K$
movimientoOrdenAlmacen
˚˚K a
.
˚˚a b
Observacion
˚˚b m
)
˚˚m n
||
˚˚o q
String
˚˚r x
.
˚˚x y!
IsNullOrWhiteSpace˚˚y ã
(˚˚ã å&
movimientoOrdenAlmacen˚˚å ¢
.˚˚¢ £
Observacion˚˚£ Æ
)˚˚Æ Ø
)˚˚Ø ∞
?˚˚± ≤
$str˚˚≥ º
:˚˚Ω æ&
movimientoOrdenAlmacen˚˚ø ’
.˚˚’ ÷
Observacion˚˚÷ ·
;˚˚· ‚
var
˝˝ -
movimientoDetallesOrdenCompleto
˝˝ 3
=
˝˝4 5$
movimientoOrdenAlmacen
˝˝6 L
.
˝˝L M
Detalles
˝˝M U
.
˝˝U V
Where
˝˝V [
(
˝˝[ \
d
˝˝\ ]
=>
˝˝^ `
d
˝˝a b
.
˝˝b c
	Pendiente
˝˝c l
>
˝˝m n
$num
˝˝o p
)
˝˝p q
.
˝˝q r
Count
˝˝r w
(
˝˝w x
)
˝˝x y
==
˝˝z |%
movimientoOrdenAlmacen˝˝} ì
.˝˝ì î
Detalles˝˝î ú
.˝˝ú ù
Where˝˝ù ¢
(˝˝¢ £
d˝˝£ §
=>˝˝• ß
d˝˝® ©
.˝˝© ™
	Pendiente˝˝™ ≥
>˝˝¥ µ
$num˝˝∂ ∑
)˝˝∑ ∏
.˝˝∏ π
Where˝˝π æ
(˝˝æ ø
d˝˝ø ¿
=>˝˝¡ √
d˝˝ƒ ≈
.˝˝≈ ∆
	Pendiente˝˝∆ œ
==˝˝– “
d˝˝” ‘
.˝˝‘ ’#
IngresoSalidaActual˝˝’ Ë
)˝˝Ë È
.˝˝È Í
Count˝˝Í Ô
(˝˝Ô 
)˝˝ Ò
;˝˝Ò Ú$
movimientoOrdenAlmacen
ˇˇ &
.
ˇˇ& '
Detalles
ˇˇ' /
=
ˇˇ0 1$
movimientoOrdenAlmacen
ˇˇ2 H
.
ˇˇH I
Detalles
ˇˇI Q
.
ˇˇQ R
Where
ˇˇR W
(
ˇˇW X
d
ˇˇX Y
=>
ˇˇZ \
d
ˇˇ] ^
.
ˇˇ^ _!
IngresoSalidaActual
ˇˇ_ r
>
ˇˇs t
$num
ˇˇu v
)
ˇˇv w
.
ˇˇw x
ToList
ˇˇx ~
(
ˇˇ~ 
)ˇˇ Ä
;ˇˇÄ Å
var
ÅÅ ,
detallesMovimientoOrdenAlmacen
ÅÅ 2
=
ÅÅ3 45
'ConstruirDetallesMovimientoOrdenAlmacen
ÅÅ5 \
(
ÅÅ\ ]$
movimientoOrdenAlmacen
ÅÅ] s
)
ÅÅs t
;
ÅÅt u
Transaccion
ÉÉ 
ordenAlmacen
ÉÉ (
=
ÉÉ) *$
transaccionRepositorio
ÉÉ+ A
.
ÉÉA B0
"ObtenerTransaccionInclusiveEstados
ÉÉB d
(
ÉÉd e$
movimientoOrdenAlmacen
ÉÉe {
.
ÉÉ{ |
IdOrdenDeAlmacenÉÉ| å
)ÉÉå ç
;ÉÉç é
Transaccion
ÖÖ 
operacionAlmacen
ÖÖ ,
=
ÖÖ- .$
transaccionRepositorio
ÖÖ/ E
.
ÖÖE F0
"ObtenerTransaccionInclusiveEstados
ÖÖF h
(
ÖÖh i
(
ÖÖi j
long
ÖÖj n
)
ÖÖn o
ordenAlmacen
ÖÖo {
.
ÖÖ{ |#
id_transaccion_padreÖÖ| ê
)ÖÖê ë
;ÖÖë í
Comprobante
áá 
comprobante
áá '
=
áá( ) 
GenerarComprobante
áá* <
(
áá< =$
movimientoOrdenAlmacen
áá= S
.
ááS T
TipoDeComprobante
ááT e
.
ááe f
EsPropio
ááf n
,
áán o%
movimientoOrdenAlmacenááp Ü
.ááÜ á!
TipoDeComprobanteááá ò
.ááò ô!
SerieSeleccionadaááô ™
,áá™ ´&
movimientoOrdenAlmacenáá¨ ¬
.áá¬ √!
TipoDeComprobanteáá√ ‘
.áá‘ ’
TipoComprobanteáá’ ‰
.áá‰ Â
IdááÂ Á
,ááÁ Ë&
movimientoOrdenAlmacenááÈ ˇ
.ááˇ Ä!
TipoDeComprobanteááÄ ë
.ááë í
SerieIngresadaááí †
,áá† °&
movimientoOrdenAlmacenáá¢ ∏
.áá∏ π!
TipoDeComprobanteááπ  
.áá  À
NumeroIngresadoááÀ ⁄
)áá⁄ €
;áá€ ‹
int
ââ 2
$idTipoTransaccionMovimientoDeAlmacen
ââ 8
=
ââ9 :
Diccionario
ââ; F
.
ââF G-
MapeoOrdenVsMovimientoDeAlmacen
ââG f
.
ââf g
Single
ââg m
(
ââm n
m
âân o
=>
ââp r
m
ââs t
.
âât u
Key
ââu x
==
âây {
ordenAlmacenââ| à
.ââà â#
id_tipo_transaccionâââ ú
)ââú ù
.ââù û
Valueââû £
;ââ£ §
Transaccion
ãã !
movimientoDeAlmacen
ãã /
=
ãã0 1+
GenerarMovimientoDeMercaderia
ãã2 O
(
ããO P
operacionAlmacen
ããP `
,
ãã` a
comprobante
ããb m
,
ããm n
sesionUsuario
ãão |
.
ãã| }
Empleadoãã} Ö
.ããÖ Ü
IdããÜ à
,ããà â
(ããä ã
intããã é
)ããé è%
transaccionOrdenVentaããè §
.ãã§ •)
id_actor_negocio_interno1ãã• æ
,ããæ ø&
movimientoOrdenAlmacenãã¿ ÷
.ãã÷ ◊
Terceroãã◊ ﬁ
.ããﬁ ﬂ
Idããﬂ ·
,ãã· ‚4
$idTipoTransaccionMovimientoDeAlmacenãã„ á
,ããá à
fechaActualããâ î
,ããî ï&
movimientoOrdenAlmacenããñ ¨
.ãã¨ ≠
Observacionãã≠ ∏
,ãã∏ π&
movimientoOrdenAlmacenãã∫ –
.ãã– —#
FechaInicioTrasladoãã— ‰
,ãã‰ Â&
movimientoOrdenAlmacenããÊ ¸
.ãã¸ ˝
Transportistaãã˝ ä
.ããä ã
Transportistaããã ò
.ããò ô
Idããô õ
,ããõ ú&
movimientoOrdenAlmacenããù ≥
.ãã≥ ¥
Transportistaãã¥ ¡
.ãã¡ ¬
Placaãã¬ «
,ãã« »&
movimientoOrdenAlmacenãã… ﬂ
.ããﬂ ‡
	Conductorãã‡ È
.ããÈ Í
	ConductorããÍ Û
.ããÛ Ù
IdããÙ ˆ
,ããˆ ˜&
movimientoOrdenAlmacenãã¯ é
.ããé è
	Conductorããè ò
.ããò ô
NumeroLicenciaããô ß
,ããß ®&
movimientoOrdenAlmacenãã© ø
.ããø ¿#
ModalidadTransporteãã¿ ”
.ãã” ‘
Idãã‘ ÷
,ãã÷ ◊&
movimientoOrdenAlmacenããÿ Ó
.ããÓ Ô
MotivoTrasladoããÔ ˝
.ãã˝ ˛
Idãã˛ Ä
,ããÄ Å&
movimientoOrdenAlmacenããÇ ò
.ããò ô
PesoBrutoTotalããô ß
,ããß ®&
movimientoOrdenAlmacenãã© ø
.ããø ¿
NumeroBultosãã¿ Ã
,ããÃ Õ&
movimientoOrdenAlmacenããŒ ‰
.ãã‰ Â
DireccionOrigenããÂ Ù
,ããÙ ı&
movimientoOrdenAlmacenããˆ å
.ããå ç
UbigeoOrigenããç ô
.ããô ö
Idããö ú
,ããú ù&
movimientoOrdenAlmacenããû ¥
.ãã¥ µ 
DireccionDestinoããµ ≈
,ãã≈ ∆&
movimientoOrdenAlmacenãã« ›
.ãã› ﬁ
UbigeoDestinoããﬁ Î
.ããÎ Ï
IdããÏ Ó
,ããÓ Ô&
movimientoOrdenAlmacenãã Ü
.ããÜ á#
DocumentoReferenciaããá ö
,ããö õ.
detallesMovimientoOrdenAlmacenããú ∫
,ãã∫ ª
sesionUsuarioããº …
,ãã…  &
movimientoOrdenAlmacenããÀ ·
.ãã· ‚ 
IdOrdenDeAlmacenãã‚ Ú
,ããÚ Û
trueããÙ ¯
)ãã¯ ˘
;ãã˘ ˙!
movimientoDeAlmacen
çç #
.
çç# $'
id_transaccion_referencia
çç$ =
=
çç> ?
ordenAlmacen
çç@ L
.
ççL M
id
ççM O
;
ççO P!
movimientoDeAlmacen
èè #
.
èè# $"
id_transaccion_padre
èè$ 8
=
èè9 :
operacionAlmacen
èè; K
.
èèK L
id
èèL N
;
èèN O
if
ëë 
(
ëë -
movimientoDetallesOrdenCompleto
ëë 3
)
ëë3 4
{
íí  
Estado_transaccion
ìì &)
estadoDeMovimientoDeAlmacen
ìì' B
=
ììC D
new
ììE H 
Estado_transaccion
ììI [
(
ìì[ \
sesionUsuario
ìì\ i
.
ììi j
Empleado
ììj r
.
ììr s
Id
ììs u
,
ììu v
MaestroSettingsììw Ü
.ììÜ á
Defaultììá é
.ììé è0
 IdDetalleMaestroEstadoCompletadaììè Ø
,ììØ ∞
fechaActualìì± º
,ììº Ω
$strììæ à
)ììà â
;ììâ ä
ordenAlmacen
îî  
.
îî  ! 
Estado_transaccion
îî! 3
.
îî3 4
Add
îî4 7
(
îî7 8)
estadoDeMovimientoDeAlmacen
îî8 S
)
îîS T
;
îîT U
}
ïï 
else
ññ 
{
óó  
Estado_transaccion
òò &)
estadoDeMovimientoDeAlmacen
òò' B
=
òòC D
new
òòE H 
Estado_transaccion
òòI [
(
òò[ \
sesionUsuario
òò\ i
.
òòi j
Empleado
òòj r
.
òòr s
Id
òòs u
,
òòu v
MaestroSettingsòòw Ü
.òòÜ á
Defaultòòá é
.òòé è-
IdDetalleMaestroEstadoParcialòòè ¨
,òò¨ ≠
fechaActualòòÆ π
,òòπ ∫
$stròòª ä
)òòä ã
;òòã å
ordenAlmacen
ôô  
.
ôô  ! 
Estado_transaccion
ôô! 3
.
ôô3 4
Add
ôô4 7
(
ôô7 8)
estadoDeMovimientoDeAlmacen
ôô8 S
)
ôôS T
;
ôôT U
}
öö 
return
úú 6
(AfectarInventarioFisicoYGuardarOperacion
úú ?
(
úú? @
new
úú@ C 
OperacionIntegrada
úúD V
(
úúV W
)
úúW X
{
úúY Z
	Operacion
úú[ d
=
úúe f!
movimientoDeAlmacen
úúg z
,
úúz { 
MovimientosBienesúú| ç
=úúé è
newúúê ì
Listúúî ò
<úúò ô
Transaccionúúô §
>úú§ •
(úú• ¶
)úú¶ ß
{úú® ©#
movimientoDeAlmacenúú™ Ω
}úúæ ø
,úúø ¿ 
OrdenDeOperacionúú¡ —
=úú“ ”
ordenAlmacenúú‘ ‡
}úú· ‚
,úú‚ „
sesionUsuarioúú‰ Ò
)úúÒ Ú
;úúÚ Û
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
e
ûû 
)
ûû 
{
üü 
throw
†† 
new
†† 
LogicaException
†† )
(
††) *
$str
††* g
,
††g h
e
††i j
)
††j k
;
††k l
}
°° 
}
¢¢ 	
internal
§§ 
List
§§ 
<
§§ !
Detalle_transaccion
§§ )
>
§§) *5
'ConstruirDetallesMovimientoOrdenAlmacen
§§+ R
(
§§R S'
RegistroMovimientoAlmacen
§§S l%
movimientoOrdenAlmacen§§m É
)§§É Ñ
{
•• 	
List
¶¶ 
<
¶¶ !
Detalle_transaccion
¶¶ $
>
¶¶$ %"
detallesOrdenAlmacen
¶¶& :
=
¶¶; <
new
¶¶= @
List
¶¶A E
<
¶¶E F!
Detalle_transaccion
¶¶F Y
>
¶¶Y Z
(
¶¶Z [
)
¶¶[ \
;
¶¶\ ]
foreach
ßß 
(
ßß 
var
ßß 
item
ßß 
in
ßß  $
movimientoOrdenAlmacen
ßß! 7
.
ßß7 8
Detalles
ßß8 @
.
ßß@ A
Where
ßßA F
(
ßßF G
d
ßßG H
=>
ßßI K
d
ßßL M
.
ßßM N!
IngresoSalidaActual
ßßN a
>
ßßb c
$num
ßßd e
)
ßße f
)
ßßf g
{
®® "
detallesOrdenAlmacen
©© $
.
©©$ %
Add
©©% (
(
©©( )
new
©©) ,!
Detalle_transaccion
©©- @
(
©©@ A
item
©©A E
.
©©E F!
IngresoSalidaActual
©©F Y
,
©©Y Z
item
©©[ _
.
©©_ `

IdProducto
©©` j
,
©©j k
$str
©©l n
,
©©n o
$num
©©p q
,
©©q r
$num
©©s t
,
©©t u
null
©©v z
,
©©z {
$num
©©| }
,
©©} ~
null©© É
,©©É Ñ
null©©Ö â
,©©â ä
$num©©ã å
,©©å ç
$num©©é è
,©©è ê
$num©©ë í
,©©í ì
null©©î ò
,©©ò ô
null©©ö û
,©©û ü
null©©† §
)©©§ •
)©©• ¶
;©©¶ ß
}
™™ 
return
´´ "
detallesOrdenAlmacen
´´ '
;
´´' (
}
¨¨ 	
internal
ÆÆ 
Transaccion
ÆÆ +
GenerarMovimientoDeMercaderia
ÆÆ :
(
ÆÆ: ;
Transaccion
ÆÆ; F
	operacion
ÆÆG P
,
ÆÆP Q
Comprobante
ÆÆR ]
comprobante
ÆÆ^ i
,
ÆÆi j
int
ÆÆk n

idEmpleado
ÆÆo y
,
ÆÆy z
int
ÆÆ{ ~
idCentroAtencionÆÆ è
,ÆÆè ê
intÆÆë î
	idTerceroÆÆï û
,ÆÆû ü
intÆÆ† £+
idTipoTransaccionMovimientoÆÆ§ ø
,ÆÆø ¿
DateTimeÆÆ¡ …
fechaRegistroÆÆ  ◊
,ÆÆ◊ ÿ
stringÆÆŸ ﬂ
observacionÆÆ‡ Î
,ÆÆÎ Ï
DateTimeÆÆÌ ı%
fechaInicioTransporteÆÆˆ ã
,ÆÆã å
intÆÆç ê
idTransportistaÆÆë †
,ÆÆ† °
stringÆÆ¢ ®
placaTransporteÆÆ© ∏
,ÆÆ∏ π
intÆÆ∫ Ω
idConductorÆÆæ …
,ÆÆ…  
stringÆÆÀ —(
numeroLicenciaTransporteÆÆ“ Í
,ÆÆÍ Î
intÆÆÏ Ô&
idModalidadTransaporteÆÆ Ü
,ÆÆÜ á
intÆÆà ã#
idMotivoTransaporteÆÆå ü
,ÆÆü †
decimalÆÆ° ®
pesoBrutoTotalÆÆ© ∑
,ÆÆ∑ ∏
intÆÆπ º
numeroBultosÆÆΩ …
,ÆÆ…  
stringÆÆÀ —'
direccionOrigenTrasladoÆÆ“ È
,ÆÆÈ Í
intÆÆÎ Ó&
idUbigeoOrigenTrasladoÆÆÔ Ö
,ÆÆÖ Ü
stringÆÆá ç(
direccionDestinoTrasladoÆÆé ¶
,ÆÆ¶ ß
intÆÆ® ´'
idUbigeoDestinoTrasladoÆÆ¨ √
,ÆÆ√ ƒ
stringÆÆ≈ À#
documentoReferenciaÆÆÃ ﬂ
,ÆÆﬂ ‡
ListÆÆ· Â
<ÆÆÂ Ê#
Detalle_transaccionÆÆÊ ˘
>ÆÆ˘ ˙
detallesÆÆ˚ É
,ÆÆÉ Ñ&
UserProfileSessionDataÆÆÖ õ
sesionDeUsuarioÆÆú ´
,ÆÆ´ ¨
longÆÆ≠ ±+
idOperacionMovimientoOrigenÆÆ≤ Õ
,ÆÆÕ Œ
boolÆÆœ ”.
detallesDeMovimientoDesdeOrdenÆÆ‘ Ú
)ÆÆÚ Û
{
ØØ 	
Transaccion
∞∞ "
movimientoMercaderia
∞∞ ,
=
∞∞- .
new
∞∞/ 2
Transaccion
∞∞3 >
(
∞∞> ?%
codigosOperacion_Logica
∞∞? V
.
∞∞V W3
%ObtenerSiguienteCodigoParaFacturacion
∞∞W |
(
∞∞| }
	operacion∞∞} Ü
.∞∞Ü á
codigo∞∞á ç
+∞∞é è
$str∞∞ê ì
+∞∞î ï
Diccionario∞∞ñ °
.∞∞° ¢7
'MapeoTipoTransaccionVsCodigoDeOperacion∞∞¢ …
.∞∞…  
Single∞∞  –
(∞∞– —
m∞∞— “
=>∞∞” ’
m∞∞÷ ◊
.∞∞◊ ÿ
Key∞∞ÿ €
==∞∞‹ ﬁ+
idTipoTransaccionMovimiento∞∞ﬂ ˙
)∞∞˙ ˚
.∞∞˚ ¸
Value∞∞¸ Å
,∞∞Å Ç+
idTipoTransaccionMovimiento∞∞É û
)∞∞û ü
,∞∞ü †
null∞∞° •
,∞∞• ¶
fechaRegistro∞∞ß ¥
,∞∞¥ µ+
idTipoTransaccionMovimiento∞∞∂ —
,∞∞— “
	operacion∞∞” ‹
.∞∞‹ ›!
id_unidad_negocio∞∞› Ó
,∞∞Ó Ô
true∞∞ Ù
,∞∞Ù ı
fechaRegistro∞∞ˆ É
,∞∞É Ñ
fechaRegistro∞∞Ö í
,∞∞í ì
observacion∞∞î ü
,∞∞ü †
fechaRegistro∞∞° Æ
,∞∞Æ Ø

idEmpleado∞∞∞ ∫
,∞∞∫ ª
	operacion∞∞º ≈
.∞∞≈ ∆
importe_total∞∞∆ ”
,∞∞” ‘ 
idCentroAtencion∞∞’ Â
,∞∞Â Ê
	operacion∞∞Á 
.∞∞ Ò
	id_moneda∞∞Ò ˙
,∞∞˙ ˚
	operacion∞∞¸ Ö
.∞∞Ö Ü
tipo_cambio∞∞Ü ë
,∞∞ë í
null∞∞ì ó
,∞∞ó ò
	idTercero∞∞ô ¢
)∞∞¢ £
{
±± 
Comprobante
≤≤ 
=
≤≤ 
comprobante
≤≤ )
}
≥≥ 
;
≥≥ 
var
µµ "
detallesDeMovimiento
µµ $
=
µµ% &6
(CalcularDetallesDeMovimientoDeMercaderia
µµ' O
(
µµO P
idCentroAtencion
µµP `
,
µµ` a)
idTipoTransaccionMovimiento
µµb }
,
µµ} ~
detallesµµ á
,µµá à
sesionDeUsuarioµµâ ò
,µµò ô+
idOperacionMovimientoOrigenµµö µ
,µµµ ∂.
detallesDeMovimientoDesdeOrdenµµ∑ ’
)µµ’ ÷
;µµ÷ ◊"
movimientoMercaderia
∑∑  
.
∑∑  !
AgregarDetalles
∑∑! 0
(
∑∑0 1"
detallesDeMovimiento
∑∑1 E
)
∑∑E F
;
∑∑F G"
movimientoMercaderia
ππ  
=
ππ! "+
ResolverParametrosTransaccion
ππ# @
(
ππ@ A"
movimientoMercaderia
ππA U
,
ππU V#
fechaInicioTransporte
ππW l
,
ππl m
idTransportista
ππn }
,
ππ} ~
placaTransporteππ é
,ππé è
idConductorππê õ
,ππõ ú(
numeroLicenciaTransporteππù µ
,ππµ ∂&
idModalidadTransaporteππ∑ Õ
,ππÕ Œ#
idMotivoTransaporteππœ ‚
,ππ‚ „
nullππ‰ Ë
,ππË È
pesoBrutoTotalππÍ ¯
,ππ¯ ˘
numeroBultosππ˙ Ü
,ππÜ á'
direccionOrigenTrasladoππà ü
,ππü †&
idUbigeoOrigenTrasladoππ° ∑
,ππ∑ ∏(
direccionDestinoTrasladoπππ —
,ππ— “'
idUbigeoDestinoTrasladoππ” Í
,ππÍ Î#
documentoReferenciaππÏ ˇ
)ππˇ Ä
;ππÄ Å 
Estado_transaccion
ªª )
estadoDeMovimientoDeAlmacen
ªª :
=
ªª; <
new
ªª= @ 
Estado_transaccion
ªªA S
(
ªªS T

idEmpleado
ªªT ^
,
ªª^ _
MaestroSettings
ªª` o
.
ªªo p
Default
ªªp w
.
ªªw x/
 IdDetalleMaestroEstadoConfirmadoªªx ò
,ªªò ô
fechaRegistroªªö ß
,ªªß ®
$strªª© ˚
)ªª˚ ¸
;ªª¸ ˝"
movimientoMercaderia
ºº  
.
ºº  ! 
Estado_transaccion
ºº! 3
.
ºº3 4
Add
ºº4 7
(
ºº7 8)
estadoDeMovimientoDeAlmacen
ºº8 S
)
ººS T
;
ººT U
return
ΩΩ "
movimientoMercaderia
ΩΩ '
;
ΩΩ' (
}
ææ 	
public
∆∆ 
OperationResult
∆∆ ;
-ConfirmarMovimientoInternoMercaderiaIntegrado
∆∆ L
(
∆∆L M
int
∆∆M P

idEmpleado
∆∆Q [
,
∆∆[ \
int
∆∆] `
idCentroAtencion
∆∆a q
,
∆∆q r
int
∆∆s v
idAlmacenDestino∆∆w á
,∆∆á à
int∆∆â å$
idResponsableDestino∆∆ç °
,∆∆° ¢
int∆∆£ ¶!
idTipoComprobante∆∆ß ∏
,∆∆∏ π
int∆∆∫ Ω"
idSerieComprobante∆∆æ –
,∆∆– —
bool
«« 
esPropio
«« 
,
«« 
string
««   
serieDeComprobante
««! 3
,
««3 4
int
««5 8!
numeroDeComprobante
««9 L
,
««L M
string
««N T
observacion
««U `
,
««` a
List
««b f
<
««f g!
Detalle_transaccion
««g z
>
««z {
detallesOrden««| â
,««â ä&
UserProfileSessionData««ã °
sesionDeUsuario««¢ ±
)««± ≤
{
»» 	
try
…… 
{
   
DateTime
ÀÀ 
fechaRegistro
ÀÀ &
=
ÀÀ' (
DateTimeUtil
ÀÀ) 5
.
ÀÀ5 6
FechaActual
ÀÀ6 A
(
ÀÀA B
)
ÀÀB C
;
ÀÀC D
Transaccion
ÕÕ 
movimientoInterno
ÕÕ -
=
ÕÕ. //
!GenerarMovimientoInternoDeAlmacen
ÕÕ0 Q
(
ÕÕQ R

idEmpleado
ÕÕR \
,
ÕÕ\ ]
idCentroAtencion
ÕÕ^ n
,
ÕÕn o
idAlmacenDestinoÕÕp Ä
,ÕÕÄ Å!
idTipoComprobanteÕÕÇ ì
,ÕÕì î"
idSerieComprobanteÕÕï ß
,ÕÕß ®
esPropioÕÕ© ±
,ÕÕ± ≤ 
serieDeComprobante
ŒŒ &
,
ŒŒ& '!
numeroDeComprobante
ŒŒ( ;
,
ŒŒ; <
fechaRegistro
ŒŒ= J
,
ŒŒJ K!
TransaccionSettings
ŒŒL _
.
ŒŒ_ `
Default
ŒŒ` g
.
ŒŒg h@
1IdTipoTransaccionDesplazamientoInternoMercader√≠aŒŒh ò
,ŒŒò ô
MaestroSettingsŒŒö ©
.ŒŒ© ™
DefaultŒŒ™ ±
.ŒŒ± ≤/
IdDetalleMaestroAccionConfirmarŒŒ≤ —
,ŒŒ— “!
TransaccionSettings
œœ '
.
œœ' (
Default
œœ( /
.
œœ/ 04
&IdTipoTransaccionOrdenDeDesplazamiento
œœ0 V
,
œœV W
observacion
œœX c
)
œœc d
;
œœd e
Transaccion
—— 
ordenDeMovimiento
—— -
=
——. /-
GenerarOrdenDeMovimientoInterno
——0 O
(
——O P
movimientoInterno
——P a
,
——a b

idEmpleado
——c m
,
——m n
idCentroAtencion
——o 
,—— Ä 
idAlmacenDestino——Å ë
,——ë í
fechaRegistro——ì †
,——† °!
TransaccionSettings
““ '
.
““' (
Default
““( /
.
““/ 04
&IdTipoTransaccionOrdenDeDesplazamiento
““0 V
,
““V W
MaestroSettings
““X g
.
““g h
Default
““h o
.
““o p/
 IdDetalleMaestroEstadoConfirmado““p ê
,““ê ë
$str
”” n
,
””n o
detallesOrden
””p }
,
””} ~
observacion”” ä
)””ä ã
;””ã å
ordenDeMovimiento
’’ !
.
’’! "
enum1
’’" '
=
’’( )
(
’’* +
int
’’+ .
)
’’. /%
IndicadorImpactoAlmacen
’’/ F
.
’’F G
	Inmediata
’’G P
;
’’P Q 
Estado_transaccion
÷÷ " 
estadoOrdenAlmacen
÷÷# 5
=
÷÷6 7
new
÷÷8 ; 
Estado_transaccion
÷÷< N
(
÷÷N O

idEmpleado
÷÷O Y
,
÷÷Y Z
MaestroSettings
÷÷[ j
.
÷÷j k
Default
÷÷k r
.
÷÷r s/
 IdDetalleMaestroEstadoCompletada÷÷s ì
,÷÷ì î
fechaRegistro÷÷ï ¢
,÷÷¢ £
$str÷÷§ ÷
)÷÷÷ ◊
;÷÷◊ ÿ
ordenDeMovimiento
◊◊ !
.
◊◊! " 
Estado_transaccion
◊◊" 4
.
◊◊4 5
Add
◊◊5 8
(
◊◊8 9 
estadoOrdenAlmacen
◊◊9 K
)
◊◊K L
;
◊◊L M
movimientoInterno
ŸŸ !
.
ŸŸ! "
Transaccion1
ŸŸ" .
.
ŸŸ. /
Add
ŸŸ/ 2
(
ŸŸ2 3
ordenDeMovimiento
ŸŸ3 D
)
ŸŸD E
;
ŸŸE F
Transaccion
€€ 2
$salidaMercaderiaPorMovimientoInterno
€€ @
=
€€A B0
"GenerarMovimientoInternoMercaderia
€€C e
(
€€e f
movimientoInterno
€€f w
,
€€w x

idEmpleado€€y É
,€€É Ñ 
idCentroAtencion€€Ö ï
,€€ï ñ 
idAlmacenDestino€€ó ß
,€€ß ®
fechaRegistro€€© ∂
,€€∂ ∑!
TransaccionSettings
‹‹ '
.
‹‹' (
Default
‹‹( /
.
‹‹/ 0E
7IdTipoTransaccionSalidaMercader√≠aDesplazamientoInterno
‹‹0 f
,
‹‹f g
$str
‹‹h o
,
‹‹o p
MaestroSettings‹‹q Ä
.‹‹Ä Å
Default‹‹Å à
.‹‹à â0
 IdDetalleMaestroEstadoConfirmado‹‹â ©
,‹‹© ™
$str
›› y
,
››y z
observacion››{ Ü
,››Ü á
detallesOrden››à ï
,››ï ñ
sesionDeUsuario››ó ¶
)››¶ ß
;››ß ®
detallesOrden
ﬂﬂ 
.
ﬂﬂ 
ForEach
ﬂﬂ %
(
ﬂﬂ% &
dOrden
ﬂﬂ& ,
=>
ﬂﬂ- /
{
‡‡ 
var
·· 
detalleSalida
·· %
=
··& '2
$salidaMercaderiaPorMovimientoInterno
··( L
.
··L M!
Detalle_transaccion
··M `
.
··` a
SingleOrDefault
··a p
(
··p q
dSalida
··q x
=>
··y {
dSalida··| É
.··É Ñ#
id_concepto_negocio··Ñ ó
==··ò ö
dOrden··õ °
.··° ¢#
id_concepto_negocio··¢ µ
&&··∂ ∏
dSalida··π ¿
.··¿ ¡
lote··¡ ≈
==··∆ »
dOrden··… œ
.··œ –
lote··– ‘
)··‘ ’
;··’ ÷
dOrden
‚‚ 
.
‚‚ 
precio_unitario
‚‚ *
=
‚‚+ ,
detalleSalida
‚‚- :
.
‚‚: ;
precio_unitario
‚‚; J
;
‚‚J K
dOrden
„„ 
.
„„ 
total
„„  
=
„„! "
detalleSalida
„„# 0
.
„„0 1
total
„„1 6
;
„„6 7
}
‰‰ 
)
‰‰ 
;
‰‰ 2
$salidaMercaderiaPorMovimientoInterno
ÁÁ 4
.
ÁÁ4 5
Transaccion3
ÁÁ5 A
=
ÁÁB C
ordenDeMovimiento
ÁÁD U
;
ÁÁU V
movimientoInterno
ÈÈ !
.
ÈÈ! "
Transaccion1
ÈÈ" .
.
ÈÈ. /
Add
ÈÈ/ 2
(
ÈÈ2 32
$salidaMercaderiaPorMovimientoInterno
ÈÈ3 W
)
ÈÈW X
;
ÈÈX Y
Transaccion
ÎÎ 3
%ingresoMercaderiaPorMovimientoInterno
ÎÎ A
=
ÎÎB C0
"GenerarMovimientoInternoMercaderia
ÎÎD f
(
ÎÎf g
movimientoInterno
ÎÎg x
,
ÎÎx y#
idResponsableDestinoÎÎz é
,ÎÎé è 
idAlmacenDestinoÎÎê †
,ÎÎ† ° 
idCentroAtencionÎÎ¢ ≤
,ÎÎ≤ ≥
fechaRegistroÎÎ¥ ¡
,ÎÎ¡ ¬!
TransaccionSettings
ÏÏ '
.
ÏÏ' (
Default
ÏÏ( /
.
ÏÏ/ 0F
8IdTipoTransaccionIngresoMercader√≠aDesplazamientoInterno
ÏÏ0 g
,
ÏÏg h
$str
ÏÏi p
,
ÏÏp q
MaestroSettingsÏÏr Å
.ÏÏÅ Ç
DefaultÏÏÇ â
.ÏÏâ ä0
 IdDetalleMaestroEstadoConfirmadoÏÏä ™
,ÏÏ™ ´
$str
ÌÌ z
,
ÌÌz {
observacionÌÌ| á
,ÌÌá à
detallesOrdenÌÌâ ñ
,ÌÌñ ó
sesionDeUsuarioÌÌò ß
)ÌÌß ®
;ÌÌ® ©3
%ingresoMercaderiaPorMovimientoInterno
ÔÔ 5
.
ÔÔ5 6
Transaccion3
ÔÔ6 B
=
ÔÔC D
ordenDeMovimiento
ÔÔE V
;
ÔÔV W
movimientoInterno
ÒÒ !
.
ÒÒ! "
Transaccion1
ÒÒ" .
.
ÒÒ. /
Add
ÒÒ/ 2
(
ÒÒ2 33
%ingresoMercaderiaPorMovimientoInterno
ÒÒ3 X
)
ÒÒX Y
;
ÒÒY Z
return
ÙÙ 8
*AfectarExisteciasyGuardarMovimientoInterno
ÙÙ A
(
ÙÙA B
movimientoInterno
ÙÙB S
,
ÙÙS T
detallesOrden
ÙÙU b
,
ÙÙb c
idCentroAtencion
ÙÙd t
,
ÙÙt u
idAlmacenDestinoÙÙv Ü
)ÙÙÜ á
;ÙÙá à
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
e
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
private
¸¸ 
OperationResult
¸¸ 8
*AfectarExisteciasyGuardarMovimientoInterno
¸¸  J
(
¸¸J K
Transaccion
¸¸K V
movimientoInterno
¸¸W h
,
¸¸h i
List
¸¸j n
<
¸¸n o"
Detalle_transaccion¸¸o Ç
>¸¸Ç É
detalles¸¸Ñ å
,¸¸å ç
int¸¸é ë 
idCentroAtencion¸¸í ¢
,¸¸¢ £
int¸¸§ ß 
idAlmacenDestino¸¸® ∏
)¸¸∏ π
{
˝˝ 	
OperationResult
˛˛ 
result
˛˛ "
;
˛˛" #
do
ˇˇ 
{
ÄÄ 
result
ÅÅ 
=
ÅÅ $
transaccionRepositorio
ÅÅ /
.
ÅÅ/ 0C
5CrearTransaccionActualizarDetalleTransaccionExistente
ÅÅ0 e
(
ÅÅe f
movimientoInterno
ÅÅf w
,
ÅÅw x
detallesÅÅy Å
,ÅÅÅ Ç 
idCentroAtencionÅÅÉ ì
,ÅÅì î#
TransaccionSettingsÅÅï ®
.ÅÅ® ©
DefaultÅÅ© ∞
.ÅÅ∞ ±1
!IdTipoTransaccionInventarioActualÅÅ± “
,ÅÅ“ ”
MaestroSettingsÅÅ‘ „
.ÅÅ„ ‰
DefaultÅÅ‰ Î
.ÅÅÎ Ï0
 IdDetalleMaestroEstadoConfirmadoÅÅÏ å
,ÅÅå ç 
idAlmacenDestinoÅÅé û
,ÅÅû ü#
TransaccionSettingsÅÅ† ≥
.ÅÅ≥ ¥
DefaultÅÅ¥ ª
.ÅÅª º1
!IdTipoTransaccionInventarioActualÅÅº ›
,ÅÅ› ﬁ
MaestroSettingsÅÅﬂ Ó
.ÅÅÓ Ô
DefaultÅÅÔ ˆ
.ÅÅˆ ˜0
 IdDetalleMaestroEstadoConfirmadoÅÅ˜ ó
)ÅÅó ò
;ÅÅò ô
}
ÇÇ 
while
ÉÉ 
(
ÉÉ 
result
ÉÉ 
.
ÉÉ 
code_result
ÉÉ %
==
ÉÉ& (!
OperationResultEnum
ÉÉ) <
.
ÉÉ< =
Error
ÉÉ= B
&&
ÉÉC E
result
ÉÉF L
.
ÉÉL M

exceptions
ÉÉM W
.
ÉÉW X
FirstOrDefault
ÉÉX f
(
ÉÉf g
)
ÉÉg h
.
ÉÉh i
GetType
ÉÉi p
(
ÉÉp q
)
ÉÉq r
==
ÉÉs u
typeof
ÉÉv |
(
ÉÉ| }"
ExistenciaExceptionÉÉ} ê
)ÉÉê ë
)ÉÉë í
;ÉÉí ì
result
ÑÑ 
.
ÑÑ 
information
ÑÑ 
=
ÑÑ  
new
ÑÑ! $!
MovimientoDeAlmacen
ÑÑ% 8
(
ÑÑ8 9
movimientoInterno
ÑÑ9 J
.
ÑÑJ K
Transaccion1
ÑÑK W
.
ÑÑW X
SingleOrDefault
ÑÑX g
(
ÑÑg h
t
ÑÑh i
=>
ÑÑj l
t
ÑÑm n
.
ÑÑn o"
id_tipo_transaccionÑÑo Ç
==ÑÑÉ Ö#
TransaccionSettingsÑÑÜ ô
.ÑÑô ö
DefaultÑÑö °
.ÑÑ° ¢G
7IdTipoTransaccionSalidaMercader√≠aDesplazamientoInternoÑÑ¢ ÿ
)ÑÑÿ Ÿ
)ÑÑŸ ⁄
.ÑÑ⁄ €
IdÑÑ€ ›
;ÑÑ› ﬁ
return
ÖÖ 
result
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
ââ 
Transaccion
ââ /
!GenerarMovimientoInternoDeAlmacen
ââ <
(
ââ< =
int
ââ= @

idEmpleado
ââA K
,
ââK L
int
ââM P
idCentroAtencion
ââQ a
,
ââa b
int
ââc f
idAlmacenDestino
ââg w
,
ââw x
int
âây | 
idTipoComprobanteââ} é
,ââé è
intââê ì"
idSerieComprobanteââî ¶
,ââ¶ ß
boolââ® ¨
esPropioââ≠ µ
,ââµ ∂
stringââ∑ Ω"
serieDeComprobanteââæ –
,ââ– —
int
ää !
numeroDeComprobante
ää #
,
ää# $
DateTime
ää% -
fechaRegistro
ää. ;
,
ää; <
int
ää= @
idTipoTransaccion
ääA R
,
ääR S
int
ääT W#
idTipoAccionARealizar
ääX m
,
ääm n
int
ääo r'
idTipoTransaccionValidarääs ã
,ääã å
stringääç ì
observacionääî ü
)ääü †
{
ãã 	
int
åå 
idMoneda
åå 
=
åå 
MaestroSettings
åå *
.
åå* +
Default
åå+ 2
.
åå2 3)
IdDetalleMaestroMonedaSoles
åå3 N
;
ååN O
int
çç 
idUnidadNegocio
çç 
=
çç  !
MaestroSettings
çç" 1
.
çç1 2
Default
çç2 9
.
çç9 :8
*IdDetalleMaestroUnidadDeNegocioTransversal
çç: d
;
ççd e
decimal
éé 
tipoDeCambio
éé  
=
éé! "
$num
éé# $
;
éé$ %
permisos_Logica
êê 
.
êê 
ValidarAccion
êê )
(
êê) *

idEmpleado
êê* 4
,
êê4 5#
idTipoAccionARealizar
êê6 K
,
êêK L&
idTipoTransaccionValidar
êêM e
,
êêe f
idUnidadNegocio
êêg v
)
êêv w
;
êêw x
if
íí 
(
íí  
AplicacionSettings
íí "
.
íí" #
Default
íí# *
.
íí* +
StockCentralizado
íí+ <
)
íí< =
{
ìì 
throw
îî 
new
îî 
LogicaException
îî )
(
îî) *
$strîî* ô
)îîô ö
;îîö õ
}
ïï 
	Operacion
óó 
operacionGenerica
óó '
=
óó( )
new
óó* -
	Operacion
óó. 7
(
óó7 8$
transaccionRepositorio
óó8 N
.
óóN O&
ObtenerUltimaTransaccion
óóO g
(
óóg h!
TransaccionSettings
óóh {
.
óó{ |
Defaultóó| É
.óóÉ Ñ*
IdTipoTransaccionOperacionóóÑ û
)óóû ü
)óóü †
;óó† °
string
ôô 
codigo
ôô 
=
ôô %
codigosOperacion_Logica
ôô 3
.
ôô3 43
%ObtenerSiguienteCodigoParaFacturacion
ôô4 Y
(
ôôY Z
$str
ôôZ _
,
ôô_ `
idTipoTransaccion
ôôa r
)
ôôr s
;
ôôs t
Comprobante
öö 
comprobante
öö #
;
öö# $
if
úú 
(
úú 
esPropio
úú 
)
úú 
{
ùù 
Serie_comprobante
üü !
serie
üü" '
=
üü( )$
transaccionRepositorio
üü* @
.
üü@ A'
ObtenerSerieDeComprobante
üüA Z
(
üüZ [ 
idSerieComprobante
üü[ m
)
üüm n
;
üün o
comprobante
°° 
=
°° 
new
°° !
Comprobante
°°" -
(
°°- .
serie
°°. 3
.
°°3 4!
id_tipo_comprobante
°°4 G
,
°°G H
serie
°°I N
.
°°N O
id
°°O Q
,
°°Q R
serie
°°S X
.
°°X Y
proximo_numero
°°Y g
,
°°g h
true
°°i m
,
°°m n
serie
°°o t
.
°°t u
numero
°°u {
)
°°{ |
;
°°| }
serie
¢¢ 
.
¢¢ 
proximo_numero
¢¢ $
=
¢¢% &
(
¢¢' (
serie
¢¢( -
.
¢¢- .
proximo_numero
¢¢. <
+
¢¢= >
$num
¢¢? @
)
¢¢@ A
;
¢¢A B
}
££ 
else
§§ 
{
•• 
comprobante
¶¶ 
=
¶¶ 
new
¶¶ !
Comprobante
¶¶" -
(
¶¶- .
idTipoComprobante
¶¶. ?
,
¶¶? @
null
¶¶A E
,
¶¶E F!
numeroDeComprobante
¶¶G Z
,
¶¶Z [
true
¶¶\ `
,
¶¶` a 
serieDeComprobante
¶¶b t
)
¶¶t u
;
¶¶u v
}
ßß 
Transaccion
©© 
movimientoInterno
©© )
=
©©* +
new
©©, /
Transaccion
©©0 ;
(
©©; <
codigo
©©< B
,
©©B C
operacionGenerica
©©D U
.
©©U V
Id
©©V X
,
©©X Y
fechaRegistro
©©Z g
,
©©g h!
TransaccionSettings
©©i |
.
©©| }
Default©©} Ñ
.©©Ñ ÖA
1IdTipoTransaccionDesplazamientoInternoMercader√≠a©©Ö µ
,©©µ ∂
idUnidadNegocio
™™ 
,
™™  
true
™™! %
,
™™% &
fechaRegistro
™™' 4
,
™™4 5
fechaRegistro
™™6 C
,
™™C D
observacion
™™E P
,
™™P Q
fechaRegistro
™™R _
,
™™_ `

idEmpleado
™™a k
,
™™k l
$num
™™m n
,
™™n o
idCentroAtencion™™p Ä
,™™Ä Å
idMoneda™™Ç ä
,™™ä ã
tipoDeCambio™™å ò
,™™ò ô
null™™ö û
,™™û ü 
idAlmacenDestino™™† ∞
)™™∞ ±
{
´´ 
Comprobante
≠≠ 
=
≠≠ 
comprobante
≠≠ )
}
ÆÆ 
;
ÆÆ 
return
∞∞ 
movimientoInterno
∞∞ $
;
∞∞$ %
}
±± 	
public
¥¥ 
Transaccion
¥¥ -
GenerarOrdenDeMovimientoInterno
¥¥ :
(
¥¥: ;
Transaccion
¥¥; F

movimiento
¥¥G Q
,
¥¥Q R
int
¥¥S V

idEmpleado
¥¥W a
,
¥¥a b
int
¥¥c f
idCentroAtencion
¥¥g w
,
¥¥w x
int
¥¥y |
idAlmacenDestino¥¥} ç
,¥¥ç é
DateTime¥¥è ó
fechaRegistro¥¥ò •
,¥¥• ¶
int¥¥ß ™"
idOrdenTransaccion¥¥´ Ω
,¥¥Ω æ
int
µµ !
idEstadoTransaccion
µµ #
,
µµ# $
string
µµ% +*
observacionEstadoTransaccion
µµ, H
,
µµH I
List
µµJ N
<
µµN O!
Detalle_transaccion
µµO b
>
µµb c
detalles
µµd l
,
µµl m
string
µµn t
observacionµµu Ä
)µµÄ Å
{
∂∂ 	
Transaccion
∏∏ $
ordenMovimientoInterno
∏∏ .
=
∏∏/ 0
new
∏∏1 4
Transaccion
∏∏5 @
(
∏∏@ A%
codigosOperacion_Logica
∏∏A X
.
∏∏X Y3
%ObtenerSiguienteCodigoParaFacturacion
∏∏Y ~
(
∏∏~ 

movimiento∏∏ â
.∏∏â ä
codigo∏∏ä ê
+∏∏ë í
$str∏∏ì ô
,∏∏ô ö"
idOrdenTransaccion∏∏õ ≠
)∏∏≠ Æ
,∏∏Æ Ø
null∏∏∞ ¥
,∏∏¥ µ
fechaRegistro∏∏∂ √
,∏∏√ ƒ"
idOrdenTransaccion∏∏≈ ◊
,∏∏◊ ÿ

movimiento
ππ 
.
ππ 
id_unidad_negocio
ππ ,
,
ππ, -
true
ππ. 2
,
ππ2 3
fechaRegistro
ππ4 A
,
ππA B
fechaRegistro
ππC P
,
ππP Q
observacion
ππR ]
,
ππ] ^
fechaRegistro
ππ_ l
,
ππl m

idEmpleado
ππn x
,
ππx y
$num
ππz {
,
ππ{ |
idCentroAtencionππ} ç
,ππç é

movimientoππè ô
.ππô ö
	id_monedaππö £
,ππ£ §

movimientoππ• Ø
.ππØ ∞
tipo_cambioππ∞ ª
,ππª º
null
∫∫ 
,
∫∫ 
idAlmacenDestino
∫∫ &
)
∫∫& '
{
ªª 
Comprobante
ΩΩ 
=
ΩΩ 

movimiento
ΩΩ (
.
ΩΩ( )
Comprobante
ΩΩ) 4
}
ææ 
;
ææ $
ordenMovimientoInterno
¿¿ "
.
¿¿" #
AgregarDetalles
¿¿# 2
(
¿¿2 3
detalles
¿¿3 ;
)
¿¿; <
;
¿¿< = 
Estado_transaccion
¬¬ *
estadoOrdenMovimeintoInterno
¬¬ ;
=
¬¬< =
new
¬¬> A 
Estado_transaccion
¬¬B T
(
¬¬T U

idEmpleado
¬¬U _
,
¬¬_ `!
idEstadoTransaccion
¬¬a t
,
¬¬t u
fechaRegistro¬¬v É
,¬¬É Ñ,
observacionEstadoTransaccion¬¬Ö °
)¬¬° ¢
;¬¬¢ £$
ordenMovimientoInterno
ƒƒ "
.
ƒƒ" # 
Estado_transaccion
ƒƒ# 5
.
ƒƒ5 6
Add
ƒƒ6 9
(
ƒƒ9 :*
estadoOrdenMovimeintoInterno
ƒƒ: V
)
ƒƒV W
;
ƒƒW X
return
≈≈ $
ordenMovimientoInterno
≈≈ )
;
≈≈) *
}
∆∆ 	
private
…… 
Transaccion
…… 0
"GenerarMovimientoInternoMercaderia
…… >
(
……> ?
Transaccion
……? J

movimiento
……K U
,
……U V
int
……W Z

idEmpleado
……[ e
,
……e f
int
……g j
idActorInterno
……k y
,
……y z
int
……{ ~
idActorExterno…… ç
,……ç é
DateTime……è ó
fechaRegistro……ò •
,……• ¶
int……ß ™+
idTipoTransaccionMovimiento……´ ∆
,……∆ «
string……» Œ
sufijoCodigo……œ €
,……€ ‹
int……› ‡#
idEstadoTransaccion……· Ù
,……Ù ı
string……ˆ ¸,
observacionEstadoTransaccion……˝ ô
,……ô ö
string……õ °
observacion……¢ ≠
,……≠ Æ
List……Ø ≥
<……≥ ¥#
Detalle_transaccion……¥ «
>……« »
detallesOrden……… ÷
,……÷ ◊&
UserProfileSessionData……ÿ Ó
sesionDeUsuario……Ô ˛
)……˛ ˇ
{
   	
Transaccion
ÃÃ "
movimientoMercaderia
ÃÃ ,
=
ÃÃ- .
new
ÃÃ/ 2
Transaccion
ÃÃ3 >
(
ÃÃ> ?%
codigosOperacion_Logica
ÃÃ? V
.
ÃÃV W3
%ObtenerSiguienteCodigoParaFacturacion
ÃÃW |
(
ÃÃ| }

movimientoÃÃ} á
.ÃÃá à
codigoÃÃà é
+ÃÃè ê
sufijoCodigoÃÃë ù
,ÃÃù û+
idTipoTransaccionMovimientoÃÃü ∫
)ÃÃ∫ ª
,ÃÃª º
null
ÕÕ 
,
ÕÕ 
fechaRegistro
ÕÕ #
,
ÕÕ# $)
idTipoTransaccionMovimiento
ÕÕ% @
,
ÕÕ@ A

movimiento
ÕÕB L
.
ÕÕL M
id_unidad_negocio
ÕÕM ^
,
ÕÕ^ _
true
ÕÕ` d
,
ÕÕd e
fechaRegistro
ÕÕf s
,
ÕÕs t
fechaRegistroÕÕu Ç
,ÕÕÇ É
observacionÕÕÑ è
,ÕÕè ê
fechaRegistroÕÕë û
,ÕÕû ü

idEmpleado
ŒŒ 
,
ŒŒ 

movimiento
ŒŒ &
.
ŒŒ& '
importe_total
ŒŒ' 4
,
ŒŒ4 5
idActorInterno
ŒŒ6 D
,
ŒŒD E

movimiento
ŒŒF P
.
ŒŒP Q
	id_moneda
ŒŒQ Z
,
ŒŒZ [

movimiento
ŒŒ\ f
.
ŒŒf g
tipo_cambio
ŒŒg r
,
ŒŒr s
null
ŒŒt x
,
ŒŒx y
idActorExternoŒŒz à
)ŒŒà â
{
œœ 
Comprobante
—— 
=
—— 

movimiento
—— (
.
——( )
Comprobante
——) 4
}
““ 
;
““ 
var
‘‘ "
detallesDeMovimiento
‘‘ $
=
‘‘% &6
(CalcularDetallesDeMovimientoDeMercaderia
‘‘' O
(
‘‘O P
idActorInterno
‘‘P ^
,
‘‘^ _)
idTipoTransaccionMovimiento
‘‘` {
,
‘‘{ |
detallesOrden‘‘} ä
,‘‘ä ã
sesionDeUsuario‘‘å õ
,‘‘õ ú
$num‘‘ù û
,‘‘û ü
false‘‘† •
)‘‘• ¶
;‘‘¶ ß"
movimientoMercaderia
÷÷  
.
÷÷  !
AgregarDetalles
÷÷! 0
(
÷÷0 1"
detallesDeMovimiento
÷÷1 E
)
÷÷E F
;
÷÷F G 
Estado_transaccion
ÿÿ (
estadoMovimientoMercaderia
ÿÿ 9
=
ÿÿ: ;
new
ÿÿ< ? 
Estado_transaccion
ÿÿ@ R
(
ÿÿR S

idEmpleado
ÿÿS ]
,
ÿÿ] ^!
idEstadoTransaccion
ÿÿ_ r
,
ÿÿr s
fechaRegistroÿÿt Å
,ÿÿÅ Ç,
observacionEstadoTransaccionÿÿÉ ü
)ÿÿü †
;ÿÿ† °(
estadoMovimientoMercaderia
⁄⁄ &
.
⁄⁄& '
Transaccion
⁄⁄' 2
=
⁄⁄3 4"
movimientoMercaderia
⁄⁄5 I
;
⁄⁄I J"
movimientoMercaderia
€€  
.
€€  ! 
Estado_transaccion
€€! 3
.
€€3 4
Add
€€4 7
(
€€7 8(
estadoMovimientoMercaderia
€€8 R
)
€€R S
;
€€S T
return
‹‹ "
movimientoMercaderia
‹‹ '
;
‹‹' (
}
›› 	
public
‚‚ 
void
‚‚ ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
‚‚ E
(
‚‚E F
List
‚‚F J
<
‚‚J K!
Detalle_transaccion
‚‚K ^
>
‚‚^ _2
#detallesInventarioactual_Existentes‚‚` É
,‚‚É Ñ+
DetalleTransaccionException‚‚Ö †
	exception‚‚° ™
)‚‚™ ´
{
„„ 	$
transaccionRepositorio
ÂÂ "
.
ÂÂ" #%
RefreshEntityCollection
ÂÂ# :
(
ÂÂ: ;1
#detallesInventarioactual_Existentes
ÂÂ; ^
)
ÂÂ^ _
;
ÂÂ_ `
}
ÊÊ 	
public
ÔÔ 
void
ÔÔ <
.ResolverProblemaDeConcurrenciaSerieComprobante
ÔÔ B
(
ÔÔB C
Transaccion
ÔÔC N"
operacionContenedora
ÔÔO c
,
ÔÔc d'
SerieComprobanteException
ÔÔe ~
	exceptionÔÔ à
)ÔÔà â
{
 	
List
ÒÒ 
<
ÒÒ 
Comprobante
ÒÒ 
>
ÒÒ 
comprobantes
ÒÒ *
=
ÒÒ+ ,"
operacionContenedora
ÒÒ- A
.
ÒÒA B
Transaccion1
ÒÒB N
.
ÒÒN O
Select
ÒÒO U
(
ÒÒU V
t
ÒÒV W
=>
ÒÒX Z
t
ÒÒ[ \
.
ÒÒ\ ]
Comprobante
ÒÒ] h
)
ÒÒh i
.
ÒÒi j
Distinct
ÒÒj r
(
ÒÒr s
)
ÒÒs t
.
ÒÒt u
ToList
ÒÒu {
(
ÒÒ{ |
)
ÒÒ| }
;
ÒÒ} ~
comprobantes
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ "
operacionContenedora
ÚÚ 1
.
ÚÚ1 2
Comprobante
ÚÚ2 =
)
ÚÚ= >
;
ÚÚ> ?
comprobantes
ÛÛ 
=
ÛÛ 
comprobantes
ÛÛ '
.
ÛÛ' (
Distinct
ÛÛ( 0
(
ÛÛ0 1
)
ÛÛ1 2
.
ÛÛ2 3
ToList
ÛÛ3 9
(
ÛÛ9 :
)
ÛÛ: ;
;
ÛÛ; <
var
ÙÙ !
comprobanteAfectado
ÙÙ #
=
ÙÙ$ %
comprobantes
ÙÙ& 2
.
ÙÙ2 3
Single
ÙÙ3 9
(
ÙÙ9 :
c
ÙÙ: ;
=>
ÙÙ< >
c
ÙÙ? @
.
ÙÙ@ A"
id_serie_comprobante
ÙÙA U
==
ÙÙV X
	exception
ÙÙY b
.
ÙÙb c
serieComprobante
ÙÙc s
.
ÙÙs t
id
ÙÙt v
)
ÙÙv w
;
ÙÙw x$
transaccionRepositorio
ıı "
.
ıı" #
RefreshEntity
ıı# 0
(
ıı0 1!
comprobanteAfectado
ıı1 D
.
ııD E
Serie_comprobante
ııE V
)
ııV W
;
ııW X?
1RegenerarNumeracionComprobantePropioAutonumerable
ˆˆ =
(
ˆˆ= >!
comprobanteAfectado
ˆˆ> Q
,
ˆˆQ R
	exception
ˆˆS \
.
ˆˆ\ ]
serieComprobante
ˆˆ] m
)
ˆˆm n
;
ˆˆn o
}
˜˜ 	
public
ˇˇ 
void
ˇˇ <
.ResolverProblemaDeConcurrenciaSerieComprobante
ˇˇ B
(
ˇˇB C
List
ˇˇC G
<
ˇˇG H
Transaccion
ˇˇH S
>
ˇˇS T%
operacionesContenedoras
ˇˇU l
,
ˇˇl m(
SerieComprobanteExceptionˇˇn á
	exceptionˇˇà ë
)ˇˇë í
{
ÄÄ 	
List
ÅÅ 
<
ÅÅ 
Comprobante
ÅÅ 
>
ÅÅ 
comprobantes
ÅÅ *
=
ÅÅ+ ,%
operacionesContenedoras
ÅÅ- D
.
ÅÅD E

SelectMany
ÅÅE O
(
ÅÅO P
o
ÅÅP Q
=>
ÅÅR T
o
ÅÅU V
.
ÅÅV W
Transaccion1
ÅÅW c
)
ÅÅc d
.
ÅÅd e
Select
ÅÅe k
(
ÅÅk l
t
ÅÅl m
=>
ÅÅn p
t
ÅÅq r
.
ÅÅr s
Comprobante
ÅÅs ~
)
ÅÅ~ 
.ÅÅ Ä
DistinctÅÅÄ à
(ÅÅà â
)ÅÅâ ä
.ÅÅä ã
ToListÅÅã ë
(ÅÅë í
)ÅÅí ì
;ÅÅì î
comprobantes
ÇÇ 
.
ÇÇ 
AddRange
ÇÇ !
(
ÇÇ! "%
operacionesContenedoras
ÇÇ" 9
.
ÇÇ9 :
Select
ÇÇ: @
(
ÇÇ@ A
o
ÇÇA B
=>
ÇÇC E
o
ÇÇF G
.
ÇÇG H
Comprobante
ÇÇH S
)
ÇÇS T
)
ÇÇT U
;
ÇÇU V
comprobantes
ÉÉ 
=
ÉÉ 
comprobantes
ÉÉ '
.
ÉÉ' (
Distinct
ÉÉ( 0
(
ÉÉ0 1
)
ÉÉ1 2
.
ÉÉ2 3
ToList
ÉÉ3 9
(
ÉÉ9 :
)
ÉÉ: ;
;
ÉÉ; <
var
ÑÑ 
serieAfectada
ÑÑ 
=
ÑÑ 
	exception
ÑÑ  )
.
ÑÑ) *
serieComprobante
ÑÑ* :
;
ÑÑ: ;
var
ÖÖ #
comprobantesAfectados
ÖÖ %
=
ÖÖ& '
comprobantes
ÖÖ( 4
.
ÖÖ4 5
Where
ÖÖ5 :
(
ÖÖ: ;
c
ÖÖ; <
=>
ÖÖ= ?
c
ÖÖ@ A
.
ÖÖA B"
id_serie_comprobante
ÖÖB V
==
ÖÖW Y
serieAfectada
ÖÖZ g
.
ÖÖg h
id
ÖÖh j
)
ÖÖj k
.
ÖÖk l
ToList
ÖÖl r
(
ÖÖr s
)
ÖÖs t
;
ÖÖt u$
transaccionRepositorio
ÜÜ "
.
ÜÜ" #
RefreshEntity
ÜÜ# 0
(
ÜÜ0 1
serieAfectada
ÜÜ1 >
)
ÜÜ> ?
;
ÜÜ? @B
4RegenerarNumeracionComprobantesPropiosAutonumerables
áá @
(
áá@ A#
comprobantesAfectados
ááA V
,
ááV W
serieAfectada
ááX e
)
ááe f
;
ááf g
}
àà 	
public
ëë 
List
ëë 
<
ëë !
Detalle_transaccion
ëë '
>
ëë' (&
UnificarPorConceptoYLote
ëë) A
(
ëëA B
List
ëëB F
<
ëëF G!
Detalle_transaccion
ëëG Z
>
ëëZ ['
detallesMovimientoAlmacen
ëë\ u
)
ëëu v
{
íí 	
var
îî 7
)detallesMovimientoAlmacenAgrupadosPorLote
îî 9
=
îî: ;'
detallesMovimientoAlmacen
îî< U
.
îîU V
GroupBy
îîV ]
(
îî] ^
dma
îî^ a
=>
îîb d
new
îîe h
{
îîi j
dma
îîk n
.
îîn o"
id_concepto_negocioîîo Ç
,îîÇ É
dmaîîÑ á
.îîá à
loteîîà å
}îîç é
)îîé è
.îîè ê
ToListîîê ñ
(îîñ ó
)îîó ò
;îîò ô
List
ïï 
<
ïï !
Detalle_transaccion
ïï $
>
ïï$ %=
/nuevosDetallesMovimientoAlmacenAgrupadosPorLote
ïï& U
=
ïïV W
new
ïïX [
List
ïï\ `
<
ïï` a!
Detalle_transaccion
ïïa t
>
ïït u
(
ïïu v
)
ïïv w
;
ïïw x
foreach
ññ 
(
ññ 
var
ññ 
grupo
ññ 
in
ññ !7
)detallesMovimientoAlmacenAgrupadosPorLote
ññ" K
)
ññK L
{
óó 
List
òò 
<
òò 3
%ValorDetalleMaestroDetalleTransaccion
òò :
>
òò: ;6
(valoresDetalleMaestroDetallesTransaccion
òò< d
=
òòe f
new
òòg j
List
òòk o
<
òòo p4
%ValorDetalleMaestroDetalleTransaccionòòp ï
>òòï ñ
(òòñ ó
)òòó ò
;òòò ô
var
ôô  
cantidad_principal
ôô &
=
ôô' (
grupo
ôô) .
.
ôô. /
Sum
ôô/ 2
(
ôô2 3
dm
ôô3 5
=>
ôô6 8
dm
ôô9 ;
.
ôô; <
cantidad
ôô< D
)
ôôD E
;
ôôE F
var
öö !
cantidad_secundaria
öö '
=
öö( )
grupo
öö* /
.
öö/ 0
Sum
öö0 3
(
öö3 4
dm
öö4 6
=>
öö7 9
dm
öö: <
.
öö< =!
cantidad_secundaria
öö= P
)
ööP Q
;
ööQ R
var
õõ 
total
õõ 
=
õõ 
grupo
õõ !
.
õõ! "
Sum
õõ" %
(
õõ% &
dm
õõ& (
=>
õõ) +
dm
õõ, .
.
õõ. /
total
õõ/ 4
)
õõ4 5
;
õõ5 6
var
úú 
costoUnitario
úú !
=
úú" # 
cantidad_principal
úú$ 6
!=
úú7 9
$num
úú: ;
?
úú< =
total
úú> C
/
úúD E 
cantidad_principal
úúF X
:
úúY Z
$num
úú[ \
;
úú\ ]
var
ùù 
igv
ùù 
=
ùù 
grupo
ùù 
.
ùù  
Sum
ùù  #
(
ùù# $
dm
ùù$ &
=>
ùù' )
dm
ùù* ,
.
ùù, -
igv
ùù- 0
)
ùù0 1
;
ùù1 2
var
ûû 
isc
ûû 
=
ûû 
grupo
ûû 
.
ûû  
Sum
ûû  #
(
ûû# $
dm
ûû$ &
=>
ûû' )
dm
ûû* ,
.
ûû, -
isc
ûû- 0
)
ûû0 1
;
ûû1 2
var
üü 
	descuento
üü 
=
üü 
grupo
üü  %
.
üü% &
Sum
üü& )
(
üü) *
dm
üü* ,
=>
üü- /
dm
üü0 2
.
üü2 3
	descuento
üü3 <
)
üü< =
;
üü= >!
Detalle_transaccion
°° #
detalle
°°$ +
=
°°, -
new
°°. 1!
Detalle_transaccion
°°2 E
(
°°E F
)
°°F G
{
¢¢ !
id_concepto_negocio
££ '
=
££( )
grupo
££* /
.
££/ 0
Key
££0 3
.
££3 4!
id_concepto_negocio
££4 G
,
££G H
cantidad
§§ 
=
§§  
cantidad_principal
§§ 1
,
§§1 2!
cantidad_secundaria
•• '
=
••( )!
cantidad_secundaria
••* =
,
••= >
detalle
¶¶ 
=
¶¶ 
$str
¶¶ 1
,
¶¶1 2
precio_unitario
ßß #
=
ßß$ %
costoUnitario
ßß& 3
,
ßß3 4
total
®® 
=
®® 
total
®® !
,
®®! "
igv
©© 
=
©© 
igv
©© 
,
©© 
isc
™™ 
=
™™ 
isc
™™ 
,
™™ 
	descuento
´´ 
=
´´ 
	descuento
´´  )
,
´´) *
lote
¨¨ 
=
¨¨ 
grupo
¨¨  
.
¨¨  !
Key
¨¨! $
.
¨¨$ %
lote
¨¨% )
,
¨¨) *
}
≠≠ 
;
≠≠ =
/nuevosDetallesMovimientoAlmacenAgrupadosPorLote
ÆÆ ?
.
ÆÆ? @
Add
ÆÆ@ C
(
ÆÆC D
detalle
ÆÆD K
)
ÆÆK L
;
ÆÆL M
}
ØØ 
return
∞∞ =
/nuevosDetallesMovimientoAlmacenAgrupadosPorLote
∞∞ B
;
∞∞B C
}
±± 	
public
∫∫ 
void
∫∫ 8
*ResolverDetalleExistenteEnInventarioActual
∫∫ >
(
∫∫> ?!
Detalle_transaccion
∫∫? R
detalleMovimiento
∫∫S d
,
∫∫d e!
Detalle_transaccion
∫∫f y&
detalleInventarioactual∫∫z ë
,∫∫ë í
bool∫∫ì ó&
debeAumentarExistencia∫∫ò Æ
,∫∫Æ Ø
decimal∫∫∞ ∑
costoUnitario∫∫∏ ≈
,∫∫≈ ∆
bool∫∫« À4
$esSalidaSujetaADisponibilidadDeStock∫∫Ã 
)∫∫ Ò
{
ªª 	
if
ºº 
(
ºº 
!
ºº $
debeAumentarExistencia
ºº '
&&
ºº( *2
$esSalidaSujetaADisponibilidadDeStock
ºº+ O
&&
ººP R
(
ººS T
detalleMovimiento
ººT e
.
ººe f
cantidad
ººf n
>
ººo p&
detalleInventarioactualººq à
.ººà â
cantidadººâ ë
)ººë í
)ººí ì
throwººî ô
newººö ù
LogicaExceptionººû ≠
(ºº≠ Æ'
detalleInventarioactualººÆ ≈
.ºº≈ ∆ 
Concepto_negocioºº∆ ÷
.ºº÷ ◊
nombreºº◊ ›
+ººﬁ ﬂ
$strºº‡ ö
+ººõ ú'
detalleInventarioactualººù ¥
.ºº¥ µ
cantidadººµ Ω
+ººæ ø
$strºº¿ À
)ººÀ Ã
;ººÃ Õ
var
ΩΩ 
factor
ΩΩ 
=
ΩΩ $
debeAumentarExistencia
ΩΩ /
?
ΩΩ0 1
$num
ΩΩ2 3
:
ΩΩ4 5
-
ΩΩ6 7
$num
ΩΩ7 8
;
ΩΩ8 9
decimal
¿¿ $
nuevaCantidadPrincipal
¿¿ *
=
¿¿+ ,%
detalleInventarioactual
¿¿- D
.
¿¿D E
cantidad
¿¿E M
+
¿¿N O
detalleMovimiento
¿¿P a
.
¿¿a b
cantidad
¿¿b j
*
¿¿k l
factor
¿¿m s
;
¿¿s t
decimal
¡¡ %
nuevaCantidadSecundaria
¡¡ +
=
¡¡, -%
detalleInventarioactual
¡¡. E
.
¡¡E F!
cantidad_secundaria
¡¡F Y
+
¡¡Z [
detalleMovimiento
¡¡\ m
.
¡¡m n"
cantidad_secundaria¡¡n Å
*¡¡Ç É
factor¡¡Ñ ä
;¡¡ä ã%
detalleInventarioactual
¬¬ #
.
¬¬# $
precio_unitario
¬¬$ 3
=
¬¬4 5
costoUnitario
¬¬6 C
;
¬¬C D%
detalleInventarioactual
√√ #
.
√√# $
total
√√$ )
=
√√* +%
detalleInventarioactual
√√, C
.
√√C D
precio_unitario
√√D S
*
√√T U$
nuevaCantidadPrincipal
√√V l
;
√√l m%
detalleInventarioactual
≈≈ #
.
≈≈# $
cantidad
≈≈$ ,
=
≈≈- .$
nuevaCantidadPrincipal
≈≈/ E
;
≈≈E F%
detalleInventarioactual
∆∆ #
.
∆∆# $!
cantidad_secundaria
∆∆$ 7
=
∆∆8 9%
nuevaCantidadSecundaria
∆∆: Q
;
∆∆Q R
var
»» 0
"detalleTieneCaracteristicasPropias
»» 2
=
»»3 4
detalleMovimiento
»»5 F
.
»»F G7
)Valor_detalle_maestro_detalle_transaccion
»»G p
!=
»»q s
null
»»t x
&&
»»y { 
detalleMovimiento»»| ç
.»»ç é9
)Valor_detalle_maestro_detalle_transaccion»»é ∑
.»»∑ ∏
Count»»∏ Ω
(»»Ω æ
)»»æ ø
>»»¿ ¡
$num»»¬ √
;»»√ ƒ
if
…… 
(
…… 0
"detalleTieneCaracteristicasPropias
…… 2
)
……2 3,
ResolverCaracteristicasPropias
……4 R
(
……R S
detalleMovimiento
……S d
,
……d e%
detalleInventarioactual
……f }
,
……} ~%
debeAumentarExistencia…… ï
)……ï ñ
;……ñ ó
}
   	
public
ÃÃ 
void
ÃÃ 4
&ResolverDetalleNuevoEnInventarioActual
ÃÃ :
(
ÃÃ: ;!
Detalle_transaccion
ÃÃ; N
detalleMovimiento
ÃÃO `
,
ÃÃ` a
List
ÃÃb f
<
ÃÃf g!
Detalle_transaccion
ÃÃg z
>
ÃÃz {.
detallesInventarioactual_NuevosÃÃ| õ
,ÃÃõ ú
boolÃÃù °&
debeAumentarExistenciaÃÃ¢ ∏
)ÃÃ∏ π
{
ÕÕ 	
var
ŒŒ 
nuevoDetalle
ŒŒ 
=
ŒŒ 
detalleMovimiento
ŒŒ 0
.
ŒŒ0 1
Clone
ŒŒ1 6
(
ŒŒ6 7
)
ŒŒ7 8
;
ŒŒ8 9
nuevoDetalle
œœ 
.
œœ 
cantidad
œœ !
*=
œœ" $$
debeAumentarExistencia
œœ% ;
?
œœ< =
$num
œœ> ?
:
œœ@ A
-
œœB C
$num
œœC D
;
œœD E
nuevoDetalle
–– 
.
–– 
total
–– 
*=
–– !$
debeAumentarExistencia
––" 8
?
––9 :
$num
––; <
:
––= >
-
––? @
$num
––@ A
;
––A B-
detallesInventarioactual_Nuevos
—— +
.
——+ ,
Add
——, /
(
——/ 0
nuevoDetalle
——0 <
)
——< =
;
——= >
}
““ 	
public
‘‘ 
void
‘‘ ,
ResolverCaracteristicasPropias
‘‘ 2
(
‘‘2 3!
Detalle_transaccion
‘‘3 F#
detalleMovimientoBien
‘‘G \
,
‘‘\ ]!
Detalle_transaccion
‘‘^ q&
detalleInventarioactual‘‘r â
,‘‘â ä
bool‘‘ã è&
debeAumentarExistencia‘‘ê ¶
)‘‘¶ ß
{
’’ 	
foreach
÷÷ 
(
÷÷ 
var
÷÷ B
4valorCaracteristicaPropiaDelDetalleMovimientoAlmacen
÷÷ M
in
÷÷N P#
detalleMovimientoBien
÷÷Q f
.
÷÷f g8
)Valor_detalle_maestro_detalle_transaccion÷÷g ê
.÷÷ê ë
ToList÷÷ë ó
(÷÷ó ò
)÷÷ò ô
)÷÷ô ö
{
◊◊ 
if
ÿÿ 
(
ÿÿ $
debeAumentarExistencia
ÿÿ *
)
ÿÿ* +
{
ŸŸ %
detalleInventarioactual
⁄⁄ +
.
⁄⁄+ ,7
)Valor_detalle_maestro_detalle_transaccion
⁄⁄, U
.
⁄⁄U V
Add
⁄⁄V Y
(
⁄⁄Y ZC
4valorCaracteristicaPropiaDelDetalleMovimientoAlmacen⁄⁄Z é
.⁄⁄é è
Clone⁄⁄è î
(⁄⁄î ï
)⁄⁄ï ñ
)⁄⁄ñ ó
;⁄⁄ó ò
}
€€ 
else
‹‹ 
{
›› %
detalleInventarioactual
ﬁﬁ +
.
ﬁﬁ+ ,7
)Valor_detalle_maestro_detalle_transaccion
ﬁﬁ, U
.
ﬁﬁU V
SingleOrDefault
ﬁﬁV e
(
ﬁﬁe f
dbvd
ﬁﬁf j
=>
ﬁﬁk m
dbvd
ﬁﬁn r
.
ﬁﬁr s
id
ﬁﬁs u
==
ﬁﬁv xC
4valorCaracteristicaPropiaDelDetalleMovimientoAlmacenﬁﬁy ≠
.ﬁﬁ≠ Æ
idﬁﬁÆ ∞
)ﬁﬁ∞ ±
.ﬁﬁ± ≤#
Detalle_transaccionﬁﬁ≤ ≈
=ﬁﬁ∆ «%
detalleMovimientoBienﬁﬁ» ›
;ﬁﬁ› ﬁ
}
‡‡ 
}
·· 
}
‚‚ 	
public
ÏÏ 
void
ÏÏ 0
"ResolverDetallesDeInventarioActual
ÏÏ 6
(
ÏÏ6 7
	IGrouping
ÏÏ7 @
<
ÏÏ@ A
int
ÏÏA D
,
ÏÏD E!
Detalle_transaccion
ÏÏF Y
>
ÏÏY Z*
detallesMovimientoDeConcepto
ÏÏ[ w
,
ÏÏw x
List
ÏÏy }
<
ÏÏ} ~"
Detalle_transaccionÏÏ~ ë
>ÏÏë í3
#detallesInventarioActual_ExistentesÏÏì ∂
,ÏÏ∂ ∑
ListÏÏ∏ º
<ÏÏº Ω#
Detalle_transaccionÏÏΩ –
>ÏÏ– —/
detallesInventarioActual_NuevosÏÏ“ Ò
,ÏÏÒ Ú
longÏÏÛ ˜-
idTransaccionInventarioactualÏÏ¯ ï
,ÏÏï ñ
boolÏÏó õ&
debeAumentarExistenciaÏÏú ≤
,ÏÏ≤ ≥
boolÏÏ¥ ∏4
$esSalidaSujetaADisponibilidadDeStockÏÏπ ›
,ÏÏ› ﬁ
intÏÏﬂ ‚0
 idTipoTrnsaccionMovimientoBienesÏÏ„ É
)ÏÏÉ Ñ
{
ÌÌ 	
var
ÔÔ &
detallesInventarioActuak
ÔÔ (
=
ÔÔ) *1
#detallesInventarioActual_Existentes
ÔÔ+ N
.
ÔÔN O
Where
ÔÔO T
(
ÔÔT U
dbdt
ÔÔU Y
=>
ÔÔZ \
dbdt
ÔÔ] a
.
ÔÔa b!
id_concepto_negocio
ÔÔb u
==
ÔÔv x+
detallesMovimientoDeConceptoÔÔy ï
.ÔÔï ñ
KeyÔÔñ ô
)ÔÔô ö
.ÔÔö õ
ToListÔÔõ °
(ÔÔ° ¢
)ÔÔ¢ £
;ÔÔ£ §
var
 
factor
 
=
 $
debeAumentarExistencia
 /
?
0 1
$num
2 3
:
4 5
-
6 7
$num
7 8
;
8 9
var
ÒÒ *
debeRecalcularPrecioUnitario
ÒÒ ,
=
ÒÒ- .
Diccionario
ÒÒ/ :
.
ÒÒ: ;T
ETiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeLaOrdenÒÒ; Ä
.ÒÒÄ Å
UnionÒÒÅ Ü
(ÒÒÜ á
DiccionarioÒÒá í
.ÒÒí ìk
[TiposDeTransaccionMovimientoDeBienesConCostoUnitarioObtenidoDeMovimientoDeTransaccionOrigenÒÒì Ó
)ÒÒÓ Ô
.ÒÒÔ 
ContainsÒÒ ¯
(ÒÒ¯ ˘0
 idTipoTrnsaccionMovimientoBienesÒÒ˘ ô
)ÒÒô ö
;ÒÒö õ
decimal
ÛÛ ,
CantidadPrincipalTodosLosLotes
ÛÛ 2
=
ÛÛ3 4&
detallesInventarioActuak
ÛÛ5 M
.
ÛÛM N
Sum
ÛÛN Q
(
ÛÛQ R
dif
ÛÛR U
=>
ÛÛV X
dif
ÛÛY \
.
ÛÛ\ ]
cantidad
ÛÛ] e
)
ÛÛe f
+
ÛÛg h+
detallesMovimientoDeConceptoÛÛi Ö
.ÛÛÖ Ü
SumÛÛÜ â
(ÛÛâ ä
dmcÛÛä ç
=>ÛÛé ê
dmcÛÛë î
.ÛÛî ï
cantidadÛÛï ù
)ÛÛù û
*ÛÛü †
factorÛÛ° ß
;ÛÛß ®
decimal
ÙÙ '
ImporteTotalTodosLosLotes
ÙÙ -
=
ÙÙ. /&
detallesInventarioActuak
ÙÙ0 H
.
ÙÙH I
Sum
ÙÙI L
(
ÙÙL M
dif
ÙÙM P
=>
ÙÙQ S
dif
ÙÙT W
.
ÙÙW X
total
ÙÙX ]
)
ÙÙ] ^
+
ÙÙ_ `
(
ÙÙa b*
detallesMovimientoDeConcepto
ÙÙb ~
.
ÙÙ~ 
SumÙÙ Ç
(ÙÙÇ É
dmcÙÙÉ Ü
=>ÙÙá â
dmcÙÙä ç
.ÙÙç é
totalÙÙé ì
)ÙÙì î
*ÙÙï ñ
factorÙÙó ù
)ÙÙù û
;ÙÙû ü
decimal
ıı (
CostoUnitarioTodosLosLotes
ıı .
=
ıı/ 0*
debeRecalcularPrecioUnitario
ıı1 M
?
ııN O
(
ııP Q,
CantidadPrincipalTodosLosLotes
ııQ o
!=
ııp r
$num
ııs t
?
ııu v
(
ııw x(
ImporteTotalTodosLosLotesııx ë
/ııí ì.
CantidadPrincipalTodosLosLotesııî ≤
)ıı≤ ≥
:ıı¥ µ
$numıı∂ ∑
)ıı∑ ∏
:ııπ ∫(
detallesInventarioActuakııª ”
.ıı” ‘
Firstıı‘ Ÿ
(ııŸ ⁄
)ıı⁄ €
.ıı€ ‹
precio_unitarioıı‹ Î
;ııÎ Ï
foreach
ˆˆ 
(
ˆˆ 
var
ˆˆ 
detalleMovimiento
ˆˆ *
in
ˆˆ+ -*
detallesMovimientoDeConcepto
ˆˆ. J
)
ˆˆJ K
{
˜˜ 
var
¯¯ %
detalleInventarioactual
¯¯ +
=
¯¯, -&
detallesInventarioActuak
¯¯. F
.
¯¯F G
Single
¯¯G M
(
¯¯M N
d
¯¯N O
=>
¯¯P R
d
¯¯S T
.
¯¯T U
lote
¯¯U Y
==
¯¯Z \
detalleMovimiento
¯¯] n
.
¯¯n o
lote
¯¯o s
)
¯¯s t
;
¯¯t u
if
˙˙ 
(
˙˙ %
detalleInventarioactual
˙˙ +
==
˙˙, .
null
˙˙/ 3
)
˙˙3 4
{
˚˚ 
if
¸¸ 
(
¸¸ $
debeAumentarExistencia
¸¸ .
||
¸¸/ 1
!
¸¸2 32
$esSalidaSujetaADisponibilidadDeStock
¸¸3 W
)
¸¸W X
{
˝˝ 4
&ResolverDetalleNuevoEnInventarioActual
˛˛ >
(
˛˛> ?
detalleMovimiento
˛˛? P
,
˛˛P Q-
detallesInventarioActual_Nuevos
˛˛R q
,
˛˛q r%
debeAumentarExistencia˛˛s â
)˛˛â ä
;˛˛ä ã
}
ˇˇ 
else
ÄÄ 
throw
ÄÄ 
new
ÄÄ "
LogicaException
ÄÄ# 2
(
ÄÄ2 3
$str
ÄÄ3 `
)
ÄÄ` a
;
ÄÄa b
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 8
*ResolverDetalleExistenteEnInventarioActual
ÑÑ >
(
ÑÑ> ?
detalleMovimiento
ÑÑ? P
,
ÑÑP Q%
detalleInventarioactual
ÑÑR i
,
ÑÑi j%
debeAumentarExistenciaÑÑk Å
,ÑÑÅ Ç*
CostoUnitarioTodosLosLotesÑÑÉ ù
,ÑÑù û4
$esSalidaSujetaADisponibilidadDeStockÑÑü √
)ÑÑ√ ƒ
;ÑÑƒ ≈
}
ÖÖ 
}
ÜÜ 
}
áá 	
public
íí (
AfectacionInventarioActual
íí )&
ResolverInventarioActual
íí* B
(
ííB C
List
ííC G
<
ííG H!
Detalle_transaccion
ííH [
>
íí[ \'
detallesMovimientosBienes
íí] v
,
íív w
long
ííx |,
idTransaccionInventarioActualíí} ö
,ííö õ'
TipoMovimientoOperacionííú ≥
tipoMovimientoíí¥ ¬
,íí¬ √
boolííƒ »4
$esSalidaSujetaADisponibilidadDeStockíí… Ì
,ííÌ Ó
intííÔ Ú!
idTipoTransaccionííÛ Ñ
)ííÑ Ö
{
ìì 	
var
îî 5
'grupoDetallesMovimientoBienesPorAlmacen
îî 7
=
îî8 9!
Detalle_transaccion
îî: M
.
îîM N
Clone
îîN S
(
îîS T'
detallesMovimientosBienes
îîT m
)
îîm n
;
îîn o
if
ññ 
(
ññ 
!
ññ  
AplicacionSettings
ññ #
.
ññ# $
Default
ññ$ +
.
ññ+ ,$
PermitirGestionDeLotes
ññ, B
)
ññB C
{
óó 5
'grupoDetallesMovimientoBienesPorAlmacen
òò 7
=
òò8 95
'grupoDetallesMovimientoBienesPorAlmacen
òò: a
.
òòa b
Select
òòb h
(
òòh i
dmb
òòi l
=>
òòm o
{
òòp q
dmb
òòr u
.
òòu v
lote
òòv z
=
òò{ |
nullòò} Å
;òòÅ Ç
returnòòÉ â
dmbòòä ç
;òòç é
}òòè ê
)òòê ë
.òòë í
ToListòòí ò
(òòò ô
)òòô ö
;òòö õ
}
ôô 
List
õõ 
<
õõ !
Detalle_transaccion
õõ $
>
õõ$ %1
#detallesInventarioActual_Existentes
õõ& I
=
õõJ K$
transaccionRepositorio
õõL b
.
õõb c(
ObtenerDetallesTransaccion
õõc }
(
õõ} ~,
idTransaccionInventarioActualõõ~ õ
,õõõ ú7
'grupoDetallesMovimientoBienesPorAlmacenõõù ƒ
.õõƒ ≈
Selectõõ≈ À
(õõÀ Ã
dmaõõÃ œ
=>õõ– “
dmaõõ” ÷
.õõ÷ ◊#
id_concepto_negocioõõ◊ Í
)õõÍ Î
.õõÎ Ï
ToArrayõõÏ Û
(õõÛ Ù
)õõÙ ı
)õõı ˆ
.õõˆ ˜
ToListõõ˜ ˝
(õõ˝ ˛
)õõ˛ ˇ
;õõˇ Ä
List
ùù 
<
ùù !
Detalle_transaccion
ùù $
>
ùù$ %-
detallesInventarioActual_Nuevos
ùù& E
=
ùùF G
new
ùùH K
List
ùùL P
<
ùùP Q!
Detalle_transaccion
ùùQ d
>
ùùd e
(
ùùe f
)
ùùf g
;
ùùg h
bool
ûû $
debeAumentarExistencia
ûû '
=
ûû( )
tipoMovimiento
ûû* 8
==
ûû9 ;%
TipoMovimientoOperacion
ûû< S
.
ûûS T
Entrada
ûûT [
;
ûû[ \
var
üü 6
(detallesMovimientoBienesPorConceptoYLote
üü 8
=
üü9 :&
UnificarPorConceptoYLote
üü; S
(
üüS T5
'grupoDetallesMovimientoBienesPorAlmacen
üüT {
)
üü{ |
;
üü| }
var
†† 2
$detallesMovimientosBienesPorConcepto
†† 4
=
††5 66
(detallesMovimientoBienesPorConceptoYLote
††7 _
.
††_ `
GroupBy
††` g
(
††g h
dmb
††h k
=>
††l n
dmb
††o r
.
††r s"
id_concepto_negocio††s Ü
)††Ü á
;††á à
foreach
££ 
(
££ 
var
££ !
detallesPorConcepto
££ ,
in
££- /2
$detallesMovimientosBienesPorConcepto
££0 T
)
££T U
{
§§ 0
"ResolverDetallesDeInventarioActual
•• 2
(
••2 3!
detallesPorConcepto
••3 F
,
••F G1
#detallesInventarioActual_Existentes
••H k
,
••k l.
detallesInventarioActual_Nuevos••m å
,••å ç-
idTransaccionInventarioActual••é ´
,••´ ¨&
debeAumentarExistencia••≠ √
,••√ ƒ4
$esSalidaSujetaADisponibilidadDeStock••≈ È
,••È Í!
idTipoTransaccion••Î ¸
)••¸ ˝
;••˝ ˛
}
¶¶ 
return
ßß 
new
ßß (
AfectacionInventarioActual
ßß 1
(
ßß1 2
)
ßß2 3
{
ßß4 5
Detalles_nuevos
ßß6 E
=
ßßF G-
detallesInventarioActual_Nuevos
ßßH g
,
ßßg h"
Detalles_modificados
ßßi }
=
ßß~ 3
#detallesInventarioActual_ExistentesßßÄ £
}ßß§ •
;ßß• ¶
}
®® 	
public
™™ (
AfectacionInventarioActual
™™ )!
ResolverInventarios
™™* =
(
™™= >
List
™™> B
<
™™B C
Transaccion
™™C N
>
™™N O!
movimientosDeBienes
™™P c
,
™™c d$
UserProfileSessionData
™™e {
sesionDeUsuario™™| ã
)™™ã å
{
´´ 	
List
¨¨ 
<
¨¨ !
Detalle_transaccion
¨¨ $
>
¨¨$ %/
!detallesInventariosactuals_Nuevos
¨¨& G
=
¨¨H I
new
¨¨J M
List
¨¨N R
<
¨¨R S!
Detalle_transaccion
¨¨S f
>
¨¨f g
(
¨¨g h
)
¨¨h i
;
¨¨i j
List
≠≠ 
<
≠≠ !
Detalle_transaccion
≠≠ $
>
≠≠$ %3
%detallesInventariosactuals_Existentes
≠≠& K
=
≠≠L M
new
≠≠N Q
List
≠≠R V
<
≠≠V W!
Detalle_transaccion
≠≠W j
>
≠≠j k
(
≠≠k l
)
≠≠l m
;
≠≠m n
if
ÆÆ 
(
ÆÆ !
movimientosDeBienes
ÆÆ #
!=
ÆÆ$ &
null
ÆÆ' +
)
ÆÆ+ ,
{
ØØ 
var
±± 7
)gruposDetallesMovimientosBienesPorAlmacen
±± =
=
±±> ?!
movimientosDeBienes
±±@ S
.
±±S T

SelectMany
±±T ^
(
±±^ _
mb
±±_ a
=>
±±b d
mb
±±e g
.
±±g h!
Detalle_transaccion
±±h {
)
±±{ |
.
±±| }
GroupBy±±} Ñ
(±±Ñ Ö
dt±±Ö á
=>±±à ä
new±±ã é
{±±è ê
	idAlmacen±±ë ö
=±±õ ú
dt±±ù ü
.±±ü †
Transaccion±±† ´
.±±´ ¨(
id_actor_negocio_interno±±¨ ƒ
}±±≈ ∆
)±±∆ «
;±±« »
foreach
≤≤ 
(
≤≤ 
var
≤≤ 5
'grupoDetallesMovimientoBienesPorAlmacen
≤≤ D
in
≤≤E G7
)gruposDetallesMovimientosBienesPorAlmacen
≤≤H q
)
≤≤q r
{
≥≥ 
int
¥¥ 
idTipoTransaccion
¥¥ )
=
¥¥* +5
'grupoDetallesMovimientoBienesPorAlmacen
¥¥, S
.
¥¥S T
Select
¥¥T Z
(
¥¥Z [
d
¥¥[ \
=>
¥¥] _
d
¥¥` a
.
¥¥a b
Transaccion
¥¥b m
.
¥¥m n"
id_tipo_transaccion¥¥n Å
)¥¥Å Ç
.¥¥Ç É
Distinct¥¥É ã
(¥¥ã å
)¥¥å ç
.¥¥ç é
SingleOrDefault¥¥é ù
(¥¥ù û
)¥¥û ü
;¥¥ü †%
TipoMovimientoOperacion
µµ +
tipoMovimiento
µµ, :
=
µµ; <
Diccionario
µµ= H
.
µµH I;
-TiposDeTransaccionMovimientoDeBienes_Entradas
µµI v
.
µµv w
Contains
µµw 
(µµ Ä!
idTipoTransaccionµµÄ ë
)µµë í
?µµì î'
TipoMovimientoOperacionµµï ¨
.µµ¨ ≠
Entradaµµ≠ ¥
:µµµ ∂
Diccionarioµµ∑ ¬
.µµ¬ √<
,TiposDeTransaccionMovimientoDeBienes_Salidasµµ√ Ô
.µµÔ 
Containsµµ ¯
(µµ¯ ˘!
idTipoTransaccionµµ˘ ä
)µµä ã
?µµå ç'
TipoMovimientoOperacionµµé •
.µµ• ¶
Salidaµµ¶ ¨
:µµ≠ Æ
throwµµØ ¥
newµµµ ∏
LogicaExceptionµµπ »
(µµ» …
$strµµ… í
)µµí ì
;µµì î
var
∏∏ 2
$esSalidaSujetaADisponibilidadDeStock
∏∏ <
=
∏∏= >
tipoMovimiento
∏∏? M
==
∏∏N P%
TipoMovimientoOperacion
∏∏Q h
.
∏∏h i
Salida
∏∏i o
&&
∏∏p r=
.AlmacenConSalidasSujetasADisponibilidadDeStock∏∏s °
(∏∏° ¢7
'grupoDetallesMovimientoBienesPorAlmacen∏∏¢ …
.∏∏…  
Key∏∏  Õ
.∏∏Õ Œ
	idAlmacen∏∏Œ ◊
)∏∏◊ ÿ
;∏∏ÿ Ÿ
var
ππ  
detallesInventario
ππ *
=
ππ+ ,&
ResolverInventarioActual
ππ- E
(
ππE F5
'grupoDetallesMovimientoBienesPorAlmacen
ππF m
.
ππm n
ToList
ππn t
(
ππt u
)
ππu v
,
ππv w
sesionDeUsuarioππx á
.ππá à)
ObtenerIdInventarioActualππà °
(ππ° ¢7
'grupoDetallesMovimientoBienesPorAlmacenππ¢ …
.ππ…  
Keyππ  Õ
.ππÕ Œ
	idAlmacenππŒ ◊
)ππ◊ ÿ
,ππÿ Ÿ
tipoMovimientoππ⁄ Ë
,ππË È4
$esSalidaSujetaADisponibilidadDeStockππÍ é
,ππé è!
idTipoTransaccionππê °
)ππ° ¢
;ππ¢ £/
!detallesInventariosactuals_Nuevos
∫∫ 5
.
∫∫5 6
AddRange
∫∫6 >
(
∫∫> ? 
detallesInventario
∫∫? Q
.
∫∫Q R
Detalles_nuevos
∫∫R a
)
∫∫a b
;
∫∫b c3
%detallesInventariosactuals_Existentes
ªª 9
.
ªª9 :
AddRange
ªª: B
(
ªªB C 
detallesInventario
ªªC U
.
ªªU V"
Detalles_modificados
ªªV j
)
ªªj k
;
ªªk l
}
ºº 
}
ΩΩ 
return
ææ 
new
ææ (
AfectacionInventarioActual
ææ 1
(
ææ1 2
)
ææ2 3
{
ææ4 5
Detalles_nuevos
ææ6 E
=
ææF G/
!detallesInventariosactuals_Nuevos
ææH i
,
ææi j"
Detalles_modificados
ææk 
=ææÄ Å5
%detallesInventariosactuals_ExistentesææÇ ß
}ææ® ©
;ææ© ™
}
øø 	
public
¿¿ 
bool
¿¿ <
.AlmacenConSalidasSujetasADisponibilidadDeStock
¿¿ B
(
¿¿B C
int
¿¿C F
	idAlmacen
¿¿G P
)
¿¿P Q
{
¡¡ 	
string
¬¬  
jsonCentroAtencion
¬¬ %
=
¬¬& '
actor_Datos
¬¬( 3
.
¬¬3 40
"ObtenerExtensionJsonDeActorNegocio
¬¬4 V
(
¬¬V W
	idAlmacen
¬¬W `
)
¬¬` a
;
¬¬a b
bool
√√ 
salidasSinStock
√√  
=
√√! "
string
√√# )
.
√√) *
IsNullOrEmpty
√√* 7
(
√√7 8 
jsonCentroAtencion
√√8 J
)
√√J K
?
√√L M
false
√√N S
:
√√T U
JsonConvert
√√V a
.
√√a b
DeserializeObject
√√b s
<
√√s t#
JsonCentroDeAtencion√√t à
>√√à â
(√√â ä"
jsonCentroAtencion√√ä ú
)√√ú ù
.√√ù û$
salidabienessinstock√√û ≤
;√√≤ ≥
return
ƒƒ 
!
ƒƒ 
salidasSinStock
ƒƒ #
;
ƒƒ# $
}
≈≈ 	
public
«« 
void
«« ?
1RegenerarNumeracionComprobantePropioAutonumerable
«« E
(
««E F
Comprobante
««F Q
comprobante
««R ]
,
««] ^
Serie_comprobante
««_ p
serie
««q v
)
««v w
{
»» 	
comprobante
…… 
.
…… 
numero
…… 
=
……  
serie
……! &
.
……& '
proximo_numero
……' 5
;
……5 6
serie
   
.
   
proximo_numero
    
++
    "
;
  " #$
transaccionRepositorio
ÀÀ "
.
ÀÀ" #'
MarcarSerieComoModificada
ÀÀ# <
(
ÀÀ< =
serie
ÀÀ= B
)
ÀÀB C
;
ÀÀC D
}
ÃÃ 	
public
ŒŒ 
void
ŒŒ B
4RegenerarNumeracionComprobantesPropiosAutonumerables
ŒŒ H
(
ŒŒH I
List
ŒŒI M
<
ŒŒM N
Comprobante
ŒŒN Y
>
ŒŒY Z
comprobantes
ŒŒ[ g
,
ŒŒg h
Serie_comprobante
ŒŒi z
serieŒŒ{ Ä
)ŒŒÄ Å
{
œœ 	
foreach
–– 
(
–– 
var
–– 
comprobante
–– $
in
––% '
comprobantes
––( 4
)
––4 5
{
—— 
comprobante
““ 
.
““ 
numero
““ "
=
““# $
serie
““% *
.
““* +
proximo_numero
““+ 9
;
““9 :
serie
”” 
.
”” 
proximo_numero
”” $
++
””$ &
;
””& '
}
‘‘ $
transaccionRepositorio
÷÷ "
.
÷÷" #'
MarcarSerieComoModificada
÷÷# <
(
÷÷< =
serie
÷÷= B
)
÷÷B C
;
÷÷C D
}
◊◊ 	
public
‡‡ 
OperationResult
‡‡ 6
(AfectarInventarioFisicoYGuardarOperacion
‡‡ G
(
‡‡G H 
OperacionIntegrada
‡‡H Z
	operacion
‡‡[ d
,
‡‡d e$
UserProfileSessionData
‡‡f |
sesionDeUsuario‡‡} å
)‡‡å ç
{
·· 	
OperationResult
‚‚ 
result
‚‚ "
=
‚‚# $
null
‚‚% )
;
‚‚) *(
AfectacionInventarioActual
„„ &(
detallesInventariosactuals
„„' A
=
„„B C
null
„„D H
;
„„H I
bool
‰‰ '
hayProblemaDeConcurrencia
‰‰ *
;
‰‰* +
do
ÂÂ 
{
ÊÊ '
hayProblemaDeConcurrencia
ÁÁ )
=
ÁÁ* +
false
ÁÁ, 1
;
ÁÁ1 2
try
ËË 
{
ÈÈ (
detallesInventariosactuals
ÎÎ .
=
ÎÎ/ 0!
ResolverInventarios
ÎÎ1 D
(
ÎÎD E
	operacion
ÎÎE N
.
ÎÎN O
MovimientosBienes
ÎÎO `
,
ÎÎ` a
sesionDeUsuario
ÎÎb q
)
ÎÎq r
;
ÎÎr s
result
ÏÏ 
=
ÏÏ $
transaccionRepositorio
ÏÏ 3
.
ÏÏ3 4$
RegistrarTransacciones
ÏÏ4 J
(
ÏÏJ K
new
ÏÏK N#
RegistroTransacciones
ÏÏO d
(
ÏÏd e
)
ÏÏe f
{
ÌÌ !
Transacciones_Crear
ÔÔ +
=
ÔÔ, -
	operacion
ÔÔ. 7
.
ÔÔ7 8
OperacionCreacion
ÔÔ8 I
==
ÔÔJ L
null
ÔÔM Q
?
ÔÔR S
new
ÔÔT W
List
ÔÔX \
<
ÔÔ\ ]
Transaccion
ÔÔ] h
>
ÔÔh i
(
ÔÔi j
)
ÔÔj k
{
ÔÔl m
	operacion
ÔÔn w
.
ÔÔw x
	OperacionÔÔx Å
}ÔÔÇ É
:ÔÔÑ Ö
newÔÔÜ â
ListÔÔä é
<ÔÔé è
TransaccionÔÔè ö
>ÔÔö õ
(ÔÔõ ú
)ÔÔú ù
{ÔÔû ü
	operacionÔÔ† ©
.ÔÔ© ™
	OperacionÔÔ™ ≥
,ÔÔ≥ ¥
	operacionÔÔµ æ
.ÔÔæ ø!
OperacionCreacionÔÔø –
}ÔÔ— “
,ÔÔ“ ”%
Transacciones_Modificar
 /
=
0 1
	operacion
2 ;
.
; <
OperacionOrigen
< K
==
L N
null
O S
?
T U
new
V Y
List
Z ^
<
^ _
Transaccion
_ j
>
j k
(
k l
)
l m
:
n o
new
p s
List
t x
<
x y
Transacciony Ñ
>Ñ Ö
(Ö Ü
)Ü á
{à â
	operacionä ì
.ì î
OperacionOrigenî £
}§ •
,• ¶'
DetallesTransaccion_Crear
ÒÒ 1
=
ÒÒ2 3(
detallesInventariosactuals
ÒÒ4 N
.
ÒÒN O
Detalles_nuevos
ÒÒO ^
,
ÒÒ^ _+
DetallesTransaccion_Modificar
ÚÚ 5
=
ÚÚ6 7(
detallesInventariosactuals
ÚÚ8 R
.
ÚÚR S"
Detalles_modificados
ÚÚS g
,
ÚÚg h'
Actores_Negocio_Modificar
ÛÛ 1
=
ÛÛ2 3
	operacion
ÛÛ4 =
.
ÛÛ= >'
ActoresNegocioModificados
ÛÛ> W
,
ÛÛW X&
EstadosTransaccion_Crear
ÙÙ 0
=
ÙÙ1 2
	operacion
ÙÙ3 <
.
ÙÙ< =&
NuevosEstadosTransaccion
ÙÙ= U
}
ıı 
)
ıı 
;
ıı 
result
ˆˆ 
.
ˆˆ 
information
ˆˆ &
=
ˆˆ' (
new
ˆˆ) ,
	Operacion
ˆˆ- 6
(
ˆˆ6 7
	operacion
ˆˆ7 @
.
ˆˆ@ A
OrdenDeOperacion
ˆˆA Q
)
ˆˆQ R
.
ˆˆR S
Id
ˆˆS U
;
ˆˆU V
result
˜˜ 
.
˜˜ 
objeto
˜˜ !
=
˜˜" #
new
˜˜$ '
OrdenDeVenta
˜˜( 4
(
˜˜4 5
	operacion
˜˜5 >
.
˜˜> ?
OrdenDeOperacion
˜˜? O
)
˜˜O P
;
˜˜P Q
}
¯¯ 
catch
˘˘ 
(
˘˘ '
SerieComprobanteException
˘˘ 0
e
˘˘1 2
)
˘˘2 3
{
˙˙ <
.ResolverProblemaDeConcurrenciaSerieComprobante
˚˚ B
(
˚˚B C
	operacion
˚˚C L
.
˚˚L M
	Operacion
˚˚M V
,
˚˚V W
e
˚˚X Y
)
˚˚Y Z
;
˚˚Z ['
hayProblemaDeConcurrencia
¸¸ -
=
¸¸. /
true
¸¸0 4
;
¸¸4 5
}
˝˝ 
catch
˛˛ 
(
˛˛ )
DetalleTransaccionException
˛˛ 2
e
˛˛3 4
)
˛˛4 5
{
ˇˇ ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
ÄÄ E
(
ÄÄE F(
detallesInventariosactuals
ÄÄF `
.
ÄÄ` a"
Detalles_modificados
ÄÄa u
,
ÄÄu v
e
ÄÄw x
)
ÄÄx y
;
ÄÄy z'
hayProblemaDeConcurrencia
ÅÅ -
=
ÅÅ. /
true
ÅÅ0 4
;
ÅÅ4 5
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ  
e
ÉÉ! "
)
ÉÉ" #
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
LogicaException
ÖÖ -
(
ÖÖ- .
$str
ÖÖ. v
,
ÖÖv w
e
ÖÖx y
)
ÖÖy z
;
ÖÖz {
}
ÜÜ 
}
áá 
while
áá 
(
áá '
hayProblemaDeConcurrencia
áá .
)
áá. /
;
áá/ 0
return
àà 
result
àà 
;
àà 
}
ââ 	
public
éé 
OperationResult
éé 6
(AfectarInventarioFisicoYGuardarOperacion
éé G
(
ééG H$
OperacionModificatoria
ééH ^
	operacion
éé_ h
,
ééh i%
UserProfileSessionDataééj Ä
sesionDeUsuarioééÅ ê
)ééê ë
{
èè 	
OperationResult
êê 
result
êê "
=
êê# $
null
êê% )
;
êê) *(
AfectacionInventarioActual
ëë &(
detallesInventariosactuals
ëë' A
=
ëëB C
null
ëëD H
;
ëëH I
bool
íí '
hayProblemaDeConcurrencia
íí *
;
íí* +
do
ìì 
{
îî '
hayProblemaDeConcurrencia
ïï )
=
ïï* +
false
ïï, 1
;
ïï1 2
try
ññ 
{
óó (
detallesInventariosactuals
ôô .
=
ôô/ 0!
ResolverInventarios
ôô1 D
(
ôôD E
	operacion
ôôE N
.
ôôN O
MovimientosBienes
ôôO `
,
ôô` a
sesionDeUsuario
ôôb q
)
ôôq r
;
ôôr s
List
öö 
<
öö 
Transaccion
öö $
>
öö$ %!
transaccionesACrear
öö& 9
=
öö: ;
new
öö< ?
List
öö@ D
<
ööD E
Transaccion
ööE P
>
ööP Q
(
ööQ R
)
ööR S
;
ööS T
if
õõ 
(
õõ 
	operacion
õõ !
.
õõ! "
MovimientosBienes
õõ" 3
!=
õõ4 6
null
õõ7 ;
)
õõ; <!
transaccionesACrear
õõ= P
.
õõP Q
AddRange
õõQ Y
(
õõY Z
	operacion
õõZ c
.
õõc d
MovimientosBienes
õõd u
)
õõu v
;
õõv w
if
úú 
(
úú 
	operacion
úú !
.
úú! "
	Operacion
úú" +
!=
úú, .
null
úú/ 3
)
úú3 4!
transaccionesACrear
úú5 H
.
úúH I
Add
úúI L
(
úúL M
	operacion
úúM V
.
úúV W
	Operacion
úúW `
)
úú` a
;
úúa b
if
ùù 
(
ùù 
	operacion
ùù !
.
ùù! "
OrdenDeOperacion
ùù" 2
!=
ùù3 5
null
ùù6 :
)
ùù: ;!
transaccionesACrear
ùù< O
.
ùùO P
Add
ùùP S
(
ùùS T
	operacion
ùùT ]
.
ùù] ^
OrdenDeOperacion
ùù^ n
)
ùùn o
;
ùùo p
if
ûû 
(
ûû 
	operacion
ûû !
.
ûû! "!
MovimientoEconomico
ûû" 5
!=
ûû6 8
null
ûû9 =
)
ûû= >!
transaccionesACrear
ûû? R
.
ûûR S
Add
ûûS V
(
ûûV W
	operacion
ûûW `
.
ûû` a!
MovimientoEconomico
ûûa t
)
ûût u
;
ûûu v
List
üü 
<
üü 
Transaccion
üü $
>
üü$ %%
transaccionesAModificar
üü& =
=
üü> ?
new
üü@ C
List
üüD H
<
üüH I
Transaccion
üüI T
>
üüT U
(
üüU V
)
üüV W
;
üüW X
if
†† 
(
†† 
	operacion
†† !
.
††! "
OperacionOrigen
††" 1
!=
††2 4
null
††5 9
)
††9 :%
transaccionesAModificar
††; R
.
††R S
Add
††S V
(
††V W
	operacion
††W `
.
††` a
OperacionOrigen
††a p
)
††p q
;
††q r
if
°° 
(
°° 
	operacion
°° !
.
°°! "&
TransaccionesModificadas
°°" :
!=
°°; =
null
°°> B
)
°°B C%
transaccionesAModificar
°°D [
.
°°[ \
AddRange
°°\ d
(
°°d e
	operacion
°°e n
.
°°n o'
TransaccionesModificadas°°o á
)°°á à
;°°à â
if
¢¢ 
(
¢¢ 
	operacion
¢¢ !
.
¢¢! ",
DetallesTransaccionModificados
¢¢" @
!=
¢¢A C
null
¢¢D H
)
¢¢H I(
detallesInventariosactuals
¢¢J d
.
¢¢d e"
Detalles_modificados
¢¢e y
.
¢¢y z
AddRange¢¢z Ç
(¢¢Ç É
	operacion¢¢É å
.¢¢å ç.
DetallesTransaccionModificados¢¢ç ´
)¢¢´ ¨
;¢¢¨ ≠
result
££ 
=
££ $
transaccionRepositorio
££ 3
.
££3 4$
RegistrarTransacciones
££4 J
(
££J K
new
££K N#
RegistroTransacciones
££O d
(
££d e
)
££e f
{
§§ !
Transacciones_Crear
•• +
=
••, -!
transaccionesACrear
••. A
,
••A B&
EstadosTransaccion_Crear
¶¶ 0
=
¶¶1 2
	operacion
¶¶3 <
.
¶¶< =3
%NuevosEstadosTransaccionesModificadas
¶¶= b
,
¶¶b c 
EstadosCuota_Crear
ßß *
=
ßß+ ,
	operacion
ßß- 6
.
ßß6 7=
/NuevosEstadosParaCuotasTransaccionesModificadas
ßß7 f
,
ßßf g%
Transacciones_Modificar
®® /
=
®®0 1%
transaccionesAModificar
®®2 I
.
®®I J
Count
®®J O
(
®®O P
)
®®P Q
>
®®R S
$num
®®T U
?
®®V W%
transaccionesAModificar
®®X o
:
®®p q
null
®®r v
,
®®v w'
DetallesTransaccion_Crear
©© 1
=
©©2 3(
detallesInventariosactuals
©©4 N
.
©©N O
Detalles_nuevos
©©O ^
,
©©^ _+
DetallesTransaccion_Modificar
™™ 5
=
™™6 7(
detallesInventariosactuals
™™8 R
.
™™R S"
Detalles_modificados
™™S g
,
™™g h
}
´´ 
)
´´ 
;
´´ 
result
¨¨ 
.
¨¨ 
information
¨¨ &
=
¨¨' (
new
¨¨) ,
	Operacion
¨¨- 6
(
¨¨6 7
	operacion
¨¨7 @
.
¨¨@ A
	Operacion
¨¨A J
)
¨¨J K
.
¨¨K L%
ObtenerOrdenDeOperacion
¨¨L c
(
¨¨c d
)
¨¨d e
.
¨¨e f
Id
¨¨f h
;
¨¨h i
}
≠≠ 
catch
ÆÆ 
(
ÆÆ '
SerieComprobanteException
ÆÆ 0
e
ÆÆ1 2
)
ÆÆ2 3
{
ØØ <
.ResolverProblemaDeConcurrenciaSerieComprobante
∞∞ B
(
∞∞B C
	operacion
∞∞C L
.
∞∞L M
	Operacion
∞∞M V
,
∞∞V W
e
∞∞X Y
)
∞∞Y Z
;
∞∞Z ['
hayProblemaDeConcurrencia
±± -
=
±±. /
true
±±0 4
;
±±4 5
}
≥≥ 
catch
¥¥ 
(
¥¥ )
DetalleTransaccionException
¥¥ 2
e
¥¥3 4
)
¥¥4 5
{
µµ ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
∂∂ E
(
∂∂E F(
detallesInventariosactuals
∂∂F `
.
∂∂` a"
Detalles_modificados
∂∂a u
,
∂∂u v
e
∂∂w x
)
∂∂x y
;
∂∂y z'
hayProblemaDeConcurrencia
∑∑ -
=
∑∑. /
true
∑∑0 4
;
∑∑4 5
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ  
e
ππ! "
)
ππ" #
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª -
(
ªª- .
$str
ªª. v
,
ªªv w
e
ªªx y
)
ªªy z
;
ªªz {
}
ºº 
}
ΩΩ 
while
ΩΩ 
(
ΩΩ '
hayProblemaDeConcurrencia
ΩΩ .
)
ΩΩ. /
;
ΩΩ/ 0
return
ææ 
result
ææ 
;
ææ 
}
øø 	
private
ƒƒ 
OperationResult
ƒƒ 8
*AfectarInventarioFisicoYGuardarOperaciones
ƒƒ  J
(
ƒƒJ K
List
ƒƒK O
<
ƒƒO P 
OperacionIntegrada
ƒƒP b
>
ƒƒb c
operaciones
ƒƒd o
,
ƒƒo p%
UserProfileSessionDataƒƒq á
sesionDeUsuarioƒƒà ó
)ƒƒó ò
{
≈≈ 	
OperationResult
∆∆ 
result
∆∆ "
=
∆∆# $
null
∆∆% )
;
∆∆) *
bool
«« '
hayProblemaDeConcurrencia
«« *
;
««* +(
AfectacionInventarioActual
»» &(
detallesInventariosactuals
»»' A
=
»»B C
null
»»D H
;
»»H I
var
……  
actoresModificados
…… "
=
……# $
operaciones
……% 0
.
……0 1

SelectMany
……1 ;
(
……; <
o
……< =
=>
……> @
o
……A B
.
……B C'
ActoresNegocioModificados
……C \
)
……\ ]
.
……] ^
ToList
……^ d
(
……d e
)
……e f
;
……f g
List
ÀÀ 
<
ÀÀ 
Actor_negocio
ÀÀ 
>
ÀÀ 
actoresActualizar
ÀÀ  1
=
ÀÀ2 3
new
ÀÀ4 7
List
ÀÀ8 <
<
ÀÀ< =
Actor_negocio
ÀÀ= J
>
ÀÀJ K
(
ÀÀK L
)
ÀÀL M
;
ÀÀM N 
actoresModificados
ÃÃ 
.
ÃÃ 
ForEach
ÃÃ &
(
ÃÃ& '
am
ÃÃ' )
=>
ÃÃ* ,
{
ÃÃ- .
if
ÃÃ/ 1
(
ÃÃ2 3
am
ÃÃ3 5
!=
ÃÃ6 8
null
ÃÃ9 =
&&
ÃÃ> @
!
ÃÃA B
actoresActualizar
ÃÃB S
.
ÃÃS T
Contains
ÃÃT \
(
ÃÃ\ ]
am
ÃÃ] _
)
ÃÃ_ `
)
ÃÃ` a
actoresActualizar
ÃÃb s
.
ÃÃs t
Add
ÃÃt w
(
ÃÃw x
am
ÃÃx z
)
ÃÃz {
;
ÃÃ{ |
}
ÃÃ} ~
)
ÃÃ~ 
;ÃÃ Ä
var
ŒŒ %
operacionesContenedoras
ŒŒ '
=
ŒŒ( )
operaciones
ŒŒ* 5
.
ŒŒ5 6
Select
ŒŒ6 <
(
ŒŒ< =
o
ŒŒ= >
=>
ŒŒ? A
o
ŒŒB C
.
ŒŒC D
	Operacion
ŒŒD M
)
ŒŒM N
.
ŒŒN O
ToList
ŒŒO U
(
ŒŒU V
)
ŒŒV W
;
ŒŒW X
do
œœ 
{
–– '
hayProblemaDeConcurrencia
—— )
=
——* +
false
——, 1
;
——1 2
try
““ 
{
”” 
var
‘‘ !
movimientosDeBienes
‘‘ +
=
‘‘, -
operaciones
‘‘. 9
.
‘‘9 :

SelectMany
‘‘: D
(
‘‘D E
o
‘‘E F
=>
‘‘G I
o
‘‘J K
.
‘‘K L
MovimientosBienes
‘‘L ]
)
‘‘] ^
.
‘‘^ _
ToList
‘‘_ e
(
‘‘e f
)
‘‘f g
;
‘‘g h(
detallesInventariosactuals
’’ .
=
’’/ 0!
ResolverInventarios
’’1 D
(
’’D E!
movimientosDeBienes
’’E X
,
’’X Y
sesionDeUsuario
’’Z i
)
’’i j
;
’’j k
result
÷÷ 
=
÷÷ $
transaccionRepositorio
÷÷ 3
.
÷÷3 4k
\CrearTransaccionesCrearEstadosTransaccionCrearEstadosCuotaCrearActualizarDetallesTransaccion÷÷4 ê
(÷÷ê ë'
operacionesContenedoras÷÷ë ®
,÷÷® ©
null÷÷™ Æ
,÷÷Æ Ø
null÷÷∞ ¥
,÷÷¥ µ*
detallesInventariosactuals÷÷∂ –
.÷÷– —
Detalles_nuevos÷÷— ‡
,÷÷‡ ·*
detallesInventariosactuals÷÷‚ ¸
.÷÷¸ ˝$
Detalles_modificados÷÷˝ ë
,÷÷ë í!
actoresActualizar÷÷ì §
)÷÷§ •
;÷÷• ¶
if
◊◊ 
(
◊◊ 
operaciones
◊◊ #
.
◊◊# $
Count
◊◊$ )
>
◊◊* +
$num
◊◊, -
)
◊◊- .
{
ÿÿ 
result
⁄⁄ 
.
⁄⁄ 
information
⁄⁄ *
=
⁄⁄+ ,
new
⁄⁄- 0
	Operacion
⁄⁄1 :
(
⁄⁄: ;%
operacionesContenedoras
⁄⁄; R
.
⁄⁄R S
First
⁄⁄S X
(
⁄⁄X Y
)
⁄⁄Y Z
)
⁄⁄Z [
.
⁄⁄[ \%
ObtenerOrdenDeOperacion
⁄⁄\ s
(
⁄⁄s t
)
⁄⁄t u
.
⁄⁄u v
Id
⁄⁄v x
;
⁄⁄x y
}
€€ 
}
‹‹ 
catch
›› 
(
›› '
SerieComprobanteException
›› 0
e
››1 2
)
››2 3
{
ﬁﬁ <
.ResolverProblemaDeConcurrenciaSerieComprobante
‡‡ B
(
‡‡B C
operaciones
‡‡C N
.
‡‡N O
Select
‡‡O U
(
‡‡U V
o
‡‡V W
=>
‡‡X Z
o
‡‡[ \
.
‡‡\ ]
	Operacion
‡‡] f
)
‡‡f g
.
‡‡g h
ToList
‡‡h n
(
‡‡n o
)
‡‡o p
,
‡‡p q
e
‡‡r s
)
‡‡s t
;
‡‡t u'
hayProblemaDeConcurrencia
·· -
=
··. /
true
··0 4
;
··4 5
}
‚‚ 
catch
„„ 
(
„„ )
DetalleTransaccionException
„„ 2
e
„„3 4
)
„„4 5
{
‰‰ ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
ÂÂ E
(
ÂÂE F(
detallesInventariosactuals
ÂÂF `
.
ÂÂ` a"
Detalles_modificados
ÂÂa u
,
ÂÂu v
e
ÂÂw x
)
ÂÂx y
;
ÂÂy z'
hayProblemaDeConcurrencia
ÊÊ -
=
ÊÊ. /
true
ÊÊ0 4
;
ÊÊ4 5
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË  
e
ËË! "
)
ËË" #
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ 
LogicaException
ÍÍ -
(
ÍÍ- .
$str
ÍÍ. v
,
ÍÍv w
e
ÍÍx y
)
ÍÍy z
;
ÍÍz {
}
ÎÎ 
}
ÏÏ 
while
ÏÏ 
(
ÏÏ '
hayProblemaDeConcurrencia
ÏÏ .
)
ÏÏ. /
;
ÏÏ/ 0
return
ÌÌ 
result
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
private
 
OperationResult
 6
(AfectarInventarioFisicoYGuardarOperacion
  H
(
H I/
!OperacionVentaCobroCarteraCliente
I j0
!operacionVentaCobroCarteraClientek å
,å ç&
UserProfileSessionDataé §
sesionDeUsuario• ¥
)¥ µ
{
ÒÒ 	
OperationResult
ÚÚ 
result
ÚÚ "
=
ÚÚ# $
null
ÚÚ% )
;
ÚÚ) *(
AfectacionInventarioActual
ÛÛ &(
detallesInventariosactuals
ÛÛ' A
=
ÛÛB C
null
ÛÛD H
;
ÛÛH I
bool
ÙÙ '
hayProblemaDeConcurrencia
ÙÙ *
;
ÙÙ* +
do
ıı 
{
ˆˆ '
hayProblemaDeConcurrencia
˜˜ )
=
˜˜* +
false
˜˜, 1
;
˜˜1 2
try
¯¯ 
{
˘˘ (
detallesInventariosactuals
˚˚ .
=
˚˚/ 0!
ResolverInventarios
˚˚1 D
(
˚˚D E/
!operacionVentaCobroCarteraCliente
˚˚E f
.
˚˚f g
Ventas
˚˚g m
.
˚˚m n

SelectMany
˚˚n x
(
˚˚x y
o
˚˚y z
=>
˚˚{ }
o
˚˚~ 
.˚˚ Ä!
MovimientosBienes˚˚Ä ë
)˚˚ë í
.˚˚í ì
ToList˚˚ì ô
(˚˚ô ö
)˚˚ö õ
,˚˚õ ú
sesionDeUsuario˚˚ù ¨
)˚˚¨ ≠
;˚˚≠ Æ
List
¸¸ 
<
¸¸ 
Transaccion
¸¸ $
>
¸¸$ %!
transaccionesACrear
¸¸& 9
=
¸¸: ;
new
¸¸< ?
List
¸¸@ D
<
¸¸D E
Transaccion
¸¸E P
>
¸¸P Q
(
¸¸Q R
)
¸¸R S
{
¸¸T U/
!operacionVentaCobroCarteraCliente
¸¸V w
.
¸¸w x
OperacionWrapper¸¸x à
}¸¸â ä
;¸¸ä ã
List
˝˝ 
<
˝˝ 
Transaccion
˝˝ $
>
˝˝$ %%
transaccionesAModificar
˝˝& =
=
˝˝> ?
new
˝˝@ C
List
˝˝D H
<
˝˝H I
Transaccion
˝˝I T
>
˝˝T U
(
˝˝U V
)
˝˝V W
;
˝˝W X
foreach
˛˛ 
(
˛˛ 
var
˛˛   
operacionIntegrada
˛˛! 3
in
˛˛4 6/
!operacionVentaCobroCarteraCliente
˛˛7 X
.
˛˛X Y
Ventas
˛˛Y _
)
˛˛_ `
{
ˇˇ 
if
ÄÄ 
(
ÄÄ  
operacionIntegrada
ÄÄ .
.
ÄÄ. /
	Operacion
ÄÄ/ 8
!=
ÄÄ9 ;
null
ÄÄ< @
)
ÄÄ@ A!
transaccionesACrear
ÄÄB U
.
ÄÄU V
Add
ÄÄV Y
(
ÄÄY Z 
operacionIntegrada
ÄÄZ l
.
ÄÄl m
	Operacion
ÄÄm v
)
ÄÄv w
;
ÄÄw x
if
ÅÅ 
(
ÅÅ  
operacionIntegrada
ÅÅ .
.
ÅÅ. /
OrdenDeOperacion
ÅÅ/ ?
!=
ÅÅ@ B
null
ÅÅC G
)
ÅÅG H!
transaccionesACrear
ÅÅI \
.
ÅÅ\ ]
Add
ÅÅ] `
(
ÅÅ` a 
operacionIntegrada
ÅÅa s
.
ÅÅs t
OrdenDeOperacionÅÅt Ñ
)ÅÅÑ Ö
;ÅÅÖ Ü
if
ÇÇ 
(
ÇÇ  
operacionIntegrada
ÇÇ .
.
ÇÇ. /!
MovimientoEconomico
ÇÇ/ B
!=
ÇÇC E
null
ÇÇF J
)
ÇÇJ K!
transaccionesACrear
ÇÇL _
.
ÇÇ_ `
Add
ÇÇ` c
(
ÇÇc d 
operacionIntegrada
ÇÇd v
.
ÇÇv w"
MovimientoEconomicoÇÇw ä
)ÇÇä ã
;ÇÇã å
if
ÉÉ 
(
ÉÉ  
operacionIntegrada
ÉÉ .
.
ÉÉ. /
MovimientosBienes
ÉÉ/ @
!=
ÉÉA C
null
ÉÉD H
)
ÉÉH I!
transaccionesACrear
ÉÉJ ]
.
ÉÉ] ^
AddRange
ÉÉ^ f
(
ÉÉf g 
operacionIntegrada
ÉÉg y
.
ÉÉy z 
MovimientosBienesÉÉz ã
)ÉÉã å
;ÉÉå ç
if
ÑÑ 
(
ÑÑ  
operacionIntegrada
ÑÑ .
.
ÑÑ. /
OperacionOrigen
ÑÑ/ >
!=
ÑÑ? A
null
ÑÑB F
)
ÑÑF G%
transaccionesAModificar
ÑÑH _
.
ÑÑ_ `
Add
ÑÑ` c
(
ÑÑc d 
operacionIntegrada
ÑÑd v
.
ÑÑv w
OperacionOrigenÑÑw Ü
)ÑÑÜ á
;ÑÑá à
}
ÖÖ 
result
ÜÜ 
=
ÜÜ $
transaccionRepositorio
ÜÜ 3
.
ÜÜ3 4$
RegistrarTransacciones
ÜÜ4 J
(
ÜÜJ K
new
ÜÜK N#
RegistroTransacciones
ÜÜO d
(
ÜÜd e
)
ÜÜe f
{
áá !
Transacciones_Crear
àà +
=
àà, -!
transaccionesACrear
àà. A
,
ààA B%
Transacciones_Modificar
ââ /
=
ââ0 1%
transaccionesAModificar
ââ2 I
,
ââI J'
DetallesTransaccion_Crear
ää 1
=
ää2 3(
detallesInventariosactuals
ää4 N
.
ääN O
Detalles_nuevos
ääO ^
,
ää^ _+
DetallesTransaccion_Modificar
ãã 5
=
ãã6 7(
detallesInventariosactuals
ãã8 R
.
ããR S"
Detalles_modificados
ããS g
,
ããg h
}
åå 
)
åå 
;
åå 
result
çç 
.
çç 
information
çç &
=
çç' (/
!operacionVentaCobroCarteraCliente
çç) J
.
ççJ K
OperacionWrapper
ççK [
.
çç[ \
id
çç\ ^
;
çç^ _
result
éé 
.
éé 
objeto
éé !
=
éé" #/
!operacionVentaCobroCarteraCliente
éé$ E
;
ééE F
}
èè 
catch
êê 
(
êê '
SerieComprobanteException
êê 0
e
êê1 2
)
êê2 3
{
ëë <
.ResolverProblemaDeConcurrenciaSerieComprobante
ìì B
(
ììB C/
!operacionVentaCobroCarteraCliente
ììC d
.
ììd e
Ventas
ììe k
.
ììk l
Select
ììl r
(
ììr s
oi
ììs u
=>
ììv x
oi
ììy {
.
ìì{ |
	Operacionìì| Ö
)ììÖ Ü
.ììÜ á
ToListììá ç
(ììç é
)ììé è
,ììè ê
eììë í
)ììí ì
;ììì î'
hayProblemaDeConcurrencia
îî -
=
îî. /
true
îî0 4
;
îî4 5
}
ïï 
catch
ññ 
(
ññ )
DetalleTransaccionException
ññ 2
e
ññ3 4
)
ññ4 5
{
óó ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
òò E
(
òòE F(
detallesInventariosactuals
òòF `
.
òò` a"
Detalles_modificados
òòa u
,
òòu v
e
òòw x
)
òòx y
;
òòy z'
hayProblemaDeConcurrencia
ôô -
=
ôô. /
true
ôô0 4
;
ôô4 5
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ  
e
õõ! "
)
õõ" #
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù -
(
ùù- .
$str
ùù. v
,
ùùv w
e
ùùx y
)
ùùy z
;
ùùz {
}
ûû 
}
üü 
while
üü 
(
üü '
hayProblemaDeConcurrencia
üü .
)
üü. /
;
üü/ 0
return
†† 
result
†† 
;
†† 
}
°° 	
public
©© 
OperationResult
©© K
=AfectarInventarioFisicoYGuardarInventarioEstadosTransacciones
©© \
(
©©\ ]
Transaccion
©©] h
movimientoBienes
©©i y
,
©©y z
List
©©{ 
<©© Ä"
Estado_transaccion©©Ä í
>©©í ì$
estadosTransacciones©©î ®
,©©® ©&
UserProfileSessionData©©™ ¿
sesionDeUsuario©©¡ –
)©©– —
{
™™ 	
OperationResult
´´ 
result
´´ "
=
´´# $
null
´´% )
;
´´) *(
AfectacionInventarioActual
¨¨ &(
detallesInventariosactuals
¨¨' A
=
¨¨B C
null
¨¨D H
;
¨¨H I
bool
≠≠ '
hayProblemaDeConcurrencia
≠≠ *
;
≠≠* +
do
ÆÆ 
{
ØØ '
hayProblemaDeConcurrencia
∞∞ )
=
∞∞* +
false
∞∞, 1
;
∞∞1 2
try
±± 
{
≤≤ (
detallesInventariosactuals
≥≥ .
=
≥≥/ 0!
ResolverInventarios
≥≥1 D
(
≥≥D E
new
≥≥E H
List
≥≥I M
<
≥≥M N
Transaccion
≥≥N Y
>
≥≥Y Z
(
≥≥Z [
)
≥≥[ \
{
≥≥] ^
movimientoBienes
≥≥_ o
}
≥≥p q
,
≥≥q r
sesionDeUsuario≥≥s Ç
)≥≥Ç É
;≥≥É Ñ(
detallesInventariosactuals
¥¥ .
.
¥¥. /"
Detalles_modificados
¥¥/ C
.
¥¥C D
AddRange
¥¥D L
(
¥¥L M+
ResolverInventariosHistoricos
¥¥M j
(
¥¥j k
movimientoBienes
¥¥k {
,
¥¥{ |
sesionDeUsuario¥¥} å
)¥¥å ç
)¥¥ç é
;¥¥é è
result
µµ 
=
µµ $
transaccionRepositorio
µµ 3
.
µµ3 4$
RegistrarTransacciones
µµ4 J
(
µµJ K
new
µµK N#
RegistroTransacciones
µµO d
(
µµd e
)
µµe f
{
∂∂ !
Transacciones_Crear
∑∑ +
=
∑∑, -
new
∑∑. 1
List
∑∑2 6
<
∑∑6 7
Transaccion
∑∑7 B
>
∑∑B C
(
∑∑C D
)
∑∑D E
,
∑∑E F%
Transacciones_Modificar
∏∏ /
=
∏∏0 1
new
∏∏2 5
List
∏∏6 :
<
∏∏: ;
Transaccion
∏∏; F
>
∏∏F G
(
∏∏G H
)
∏∏H I
,
∏∏I J'
DetallesTransaccion_Crear
ππ 1
=
ππ2 3(
detallesInventariosactuals
ππ4 N
.
ππN O
Detalles_nuevos
ππO ^
,
ππ^ _+
DetallesTransaccion_Modificar
∫∫ 5
=
∫∫6 7(
detallesInventariosactuals
∫∫8 R
.
∫∫R S"
Detalles_modificados
∫∫S g
,
∫∫g h&
EstadosTransaccion_Crear
ªª 0
=
ªª1 2"
estadosTransacciones
ªª3 G
,
ªªG H
}
ºº 
)
ºº 
;
ºº 
result
ΩΩ 
.
ΩΩ 
information
ΩΩ &
=
ΩΩ' (
new
ΩΩ) ,
	Operacion
ΩΩ- 6
(
ΩΩ6 7
movimientoBienes
ΩΩ7 G
)
ΩΩG H
.
ΩΩH I
Id
ΩΩI K
;
ΩΩK L
result
ææ 
.
ææ 
objeto
ææ !
=
ææ" #
new
ææ$ '
OrdenDeVenta
ææ( 4
(
ææ4 5
movimientoBienes
ææ5 E
)
ææE F
;
ææF G
}
øø 
catch
¿¿ 
(
¿¿ )
DetalleTransaccionException
¿¿ 2
e
¿¿3 4
)
¿¿4 5
{
¡¡ ?
1ResolverPosiblesProblemasDeConcurrenciaInventario
¬¬ E
(
¬¬E F(
detallesInventariosactuals
¬¬F `
.
¬¬` a"
Detalles_modificados
¬¬a u
,
¬¬u v
e
¬¬w x
)
¬¬x y
;
¬¬y z'
hayProblemaDeConcurrencia
√√ -
=
√√. /
true
√√0 4
;
√√4 5
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈  
e
≈≈! "
)
≈≈" #
{
∆∆ 
throw
«« 
new
«« 
LogicaException
«« -
(
««- .
$str««. å
,««å ç
e««é è
)««è ê
;««ê ë
}
»» 
}
…… 
while
…… 
(
…… '
hayProblemaDeConcurrencia
…… .
)
……. /
;
……/ 0
return
   
result
   
;
   
}
ÀÀ 	
public
ÕÕ 
List
ÕÕ 
<
ÕÕ !
Detalle_transaccion
ÕÕ '
>
ÕÕ' (+
ResolverInventariosHistoricos
ÕÕ) F
(
ÕÕF G
Transaccion
ÕÕG R 
movimientoDeBienes
ÕÕS e
,
ÕÕe f$
UserProfileSessionData
ÕÕg }
sesionDeUsuarioÕÕ~ ç
)ÕÕç é
{
ŒŒ 	
List
œœ 
<
œœ !
Detalle_transaccion
œœ $
>
œœ$ %6
(detallesInventariosHistoricos_Existentes
œœ& N
=
œœO P
new
œœQ T
List
œœU Y
<
œœY Z!
Detalle_transaccion
œœZ m
>
œœm n
(
œœn o
)
œœo p
;
œœp q
List
–– 
<
–– !
InventarioHistorico
–– $
>
––$ %#
inventariosHistoricos
––& ;
=
––< ='
inventarioHistorico_Datos
––> W
.
––W X3
%ObtenerInventariosHistoricosDespuesDe
––X }
(
––} ~!
movimientoDeBienes––~ ê
.––ê ë(
id_actor_negocio_interno––ë ©
,––© ™"
movimientoDeBienes––´ Ω
.––Ω æ
fecha_inicio––æ  
)––  À
.––À Ã
ToList––Ã “
(––“ ”
)––” ‘
;––‘ ’%
TipoMovimientoOperacion
—— #
tipoMovimiento
——$ 2
=
——3 4
Diccionario
——5 @
.
——@ A;
-TiposDeTransaccionMovimientoDeBienes_Entradas
——A n
.
——n o
Contains
——o w
(
——w x!
movimientoDeBienes——x ä
.——ä ã#
id_tipo_transaccion——ã û
)——û ü
?——† °'
TipoMovimientoOperacion——¢ π
.——π ∫
Entrada——∫ ¡
:——¬ √
Diccionario——ƒ œ
.——œ –<
,TiposDeTransaccionMovimientoDeBienes_Salidas——– ¸
.——¸ ˝
Contains——˝ Ö
(——Ö Ü"
movimientoDeBienes——Ü ò
.——ò ô#
id_tipo_transaccion——ô ¨
)——¨ ≠
?——Æ Ø'
TipoMovimientoOperacion——∞ «
.——« »
Salida——» Œ
:——œ –
throw——— ÷
new——◊ ⁄
LogicaException——€ Í
(——Í Î
$str——Î ¥
)——¥ µ
;——µ ∂
var
”” /
!movimientoDeBienesPorConceptoLote
”” 1
=
””2 3 
movimientoDeBienes
””4 F
.
””F G!
Detalle_transaccion
””G Z
.
””Z [
Select
””[ a
(
””a b
dt
””b d
=>
””e g
new
””h k
{
””l m

IdConcepto
””n x
=
””y z
dt
””{ }
.
””} ~"
id_concepto_negocio””~ ë
,””ë í
Lote””ì ó
=””ò ô
dt””ö ú
.””ú ù
lote””ù °
}””¢ £
)””£ §
;””§ •
var
‘‘ +
detallesInventariosHistoricos
‘‘ -
=
‘‘. /#
inventariosHistoricos
‘‘0 E
.
‘‘E F
Where
‘‘F K
(
‘‘K L
ih
‘‘L N
=>
‘‘O Q/
!movimientoDeBienesPorConceptoLote
‘‘R s
.
‘‘s t
Contains
‘‘t |
(
‘‘| }
new‘‘} Ä
{‘‘Å Ç

IdConcepto‘‘É ç
=‘‘é è
ih‘‘ê í
.‘‘í ì

IdConcepto‘‘ì ù
,‘‘ù û
Lote‘‘ü £
=‘‘§ •
ih‘‘¶ ®
.‘‘® ©
Lote‘‘© ≠
}‘‘Æ Ø
)‘‘Ø ∞
)‘‘∞ ±
;‘‘± ≤
foreach
÷÷ 
(
÷÷ 
var
÷÷ (
detalleInventarioHistorico
÷÷ 3
in
÷÷4 6+
detallesInventariosHistoricos
÷÷7 T
)
÷÷T U
{
◊◊ 
var
ÿÿ 
cantidad
ÿÿ 
=
ÿÿ  
movimientoDeBienes
ÿÿ 1
.
ÿÿ1 2!
Detalle_transaccion
ÿÿ2 E
.
ÿÿE F
Single
ÿÿF L
(
ÿÿL M
dt
ÿÿM O
=>
ÿÿP R
dt
ÿÿS U
.
ÿÿU V!
id_concepto_negocio
ÿÿV i
==
ÿÿj l)
detalleInventarioHistoricoÿÿm á
.ÿÿá à

IdConceptoÿÿà í
&&ÿÿì ï
dtÿÿñ ò
.ÿÿò ô
loteÿÿô ù
==ÿÿû †*
detalleInventarioHistoricoÿÿ° ª
.ÿÿª º
Loteÿÿº ¿
)ÿÿ¿ ¡
.ÿÿ¡ ¬
cantidadÿÿ¬  
;ÿÿ  À(
detalleInventarioHistorico
ŸŸ *
.
ŸŸ* +
Cantidad
ŸŸ+ 3
=
ŸŸ4 5(
detalleInventarioHistorico
ŸŸ6 P
.
ŸŸP Q
Cantidad
ŸŸQ Y
+
ŸŸZ [
(
ŸŸ\ ]
tipoMovimiento
ŸŸ] k
==
ŸŸl n&
TipoMovimientoOperacionŸŸo Ü
.ŸŸÜ á
EntradaŸŸá é
?ŸŸè ê
+ŸŸë í
cantidadŸŸí ö
:ŸŸõ ú
-ŸŸù û
cantidadŸŸû ¶
)ŸŸ¶ ß
;ŸŸß ®6
(detallesInventariosHistoricos_Existentes
⁄⁄ 8
.
⁄⁄8 9
Add
⁄⁄9 <
(
⁄⁄< =(
detalleInventarioHistorico
⁄⁄= W
.
⁄⁄W X"
ToDetalleTransaccion
⁄⁄X l
(
⁄⁄l m
)
⁄⁄m n
)
⁄⁄n o
;
⁄⁄o p
}
€€ 
return
‹‹ 6
(detallesInventariosHistoricos_Existentes
‹‹ ;
;
‹‹; <
}
›› 	
public
ÂÂ 
List
ÂÂ 
<
ÂÂ %
Reporte_Concepto_Basico
ÂÂ +
>
ÂÂ+ ,.
 ObtenerReporteDeSalidasDeAlcohol
ÂÂ- M
(
ÂÂM N
DateTime
ÂÂN V

fechaDesde
ÂÂW a
,
ÂÂa b
DateTime
ÂÂc k

fechaHasta
ÂÂl v
,
ÂÂv w
int
ÂÂx {
[
ÂÂ{ |
]
ÂÂ| }
idsPuntosDeVentaÂÂ~ é
)ÂÂé è
{
ÊÊ 	
try
ÁÁ 
{
ËË 
int
ÈÈ 
idFamiliaAlcohol
ÈÈ $
=
ÈÈ% &
MaestroSettings
ÈÈ' 6
.
ÈÈ6 7
Default
ÈÈ7 >
.
ÈÈ> ?3
%IdDetalleMaestroConceptoBasicoAlcohol
ÈÈ? d
;
ÈÈd e
var
ÌÌ 
reporteConceptos
ÌÌ $
=
ÌÌ% &$
transaccionRepositorio
ÌÌ' =
.
ÌÌ= >-
ObtenerReportePorConceptoBasico
ÌÌ> ]
(
ÌÌ] ^

fechaDesde
ÌÌ^ h
,
ÌÌh i

fechaHasta
ÌÌj t
,
ÌÌt u
idFamiliaAlcoholÌÌv Ü
,ÌÌÜ á
newÌÌà ã
intÌÌå è
[ÌÌè ê
]ÌÌê ë
{ÌÌí ì#
TransaccionSettingsÌÌî ß
.ÌÌß ®
DefaultÌÌ® Ø
.ÌÌØ ∞5
%IdTipoTransaccionSalidaBienesPorVentaÌÌ∞ ’
}ÌÌ÷ ◊
,ÌÌ◊ ÿ
newÌÌŸ ‹
intÌÌ› ‡
[ÌÌ‡ ·
]ÌÌ· ‚
{ÌÌ„ ‰
MaestroSettingsÌÌÂ Ù
.ÌÌÙ ı
DefaultÌÌı ¸
.ÌÌ¸ ˝1
!IdDetalleMaestroComprobanteBoletaÌÌ˝ û
,ÌÌû ü
MaestroSettingsÌÌ† Ø
.ÌÌØ ∞
DefaultÌÌ∞ ∑
.ÌÌ∑ ∏2
"IdDetalleMaestroComprobanteFacturaÌÌ∏ ⁄
}ÌÌ€ ‹
,ÌÌ‹ › 
idsPuntosDeVentaÌÌﬁ Ó
)ÌÌÓ Ô
.ÌÌÔ 
ToListÌÌ ˆ
(ÌÌˆ ˜
)ÌÌ˜ ¯
;ÌÌ¯ ˘
return
ÔÔ 
reporteConceptos
ÔÔ '
.
ÔÔ' (
OrderByDescending
ÔÔ( 9
(
ÔÔ9 :
d
ÔÔ: ;
=>
ÔÔ< >
d
ÔÔ? @
.
ÔÔ@ A
FechaInicio
ÔÔA L
)
ÔÔL M
.
ÔÔM N
ToList
ÔÔN T
(
ÔÔT U
)
ÔÔU V
;
ÔÔV W
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
new
ÙÙ 
LogicaException
ÙÙ )
(
ÙÙ) *
$str
ÙÙ* X
,
ÙÙX Y
e
ÙÙZ [
)
ÙÙ[ \
;
ÙÙ\ ]
}
ıı 
}
ˆˆ 	
public
Ä	Ä	 
List
Ä	Ä	 
<
Ä	Ä	 
string
Ä	Ä	 
>
Ä	Ä	 5
'ObtenerFechaIncioyFinParaReporteAlmacen
Ä	Ä	 C
(
Ä	Ä	C D
)
Ä	Ä	D E
{
Å	Å	 	
DateTime
Ç	Ç	 
fechaActual
Ç	Ç	  
=
Ç	Ç	! "
DateTimeUtil
Ç	Ç	# /
.
Ç	Ç	/ 0
FechaActual
Ç	Ç	0 ;
(
Ç	Ç	; <
)
Ç	Ç	< =
;
Ç	Ç	= >
string
É	É	 

fechaDesde
É	É	 
=
É	É	 
fechaActual
É	É	  +
.
É	É	+ ,
AddDays
É	É	, 3
(
É	É	3 4
-
É	É	4 5
$num
É	É	5 6
)
É	É	6 7
.
É	É	7 8
Date
É	É	8 <
.
É	É	< =
ToString
É	É	= E
(
É	É	E F
$str
É	É	F R
)
É	É	R S
;
É	É	S T
string
Ñ	Ñ	 

fechaHasta
Ñ	Ñ	 
=
Ñ	Ñ	 
fechaActual
Ñ	Ñ	  +
.
Ñ	Ñ	+ ,
Date
Ñ	Ñ	, 0
.
Ñ	Ñ	0 1
ToString
Ñ	Ñ	1 9
(
Ñ	Ñ	9 :
$str
Ñ	Ñ	: F
)
Ñ	Ñ	F G
;
Ñ	Ñ	G H
return
Ü	Ü	 
new
Ü	Ü	 
List
Ü	Ü	 
<
Ü	Ü	 
string
Ü	Ü	 "
>
Ü	Ü	" #
{
Ü	Ü	$ %

fechaDesde
Ü	Ü	& 0
,
Ü	Ü	0 1

fechaHasta
Ü	Ü	2 <
}
Ü	Ü	= >
;
Ü	Ü	> ?
}
á	á	 	
public
ç	ç	 
async
ç	ç	 
Task
ç	ç	 
<
ç	ç	 
List
ç	ç	 
<
ç	ç	 .
 TipoDeComprobanteParaTransaccion
ç	ç	 ?
>
ç	ç	? @
>
ç	ç	@ A?
1ObtenerTiposDeComprobanteParaMovimientoMercaderia
ç	ç	B s
(
ç	ç	s t
int
ç	ç	t w
idCentroAtencionç	ç	x à
)ç	ç	à â
{
é	é	 	
try
è	è	 
{
ê	ê	 
var
ë	ë	 
	resultado
ë	ë	 
=
ë	ë	 
(
ë	ë	  !
await
ë	ë	! &$
transaccionRepositorio
ë	ë	' =
.
ë	ë	= >8
*ObtenerTipoComprobantePorTipoDeTransaccion
ë	ë	> h
(
ë	ë	h i!
TransaccionSettings
ë	ë	i |
.
ë	ë	| }
Defaultë	ë	} Ñ
.ë	ë	Ñ Ö6
&IdTipoTransaccionOrdenDeDesplazamientoë	ë	Ö ´
)ë	ë	´ ¨
)ë	ë	¨ ≠
.ë	ë	≠ Æ
ToListë	ë	Æ ¥
(ë	ë	¥ µ
)ë	ë	µ ∂
;ë	ë	∂ ∑
return
í	í	 .
 TipoDeComprobanteParaTransaccion
í	í	 7
.
í	í	7 8
Convert
í	í	8 ?
(
í	í	? @
	resultado
í	í	@ I
)
í	í	I J
;
í	í	J K
}
ì	ì	 
catch
î	î	 
(
î	î	 
	Exception
î	î	 
e
î	î	 
)
î	î	 
{
î	î	  !
throw
î	î	" '
e
î	î	( )
;
î	î	) *
}
î	î	+ ,
}
ï	ï	 	
public
ó	ó	 
async
ó	ó	 
Task
ó	ó	 
<
ó	ó	 
List
ó	ó	 
<
ó	ó	 .
 TipoDeComprobanteParaTransaccion
ó	ó	 ?
>
ó	ó	? @
>
ó	ó	@ A2
$ObtenerTiposDeComprobanteParaAlmacen
ó	ó	B f
(
ó	ó	f g
int
ó	ó	g j

idEmpleado
ó	ó	k u
,
ó	ó	u v
int
ó	ó	w z
idCentroAtencionó	ó	{ ã
)ó	ó	ã å
{
ò	ò	 	
try
ô	ô	 
{
ö	ö	 
var
õ	õ	 
	resultado
õ	õ	 
=
õ	õ	 
await
õ	õ	  %$
transaccionRepositorio
õ	õ	& <
.
õ	õ	< =8
*ObtenerTipoComprobantePorTipoDeTransaccion
õ	õ	= g
(
õ	õ	g h!
TransaccionSettings
õ	õ	h {
.
õ	õ	{ |
Defaultõ	õ	| É
.õ	õ	É Ñ6
&IdTipoTransaccionOrdenDeDesplazamientoõ	õ	Ñ ™
)õ	õ	™ ´
;õ	õ	´ ¨
foreach
ú	ú	 
(
ú	ú	 
var
ú	ú	 
tipo
ú	ú	 !
in
ú	ú	" $
	resultado
ú	ú	% .
)
ú	ú	. /
{
ù	ù	 
tipo
û	û	 
.
û	û	 
Detalle_maestro
û	û	 (
.
û	û	( )
Serie_comprobante
û	û	) :
=
û	û	; <
tipo
û	û	= A
.
û	û	A B
Detalle_maestro
û	û	B Q
.
û	û	Q R
Serie_comprobante
û	û	R c
.
û	û	c d
Where
û	û	d i
(
û	û	i j
sc
û	û	j l
=>
û	û	m o
sc
û	û	p r
.
û	û	r s
id_propietarioû	û	s Å
==û	û	Ç Ñ 
idCentroAtencionû	û	Ö ï
&&û	û	ñ ò
scû	û	ô õ
.û	û	õ ú

es_vigenteû	û	ú ¶
)û	û	¶ ß
.û	û	ß ®
ToListû	û	® Æ
(û	û	Æ Ø
)û	û	Ø ∞
;û	û	∞ ±
}
ü	ü	 
return
†	†	 .
 TipoDeComprobanteParaTransaccion
†	†	 7
.
†	†	7 8
Convert
†	†	8 ?
(
†	†	? @
	resultado
†	†	@ I
.
†	†	I J
ToList
†	†	J P
(
†	†	P Q
)
†	†	Q R
)
†	†	R S
;
†	†	S T
}
°	°	 
catch
¢	¢	 
(
¢	¢	 
	Exception
¢	¢	 
e
¢	¢	 
)
¢	¢	 
{
¢	¢	  !
throw
¢	¢	" '
e
¢	¢	( )
;
¢	¢	) *
}
¢	¢	+ ,
}
£	£	 	
public
•	•	 
List
•	•	 
<
•	•	 .
 TipoDeComprobanteParaTransaccion
•	•	 4
>
•	•	4 54
&ObtenerTipoDeComprobanteGuiaDeRemision
•	•	6 \
(
•	•	\ ]
int
•	•	] `

idEmpleado
•	•	a k
,
•	•	k l
int
•	•	m p
idCentroAtencion•	•	q Å
)•	•	Å Ç
{
¶	¶	 	
try
ß	ß	 
{
®	®	 
var
©	©	 
	resultado
©	©	 
=
©	©	 $
transaccionRepositorio
©	©	  6
.
©	©	6 78
*ObtenerTipoComprobantePorTipoDeComprobante
©	©	7 a
(
©	©	a b
MaestroSettings
©	©	b q
.
©	©	q r
Default
©	©	r y
.
©	©	y zA
2IdDetalleMaestroComprobanteGuiaDeRemisionRemitente©	©	z ¨
)©	©	¨ ≠
;©	©	≠ Æ
foreach
™	™	 
(
™	™	 
var
™	™	 
tipo
™	™	 !
in
™	™	" $
	resultado
™	™	% .
)
™	™	. /
{
´	´	 
tipo
¨	¨	 
.
¨	¨	 
Detalle_maestro
¨	¨	 (
.
¨	¨	( )
Serie_comprobante
¨	¨	) :
=
¨	¨	; <
tipo
¨	¨	= A
.
¨	¨	A B
Detalle_maestro
¨	¨	B Q
.
¨	¨	Q R
Serie_comprobante
¨	¨	R c
.
¨	¨	c d
Where
¨	¨	d i
(
¨	¨	i j
sc
¨	¨	j l
=>
¨	¨	m o
sc
¨	¨	p r
.
¨	¨	r s
id_propietario¨	¨	s Å
==¨	¨	Ç Ñ 
idCentroAtencion¨	¨	Ö ï
&&¨	¨	ñ ò
sc¨	¨	ô õ
.¨	¨	õ ú

es_vigente¨	¨	ú ¶
)¨	¨	¶ ß
.¨	¨	ß ®
ToList¨	¨	® Æ
(¨	¨	Æ Ø
)¨	¨	Ø ∞
;¨	¨	∞ ±
}
≠	≠	 
return
Æ	Æ	 .
 TipoDeComprobanteParaTransaccion
Æ	Æ	 7
.
Æ	Æ	7 8
Convert
Æ	Æ	8 ?
(
Æ	Æ	? @
	resultado
Æ	Æ	@ I
.
Æ	Æ	I J
ToList
Æ	Æ	J P
(
Æ	Æ	P Q
)
Æ	Æ	Q R
)
Æ	Æ	R S
;
Æ	Æ	S T
}
Ø	Ø	 
catch
∞	∞	 
(
∞	∞	 
	Exception
∞	∞	 
e
∞	∞	 
)
∞	∞	 
{
∞	∞	  !
throw
∞	∞	" '
e
∞	∞	( )
;
∞	∞	) *
}
∞	∞	+ ,
}
±	±	 	
public
≥	≥	 
List
≥	≥	 
<
≥	≥	 .
 TipoDeComprobanteParaTransaccion
≥	≥	 4
>
≥	≥	4 53
%ObtenerTipoDeComprobanteNotaDeAlmacen
≥	≥	6 [
(
≥	≥	[ \
int
≥	≥	\ _

idEmpleado
≥	≥	` j
,
≥	≥	j k
int
≥	≥	l o
idCentroAtencion≥	≥	p Ä
)≥	≥	Ä Å
{
¥	¥	 	
try
µ	µ	 
{
∂	∂	 
var
∑	∑	 
	resultado
∑	∑	 
=
∑	∑	 $
transaccionRepositorio
∑	∑	  6
.
∑	∑	6 78
*ObtenerTipoComprobantePorTipoDeComprobante
∑	∑	7 a
(
∑	∑	a b
MaestroSettings
∑	∑	b q
.
∑	∑	q r
Default
∑	∑	r y
.
∑	∑	y z<
-IdDetalleMaestroComprobanteNotaAlmacenInterna∑	∑	z ß
)∑	∑	ß ®
;∑	∑	® ©
foreach
∏	∏	 
(
∏	∏	 
var
∏	∏	 
tipo
∏	∏	 !
in
∏	∏	" $
	resultado
∏	∏	% .
)
∏	∏	. /
{
π	π	 
tipo
∫	∫	 
.
∫	∫	 
Detalle_maestro
∫	∫	 (
.
∫	∫	( )
Serie_comprobante
∫	∫	) :
=
∫	∫	; <
tipo
∫	∫	= A
.
∫	∫	A B
Detalle_maestro
∫	∫	B Q
.
∫	∫	Q R
Serie_comprobante
∫	∫	R c
.
∫	∫	c d
Where
∫	∫	d i
(
∫	∫	i j
sc
∫	∫	j l
=>
∫	∫	m o
sc
∫	∫	p r
.
∫	∫	r s
id_propietario∫	∫	s Å
==∫	∫	Ç Ñ 
idCentroAtencion∫	∫	Ö ï
&&∫	∫	ñ ò
sc∫	∫	ô õ
.∫	∫	õ ú

es_vigente∫	∫	ú ¶
)∫	∫	¶ ß
.∫	∫	ß ®
ToList∫	∫	® Æ
(∫	∫	Æ Ø
)∫	∫	Ø ∞
;∫	∫	∞ ±
}
ª	ª	 
return
º	º	 .
 TipoDeComprobanteParaTransaccion
º	º	 7
.
º	º	7 8
Convert
º	º	8 ?
(
º	º	? @
	resultado
º	º	@ I
.
º	º	I J
ToList
º	º	J P
(
º	º	P Q
)
º	º	Q R
)
º	º	R S
;
º	º	S T
}
Ω	Ω	 
catch
æ	æ	 
(
æ	æ	 
	Exception
æ	æ	 
e
æ	æ	 
)
æ	æ	 
{
æ	æ	  !
throw
æ	æ	" '
e
æ	æ	( )
;
æ	æ	) *
}
æ	æ	+ ,
}
ø	ø	 	
public
¡	¡	 
List
¡	¡	 
<
¡	¡	 .
 TipoDeComprobanteParaTransaccion
¡	¡	 4
>
¡	¡	4 54
&ObtenerTipoDeComprobanteOrdenDeAlmacen
¡	¡	6 \
(
¡	¡	\ ]
int
¡	¡	] `

idEmpleado
¡	¡	a k
,
¡	¡	k l
int
¡	¡	m p
idCentroAtencion¡	¡	q Å
)¡	¡	Å Ç
{
¬	¬	 	
try
√	√	 
{
ƒ	ƒ	 
var
≈	≈	 
	resultado
≈	≈	 
=
≈	≈	 $
transaccionRepositorio
≈	≈	  6
.
≈	≈	6 78
*ObtenerTipoComprobantePorTipoDeComprobante
≈	≈	7 a
(
≈	≈	a b
MaestroSettings
≈	≈	b q
.
≈	≈	q r
Default
≈	≈	r y
.
≈	≈	y z8
)IdDetalleMaestroComprobanteOrdenDeAlmacen≈	≈	z £
)≈	≈	£ §
;≈	≈	§ •
foreach
∆	∆	 
(
∆	∆	 
var
∆	∆	 
tipo
∆	∆	 !
in
∆	∆	" $
	resultado
∆	∆	% .
)
∆	∆	. /
{
«	«	 
tipo
»	»	 
.
»	»	 
Detalle_maestro
»	»	 (
.
»	»	( )
Serie_comprobante
»	»	) :
=
»	»	; <
tipo
»	»	= A
.
»	»	A B
Detalle_maestro
»	»	B Q
.
»	»	Q R
Serie_comprobante
»	»	R c
.
»	»	c d
Where
»	»	d i
(
»	»	i j
sc
»	»	j l
=>
»	»	m o
sc
»	»	p r
.
»	»	r s
id_propietario»	»	s Å
==»	»	Ç Ñ 
idCentroAtencion»	»	Ö ï
&&»	»	ñ ò
sc»	»	ô õ
.»	»	õ ú

es_vigente»	»	ú ¶
)»	»	¶ ß
.»	»	ß ®
ToList»	»	® Æ
(»	»	Æ Ø
)»	»	Ø ∞
;»	»	∞ ±
}
…	…	 
return
 	 	 .
 TipoDeComprobanteParaTransaccion
 	 	 7
.
 	 	7 8
Convert
 	 	8 ?
(
 	 	? @
	resultado
 	 	@ I
.
 	 	I J
ToList
 	 	J P
(
 	 	P Q
)
 	 	Q R
)
 	 	R S
;
 	 	S T
}
À	À	 
catch
Ã	Ã	 
(
Ã	Ã	 
	Exception
Ã	Ã	 
e
Ã	Ã	 
)
Ã	Ã	 
{
Ã	Ã	  !
throw
Ã	Ã	" '
e
Ã	Ã	( )
;
Ã	Ã	) *
}
Ã	Ã	+ ,
}
Õ	Õ	 	
public
◊	◊	 
List
◊	◊	 
<
◊	◊	 $
OrdenDeTrasladoInterno
◊	◊	 *
>
◊	◊	* +4
&ObtenerOrdenesIngresoInternoMercaderia
◊	◊	, R
(
◊	◊	R S
int
◊	◊	S V

idEmpleado
◊	◊	W a
,
◊	◊	a b
int
◊	◊	c f
idCentroAtencion
◊	◊	g w
,
◊	◊	w x
DateTime◊	◊	y Å

fechaDesde◊	◊	Ç å
,◊	◊	å ç
DateTime◊	◊	é ñ

fechaHasta◊	◊	ó °
)◊	◊	° ¢
{
ÿ	ÿ	 	
try
Ÿ	Ÿ	 
{
⁄	⁄	 
int
€	€	 
[
€	€	 
]
€	€	 ,
idsTransaccionesOrdenesIngreso
€	€	 4
=
€	€	5 6
{
€	€	7 8!
TransaccionSettings
€	€	9 L
.
€	€	L M
Default
€	€	M T
.
€	€	T UG
8IdTipoTransaccionIngresoMercader√≠aDesplazamientoInterno€	€	U å
}€	€	ç é
;€	€	é è
return
‹	‹	 $
OrdenDeTrasladoInterno
‹	‹	 -
.
‹	‹	- .
Convert_
‹	‹	. 6
(
‹	‹	6 7$
transaccionRepositorio
‹	‹	7 M
.
‹	‹	M NJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado_‹	‹	N â
(‹	‹	â ä.
idsTransaccionesOrdenesIngreso‹	‹	ä ®
,‹	‹	® ©
MaestroSettings‹	‹	™ π
.‹	‹	π ∫
Default‹	‹	∫ ¡
.‹	‹	¡ ¬0
 IdDetalleMaestroEstadoConfirmado‹	‹	¬ ‚
,‹	‹	‚ „ 
idCentroAtencion‹	‹	‰ Ù
,‹	‹	Ù ı

fechaDesde‹	‹	ˆ Ä
,‹	‹	Ä Å

fechaHasta‹	‹	Ç å
)‹	‹	å ç
.‹	‹	ç é!
OrderByDescending‹	‹	é ü
(‹	‹	ü †
oti‹	‹	† £
=>‹	‹	§ ¶
oti‹	‹	ß ™
.‹	‹	™ ´
fecha_inicio‹	‹	´ ∑
)‹	‹	∑ ∏
.‹	‹	∏ π 
ThenByDescending‹	‹	π …
(‹	‹	…  
oc‹	‹	  Ã
=>‹	‹	Õ œ
oc‹	‹	– “
.‹	‹	“ ”
id‹	‹	” ’
)‹	‹	’ ÷
.‹	‹	÷ ◊
ToList‹	‹	◊ ›
(‹	‹	› ﬁ
)‹	‹	ﬁ ﬂ
)‹	‹	ﬂ ‡
;‹	‹	‡ ·
}
›	›	 
catch
ﬁ	ﬁ	 
(
ﬁ	ﬁ	 
	Exception
ﬁ	ﬁ	 
e
ﬁ	ﬁ	 
)
ﬁ	ﬁ	 
{
ﬂ	ﬂ	 
throw
‡	‡	 
e
‡	‡	 
;
‡	‡	 
}
·	·	 
}
‚	‚	 	
public
Ï	Ï	 
List
Ï	Ï	 
<
Ï	Ï	 $
OrdenDeTrasladoInterno
Ï	Ï	 *
>
Ï	Ï	* +3
%ObtenerOrdenesSalidaInternoMercaderia
Ï	Ï	, Q
(
Ï	Ï	Q R
int
Ï	Ï	R U

idEmpleado
Ï	Ï	V `
,
Ï	Ï	` a
int
Ï	Ï	b e
idCentroAtencion
Ï	Ï	f v
,
Ï	Ï	v w
DateTimeÏ	Ï	x Ä

fechaDesdeÏ	Ï	Å ã
,Ï	Ï	ã å
DateTimeÏ	Ï	ç ï

fechaHastaÏ	Ï	ñ †
)Ï	Ï	† °
{
Ì	Ì	 	
try
Ó	Ó	 
{
Ô	Ô	 
int
		 
[
		 
]
		 +
idsTransaccionesOrdenesSalida
		 3
=
		4 5
{
		6 7!
TransaccionSettings
		8 K
.
		K L
Default
		L S
.
		S TF
7IdTipoTransaccionSalidaMercader√≠aDesplazamientoInterno		T ä
}		ã å
;		å ç
return
Ò	Ò	 $
OrdenDeTrasladoInterno
Ò	Ò	 -
.
Ò	Ò	- .
Convert_
Ò	Ò	. 6
(
Ò	Ò	6 7$
transaccionRepositorio
Ò	Ò	7 M
.
Ò	Ò	M NJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado_Ò	Ò	N â
(Ò	Ò	â ä-
idsTransaccionesOrdenesSalidaÒ	Ò	ä ß
,Ò	Ò	ß ®
MaestroSettingsÒ	Ò	© ∏
.Ò	Ò	∏ π
DefaultÒ	Ò	π ¿
.Ò	Ò	¿ ¡0
 IdDetalleMaestroEstadoConfirmadoÒ	Ò	¡ ·
,Ò	Ò	· ‚ 
idCentroAtencionÒ	Ò	„ Û
,Ò	Ò	Û Ù

fechaDesdeÒ	Ò	ı ˇ
,Ò	Ò	ˇ Ä

fechaHastaÒ	Ò	Å ã
)Ò	Ò	ã å
.Ò	Ò	å ç!
OrderByDescendingÒ	Ò	ç û
(Ò	Ò	û ü
otiÒ	Ò	ü ¢
=>Ò	Ò	£ •
otiÒ	Ò	¶ ©
.Ò	Ò	© ™
fecha_inicioÒ	Ò	™ ∂
)Ò	Ò	∂ ∑
.Ò	Ò	∑ ∏ 
ThenByDescendingÒ	Ò	∏ »
(Ò	Ò	» …
ocÒ	Ò	… À
=>Ò	Ò	Ã Œ
ocÒ	Ò	œ —
.Ò	Ò	— “
idÒ	Ò	“ ‘
)Ò	Ò	‘ ’
.Ò	Ò	’ ÷
ToListÒ	Ò	÷ ‹
(Ò	Ò	‹ ›
)Ò	Ò	› ﬁ
)Ò	Ò	ﬁ ﬂ
;Ò	Ò	ﬂ ‡
}
Ú	Ú	 
catch
Û	Û	 
(
Û	Û	 
	Exception
Û	Û	 
e
Û	Û	 
)
Û	Û	 
{
Ù	Ù	 
throw
ı	ı	 
e
ı	ı	 
;
ı	ı	 
}
ˆ	ˆ	 
}
˜	˜	 	
public
˘	˘	 
List
˘	˘	 
<
˘	˘	 $
Orden_Recibir_Entregar
˘	˘	 *
>
˘	˘	* +/
!ObtenerOrdenesDeAlmacenPorRecibir
˘	˘	, M
(
˘	˘	M N
int
˘	˘	N Q

idEmpleado
˘	˘	R \
,
˘	˘	\ ]
List
˘	˘	^ b
<
˘	˘	b c
int
˘	˘	c f
>
˘	˘	f g 
idsCentrosAtencion
˘	˘	h z
,
˘	˘	z {
DateTime˘	˘	| Ñ

fechaDesde˘	˘	Ö è
,˘	˘	è ê
DateTime˘	˘	ë ô

fechaHasta˘	˘	ö §
)˘	˘	§ •
{
˙	˙	 	
try
˚	˚	 
{
¸	¸	 
bool
˝	˝	 

porRecibir
˝	˝	 
=
˝	˝	  !
true
˝	˝	" &
;
˝	˝	& '
return
˛	˛	 $
transaccionRepositorio
˛	˛	 -
.
˛	˛	- .;
-ObtenerOrdenesPorRecibirOPorEntregarDeAlmacen
˛	˛	. [
(
˛	˛	[ \

porRecibir
˛	˛	\ f
,
˛	˛	f g 
idsCentrosAtencion
˛	˛	h z
,
˛	˛	z {

fechaDesde˛	˛	| Ü
,˛	˛	Ü á

fechaHasta˛	˛	à í
)˛	˛	í ì
.˛	˛	ì î
ToList˛	˛	î ö
(˛	˛	ö õ
)˛	˛	õ ú
;˛	˛	ú ù
}
ˇ	ˇ	 
catch
Ä
Ä
 
(
Ä
Ä
 
	Exception
Ä
Ä
 
e
Ä
Ä
 
)
Ä
Ä
 
{
Å
Å
 
throw
Ç
Ç
 
new
Ç
Ç
 
LogicaException
Ç
Ç
 )
(
Ç
Ç
) *
$str
Ç
Ç
* h
,
Ç
Ç
h i
e
Ç
Ç
j k
)
Ç
Ç
k l
;
Ç
Ç
l m
}
É
É
 
}
Ñ
Ñ
 	
public
Ü
Ü
 
List
Ü
Ü
 
<
Ü
Ü
 $
Orden_Recibir_Entregar
Ü
Ü
 *
>
Ü
Ü
* +0
"ObtenerOrdenesDeAlmacenPorEntregar
Ü
Ü
, N
(
Ü
Ü
N O
int
Ü
Ü
O R

idEmpleado
Ü
Ü
S ]
,
Ü
Ü
] ^
List
Ü
Ü
_ c
<
Ü
Ü
c d
int
Ü
Ü
d g
>
Ü
Ü
g h 
idsCentrosAtencion
Ü
Ü
i {
,
Ü
Ü
{ |
DateTimeÜ
Ü
} Ö

fechaDesdeÜ
Ü
Ü ê
,Ü
Ü
ê ë
DateTimeÜ
Ü
í ö

fechaHastaÜ
Ü
õ •
)Ü
Ü
• ¶
{
á
á
 	
try
à
à
 
{
â
â
 
bool
ä
ä
 

porRecibir
ä
ä
 
=
ä
ä
  !
true
ä
ä
" &
;
ä
ä
& '
return
ã
ã
 $
transaccionRepositorio
ã
ã
 -
.
ã
ã
- .;
-ObtenerOrdenesPorRecibirOPorEntregarDeAlmacen
ã
ã
. [
(
ã
ã
[ \

porRecibir
ã
ã
\ f
,
ã
ã
f g 
idsCentrosAtencion
ã
ã
h z
,
ã
ã
z {

fechaDesdeã
ã
| Ü
,ã
ã
Ü á

fechaHastaã
ã
à í
)ã
ã
í ì
.ã
ã
ì î
ToListã
ã
î ö
(ã
ã
ö õ
)ã
ã
õ ú
;ã
ã
ú ù
}
å
å
 
catch
ç
ç
 
(
ç
ç
 
	Exception
ç
ç
 
e
ç
ç
 
)
ç
ç
 
{
é
é
 
throw
è
è
 
new
è
è
 
LogicaException
è
è
 )
(
è
è
) *
$str
è
è
* i
,
è
è
i j
e
è
è
k l
)
è
è
l m
;
è
è
m n
}
ê
ê
 
}
ë
ë
 	
public
ì
ì
 
List
ì
ì
 
<
ì
ì
 $
Entrada_Salida_Almacen
ì
ì
 *
>
ì
ì
* +&
ObtenerEntradasDeAlmacen
ì
ì
, D
(
ì
ì
D E
int
ì
ì
E H

idEmpleado
ì
ì
I S
,
ì
ì
S T
List
ì
ì
U Y
<
ì
ì
Y Z
int
ì
ì
Z ]
>
ì
ì
] ^ 
idsCentrosAtencion
ì
ì
_ q
,
ì
ì
q r
DateTime
ì
ì
s {

fechaDesdeì
ì
| Ü
,ì
ì
Ü á
DateTimeì
ì
à ê

fechaHastaì
ì
ë õ
)ì
ì
õ ú
{
î
î
 	
try
ï
ï
 
{
ñ
ñ
 
bool
ó
ó
 
	esEntrada
ó
ó
 
=
ó
ó
  
true
ó
ó
! %
;
ó
ó
% &
return
ò
ò
 $
transaccionRepositorio
ò
ò
 -
.
ò
ò
- ..
 ObtenerEntradasOSalidasDeAlmacen
ò
ò
. N
(
ò
ò
N O
	esEntrada
ò
ò
O X
,
ò
ò
X Y 
idsCentrosAtencion
ò
ò
Z l
,
ò
ò
l m

fechaDesde
ò
ò
n x
,
ò
ò
x y

fechaHastaò
ò
z Ñ
)ò
ò
Ñ Ö
.ò
ò
Ö Ü
ToListò
ò
Ü å
(ò
ò
å ç
)ò
ò
ç é
;ò
ò
é è
}
ô
ô
 
catch
ö
ö
 
(
ö
ö
 
	Exception
ö
ö
 
e
ö
ö
 
)
ö
ö
 
{
õ
õ
 
throw
ú
ú
 
new
ú
ú
 
LogicaException
ú
ú
 )
(
ú
ú
) *
$str
ú
ú
* ]
,
ú
ú
] ^
e
ú
ú
_ `
)
ú
ú
` a
;
ú
ú
a b
}
ù
ù
 
}
û
û
 	
public
†
†
 
List
†
†
 
<
†
†
 $
Entrada_Salida_Almacen
†
†
 *
>
†
†
* +%
ObtenerSalidasDeAlmacen
†
†
, C
(
†
†
C D
int
†
†
D G

idEmpleado
†
†
H R
,
†
†
R S
List
†
†
T X
<
†
†
X Y
int
†
†
Y \
>
†
†
\ ] 
idsCentrosAtencion
†
†
^ p
,
†
†
p q
DateTime
†
†
r z

fechaDesde†
†
{ Ö
,†
†
Ö Ü
DateTime†
†
á è

fechaHasta†
†
ê ö
)†
†
ö õ
{
°
°
 	
try
¢
¢
 
{
£
£
 
bool
§
§
 
	esEntrada
§
§
 
=
§
§
  
false
§
§
! &
;
§
§
& '
return
•
•
 $
transaccionRepositorio
•
•
 -
.
•
•
- ..
 ObtenerEntradasOSalidasDeAlmacen
•
•
. N
(
•
•
N O
	esEntrada
•
•
O X
,
•
•
X Y 
idsCentrosAtencion
•
•
Z l
,
•
•
l m

fechaDesde
•
•
n x
,
•
•
x y

fechaHasta•
•
z Ñ
)•
•
Ñ Ö
.•
•
Ö Ü
ToList•
•
Ü å
(•
•
å ç
)•
•
ç é
;•
•
é è
}
¶
¶
 
catch
ß
ß
 
(
ß
ß
 
	Exception
ß
ß
 
e
ß
ß
 
)
ß
ß
 
{
®
®
 
throw
©
©
 
new
©
©
 
LogicaException
©
©
 )
(
©
©
) *
$str
©
©
* ]
,
©
©
] ^
e
©
©
_ `
)
©
©
` a
;
©
©
a b
}
™
™
 
}
´
´
 	
public
≠
≠
 
TrasladoInterno
≠
≠
 
ObtenerMovimiento
≠
≠
 0
(
≠
≠
0 1
long
≠
≠
1 5
idMovimiento
≠
≠
6 B
)
≠
≠
B C
{
Æ
Æ
 	
try
Ø
Ø
 
{
∞
∞
 
return
±
±
 
(
±
±
 
new
±
±
 
TrasladoInterno
±
±
 +
(
±
±
+ ,$
transaccionRepositorio
±
±
, B
.
±
±
B CF
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
±
±
C {
(
±
±
{ |
idMovimiento±
±
| à
)±
±
à â
)±
±
â ä
)±
±
ä ã
;±
±
ã å
}
≤
≤
 
catch
≥
≥
 
(
≥
≥
 
	Exception
≥
≥
 
e
≥
≥
 
)
≥
≥
 
{
¥
¥
 
throw
µ
µ
 
e
µ
µ
 
;
µ
µ
 
}
∂
∂
 
}
∑
∑
 	
public
π
π
 $
OrdenDeTrasladoInterno
π
π
 %$
ObtenerOrdenMovimiento
π
π
& <
(
π
π
< =
long
π
π
= A
idOrdenMovimiento
π
π
B S
)
π
π
S T
{
∫
∫
 	
try
ª
ª
 
{
º
º
 
return
Ω
Ω
 
(
Ω
Ω
 
new
Ω
Ω
 $
OrdenDeTrasladoInterno
Ω
Ω
 2
(
Ω
Ω
2 3$
transaccionRepositorio
Ω
Ω
3 I
.
Ω
Ω
I JG
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoΩ
Ω
J Ç
(Ω
Ω
Ç É!
idOrdenMovimientoΩ
Ω
É î
)Ω
Ω
î ï
)Ω
Ω
ï ñ
)Ω
Ω
ñ ó
;Ω
Ω
ó ò
}
æ
æ
 
catch
ø
ø
 
(
ø
ø
 
	Exception
ø
ø
 
e
ø
ø
 
)
ø
ø
 
{
¿
¿
 
throw
¡
¡
 
e
¡
¡
 
;
¡
¡
 
}
¬
¬
 
}
√
√
 	
public
≈
≈
 (
OrdenDeMovimientoDeAlmacen
≈
≈
 )/
!ObtenerOrdenDeMovimientoDeAlmacen
≈
≈
* K
(
≈
≈
K L
long
≈
≈
L P
idOrdenDeAlmacen
≈
≈
Q a
)
≈
≈
a b
{
∆
∆
 	
try
«
«
 
{
»
»
 
return
…
…
 
(
…
…
 
new
…
…
 (
OrdenDeMovimientoDeAlmacen
…
…
 6
(
…
…
6 7$
transaccionRepositorio
…
…
7 M
.
…
…
M NF
7ObtenerTransaccionInclusiveActorDeNegocio1Transaccion11…
…
N Ö
(…
…
Ö Ü 
idOrdenDeAlmacen…
…
Ü ñ
)…
…
ñ ó
)…
…
ó ò
)…
…
ò ô
;…
…
ô ö
}
 
 
 
catch
À
À
 
(
À
À
 
	Exception
À
À
 
e
À
À
 
)
À
À
 
{
Ã
Ã
 
throw
Õ
Õ
 
e
Õ
Õ
 
;
Õ
Õ
 
}
Œ
Œ
 
}
œ
œ
 	
public
—
—
 
decimal
—
—
 $
ObtenerStockDeProducto
—
—
 -
(
—
—
- .
int
—
—
. 1

idProducto
—
—
2 <
,
—
—
< =
int
—
—
> A
idCentroAtencion
—
—
B R
)
—
—
R S
{
“
“
 	
try
”
”
 
{
‘
‘
 
return
’
’
 $
transaccionRepositorio
’
’
 -
.
’
’
- .'
ObtenerDetalleTransaccion
’
’
. G
(
’
’
G H
idCentroAtencion
’
’
H X
,
’
’
X Y!
TransaccionSettings
’
’
Z m
.
’
’
m n
Default
’
’
n u
.
’
’
u v0
!IdTipoTransaccionInventarioActual’
’
v ó
,’
’
ó ò
MaestroSettings’
’
ô ®
.’
’
® ©
Default’
’
© ∞
.’
’
∞ ±0
 IdDetalleMaestroEstadoConfirmado’
’
± —
,’
’
— “

idProducto’
’
” ›
,’
’
› ﬁ
null’
’
ﬂ „
)’
’
„ ‰
.’
’
‰ Â
cantidad’
’
Â Ì
;’
’
Ì Ó
}
÷
÷
 
catch
◊
◊
 
(
◊
◊
 
	Exception
◊
◊
 
e
◊
◊
 
)
◊
◊
 
{
ÿ
ÿ
 
throw
Ÿ
Ÿ
 
e
Ÿ
Ÿ
 
;
Ÿ
Ÿ
 
}
⁄
⁄
 
}
€
€
 	
public
·
·
 
List
·
·
 
<
·
·
 !
MovimientoDeAlmacen
·
·
 '
>
·
·
' ("
ObtenerGuiasRemision
·
·
) =
(
·
·
= >
int
·
·
> A
[
·
·
A B
]
·
·
B C
idsCentroAtencion
·
·
D U
,
·
·
U V
DateTime
·
·
W _
desde
·
·
` e
,
·
·
e f
DateTime
·
·
g o
hasta
·
·
p u
)
·
·
u v
{
‚
‚
 	
try
„
„
 
{
‰
‰
 
List
Â
Â
 
<
Â
Â
 
int
Â
Â
 
>
Â
Â
 #
idsTiposTransacciones
Â
Â
 /
=
Â
Â
0 1
Diccionario
Â
Â
2 =
.
Â
Â
= >:
,TiposDeTransaccionMovimientoDeBienes_Salidas
Â
Â
> j
.
Â
Â
j k
ToList
Â
Â
k q
(
Â
Â
q r
)
Â
Â
r s
;
Â
Â
s t#
idsTiposTransacciones
Ê
Ê
 %
.
Ê
Ê
% &
AddRange
Ê
Ê
& .
(
Ê
Ê
. /
Diccionario
Ê
Ê
/ :
.
Ê
Ê
: ;;
-TiposDeTransaccionMovimientoDeBienes_Entradas
Ê
Ê
; h
.
Ê
Ê
h i
ToList
Ê
Ê
i o
(
Ê
Ê
o p
)
Ê
Ê
p q
)
Ê
Ê
q r
;
Ê
Ê
r s#
idsTiposTransacciones
Á
Á
 %
.
Á
Á
% &
AddRange
Á
Á
& .
(
Á
Á
. /
Diccionario
Á
Á
/ :
.
Á
Á
: ;/
!TiposDeTransaccionGuiasDeRemision
Á
Á
; \
.
Á
Á
\ ]
ToList
Á
Á
] c
(
Á
Á
c d
)
Á
Á
d e
)
Á
Á
e f
;
Á
Á
f g
int
Ë
Ë
 
idTipoComprobante
Ë
Ë
 %
=
Ë
Ë
& '
MaestroSettings
Ë
Ë
( 7
.
Ë
Ë
7 8
Default
Ë
Ë
8 ?
.
Ë
Ë
? @@
2IdDetalleMaestroComprobanteGuiaDeRemisionRemitente
Ë
Ë
@ r
;
Ë
Ë
r s
List
È
È
 
<
È
È
 !
MovimientoDeAlmacen
È
È
 (
>
È
È
( )
guiasRemision
È
È
* 7
=
È
È
8 9!
MovimientoDeAlmacen
È
È
: M
.
È
È
M N
	Convertir
È
È
N W
(
È
È
W X$
transaccionRepositorio
È
È
X n
.
È
È
n oJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado_È
È
o ™
(È
È
™ ´%
idsTiposTransaccionesÈ
È
´ ¿
.È
È
¿ ¡
ToArrayÈ
È
¡ »
(È
È
» …
)È
È
…  
,È
È
  À!
idsCentroAtencionÈ
È
Ã ›
,È
È
› ﬁ!
idTipoComprobanteÈ
È
ﬂ 
,È
È
 Ò
desdeÈ
È
Ú ˜
,È
È
˜ ¯
hastaÈ
È
˘ ˛
)È
È
˛ ˇ
.È
È
ˇ Ä
ToListÈ
È
Ä Ü
(È
È
Ü á
)È
È
á à
)È
È
à â
.È
È
â ä!
OrderByDescendingÈ
È
ä õ
(È
È
õ ú
gÈ
È
ú ù
=>È
È
û †
gÈ
È
° ¢
.È
È
¢ £
FechaEmisionÈ
È
£ Ø
)È
È
Ø ∞
.È
È
∞ ±
ToListÈ
È
± ∑
(È
È
∑ ∏
)È
È
∏ π
;È
È
π ∫
return
Í
Í
 
guiasRemision
Í
Í
 $
;
Í
Í
$ %
}
Î
Î
 
catch
Ï
Ï
 
(
Ï
Ï
 
	Exception
Ï
Ï
 
e
Ï
Ï
 
)
Ï
Ï
 
{
Ì
Ì
 
throw
Ó
Ó
 
new
Ó
Ó
 
LogicaException
Ó
Ó
 )
(
Ó
Ó
) *
$str
Ó
Ó
* [
,
Ó
Ó
[ \
e
Ó
Ó
] ^
)
Ó
Ó
^ _
;
Ó
Ó
_ `
}
Ô
Ô
 
}


 	
public
Ú
Ú
 !
MovimientoDeAlmacen
Ú
Ú
 "!
ObtenerGuiaRemision
Ú
Ú
# 6
(
Ú
Ú
6 7
long
Ú
Ú
7 ;
idGuiaRemision
Ú
Ú
< J
)
Ú
Ú
J K
{
Û
Û
 	
try
Ù
Ù
 
{
ı
ı
 !
MovimientoDeAlmacen
ˆ
ˆ
 #
guiaRemision
ˆ
ˆ
$ 0
=
ˆ
ˆ
1 2
new
ˆ
ˆ
3 6!
MovimientoDeAlmacen
ˆ
ˆ
7 J
(
ˆ
ˆ
J K$
transaccionRepositorio
ˆ
ˆ
K a
.
ˆ
ˆ
a bZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccionˆ
ˆ
b ≠
(ˆ
ˆ
≠ Æ
idGuiaRemisionˆ
ˆ
Æ º
)ˆ
ˆ
º Ω
)ˆ
ˆ
Ω æ
;ˆ
ˆ
æ ø
return
˜
˜
 
guiaRemision
˜
˜
 #
;
˜
˜
# $
}
¯
¯
 
catch
˘
˘
 
(
˘
˘
 
	Exception
˘
˘
 
e
˘
˘
 
)
˘
˘
 
{
˙
˙
 
throw
˚
˚
 
new
˚
˚
 
LogicaException
˚
˚
 )
(
˚
˚
) *
$str
˚
˚
* Y
,
˚
˚
Y Z
e
˚
˚
[ \
)
˚
˚
\ ]
;
˚
˚
] ^
}
¸
¸
 
}
˝
˝
 	
public
ˇ
ˇ
 
OperationResult
ˇ
ˇ
 !
GuardarGuiaRemision
ˇ
ˇ
 2
(
ˇ
ˇ
2 3
int
ˇ
ˇ
3 6
	idTercero
ˇ
ˇ
7 @
,
ˇ
ˇ
@ A
bool
ˇ
ˇ
B F
esPropio
ˇ
ˇ
G O
,
ˇ
ˇ
O P
int
ˇ
ˇ
Q T
idTipoComprobante
ˇ
ˇ
U f
,
ˇ
ˇ
f g
int
ˇ
ˇ
h k 
idSerieComprobante
ˇ
ˇ
l ~
,
ˇ
ˇ
~ 
stringˇ
ˇ
Ä Ü"
serieDeComprobanteˇ
ˇ
á ô
,ˇ
ˇ
ô ö
intˇ
ˇ
õ û#
numeroDeComprobanteˇ
ˇ
ü ≤
,ˇ
ˇ
≤ ≥
DateTimeˇ
ˇ
¥ º%
fechaInicioTransporteˇ
ˇ
Ω “
,ˇ
ˇ
“ ”
intˇ
ˇ
‘ ◊
idTransportistaˇ
ˇ
ÿ Á
,ˇ
ˇ
Á Ë
stringˇ
ˇ
È Ô
placaTransporteˇ
ˇ
 ˇ
,ˇ
ˇ
ˇ Ä
intˇ
ˇ
Å Ñ
idConductorˇ
ˇ
Ö ê
,ˇ
ˇ
ê ë
stringˇ
ˇ
í ò(
numeroLicenciaTransporteˇ
ˇ
ô ±
,ˇ
ˇ
± ≤
intˇ
ˇ
≥ ∂&
idModalidadTransaporteˇ
ˇ
∑ Õ
,ˇ
ˇ
Õ Œ
intˇ
ˇ
œ “#
idMotivoTransaporteˇ
ˇ
” Ê
,ˇ
ˇ
Ê Á
stringˇ
ˇ
Ë Ó!
descripcionMotivoˇ
ˇ
Ô Ä
,ˇ
ˇ
Ä Å
decimalˇ
ˇ
Ç â
pesoBrutoTotalˇ
ˇ
ä ò
,ˇ
ˇ
ò ô
intˇ
ˇ
ö ù
numeroBultosˇ
ˇ
û ™
,ˇ
ˇ
™ ´
stringˇ
ˇ
¨ ≤'
direccionOrigenTrasladoˇ
ˇ
≥  
,ˇ
ˇ
  À
intˇ
ˇ
Ã œ&
idUbigeoOrigenTrasladoˇ
ˇ
– Ê
,ˇ
ˇ
Ê Á
stringˇ
ˇ
Ë Ó(
direccionDestinoTrasladoˇ
ˇ
Ô á
,ˇ
ˇ
á à
intˇ
ˇ
â å'
idUbigeoDestinoTrasladoˇ
ˇ
ç §
,ˇ
ˇ
§ •
stringˇ
ˇ
¶ ¨%
comprobanteReferenciaˇ
ˇ
≠ ¬
,ˇ
ˇ
¬ √
stringˇ
ˇ
ƒ  
observacionˇ
ˇ
À ÷
,ˇ
ˇ
÷ ◊
Listˇ
ˇ
ÿ ‹
<ˇ
ˇ
‹ ›#
Detalle_transaccionˇ
ˇ
› 
>ˇ
ˇ
 Ò
detallesˇ
ˇ
Ú ˙
,ˇ
ˇ
˙ ˚&
UserProfileSessionDataˇ
ˇ
¸ í
sesionUsuarioˇ
ˇ
ì †
)ˇ
ˇ
† °
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
int
ÉÉ 
idMoneda
ÉÉ 
=
ÉÉ 
MaestroSettings
ÉÉ .
.
ÉÉ. /
Default
ÉÉ/ 6
.
ÉÉ6 7)
IdDetalleMaestroMonedaSoles
ÉÉ7 R
;
ÉÉR S
int
ÑÑ 
idUnidadNegocio
ÑÑ #
=
ÑÑ$ %
MaestroSettings
ÑÑ& 5
.
ÑÑ5 6
Default
ÑÑ6 =
.
ÑÑ= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
ÑÑ> h
;
ÑÑh i
decimal
ÖÖ 
tipoDeCambio
ÖÖ $
=
ÖÖ% &
$num
ÖÖ' (
;
ÖÖ( )
DateTime
ÜÜ 
fechaActual
ÜÜ $
=
ÜÜ% &
DateTimeUtil
ÜÜ' 3
.
ÜÜ3 4
FechaActual
ÜÜ4 ?
(
ÜÜ? @
)
ÜÜ@ A
;
ÜÜA B
observacion
áá 
=
áá 
(
áá 
String
áá %
.
áá% &
IsNullOrEmpty
áá& 3
(
áá3 4
observacion
áá4 ?
)
áá? @
||
ááA C
String
ááD J
.
ááJ K 
IsNullOrWhiteSpace
ááK ]
(
áá] ^
observacion
áá^ i
)
áái j
)
ááj k
?
áál m
$str
áán w
:
ááx y
observacionááz Ö
;ááÖ Ü
if
àà 
(
àà 
pesoBrutoTotal
àà "
==
àà# %
$num
àà& '
)
àà' (
throw
àà) .
new
àà/ 2
LogicaException
àà3 B
(
ààB C
$str
ààC |
)
àà| }
;
àà} ~
if
ââ 
(
ââ 
numeroBultos
ââ  
==
ââ! #
$num
ââ$ %
)
ââ% &
throw
ââ' ,
new
ââ- 0
LogicaException
ââ1 @
(
ââ@ A
$str
ââA z
)
ââz {
;
ââ{ |
if
ää 
(
ää $
idModalidadTransaporte
ää *
==
ää+ -
MaestroSettings
ää. =
.
ää= >
Default
ää> E
.
ääE FB
4IdDetalleMaestroModalidadDeTrasladoTransportePrivado
ääF z
)
ääz {
{
ãã 
placaTransporte
åå #
=
åå$ %
placaTransporte
åå& 5
.
åå5 6
Replace
åå6 =
(
åå= >
$str
åå> A
,
ååA B
$str
ååC E
)
ååE F
;
ååF G&
numeroLicenciaTransporte
çç ,
=
çç- .&
numeroLicenciaTransporte
çç/ G
.
ççG H
Replace
ççH O
(
ççO P
$str
ççP S
,
ççS T
$str
ççU W
)
ççW X
;
ççX Y
if
éé 
(
éé 
placaTransporte
éé '
.
éé' (
Length
éé( .
<
éé/ 0
$num
éé1 2
||
éé3 5
placaTransporte
éé6 E
.
ééE F
Length
ééF L
>
ééM N
$num
ééO P
)
ééP Q
throw
ééR W
new
ééX [
LogicaException
éé\ k
(
éék l
$stréél †
)éé† °
;éé° ¢
if
èè 
(
èè &
numeroLicenciaTransporte
èè 0
.
èè0 1
Length
èè1 7
<
èè8 9
$num
èè: ;
||
èè< >&
numeroLicenciaTransporte
èè? W
.
èèW X
Length
èèX ^
>
èè_ `
$num
èèa c
)
èèc d
throw
èèe j
new
èèk n
LogicaException
èèo ~
(
èè~ 
$strèè ¿
)èè¿ ¡
;èè¡ ¬
}
êê 
int
íí +
idTipoTransaccionGuiaRemision
íí 1
=
íí2 3
Diccionario
íí4 ?
.
íí? @>
0MapeoMotivoTrasladoGuiaRemisionVsTipoTransaccion
íí@ p
.
ííp q
Single
ííq w
(
ííw x
m
ííx y
=>
ííz |
m
íí} ~
.
íí~ 
Keyíí Ç
==ííÉ Ö#
idMotivoTransaporteííÜ ô
)ííô ö
.ííö õ
Valueííõ †
;íí† °
descripcionMotivo
îî !
=
îî" #
(
îî$ %!
idMotivoTransaporte
îî% 8
==
îî9 ;
MaestroSettings
îî< K
.
îîK L
Default
îîL S
.
îîS T3
%IdDetalleMaestroMotivoDeTrasladoOtros
îîT y
)
îîy z
?
îî{ | 
descripcionMotivoîî} é
:îîè ê
nullîîë ï
;îîï ñ
permisos_Logica
ññ 
.
ññ  
ValidarAccion
ññ  -
(
ññ- .
sesionUsuario
ññ. ;
.
ññ; <
Empleado
ññ< D
.
ññD E
Id
ññE G
,
ññG H
MaestroSettings
ññI X
.
ññX Y
Default
ññY `
.
ññ` a.
IdDetalleMaestroAccionConfirmarñña Ä
,ññÄ Å-
idTipoTransaccionGuiaRemisionññÇ ü
,ññü †
idUnidadNegocioññ° ∞
)ññ∞ ±
;ññ± ≤
string
òò 
codigo
òò 
=
òò %
codigosOperacion_Logica
òò  7
.
òò7 83
%ObtenerSiguienteCodigoParaFacturacion
òò8 ]
(
òò] ^
Diccionario
òò^ i
.
òòi j6
'MapeoTipoTransaccionVsCodigoDeOperacionòòj ë
.òòë í
Singleòòí ò
(òòò ô
nòòô ö
=>òòõ ù
nòòû ü
.òòü †
Keyòò† £
==òò§ ¶-
idTipoTransaccionGuiaRemisionòòß ƒ
)òòƒ ≈
.òò≈ ∆
Valueòò∆ À
,òòÀ Ã-
idTipoTransaccionGuiaRemisionòòÕ Í
)òòÍ Î
;òòÎ Ï
Transaccion
öö 
guiaRemision
öö (
=
öö) *
new
öö+ .
Transaccion
öö/ :
(
öö: ;
codigo
öö; A
,
ööA B
null
ööC G
,
ööG H
fechaActual
ööI T
,
ööT U+
idTipoTransaccionGuiaRemision
ööV s
,
öös t
idUnidadNegocioööu Ñ
,ööÑ Ö
trueööÜ ä
,ööä ã
fechaActualööå ó
,ööó ò
fechaActualööô §
,öö§ •
observacionöö¶ ±
,öö± ≤
fechaActualöö≥ æ
,ööæ ø
sesionUsuarioöö¿ Õ
.ööÕ Œ
EmpleadoööŒ ÷
.öö÷ ◊
Idöö◊ Ÿ
,ööŸ ⁄
$numöö€ ‹
,öö‹ ›
sesionUsuarioööﬁ Î
.ööÎ Ï.
IdCentroDeAtencionSeleccionadoööÏ ä
,ööä ã
idMonedaööå î
,ööî ï
tipoDeCambioööñ ¢
,öö¢ £
nullöö§ ®
,öö® ©
	idTerceroöö™ ≥
)öö≥ ¥
{
õõ 
Comprobante
ùù 
=
ùù  ! 
GenerarComprobante
ùù" 4
(
ùù4 5
esPropio
ùù5 =
,
ùù= > 
idSerieComprobante
ùù? Q
,
ùùQ R
idTipoComprobante
ùùS d
,
ùùd e 
serieDeComprobante
ùùf x
,
ùùx y"
numeroDeComprobanteùùz ç
)ùùç é
}
ûû 
;
ûû 
guiaRemision
†† 
.
†† 
AgregarDetalles
†† ,
(
††, -
detalles
††- 5
)
††5 6
;
††6 7
guiaRemision
¢¢ 
=
¢¢ +
ResolverParametrosTransaccion
¢¢ <
(
¢¢< =
guiaRemision
¢¢= I
,
¢¢I J#
fechaInicioTransporte
¢¢K `
,
¢¢` a
idTransportista
¢¢b q
,
¢¢q r
placaTransporte¢¢s Ç
,¢¢Ç É
idConductor¢¢Ñ è
,¢¢è ê(
numeroLicenciaTransporte¢¢ë ©
,¢¢© ™&
idModalidadTransaporte¢¢´ ¡
,¢¢¡ ¬#
idMotivoTransaporte¢¢√ ÷
,¢¢÷ ◊!
descripcionMotivo¢¢ÿ È
,¢¢È Í
pesoBrutoTotal¢¢Î ˘
,¢¢˘ ˙
numeroBultos¢¢˚ á
,¢¢á à'
direccionOrigenTraslado¢¢â †
,¢¢† °&
idUbigeoOrigenTraslado¢¢¢ ∏
,¢¢∏ π(
direccionDestinoTraslado¢¢∫ “
,¢¢“ ”'
idUbigeoDestinoTraslado¢¢‘ Î
,¢¢Î Ï%
comprobanteReferencia¢¢Ì Ç
)¢¢Ç É
;¢¢É Ñ 
Estado_transaccion
§§ ""
estadoDeGuiaRemision
§§# 7
=
§§8 9
new
§§: = 
Estado_transaccion
§§> P
(
§§P Q
sesionUsuario
§§Q ^
.
§§^ _
Empleado
§§_ g
.
§§g h
Id
§§h j
,
§§j k
MaestroSettings
§§l {
.
§§{ |
Default§§| É
.§§É Ñ0
 IdDetalleMaestroEstadoConfirmado§§Ñ §
,§§§ •
fechaActual§§¶ ±
,§§± ≤
$str§§≥ ⁄
)§§⁄ €
;§§€ ‹
guiaRemision
•• 
.
••  
Estado_transaccion
•• /
.
••/ 0
Add
••0 3
(
••3 4"
estadoDeGuiaRemision
••4 H
)
••H I
;
••I J
return
ßß $
transaccionRepositorio
ßß -
.
ßß- .
CrearTransaccion
ßß. >
(
ßß> ?
guiaRemision
ßß? K
)
ßßK L
;
ßßL M
}
®® 
catch
©© 
(
©© 
	Exception
©© 
e
©© 
)
©© 
{
™™ 
throw
´´ 
new
´´ 
LogicaException
´´ )
(
´´) *
$str
´´* Y
,
´´Y Z
e
´´[ \
)
´´\ ]
;
´´] ^
}
¨¨ 
}
≠≠ 	
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ 
List
ÆÆ 
<
ÆÆ .
 TipoDeComprobanteParaTransaccion
ÆÆ ?
>
ÆÆ? @
>
ÆÆ@ A7
)ObtenerTiposDeComprobanteParaGuiaRemision
ÆÆB k
(
ÆÆk l
int
ÆÆl o

idEmpleado
ÆÆp z
,
ÆÆz {
int
ÆÆ|  
idCentroAtencionÆÆÄ ê
)ÆÆê ë
{
ØØ 	
try
∞∞ 
{
±± 
var
≤≤ 
	resultado
≤≤ 
=
≤≤ 
await
≤≤  %$
transaccionRepositorio
≤≤& <
.
≤≤< =8
*ObtenerTipoComprobantePorTipoDeTransaccion
≤≤= g
(
≤≤g h!
TransaccionSettings
≤≤h {
.
≤≤{ |
Default≤≤| É
.≤≤É Ñ<
,IdTipoTransaccionGuiaRemisionPorOtrosMotivos≤≤Ñ ∞
)≤≤∞ ±
;≤≤± ≤
foreach
≥≥ 
(
≥≥ 
var
≥≥ 
tipo
≥≥ !
in
≥≥" $
	resultado
≥≥% .
)
≥≥. /
{
¥¥ 
tipo
µµ 
.
µµ 
Detalle_maestro
µµ (
.
µµ( )
Serie_comprobante
µµ) :
=
µµ; <
tipo
µµ= A
.
µµA B
Detalle_maestro
µµB Q
.
µµQ R
Serie_comprobante
µµR c
.
µµc d
Where
µµd i
(
µµi j
sc
µµj l
=>
µµm o
sc
µµp r
.
µµr s
id_propietarioµµs Å
==µµÇ Ñ 
idCentroAtencionµµÖ ï
&&µµñ ò
scµµô õ
.µµõ ú

es_vigenteµµú ¶
)µµ¶ ß
.µµß ®
ToListµµ® Æ
(µµÆ Ø
)µµØ ∞
;µµ∞ ±
}
∂∂ 
return
∑∑ .
 TipoDeComprobanteParaTransaccion
∑∑ 7
.
∑∑7 8
Convert
∑∑8 ?
(
∑∑? @
	resultado
∑∑@ I
.
∑∑I J
ToList
∑∑J P
(
∑∑P Q
)
∑∑Q R
)
∑∑R S
;
∑∑S T
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* t
,
ªªt u
e
ªªv w
)
ªªw x
;
ªªx y
}
ºº 
}
ΩΩ 	
public
øø 
List
øø 
<
øø .
 TipoDeComprobanteParaTransaccion
øø 4
>
øø4 5>
0ObtenerTiposDeComprobanteGuiaRemisionNotaAlmacen
øø6 f
(
øøf g
int
øøg j

idEmpleado
øøk u
,
øøu v
int
øøw z
idCentroAtencionøø{ ã
)øøã å
{
¿¿ 	
try
¡¡ 
{
¬¬ 
int
√√ 
[
√√ 
]
√√  
idsTipoComprobante
√√ (
=
√√) *
new
√√+ .
int
√√/ 2
[
√√2 3
]
√√3 4
{
√√5 6
MaestroSettings
√√7 F
.
√√F G
Default
√√G N
.
√√N OA
2IdDetalleMaestroComprobanteGuiaDeRemisionRemitente√√O Å
,√√Å Ç
MaestroSettings√√É í
.√√í ì
Default√√ì ö
.√√ö õ=
-IdDetalleMaestroComprobanteNotaAlmacenInterna√√õ »
}√√…  
;√√  À
var
ƒƒ 
	resultado
ƒƒ 
=
ƒƒ $
transaccionRepositorio
ƒƒ  6
.
ƒƒ6 78
*ObtenerTipoComprobantePorTipoDeComprobante
ƒƒ7 a
(
ƒƒa b 
idsTipoComprobante
ƒƒb t
)
ƒƒt u
.
ƒƒu v
GroupBy
ƒƒv }
(
ƒƒ} ~
r
ƒƒ~ 
=>ƒƒÄ Ç
newƒƒÉ Ü
{ƒƒá à
rƒƒâ ä
.ƒƒä ã#
id_tipo_comprobanteƒƒã û
,ƒƒû ü
rƒƒ† °
.ƒƒ° ¢
	es_propioƒƒ¢ ´
}ƒƒ¨ ≠
)ƒƒ≠ Æ
.ƒƒÆ Ø
SelectƒƒØ µ
(ƒƒµ ∂
rƒƒ∂ ∑
=>ƒƒ∏ ∫
rƒƒª º
.ƒƒº Ω
FirstOrDefaultƒƒΩ À
(ƒƒÀ Ã
)ƒƒÃ Õ
)ƒƒÕ Œ
.
≈≈ 
ToList
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
foreach
∆∆ 
(
∆∆ 
var
∆∆ 
tipo
∆∆ !
in
∆∆" $
	resultado
∆∆% .
)
∆∆. /
{
«« 
tipo
»» 
.
»» 
Detalle_maestro
»» (
.
»»( )
Serie_comprobante
»») :
=
»»; <
tipo
»»= A
.
»»A B
Detalle_maestro
»»B Q
.
»»Q R
Serie_comprobante
»»R c
.
»»c d
Where
»»d i
(
»»i j
sc
»»j l
=>
»»m o
sc
»»p r
.
»»r s
id_propietario»»s Å
==»»Ç Ñ 
idCentroAtencion»»Ö ï
&&»»ñ ò
sc»»ô õ
.»»õ ú

es_vigente»»ú ¶
)»»¶ ß
.»»ß ®
ToList»»® Æ
(»»Æ Ø
)»»Ø ∞
;»»∞ ±
}
…… 
return
   .
 TipoDeComprobanteParaTransaccion
   7
.
  7 8
Convert
  8 ?
(
  ? @
	resultado
  @ I
.
  I J
ToList
  J P
(
  P Q
)
  Q R
)
  R S
;
  S T
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ 
LogicaException
ŒŒ )
(
ŒŒ) *
$str
ŒŒ* t
,
ŒŒt u
e
ŒŒv w
)
ŒŒw x
;
ŒŒx y
}
œœ 
}
–– 	
public
—— 
OperationResult
—— #
InvalidarGuiaRemision
—— 4
(
——4 5
long
——5 9
idGuiaRemision
——: H
,
——H I
int
——J M

idEmpleado
——N X
,
——X Y
int
——Z ]
idCentroAtencion
——^ n
,
——n o
string
——p v
observacion——w Ç
)——Ç É
{
““ 	
try
”” 
{
‘‘ !
MovimientoDeAlmacen
’’ #
guiaRemision
’’$ 0
=
’’1 2
new
’’3 6!
MovimientoDeAlmacen
’’7 J
(
’’J K$
transaccionRepositorio
’’K a
.
’’a b 
ObtenerTransaccion
’’b t
(
’’t u
idGuiaRemision’’u É
)’’É Ñ
)’’Ñ Ö
;’’Ö Ü
int
◊◊ 
idUnidadNegocio
◊◊ #
=
◊◊$ %
MaestroSettings
◊◊& 5
.
◊◊5 6
Default
◊◊6 =
.
◊◊= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
◊◊> h
;
◊◊h i
DateTime
ÿÿ 
fechaRegistro
ÿÿ &
=
ÿÿ' (
DateTimeUtil
ÿÿ) 5
.
ÿÿ5 6
FechaActual
ÿÿ6 A
(
ÿÿA B
)
ÿÿB C
;
ÿÿC D
permisos_Logica
⁄⁄ 
.
⁄⁄  
ValidarAccion
⁄⁄  -
(
⁄⁄- .

idEmpleado
⁄⁄. 8
,
⁄⁄8 9
MaestroSettings
⁄⁄: I
.
⁄⁄I J
Default
⁄⁄J Q
.
⁄⁄Q R-
IdDetalleMaestroAccionInvalidar
⁄⁄R q
,
⁄⁄q r
guiaRemision
⁄⁄s 
.⁄⁄ Ä!
IdTipoTransaccion⁄⁄Ä ë
,⁄⁄ë í
idUnidadNegocio⁄⁄ì ¢
)⁄⁄¢ £
;⁄⁄£ § 
Estado_transaccion
‹‹ "$
estadoDeLaOrdenDeGasto
‹‹# 9
=
‹‹: ;
new
‹‹< ? 
Estado_transaccion
‹‹@ R
(
‹‹R S
idGuiaRemision
‹‹S a
,
‹‹a b

idEmpleado
‹‹c m
,
‹‹m n
MaestroSettings
‹‹o ~
.
‹‹~ 
Default‹‹ Ü
.‹‹Ü á0
 IdDetalleMaestroEstadoInvalidado‹‹á ß
,‹‹ß ®
fechaRegistro‹‹© ∂
,‹‹∂ ∑
observacion‹‹∏ √
)‹‹√ ƒ
;‹‹ƒ ≈
return
ﬁﬁ $
transaccionRepositorio
ﬁﬁ -
.
ﬁﬁ- .5
'CrearTransaccionYCrearEstadoTransaccion
ﬁﬁ. U
(
ﬁﬁU V
null
ﬁﬁV Z
,
ﬁﬁZ [$
estadoDeLaOrdenDeGasto
ﬁﬁ\ r
)
ﬁﬁr s
;
ﬁﬁs t
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
·· 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ )
(
‚‚) *
$str
‚‚* N
,
‚‚N O
e
‚‚P Q
)
‚‚Q R
;
‚‚R S
}
„„ 
}
‰‰ 	
}
ÁÁ 
}ËË πø
QD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\Almacen\AlmacenReporte_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 
Core "
." #
Almacen# *
{ 
public 

class !
AlmacenReporte_Logica &
:' ("
IAlmacenReporte_Logica) ?
{ 
	protected 
readonly '
IInventarioHistorico_Logica 6&
_inventarioHistoricoLogica7 Q
;Q R
	protected 
readonly "
IInventarioRepositorio 1"
_almacenReportingDatos2 H
;H I
	protected 
readonly ,
 IInventarioHistorico_Repositorio ;%
_inventarioHistoricoDatos< U
;U V
	protected 
readonly $
IMovimientos_Repositorio 3
_movimientosDatos4 E
;E F
	protected 
readonly (
IInventarioActualRepositorio 7"
_inventarioActualDatos8 N
;N O
	protected 
readonly (
IMaestrosAlmacen_Repositorio 7!
_maestrosAlmacenDatos8 M
;M N
	protected 
readonly ,
 IConsultaTransaccion_Repositorio ;%
_consultaTransaccionDatos< U
;U V
	protected 
readonly #
IEstablecimiento_Logica 2"
_establecimientoLogica3 I
;I J
public## !
AlmacenReporte_Logica## $
(##$ %"
IInventarioRepositorio##% ;!
almacenReportingDatos##< Q
,##Q R,
 IInventarioHistorico_Repositorio##S s%
inventarioHistoricoDatos	##t å
,
##å ç)
IInventarioHistorico_Logica
##é ©'
inventarioHistoricoLogica
##™ √
,
##√ ƒ&
IMovimientos_Repositorio
##≈ ›
movimientosDatos
##ﬁ Ó
,
##Ó Ô*
IInventarioActualRepositorio
## å#
inventarioActualDatos
##ç ¢
,
##¢ £*
IMaestrosAlmacen_Repositorio
##§ ¿"
maestrosAlmacenDatos
##¡ ’
,
##’ ÷.
 IConsultaTransaccion_Repositorio
##◊ ˜&
consultaTransaccionDatos
##¯ ê
,
##ê ë%
IEstablecimiento_Logica
##í ©#
establecimientoLogica
##™ ø
)
##ø ¿
{$$ 	&
_inventarioHistoricoLogica%% &
=%%' (%
inventarioHistoricoLogica%%) B
;%%B C"
_almacenReportingDatos&& "
=&&# $!
almacenReportingDatos&&% :
;&&: ;%
_inventarioHistoricoDatos'' %
=''& '$
inventarioHistoricoDatos''( @
;''@ A
_movimientosDatos(( 
=(( 
movimientosDatos((  0
;((0 1"
_inventarioActualDatos)) "
=))# $!
inventarioActualDatos))% :
;)): ;!
_maestrosAlmacenDatos** !
=**" # 
maestrosAlmacenDatos**$ 8
;**8 9%
_consultaTransaccionDatos++ %
=++& '$
consultaTransaccionDatos++( @
;++@ A"
_establecimientoLogica,, "
=,,# $!
establecimientoLogica,,% :
;,,: ;
}-- 	
public11 
PrincipalReportData11 ",
 ObtenerDatosParaReportePrincipal11# C
(11C D"
UserProfileSessionData11D Z
profileData11[ f
)11f g
{22 	
var33 *
TieneRolAdministradorDeNegocio33 .
=33/ 0
profileData331 <
.33< =
Empleado33= E
.33E F
TieneRol33F N
(33N O
ActorSettings33O \
.33\ ]
Default33] d
.33d e(
idRolAdministradorDeNegocio	33e Ä
)
33Ä Å
;
33Å Ç
if44 
(44 
profileData44 
.44 (
CentroDeAtencionSeleccionado44 8
==449 ;
null44< @
&&44A C
!44D E*
TieneRolAdministradorDeNegocio44E c
)44c d
{55 
throw66 
new66 
LogicaException66 )
(66) *
$str66* j
)66j k
;66k l
}77 
var88 (
establecimientosConAlmacenes88 ,
=88- .*
TieneRolAdministradorDeNegocio88/ M
?88N O
Establecimiento88P _
.88_ `
Convert88` g
(88g h"
_establecimientoLogica88h ~
.88~ F
9ObtenerEstablecimientosComercialesVigentesConSusAlmacenes	88 ∏
(
88∏ π
)
88π ∫
.
88∫ ª
ToList
88ª ¡
(
88¡ ¬
)
88¬ √
)
88√ ƒ
:
88≈ ∆
null
88« À
;
88À Ã
var:: 
data:: 
=:: 
new:: 
PrincipalReportData:: .
(::. /
)::/ 0
{;; 
FechaActual_<< 
=<< 
DateTimeUtil<< +
.<<+ ,
FechaActual<<, 7
(<<7 8
)<<8 9
,<<9 :
EsAdministrador== 
===  !*
TieneRolAdministradorDeNegocio==" @
,==@ A
Establecimientos>>  
=>>! "*
TieneRolAdministradorDeNegocio>># A
?>>B C(
establecimientosConAlmacenes>>D `
:>>a b
new>>c f
List>>g k
<>>k l
Establecimiento>>l {
>>>{ |
(>>| }
)>>} ~
{	>> Ä
profileData
>>Å å
.
>>å ç2
$EstablecimientoComercialSeleccionado
>>ç ±
.
>>± ≤
ToEstablecimiento
>>≤ √
(
>>√ ƒ
)
>>ƒ ≈
}
>>∆ «
,
>>« »
	Almacenes?? 
=?? *
TieneRolAdministradorDeNegocio?? :
???; <(
establecimientosConAlmacenes??= Y
.??Y Z

SelectMany??Z d
(??d e
e??e f
=>??g i
e??j k
.??k l
CentrosAtencion??l {
)??{ |
.??| }
ToList	??} É
(
??É Ñ
)
??Ñ Ö
:
??Ü á
new
??à ã
List
??å ê
<
??ê ë
ItemGenerico
??ë ù
>
??ù û
(
??û ü
)
??ü †
{
??° ¢
profileData
??£ Æ
.
??Æ Ø*
CentroDeAtencionSeleccionado
??Ø À
.
??À Ã
ToItemGenerico
??Ã ⁄
(
??⁄ €
)
??€ ‹
}
??› ﬁ
,
??ﬁ ﬂ
Familias@@ 
=@@ !
_maestrosAlmacenDatos@@ 0
.@@0 1!
ObtenerFamiliasBienes@@1 F
(@@F G
)@@G H
.@@H I
ToList@@I O
(@@O P
)@@P Q
.@@Q R
OrderBy@@R Y
(@@Y Z
f@@Z [
=>@@\ ^
f@@_ `
.@@` a
Nombre@@a g
)@@g h
.@@h i
ToList@@i o
(@@o p
)@@p q
,@@q r
	ConceptosAA 
=AA !
_maestrosAlmacenDatosAA 1
.AA1 29
-ObtenerConceptosNegocioComercializablesBienesAA2 _
(AA_ `
)AA` a
.AAa b
ToListAAb h
(AAh i
)AAi j
.AAj k
OrderByAAk r
(AAr s
cAAs t
=>AAu w
cAAx y
.AAy z
Nombre	AAz Ä
)
AAÄ Å
.
AAÅ Ç
ToList
AAÇ à
(
AAà â
)
AAâ ä
}BB 
;BB 
ifCC 
(CC 
!CC *
TieneRolAdministradorDeNegocioCC /
)CC/ 0
dataCC1 5
.CC5 6
EstablecimientosCC6 F
.CCF G
SingleOrDefaultCCG V
(CCV W
)CCW X
.CCX Y
CentrosAtencionCCY h
=CCi j
newCCk n
ListCCo s
<CCs t
ItemGenerico	CCt Ä
>
CCÄ Å
(
CCÅ Ç
)
CCÇ É
{
CCÑ Ö
profileData
CCÜ ë
.
CCë í*
CentroDeAtencionSeleccionado
CCí Æ
.
CCÆ Ø
ToItemGenerico
CCØ Ω
(
CCΩ æ
)
CCæ ø
}
CC¿ ¡
;
CC¡ ¬
returnDD 
dataDD 
;DD 
}EE 	
publicFF 
InventarioFisicoFF %
InventarioFisicoHistoricoFF  9
(FF9 :
intFF: =
	idAlmacenFF> G
,FFG H
DateTimeFFI Q
fechaFFR W
,FFW X
intFFY \

idConceptoFF] g
)FFg h
{GG 	
tryHH 
{II 
InventarioFisicoJJ  

inventarioJJ! +
=JJ, -
newJJ. 1
InventarioFisicoJJ2 B
(JJB C
)JJC D
{JJE F
FechaJJG L
=JJM N
fechaJJO T
}JJU V
;JJV W
DateTimeKK 
?KK #
fechaPrimeraTransaccionKK 1
=KK2 3
(KK4 5
DateTimeKK5 =
)KK= >
fechaKK> C
;KKC D
InventarioFisicoMM  
ultimoInventarioMM! 1
=MM2 3%
_inventarioHistoricoDatosMM4 M
.MMM N;
/ObtenerUltimoInventarioFisicoHistoricoAnteriorAMMN }
(MM} ~
	idAlmacen	MM~ á
,
MMá à

idConcepto
MMâ ì
,
MMì î
fecha
MMï ö
)
MMö õ
;
MMõ ú
ifOO 
(OO 
ultimoInventarioOO $
==OO% '
nullOO( ,
)OO, -
{PP #
fechaPrimeraTransaccionQQ +
=QQ, -%
_consultaTransaccionDatosQQ. G
.QQG H*
ObtenerFechaPrimeraTransaccionQQH f
(QQf g
	idAlmacenQQg p
)QQp q
;QQq r
}RR 
varTT 

fechaDesdeTT 
=TT  
ultimoInventarioTT! 1
!=TT2 4
nullTT5 9
?TT: ;
ultimoInventarioTT< L
.TTL M
FechaTTM R
.TTR S
AddMillisecondsTTS b
(TTb c
$numTTc d
)TTd e
:TTf g#
fechaPrimeraTransaccionTTh 
!=
TTÄ Ç
null
TTÉ á
?
TTà â
(
TTä ã
DateTime
TTã ì
)
TTì î%
fechaPrimeraTransaccion
TTî ´
:
TT¨ ≠
fecha
TTÆ ≥
;
TT≥ ¥
varVV 
_fechaHastaVV 
=VV  !
fechaVV" '
;VV' (>
2Movimientos_concepto_negocio_actor_negocio_internoXX B
movimientosXXC N
=XXO P
_movimientosDatosXXQ b
.XXb c0
#ObtenerMovimientosDeConceptoNegocio	XXc Ü
(
XXÜ á
	idAlmacen
XXá ê
,
XXê ë

idConcepto
XXí ú
,
XXú ù

fechaDesde
XXû ®
,
XX® ©
_fechaHasta
XX™ µ
)
XXµ ∂
;
XX∂ ∑

inventarioYY 
.YY 
	IdAlmacenYY $
=YY% &
	idAlmacenYY' 0
;YY0 1

inventarioZZ 
.ZZ 

IdConceptoZZ %
=ZZ& '

idConceptoZZ( 2
;ZZ2 3

inventario[[ 
.[[ 
Cantidad[[ #
=[[$ %
([[& '
ultimoInventario[[' 7
!=[[8 :
null[[; ?
?[[@ A
ultimoInventario[[B R
.[[R S
Cantidad[[S [
:[[\ ]
$num[[^ _
)[[_ `
+[[a b
([[c d
movimientos[[d o
!=[[p r
null[[s w
?[[x y
movimientos	[[z Ö
.
[[Ö Ü 
Entradas_principal
[[Ü ò
-
[[ô ö
movimientos
[[õ ¶
.
[[¶ ß
Salidas_principal
[[ß ∏
:
[[π ∫
$num
[[ª º
)
[[º Ω
;
[[Ω æ
return\\ 

inventario\\ !
;\\! "
}]] 
catch^^ 
(^^ 
	Exception^^ 
e^^ 
)^^ 
{__ 
throw`` 
new`` 
LogicaException`` )
(``) *
$str``* G
+``H I
$str``J O
+``P Q
e``R S
.``S T
Message``T [
,``[ \
e``] ^
)``^ _
;``_ `
}aa 
}bb 	
publiccc 
Listcc 
<cc 
InventarioFisicocc $
>cc$ %,
 ObtenerInventarioFisicoHistoricocc& F
(ccF G
intccG J
	idAlmacenccK T
,ccT U
intccV Y

idEmpleadoccZ d
,ccd e
DateTimeccf n

fechaHastacco y
,ccy z
boolcc{ 
todasLasFamilias
ccÄ ê
,
ccê ë
int
ccí ï
[
ccï ñ
]
ccñ ó
idsFamilias
ccò £
)
cc£ §
{dd 	
tryee 
{ff 
Listgg 
<gg 
InventarioFisicogg %
>gg% &

inventariogg' 1
=gg2 3
newgg4 7
Listgg8 <
<gg< =
InventarioFisicogg= M
>ggM N
(ggN O
)ggO P
;ggP Q
idsFamiliashh 
=hh 
todasLasFamiliashh .
?hh/ 0!
_maestrosAlmacenDatoshh1 F
.hhF G!
ObtenerFamiliasBieneshhG \
(hh\ ]
)hh] ^
.hh^ _
Selecthh_ e
(hhe f
fhhf g
=>hhh j
fhhk l
.hhl m
Idhhm o
)hho p
.hhp q
ToArrayhhq x
(hhx y
)hhy z
:hh{ |
idsFamilias	hh} à
;
hhà â

inventarioii 
=ii &
_inventarioHistoricoLogicaii 7
.ii7 8%
ObtenerInventariosFisicosii8 Q
(iiQ R
	idAlmaceniiR [
,ii[ \

idEmpleadoii] g
,iig h

fechaHastaiii s
,iis t
idsFamilias	iiu Ä
)
iiÄ Å
.
iiÅ Ç
ToList
iiÇ à
(
iià â
)
iiâ ä
;
iiä ã
returnkk 

inventariokk !
;kk! "
}ll 
catchmm 
(mm 
	Exceptionmm 
emm 
)mm 
{nn 
throwoo 
newoo 
LogicaExceptionoo )
(oo) *
$stroo* G
+ooH I
$strooJ O
+ooP Q
eooR S
.ooS T
MessageooT [
,oo[ \
eoo] ^
)oo^ _
;oo_ `
}pp 
}qq 	
publicss  
InventarioValorizadoss #0
$ObtenerInventarioValorizadoHistoricoss$ H
(ssH I
intssI L
	idAlmacenssM V
,ssV W
intssX [

idEmpleadoss\ f
,ssf g
DateTimessh p
fechassq v
,ssv w
intssx {

idConcepto	ss| Ü
)
ssÜ á
{tt 	
tryuu 
{vv  
InventarioValorizadoww $

inventarioww% /
=ww0 1
newww2 5 
InventarioValorizadoww6 J
(wwJ K
)wwK L
{wwM N
FechawwO T
=wwU V
fechawwW \
}ww] ^
;ww^ _
DateTimexx 
?xx #
fechaPrimeraTransaccionxx 1
=xx2 3
(xx4 5
DateTimexx5 =
)xx= >
fechaxx> C
;xxC D 
InventarioValorizadozz $
ultimoInventariozz% 5
=zz6 7%
_inventarioHistoricoDatoszz8 Q
.zzQ R@
3ObtenerUltimoInventarioValorizadoHistoricoAnteriorA	zzR Ö
(
zzÖ Ü
	idAlmacen
zzÜ è
,
zzè ê

idConcepto
zzë õ
,
zzõ ú
fecha
zzù ¢
)
zz¢ £
;
zz£ §
if|| 
(|| 
ultimoInventario|| $
==||% '
null||( ,
)||, -
{}} #
fechaPrimeraTransaccion~~ +
=~~, -%
_consultaTransaccionDatos~~. G
.~~G H*
ObtenerFechaPrimeraTransaccion~~H f
(~~f g
	idAlmacen~~g p
)~~p q
;~~q r
} 
var
ÅÅ 

fechaDesde
ÅÅ 
=
ÅÅ  
ultimoInventario
ÅÅ! 1
!=
ÅÅ2 4
null
ÅÅ5 9
?
ÅÅ: ;
ultimoInventario
ÅÅ< L
.
ÅÅL M
Fecha
ÅÅM R
.
ÅÅR S
AddMilliseconds
ÅÅS b
(
ÅÅb c
$num
ÅÅc d
)
ÅÅd e
:
ÅÅf g%
fechaPrimeraTransaccion
ÅÅh 
!=ÅÅÄ Ç
nullÅÅÉ á
?ÅÅà â
(ÅÅä ã
DateTimeÅÅã ì
)ÅÅì î'
fechaPrimeraTransaccionÅÅî ´
:ÅÅ¨ ≠
fechaÅÅÆ ≥
;ÅÅ≥ ¥
var
ÉÉ 
_fechaHasta
ÉÉ 
=
ÉÉ  !
fecha
ÉÉ" '
;
ÉÉ' (@
2Movimientos_concepto_negocio_actor_negocio_interno
ÖÖ B
movimientos
ÖÖC N
=
ÖÖO P
_movimientosDatos
ÖÖQ b
.
ÖÖb c2
#ObtenerMovimientosDeConceptoNegocioÖÖc Ü
(ÖÖÜ á
	idAlmacenÖÖá ê
,ÖÖê ë

idConceptoÖÖí ú
,ÖÖú ù

fechaDesdeÖÖû ®
,ÖÖ® ©
_fechaHastaÖÖ™ µ
)ÖÖµ ∂
;ÖÖ∂ ∑

inventario
ÜÜ 
.
ÜÜ 
	IdAlmacen
ÜÜ $
=
ÜÜ% &
	idAlmacen
ÜÜ' 0
;
ÜÜ0 1

inventario
áá 
.
áá 

IdConcepto
áá %
=
áá& '

idConcepto
áá( 2
;
áá2 3

inventario
àà 
.
àà 
Cantidad
àà #
=
àà$ %
(
àà& '
ultimoInventario
àà' 7
!=
àà8 :
null
àà; ?
?
àà@ A
ultimoInventario
ààB R
.
ààR S
Cantidad
ààS [
:
àà\ ]
$num
àà^ _
)
àà_ `
+
ààa b
(
ààc d
movimientos
ààd o
!=
ààp r
null
ààs w
?
ààx y
movimientosààz Ö
.ààÖ Ü"
Entradas_principalààÜ ò
-ààô ö
movimientosààõ ¶
.àà¶ ß!
Salidas_principalààß ∏
:ààπ ∫
$numààª º
)ààº Ω
;ààΩ æ

inventario
ââ 
.
ââ 

ValorTotal
ââ %
=
ââ& '
(
ââ( )
ultimoInventario
ââ) 9
!=
ââ: <
null
ââ= A
?
ââB C
ultimoInventario
ââD T
.
ââT U

ValorTotal
ââU _
:
ââ` a
$num
ââb c
)
ââc d
+
ââe f
(
ââg h
movimientos
ââh s
!=
âât v
null
ââw {
?
ââ| }
movimientosââ~ â
.âââ ä
Totalââä è
:ââê ë
$numââí ì
)ââì î
;ââî ï

inventario
ää 
.
ää 
ValorUnitario
ää (
=
ää) *

inventario
ää+ 5
.
ää5 6
Cantidad
ää6 >
!=
ää? A
$num
ääB C
?
ääD E

inventario
ääF P
.
ääP Q

ValorTotal
ääQ [
/
ää\ ]

inventario
ää^ h
.
ääh i
Cantidad
ääi q
:
äär s
$num
äät u
;
ääu v
return
ãã 

inventario
ãã !
;
ãã! "
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* G
+
èèH I
$str
èèJ O
+
èèP Q
e
èèR S
.
èèS T
Message
èèT [
,
èè[ \
e
èè] ^
)
èè^ _
;
èè_ `
}
êê 
}
ëë 	
public
íí 
List
íí 
<
íí "
InventarioValorizado
íí (
>
íí( )+
InventarioValorizadoHistorico
íí* G
(
ííG H
int
ííH K
	idAlmacen
ííL U
,
ííU V
int
ííW Z

idEmpleado
íí[ e
,
ííe f
DateTime
ííg o

fechaHasta
ííp z
,
ííz {
boolíí| Ä 
todasLasFamiliasííÅ ë
,ííë í
intííì ñ
[ííñ ó
]ííó ò
idsFamiliasííô §
)íí§ •
{
ìì 	
try
îî 
{
ïï 
List
ññ 
<
ññ "
InventarioValorizado
ññ )
>
ññ) *

inventario
ññ+ 5
=
ññ6 7
new
ññ8 ;
List
ññ< @
<
ññ@ A"
InventarioValorizado
ññA U
>
ññU V
(
ññV W
)
ññW X
;
ññX Y
idsFamilias
óó 
=
óó 
todasLasFamilias
óó .
?
óó/ 0#
_maestrosAlmacenDatos
óó1 F
.
óóF G#
ObtenerFamiliasBienes
óóG \
(
óó\ ]
)
óó] ^
.
óó^ _
Select
óó_ e
(
óóe f
f
óóf g
=>
óóh j
f
óók l
.
óól m
Id
óóm o
)
óóo p
.
óóp q
ToArray
óóq x
(
óóx y
)
óóy z
:
óó{ |
idsFamiliasóó} à
;óóà â

inventario
òò 
=
òò (
_inventarioHistoricoLogica
òò 7
.
òò7 8+
ObtenerInventariosValorizados
òò8 U
(
òòU V

idEmpleado
òòV `
,
òò` a
	idAlmacen
òòb k
,
òòk l

fechaHasta
òòm w
,
òòw x
idsFamiliasòòy Ñ
)òòÑ Ö
.òòÖ Ü
ToListòòÜ å
(òòå ç
)òòç é
;òòé è
return
öö 

inventario
öö !
;
öö! "
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
ùù 
throw
ûû 
new
ûû 
LogicaException
ûû )
(
ûû) *
$str
ûû* G
+
ûûH I
$str
ûûJ O
+
ûûP Q
e
ûûR S
.
ûûS T
Message
ûûT [
,
ûû[ \
e
ûû] ^
)
ûû^ _
;
ûû_ `
}
üü 
}
†† 	
public
££ 
List
££ 
<
££ 
EntradaAlmacen
££ "
>
££" #
Entradas
££$ ,
(
££, -
int
££- 0
	idAlmacen
££1 :
,
££: ;
DateTime
££< D

fechaDesde
££E O
,
££O P
DateTime
££Q Y

fechaHasta
££Z d
,
££d e
bool
££f j
todasLasFamilias
££k {
,
££{ |
int££} Ä
[££Ä Å
]££Å Ç
idsFamilias££É é
)££é è
{
§§ 	
try
•• 
{
¶¶ 
idsFamilias
ßß 
=
ßß 
todasLasFamilias
ßß .
?
ßß/ 0#
_maestrosAlmacenDatos
ßß1 F
.
ßßF G#
ObtenerFamiliasBienes
ßßG \
(
ßß\ ]
)
ßß] ^
.
ßß^ _
Select
ßß_ e
(
ßße f
f
ßßf g
=>
ßßh j
f
ßßk l
.
ßßl m
Id
ßßm o
)
ßßo p
.
ßßp q
ToArray
ßßq x
(
ßßx y
)
ßßy z
:
ßß{ |
idsFamiliasßß} à
;ßßà â
List
®® 
<
®® 
EntradaAlmacen
®® #
>
®®# $
entradas
®®% -
=
®®. /
_movimientosDatos
®®0 A
.
®®A B
ObtenerEntradas
®®B Q
(
®®Q R
	idAlmacen
®®R [
,
®®[ \

fechaDesde
®®] g
,
®®g h

fechaHasta
®®i s
,
®®s t
idsFamilias®®u Ä
)®®Ä Å
.®®Å Ç
ToList®®Ç à
(®®à â
)®®â ä
;®®ä ã
return
™™ 
entradas
™™ 
;
™™  
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
e
¨¨ 
)
¨¨ 
{
≠≠ 
throw
ÆÆ 
new
ÆÆ 
LogicaException
ÆÆ )
(
ÆÆ) *
$str
ÆÆ* N
,
ÆÆN O
e
ÆÆP Q
)
ÆÆQ R
;
ÆÆR S
}
ØØ 
}
±± 	
public
≤≤ 
List
≤≤ 
<
≤≤ 
SalidaAlmacen
≤≤ !
>
≤≤! "
Salidas
≤≤# *
(
≤≤* +
int
≤≤+ .
	idAlmacen
≤≤/ 8
,
≤≤8 9
DateTime
≤≤: B

fechaDesde
≤≤C M
,
≤≤M N
DateTime
≤≤O W

fechaHasta
≤≤X b
,
≤≤b c
bool
≤≤d h
todasLasFamilias
≤≤i y
,
≤≤y z
int
≤≤{ ~
[
≤≤~ 
]≤≤ Ä
idsFamilias≤≤Å å
)≤≤å ç
{
≥≥ 	
try
¥¥ 
{
µµ 
idsFamilias
∂∂ 
=
∂∂ 
todasLasFamilias
∂∂ .
?
∂∂/ 0#
_maestrosAlmacenDatos
∂∂1 F
.
∂∂F G#
ObtenerFamiliasBienes
∂∂G \
(
∂∂\ ]
)
∂∂] ^
.
∂∂^ _
Select
∂∂_ e
(
∂∂e f
f
∂∂f g
=>
∂∂h j
f
∂∂k l
.
∂∂l m
Id
∂∂m o
)
∂∂o p
.
∂∂p q
ToArray
∂∂q x
(
∂∂x y
)
∂∂y z
:
∂∂{ |
idsFamilias∂∂} à
;∂∂à â
List
∑∑ 
<
∑∑ 
SalidaAlmacen
∑∑ "
>
∑∑" #
salidas
∑∑$ +
=
∑∑, -
_movimientosDatos
∑∑. ?
.
∑∑? @
ObtenerSalidas
∑∑@ N
(
∑∑N O
	idAlmacen
∑∑O X
,
∑∑X Y

fechaDesde
∑∑Z d
,
∑∑d e

fechaHasta
∑∑f p
,
∑∑p q
idsFamilias
∑∑r }
)
∑∑} ~
.
∑∑~ 
ToList∑∑ Ö
(∑∑Ö Ü
)∑∑Ü á
;∑∑á à
return
ππ 
salidas
ππ 
;
ππ 
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
e
ªª 
)
ªª 
{
ºº 
throw
ΩΩ 
new
ΩΩ 
LogicaException
ΩΩ )
(
ΩΩ) *
$str
ΩΩ* N
,
ΩΩN O
e
ΩΩP Q
)
ΩΩQ R
;
ΩΩR S
}
ææ 
}
¿¿ 	
public
¡¡ 
List
¡¡ 
<
¡¡ #
InventarioVencimiento
¡¡ )
>
¡¡) *
Vencimientos
¡¡+ 7
(
¡¡7 8
int
¡¡8 ;
	idAlmacen
¡¡< E
,
¡¡E F
DateTime
¡¡G O

fechaDesde
¡¡P Z
,
¡¡Z [
DateTime
¡¡\ d

fechaHasta
¡¡e o
,
¡¡o p
bool
¡¡q u
todasLasFamilias¡¡v Ü
,¡¡Ü á
int¡¡à ã
[¡¡ã å
]¡¡å ç
idsFamilias¡¡é ô
)¡¡ô ö
{
¬¬ 	
try
√√ 
{
ƒƒ 
List
≈≈ 
<
≈≈ #
InventarioVencimiento
≈≈ *
>
≈≈* +

inventario
≈≈, 6
=
≈≈7 8
new
≈≈9 <
List
≈≈= A
<
≈≈A B#
InventarioVencimiento
≈≈B W
>
≈≈W X
(
≈≈X Y
)
≈≈Y Z
;
≈≈Z [
var
∆∆  
gestionGlobalLotes
∆∆ &
=
∆∆' ( 
AplicacionSettings
∆∆) ;
.
∆∆; <
Default
∆∆< C
.
∆∆C D$
PermitirGestionDeLotes
∆∆D Z
;
∆∆Z [
idsFamilias
«« 
=
«« 
todasLasFamilias
«« .
?
««/ 0#
_maestrosAlmacenDatos
««1 F
.
««F G#
ObtenerFamiliasBienes
««G \
(
««\ ]
)
««] ^
.
««^ _
Select
««_ e
(
««e f
f
««f g
=>
««h j
f
««k l
.
««l m
Id
««m o
)
««o p
.
««p q
ToArray
««q x
(
««x y
)
««y z
:
««{ |
idsFamilias««} à
;««à â
if
»» 
(
»»  
gestionGlobalLotes
»» &
)
»»& '
{
…… 

inventario
   
=
    $
_inventarioActualDatos
  ! 7
.
  7 81
#ObtenerVencimientosInventarioActual
  8 [
(
  [ \
	idAlmacen
  \ e
,
  e f

fechaDesde
  g q
,
  q r

fechaHasta
  s }
,
  } ~
idsFamilias   ä
)  ä ã
.  ã å
ToList  å í
(  í ì
)  ì î
;  î ï
}
ÃÃ 
else
ÕÕ 
{
ŒŒ 
var
œœ "
vencimientosEntradas
œœ ,
=
œœ- .$
_almacenReportingDatos
œœ/ E
.
œœE F3
%ObtenerVencimientoConceptosIngresados
œœF k
(
œœk l
	idAlmacen
œœl u
,
œœu v

fechaDesdeœœw Å
,œœÅ Ç

fechaHastaœœÉ ç
,œœç é
idsFamiliasœœè ö
)œœö õ
.œœõ ú
ToListœœú ¢
(œœ¢ £
)œœ£ §
;œœ§ •
var
—— 
idsConceptos
—— $
=
——% &"
vencimientosEntradas
——' ;
.
——; <
Select
——< B
(
——B C
v
——C D
=>
——E G
v
——H I
.
——I J

IdConcepto
——J T
)
——T U
.
——U V
Distinct
——V ^
(
——^ _
)
——_ `
.
——` a
ToArray
——a h
(
——h i
)
——i j
;
——j k
var
““ 
inventarioActual
““ (
=
““) *$
_inventarioActualDatos
““+ A
.
““A B4
&ObtenerInventarioFisicoConceptosActual
““B h
(
““h i
	idAlmacen
““i r
,
““r s
idsConceptos““t Ä
)““Ä Å
;““Å Ç"
vencimientosEntradas
”” (
.
””( )
ForEach
””) 0
(
””0 1
ve
””1 3
=>
””4 6

inventario
””7 A
.
””A B
Add
””B E
(
””E F
new
””F I#
InventarioVencimiento
””J _
(
””_ `
)
””` a
{
‘‘ 
CodigoBarra
’’ #
=
’’$ %
ve
’’& (
.
’’( )
CodigoBarra
’’) 4
,
’’4 5
Concepto
÷÷  
=
÷÷! "
ve
÷÷# %
.
÷÷% &
Concepto
÷÷& .
,
÷÷. /
UnidadMedida
◊◊ $
=
◊◊% &
ve
◊◊' )
.
◊◊) *
UnidadMedida
◊◊* 6
,
◊◊6 7
Lote
ÿÿ 
=
ÿÿ 
ve
ÿÿ !
.
ÿÿ! "
Lote
ÿÿ" &
,
ÿÿ& '
Cantidad
ŸŸ  
=
ŸŸ! "
inventarioActual
ŸŸ# 3
.
ŸŸ3 4
Where
ŸŸ4 9
(
ŸŸ9 :
i
ŸŸ: ;
=>
ŸŸ< >
i
ŸŸ? @
.
ŸŸ@ A

IdConcepto
ŸŸA K
==
ŸŸL N
ve
ŸŸO Q
.
ŸŸQ R

IdConcepto
ŸŸR \
)
ŸŸ\ ]
.
ŸŸ] ^
Sum
ŸŸ^ a
(
ŸŸa b
dt
ŸŸb d
=>
ŸŸe g
dt
ŸŸh j
.
ŸŸj k
Cantidad
ŸŸk s
)
ŸŸs t
,
ŸŸt u
FechaVencimiento
⁄⁄ (
=
⁄⁄) *
ve
⁄⁄+ -
.
⁄⁄- .
FechaVencimiento
⁄⁄. >
,
⁄⁄> ?

IdConcepto
€€ "
=
€€# $
ve
€€% '
.
€€' (

IdConcepto
€€( 2
}
‹‹ 
)
‹‹ 
)
‹‹ 
;
‹‹ 
}
›› 
return
ﬁﬁ 

inventario
ﬁﬁ !
;
ﬁﬁ! "
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
·· 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ )
(
‚‚) *
$str
‚‚* `
,
‚‚` a
e
‚‚b c
)
‚‚c d
;
‚‚d e
}
„„ 
}
ÂÂ 	
public
ËË 
List
ËË 
<
ËË  
InventarioSemaforo
ËË &
>
ËË& ')
InventarioSemaforoHistorico
ËË( C
(
ËËC D
int
ËËD G
	idAlmacen
ËËH Q
,
ËËQ R
int
ËËS V

idEmpleado
ËËW a
,
ËËa b
DateTime
ËËc k

fechaHasta
ËËl v
,
ËËv w
bool
ËËx |
todasLasFamiliasËË} ç
,ËËç é
intËËè í
[ËËí ì
]ËËì î
idsFamiliasËËï †
,ËË† °
boolËË¢ ¶

estadoBajoËËß ±
,ËË± ≤
boolËË≥ ∑
estadoNormalËË∏ ƒ
,ËËƒ ≈
boolËË∆  

estadoAltoËËÀ ’
)ËË’ ÷
{
ÈÈ 	
List
ÍÍ 
<
ÍÍ 
int
ÍÍ 
>
ÍÍ 
nivelesRequeridos
ÍÍ '
=
ÍÍ( )
new
ÍÍ* -
List
ÍÍ. 2
<
ÍÍ2 3
int
ÍÍ3 6
>
ÍÍ6 7
(
ÍÍ7 8
)
ÍÍ8 9
;
ÍÍ9 :
nivelesRequeridos
ÎÎ 
.
ÎÎ 
Add
ÎÎ !
(
ÎÎ! "
(
ÎÎ" #
int
ÎÎ# &
)
ÎÎ& '$
NivelStockSemaforoEnum
ÎÎ' =
.
ÎÎ= >
Indeterminado
ÎÎ> K
)
ÎÎK L
;
ÎÎL M
if
ÏÏ 
(
ÏÏ 

estadoAlto
ÏÏ 
)
ÏÏ 
nivelesRequeridos
ÏÏ -
.
ÏÏ- .
Add
ÏÏ. 1
(
ÏÏ1 2
(
ÏÏ2 3
int
ÏÏ3 6
)
ÏÏ6 7$
NivelStockSemaforoEnum
ÏÏ7 M
.
ÏÏM N
Alto
ÏÏN R
)
ÏÏR S
;
ÏÏS T
if
ÌÌ 
(
ÌÌ 

estadoBajo
ÌÌ 
)
ÌÌ 
nivelesRequeridos
ÌÌ -
.
ÌÌ- .
Add
ÌÌ. 1
(
ÌÌ1 2
(
ÌÌ2 3
int
ÌÌ3 6
)
ÌÌ6 7$
NivelStockSemaforoEnum
ÌÌ7 M
.
ÌÌM N
Bajo
ÌÌN R
)
ÌÌR S
;
ÌÌS T
if
ÓÓ 
(
ÓÓ 
estadoNormal
ÓÓ 
)
ÓÓ 
nivelesRequeridos
ÓÓ /
.
ÓÓ/ 0
Add
ÓÓ0 3
(
ÓÓ3 4
(
ÓÓ4 5
int
ÓÓ5 8
)
ÓÓ8 9$
NivelStockSemaforoEnum
ÓÓ9 O
.
ÓÓO P
Normal
ÓÓP V
)
ÓÓV W
;
ÓÓW X
try
ÔÔ 
{
 
List
ÒÒ 
<
ÒÒ  
InventarioSemaforo
ÒÒ '
>
ÒÒ' (

inventario
ÒÒ) 3
=
ÒÒ4 5
new
ÒÒ6 9
List
ÒÒ: >
<
ÒÒ> ? 
InventarioSemaforo
ÒÒ? Q
>
ÒÒQ R
(
ÒÒR S
)
ÒÒS T
;
ÒÒT U
idsFamilias
ÚÚ 
=
ÚÚ 
todasLasFamilias
ÚÚ .
?
ÚÚ/ 0#
_maestrosAlmacenDatos
ÚÚ1 F
.
ÚÚF G#
ObtenerFamiliasBienes
ÚÚG \
(
ÚÚ\ ]
)
ÚÚ] ^
.
ÚÚ^ _
Select
ÚÚ_ e
(
ÚÚe f
f
ÚÚf g
=>
ÚÚh j
f
ÚÚk l
.
ÚÚl m
Id
ÚÚm o
)
ÚÚo p
.
ÚÚp q
ToArray
ÚÚq x
(
ÚÚx y
)
ÚÚy z
:
ÚÚ{ |
idsFamiliasÚÚ} à
;ÚÚà â

inventario
ÛÛ 
=
ÛÛ (
_inventarioHistoricoLogica
ÛÛ 7
.
ÛÛ7 8(
ObtenerInventariosSemaforo
ÛÛ8 R
(
ÛÛR S

idEmpleado
ÛÛS ]
,
ÛÛ] ^
	idAlmacen
ÛÛ_ h
,
ÛÛh i

fechaHasta
ÛÛj t
,
ÛÛt u
idsFamiliasÛÛv Å
)ÛÛÅ Ç
.ÛÛÇ É
ToListÛÛÉ â
(ÛÛâ ä
)ÛÛä ã
;ÛÛã å
return
ıı 

inventario
ıı !
.
ıı! "
Where
ıı" '
(
ıı' (
i
ıı( )
=>
ıı* ,
nivelesRequeridos
ıı- >
.
ıı> ?
Contains
ıı? G
(
ııG H
i
ııH I
.
ııI J
ValorSemaforoInt
ııJ Z
)
ııZ [
)
ıı[ \
.
ıı\ ]
OrderBy
ıı] d
(
ııd e
i
ııe f
=>
ııg i
i
ııj k
.
ıık l
Concepto
ııl t
)
ııt u
.
ııu v
ToList
ııv |
(
ıı| }
)
ıı} ~
;
ıı~ 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
new
˘˘ 
LogicaException
˘˘ )
(
˘˘) *
$str
˘˘* G
+
˘˘H I
$str
˘˘J O
+
˘˘P Q
e
˘˘R S
.
˘˘S T
Message
˘˘T [
,
˘˘[ \
e
˘˘] ^
)
˘˘^ _
;
˘˘_ `
}
˙˙ 
}
˚˚ 	
public
ÄÄ 
List
ÄÄ 
<
ÄÄ !
DetalleKardexFisico
ÄÄ '
>
ÄÄ' (
KardexFisico
ÄÄ) 5
(
ÄÄ5 6
int
ÄÄ6 9
	idAlmacen
ÄÄ: C
,
ÄÄC D
int
ÄÄE H

idEmpleado
ÄÄI S
,
ÄÄS T
DateTime
ÄÄU ]

fechaDesde
ÄÄ^ h
,
ÄÄh i
DateTime
ÄÄj r

fechaHasta
ÄÄs }
,
ÄÄ} ~
intÄÄ Ç

idConceptoÄÄÉ ç
)ÄÄç é
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
var
ÑÑ 
saldoInicial
ÑÑ  
=
ÑÑ! "'
InventarioFisicoHistorico
ÑÑ# <
(
ÑÑ< =
	idAlmacen
ÑÑ= F
,
ÑÑF G

fechaDesde
ÑÑH R
,
ÑÑR S

idConcepto
ÑÑT ^
)
ÑÑ^ _
;
ÑÑ_ `
var
ÖÖ 
movimientos
ÖÖ 
=
ÖÖ  !
_movimientosDatos
ÖÖ" 3
.
ÖÖ3 4.
 ObtenerDetallesMovimientoAlmacen
ÖÖ4 T
(
ÖÖT U
	idAlmacen
ÖÖU ^
,
ÖÖ^ _

idConcepto
ÖÖ` j
,
ÖÖj k

fechaDesde
ÖÖl v
,
ÖÖv w

fechaHastaÖÖx Ç
)ÖÖÇ É
.ÖÖÉ Ñ
ToListÖÖÑ ä
(ÖÖä ã
)ÖÖã å
;ÖÖå ç
var
ÜÜ 7
)idsOrdenMovimientoDiferenteABoletaFactura
ÜÜ =
=
ÜÜ> ?
movimientos
ÜÜ@ K
.
ÜÜK L
Where
ÜÜL Q
(
ÜÜQ R
m
ÜÜR S
=>
ÜÜT V
m
ÜÜW X
.
ÜÜX Y
IdTipoComprobante
ÜÜY j
!=
ÜÜk m
MaestroSettings
ÜÜn }
.
ÜÜ} ~
DefaultÜÜ~ Ö
.ÜÜÖ Ü1
!IdDetalleMaestroComprobanteBoletaÜÜÜ ß
&&ÜÜ® ™
mÜÜ´ ¨
.ÜÜ¨ ≠!
IdTipoComprobanteÜÜ≠ æ
!=ÜÜø ¡
MaestroSettingsÜÜ¬ —
.ÜÜ— “
DefaultÜÜ“ Ÿ
.ÜÜŸ ⁄2
"IdDetalleMaestroComprobanteFacturaÜÜ⁄ ¸
&&ÜÜ˝ ˇ
mÜÜÄ Å
.ÜÜÅ Ç
IdOrdenÜÜÇ â
!=ÜÜâ ã
nullÜÜã è
)ÜÜè ê
.ÜÜê ë
SelectÜÜë ó
(ÜÜó ò
mÜÜò ô
=>ÜÜö ú
(ÜÜù û
longÜÜû ¢
)ÜÜ¢ £
mÜÜ£ §
.ÜÜ§ •
IdOrdenÜÜ• ¨
)ÜÜ¨ ≠
.ÜÜ≠ Æ
ToArrayÜÜÆ µ
(ÜÜµ ∂
)ÜÜ∂ ∑
;ÜÜ∑ ∏
var
áá 6
(hayComprobantesDiferentesABoletaYFactura
áá <
=
áá= >7
)idsOrdenMovimientoDiferenteABoletaFactura
áá? h
.
ááh i
Length
áái o
>
ááp q
$num
áár s
;
áás t
var
ââ @
2comprobantesOrdenMovimientoADiferenteBoletaFactura
ââ F
=
ââG H6
(hayComprobantesDiferentesABoletaYFactura
ââI q
?
ââq r 
_movimientosDatosââr É
.ââÉ Ñ,
ObtenerComprobantesDeOrdenesââÑ †
(ââ† °9
)idsOrdenMovimientoDiferenteABoletaFacturaââ°  
.ââ  À
ToArrayââÀ “
(ââ“ ”
)ââ” ‘
)ââ‘ ’
:ââ’ ÷
nullââ÷ ⁄
;ââ⁄ €!
DetalleKardexFisico
ää #!
detalleSaldoInicial
ää$ 7
=
ää8 9
new
ää: =!
DetalleKardexFisico
ää> Q
(
ääQ R
)
ääR S
{
ääT U
Index
ääV [
=
ää\ ]
$num
ää^ _
,
ää_ `
Fecha
ääa f
=
ääg h

fechaDesde
ääi s
,
ääs t
ActorExternoääu Å
=ääÇ É
$strääÑ Ü
,ääÜ á
	Operacionääà ë
=ääí ì
$strääî £
,ää£ §
CantidadSaldoää• ≤
=ää≥ ¥
saldoInicialääµ ¡
.ää¡ ¬
Cantidadää¬  
}ääÀ Ã
;ääÃ Õ
List
ãã 
<
ãã !
DetalleKardexFisico
ãã (
>
ãã( )
kardex
ãã* 0
=
ãã1 2
new
ãã3 6
List
ãã7 ;
<
ãã; <!
DetalleKardexFisico
ãã< O
>
ããO P
(
ããP Q
)
ããQ R
;
ããR S
kardex
åå 
.
åå 
Add
åå 
(
åå !
detalleSaldoInicial
åå .
)
åå. /
;
åå/ 0
var
çç 
cantidadInicial
çç #
=
çç$ %!
detalleSaldoInicial
çç& 9
.
çç9 :
CantidadSaldo
çç: G
;
ççG H
int
éé 
factor
éé 
=
éé 
$num
éé 
;
éé 
decimal
èè 
saldoCantidad
èè %
=
èè& '
cantidadInicial
èè( 7
;
èè7 8
int
êê 
index
êê 
=
êê !
detalleSaldoInicial
êê /
.
êê/ 0
Index
êê0 5
;
êê5 6
movimientos
ëë 
.
ëë 
ForEach
ëë #
(
ëë# $
m
ëë$ %
=>
ëë& (
{
íí 
var
ìì 
comprobanteOrden
ìì (
=
ìì) *
m
ìì+ ,
.
ìì, -
IdTipoComprobante
ìì- >
!=
ìì? A
MaestroSettings
ììB Q
.
ììQ R
Default
ììR Y
.
ììY Z/
!IdDetalleMaestroComprobanteBoleta
ììZ {
&&
ìì| ~
mìì Ä
.ììÄ Å!
IdTipoComprobanteììÅ í
!=ììì ï
MaestroSettingsììñ •
.ìì• ¶
Defaultìì¶ ≠
.ìì≠ Æ2
"IdDetalleMaestroComprobanteFacturaììÆ –
&&ìì— ”B
2comprobantesOrdenMovimientoADiferenteBoletaFacturaìì‘ Ü
!=ììÜ à
nullììà å
&&ììç èB
2comprobantesOrdenMovimientoADiferenteBoletaFacturaììê ¬
.ìì¬ √
Anyìì√ ∆
(ìì∆ «
cìì« »
=>ìì… À
cììÃ Õ
.ììÕ Œ
IdOperacionììŒ Ÿ
==ìì⁄ ‹
mìì› ﬁ
.ììﬁ ﬂ
IdOrdenììﬂ Ê
)ììÊ Á
?ììÁ Ë
$strììÈ Ì
+ììÓ ÔB
2comprobantesOrdenMovimientoADiferenteBoletaFacturaìì ¢
.ìì¢ £
Singleìì£ ©
(ìì© ™
cìì™ ´
=>ìì¨ Æ
cììØ ∞
.ìì∞ ±
IdOperacionìì± º
==ììΩ ø
mìì¿ ¡
.ìì¡ ¬
IdOrdenìì¬ …
)ìì…  
.ìì  À
ComprobanteììÀ ÷
+ìì◊ ÿ
$strììŸ ‹
:ìì› ﬁ
$strììﬂ ·
;ìì· ‚
factor
ïï 
=
ïï 
m
ïï 
.
ïï 
	EsEntrada
ïï (
?
ïï) *
$num
ïï+ ,
:
ïï- .
-
ïï/ 0
$num
ïï0 1
;
ïï1 2
saldoCantidad
ññ !
+=
ññ" $
m
ññ% &
.
ññ& '
Cantidad
ññ' /
*
ññ0 1
factor
ññ2 8
;
ññ8 9
kardex
óó 
.
óó 
Add
óó 
(
óó 
new
óó "!
DetalleKardexFisico
óó# 6
(
óó6 7
)
óó7 8
{
óó9 :
Index
óó; @
=
óóA B
++
óóC E
index
óóE J
,
óóJ K
Fecha
óóL Q
=
óóR S
m
óóT U
.
óóU V
Fecha
óóV [
,
óó[ \
ActorExterno
óó] i
=
óój k
m
óól m
.
óóm n(
NombreActorNegocioExternoóón á
,óóá à
	Operacionóóâ í
=óóì î
móóï ñ
.óóñ ó%
NombreTipoTransaccionóóó ¨
+óó≠ Æ 
comprobanteOrdenóóØ ø
,óó¡ ¬%
CodigoTipoComprobanteóó√ ÿ
=óóŸ ⁄
móó€ ‹
.óó‹ ›%
CodigoTipoComprobanteóó› Ú
,óóÚ Û'
SerieYNumeroComprobanteóóÙ ã
=óóå ç
móóé è
.óóè ê
NumeroSerieóóê õ
+óóú ù
$stróóû °
+óó¢ £
móó§ •
.óó• ¶!
NumeroComprobanteóó¶ ∑
,óó∑ ∏
CantidadEntradaóóπ »
=óó…  
móóÀ Ã
.óóÃ Õ
	EsEntradaóóÕ ÷
?óó◊ ÿ
móóŸ ⁄
.óó⁄ €
Cantidadóó€ „
:óó‰ Â
$numóóÊ Á
,óóÁ Ë
CantidadSaldoóóÈ ˆ
=óó˜ ¯
saldoCantidadóó˘ Ü
,óóÜ á
CantidadSalidaóóà ñ
=óóó ò
!óóô ö
móóö õ
.óóõ ú
	EsEntradaóóú •
?óó¶ ß
móó® ©
.óó© ™
Cantidadóó™ ≤
:óó≥ ¥
$numóóµ ∂
,óó∂ ∑
}óó∏ π
)óóπ ∫
;óó∫ ª
}
òò 
)
òò 
;
òò 
return
ôô 
kardex
ôô 
;
ôô 
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ûû 
new
ûû 
LogicaException
ûû )
(
ûû) *
$str
ûû* V
,
ûûV W
e
ûûW X
)
ûûX Y
;
ûûY Z
}
üü 
}
†† 	
public
¢¢ 
List
¢¢ 
<
¢¢ %
DetalleKardexValorizado
¢¢ +
>
¢¢+ ,
KardexValorizado
¢¢- =
(
¢¢= >
int
¢¢> A
	idAlmacen
¢¢B K
,
¢¢K L
int
¢¢M P

idEmpleado
¢¢Q [
,
¢¢[ \
DateTime
¢¢] e

fechaDesde
¢¢f p
,
¢¢p q
DateTime
¢¢r z

fechaHasta¢¢{ Ö
,¢¢Ö Ü
int¢¢á ä

idConcepto¢¢ã ï
)¢¢ï ñ
{
££ 	
try
§§ 
{
•• 
var
¶¶ 
saldoInicial
¶¶  
=
¶¶! "2
$ObtenerInventarioValorizadoHistorico
¶¶# G
(
¶¶G H
	idAlmacen
¶¶H Q
,
¶¶Q R

idEmpleado
¶¶S ]
,
¶¶] ^

fechaDesde
¶¶_ i
,
¶¶i j

idConcepto
¶¶k u
)
¶¶u v
;
¶¶v w
var
ßß 
movimientos
ßß 
=
ßß  !
_movimientosDatos
ßß" 3
.
ßß3 4.
 ObtenerDetallesMovimientoAlmacen
ßß4 T
(
ßßT U
	idAlmacen
ßßU ^
,
ßß^ _

idConcepto
ßß` j
,
ßßj k

fechaDesde
ßßl v
,
ßßv w

fechaHastaßßx Ç
)ßßÇ É
.ßßÉ Ñ
ToListßßÑ ä
(ßßä ã
)ßßã å
;ßßå ç
var
®® 7
)idsOrdenMovimientoDiferenteABoletaFactura
®® =
=
®®> ?
movimientos
®®@ K
.
®®K L
Where
®®L Q
(
®®Q R
m
®®R S
=>
®®T V
m
®®W X
.
®®X Y
IdTipoComprobante
®®Y j
!=
®®k m
MaestroSettings
®®n }
.
®®} ~
Default®®~ Ö
.®®Ö Ü1
!IdDetalleMaestroComprobanteBoleta®®Ü ß
&&®®® ™
m®®´ ¨
.®®¨ ≠!
IdTipoComprobante®®≠ æ
!=®®ø ¡
MaestroSettings®®¬ —
.®®— “
Default®®“ Ÿ
.®®Ÿ ⁄2
"IdDetalleMaestroComprobanteFactura®®⁄ ¸
&&®®˝ ˇ
m®®Ä Å
.®®Å Ç
IdOrden®®Ç â
!=®®ä å
null®®ç ë
)®®ë í
.®®í ì
Select®®ì ô
(®®ô ö
m®®ö õ
=>®®ú û
(®®ü †
long®®† §
)®®§ •
m®®• ¶
.®®¶ ß
IdOrden®®ß Æ
)®®Æ Ø
.®®Ø ∞
ToArray®®∞ ∑
(®®∑ ∏
)®®∏ π
;®®π ∫
var
©© 6
(hayComprobantesDiferentesABoletaYFactura
©© <
=
©©= >7
)idsOrdenMovimientoDiferenteABoletaFactura
©©? h
.
©©h i
Length
©©i o
>
©©p q
$num
©©r s
;
©©s t
var
´´ @
2comprobantesOrdenMovimientoADiferenteBoletaFactura
´´ F
=
´´G H6
(hayComprobantesDiferentesABoletaYFactura
´´I q
?
´´r s 
_movimientosDatos´´t Ö
.´´Ö Ü,
ObtenerComprobantesDeOrdenes´´Ü ¢
(´´¢ £9
)idsOrdenMovimientoDiferenteABoletaFactura´´£ Ã
.´´Ã Õ
ToArray´´Õ ‘
(´´‘ ’
)´´’ ÷
)´´÷ ◊
:´´◊ ÿ
null´´ÿ ‹
;´´‹ ›%
DetalleKardexValorizado
≠≠ '!
detalleSaldoInicial
≠≠( ;
=
≠≠< =
new
≠≠> A%
DetalleKardexValorizado
≠≠B Y
(
≠≠Y Z
)
≠≠Z [
{
≠≠\ ]
Index
≠≠^ c
=
≠≠d e
$num
≠≠f g
,
≠≠g h
Fecha
≠≠i n
=
≠≠o p

fechaDesde
≠≠q {
,
≠≠{ |
ActorExterno≠≠} â
=≠≠ä ã
$str≠≠å é
,≠≠é è
	Operacion≠≠ê ô
=≠≠ö õ
$str≠≠ú ´
,≠≠´ ¨
CantidadSaldo≠≠≠ ∫
=≠≠ª º
saldoInicial≠≠Ω …
.≠≠…  
Cantidad≠≠  “
,≠≠“ ”$
ImporteUnitarioSaldo≠≠‘ Ë
=≠≠È Í
saldoInicial≠≠Î ˜
.≠≠˜ ¯
ValorUnitario≠≠¯ Ö
,≠≠Ö Ü!
ImporteTotalSaldo≠≠á ò
=≠≠ô ö
saldoInicial≠≠õ ß
.≠≠ß ®

ValorTotal≠≠® ≤
}≠≠≥ ¥
;≠≠¥ µ
List
ÆÆ 
<
ÆÆ %
DetalleKardexValorizado
ÆÆ ,
>
ÆÆ, -
kardex
ÆÆ. 4
=
ÆÆ5 6
new
ÆÆ7 :
List
ÆÆ; ?
<
ÆÆ? @%
DetalleKardexValorizado
ÆÆ@ W
>
ÆÆW X
(
ÆÆX Y
)
ÆÆY Z
;
ÆÆZ [
kardex
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ !
detalleSaldoInicial
ØØ .
)
ØØ. /
;
ØØ/ 0
int
∞∞ 
factor
∞∞ 
=
∞∞ 
$num
∞∞ 
;
∞∞ 
decimal
±± 
saldoCantidad
±± %
=
±±& '!
detalleSaldoInicial
±±( ;
.
±±; <
CantidadSaldo
±±< I
;
±±I J
decimal
≤≤ 
saldoImporteTotal
≤≤ )
=
≤≤* +!
detalleSaldoInicial
≤≤, ?
.
≤≤? @
ImporteTotalSaldo
≤≤@ Q
;
≤≤Q R
int
≥≥ 
index
≥≥ 
=
≥≥ !
detalleSaldoInicial
≥≥ /
.
≥≥/ 0
Index
≥≥0 5
;
≥≥5 6
movimientos
¥¥ 
.
¥¥ 
ForEach
¥¥ #
(
¥¥# $
m
¥¥$ %
=>
¥¥& (
{
µµ 
var
∂∂ 
comprobanteOrden
∂∂ (
=
∂∂) *
m
∂∂+ ,
.
∂∂, -
IdTipoComprobante
∂∂- >
!=
∂∂? A
MaestroSettings
∂∂B Q
.
∂∂Q R
Default
∂∂R Y
.
∂∂Y Z/
!IdDetalleMaestroComprobanteBoleta
∂∂Z {
&&
∂∂| ~
m∂∂ Ä
.∂∂Ä Å!
IdTipoComprobante∂∂Å í
!=∂∂ì ï
MaestroSettings∂∂ñ •
.∂∂• ¶
Default∂∂¶ ≠
.∂∂≠ Æ2
"IdDetalleMaestroComprobanteFactura∂∂Æ –
&&∂∂— ”B
2comprobantesOrdenMovimientoADiferenteBoletaFactura∂∂‘ Ü
!=∂∂á â
null∂∂ä é
&&∂∂è ëB
2comprobantesOrdenMovimientoADiferenteBoletaFactura∂∂í ƒ
.∂∂ƒ ≈
Any∂∂≈ »
(∂∂» …
c∂∂…  
=>∂∂À Õ
c∂∂Œ œ
.∂∂œ –
IdOperacion∂∂– €
==∂∂‹ ﬁ
m∂∂ﬂ ‡
.∂∂‡ ·
IdOrden∂∂· Ë
)∂∂Ë È
?∂∂Í Î
$str∂∂Ï 
+∂∂Ò ÚB
2comprobantesOrdenMovimientoADiferenteBoletaFactura∂∂Û •
.∂∂• ¶
Single∂∂¶ ¨
(∂∂¨ ≠
c∂∂≠ Æ
=>∂∂Ø ±
c∂∂≤ ≥
.∂∂≥ ¥
IdOperacion∂∂¥ ø
==∂∂¿ ¬
m∂∂√ ƒ
.∂∂ƒ ≈
IdOrden∂∂≈ Ã
)∂∂Ã Õ
.∂∂Õ Œ
Comprobante∂∂Œ Ÿ
+∂∂⁄ €
$str∂∂‹ ﬂ
:∂∂‡ ·
$str∂∂‚ ‰
;∂∂‰ Â
factor
∑∑ 
=
∑∑ 
m
∑∑ 
.
∑∑ 
	EsEntrada
∑∑ (
?
∑∑) *
$num
∑∑+ ,
:
∑∑- .
-
∑∑/ 0
$num
∑∑0 1
;
∑∑1 2
var
∏∏ 
factorEntrada
∏∏ %
=
∏∏& '
m
∏∏( )
.
∏∏) *
	EsEntrada
∏∏* 3
?
∏∏4 5
$num
∏∏6 7
:
∏∏8 9
$num
∏∏: ;
;
∏∏; <
var
ππ 
factorSalida
ππ $
=
ππ% &
!
ππ' (
m
ππ( )
.
ππ) *
	EsEntrada
ππ* 3
?
ππ4 5
$num
ππ6 7
:
ππ8 9
$num
ππ: ;
;
ππ; <
saldoCantidad
ªª !
+=
ªª" $
m
ªª% &
.
ªª& '
Cantidad
ªª' /
*
ªª0 1
factor
ªª2 8
;
ªª8 9
saldoImporteTotal
ºº %
+=
ºº& (
m
ºº) *
.
ºº* +
ImporteTotal
ºº+ 7
*
ºº8 9
factor
ºº: @
;
ºº@ A
kardex
ææ 
.
ææ 
Add
ææ 
(
ææ 
new
ææ "%
DetalleKardexValorizado
ææ# :
(
ææ: ;
)
ææ; <
{
ææ= >
Index
ææ? D
=
ææE F
++
ææG I
index
ææI N
,
ææN O
Fecha
ææP U
=
ææV W
m
ææX Y
.
ææY Z
Fecha
ææZ _
,
ææ_ `
ActorExterno
ææa m
=
ææn o
m
ææp q
.
ææq r(
NombreActorNegocioExternoæær ã
,ææã å
	Operacionææç ñ
=ææó ò
mææô ö
.ææö õ%
NombreTipoTransaccionææõ ∞
+ææ± ≤ 
comprobanteOrdenææ≥ √
,ææ√ ƒ%
CodigoTipoComprobanteææ≈ ⁄
=ææ€ ‹
mææ› ﬁ
.ææﬁ ﬂ%
CodigoTipoComprobanteææﬂ Ù
,ææÙ ı'
SerieYNumeroComprobanteææˆ ç
=ææé è
mææê ë
.ææë í
NumeroSerieææí ù
+ææû ü
$strææ† £
+ææ§ •
mææ¶ ß
.ææß ®!
NumeroComprobanteææ® π
,ææπ ∫
CantidadEntradaææª  
=ææÀ Ã
factorEntradaææÕ ⁄
*ææ€ ‹
mææ› ﬁ
.ææﬁ ﬂ
Cantidadææﬂ Á
,ææÁ Ë&
ImporteUnitarioEntradaææÈ ˇ
=ææÄ Å
factorEntradaææÇ è
*ææê ë
mææí ì
.ææì î
ImporteUnitarioææî £
,ææ£ §#
ImporteTotalEntradaææ• ∏
=ææπ ∫
factorEntradaææª »
*ææ…  
mææÀ Ã
.ææÃ Õ
ImporteTotalææÕ Ÿ
,ææŸ ⁄
CantidadSalidaææ€ È
=ææÍ Î
factorSalidaææÏ ¯
*ææ˘ ˙
mææ˚ ¸
.ææ¸ ˝
Cantidadææ˝ Ö
,ææÖ Ü%
ImporteUnitarioSalidaææá ú
=ææù û
factorSalidaææü ´
*ææ¨ ≠
mææÆ Ø
.ææØ ∞
ImporteUnitarioææ∞ ø
,ææø ¿"
ImporteTotalSalidaææ¡ ”
=ææ‘ ’
factorSalidaææ÷ ‚
*ææ„ ‰
mææÂ Ê
.ææÊ Á
ImporteTotalææÁ Û
,ææÛ Ù
CantidadSaldoææı Ç
=ææÉ Ñ
saldoCantidadææÖ í
,ææí ì$
ImporteUnitarioSaldoææî ®
=ææ© ™
saldoCantidadææ´ ∏
!=ææπ ª
$numææº Ω
?æææ ø
(ææ¿ ¡!
saldoImporteTotalææ¡ “
/ææ” ‘
saldoCantidadææ’ ‚
)ææ‚ „
:ææ‰ Â
$numææÊ Á
,ææÁ Ë!
ImporteTotalSaldoææÈ ˙
=ææ˚ ¸!
saldoImporteTotalææ˝ é
}ææè ê
)ææê ë
;ææë í
}
øø 
)
øø 
;
øø 
return
¿¿ 
kardex
¿¿ 
;
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* Z
,
ƒƒZ [
e
ƒƒ\ ]
)
ƒƒ] ^
;
ƒƒ^ _
}
≈≈ 
}
«« 	
public
…… 
StockMinMax
…… '
ObtenerStockMinimoYMaximo
…… 4
(
……4 5
int
……5 8

idConcepto
……9 C
)
……C D
{
   	
decimal
ÀÀ 
stockMinimo
ÀÀ 
=
ÀÀ  !#
_maestrosAlmacenDatos
ÀÀ" 7
.
ÀÀ7 8 
ObtenerStockMinimo
ÀÀ8 J
(
ÀÀJ K

idConcepto
ÀÀK U
)
ÀÀU V
;
ÀÀV W
decimal
ÃÃ 
stockMaximo
ÃÃ 
=
ÃÃ  !
stockMinimo
ÃÃ" -
*
ÃÃ. /
(
ÃÃ0 1
$num
ÃÃ1 2
+
ÃÃ3 4
(
ÃÃ5 6
(
ÃÃ6 7
decimal
ÃÃ7 >
)
ÃÃ> ?
ConceptoSettings
ÃÃ? O
.
ÃÃO P
Default
ÃÃP W
.
ÃÃW X.
 PorcentajeParaObtenerStockMaximo
ÃÃX x
/
ÃÃy z
$num
ÃÃ{ ~
)
ÃÃ~ 
)ÃÃ Ä
;ÃÃÄ Å
return
ÕÕ 
new
ÕÕ 
StockMinMax
ÕÕ "
(
ÕÕ" #
)
ÕÕ# $
{
ÕÕ% &

IdConcepto
ÕÕ' 1
=
ÕÕ2 3

idConcepto
ÕÕ4 >
,
ÕÕ> ?
StockMinimo
ÕÕ@ K
=
ÕÕL M
stockMinimo
ÕÕN Y
,
ÕÕY Z
StockMaximo
ÕÕ[ f
=
ÕÕg h
stockMaximo
ÕÕi t
}
ÕÕu v
;
ÕÕv w
}
ŒŒ 	
}
—— 
}““ ’¬
HD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Caja.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public 
async 
Task 
< 
List 
< ,
 TipoDeComprobanteParaTransaccion ?
>? @
>@ A6
*ObtenerTiposDeComprobanteParaIngresoVariosB l
(l m
)m n
{ 	
try 
{ 
var 
	resultado 
= 
(  !
await! &"
transaccionRepositorio' =
.= >6
*ObtenerTipoComprobantePorTipoDeTransaccion> h
(h i
TransaccionSettingsi |
.| }
Default	} Ñ
.
Ñ Ö1
#IdTipoTransaccionCobroDeCobroVarios
Ö ®
)
® ©
)
© ™
.
™ ´
ToList
´ ±
(
± ≤
)
≤ ≥
;
≥ ¥
foreach 
( 
var 
tipo !
in" $
	resultado% .
). /
{ 
tipo 
. 
Detalle_maestro (
.( )
Serie_comprobante) :
=; <
tipo= A
.A B
Detalle_maestroB Q
.Q R
Serie_comprobanteR c
.c d
Whered i
(i j
scj l
=>m o
scp r
.r s

es_vigentes }
)} ~
.~ 
ToList	 Ö
(
Ö Ü
)
Ü á
;
á à
} 
return ,
 TipoDeComprobanteParaTransaccion 7
.7 8
Convert8 ?
(? @
	resultado@ I
)I J
;J K
} 
catch 
( 
	Exception 
e 
) 
{   
throw!! 
new!! 
LogicaException!! )
(!!) *
$str!!* t
,!!t u
e!!v w
)!!w x
;!!x y
}"" 
}## 	
public%% 
async%% 
Task%% 
<%% 
List%% 
<%% ,
 TipoDeComprobanteParaTransaccion%% ?
>%%? @
>%%@ A6
*ObtenerTiposDeComprobanteParaIngresoVarios%%B l
(%%l m
int%%m p
idCentroDeAtencion	%%q É
)
%%É Ñ
{&& 	
try'' 
{(( 
var)) 
	resultado)) 
=)) 
())  !
await))! &"
transaccionRepositorio))' =
.))= >6
*ObtenerTipoComprobantePorTipoDeTransaccion))> h
())h i
TransaccionSettings))i |
.))| }
Default	))} Ñ
.
))Ñ Ö1
#IdTipoTransaccionCobroDeCobroVarios
))Ö ®
)
))® ©
)
))© ™
.
))™ ´
ToList
))´ ±
(
))± ≤
)
))≤ ≥
;
))≥ ¥
foreach** 
(** 
var** 
tipo** !
in**" $
	resultado**% .
)**. /
{++ 
tipo,, 
.,, 
Detalle_maestro,, (
.,,( )
Serie_comprobante,,) :
=,,; <
tipo,,= A
.,,A B
Detalle_maestro,,B Q
.,,Q R
Serie_comprobante,,R c
.,,c d
Where,,d i
(,,i j
sc,,j l
=>,,m o
sc,,p r
.,,r s
id_propietario	,,s Å
==
,,Ç Ñ 
idCentroDeAtencion
,,Ö ó
&&
,,ò ö
sc
,,õ ù
.
,,ù û

es_vigente
,,û ®
)
,,® ©
.
,,© ™
ToList
,,™ ∞
(
,,∞ ±
)
,,± ≤
;
,,≤ ≥
}-- 
return.. ,
 TipoDeComprobanteParaTransaccion.. 7
...7 8
Convert..8 ?
(..? @
	resultado..@ I
)..I J
;..J K
}// 
catch00 
(00 
	Exception00 
e00 
)00 
{11 
throw22 
new22 
LogicaException22 )
(22) *
$str22* t
,22t u
e22v w
)22w x
;22x y
}33 
}44 	
public66 
async66 
Task66 
<66 
List66 
<66 ,
 TipoDeComprobanteParaTransaccion66 ?
>66? @
>66@ A5
)ObtenerTiposDeComprobanteParaEgresoVarios66B k
(66k l
)66l m
{77 	
try88 
{99 
var:: 
	resultado:: 
=:: 
(::  !
await::! &"
transaccionRepositorio::' =
.::= >6
*ObtenerTipoComprobantePorTipoDeTransaccion::> h
(::h i
TransaccionSettings::i |
.::| }
Default	::} Ñ
.
::Ñ Ö/
!IdTipoTransaccionPagoDePagoVarios
::Ö ¶
)
::¶ ß
)
::ß ®
.
::® ©
ToList
::© Ø
(
::Ø ∞
)
::∞ ±
;
::± ≤
foreach;; 
(;; 
var;; 
tipo;; !
in;;" $
	resultado;;% .
);;. /
{<< 
tipo== 
.== 
Detalle_maestro== (
.==( )
Serie_comprobante==) :
===; <
tipo=== A
.==A B
Detalle_maestro==B Q
.==Q R
Serie_comprobante==R c
.==c d
Where==d i
(==i j
sc==j l
=>==m o
sc==p r
.==r s

es_vigente==s }
)==} ~
.==~ 
ToList	== Ö
(
==Ö Ü
)
==Ü á
;
==á à
}>> 
return?? ,
 TipoDeComprobanteParaTransaccion?? 7
.??7 8
Convert??8 ?
(??? @
	resultado??@ I
)??I J
;??J K
}@@ 
catchAA 
(AA 
	ExceptionAA 
eAA 
)AA 
{BB 
throwCC 
newCC 
LogicaExceptionCC )
(CC) *
$strCC* s
,CCs t
eCCu v
)CCv w
;CCw x
}DD 
}EE 	
publicGG 
asyncGG 
TaskGG 
<GG 
ListGG 
<GG ,
 TipoDeComprobanteParaTransaccionGG ?
>GG? @
>GG@ A5
)ObtenerTiposDeComprobanteParaEgresoVariosGGB k
(GGk l
intGGl o
idCentroDeAtencion	GGp Ç
)
GGÇ É
{HH 	
tryII 
{JJ 
varKK 
	resultadoKK 
=KK 
(KK  !
awaitKK! &"
transaccionRepositorioKK' =
.KK= >6
*ObtenerTipoComprobantePorTipoDeTransaccionKK> h
(KKh i
TransaccionSettingsKKi |
.KK| }
Default	KK} Ñ
.
KKÑ Ö/
!IdTipoTransaccionPagoDePagoVarios
KKÖ ¶
)
KK¶ ß
)
KKß ®
.
KK® ©
ToList
KK© Ø
(
KKØ ∞
)
KK∞ ±
;
KK± ≤
foreachLL 
(LL 
varLL 
tipoLL !
inLL" $
	resultadoLL% .
)LL. /
{MM 
tipoNN 
.NN 
Detalle_maestroNN (
.NN( )
Serie_comprobanteNN) :
=NN; <
tipoNN= A
.NNA B
Detalle_maestroNNB Q
.NNQ R
Serie_comprobanteNNR c
.NNc d
WhereNNd i
(NNi j
scNNj l
=>NNm o
scNNp r
.NNr s
id_propietario	NNs Å
==
NNÇ Ñ 
idCentroDeAtencion
NNÖ ó
&&
NNò ö
sc
NNõ ù
.
NNù û

es_vigente
NNû ®
)
NN® ©
.
NN© ™
ToList
NN™ ∞
(
NN∞ ±
)
NN± ≤
;
NN≤ ≥
}OO 
returnPP ,
 TipoDeComprobanteParaTransaccionPP 7
.PP7 8
ConvertPP8 ?
(PP? @
	resultadoPP@ I
)PPI J
;PPJ K
}QQ 
catchRR 
(RR 
	ExceptionRR 
eRR 
)RR 
{SS 
throwTT 
newTT 
LogicaExceptionTT )
(TT) *
$strTT* s
,TTs t
eTTu v
)TTv w
;TTw x
}UU 
}VV 	
publicXX 
OperationResultXX  
GuardarIngresoVariosXX 3
(XX3 4
intXX4 7

idEmpleadoXX8 B
,XXB C
intXXD G
idCajaXXH N
,XXN O
decimalXXP W
importeXXX _
,XX_ `
intXXa d
idEmisorXXe m
,XXm n
intXXo r
	idPagadorXXs |
,XX| }
int	XX~ Å"
idSerieDeComprobante
XXÇ ñ
,
XXñ ó
string
XXò û
observacion
XXü ™
)
XX™ ´
{YY 	
tryZZ 
{[[ 
int\\ 
idUnidadNegocio\\ #
=\\$ %
MaestroSettings\\& 5
.\\5 6
Default\\6 =
.\\= >6
*IdDetalleMaestroUnidadDeNegocioTransversal\\> h
;\\h i
int]] 
idMoneda]] 
=]] 
MaestroSettings]] .
.]]. /
Default]]/ 6
.]]6 7'
IdDetalleMaestroMonedaSoles]]7 R
;]]R S
permisos_Logica^^ 
.^^  
ValidarAccion^^  -
(^^- .

idEmpleado^^. 8
,^^8 9
MaestroSettings^^: I
.^^I J
Default^^J Q
.^^Q R+
IdDetalleMaestroAccionConfirmar^^R q
,^^q r 
TransaccionSettings	^^s Ü
.
^^Ü á
Default
^^á é
.
^^é è1
#IdTipoTransaccionOrdenDeCobroVarios
^^è ≤
,
^^≤ ≥
idUnidadNegocio
^^¥ √
)
^^√ ƒ
;
^^ƒ ≈
DateTime__ 
fechaActual__ $
=__% &
DateTimeUtil__' 3
.__3 4
FechaActual__4 ?
(__? @
)__@ A
;__A B
	Operacionaa 
operacionGenericaaa +
=aa, -
newaa. 1
	Operacionaa2 ;
(aa; <"
transaccionRepositorioaa< R
.aaR S$
ObtenerUltimaTransaccionaaS k
(aak l
TransaccionSettingsaal 
.	aa Ä
Default
aaÄ á
.
aaá à(
IdTipoTransaccionOperacion
aaà ¢
)
aa¢ £
)
aa£ §
;
aa§ •
decimalcc 
tipoDeCambiocc $
=cc% &
$numcc' (
;cc( )
stringee 
codigoee 
=ee #
codigosOperacion_Logicaee  7
.ee7 81
%ObtenerSiguienteCodigoParaFacturacionee8 ]
(ee] ^
$stree^ b
,eeb c
TransaccionSettingseed w
.eew x
Defaulteex 
.	ee Ä*
IdTipoTransaccionCobroVarios
eeÄ ú
)
eeú ù
;
eeù û
Serie_comprobantegg !
seriegg" '
=gg( )"
transaccionRepositoriogg* @
.gg@ A%
ObtenerSerieDeComprobanteggA Z
(ggZ [ 
idSerieDeComprobantegg[ o
)ggo p
;ggp q
Comprobanteii 
comprobanteii '
=ii( )
newii* -
Comprobanteii. 9
(ii9 :
serieii: ?
.ii? @
id_tipo_comprobanteii@ S
,iiS T
serieiiU Z
.iiZ [
idii[ ]
,ii] ^
serieii_ d
.iid e
proximo_numeroiie s
,iis t
trueiiu y
,iiy z
serie	ii{ Ä
.
iiÄ Å
numero
iiÅ á
)
iiá à
;
iià â
seriekk 
.kk 
proximo_numerokk $
++kk$ &
;kk& '
Transaccionmm 
ingresoVariosmm )
=mm* +
newmm, /
Transaccionmm0 ;
(mm; <
codigomm< B
,mmB C
operacionGenericammD U
.mmU V
IdmmV X
,mmX Y
fechaActualmmZ e
,mme f
TransaccionSettingsmmg z
.mmz {
Default	mm{ Ç
.
mmÇ É*
IdTipoTransaccionCobroVarios
mmÉ ü
,
mmü †
idUnidadNegocionn #
,nn# $
truenn% )
,nn) *
fechaActualnn+ 6
,nn6 7
fechaActualnn8 C
,nnC D
observacionnnE P
,nnP Q
fechaActualnnR ]
,nn] ^

idEmpleadonn_ i
,nni j
importennk r
,nnr s
idCajannt z
,nnz {
idMonedaoo 
,oo 
tipoDeCambiooo *
,oo* +
nulloo, 0
,oo0 1
	idPagadoroo2 ;
)oo; <
;oo< =
ingresoVariosqq 
.qq 
Comprobanteqq )
=qq* +
comprobanteqq, 7
;qq7 8
Transaccionss  
ordenDeIngresoVariosss 0
=ss1 2
newss3 6
Transaccionss7 B
(ssB C#
codigosOperacion_LogicassC Z
.ssZ [2
%ObtenerSiguienteCodigoParaFacturacion	ss[ Ä
(
ssÄ Å
codigo
ssÅ á
+
ssà â
$str
ssä ê
,
ssê ë
TransaccionSettingstt '
.tt' (
Defaulttt( /
.tt/ 0/
#IdTipoTransaccionOrdenDeCobroVariostt0 S
)ttS T
,ttT U
nullttV Z
,ttZ [
fechaActualtt\ g
,ttg h
TransaccionSettingstti |
.tt| }
Default	tt} Ñ
.
ttÑ Ö1
#IdTipoTransaccionOrdenDeCobroVarios
ttÖ ®
,
tt® ©
idUnidadNegociouu #
,uu# $
trueuu% )
,uu) *
fechaActualuu+ 6
,uu6 7
fechaActualuu8 C
,uuC D
observacionuuE P
,uuP Q
fechaActualuuR ]
,uu] ^

idEmpleadouu_ i
,uui j
importeuuk r
,uur s
idCajauut z
,uuz {
idMoneda	uu| Ñ
,
uuÑ Ö
tipoDeCambio
uuÜ í
,
uuí ì
null
uuî ò
,
uuò ô
	idPagador
uuö £
)
uu£ §
;
uu§ • 
ordenDeIngresoVariosww $
.ww$ %
Comprobanteww% 0
=ww1 2
comprobanteww3 >
;ww> ? 
ordenDeIngresoVariosyy $
.yy$ %
Transaccion2yy% 1
=yy2 3
ingresoVariosyy4 A
;yyA B
Estado_transaccion{{ "*
estadoDeLaOrdenDeIngresoVarios{{# A
={{B C
new{{D G
Estado_transaccion{{H Z
({{Z [

idEmpleado{{[ e
,{{e f
MaestroSettings{{g v
.{{v w
Default{{w ~
.{{~ -
 IdDetalleMaestroEstadoConfirmado	{{ ü
,
{{ü †
fechaActual
{{° ¨
,
{{¨ ≠
$str|| \
)||\ ]
;||] ^ 
ordenDeIngresoVarios}} $
.}}$ %
Estado_transaccion}}% 7
.}}7 8
Add}}8 ;
(}}; <*
estadoDeLaOrdenDeIngresoVarios}}< Z
)}}Z [
;}}[ \)
Actor_negocio_por_transaccion -&
actorNegocioPorTransaccion. H
=I J
newK N)
Actor_negocio_por_transaccionO l
(l m
)m n
{o p
id_actor_negocio	q Å
=
Ç É
idEmisor
Ñ å
,
å ç
id_rol
é î
=
ï ñ
ActorSettings
ó §
.
§ •
Default
• ¨
.
¨ ≠
IdRolCliente
≠ π
,
π ∫
Transaccion
ª ∆
=
« »"
ordenDeIngresoVarios
… ›
}
ﬁ ﬂ
;
ﬂ ‡
ingresoVarios
ÅÅ 
.
ÅÅ 
Transaccion1
ÅÅ *
.
ÅÅ* +
Add
ÅÅ+ .
(
ÅÅ. /"
ordenDeIngresoVarios
ÅÅ/ C
)
ÅÅC D
;
ÅÅD E
Cuota
ÉÉ 
cuota
ÉÉ 
=
ÉÉ 
new
ÉÉ !
Cuota
ÉÉ" '
(
ÉÉ' (2
$ObtenerSiguienteCodigoParaNuevaCuota
ÉÉ( L
(
ÉÉL M
true
ÉÉM Q
,
ÉÉQ R
fechaActual
ÉÉS ^
.
ÉÉ^ _
Year
ÉÉ_ c
)
ÉÉc d
+
ÉÉe f
$str
ÉÉg j
+
ÉÉk l
$num
ÉÉm n
,
ÉÉn o
fechaActual
ÉÉp {
,
ÉÉ{ |
fechaActualÉÉ} à
,ÉÉà â$
ordenDeIngresoVariosÉÉä û
.ÉÉû ü
importe_totalÉÉü ¨
,ÉÉ¨ ≠$
ordenDeIngresoVariosÉÉÆ ¬
.ÉÉ¬ √
importe_totalÉÉ√ –
,ÉÉ– —
$strÉÉ“ é
,ÉÉé è
trueÉÉê î
)ÉÉî ï
;ÉÉï ñ"
ordenDeIngresoVarios
ÑÑ $
.
ÑÑ$ %
Cuota
ÑÑ% *
.
ÑÑ* +
Add
ÑÑ+ .
(
ÑÑ. /
cuota
ÑÑ/ 4
)
ÑÑ4 5
;
ÑÑ5 6
string
ÜÜ 

codigoPago
ÜÜ !
=
ÜÜ" #
cuota
ÜÜ$ )
.
ÜÜ) *
codigo
ÜÜ* 0
+
ÜÜ1 2
$str
ÜÜ3 8
;
ÜÜ8 9
Transaccion
áá 
pago
áá  
=
áá! "
new
áá# &
Transaccion
áá' 2
(
áá2 3

codigoPago
áá3 =
,
áá= >
null
áá? C
,
ááC D
fechaActual
ááE P
,
ááP Q!
TransaccionSettings
ááR e
.
ááe f
Default
ááf m
.
áám n2
#IdTipoTransaccionCobroDeCobroVariosáán ë
,ááë í
idUnidadNegocioááì ¢
,áá¢ £
true
àà 
,
àà 
fechaActual
àà %
,
àà% &
fechaActual
àà' 2
,
àà2 3
$str
àà4 6
,
àà6 7
fechaActual
àà8 C
,
ààC D

idEmpleado
ààE O
,
ààO P
importe
ààQ X
,
ààX Y
idCaja
ààZ `
,
àà` a
idMoneda
ààb j
,
ààj k
tipoDeCambio
ààl x
,
ààx y
null
ààz ~
,
àà~ 
	idPagadorààÄ â
)ààâ ä
;ààä ã
pago
ää 
.
ää 
Comprobante
ää  
=
ää! "
comprobante
ää# .
;
ää. / 
Estado_transaccion
åå "
estadoTransaccion
åå# 4
=
åå5 6
new
åå7 : 
Estado_transaccion
åå; M
(
ååM N

idEmpleado
ååN X
,
ååX Y
MaestroSettings
ååZ i
.
ååi j
Default
ååj q
.
ååq r/
 IdDetalleMaestroEstadoConfirmadoåår í
,ååí ì
fechaActualååî ü
,ååü †
$stråå° Ë
)ååË È
;ååÈ Í
pago
çç 
.
çç  
Estado_transaccion
çç '
.
çç' (
Add
çç( +
(
çç+ ,
estadoTransaccion
çç, =
)
çç= >
;
çç> ?

Pago_cuota
èè 
	pagoCuota
èè $
=
èè% &
new
èè' *

Pago_cuota
èè+ 5
(
èè5 6
)
èè6 7
;
èè7 8
	pagoCuota
êê 
.
êê 
Transaccion
êê %
=
êê& '
pago
êê( ,
;
êê, -
	pagoCuota
ëë 
.
ëë 
Cuota
ëë 
=
ëë  !
cuota
ëë" '
;
ëë' (
	pagoCuota
íí 
.
íí 
importe
íí !
=
íí" #
importe
íí$ +
;
íí+ ,
pago
ìì 
.
ìì 

Pago_cuota
ìì 
.
ìì  
Add
ìì  #
(
ìì# $
	pagoCuota
ìì$ -
)
ìì- .
;
ìì. /

Traza_pago
ïï 
traza
ïï  
=
ïï! "
new
ïï# &

Traza_pago
ïï' 1
(
ïï1 2
MaestroSettings
ïï2 A
.
ïïA B
Default
ïïB I
.
ïïI J1
#IdDetalleMaestroMedioDepagoEfectivo
ïïJ m
,
ïïm n
observacion
ïïo z
,
ïïz {
MaestroSettingsïï| ã
.ïïã å
Defaultïïå ì
.ïïì î9
)IdDetalleMaestroEntidadBancariaPorDefectoïïî Ω
)ïïΩ æ
;ïïæ ø
pago
ññ 
.
ññ 

Traza_pago
ññ 
.
ññ  
Add
ññ  #
(
ññ# $
traza
ññ$ )
)
ññ) *
;
ññ* + 
Estado_transaccion
òò "
estadoDelPago
òò# 0
=
òò1 2
new
òò3 6 
Estado_transaccion
òò7 I
(
òòI J

idEmpleado
òòJ T
,
òòT U
MaestroSettings
òòV e
.
òòe f
Default
òòf m
.
òòm n/
 IdDetalleMaestroEstadoConfirmadoòòn é
,òòé è
fechaActualòòê õ
,òòõ ú
$stròòù Â
)òòÂ Ê
;òòÊ Á
pago
ôô 
.
ôô  
Estado_transaccion
ôô '
.
ôô' (
Add
ôô( +
(
ôô+ ,
estadoDelPago
ôô, 9
)
ôô9 :
;
ôô: ;
ingresoVarios
õõ 
.
õõ 
Transaccion1
õõ *
.
õõ* +
Add
õõ+ .
(
õõ. /
pago
õõ/ 3
)
õõ3 4
;
õõ4 5
return
ùù $
transaccionRepositorio
ùù -
.
ùù- .
CrearTransaccion
ùù. >
(
ùù> ?
ingresoVarios
ùù? L
)
ùùL M
;
ùùM N
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* Z
,
°°Z [
e
°°\ ]
)
°°] ^
;
°°^ _
}
¢¢ 
}
££ 	
public
•• 
OperationResult
•• !
GuardarEgresoVarios
•• 2
(
••2 3
int
••3 6

idEmpleado
••7 A
,
••A B
int
••C F
idCaja
••G M
,
••M N
decimal
••O V
importe
••W ^
,
••^ _
int
••` c
idEmisor
••d l
,
••l m
int
••n q
idBeneficiario••r Ä
,••Ä Å
int••Ç Ö$
idSerieDeComprobante••Ü ö
,••ö õ
string••ú ¢
observacion••£ Æ
)••Æ Ø
{
¶¶ 	
try
ßß 
{
®® 
int
©© 
idUnidadNegocio
©© #
=
©©$ %
MaestroSettings
©©& 5
.
©©5 6
Default
©©6 =
.
©©= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
©©> h
;
©©h i
int
™™ 
idMoneda
™™ 
=
™™ 
MaestroSettings
™™ .
.
™™. /
Default
™™/ 6
.
™™6 7)
IdDetalleMaestroMonedaSoles
™™7 R
;
™™R S
permisos_Logica
´´ 
.
´´  
ValidarAccion
´´  -
(
´´- .

idEmpleado
´´. 8
,
´´8 9
MaestroSettings
´´: I
.
´´I J
Default
´´J Q
.
´´Q R-
IdDetalleMaestroAccionConfirmar
´´R q
,
´´q r"
TransaccionSettings´´s Ü
.´´Ü á
Default´´á é
.´´é è0
 IdTipoTransaccionOrdenPagoVarios´´è Ø
,´´Ø ∞
idUnidadNegocio´´± ¿
)´´¿ ¡
;´´¡ ¬
DateTime
¨¨ 
fechaActual
¨¨ $
=
¨¨% &
DateTimeUtil
¨¨' 3
.
¨¨3 4
FechaActual
¨¨4 ?
(
¨¨? @
)
¨¨@ A
;
¨¨A B
	Operacion
ÆÆ 
operacionGenerica
ÆÆ +
=
ÆÆ, -
new
ÆÆ. 1
	Operacion
ÆÆ2 ;
(
ÆÆ; <$
transaccionRepositorio
ÆÆ< R
.
ÆÆR S&
ObtenerUltimaTransaccion
ÆÆS k
(
ÆÆk l!
TransaccionSettings
ÆÆl 
.ÆÆ Ä
DefaultÆÆÄ á
.ÆÆá à*
IdTipoTransaccionOperacionÆÆà ¢
)ÆÆ¢ £
)ÆÆ£ §
;ÆÆ§ •
decimal
∞∞ 
tipoDeCambio
∞∞ $
=
∞∞% &
$num
∞∞' (
;
∞∞( )
string
≤≤ 
codigo
≤≤ 
=
≤≤ %
codigosOperacion_Logica
≤≤  7
.
≤≤7 83
%ObtenerSiguienteCodigoParaFacturacion
≤≤8 ]
(
≤≤] ^
$str
≤≤^ b
,
≤≤b c!
TransaccionSettings
≤≤d w
.
≤≤w x
Default
≤≤x 
.≤≤ Ä+
IdTipoTransaccionPagoVarios≤≤Ä õ
)≤≤õ ú
;≤≤ú ù
Serie_comprobante
¥¥ !
serie
¥¥" '
=
¥¥( )$
transaccionRepositorio
¥¥* @
.
¥¥@ A'
ObtenerSerieDeComprobante
¥¥A Z
(
¥¥Z ["
idSerieDeComprobante
¥¥[ o
)
¥¥o p
;
¥¥p q
Comprobante
∂∂ 
comprobante
∂∂ '
=
∂∂( )
new
∂∂* -
Comprobante
∂∂. 9
(
∂∂9 :
serie
∂∂: ?
.
∂∂? @!
id_tipo_comprobante
∂∂@ S
,
∂∂S T
serie
∂∂U Z
.
∂∂Z [
id
∂∂[ ]
,
∂∂] ^
serie
∂∂_ d
.
∂∂d e
proximo_numero
∂∂e s
,
∂∂s t
true
∂∂u y
,
∂∂y z
serie∂∂{ Ä
.∂∂Ä Å
numero∂∂Å á
)∂∂á à
;∂∂à â
serie
∏∏ 
.
∏∏ 
proximo_numero
∏∏ $
++
∏∏$ &
;
∏∏& '
Transaccion
∫∫ 
egresoVarios
∫∫ (
=
∫∫) *
new
∫∫+ .
Transaccion
∫∫/ :
(
∫∫: ;
codigo
∫∫; A
,
∫∫A B
operacionGenerica
∫∫C T
.
∫∫T U
Id
∫∫U W
,
∫∫W X
fechaActual
∫∫Y d
,
∫∫d e!
TransaccionSettings
∫∫f y
.
∫∫y z
Default∫∫z Å
.∫∫Å Ç+
IdTipoTransaccionPagoVarios∫∫Ç ù
,∫∫ù û
idUnidadNegocio
ªª #
,
ªª# $
true
ªª% )
,
ªª) *
fechaActual
ªª+ 6
,
ªª6 7
fechaActual
ªª8 C
,
ªªC D
observacion
ªªE P
,
ªªP Q
fechaActual
ªªR ]
,
ªª] ^

idEmpleado
ªª_ i
,
ªªi j
importe
ªªk r
,
ªªr s
idCaja
ªªt z
,
ªªz {
idMoneda
ºº 
,
ºº 
tipoDeCambio
ºº *
,
ºº* +
null
ºº, 0
,
ºº0 1
idBeneficiario
ºº2 @
)
ºº@ A
;
ººA B
egresoVarios
ææ 
.
ææ 
Comprobante
ææ (
=
ææ) *
comprobante
ææ+ 6
;
ææ6 7
Transaccion
¿¿ !
ordenDeEgresoVarios
¿¿ /
=
¿¿0 1
new
¿¿2 5
Transaccion
¿¿6 A
(
¿¿A B%
codigosOperacion_Logica
¿¿B Y
.
¿¿Y Z3
%ObtenerSiguienteCodigoParaFacturacion
¿¿Z 
(¿¿ Ä
codigo¿¿Ä Ü
+¿¿á à
$str¿¿â è
,¿¿è ê!
TransaccionSettings
¡¡ '
.
¡¡' (
Default
¡¡( /
.
¡¡/ 0.
 IdTipoTransaccionOrdenPagoVarios
¡¡0 P
)
¡¡P Q
,
¡¡Q R
null
¡¡S W
,
¡¡W X
fechaActual
¡¡Y d
,
¡¡d e!
TransaccionSettings
¡¡f y
.
¡¡y z
Default¡¡z Å
.¡¡Å Ç0
 IdTipoTransaccionOrdenPagoVarios¡¡Ç ¢
,¡¡¢ £
idUnidadNegocio
¬¬ #
,
¬¬# $
true
¬¬% )
,
¬¬) *
fechaActual
¬¬+ 6
,
¬¬6 7
fechaActual
¬¬8 C
,
¬¬C D
observacion
¬¬E P
,
¬¬P Q
fechaActual
¬¬R ]
,
¬¬] ^

idEmpleado
¬¬_ i
,
¬¬i j
importe
¬¬k r
,
¬¬r s
idCaja
¬¬t z
,
¬¬z {
idMoneda¬¬| Ñ
,¬¬Ñ Ö
tipoDeCambio¬¬Ü í
,¬¬í ì
null¬¬î ò
,¬¬ò ô
idBeneficiario¬¬ö ®
)¬¬® ©
;¬¬© ™!
ordenDeEgresoVarios
ƒƒ #
.
ƒƒ# $
Comprobante
ƒƒ$ /
=
ƒƒ0 1
comprobante
ƒƒ2 =
;
ƒƒ= >!
ordenDeEgresoVarios
∆∆ #
.
∆∆# $
Transaccion2
∆∆$ 0
=
∆∆1 2
egresoVarios
∆∆3 ?
;
∆∆? @ 
Estado_transaccion
»» ",
estadoDeLaOrdenDeIngresoVarios
»»# A
=
»»B C
new
»»D G 
Estado_transaccion
»»H Z
(
»»Z [

idEmpleado
»»[ e
,
»»e f
MaestroSettings
»»g v
.
»»v w
Default
»»w ~
.
»»~ /
 IdDetalleMaestroEstadoConfirmado»» ü
,»»ü †
fechaActual»»° ¨
,»»¨ ≠
$str
…… [
)
……[ \
;
……\ ]!
ordenDeEgresoVarios
   #
.
  # $ 
Estado_transaccion
  $ 6
.
  6 7
Add
  7 :
(
  : ;,
estadoDeLaOrdenDeIngresoVarios
  ; Y
)
  Y Z
;
  Z [+
Actor_negocio_por_transaccion
ÃÃ -(
actorNegocioPorTransaccion
ÃÃ. H
=
ÃÃI J
new
ÃÃK N+
Actor_negocio_por_transaccion
ÃÃO l
(
ÃÃl m
)
ÃÃm n
{
ÃÃo p
id_actor_negocioÃÃq Å
=ÃÃÇ É
idEmisorÃÃÑ å
,ÃÃå ç
id_rolÃÃé î
=ÃÃï ñ
ActorSettingsÃÃó §
.ÃÃ§ •
DefaultÃÃ• ¨
.ÃÃ¨ ≠
IdRolClienteÃÃ≠ π
,ÃÃπ ∫
TransaccionÃÃª ∆
=ÃÃ« »#
ordenDeEgresoVariosÃÃ… ‹
}ÃÃ› ﬁ
;ÃÃﬁ ﬂ
egresoVarios
ŒŒ 
.
ŒŒ 
Transaccion1
ŒŒ )
.
ŒŒ) *
Add
ŒŒ* -
(
ŒŒ- .!
ordenDeEgresoVarios
ŒŒ. A
)
ŒŒA B
;
ŒŒB C
Cuota
–– 
cuota
–– 
=
–– 
new
–– !
Cuota
––" '
(
––' (2
$ObtenerSiguienteCodigoParaNuevaCuota
––( L
(
––L M
false
––M R
,
––R S
fechaActual
––T _
.
––_ `
Year
––` d
)
––d e
+
––f g
$str
––h k
+
––l m
$num
––n o
,
––o p
fechaActual
––q |
,
––| }
fechaActual––~ â
,––â ä#
ordenDeEgresoVarios––ã û
.––û ü
importe_total––ü ¨
,––¨ ≠#
ordenDeEgresoVarios––Æ ¡
.––¡ ¬
importe_total––¬ œ
,––œ –
$str
—— P
,
——P Q
false
——R W
)
——W X
;
——X Y!
ordenDeEgresoVarios
““ #
.
““# $
Cuota
““$ )
.
““) *
Add
““* -
(
““- .
cuota
““. 3
)
““3 4
;
““4 5
string
‘‘ 

codigoPago
‘‘ !
=
‘‘" #
cuota
‘‘$ )
.
‘‘) *
codigo
‘‘* 0
+
‘‘1 2
$str
‘‘3 8
;
‘‘8 9
Transaccion
’’ 
pago
’’  
=
’’! "
new
’’# &
Transaccion
’’' 2
(
’’2 3

codigoPago
’’3 =
,
’’= >
null
’’? C
,
’’C D
fechaActual
’’E P
,
’’P Q!
TransaccionSettings
’’R e
.
’’e f
Default
’’f m
.
’’m n0
!IdTipoTransaccionPagoDePagoVarios’’n è
,’’è ê
idUnidadNegocio’’ë †
,’’† °
true
÷÷ 
,
÷÷ 
fechaActual
÷÷ %
,
÷÷% &
fechaActual
÷÷' 2
,
÷÷2 3
$str
÷÷4 6
,
÷÷6 7
fechaActual
÷÷8 C
,
÷÷C D

idEmpleado
÷÷E O
,
÷÷O P
importe
÷÷Q X
,
÷÷X Y
idCaja
÷÷Z `
,
÷÷` a
idMoneda
÷÷b j
,
÷÷j k
tipoDeCambio
÷÷l x
,
÷÷x y
null
÷÷z ~
,
÷÷~ 
idBeneficiario÷÷Ä é
)÷÷é è
;÷÷è ê
pago
ÿÿ 
.
ÿÿ 
Comprobante
ÿÿ  
=
ÿÿ! "
comprobante
ÿÿ# .
;
ÿÿ. / 
Estado_transaccion
⁄⁄ "
estadoTransaccion
⁄⁄# 4
=
⁄⁄5 6
new
⁄⁄7 : 
Estado_transaccion
⁄⁄; M
(
⁄⁄M N

idEmpleado
⁄⁄N X
,
⁄⁄X Y
MaestroSettings
⁄⁄Z i
.
⁄⁄i j
Default
⁄⁄j q
.
⁄⁄q r/
 IdDetalleMaestroEstadoConfirmado⁄⁄r í
,⁄⁄í ì
fechaActual⁄⁄î ü
,⁄⁄ü †
$str⁄⁄° Á
)⁄⁄Á Ë
;⁄⁄Ë È
pago
€€ 
.
€€  
Estado_transaccion
€€ '
.
€€' (
Add
€€( +
(
€€+ ,
estadoTransaccion
€€, =
)
€€= >
;
€€> ?

Pago_cuota
›› 
	pagoCuota
›› $
=
››% &
new
››' *

Pago_cuota
››+ 5
(
››5 6
)
››6 7
;
››7 8
	pagoCuota
ﬁﬁ 
.
ﬁﬁ 
Transaccion
ﬁﬁ %
=
ﬁﬁ& '
pago
ﬁﬁ( ,
;
ﬁﬁ, -
	pagoCuota
ﬂﬂ 
.
ﬂﬂ 
Cuota
ﬂﬂ 
=
ﬂﬂ  !
cuota
ﬂﬂ" '
;
ﬂﬂ' (
	pagoCuota
‡‡ 
.
‡‡ 
importe
‡‡ !
=
‡‡" #
importe
‡‡$ +
;
‡‡+ ,
pago
·· 
.
·· 

Pago_cuota
·· 
.
··  
Add
··  #
(
··# $
	pagoCuota
··$ -
)
··- .
;
··. /

Traza_pago
„„ 
traza
„„  
=
„„! "
new
„„# &

Traza_pago
„„' 1
(
„„1 2
MaestroSettings
„„2 A
.
„„A B
Default
„„B I
.
„„I J1
#IdDetalleMaestroMedioDepagoEfectivo
„„J m
,
„„m n
observacion
„„o z
,
„„z {
MaestroSettings„„| ã
.„„ã å
Default„„å ì
.„„ì î9
)IdDetalleMaestroEntidadBancariaPorDefecto„„î Ω
)„„Ω æ
;„„æ ø
pago
‰‰ 
.
‰‰ 

Traza_pago
‰‰ 
.
‰‰  
Add
‰‰  #
(
‰‰# $
traza
‰‰$ )
)
‰‰) *
;
‰‰* + 
Estado_transaccion
ÊÊ "
estadoDelPago
ÊÊ# 0
=
ÊÊ1 2
new
ÊÊ3 6 
Estado_transaccion
ÊÊ7 I
(
ÊÊI J

idEmpleado
ÊÊJ T
,
ÊÊT U
MaestroSettings
ÊÊV e
.
ÊÊe f
Default
ÊÊf m
.
ÊÊm n/
 IdDetalleMaestroEstadoConfirmadoÊÊn é
,ÊÊé è
fechaActualÊÊê õ
,ÊÊõ ú
$strÊÊù ‰
)ÊÊ‰ Â
;ÊÊÂ Ê
pago
ÁÁ 
.
ÁÁ  
Estado_transaccion
ÁÁ '
.
ÁÁ' (
Add
ÁÁ( +
(
ÁÁ+ ,
estadoDelPago
ÁÁ, 9
)
ÁÁ9 :
;
ÁÁ: ;
egresoVarios
ÈÈ 
.
ÈÈ 
Transaccion1
ÈÈ )
.
ÈÈ) *
Add
ÈÈ* -
(
ÈÈ- .
pago
ÈÈ. 2
)
ÈÈ2 3
;
ÈÈ3 4
return
ÎÎ $
transaccionRepositorio
ÎÎ -
.
ÎÎ- .
CrearTransaccion
ÎÎ. >
(
ÎÎ> ?
egresoVarios
ÎÎ? K
)
ÎÎK L
;
ÎÎL M
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* Y
,
ÔÔY Z
e
ÔÔ[ \
)
ÔÔ\ ]
;
ÔÔ] ^
}
 
}
ÒÒ 	
private
˜˜ 
string
˜˜ 2
$ObtenerSiguienteCodigoParaNuevaCuota
˜˜ ;
(
˜˜; <
bool
˜˜< @
	porCobrar
˜˜A J
,
˜˜J K
int
˜˜L O
year
˜˜P T
)
˜˜T U
{
¯¯ 	
try
˘˘ 
{
˙˙ 
string
˚˚ 
	empiezaEn
˚˚  
=
˚˚! "
(
˚˚# $
	porCobrar
˚˚$ -
?
˚˚. /
$str
˚˚0 3
:
˚˚4 5
$str
˚˚6 9
)
˚˚9 :
+
˚˚; <
year
˚˚= A
.
˚˚A B
ToString
˚˚B J
(
˚˚J K
)
˚˚K L
;
˚˚L M
int
¸¸ 
maximo
¸¸ 
=
¸¸ $
transaccionRepositorio
¸¸ 3
.
¸¸3 4&
ObtenerMaximoCodigoCuota
¸¸4 L
(
¸¸L M
	empiezaEn
¸¸M V
)
¸¸V W
;
¸¸W X
return
˝˝ 
	empiezaEn
˝˝  
+
˝˝! "
(
˝˝# $
maximo
˝˝$ *
+
˝˝+ ,
$num
˝˝- .
)
˝˝. /
.
˝˝/ 0
ToString
˝˝0 8
(
˝˝8 9
)
˝˝9 :
;
˝˝: ;
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* a
,
ÅÅa b
e
ÅÅc d
)
ÅÅd e
;
ÅÅe f
}
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
List
ÖÖ 
<
ÖÖ !
Cuenta_Cobrar_Pagar
ÖÖ '
>
ÖÖ' (%
ObtenerCuentasPorCobrar
ÖÖ) @
(
ÖÖ@ A
)
ÖÖA B
{
ÜÜ 	
try
áá 
{
àà 
bool
ââ 
	porCobrar
ââ 
=
ââ  
true
ââ! %
;
ââ% &
return
ää $
transaccionRepositorio
ää -
.
ää- .+
ObtenerCuentasPorCobrarOPagar
ää. K
(
ääK L
	porCobrar
ääL U
)
ääU V
.
ääV W
ToList
ääW ]
(
ää] ^
)
ää^ _
;
ää_ `
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
LogicaException
éé )
(
éé) *
$str
éé* S
,
ééS T
e
ééU V
)
ééV W
;
ééW X
}
èè 
}
êê 	
public
íí 
List
íí 
<
íí !
Cuenta_Cobrar_Pagar
íí '
>
íí' ($
ObtenerCuentasPorPagar
íí) ?
(
íí? @
)
íí@ A
{
ìì 	
try
îî 
{
ïï 
bool
ññ 
	porCobrar
ññ 
=
ññ  
false
ññ! &
;
ññ& '
return
óó $
transaccionRepositorio
óó -
.
óó- .+
ObtenerCuentasPorCobrarOPagar
óó. K
(
óóK L
	porCobrar
óóL U
)
óóU V
.
óóV W
ToList
óóW ]
(
óó] ^
)
óó^ _
;
óó_ `
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
e
ôô 
)
ôô 
{
öö 
throw
õõ 
new
õõ 
LogicaException
õõ )
(
õõ) *
$str
õõ* R
,
õõR S
e
õõT U
)
õõU V
;
õõV W
}
úú 
}
ùù 	
public
üü 
List
üü 
<
üü !
Cuenta_Cobrar_Pagar
üü '
>
üü' (.
 ObtenerCuentasPorCobrarPorGrupos
üü) I
(
üüI J
bool
üüJ N
todosLosGrupos
üüO ]
,
üü] ^
int
üü_ b
?
üüb c
[
üüc d
]
üüd e
	idsGrupos
üüf o
)
üüo p
{
†† 	
try
°° 
{
¢¢ 
bool
££ 
	porCobrar
££ 
=
££  
true
££! %
;
££% &
return
§§ 
todosLosGrupos
§§ %
?
§§& '$
transaccionRepositorio
§§( >
.
§§> ?+
ObtenerCuentasPorCobrarOPagar
§§? \
(
§§\ ]
	porCobrar
§§] f
)
§§f g
.
§§g h
ToList
§§h n
(
§§n o
)
§§o p
:
§§q r%
transaccionRepositorio§§s â
.§§â ä6
&ObtenerCuentasPorCobrarOPagarPorGrupos§§ä ∞
(§§∞ ±
	porCobrar§§± ∫
,§§∫ ª
	idsGrupos§§º ≈
)§§≈ ∆
.§§∆ «
ToList§§« Õ
(§§Õ Œ
)§§Œ œ
;§§œ –
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* S
,
®®S T
e
®®U V
)
®®V W
;
®®W X
}
©© 
}
™™ 	
public
¨¨ 
List
¨¨ 
<
¨¨ !
Cuenta_Cobrar_Pagar
¨¨ '
>
¨¨' (-
ObtenerCuentasPorPagarPorGrupos
¨¨) H
(
¨¨H I
bool
¨¨I M
todosLosGrupos
¨¨N \
,
¨¨\ ]
int
¨¨^ a
?
¨¨a b
[
¨¨b c
]
¨¨c d
	idsGrupos
¨¨e n
)
¨¨n o
{
≠≠ 	
try
ÆÆ 
{
ØØ 
bool
∞∞ 
	porCobrar
∞∞ 
=
∞∞  
false
∞∞! &
;
∞∞& '
return
±± 
todosLosGrupos
±± %
?
±±& '$
transaccionRepositorio
±±( >
.
±±> ?+
ObtenerCuentasPorCobrarOPagar
±±? \
(
±±\ ]
	porCobrar
±±] f
)
±±f g
.
±±g h
ToList
±±h n
(
±±n o
)
±±o p
:
±±q r%
transaccionRepositorio±±s â
.±±â ä6
&ObtenerCuentasPorCobrarOPagarPorGrupos±±ä ∞
(±±∞ ±
	porCobrar±±± ∫
,±±∫ ª
	idsGrupos±±º ≈
)±±≈ ∆
.±±∆ «
ToList±±« Õ
(±±Õ Œ
)±±Œ œ
;±±œ –
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
e
≥≥ 
)
≥≥ 
{
¥¥ 
throw
µµ 
new
µµ 
LogicaException
µµ )
(
µµ) *
$str
µµ* R
,
µµR S
e
µµT U
)
µµU V
;
µµV W
}
∂∂ 
}
∑∑ 	
public
∏∏ 
async
∏∏ 
Task
∏∏ 
<
∏∏ 
List
∏∏ 
<
∏∏ .
 TipoDeComprobanteParaTransaccion
∏∏ ?
>
∏∏? @
>
∏∏@ A1
#ObtenerTiposDeComprobanteParaCobrar
∏∏B e
(
∏∏e f
int
∏∏f i%
idTipoTransaccionOrden∏∏j Ä
,∏∏Ä Å
int∏∏Ç Ö"
idCentroDeAtencion∏∏Ü ò
)∏∏ò ô
{
ππ 	
try
∫∫ 
{
ªª 
int
ºº #
idTipoTransaccionPago
ºº )
=
ºº* +
Diccionario
ºº, 7
.
ºº7 8-
MapeoOrdenVsMovimientoEconomico
ºº8 W
.
ººW X
Single
ººX ^
(
ºº^ _
m
ºº_ `
=>
ººa c
m
ººd e
.
ººe f
Key
ººf i
==
ººj l%
idTipoTransaccionOrdenººm É
)ººÉ Ñ
.ººÑ Ö
ValueººÖ ä
;ººä ã
var
ΩΩ 
	resultado
ΩΩ 
=
ΩΩ 
(
ΩΩ  !
await
ΩΩ! &$
transaccionRepositorio
ΩΩ' =
.
ΩΩ= >8
*ObtenerTipoComprobantePorTipoDeTransaccion
ΩΩ> h
(
ΩΩh i#
idTipoTransaccionPago
ΩΩi ~
)
ΩΩ~ 
)ΩΩ Ä
.ΩΩÄ Å
ToListΩΩÅ á
(ΩΩá à
)ΩΩà â
;ΩΩâ ä
foreach
ææ 
(
ææ 
var
ææ 
tipo
ææ !
in
ææ" $
	resultado
ææ% .
)
ææ. /
{
øø 
tipo
¿¿ 
.
¿¿ 
Detalle_maestro
¿¿ (
.
¿¿( )
Serie_comprobante
¿¿) :
=
¿¿; <
tipo
¿¿= A
.
¿¿A B
Detalle_maestro
¿¿B Q
.
¿¿Q R
Serie_comprobante
¿¿R c
.
¿¿c d
Where
¿¿d i
(
¿¿i j
sc
¿¿j l
=>
¿¿m o
sc
¿¿p r
.
¿¿r s
id_propietario¿¿s Å
==¿¿Ç Ñ"
idCentroDeAtencion¿¿Ö ó
&&¿¿ò ö
sc¿¿õ ù
.¿¿ù û

es_vigente¿¿û ®
)¿¿® ©
.¿¿© ™
ToList¿¿™ ∞
(¿¿∞ ±
)¿¿± ≤
;¿¿≤ ≥
}
¡¡ 
return
¬¬ .
 TipoDeComprobanteParaTransaccion
¬¬ 7
.
¬¬7 8
Convert
¬¬8 ?
(
¬¬? @
	resultado
¬¬@ I
)
¬¬I J
;
¬¬J K
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
e
ƒƒ 
)
ƒƒ 
{
≈≈ 
throw
∆∆ 
new
∆∆ 
LogicaException
∆∆ )
(
∆∆) *
$str
∆∆* a
,
∆∆a b
e
∆∆c d
)
∆∆d e
;
∆∆e f
}
«« 
}
»» 	
public
   
async
   
Task
   
<
   
List
   
<
   .
 TipoDeComprobanteParaTransaccion
   ?
>
  ? @
>
  @ A0
"ObtenerTiposDeComprobanteParaPagar
  B d
(
  d e
int
  e h$
idTipoTransaccionOrden
  i 
,   Ä
int  Å Ñ"
idCentroDeAtencion  Ö ó
)  ó ò
{
ÀÀ 	
try
ÃÃ 
{
ÕÕ 
int
ŒŒ #
idTipoTransaccionPago
ŒŒ )
=
ŒŒ* +
Diccionario
ŒŒ, 7
.
ŒŒ7 8-
MapeoOrdenVsMovimientoEconomico
ŒŒ8 W
.
ŒŒW X
Single
ŒŒX ^
(
ŒŒ^ _
m
ŒŒ_ `
=>
ŒŒa c
m
ŒŒd e
.
ŒŒe f
Key
ŒŒf i
==
ŒŒj l%
idTipoTransaccionOrdenŒŒm É
)ŒŒÉ Ñ
.ŒŒÑ Ö
ValueŒŒÖ ä
;ŒŒä ã
var
œœ 
	resultado
œœ 
=
œœ 
(
œœ  !
await
œœ! &$
transaccionRepositorio
œœ' =
.
œœ= >8
*ObtenerTipoComprobantePorTipoDeTransaccion
œœ> h
(
œœh i#
idTipoTransaccionPago
œœi ~
)
œœ~ 
)œœ Ä
.œœÄ Å
ToListœœÅ á
(œœá à
)œœà â
;œœâ ä
foreach
–– 
(
–– 
var
–– 
tipo
–– !
in
––" $
	resultado
––% .
)
––. /
{
—— 
tipo
““ 
.
““ 
Detalle_maestro
““ (
.
““( )
Serie_comprobante
““) :
=
““; <
tipo
““= A
.
““A B
Detalle_maestro
““B Q
.
““Q R
Serie_comprobante
““R c
.
““c d
Where
““d i
(
““i j
sc
““j l
=>
““m o
sc
““p r
.
““r s
id_propietario““s Å
==““Ç Ñ"
idCentroDeAtencion““Ö ó
&&““ò ö
sc““õ ù
.““ù û

es_vigente““û ®
)““® ©
.““© ™
ToList““™ ∞
(““∞ ±
)““± ≤
;““≤ ≥
}
”” 
return
‘‘ .
 TipoDeComprobanteParaTransaccion
‘‘ 7
.
‘‘7 8
Convert
‘‘8 ?
(
‘‘? @
	resultado
‘‘@ I
)
‘‘I J
;
‘‘J K
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
◊◊ 
throw
ÿÿ 
new
ÿÿ 
LogicaException
ÿÿ )
(
ÿÿ) *
$str
ÿÿ* `
,
ÿÿ` a
e
ÿÿb c
)
ÿÿc d
;
ÿÿd e
}
ŸŸ 
}
⁄⁄ 	
public
‹‹ "
CuentaPorCobrarPagar
‹‹ #,
ObtenerCuentaIncluidoOperacion
‹‹$ B
(
‹‹B C
long
‹‹C G
idCuota
‹‹H O
)
‹‹O P
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
return
‡‡ 
(
‡‡ 
new
‡‡ "
CuentaPorCobrarPagar
‡‡ 0
(
‡‡0 1$
transaccionRepositorio
‡‡1 G
.
‡‡G H+
ObtenerCuotaIncluidoOperacion
‡‡H e
(
‡‡e f
idCuota
‡‡f m
)
‡‡m n
)
‡‡n o
)
‡‡o p
;
‡‡p q
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
e
‚‚ 
)
‚‚ 
{
„„ 
throw
‰‰ 
new
‰‰ 
LogicaException
‰‰ )
(
‰‰) *
$str
‰‰* \
,
‰‰\ ]
e
‰‰^ _
)
‰‰_ `
;
‰‰` a
}
ÂÂ 
}
ÊÊ 	
public
ÏÏ 
string
ÏÏ 

CodigoPago
ÏÏ  
(
ÏÏ  !
Cuota
ÏÏ! &
cuota
ÏÏ' ,
)
ÏÏ, -
{
ÌÌ 	
string
ÓÓ 

codigoPago
ÓÓ 
=
ÓÓ 
cuota
ÓÓ  %
.
ÓÓ% &

Pago_cuota
ÓÓ& 0
==
ÓÓ1 3
null
ÓÓ4 8
?
ÓÓ9 :
cuota
ÓÓ; @
.
ÓÓ@ A
codigo
ÓÓA G
+
ÓÓH I
$str
ÓÓJ N
+
ÓÓO P
$num
ÓÓQ R
.
ÓÓR S
ToString
ÓÓS [
(
ÓÓ[ \
)
ÓÓ\ ]
:
ÓÓ^ _
cuota
ÓÓ` e
.
ÓÓe f
codigo
ÓÓf l
+
ÓÓm n
$str
ÓÓo s
+
ÓÓt u
(
ÓÓv w
cuota
ÓÓw |
.
ÓÓ| }

Pago_cuotaÓÓ} á
.ÓÓá à
CountÓÓà ç
(ÓÓç é
)ÓÓé è
+ÓÓê ë
$numÓÓí ì
)ÓÓì î
.ÓÓî ï
ToStringÓÓï ù
(ÓÓù û
)ÓÓû ü
;ÓÓü †
return
ÔÔ 

codigoPago
ÔÔ 
;
ÔÔ 
}
 	
public
ÚÚ 
string
ÚÚ 

CodigoPago
ÚÚ  
(
ÚÚ  !
DateTime
ÚÚ! )
fecha
ÚÚ* /
,
ÚÚ/ 0
int
ÚÚ1 4$
idTipoTransaccionOrden
ÚÚ5 K
)
ÚÚK L
{
ÛÛ 	
return
ÙÙ %
codigosOperacion_Logica
ÙÙ *
.
ÙÙ* +3
%ObtenerSiguienteCodigoParaFacturacion
ÙÙ+ P
(
ÙÙP Q
$str
ÙÙQ U
+
ÙÙV W
fecha
ÙÙX ]
.
ÙÙ] ^
ToString
ÙÙ^ f
(
ÙÙf g
$str
ÙÙg m
)
ÙÙm n
,
ÙÙn o
Diccionario
ÙÙp {
.
ÙÙ{ |.
MapeoOrdenVsMovimientoEconomicoÙÙ| õ
.ÙÙõ ú
SingleÙÙú ¢
(ÙÙ¢ £
mÙÙ£ §
=>ÙÙ• ß
mÙÙ® ©
.ÙÙ© ™
KeyÙÙ™ ≠
==ÙÙÆ ∞&
idTipoTransaccionOrdenÙÙ± «
)ÙÙ« »
.ÙÙ» …
ValueÙÙ… Œ
)ÙÙŒ œ
;ÙÙœ –
}
ıı 	
public
˜˜ 
Cuota
˜˜ 
GenerarCuotaUnica
˜˜ &
(
˜˜& '
int
˜˜' *
idComprador
˜˜+ 6
,
˜˜6 7
decimal
˜˜8 ?
importeTotal
˜˜@ L
,
˜˜L M
DateTime
˜˜N V
fechaRegistro
˜˜W d
,
˜˜d e
bool
˜˜f j
	porCobrar
˜˜k t
,
˜˜t u
int
˜˜v y 
estadoTransaccion˜˜z ã
,˜˜ã å
string˜˜ç ì,
observacionEstadoTransaccion˜˜î ∞
)˜˜∞ ±
{
¯¯ 	
Cuota
˙˙ 
cuota
˙˙ 
=
˙˙ 
new
˙˙ 
Cuota
˙˙ #
(
˙˙# $2
$ObtenerSiguienteCodigoParaNuevaCuota
˙˙$ H
(
˙˙H I
	porCobrar
˙˙I R
,
˙˙R S
fechaRegistro
˙˙T a
.
˙˙a b
Year
˙˙b f
)
˙˙f g
+
˙˙h i
$str
˙˙j m
+
˙˙n o
$num
˙˙p q
,
˙˙q r
fechaRegistro˙˙s Ä
,˙˙Ä Å
fechaRegistro˙˙Ç è
,˙˙è ê
importeTotal˙˙ë ù
,˙˙ù û
$str˙˙ü …
,˙˙…  
	porCobrar˙˙À ‘
)˙˙‘ ’
;˙˙’ ÷
return
˚˚ 
cuota
˚˚ 
;
˚˚ 
}
¸¸ 	
public
˛˛ 
Cuota
˛˛ -
GenerarCuotaUnicaConPagoACuenta
˛˛ 4
(
˛˛4 5
int
˛˛5 8
idComprador
˛˛9 D
,
˛˛D E
decimal
˛˛F M
importeTotal
˛˛N Z
,
˛˛Z [
DateTime
˛˛\ d
fechaRegistro
˛˛e r
,
˛˛r s
bool
˛˛t x
	porCobrar˛˛y Ç
)˛˛Ç É
{
ˇˇ 	
Cuota
ÅÅ 
cuota
ÅÅ 
=
ÅÅ 
new
ÅÅ 
Cuota
ÅÅ #
(
ÅÅ# $2
$ObtenerSiguienteCodigoParaNuevaCuota
ÅÅ$ H
(
ÅÅH I
	porCobrar
ÅÅI R
,
ÅÅR S
fechaRegistro
ÅÅT a
.
ÅÅa b
Year
ÅÅb f
)
ÅÅf g
+
ÅÅh i
$str
ÅÅj m
+
ÅÅn o
$num
ÅÅp q
,
ÅÅq r
fechaRegistroÅÅs Ä
,ÅÅÄ Å
fechaRegistroÅÅÇ è
,ÅÅè ê
importeTotalÅÅë ù
,ÅÅù û
importeTotalÅÅü ´
,ÅÅ´ ¨
$strÅÅ≠ ◊
,ÅÅ◊ ÿ
	porCobrarÅÅŸ ‚
)ÅÅ‚ „
;ÅÅ„ ‰
return
ÇÇ 
cuota
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
List
ÖÖ 
<
ÖÖ 
Cuota
ÖÖ 
>
ÖÖ 
GenerarCuotas
ÖÖ (
(
ÖÖ( )
int
ÖÖ) ,
idComprador
ÖÖ- 8
,
ÖÖ8 9
List
ÖÖ: >
<
ÖÖ> ?
Cuota
ÖÖ? D
>
ÖÖD E
cuotas
ÖÖF L
,
ÖÖL M
DateTime
ÖÖN V
fechaRegistro
ÖÖW d
,
ÖÖd e
bool
ÖÖf j
	porCobrar
ÖÖk t
,
ÖÖt u
int
ÖÖv y 
estadoTransaccionÖÖz ã
,ÖÖã å
stringÖÖç ì,
observacionEstadoTransaccionÖÖî ∞
)ÖÖ∞ ±
{
ÜÜ 	
List
áá 
<
áá 
Cuota
áá 
>
áá 
cuotasGeneradas
áá '
=
áá( )
new
áá* -
List
áá. 2
<
áá2 3
Cuota
áá3 8
>
áá8 9
(
áá9 :
)
áá: ;
;
áá; <
string
àà 
codigoCuota
àà 
=
àà  2
$ObtenerSiguienteCodigoParaNuevaCuota
àà! E
(
ààE F
	porCobrar
ààF O
,
ààO P
fechaRegistro
ààQ ^
.
àà^ _
Year
àà_ c
)
ààc d
;
ààd e
int
ââ 
cont
ââ 
=
ââ 
$num
ââ 
;
ââ 
foreach
ää 
(
ää 
var
ää 
item
ää 
in
ää  
cuotas
ää! '
)
ää' (
{
ãã 
Cuota
åå 
cuota
åå 
=
åå 
new
åå !
Cuota
åå" '
(
åå' (
codigoCuota
åå( 3
+
åå4 5
$str
åå6 9
+
åå: ;
cont
åå< @
,
åå@ A
fechaRegistro
ååB O
,
ååO P
item
ååQ U
.
ååU V
fecha_vencimiento
ååV g
,
ååg h
item
ååi m
.
ååm n
capital
åån u
,
ååu v
item
ååw {
.
åå{ |
interesåå| É
,ååÉ Ñ
itemååÖ â
.ååâ ä
totalååä è
,ååè ê
$strååë ©
+åå™ ´
contåå¨ ∞
,åå∞ ±
	porCobraråå≤ ª
,ååª º
itemååΩ ¡
.åå¡ ¬
cuota_inicialåå¬ œ
)ååœ –
;åå– —
cuotasGeneradas
çç 
.
çç  
Add
çç  #
(
çç# $
cuota
çç$ )
)
çç) *
;
çç* +
cont
éé 
++
éé 
;
éé 
}
èè 
return
êê 
cuotasGeneradas
êê "
;
êê" #
}
ëë 	
internal
òò 
void
òò "
ValidarImporteAPagar
òò *
(
òò* +
int
òò+ .
cantidadDeCuotas
òò/ ?
,
òò? @
decimal
òòA H
totalAPagar
òòI T
,
òòT U
decimal
òòV ]

deudaTotal
òò^ h
)
òòh i
{
ôô 	
if
öö 
(
öö 

deudaTotal
öö 
<
öö 
totalAPagar
öö (
)
öö( )
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
String
úú* 0
.
úú0 1
Format
úú1 7
(
úú7 8
$strúú8 ±
,úú± ≤
totalAPagarúú≥ æ
,úúæ ø

deudaTotalúú¿  
)úú  À
)úúÀ Ã
;úúÃ Õ
}
ùù 
if
ûû 
(
ûû 
cantidadDeCuotas
ûû  
<=
ûû! #
$num
ûû$ %
)
ûû% &
{
üü 
throw
†† 
new
†† 
LogicaException
†† )
(
††) *
$str
††* r
)
††r s
;
††s t
}
°° 
if
¢¢ 
(
¢¢ 
totalAPagar
¢¢ 
<=
¢¢ 
$num
¢¢  
)
¢¢  !
{
££ 
throw
§§ 
new
§§ 
LogicaException
§§ )
(
§§) *
$str
§§* Q
)
§§Q R
;
§§R S
}
•• 
}
¶¶ 	
public
©© 
void
©© !
ResolverPagosCuotas
©© '
(
©©' (
Transaccion
©©( 3
pago
©©4 8
,
©©8 9
List
©©: >
<
©©> ?
Cuota
©©? D
>
©©D E
cuotas
©©F L
,
©©L M
decimal
©©N U 
importeTotalAPagar
©©V h
)
©©h i
{
™™ 	
decimal
¨¨ 
importeParcial
¨¨ "
;
¨¨" #
decimal
≠≠ 
importeDisponible
≠≠ %
=
≠≠& ' 
importeTotalAPagar
≠≠( :
;
≠≠: ;
int
ÆÆ 
numeroCuota
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ  
while
ØØ 
(
ØØ 
importeDisponible
ØØ $
>
ØØ% &
$num
ØØ' (
)
ØØ( )
{
∞∞ 
Cuota
±± 
cuotaAPagar
±± !
=
±±" #
cuotas
±±$ *
.
±±* +
	ElementAt
±±+ 4
(
±±4 5
numeroCuota
±±5 @
++
±±@ B
)
±±B C
;
±±C D
var
≤≤ 
deuda
≤≤ 
=
≤≤ 
cuotaAPagar
≤≤ '
.
≤≤' (
saldo
≤≤( -
;
≤≤- .
importeParcial
≥≥ 
=
≥≥  
importeDisponible
≥≥! 2
>=
≥≥3 5
deuda
≥≥6 ;
?
≥≥< =
deuda
≥≥> C
:
≥≥D E
importeDisponible
≥≥F W
;
≥≥W X$
VincularPagoConLaCuota
µµ &
(
µµ& '
pago
µµ' +
,
µµ+ ,
cuotaAPagar
µµ- 8
,
µµ8 9
importeParcial
µµ: H
)
µµH I
;
µµI J
cuotaAPagar
∑∑ 
.
∑∑ 
pago_a_cuenta
∑∑ )
+=
∑∑* ,
importeParcial
∑∑- ;
;
∑∑; <
cuotaAPagar
∏∏ 
.
∏∏ 
saldo
∏∏ !
=
∏∏" #
cuotaAPagar
∏∏$ /
.
∏∏/ 0
total
∏∏0 5
-
∏∏6 7
cuotaAPagar
∏∏8 C
.
∏∏C D
pago_a_cuenta
∏∏D Q
;
∏∏Q R
importeDisponible
ππ !
-=
ππ" $
importeParcial
ππ% 3
;
ππ3 4
}
∫∫ 
}
ªª 	
public
√√ 
void
√√ $
VincularPagoConLaCuota
√√ *
(
√√* +
Transaccion
√√+ 6
pago
√√7 ;
,
√√; <
Cuota
√√= B
cuota
√√C H
,
√√H I
decimal
√√J Q
importe
√√R Y
)
√√Y Z
{
ƒƒ 	

Pago_cuota
≈≈ 
	pagoCuota
≈≈  
=
≈≈! "
new
≈≈# &

Pago_cuota
≈≈' 1
{
∆∆ 
Transaccion
«« 
=
«« 
pago
«« "
,
««" #
Cuota
»» 
=
»» 
cuota
»» 
,
»» 
importe
…… 
=
…… 
importe
…… !
}
   
;
   
pago
ÀÀ 
.
ÀÀ 

Pago_cuota
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ  
	pagoCuota
ÀÀ  )
)
ÀÀ) *
;
ÀÀ* +
}
ÃÃ 	
public
œœ 
OperationResult
œœ (
GuardarMovimientoEconomico
œœ 9
(
œœ9 :"
MovimientoEconomico_
œœ: N

movimiento
œœO Y
,
œœY Z$
UserProfileSessionData
œœ[ q
sesionDeUsuarioœœr Å
)œœÅ Ç
{
–– 	
try
—— 
{
““ 
DateTime
‘‘ 
fechaActual
‘‘ $
=
‘‘% &
DateTimeUtil
‘‘' 3
.
‘‘3 4
FechaActual
‘‘4 ?
(
‘‘? @
)
‘‘@ A
;
‘‘A B
int
’’ #
idTipoTransaccionPago
’’ )
=
’’* +
Diccionario
’’, 7
.
’’7 8-
MapeoOrdenVsMovimientoEconomico
’’8 W
.
’’W X
Single
’’X ^
(
’’^ _
m
’’_ `
=>
’’a c
m
’’d e
.
’’e f
Key
’’f i
==
’’j l

movimiento
’’m w
.
’’w x 
IdTipoTransaccion’’x â
)’’â ä
.’’ä ã
Value’’ã ê
;’’ê ë
int
÷÷ 
idUnidadNegocio
÷÷ #
=
÷÷$ %
MaestroSettings
÷÷& 5
.
÷÷5 6
Default
÷÷6 =
.
÷÷= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
÷÷> h
;
÷÷h i
decimal
◊◊ 
tipoDeCambio
◊◊ $
=
◊◊% &
$num
◊◊' (
;
◊◊( )
int
ÿÿ 
idMoneda
ÿÿ 
=
ÿÿ 
MaestroSettings
ÿÿ .
.
ÿÿ. /
Default
ÿÿ/ 6
.
ÿÿ6 7)
IdDetalleMaestroMonedaSoles
ÿÿ7 R
;
ÿÿR S
Serie_comprobante
⁄⁄ !
serie
⁄⁄" '
=
⁄⁄( )$
transaccionRepositorio
⁄⁄* @
.
⁄⁄@ A'
ObtenerSerieDeComprobante
⁄⁄A Z
(
⁄⁄Z [

movimiento
⁄⁄[ e
.
⁄⁄e f
Comprobante
⁄⁄f q
.
⁄⁄q r
Serie
⁄⁄r w
.
⁄⁄w x
Id
⁄⁄x z
)
⁄⁄z {
;
⁄⁄{ |
Comprobante
€€ 
comprobante
€€ '
=
€€( )3
%GenerarComprobantePropioAutonumerable
€€* O
(
€€O P
serie
€€P U
.
€€U V
id
€€V X
)
€€X Y
;
€€Y Z
string
›› 

codigoPago
›› !
=
››" #

CodigoPago
››$ .
(
››. /
fechaActual
››/ :
,
››: ;

movimiento
››< F
.
››F G
IdTipoTransaccion
››G X
)
››X Y
;
››Y Z
Transaccion
ﬁﬁ !
movimientoEconomico
ﬁﬁ /
=
ﬁﬁ0 1
new
ﬁﬁ2 5
Transaccion
ﬁﬁ6 A
(
ﬁﬁA B

codigoPago
ﬁﬁB L
,
ﬁﬁL M
null
ﬁﬁN R
,
ﬁﬁR S
fechaActual
ﬁﬁT _
,
ﬁﬁ_ `#
idTipoTransaccionPago
ﬁﬁa v
,
ﬁﬁv w
idUnidadNegocioﬁﬁx á
,ﬁﬁá à
trueﬁﬁâ ç
,ﬁﬁç é
fechaActualﬁﬁè ö
,ﬁﬁö õ
fechaActualﬁﬁú ß
,ﬁﬁß ®

movimientoﬁﬁ© ≥
.ﬁﬁ≥ ¥
Observacionﬁﬁ¥ ø
,ﬁﬁø ¿
fechaActualﬁﬁ¡ Ã
,ﬁﬁÃ Õ
sesionDeUsuarioﬁﬁŒ ›
.ﬁﬁ› ﬁ
Empleadoﬁﬁﬁ Ê
.ﬁﬁÊ Á
IdﬁﬁÁ È
,ﬁﬁÈ Í

movimientoﬁﬁÎ ı
.ﬁﬁı ˆ
Totalﬁﬁˆ ˚
,ﬁﬁ˚ ¸
sesionDeUsuarioﬁﬁ˝ å
.ﬁﬁå ç.
IdCentroDeAtencionSeleccionadoﬁﬁç ´
,ﬁﬁ´ ¨
idMonedaﬁﬁ≠ µ
,ﬁﬁµ ∂
tipoDeCambioﬁﬁ∑ √
,ﬁﬁ√ ƒ
nullﬁﬁ≈ …
,ﬁﬁ…  

movimientoﬁﬁÀ ’
.ﬁﬁ’ ÷ 
IdActorComercialﬁﬁ÷ Ê
)ﬁﬁÊ Á
{
ﬂﬂ 
Comprobante
·· 
=
··  !
comprobante
··" -
}
‚‚ 
;
‚‚  
Estado_transaccion
‰‰ "
estadoTransaccion
‰‰# 4
=
‰‰5 6
new
‰‰7 : 
Estado_transaccion
‰‰; M
(
‰‰M N
sesionDeUsuario
‰‰N ]
.
‰‰] ^
Empleado
‰‰^ f
.
‰‰f g
Id
‰‰g i
,
‰‰i j
MaestroSettings
‰‰k z
.
‰‰z {
Default‰‰{ Ç
.‰‰Ç É0
 IdDetalleMaestroEstadoConfirmado‰‰É £
,‰‰£ §
fechaActual‰‰• ∞
,‰‰∞ ±
$str‰‰≤ ˇ
)‰‰ˇ Ä
;‰‰Ä Å!
movimientoEconomico
ÂÂ #
.
ÂÂ# $ 
Estado_transaccion
ÂÂ$ 6
.
ÂÂ6 7
Add
ÂÂ7 :
(
ÂÂ: ;
estadoTransaccion
ÂÂ; L
)
ÂÂL M
;
ÂÂM N
if
ÊÊ 
(
ÊÊ 

movimiento
ÊÊ 
.
ÊÊ 
Traza
ÊÊ $
.
ÊÊ$ %
MedioDePago
ÊÊ% 0
.
ÊÊ0 1
Id
ÊÊ1 3
==
ÊÊ4 6
MaestroSettings
ÊÊ7 F
.
ÊÊF G
Default
ÊÊG N
.
ÊÊN O9
+IdDetalleMaestroMedioDepagoDepositoEnCuenta
ÊÊO z
)
ÊÊz {
{
ÁÁ !
movimientoEconomico
ËË '
.
ËË' ('
id_actor_negocio_interno1
ËË( A
=
ËËB C

movimiento
ËËD N
.
ËËN O
Traza
ËËO T
.
ËËT U
CuentaBancaria
ËËU c
.
ËËc d
Id
ËËd f
;
ËËf g
}
ÈÈ 

Traza_pago
ÎÎ 
traza
ÎÎ  
=
ÎÎ! "
new
ÎÎ# &

Traza_pago
ÎÎ' 1
(
ÎÎ1 2

movimiento
ÎÎ2 <
.
ÎÎ< =
Traza
ÎÎ= B
.
ÎÎB C
MedioDePago
ÎÎC N
.
ÎÎN O
Id
ÎÎO Q
,
ÎÎQ R

movimiento
ÎÎS ]
.
ÎÎ] ^
Traza
ÎÎ^ c
.
ÎÎc d
InformacionDePago
ÎÎd u
,
ÎÎu v

movimientoÎÎw Å
.ÎÎÅ Ç
TrazaÎÎÇ á
.ÎÎá à!
EntidadFinancieraÎÎà ô
.ÎÎô ö
IdÎÎö ú
)ÎÎú ù
;ÎÎù û!
movimientoEconomico
ÏÏ #
.
ÏÏ# $

Traza_pago
ÏÏ$ .
.
ÏÏ. /
Add
ÏÏ/ 2
(
ÏÏ2 3
traza
ÏÏ3 8
)
ÏÏ8 9
;
ÏÏ9 :
for
ÓÓ 
(
ÓÓ 
int
ÓÓ 
i
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
i
ÓÓ  !
<
ÓÓ" #

movimiento
ÓÓ$ .
.
ÓÓ. /
	PagoCuota
ÓÓ/ 8
.
ÓÓ8 9
Count
ÓÓ9 >
(
ÓÓ> ?
)
ÓÓ? @
;
ÓÓ@ A
i
ÓÓB C
++
ÓÓC E
)
ÓÓE F
{
ÔÔ 
Cuota
 
cuota
 
=
  !$
transaccionRepositorio
" 8
.
8 9
ObtenerCuota
9 E
(
E F

movimiento
F P
.
P Q
	PagoCuota
Q Z
[
Z [
i
[ \
]
\ ]
.
] ^
IdCuota
^ e
)
e f
;
f g
cuota
ÒÒ 
.
ÒÒ 
Comprobante
ÒÒ %
=
ÒÒ& '
comprobante
ÒÒ( 3
;
ÒÒ3 4
cuota
ÚÚ 
.
ÚÚ 
pago_a_cuenta
ÚÚ '
+=
ÚÚ( *

movimiento
ÚÚ+ 5
.
ÚÚ5 6
	PagoCuota
ÚÚ6 ?
[
ÚÚ? @
i
ÚÚ@ A
]
ÚÚA B
.
ÚÚB C
Importe
ÚÚC J
;
ÚÚJ K
cuota
ÛÛ 
.
ÛÛ 
saldo
ÛÛ 
=
ÛÛ  !
cuota
ÛÛ" '
.
ÛÛ' (
total
ÛÛ( -
-
ÛÛ. /
cuota
ÛÛ0 5
.
ÛÛ5 6
pago_a_cuenta
ÛÛ6 C
-
ÛÛD E
cuota
ÛÛF K
.
ÛÛK L
revocado
ÛÛL T
;
ÛÛT U

Pago_cuota
ÙÙ 
	pagoCuota
ÙÙ (
=
ÙÙ) *
new
ÙÙ+ .

Pago_cuota
ÙÙ/ 9
(
ÙÙ9 :
)
ÙÙ: ;
{
ıı 
id_cuota
ˆˆ  
=
ˆˆ! "
cuota
ˆˆ# (
.
ˆˆ( )
id
ˆˆ) +
,
ˆˆ+ ,
importe
˜˜ 
=
˜˜  !

movimiento
˜˜" ,
.
˜˜, -
	PagoCuota
˜˜- 6
[
˜˜6 7
i
˜˜7 8
]
˜˜8 9
.
˜˜9 :
Importe
˜˜: A
}
¯¯ 
;
¯¯ !
movimientoEconomico
˙˙ '
.
˙˙' (

Pago_cuota
˙˙( 2
.
˙˙2 3
Add
˙˙3 6
(
˙˙6 7
	pagoCuota
˙˙7 @
)
˙˙@ A
;
˙˙A B
}
˚˚ 
return
¸¸ $
transaccionRepositorio
¸¸ -
.
¸¸- .
CrearTransaccion
¸¸. >
(
¸¸> ?!
movimientoEconomico
¸¸? R
)
¸¸R S
;
¸¸S T
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* U
,
ÄÄU V
e
ÄÄW X
)
ÄÄX Y
;
ÄÄY Z
}
ÅÅ 
}
ÇÇ 	
private
ÖÖ 
Transaccion
ÖÖ !
GenerarCobroDeVenta
ÖÖ /
(
ÖÖ/ 0
int
ÖÖ0 3

idEmpleado
ÖÖ4 >
,
ÖÖ> ?
int
ÖÖ@ C
idCentroAtencion
ÖÖD T
,
ÖÖT U
int
ÖÖV Y
	idCliente
ÖÖZ c
,
ÖÖc d
string
ÖÖe k
codigoDeCobro
ÖÖl y
,
ÖÖy z
ComprobanteÖÖ{ Ü
comprobanteÖÖá í
,ÖÖí ì
decimalÖÖî õ
tipoDeCambioÖÖú ®
,ÖÖ® ©
intÖÖ™ ≠!
idUnidadDeNegocioÖÖÆ ø
,ÖÖø ¿
intÖÖ¡ ƒ
idMonedaÖÖ≈ Õ
,ÖÖÕ Œ
decimalÖÖœ ÷
totalAPagarÖÖ◊ ‚
,ÖÖ‚ „
DateTimeÖÖ‰ Ï
fechaDeCobroÖÖÌ ˘
,ÖÖ˘ ˙
DateTimeÖÖ˚ É
fechaRegistroÖÖÑ ë
,ÖÖë í
stringÖÖì ô
observacionÖÖö •
,ÖÖ• ¶
intÖÖß ™
idMedioDePagoÖÖ´ ∏
,ÖÖ∏ π
intÖÖ∫ Ω!
idEntidadBancariaÖÖæ œ
,ÖÖœ –
intÖÖ— ‘
?ÖÖ‘ ’
idTipoOperadorÖÖ÷ ‰
,ÖÖ‰ Â
stringÖÖÊ Ï!
informacionDePagoÖÖÌ ˛
)ÖÖ˛ ˇ
{
ÜÜ 	
Transaccion
àà 
cobro
àà 
=
àà 
new
àà  #
Transaccion
àà$ /
(
àà/ 0
codigoDeCobro
àà0 =
,
àà= >
null
àà? C
,
ààC D
fechaRegistro
ààE R
,
ààR S!
TransaccionSettings
ààT g
.
ààg h
Default
ààh o
.
àào p8
)IdTipoTransaccionCobranzaFacturasClientesààp ô
,ààô ö!
idUnidadDeNegocioààõ ¨
,àà¨ ≠
trueààÆ ≤
,àà≤ ≥
fechaDeCobroàà¥ ¿
,àà¿ ¡
fechaDeCobroàà¬ Œ
,ààŒ œ
observacionàà– €
,àà€ ‹
fechaDeCobroàà› È
,ààÈ Í

idEmpleadoààÎ ı
,ààı ˆ
totalAPagaràà˜ Ç
,ààÇ É 
idCentroAtencionààÑ î
,ààî ï
idMonedaààñ û
,ààû ü
tipoDeCambioàà† ¨
,àà¨ ≠
nullààÆ ≤
,àà≤ ≥
	idClienteàà¥ Ω
)ààΩ æ
{
ââ 
Comprobante
ãã 
=
ãã 
comprobante
ãã )
}
åå 
;
åå 
idEntidadBancaria
éé 
=
éé 
(
éé  !
idMedioDePago
éé! .
==
éé/ 1
MaestroSettings
éé2 A
.
ééA B
Default
ééB I
.
ééI J1
#IdDetalleMaestroMedioDepagoEfectivo
ééJ m
)
éém n
?
ééo p
MaestroSettingsééq Ä
.ééÄ Å
DefaultééÅ à
.ééà â9
)IdDetalleMaestroEntidadBancariaPorDefectoééâ ≤
:éé≥ ¥!
idEntidadBancariaééµ ∆
;éé∆ «
cobro
èè 
.
èè 

Traza_pago
èè 
.
èè 
Add
èè  
(
èè  !
new
èè! $

Traza_pago
èè% /
(
èè/ 0
idMedioDePago
èè0 =
,
èè= >
informacionDePago
èè? P
,
èèP Q
idEntidadBancaria
èèR c
,
èèc d
idTipoOperador
èèe s
==
èèt v
$num
èèw x
?
èèy z
null
èè{ 
:èèÄ Å
idTipoOperadorèèÇ ê
)èèê ë
)èèë í
;èèí ì 
Estado_transaccion
ëë 
estadoTransaccion
ëë 0
=
ëë1 2
new
ëë3 6 
Estado_transaccion
ëë7 I
(
ëëI J

idEmpleado
ëëJ T
,
ëëT U
MaestroSettings
ëëV e
.
ëëe f
Default
ëëf m
.
ëëm n/
 IdDetalleMaestroEstadoConfirmadoëën é
,ëëé è
fechaDeCobroëëê ú
,ëëú ù
$strëëû Â
)ëëÂ Ê
;ëëÊ Á
cobro
íí 
.
íí  
Estado_transaccion
íí $
.
íí$ %
Add
íí% (
(
íí( )
estadoTransaccion
íí) :
)
íí: ;
;
íí; <
return
ìì 
cobro
ìì 
;
ìì 
}
îî 	
private
óó 
Transaccion
óó !
GenerarCobroDeVenta
óó /
(
óó/ 0
ModoOperacionEnum
óó0 A
modoDeOperacion
óóB Q
,
óóQ R
int
óóS V

idEmpleado
óóW a
,
óóa b
int
óóc f
idCentroAtencion
óóg w
,
óów x
int
óóy |
	idClienteóó} Ü
,óóÜ á
stringóóà é
codigoDeCobroóóè ú
,óóú ù
Comprobanteóóû ©
comprobanteóó™ µ
,óóµ ∂
decimalóó∑ æ
tipoDeCambioóóø À
,óóÀ Ã
intóóÕ –!
idUnidadDeNegocioóó— ‚
,óó‚ „
intóó‰ Á
idMonedaóóË 
,óó Ò
decimalóóÚ ˘
totalAPagaróó˙ Ö
,óóÖ Ü
DateTimeóóá è
fechaDeCobroóóê ú
,óóú ù
DateTimeóóû ¶
fechaRegistroóóß ¥
,óó¥ µ
stringóó∂ º
observacionóóΩ »
,óó» …
intóó  Õ
idMedioDePagoóóŒ €
,óó€ ‹
intóó› ‡!
idEntidadBancariaóó· Ú
,óóÚ Û
stringóóÙ ˙!
informacionDePagoóó˚ å
)óóå ç
{
òò 	
Transaccion
öö 
cobro
öö 
=
öö 
new
öö  #
Transaccion
öö$ /
(
öö/ 0
codigoDeCobro
öö0 =
,
öö= >
null
öö? C
,
ööC D
fechaRegistro
ööE R
,
ööR S!
TransaccionSettings
ööT g
.
öög h
Default
ööh o
.
ööo p8
)IdTipoTransaccionCobranzaFacturasClientesööp ô
,ööô ö!
idUnidadDeNegocioööõ ¨
,öö¨ ≠
trueööÆ ≤
,öö≤ ≥
fechaDeCobroöö¥ ¿
,öö¿ ¡
fechaDeCobroöö¬ Œ
,ööŒ œ
observacionöö– €
,öö€ ‹
fechaDeCobroöö› È
,ööÈ Í

idEmpleadoööÎ ı
,ööı ˆ
totalAPagaröö˜ Ç
,ööÇ É 
idCentroAtencionööÑ î
,ööî ï
idMonedaööñ û
,ööû ü
tipoDeCambioöö† ¨
,öö¨ ≠
nullööÆ ≤
,öö≤ ≥
	idClienteöö¥ Ω
)ööΩ æ
{
õõ 
Comprobante
ùù 
=
ùù 
comprobante
ùù )
}
ûû 
;
ûû 
cobro
†† 
.
†† #
Parametro_transaccion
†† '
.
††' (
Add
††( +
(
††+ ,
new
††, /#
Parametro_transaccion
††0 E
(
††E F
MaestroSettings
††F U
.
††U V
Default
††V ]
.
††] ^1
"IdDetalleMaestroParametroTipoVenta††^ Ä
,††Ä Å
(††Ç É
(††É Ñ
int††Ñ á
)††á à
modoDeOperacion††à ó
)††ó ò
.††ò ô
ToString††ô °
(††° ¢
)††¢ £
)††£ §
)††§ •
;††• ¶
idEntidadBancaria
¢¢ 
=
¢¢ 
(
¢¢  !
idMedioDePago
¢¢! .
==
¢¢/ 1
MaestroSettings
¢¢2 A
.
¢¢A B
Default
¢¢B I
.
¢¢I J1
#IdDetalleMaestroMedioDepagoEfectivo
¢¢J m
)
¢¢m n
?
¢¢o p
MaestroSettings¢¢q Ä
.¢¢Ä Å
Default¢¢Å à
.¢¢à â9
)IdDetalleMaestroEntidadBancariaPorDefecto¢¢â ≤
:¢¢≥ ¥!
idEntidadBancaria¢¢µ ∆
;¢¢∆ «
cobro
££ 
.
££ 

Traza_pago
££ 
.
££ 
Add
££  
(
££  !
new
££! $

Traza_pago
££% /
(
££/ 0
idMedioDePago
££0 =
,
££= >
informacionDePago
££? P
,
££P Q
idEntidadBancaria
££R c
)
££c d
)
££d e
;
££e f 
Estado_transaccion
•• 
estadoTransaccion
•• 0
=
••1 2
new
••3 6 
Estado_transaccion
••7 I
(
••I J

idEmpleado
••J T
,
••T U
MaestroSettings
••V e
.
••e f
Default
••f m
.
••m n/
 IdDetalleMaestroEstadoConfirmado••n é
,••é è
fechaDeCobro••ê ú
,••ú ù
$str••û Â
)••Â Ê
;••Ê Á
cobro
¶¶ 
.
¶¶  
Estado_transaccion
¶¶ $
.
¶¶$ %
Add
¶¶% (
(
¶¶( )
estadoTransaccion
¶¶) :
)
¶¶: ;
;
¶¶; <
return
ßß 
cobro
ßß 
;
ßß 
}
®® 	
private
´´ 
Transaccion
´´ (
GenerarMovimientoEconomico
´´ 6
(
´´6 7
Transaccion
´´7 B
	operacion
´´C L
,
´´L M
Cuota
´´N S
cuota
´´T Y
,
´´Y Z
int
´´[ ^

idEmpleado
´´_ i
,
´´i j
int
´´k n
idCentroAtencion
´´o 
,´´ Ä
int´´Å Ñ
	idTercero´´Ö é
,´´é è
int´´ê ì!
idTipoTransaccion´´î •
,´´• ¶
DateTime´´ß Ø
fechaOperacion´´∞ æ
,´´æ ø
DateTime´´¿ »
fechaRegistro´´… ÷
,´´÷ ◊
string´´ÿ ﬁ
observacion´´ﬂ Í
,´´Í Î
int´´Ï Ô
idMedioDePago´´ ˝
,´´˝ ˛
int´´ˇ Ç!
idEntidadBancaria´´É î
,´´î ï
string´´ñ ú&
informacionDeMedioPago´´ù ≥
)´´≥ ¥
{
¨¨ 	
string
ÆÆ 

codigoPago
ÆÆ 
=
ÆÆ 

CodigoPago
ÆÆ  *
(
ÆÆ* +
cuota
ÆÆ+ 0
)
ÆÆ0 1
;
ÆÆ1 2
Transaccion
∞∞ !
movimientoEconomico
∞∞ +
=
∞∞, -
new
∞∞. 1
Transaccion
∞∞2 =
(
∞∞= >

codigoPago
∞∞> H
,
∞∞H I
null
∞∞J N
,
∞∞N O
fechaRegistro
∞∞P ]
,
∞∞] ^
idTipoTransaccion
∞∞_ p
,
∞∞p q
	operacion
∞∞r {
.
∞∞{ | 
id_unidad_negocio∞∞| ç
,∞∞ç é
true∞∞è ì
,∞∞ì î
fechaOperacion∞∞ï £
,∞∞£ §
fechaOperacion∞∞• ≥
,∞∞≥ ¥
observacion∞∞µ ¿
,∞∞¿ ¡
fechaOperacion∞∞¬ –
,∞∞– —

idEmpleado∞∞“ ‹
,∞∞‹ ›
cuota∞∞ﬁ „
.∞∞„ ‰
total∞∞‰ È
,∞∞È Í 
idCentroAtencion∞∞Î ˚
,∞∞˚ ¸
	operacion∞∞˝ Ü
.∞∞Ü á
	id_moneda∞∞á ê
,∞∞ê ë
	operacion∞∞í õ
.∞∞õ ú
tipo_cambio∞∞ú ß
,∞∞ß ®
null∞∞© ≠
,∞∞≠ Æ
	idTercero∞∞Ø ∏
)∞∞∏ π
{
±± 
Comprobante
≥≥ 
=
≥≥ 
	operacion
≥≥ '
.
≥≥' (
Comprobante
≥≥( 3
}
¥¥ 
;
¥¥  
Estado_transaccion
∂∂ 
estadoTransaccion
∂∂ 0
=
∂∂1 2
new
∂∂3 6 
Estado_transaccion
∂∂7 I
(
∂∂I J

idEmpleado
∂∂J T
,
∂∂T U
MaestroSettings
∂∂V e
.
∂∂e f
Default
∂∂f m
.
∂∂m n/
 IdDetalleMaestroEstadoConfirmado∂∂n é
,∂∂é è
fechaOperacion∂∂ê û
,∂∂û ü
$str∂∂† Ì
)∂∂Ì Ó
;∂∂Ó Ô!
movimientoEconomico
∑∑ 
.
∑∑   
Estado_transaccion
∑∑  2
.
∑∑2 3
Add
∑∑3 6
(
∑∑6 7
estadoTransaccion
∑∑7 H
)
∑∑H I
;
∑∑I J

Pago_cuota
ππ 
	pagoCuota
ππ  
=
ππ! "
new
ππ# &

Pago_cuota
ππ' 1
{
∫∫ 
Cuota
ªª 
=
ªª 
cuota
ªª 
,
ªª 
importe
ºº 
=
ºº 
cuota
ºº 
.
ºº  
total
ºº  %
}
ΩΩ 
;
ΩΩ !
movimientoEconomico
ææ 
.
ææ  

Pago_cuota
ææ  *
.
ææ* +
Add
ææ+ .
(
ææ. /
	pagoCuota
ææ/ 8
)
ææ8 9
;
ææ9 :

Traza_pago
¿¿ (
trazaDeMovimientoEconomico
¿¿ 1
=
¿¿2 3
new
¿¿4 7

Traza_pago
¿¿8 B
(
¿¿B C
idMedioDePago
¿¿C P
,
¿¿P Q$
informacionDeMedioPago
¿¿R h
,
¿¿h i
idEntidadBancaria
¿¿j {
)
¿¿{ |
;
¿¿| }!
movimientoEconomico
¡¡ 
.
¡¡  

Traza_pago
¡¡  *
.
¡¡* +
Add
¡¡+ .
(
¡¡. /(
trazaDeMovimientoEconomico
¡¡/ I
)
¡¡I J
;
¡¡J K
return
¬¬ !
movimientoEconomico
¬¬ &
;
¬¬& '
}
√√ 	
private
≈≈ 
Transaccion
≈≈ 8
*GenerarMovimientoEconomicoPagoACuentaCuota
≈≈ F
(
≈≈F G
Transaccion
≈≈G R
	operacion
≈≈S \
,
≈≈\ ]
Cuota
≈≈^ c
cuota
≈≈d i
,
≈≈i j
int
≈≈k n

idEmpleado
≈≈o y
,
≈≈y z
int
≈≈{ ~
idCentroAtencion≈≈ è
,≈≈è ê
int≈≈ë î
	idTercero≈≈ï û
,≈≈û ü
int≈≈† £!
idTipoTransaccion≈≈§ µ
,≈≈µ ∂
DateTime≈≈∑ ø
fechaOperacion≈≈¿ Œ
,≈≈Œ œ
DateTime≈≈– ÿ
fechaRegistro≈≈Ÿ Ê
,≈≈Ê Á
string≈≈Ë Ó
observacion≈≈Ô ˙
,≈≈˙ ˚
int≈≈¸ ˇ
idMedioDePago≈≈Ä ç
,≈≈ç é
int≈≈è í!
idEntidadBancaria≈≈ì §
,≈≈§ •
string≈≈¶ ¨&
informacionDeMedioPago≈≈≠ √
)≈≈√ ƒ
{
∆∆ 	
string
»» 

codigoPago
»» 
=
»» 

CodigoPago
»»  *
(
»»* +
cuota
»»+ 0
)
»»0 1
;
»»1 2
Transaccion
   !
movimientoEconomico
   +
=
  , -
new
  . 1
Transaccion
  2 =
(
  = >

codigoPago
  > H
,
  H I
null
  J N
,
  N O
fechaRegistro
  P ]
,
  ] ^
idTipoTransaccion
  _ p
,
  p q
	operacion
  r {
.
  { | 
id_unidad_negocio  | ç
,  ç é
true  è ì
,  ì î
fechaOperacion  ï £
,  £ §
fechaOperacion  • ≥
,  ≥ ¥
observacion  µ ¿
,  ¿ ¡
fechaOperacion  ¬ –
,  – —

idEmpleado  “ ‹
,  ‹ ›
cuota  ﬁ „
.  „ ‰
pago_a_cuenta  ‰ Ò
,  Ò Ú 
idCentroAtencion  Û É
,  É Ñ
	operacion  Ö é
.  é è
	id_moneda  è ò
,  ò ô
	operacion  ö £
.  £ §
tipo_cambio  § Ø
,  Ø ∞
null  ± µ
,  µ ∂
	idTercero  ∑ ¿
)  ¿ ¡
{
ÀÀ 
Comprobante
ÕÕ 
=
ÕÕ 
	operacion
ÕÕ '
.
ÕÕ' (
Comprobante
ÕÕ( 3
}
ŒŒ 
;
ŒŒ  
Estado_transaccion
–– 
estadoTransaccion
–– 0
=
––1 2
new
––3 6 
Estado_transaccion
––7 I
(
––I J

idEmpleado
––J T
,
––T U
MaestroSettings
––V e
.
––e f
Default
––f m
.
––m n/
 IdDetalleMaestroEstadoConfirmado––n é
,––é è
fechaOperacion––ê û
,––û ü
$str––† Ì
)––Ì Ó
;––Ó Ô!
movimientoEconomico
—— 
.
——   
Estado_transaccion
——  2
.
——2 3
Add
——3 6
(
——6 7
estadoTransaccion
——7 H
)
——H I
;
——I J

Pago_cuota
”” 
	pagoCuota
””  
=
””! "
new
””# &

Pago_cuota
””' 1
{
‘‘ 
Cuota
’’ 
=
’’ 
cuota
’’ 
,
’’ 
importe
÷÷ 
=
÷÷ 
cuota
÷÷ 
.
÷÷  
pago_a_cuenta
÷÷  -
}
◊◊ 
;
◊◊ !
movimientoEconomico
ÿÿ 
.
ÿÿ  

Pago_cuota
ÿÿ  *
.
ÿÿ* +
Add
ÿÿ+ .
(
ÿÿ. /
	pagoCuota
ÿÿ/ 8
)
ÿÿ8 9
;
ÿÿ9 :

Traza_pago
⁄⁄ (
trazaDeMovimientoEconomico
⁄⁄ 1
=
⁄⁄2 3
new
⁄⁄4 7

Traza_pago
⁄⁄8 B
(
⁄⁄B C
idMedioDePago
⁄⁄C P
,
⁄⁄P Q$
informacionDeMedioPago
⁄⁄R h
,
⁄⁄h i
idEntidadBancaria
⁄⁄j {
)
⁄⁄{ |
;
⁄⁄| }!
movimientoEconomico
€€ 
.
€€  

Traza_pago
€€  *
.
€€* +
Add
€€+ .
(
€€. /(
trazaDeMovimientoEconomico
€€/ I
)
€€I J
;
€€J K
return
‹‹ !
movimientoEconomico
‹‹ &
;
‹‹& '
}
›› 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 

Cobro_Pago
ﬂﬂ 
>
ﬂﬂ 
ObtenerCobros
ﬂﬂ  -
(
ﬂﬂ- .
DateTime
ﬂﬂ. 6
desde
ﬂﬂ7 <
,
ﬂﬂ< =
DateTime
ﬂﬂ> F
hasta
ﬂﬂG L
)
ﬂﬂL M
{
‡‡ 	
try
·· 
{
‚‚ 
bool
„„ 
esCobro
„„ 
=
„„ 
true
„„ #
;
„„# $
return
‰‰ $
transaccionRepositorio
‰‰ -
.
‰‰- .!
ObtenerCobrosOPagos
‰‰. A
(
‰‰A B
esCobro
‰‰B I
,
‰‰I J
desde
‰‰K P
,
‰‰P Q
hasta
‰‰R W
)
‰‰W X
.
‰‰X Y
ToList
‰‰Y _
(
‰‰_ `
)
‰‰` a
;
‰‰a b
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÁÁ 
throw
ËË 
new
ËË 
LogicaException
ËË )
(
ËË) *
$str
ËË* L
,
ËËL M
e
ËËN O
)
ËËO P
;
ËËP Q
}
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ 

Cobro_Pago
ÏÏ 
>
ÏÏ 
ObtenerPagos
ÏÏ  ,
(
ÏÏ, -
DateTime
ÏÏ- 5
desde
ÏÏ6 ;
,
ÏÏ; <
DateTime
ÏÏ= E
hasta
ÏÏF K
)
ÏÏK L
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
bool
 
esCobro
 
=
 
false
 $
;
$ %
return
ÒÒ $
transaccionRepositorio
ÒÒ -
.
ÒÒ- .!
ObtenerCobrosOPagos
ÒÒ. A
(
ÒÒA B
esCobro
ÒÒB I
,
ÒÒI J
desde
ÒÒK P
,
ÒÒP Q
hasta
ÒÒR W
)
ÒÒW X
.
ÒÒX Y
ToList
ÒÒY _
(
ÒÒ_ `
)
ÒÒ` a
;
ÒÒa b
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* K
,
ııK L
e
ııM N
)
ııN O
;
ııO P
}
ˆˆ 
}
˜˜ 	
public
˘˘ !
MovimientoEconomico
˘˘ "(
ObtenerMovimientoEconomico
˘˘# =
(
˘˘= >
long
˘˘> B
idOperacion
˘˘C N
)
˘˘N O
{
˙˙ 	
try
˚˚ 
{
¸¸ 
return
˝˝ 
new
˝˝ !
MovimientoEconomico
˝˝ .
(
˝˝. /$
transaccionRepositorio
˝˝/ E
.
˝˝E FZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccion˝˝F ë
(˝˝ë í
idOperacion˝˝í ù
)˝˝ù û
)˝˝û ü
;˝˝ü †
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* ]
,
ÅÅ] ^
e
ÅÅ_ `
)
ÅÅ` a
;
ÅÅa b
}
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
OperationResult
ÖÖ *
InvalidarMovimientoEconomico
ÖÖ ;
(
ÖÖ; <
long
ÖÖ< @
idOperacion
ÖÖA L
,
ÖÖL M
string
ÖÖN T
observacion
ÖÖU `
,
ÖÖ` a$
UserProfileSessionData
ÖÖb x!
profileSessionDataÖÖy ã
)ÖÖã å
{
ÜÜ 	
try
áá 
{
àà 
OperationResult
ââ 
result
ââ  &
=
ââ' (
new
ââ) ,
OperationResult
ââ- <
(
ââ< =
)
ââ= >
;
ââ> ?
List
ää 
<
ää 
Cuota
ää 
>
ää 
cuotasActualizar
ää ,
=
ää- .
new
ää/ 2
List
ää3 7
<
ää7 8
Cuota
ää8 =
>
ää= >
(
ää> ?
)
ää? @
;
ää@ A
var
ãã !
movimientoEconomico
ãã '
=
ãã( )
new
ãã* -!
MovimientoEconomico
ãã. A
(
ããA B$
transaccionRepositorio
ããB X
.
ããX YZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccionããY §
(ãã§ •
idOperacionãã• ∞
)ãã∞ ±
)ãã± ≤
;ãã≤ ≥
foreach
åå 
(
åå 
var
åå 
detalle
åå $
in
åå% '!
movimientoEconomico
åå( ;
.
åå; <
Detalles
åå< D
(
ååD E
)
ååE F
)
ååF G
{
çç 
var
éé 
cuota
éé 
=
éé $
transaccionRepositorio
éé  6
.
éé6 7
ObtenerCuota
éé7 C
(
ééC D
detalle
ééD K
.
ééK L
Idcuota
ééL S
)
ééS T
;
ééT U
cuota
èè 
.
èè 
pago_a_cuenta
èè '
-=
èè( *
detalle
èè+ 2
.
èè2 3
Importe
èè3 :
;
èè: ;
cuota
êê 
.
êê 
saldo
êê 
+=
êê  "
detalle
êê# *
.
êê* +
Importe
êê+ 2
;
êê2 3
cuotasActualizar
ëë $
.
ëë$ %
Add
ëë% (
(
ëë( )
cuota
ëë) .
)
ëë. /
;
ëë/ 0
}
íí  
Estado_transaccion
ìì "1
#estadoMovimientoEconomicoInvalidado
ìì# F
=
ììG H
new
ììI L 
Estado_transaccion
ììM _
(
ìì_ `
idOperacion
ìì` k
,
ììk l 
profileSessionData
ììm 
.ìì Ä
EmpleadoììÄ à
.ììà â
Idììâ ã
,ììã å
MaestroSettingsììç ú
.ììú ù
Defaultììù §
.ìì§ •0
 IdDetalleMaestroEstadoInvalidadoìì• ≈
,ìì≈ ∆
DateTimeUtilìì« ”
.ìì” ‘
FechaActualìì‘ ﬂ
(ììﬂ ‡
)ìì‡ ·
,ìì· ‚
observacionìì„ Ó
)ììÓ Ô
;ììÔ $
transaccionRepositorio
îî &
.
îî& '4
&CrearEstadoTransaccionActualizarCuotas
îî' M
(
îîM N1
#estadoMovimientoEconomicoInvalidado
îîN q
,
îîq r
cuotasActualizarîîs É
)îîÉ Ñ
;îîÑ Ö
return
ïï 
result
ïï 
;
ïï 
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
ex
óó 
)
óó  
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* H
,
ôôH I
ex
ôôJ L
)
ôôL M
;
ôôM N
}
öö 
}
õõ 	
public
†† 
List
†† 
<
†† 
CuentaBancaria
†† "
>
††" #%
ObtenerCuentasBancarias
††$ ;
(
††; <
)
††< =
{
°° 	
try
¢¢ 
{
££ 
var
§§ 
cuentasBancarias
§§ $
=
§§% &
actorRepositorio
§§' 7
.
§§7 8%
ObtenerCuentasBancarias
§§8 O
(
§§O P
)
§§P Q
.
§§Q R
ToList
§§R X
(
§§X Y
)
§§Y Z
;
§§Z [
return
•• 
cuentasBancarias
•• '
;
••' (
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
new
©© 
LogicaException
©© )
(
©©) *
$str
©©* [
,
©©[ \
e
©©] ^
)
©©^ _
;
©©_ `
}
™™ 
}
´´ 	
public
≠≠ 
List
≠≠ 
<
≠≠ 
CuentaBancaria
≠≠ "
>
≠≠" #9
+ObtenerCuentasBancariasPorEntidadFinanciera
≠≠$ O
(
≠≠O P
int
≠≠P S!
idEntidadFinanciera
≠≠T g
)
≠≠g h
{
ÆÆ 	
try
ØØ 
{
∞∞ 
var
±± 
cuentasBancarias
±± $
=
±±% &
actorRepositorio
±±' 7
.
±±7 89
+ObtenerCuentasBancariasPorEntidadFinanciera
±±8 c
(
±±c d!
idEntidadFinanciera
±±d w
)
±±w x
.
±±x y
ToList
±±y 
(±± Ä
)±±Ä Å
;±±Å Ç
return
≤≤ 
cuentasBancarias
≤≤ '
;
≤≤' (
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∂∂ 
new
∂∂ 
LogicaException
∂∂ )
(
∂∂) *
$str
∂∂* [
,
∂∂[ \
e
∂∂] ^
)
∂∂^ _
;
∂∂_ `
}
∑∑ 
}
∏∏ 	
public
∫∫ 
List
∫∫ 
<
∫∫ 
ItemGenerico
∫∫  
>
∫∫  !B
4ObtenerCuentasBancariasConEntidadFinancieraConMoneda
∫∫" V
(
∫∫V W
)
∫∫W X
{
ªª 	
try
ºº 
{
ΩΩ 
var
ææ 
cuentasBancarias
ææ $
=
ææ% &
actorRepositorio
ææ' 7
.
ææ7 8B
4ObtenerCuentasBancariasConEntidadFinancieraConMoneda
ææ8 l
(
ææl m
)
ææm n
.
ææn o
ToList
ææo u
(
ææu v
)
ææv w
;
ææw x
return
øø 
cuentasBancarias
øø '
;
øø' (
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* [
,
√√[ \
e
√√] ^
)
√√^ _
;
√√_ `
}
ƒƒ 
}
≈≈ 	
public
»» 
Actor_negocio
»» 3
%GenerarActorDeNegocioDeCuentaBancaria
»» B
(
»»B C
CuentaBancaria
»»C Q
cuentaBancaria
»»R `
)
»»` a
{
…… 	
try
   
{
ÀÀ 
DateTime
ÃÃ 
fechaActual
ÃÃ $
=
ÃÃ% &
DateTimeUtil
ÃÃ' 3
.
ÃÃ3 4
FechaActual
ÃÃ4 ?
(
ÃÃ? @
)
ÃÃ@ A
;
ÃÃA B
DateTime
ÕÕ 
fechaFin
ÕÕ !
=
ÕÕ" #
fechaActual
ÕÕ$ /
.
ÕÕ/ 0
AddYears
ÕÕ0 8
(
ÕÕ8 9
ActorSettings
ÕÕ9 F
.
ÕÕF G
Default
ÕÕG N
.
ÕÕN OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaÕÕO Ü
)ÕÕÜ á
;ÕÕá à
Actor_negocio
œœ (
cuentaBancariaActorNegocio
œœ 8
=
œœ9 :
new
œœ; >
Actor_negocio
œœ? L
(
œœL M
ActorSettings
œœM Z
.
œœZ [
Default
œœ[ b
.
œœb c!
IdRolCuentaBancaria
œœc v
,
œœv w
fechaActualœœx É
,œœÉ Ñ
fechaFinœœÖ ç
,œœç é
$strœœè ë
,œœë í
cuentaBancariaœœì °
.œœ° ¢

EstaActivoœœ¢ ¨
,œœ¨ ≠
falseœœÆ ≥
,œœ≥ ¥
$strœœµ ∑
)œœ∑ ∏
;œœ∏ π
Actor
—— 
actor
—— 
=
—— 
new
—— !
Actor
——" '
(
——' (
cuentaBancaria
——( 6
.
——6 7

TipoCuenta
——7 A
.
——A B
Id
——B D
,
——D E
fechaActual
——F Q
,
——Q R
cuentaBancaria
——S a
.
——a b
NumeroCuenta
——b n
,
——n o
cuentaBancaria
——p ~
.
——~ 
	NumeroCCI—— à
,——à â
cuentaBancaria——ä ò
.——ò ô
Titular——ô †
,——† °
$str——¢ §
,——§ •
ActorSettings——¶ ≥
.——≥ ¥
Default——¥ ª
.——ª º)
IdTipoActorCuentaBancaria——º ’
,——’ ÷
ActorSettings——◊ ‰
.——‰ Â
Default——Â Ï
.——Ï Ì%
IdFotoActorPorDefecto——Ì Ç
,——Ç É
ActorSettings——Ñ ë
.——ë í
Default——í ô
.——ô öC
3IdClaseActorNoEspecificadoDeTipoActorCuentaBancaria——ö Õ
,——Õ Œ
ActorSettings——œ ‹
.——‹ ›
Default——› ‰
.——‰ ÂD
4IdEstadoLegalNoEspecificadoDeTipoActorCuentaBancaria——Â ô
,——ô ö
$str——õ ù
,——ù û
$str——ü °
,——° ¢
$str——£ •
)——• ¶
{
““ '
id_detalle_multiproposito
”” -
=
””. /
cuentaBancaria
””0 >
.
””> ?
EntidadFinanciera
””? P
.
””P Q
Id
””Q S
,
””S T(
id_detalle_multiproposito1
‘‘ .
=
‘‘/ 0
cuentaBancaria
‘‘1 ?
.
‘‘? @
Moneda
‘‘@ F
.
‘‘F G
Id
‘‘G I
,
‘‘I J(
informacion_multiproposito
’’ .
=
’’/ 0
cuentaBancaria
’’1 ?
.
’’? @
Ubigeo
’’@ F
}
÷÷ 
;
÷÷ (
cuentaBancariaActorNegocio
ÿÿ *
.
ÿÿ* +
Actor
ÿÿ+ 0
=
ÿÿ1 2
actor
ÿÿ3 8
;
ÿÿ8 9
return
ŸŸ (
cuentaBancariaActorNegocio
ŸŸ 1
;
ŸŸ1 2
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
throw
›› 
new
›› 
LogicaException
›› )
(
››) *
$str
››* x
,
››x y
e
››z {
)
››{ |
;
››| }
}
ﬁﬁ 
}
ﬂﬂ 	
public
‡‡ 
bool
‡‡ 2
$ExisteNumeroCuentaYEntidadFinanciera
‡‡ 8
(
‡‡8 9
int
‡‡9 <!
idEntidadFinanciera
‡‡= P
,
‡‡P Q
string
‡‡R X
numeroCuenta
‡‡Y e
,
‡‡e f
string
‡‡g m
	numeroCCI
‡‡n w
)
‡‡w x
{
·· 	
try
‚‚ 
{
„„ 
bool
‰‰ 
existe
‰‰ 
=
‰‰ 
actorRepositorio
‰‰ .
.
‰‰. /?
1ExisteNumeroDocumentoIdDetalleMultiPropositoActor
‰‰/ `
(
‰‰` a!
idEntidadFinanciera
‰‰a t
,
‰‰t u
numeroCuenta‰‰v Ç
,‰‰Ç É
	numeroCCI‰‰Ñ ç
)‰‰ç é
;‰‰é è
return
ÂÂ 
existe
ÂÂ 
;
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
e
ÁÁ 
)
ÁÁ 
{
ËË 
throw
ÈÈ 
new
ÈÈ 
LogicaException
ÈÈ )
(
ÈÈ) *
$str
ÈÈ* Y
,
ÈÈY Z
e
ÈÈ[ \
)
ÈÈ\ ]
;
ÈÈ] ^
}
ÍÍ 
}
ÎÎ 	
public
ÏÏ 
bool
ÏÏ 2
$ExisteNumeroCuentaYEntidadFinanciera
ÏÏ 8
(
ÏÏ8 9
int
ÏÏ9 <
idActor
ÏÏ= D
,
ÏÏD E
int
ÏÏF I!
idEntidadFinanciera
ÏÏJ ]
,
ÏÏ] ^
string
ÏÏ_ e
numeroCuenta
ÏÏf r
,
ÏÏr s
string
ÏÏt z
	numeroCCIÏÏ{ Ñ
)ÏÏÑ Ö
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
bool
 
existe
 
=
 
actorRepositorio
 .
.
. /?
1ExisteNumeroDocumentoIdDetalleMultiPropositoActor
/ `
(
` a
idActor
a h
,
h i!
idEntidadFinanciera
j }
,
} ~
numeroCuenta ã
,ã å
	numeroCCIç ñ
)ñ ó
;ó ò
return
ÒÒ 
existe
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* Y
,
ııY Z
e
ıı[ \
)
ıı\ ]
;
ıı] ^
}
ˆˆ 
}
˜˜ 	
public
¯¯ 
OperationResult
¯¯ !
CrearCuentaBancaria
¯¯ 2
(
¯¯2 3
CuentaBancaria
¯¯3 A
cuentaBancaria
¯¯B P
)
¯¯P Q
{
˘˘ 	
try
˙˙ 
{
˚˚ 
if
¸¸ 
(
¸¸ 2
$ExisteNumeroCuentaYEntidadFinanciera
¸¸ 8
(
¸¸8 9
cuentaBancaria
¸¸9 G
.
¸¸G H
EntidadFinanciera
¸¸H Y
.
¸¸Y Z
Id
¸¸Z \
,
¸¸\ ]
cuentaBancaria
¸¸^ l
.
¸¸l m
NumeroCuenta
¸¸m y
,
¸¸y z
cuentaBancaria¸¸{ â
.¸¸â ä
	NumeroCCI¸¸ä ì
)¸¸ì î
)¸¸î ï
{
˝˝ 
throw
˛˛ 
new
˛˛ !
ControllerException
˛˛ 1
(
˛˛1 2
$str
˛˛2 |
)
˛˛| }
;
˛˛} ~
}
ˇˇ 
Actor_negocio
ÄÄ (
cuentaBancariaActorNegocio
ÄÄ 8
=
ÄÄ9 :3
%GenerarActorDeNegocioDeCuentaBancaria
ÄÄ; `
(
ÄÄ` a
cuentaBancaria
ÄÄa o
)
ÄÄo p
;
ÄÄp q
var
ÅÅ 
	resultado
ÅÅ 
=
ÅÅ 
actor_Datos
ÅÅ  +
.
ÅÅ+ ,
CrearActorNegocio
ÅÅ, =
(
ÅÅ= >(
cuentaBancariaActorNegocio
ÅÅ> X
)
ÅÅX Y
;
ÅÅY Z
cuentaBancaria
ÉÉ 
.
ÉÉ 
Id
ÉÉ !
=
ÉÉ" #(
cuentaBancariaActorNegocio
ÉÉ$ >
.
ÉÉ> ?
id
ÉÉ? A
;
ÉÉA B
cuentaBancaria
ÑÑ 
.
ÑÑ 
IdActor
ÑÑ &
=
ÑÑ' ((
cuentaBancariaActorNegocio
ÑÑ) C
.
ÑÑC D
id_actor
ÑÑD L
;
ÑÑL M
	resultado
ÖÖ 
.
ÖÖ 
information
ÖÖ %
=
ÖÖ& '
cuentaBancaria
ÖÖ( 6
;
ÖÖ6 7
return
ÜÜ 
	resultado
ÜÜ  
;
ÜÜ  !
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
new
ãã 
LogicaException
ãã )
(
ãã) *
$str
ãã* X
,
ããX Y
e
ããZ [
)
ãã[ \
;
ãã\ ]
}
åå 
}
çç 	
public
éé 
OperationResult
éé &
ActualizarCuentaBancaria
éé 7
(
éé7 8
CuentaBancaria
éé8 F
cuentaBancaria
ééG U
)
ééU V
{
èè 	
try
êê 
{
ëë 
if
íí 
(
íí 2
$ExisteNumeroCuentaYEntidadFinanciera
íí 8
(
íí8 9
cuentaBancaria
íí9 G
.
ííG H
IdActor
ííH O
,
ííO P
cuentaBancaria
ííQ _
.
íí_ `
EntidadFinanciera
íí` q
.
ííq r
Id
íír t
,
íít u
cuentaBancariaíív Ñ
.ííÑ Ö
NumeroCuentaííÖ ë
,ííë í
cuentaBancariaííì °
.íí° ¢
	NumeroCCIíí¢ ´
)íí´ ¨
)íí¨ ≠
{
ìì 
throw
îî 
new
îî !
ControllerException
îî 1
(
îî1 2
$str
îî2 |
)
îî| }
;
îî} ~
}
ïï 
DateTime
ññ 
fechaActual
ññ $
=
ññ% &
DateTimeUtil
ññ' 3
.
ññ3 4
FechaActual
ññ4 ?
(
ññ? @
)
ññ@ A
;
ññA B
DateTime
óó 
fechaFin
óó !
=
óó" #
fechaActual
óó$ /
.
óó/ 0
AddYears
óó0 8
(
óó8 9
ActorSettings
óó9 F
.
óóF G
Default
óóG N
.
óóN OF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaóóO Ü
)óóÜ á
;óóá à
Actor_negocio
ôô (
cuentaBancariaActorNegocio
ôô 8
=
ôô9 :
new
ôô; >
Actor_negocio
ôô? L
(
ôôL M
cuentaBancaria
ôôM [
.
ôô[ \
Id
ôô\ ^
,
ôô^ _
cuentaBancaria
ôô` n
.
ôôn o
IdActor
ôôo v
,
ôôv w
ActorSettingsôôx Ö
.ôôÖ Ü
DefaultôôÜ ç
.ôôç é#
IdRolCuentaBancariaôôé °
,ôô° ¢
fechaActualôô£ Æ
,ôôÆ Ø
fechaFinôô∞ ∏
,ôô∏ π
$strôô∫ º
,ôôº Ω
cuentaBancariaôôæ Ã
.ôôÃ Õ

EstaActivoôôÕ ◊
,ôô◊ ÿ
falseôôŸ ﬁ
,ôôﬁ ﬂ
$strôô‡ ‚
)ôô‚ „
;ôô„ ‰
Actor
õõ 
actor
õõ 
=
õõ 
new
õõ !
Actor
õõ" '
(
õõ' (
cuentaBancaria
õõ( 6
.
õõ6 7
IdActor
õõ7 >
,
õõ> ?
cuentaBancaria
õõ@ N
.
õõN O

TipoCuenta
õõO Y
.
õõY Z
Id
õõZ \
,
õõ\ ]
fechaActual
õõ^ i
,
õõi j
cuentaBancaria
õõk y
.
õõy z
NumeroCuentaõõz Ü
,õõÜ á
cuentaBancariaõõà ñ
.õõñ ó
	NumeroCCIõõó †
,õõ† °
cuentaBancariaõõ¢ ∞
.õõ∞ ±
Titularõõ± ∏
,õõ∏ π
$strõõ∫ º
,õõº Ω
ActorSettingsõõæ À
.õõÀ Ã
DefaultõõÃ ”
.õõ” ‘)
IdTipoActorCuentaBancariaõõ‘ Ì
,õõÌ Ó
ActorSettingsõõÔ ¸
.õõ¸ ˝
Defaultõõ˝ Ñ
.õõÑ Ö%
IdFotoActorPorDefectoõõÖ ö
,õõö õ
ActorSettingsõõú ©
.õõ© ™
Defaultõõ™ ±
.õõ± ≤C
3IdClaseActorNoEspecificadoDeTipoActorCuentaBancariaõõ≤ Â
,õõÂ Ê
ActorSettingsõõÁ Ù
.õõÙ ı
Defaultõõı ¸
.õõ¸ ˝D
4IdEstadoLegalNoEspecificadoDeTipoActorCuentaBancariaõõ˝ ±
,õõ± ≤
$strõõ≥ µ
,õõµ ∂
$strõõ∑ π
,õõπ ∫
$strõõª Ω
)õõΩ æ
{
úú '
id_detalle_multiproposito
ùù -
=
ùù. /
cuentaBancaria
ùù0 >
.
ùù> ?
EntidadFinanciera
ùù? P
.
ùùP Q
Id
ùùQ S
,
ùùS T(
id_detalle_multiproposito1
ûû .
=
ûû/ 0
cuentaBancaria
ûû1 ?
.
ûû? @
Moneda
ûû@ F
.
ûûF G
Id
ûûG I
,
ûûI J(
informacion_multiproposito
üü .
=
üü/ 0
cuentaBancaria
üü1 ?
.
üü? @
Ubigeo
üü@ F
}
†† 
;
†† (
cuentaBancariaActorNegocio
¢¢ *
.
¢¢* +
Actor
¢¢+ 0
=
¢¢1 2
actor
¢¢3 8
;
¢¢8 9
var
££ 
	resultado
££ 
=
££ 
actor_Datos
££  +
.
££+ ,$
ActualizarActorNegocio
££, B
(
££B C(
cuentaBancariaActorNegocio
££C ]
)
££] ^
;
££^ _
	resultado
§§ 
.
§§ 
information
§§ %
=
§§& '
cuentaBancaria
§§( 6
;
§§6 7
return
•• 
	resultado
••  
;
••  !
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
new
©© 
LogicaException
©© )
(
©©) *
$str
©©* [
,
©©[ \
e
©©] ^
)
©©^ _
;
©©_ `
}
™™ 
}
´´ 	
public
ØØ 
List
ØØ 
<
ØØ 
CajaInicializar
ØØ #
>
ØØ# $$
ObtenerInicializarCaja
ØØ% ;
(
ØØ; <
)
ØØ< =
{
∞∞ 	
try
±± 
{
≤≤ 
var
≥≥ 
cajas
≥≥ 
=
≥≥ #
centroDeAtencionDatos
≥≥ 1
.
≥≥1 22
$ObtenerCentrosDeAtencionSegunRolHijo
≥≥2 V
(
≥≥V W
ActorSettings
≥≥W d
.
≥≥d e
Default
≥≥e l
.
≥≥l m
	IdRolCaja
≥≥m v
,
≥≥v w
true
≥≥x |
)
≥≥| }
.
≥≥} ~
ToList≥≥~ Ñ
(≥≥Ñ Ö
)≥≥Ö Ü
;≥≥Ü á
return
µµ 
CajaInicializar
µµ &
.
µµ& '
Convert
µµ' .
(
µµ. /
cajas
µµ/ 4
)
µµ4 5
;
µµ5 6
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
e
∑∑ 
)
∑∑ 
{
∏∏ 
throw
ππ 
new
ππ 
LogicaException
ππ )
(
ππ) *
$str
ππ* Y
,
ππY Z
e
ππ[ \
)
ππ\ ]
;
ππ] ^
}
∫∫ 
}
ªª 	
public
ºº 
OperationResult
ºº $
GuardarInicializarCaja
ºº 5
(
ºº5 6
int
ºº6 9

idEmpleado
ºº: D
,
ººD E
List
ººF J
<
ººJ K
CajaInicializar
ººK Z
>
ººZ [
cajasAInicializar
ºº\ m
)
ººm n
{
ΩΩ 	
try
ææ 
{
øø 
	Operacion
¿¿ 
operacionGenerica
¿¿ +
=
¿¿, -
new
¿¿. 1
	Operacion
¿¿2 ;
(
¿¿; <$
transaccionRepositorio
¿¿< R
.
¿¿R S&
ObtenerUltimaTransaccion
¿¿S k
(
¿¿k l!
TransaccionSettings
¿¿l 
.¿¿ Ä
Default¿¿Ä á
.¿¿á à*
IdTipoTransaccionOperacion¿¿à ¢
)¿¿¢ £
)¿¿£ §
;¿¿§ •
var
¡¡ 
fechaActual
¡¡ 
=
¡¡  !
DateTimeUtil
¡¡" .
.
¡¡. /
FechaActual
¡¡/ :
(
¡¡: ;
)
¡¡; <
;
¡¡< =
List
¬¬ 
<
¬¬ 
Transaccion
¬¬  
>
¬¬  !
arqueosDeCaja
¬¬" /
=
¬¬0 1
new
¬¬2 5
List
¬¬6 :
<
¬¬: ;
Transaccion
¬¬; F
>
¬¬F G
(
¬¬G H
)
¬¬H I
;
¬¬I J
string
√√ 
prefijoCodigo
√√ $
=
√√% &
$str
√√' +
;
√√+ ,
int
ƒƒ 
maximo
ƒƒ 
=
ƒƒ %
codigosOperacion_Logica
ƒƒ 4
.
ƒƒ4 50
"ObtenerMaximoCodigoParaTransaccion
ƒƒ5 W
(
ƒƒW X
prefijoCodigo
ƒƒX e
,
ƒƒe f!
TransaccionSettings
ƒƒg z
.
ƒƒz {
Defaultƒƒ{ Ç
.ƒƒÇ É+
IdTipoTransaccionArqueoCajaƒƒÉ û
)ƒƒû ü
;ƒƒü †
foreach
≈≈ 
(
≈≈ 
var
≈≈ 
cajaInicializar
≈≈ ,
in
≈≈- /
cajasAInicializar
≈≈0 A
)
≈≈A B
{
∆∆ 
string
«« 
codigo
«« !
=
««" #
prefijoCodigo
««$ 1
+
««2 3
(
««4 5
maximo
««5 ;
+
««< =
$num
««> ?
)
««? @
.
««@ A
ToString
««A I
(
««I J
)
««J K
;
««K L
Transaccion
»» 

arqueoCaja
»»  *
=
»»+ ,
CrearArqueoCaja
»»- <
(
»»< =
operacionGenerica
»»= N
.
»»N O
Id
»»O Q
,
»»Q R
operacionGenerica
»»S d
.
»»d e
IdComprobante
»»e r
,
»»r s

idEmpleado
»»t ~
,
»»~ 
fechaActual»»Ä ã
,»»ã å
codigo»»ç ì
,»»ì î#
TransaccionSettings»»ï ®
.»»® ©
Default»»© ∞
.»»∞ ±+
IdTipoTransaccionArqueoCaja»»± Ã
,»»Ã Õ
MaestroSettings»»Œ ›
.»»› ﬁ
Default»»ﬁ Â
.»»Â Ê/
IdDetalleMaestroAccionConfirmar»»Ê Ö
,»»Ö Ü#
TransaccionSettings»»á ö
.»»ö õ
Default»»õ ¢
.»»¢ £+
IdTipoTransaccionArqueoCaja»»£ æ
,»»æ ø
$str»»¿ ¬
,»»¬ √
cajaInicializar»»ƒ ”
.»»” ‘
Id»»‘ ÷
,»»÷ ◊
cajaInicializar»»ÿ Á
.»»Á Ë
Monto»»Ë Ì
)»»Ì Ó
;»»Ó Ô
arqueosDeCaja
…… !
.
……! "
Add
……" %
(
……% &

arqueoCaja
……& 0
)
……0 1
;
……1 2
maximo
   
++
   
;
   
}
ÀÀ 
return
ÃÃ $
transaccionRepositorio
ÃÃ -
.
ÃÃ- . 
CrearTransacciones
ÃÃ. @
(
ÃÃ@ A
arqueosDeCaja
ÃÃA N
)
ÃÃN O
;
ÃÃO P
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* O
,
––O P
e
––Q R
)
––R S
;
––S T
}
—— 
}
““ 	
public
÷÷ 
Transaccion
÷÷ 
CrearArqueoCaja
÷÷ *
(
÷÷* +
long
÷÷+ /
idOperacion
÷÷0 ;
,
÷÷; <
long
÷÷= A
idComprobante
÷÷B O
,
÷÷O P
int
÷÷Q T

idEmpleado
÷÷U _
,
÷÷_ `
DateTime
÷÷a i
fechaRegistro
÷÷j w
,
÷÷w x
string
÷÷y 
codigo÷÷Ä Ü
,÷÷Ü á
int÷÷à ã!
idTipoTransaccion÷÷å ù
,÷÷ù û
int÷÷ü ¢
accionARealizar÷÷£ ≤
,÷÷≤ ≥
int÷÷¥ ∑(
idTipoTransaccionValidar÷÷∏ –
,÷÷– —
string÷÷“ ÿ
observacion÷÷Ÿ ‰
,÷÷‰ Â
int÷÷Ê È"
idCentroDeAtencion÷÷Í ¸
,÷÷¸ ˝
decimal÷÷˛ Ö
total÷÷Ü ã
)÷÷ã å
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
int
€€ 
idMoneda
€€ 
=
€€ 
MaestroSettings
€€ .
.
€€. /
Default
€€/ 6
.
€€6 7)
IdDetalleMaestroMonedaSoles
€€7 R
;
€€R S
int
‹‹ 
idUnidadNegocio
‹‹ #
=
‹‹$ %
MaestroSettings
‹‹& 5
.
‹‹5 6
Default
‹‹6 =
.
‹‹= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
‹‹> h
;
‹‹h i
decimal
›› 
tipoDeCambio
›› $
=
››% &
$num
››' (
;
››( )
permisos_Logica
ﬂﬂ 
.
ﬂﬂ  
ValidarAccion
ﬂﬂ  -
(
ﬂﬂ- .

idEmpleado
ﬂﬂ. 8
,
ﬂﬂ8 9
accionARealizar
ﬂﬂ: I
,
ﬂﬂI J&
idTipoTransaccionValidar
ﬂﬂK c
,
ﬂﬂc d
idUnidadNegocio
ﬂﬂe t
)
ﬂﬂt u
;
ﬂﬂu v
Transaccion
·· 

arqueoCaja
·· &
=
··' (
new
··) ,
Transaccion
··- 8
(
··8 9
codigo
··9 ?
,
··? @
idOperacion
··A L
,
··L M
fechaRegistro
··N [
,
··[ \
idTipoTransaccion
··] n
,
··n o
idUnidadNegocio
··p 
,·· Ä
true··Å Ö
,··Ö Ü
fechaRegistro··á î
,··î ï
fechaRegistro··ñ £
,··£ §
observacion··• ∞
,··∞ ±
fechaRegistro··≤ ø
,··ø ¿

idEmpleado··¡ À
,··À Ã
total··Õ “
,··“ ”"
idCentroDeAtencion··‘ Ê
,··Ê Á
idMoneda··Ë 
,·· Ò
tipoDeCambio··Ú ˛
,··˛ ˇ
null··Ä Ñ
,··Ñ Ö"
idCentroDeAtencion··Ü ò
)··ò ô
{
‚‚ 
id_comprobante
„„ "
=
„„# $
idComprobante
„„% 2
}
‰‰ 
;
‰‰  
Estado_transaccion
ÂÂ "
estado
ÂÂ# )
=
ÂÂ* +
new
ÂÂ, / 
Estado_transaccion
ÂÂ0 B
(
ÂÂB C

idEmpleado
ÂÂC M
,
ÂÂM N
MaestroSettings
ÂÂO ^
.
ÂÂ^ _
Default
ÂÂ_ f
.
ÂÂf g/
 IdDetalleMaestroEstadoConfirmadoÂÂg á
,ÂÂá à
fechaRegistroÂÂâ ñ
,ÂÂñ ó
$strÂÂò “
)ÂÂ“ ”
;ÂÂ” ‘

arqueoCaja
ÊÊ 
.
ÊÊ  
Estado_transaccion
ÊÊ -
.
ÊÊ- .
Add
ÊÊ. 1
(
ÊÊ1 2
estado
ÊÊ2 8
)
ÊÊ8 9
;
ÊÊ9 :
return
ÁÁ 

arqueoCaja
ÁÁ !
;
ÁÁ! "
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
throw
ÎÎ 
new
ÎÎ 
LogicaException
ÎÎ )
(
ÎÎ) *
$str
ÎÎ* L
,
ÎÎL M
e
ÎÎN O
)
ÎÎO P
;
ÎÎP Q
}
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
OperationResult
ÔÔ !
GenerarArqueoDeCaja
ÔÔ 2
(
ÔÔ2 3
int
ÔÔ3 6

idEmpleado
ÔÔ7 A
)
ÔÔA B
{
 	
try
ÒÒ 
{
ÚÚ 
List
ÛÛ 
<
ÛÛ 
Transaccion
ÛÛ  
>
ÛÛ  !
arqueosDeCaja
ÛÛ" /
=
ÛÛ0 1
new
ÛÛ2 5
List
ÛÛ6 :
<
ÛÛ: ;
Transaccion
ÛÛ; F
>
ÛÛF G
(
ÛÛG H
)
ÛÛH I
;
ÛÛI J
	Operacion
ÙÙ 
operacionGenerica
ÙÙ +
=
ÙÙ, -
new
ÙÙ. 1
	Operacion
ÙÙ2 ;
(
ÙÙ; <$
transaccionRepositorio
ÙÙ< R
.
ÙÙR S&
ObtenerUltimaTransaccion
ÙÙS k
(
ÙÙk l!
TransaccionSettings
ÙÙl 
.ÙÙ Ä
DefaultÙÙÄ á
.ÙÙá à*
IdTipoTransaccionOperacionÙÙà ¢
)ÙÙ¢ £
)ÙÙ£ §
;ÙÙ§ •
DateTime
ıı 
fechaActual
ıı $
=
ıı% &
DateTimeUtil
ıı' 3
.
ıı3 4
FechaActual
ıı4 ?
(
ıı? @
)
ıı@ A
;
ııA B
var
˜˜ 
cajasVigentes
˜˜ !
=
˜˜" #
actorRepositorio
˜˜$ 4
.
˜˜4 5,
ObtenerActorDeNegocioPrincipal
˜˜5 S
(
˜˜S T
ActorSettings
˜˜T a
.
˜˜a b
Default
˜˜b i
.
˜˜i j!
IdRolEntidadInterna
˜˜j }
,
˜˜} ~
ActorSettings˜˜ å
.˜˜å ç
Default˜˜ç î
.˜˜î ï
	IdRolCaja˜˜ï û
,˜˜û ü
true˜˜† §
)˜˜§ •
.˜˜• ¶
ToList˜˜¶ ¨
(˜˜¨ ≠
)˜˜≠ Æ
;˜˜Æ Ø
string
¯¯ 
prefijoCodigo
¯¯ $
=
¯¯% &
$str
¯¯' +
;
¯¯+ ,
int
˘˘ 
maximo
˘˘ 
=
˘˘ %
codigosOperacion_Logica
˘˘ 4
.
˘˘4 50
"ObtenerMaximoCodigoParaTransaccion
˘˘5 W
(
˘˘W X
prefijoCodigo
˘˘X e
,
˘˘e f!
TransaccionSettings
˘˘g z
.
˘˘z {
Default˘˘{ Ç
.˘˘Ç É+
IdTipoTransaccionArqueoCaja˘˘É û
)˘˘û ü
;˘˘ü †
foreach
˙˙ 
(
˙˙ 
var
˙˙ 
cajaVigente
˙˙ (
in
˙˙) +
cajasVigentes
˙˙, 9
)
˙˙9 :
{
˚˚ 
string
¸¸ 
codigo
¸¸ !
=
¸¸" #
prefijoCodigo
¸¸$ 1
+
¸¸2 3
(
¸¸4 5
maximo
¸¸5 ;
+
¸¸< =
$num
¸¸> ?
)
¸¸? @
.
¸¸@ A
ToString
¸¸A I
(
¸¸I J
)
¸¸J K
;
¸¸K L
Transaccion
˛˛  
ultimoArqueoDeCaja
˛˛  2
=
˛˛3 4$
transaccionRepositorio
˛˛5 K
.
˛˛K L-
ObtenerUltimaTransaccionAntesDe
˛˛L k
(
˛˛k l
cajaVigente
˛˛l w
.
˛˛w x
id
˛˛x z
,
˛˛z {"
TransaccionSettings˛˛| è
.˛˛è ê
Default˛˛ê ó
.˛˛ó ò+
IdTipoTransaccionArqueoCaja˛˛ò ≥
,˛˛≥ ¥
fechaActual˛˛µ ¿
)˛˛¿ ¡
;˛˛¡ ¬
var
ÄÄ %
hayArqueoDeCajaAnterior
ÄÄ /
=
ÄÄ0 1 
ultimoArqueoDeCaja
ÄÄ2 D
!=
ÄÄE G
null
ÄÄH L
;
ÄÄL M
DateTime
ÅÅ %
fechaPrimeraTransaccion
ÅÅ 4
=
ÅÅ5 6
(
ÅÅ7 8
DateTime
ÅÅ8 @
)
ÅÅ@ A$
transaccionRepositorio
ÅÅA W
.
ÅÅW X,
ObtenerFechaPrimeraTransaccion
ÅÅX v
(
ÅÅv w
)
ÅÅw x
;
ÅÅx y
var
ÇÇ !
fechaDesdeParaSaldo
ÇÇ +
=
ÇÇ, -%
hayArqueoDeCajaAnterior
ÇÇ. E
?
ÇÇF G 
ultimoArqueoDeCaja
ÇÇH Z
.
ÇÇZ [
fecha_inicio
ÇÇ[ g
:
ÇÇh i&
fechaPrimeraTransaccionÇÇj Å
;ÇÇÅ Ç
var
ÉÉ !
fechaHastaParaSaldo
ÉÉ +
=
ÉÉ, -
fechaActual
ÉÉ. 9
;
ÉÉ9 :
List
áá 
<
áá 
Movimiento_Caja
áá (
>
áá( )
movimientos
áá* 5
=
áá6 7$
transaccionRepositorio
áá8 N
.
ááN O%
ObtenerMovimientoDeCaja
ááO f
(
ááf g!
TransaccionSettings
áág z
.
ááz {
Defaultáá{ Ç
.ááÇ É1
!IdAccionDeNegocioMovimientoEnCajaááÉ §
,áá§ •
cajaVigenteáá¶ ±
.áá± ≤
idáá≤ ¥
,áá¥ µ#
fechaDesdeParaSaldoáá∂ …
,áá…  #
fechaHastaParaSaldoááÀ ﬁ
)ááﬁ ﬂ
.ááﬂ ‡
ToListáá‡ Ê
(ááÊ Á
)ááÁ Ë
;ááË È
decimal
ââ $
nuevoImporteArqueoCaja
ââ 2
=
ââ3 4%
hayArqueoDeCajaAnterior
ââ5 L
?
ââM N 
ultimoArqueoDeCaja
ââO a
.
ââa b
importe_total
ââb o
:
ââp q
$num
ââr s
+
âât u
(
ââv w
movimientosââw Ç
.ââÇ É
CountââÉ à
>âââ ä
$numââã å
?ââç é
movimientosââè ö
.ââö õ
Whereââõ †
(ââ† °
mââ° ¢
=>ââ£ •
mââ¶ ß
.ââß ®
	EsIngresoââ® ±
)ââ± ≤
.ââ≤ ≥
Sumââ≥ ∂
(ââ∂ ∑
mââ∑ ∏
=>ââπ ª
mââº Ω
.ââΩ æ
Montoââæ √
)ââ√ ƒ
-ââ≈ ∆
movimientosââ« “
.ââ“ ”
Whereââ” ÿ
(ââÿ Ÿ
mââŸ ⁄
=>ââ€ ›
!ââﬁ ﬂ
mââﬂ ‡
.ââ‡ ·
	EsIngresoââ· Í
)ââÍ Î
.ââÎ Ï
SumââÏ Ô
(ââÔ 
mââ Ò
=>ââÚ Ù
mââı ˆ
.ââˆ ˜
Montoââ˜ ¸
)ââ¸ ˝
:ââ˛ ˇ
$numââÄ Å
)ââÅ Ç
;ââÇ É
Transaccion
ãã 

arqueoCaja
ãã  *
=
ãã+ ,
CrearArqueoCaja
ãã- <
(
ãã< =
operacionGenerica
ãã= N
.
ããN O
Id
ããO Q
,
ããQ R
operacionGenerica
ããS d
.
ããd e
IdComprobante
ããe r
,
ããr s

idEmpleado
ããt ~
,
ãã~ 
fechaActualããÄ ã
,ããã å
codigoããç ì
,ããì î#
TransaccionSettingsããï ®
.ãã® ©
Defaultãã© ∞
.ãã∞ ±+
IdTipoTransaccionArqueoCajaãã± Ã
,ããÃ Õ
MaestroSettingsããŒ ›
.ãã› ﬁ
Defaultããﬁ Â
.ããÂ Ê/
IdDetalleMaestroAccionConfirmarããÊ Ö
,ããÖ Ü#
TransaccionSettingsããá ö
.ããö õ
Defaultããõ ¢
.ãã¢ £+
IdTipoTransaccionArqueoCajaãã£ æ
,ããæ ø
$strãã¿ ¬
,ãã¬ √
cajaVigenteããƒ œ
.ããœ –
idãã– “
,ãã“ ”&
nuevoImporteArqueoCajaãã‘ Í
)ããÍ Î
;ããÎ Ï
arqueosDeCaja
åå !
.
åå! "
Add
åå" %
(
åå% &

arqueoCaja
åå& 0
)
åå0 1
;
åå1 2
maximo
çç 
++
çç 
;
çç 
}
éé 
return
èè $
transaccionRepositorio
èè -
.
èè- . 
CrearTransacciones
èè. @
(
èè@ A
arqueosDeCaja
èèA N
)
èèN O
;
èèO P
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì )
(
ìì) *
$str
ìì* K
,
ììK L
e
ììM N
)
ììN O
;
ììO P
}
îî 
}
ïï 	
public
úú 
decimal
úú  
ObtenerSaldoDeCaja
úú )
(
úú) *
int
úú* -
idCaja
úú. 4
,
úú4 5
DateTime
úú6 >
fecha
úú? D
)
úúD E
{
ùù 	
try
ûû 
{
üü 
Transaccion
°°  
ultimoArqueoDeCaja
°° .
=
°°/ 0$
transaccionRepositorio
°°1 G
.
°°G H-
ObtenerUltimaTransaccionAntesDe
°°H g
(
°°g h
idCaja
°°h n
,
°°n o"
TransaccionSettings°°p É
.°°É Ñ
Default°°Ñ ã
.°°ã å+
IdTipoTransaccionArqueoCaja°°å ß
,°°ß ®
fecha°°© Æ
)°°Æ Ø
;°°Ø ∞
List
££ 
<
££ 
Movimiento_Caja
££ $
>
££$ %
movimientos
££& 1
=
££2 3$
transaccionRepositorio
££4 J
.
££J K%
ObtenerMovimientoDeCaja
££K b
(
££b c!
TransaccionSettings
££c v
.
££v w
Default
££w ~
.
££~ 0
!IdAccionDeNegocioMovimientoEnCaja££ †
,££† °
idCaja££¢ ®
,££® ©"
ultimoArqueoDeCaja££™ º
.££º Ω
fecha_inicio££Ω …
,££…  
fecha££À –
)££– —
.££— “
ToList££“ ÿ
(££ÿ Ÿ
)££Ÿ ⁄
;££⁄ €
decimal
•• 
saldoDeCaja
•• #
=
••$ % 
ultimoArqueoDeCaja
••& 8
.
••8 9
importe_total
••9 F
+
••G H
movimientos
••I T
.
••T U
Where
••U Z
(
••Z [
m
••[ \
=>
••] _
m
••` a
.
••a b
	EsIngreso
••b k
)
••k l
.
••l m
Sum
••m p
(
••p q
m
••q r
=>
••s u
m
••v w
.
••w x
Monto
••x }
)
••} ~
-•• Ä
movimientos••Å å
.••å ç
Where••ç í
(••í ì
m••ì î
=>••ï ó
!••ò ô
m••ô ö
.••ö õ
	EsIngreso••õ §
)••§ •
.••• ¶
Sum••¶ ©
(••© ™
m••™ ´
=>••¨ Æ
m••Ø ∞
.••∞ ±
Monto••± ∂
)••∂ ∑
;••∑ ∏
return
©© 
saldoDeCaja
©© "
;
©©" #
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
e
´´ 
)
´´ 
{
¨¨ 
throw
≠≠ 
new
≠≠ 
LogicaException
≠≠ )
(
≠≠) *
$str
≠≠* B
,
≠≠B C
e
≠≠D E
)
≠≠E F
;
≠≠F G
}
ÆÆ 
}
ØØ 	
public
∂∂ 
decimal
∂∂  
ObtenerSaldoDeCaja
∂∂ )
(
∂∂) *
int
∂∂* -
[
∂∂- .
]
∂∂. /
idsCaja
∂∂0 7
,
∂∂7 8
DateTime
∂∂9 A
fecha
∂∂B G
)
∂∂G H
{
∑∑ 	
try
∏∏ 
{
ππ 
decimal
∫∫ 
saldo
∫∫ 
=
∫∫ 
$num
∫∫  !
;
∫∫! "
foreach
ªª 
(
ªª 
var
ªª 
idCaja
ªª #
in
ªª$ &
idsCaja
ªª' .
)
ªª. /
{
ºº 
saldo
ΩΩ 
+=
ΩΩ  
ObtenerSaldoDeCaja
ΩΩ /
(
ΩΩ/ 0
idCaja
ΩΩ0 6
,
ΩΩ6 7
fecha
ΩΩ8 =
)
ΩΩ= >
;
ΩΩ> ?
}
ææ 
return
øø 
saldo
øø 
;
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* U
,
√√U V
e
√√W X
)
√√X Y
;
√√Y Z
}
ƒƒ 
}
≈≈ 	
public
ÃÃ 
decimal
ÃÃ  
ObtenerSaldoDeCaja
ÃÃ )
(
ÃÃ) *
DateTime
ÃÃ* 2
fecha
ÃÃ3 8
)
ÃÃ8 9
{
ÕÕ 	
try
ŒŒ 
{
œœ 
Transaccion
——  
ultimoArqueoDeCaja
—— .
=
——/ 0$
transaccionRepositorio
——1 G
.
——G H-
ObtenerUltimaTransaccionAntesDe
——H g
(
——g h!
TransaccionSettings
——h {
.
——{ |
Default——| É
.——É Ñ+
IdTipoTransaccionArqueoCaja——Ñ ü
,——ü †
fecha——° ¶
)——¶ ß
;——ß ®
List
”” 
<
”” 
Movimiento_Caja
”” $
>
””$ %
movimientos
””& 1
=
””2 3$
transaccionRepositorio
””4 J
.
””J K%
ObtenerMovimientoDeCaja
””K b
(
””b c!
TransaccionSettings
””c v
.
””v w
Default
””w ~
.
””~ 0
!IdAccionDeNegocioMovimientoEnCaja”” †
,””† °"
ultimoArqueoDeCaja””¢ ¥
.””¥ µ
fecha_inicio””µ ¡
,””¡ ¬
fecha””√ »
)””» …
.””…  
ToList””  –
(””– —
)””— “
;””“ ”
decimal
’’ 
saldoDeCaja
’’ #
=
’’$ % 
ultimoArqueoDeCaja
’’& 8
.
’’8 9
importe_total
’’9 F
+
’’G H
movimientos
’’I T
.
’’T U
Where
’’U Z
(
’’Z [
m
’’[ \
=>
’’] _
m
’’` a
.
’’a b
	EsIngreso
’’b k
)
’’k l
.
’’l m
Sum
’’m p
(
’’p q
m
’’q r
=>
’’s u
m
’’v w
.
’’w x
Monto
’’x }
)
’’} ~
-’’ Ä
movimientos’’Å å
.’’å ç
Where’’ç í
(’’í ì
m’’ì î
=>’’ï ó
!’’ò ô
m’’ô ö
.’’ö õ
	EsIngreso’’õ §
)’’§ •
.’’• ¶
Sum’’¶ ©
(’’© ™
m’’™ ´
=>’’¨ Æ
m’’Ø ∞
.’’∞ ±
Monto’’± ∂
)’’∂ ∑
;’’∑ ∏
return
◊◊ 
saldoDeCaja
◊◊ "
;
◊◊" #
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
new
€€ 
LogicaException
€€ )
(
€€) *
$str
€€* B
,
€€B C
e
€€D E
)
€€E F
;
€€F G
}
‹‹ 
}
›› 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ %
Resumen_Movimiento_Caja
ﬂﬂ +
>
ﬂﬂ+ ,$
ObtenerSaldosIniciales
ﬂﬂ- C
(
ﬂﬂC D
DateTime
ﬂﬂD L

fechaDesde
ﬂﬂM W
,
ﬂﬂW X
bool
ﬂﬂY ]
reporteGlobal
ﬂﬂ^ k
,
ﬂﬂk l
int
ﬂﬂm p
[
ﬂﬂp q
]
ﬂﬂq r!
idsCentrosAtencionﬂﬂs Ö
)ﬂﬂÖ Ü
{
‡‡ 	
try
·· 
{
‚‚ 
List
„„ 
<
„„ %
Resumen_Movimiento_Caja
„„ ,
>
„„, - 
movimientosResumen
„„. @
=
„„A B
new
„„C F
List
„„G K
<
„„K L%
Resumen_Movimiento_Caja
„„L c
>
„„c d
(
„„d e
)
„„e f
;
„„f g
if
ÂÂ 
(
ÂÂ 
reporteGlobal
ÂÂ !
)
ÂÂ! "
{
ÊÊ 
var
ÁÁ 
cajasVigentes
ÁÁ %
=
ÁÁ& '
actorRepositorio
ÁÁ( 8
.
ÁÁ8 9,
ObtenerActorDeNegocioPrincipal
ÁÁ9 W
(
ÁÁW X
ActorSettings
ÁÁX e
.
ÁÁe f
Default
ÁÁf m
.
ÁÁm n"
IdRolEntidadInternaÁÁn Å
,ÁÁÅ Ç
ActorSettingsÁÁÉ ê
.ÁÁê ë
DefaultÁÁë ò
.ÁÁò ô
	IdRolCajaÁÁô ¢
,ÁÁ¢ £
trueÁÁ§ ®
)ÁÁ® ©
.ÁÁ© ™
ToListÁÁ™ ∞
(ÁÁ∞ ±
)ÁÁ± ≤
;ÁÁ≤ ≥
foreach
ËË 
(
ËË 
var
ËË  
cajaVigente
ËË! ,
in
ËË- /
cajasVigentes
ËË0 =
)
ËË= >
{
ÈÈ 
var
ÍÍ 
saldoInicial
ÍÍ (
=
ÍÍ) * 
ObtenerSaldoDeCaja
ÍÍ+ =
(
ÍÍ= >
cajaVigente
ÍÍ> I
.
ÍÍI J
id
ÍÍJ L
,
ÍÍL M

fechaDesde
ÍÍN X
)
ÍÍX Y
;
ÍÍY Z
var
ÎÎ 
resumen
ÎÎ #
=
ÎÎ$ %
new
ÎÎ& )%
Resumen_Movimiento_Caja
ÎÎ* A
(
ÎÎA B
)
ÎÎB C
{
ÏÏ 
IdCaja
ÌÌ "
=
ÌÌ# $
cajaVigente
ÌÌ% 0
.
ÌÌ0 1
id
ÌÌ1 3
,
ÌÌ3 4
SaldoInicial
ÓÓ (
=
ÓÓ) *
saldoInicial
ÓÓ+ 7
}
ÔÔ 
;
ÔÔ  
movimientosResumen
 *
.
* +
Add
+ .
(
. /
resumen
/ 6
)
6 7
;
7 8
}
ÒÒ 
}
ÚÚ 
else
ÛÛ 
{
ÙÙ 
foreach
ıı 
(
ıı 
var
ıı  
idCentroAtencion
ıı! 1
in
ıı2 4 
idsCentrosAtencion
ıı5 G
)
ııG H
{
ˆˆ 
var
˜˜ 
saldoInicial
˜˜ (
=
˜˜) * 
ObtenerSaldoDeCaja
˜˜+ =
(
˜˜= >
idCentroAtencion
˜˜> N
,
˜˜N O

fechaDesde
˜˜P Z
)
˜˜Z [
;
˜˜[ \
var
¯¯ 
resumen
¯¯ #
=
¯¯$ %
new
¯¯& )%
Resumen_Movimiento_Caja
¯¯* A
(
¯¯A B
)
¯¯B C
{
˘˘ 
IdCaja
˙˙ "
=
˙˙# $
idCentroAtencion
˙˙% 5
,
˙˙5 6
SaldoInicial
˚˚ (
=
˚˚) *
saldoInicial
˚˚+ 7
}
¸¸ 
;
¸¸  
movimientosResumen
˝˝ *
.
˝˝* +
Add
˝˝+ .
(
˝˝. /
resumen
˝˝/ 6
)
˝˝6 7
;
˝˝7 8
}
˛˛ 
}
ˇˇ 
return
ÄÄ  
movimientosResumen
ÄÄ )
;
ÄÄ) *
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
LogicaException
ÑÑ )
(
ÑÑ) *
$str
ÑÑ* ^
,
ÑÑ^ _
e
ÑÑ` a
)
ÑÑa b
;
ÑÑb c
}
ÖÖ 
}
ÜÜ 	
public
ãã 
List
ãã 
<
ãã 
Movimiento_Caja
ãã #
>
ãã# $"
ObtenerReporteDeCaja
ãã% 9
(
ãã9 :
DateTime
ãã: B

fechaDesde
ããC M
,
ããM N
DateTime
ããO W

fechaHasta
ããX b
,
ããb c
bool
ããd h
reporteGlobal
ããi v
,
ããv w
int
ããx {
[
ãã{ |
]
ãã| }!
idsCentrosAtencionãã~ ê
)ããê ë
{
åå 	
try
çç 
{
éé 
List
èè 
<
èè 
Movimiento_Caja
èè $
>
èè$ %
	resultado
èè& /
;
èè/ 0
if
êê 
(
êê 
reporteGlobal
êê !
)
êê! "
{
ëë 
	resultado
íí 
=
íí $
transaccionRepositorio
íí  6
.
íí6 7%
ObtenerMovimientoDeCaja
íí7 N
(
ííN O!
TransaccionSettings
ííO b
.
ííb c
Default
ííc j
.
ííj k0
!IdAccionDeNegocioMovimientoEnCajaíík å
,ííå ç

fechaDesdeííé ò
,ííò ô

fechaHastaííö §
)íí§ •
.íí• ¶
ToListíí¶ ¨
(íí¨ ≠
)íí≠ Æ
;ííÆ Ø
}
ìì 
else
îî 
{
ïï 
	resultado
ññ 
=
ññ $
transaccionRepositorio
ññ  6
.
ññ6 7%
ObtenerMovimientoDeCaja
ññ7 N
(
ññN O!
TransaccionSettings
ññO b
.
ññb c
Default
ññc j
.
ññj k0
!IdAccionDeNegocioMovimientoEnCajaññk å
,ññå ç"
idsCentrosAtencionññé †
,ññ† °

fechaDesdeññ¢ ¨
,ññ¨ ≠

fechaHastaññÆ ∏
)ññ∏ π
.ññπ ∫
ToListññ∫ ¿
(ññ¿ ¡
)ññ¡ ¬
;ññ¬ √
}
óó 
var
òò 
resultadoOrdenado
òò %
=
òò& '
	resultado
òò( 1
.
òò1 2
OrderBy
òò2 9
(
òò9 :
r
òò: ;
=>
òò< >
r
òò? @
.
òò@ A
Fecha
òòA F
)
òòF G
.
òòG H
ToList
òòH N
(
òòN O
)
òòO P
;
òòP Q
return
ôô 
resultadoOrdenado
ôô (
;
ôô( )
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* X
,
ùùX Y
e
ùùZ [
)
ùù[ \
;
ùù\ ]
}
ûû 
}
†† 	
public
££ 
List
££ 
<
££ 
DetalleCuotaPago
££ $
>
££$ %/
!ObtenerDetallesCuotaPagoOperacion
££& G
(
££G H
long
££H L
idOperacion
££M X
)
££X Y
{
§§ 	
try
•• 
{
¶¶ 
var
ßß 
detallesCuotaPago
ßß %
=
ßß& '$
transaccionRepositorio
ßß( >
.
ßß> ?1
#ObtenerDetallesCuotaPagoDeOperacion
ßß? b
(
ßßb c
idOperacion
ßßc n
)
ßßn o
.
ßßo p
ToList
ßßp v
(
ßßv w
)
ßßw x
;
ßßx y
return
®® 
detallesCuotaPago
®® (
;
®®( )
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* X
,
¨¨X Y
e
¨¨Z [
)
¨¨[ \
;
¨¨\ ]
}
≠≠ 
}
ØØ 	
}
∞∞ 
}±± ˜Ë	
JD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Compra.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
private 
Transaccion 
GenerarTransaccion .
(. /
int/ 2

idEmpleado3 =
,= >
int? B
idCentroAtencionC S
,S T
intU X
	idTerceroY b
,b c
intd g
idTipoTransaccionh y
,y z
bool{ 
esPropio
Ä à
,
à â
int
ä ç 
idSerieComprobante
é †
,
† °
int
¢ •
idTipoComprobante
¶ ∑
,
∑ ∏
string
π ø&
numeroSerieDeComprobante
¿ ÿ
,
ÿ Ÿ
int
⁄ ›!
numeroDeComprobante
ﬁ Ò
,
Ò Ú
DateTime
Û ˚
fechaOperacion
¸ ä
,
ä ã
DateTime
å î
fechaRegistro
ï ¢
,
¢ £
decimal
§ ´
importeTotal
¨ ∏
,
∏ π
string
∫ ¿
observacion
¡ Ã
)
Ã Õ
{ 	
try 
{ 
int 
idUnidadNegocio #
=$ %
MaestroSettings& 5
.5 6
Default6 =
.= >6
*IdDetalleMaestroUnidadDeNegocioTransversal> h
;h i
int 
idMoneda 
= 
MaestroSettings .
.. /
Default/ 6
.6 7'
IdDetalleMaestroMonedaSoles7 R
;R S
decimal 
tipoDeCambio $
=% &
$num' (
;( )
	Operacion 
operacionGenerica +
=, -
new. 1
	Operacion2 ;
(; <"
transaccionRepositorio< R
.R S$
ObtenerUltimaTransaccionS k
(k l
TransaccionSettingsl 
.	 Ä
Default
Ä á
.
á à(
IdTipoTransaccionOperacion
à ¢
)
¢ £
)
£ §
;
§ •
string 
codigo 
= #
codigosOperacion_Logica  7
.7 81
%ObtenerSiguienteCodigoParaFacturacion8 ]
(] ^
Diccionario^ i
.i j4
'MapeoTipoTransaccionVsCodigoDeOperacion	j ë
.
ë í
Single
í ò
(
ò ô
n
ô ö
=>
õ ù
n
û ü
.
ü †
Key
† £
==
§ ¶
idTipoTransaccion
ß ∏
)
∏ π
.
π ∫
Value
∫ ø
,
ø ¿
idTipoTransaccion
¡ “
)
“ ”
;
” ‘
Comprobante!! 
comprobante!! '
=!!( )
GenerarComprobante!!* <
(!!< =
esPropio!!= E
,!!E F
idSerieComprobante!!G Y
,!!Y Z
idTipoComprobante!![ l
,!!l m%
numeroSerieDeComprobante	!!n Ü
,
!!Ü á!
numeroDeComprobante
!!à õ
)
!!õ ú
;
!!ú ù
Transaccion## 
transaccion## '
=##( )
new##* -
Transaccion##. 9
(##9 :
codigo##: @
,##@ A
operacionGenerica##B S
.##S T
Id##T V
,##V W
fechaRegistro##X e
,##e f
idTipoTransaccion##g x
,##x y
idUnidadNegocio	##z â
,
##â ä
true
##ã è
,
##è ê
fechaOperacion
##ë ü
,
##ü †
fechaOperacion
##° Ø
,
##Ø ∞
observacion
##± º
,
##º Ω
fechaOperacion
##æ Ã
,
##Ã Õ

idEmpleado
##Œ ÿ
,
##ÿ Ÿ
importeTotal
##⁄ Ê
,
##Ê Á
idCentroAtencion
##Ë ¯
,
##¯ ˘
idMoneda
##˙ Ç
,
##Ç É
tipoDeCambio
##Ñ ê
,
##ê ë
null
##í ñ
,
##ñ ó
	idTercero
##ò °
)
##° ¢
{$$ 
Comprobante&& 
=&&  !
comprobante&&" -
}'' 
;'' 
return(( 
transaccion(( "
;((" #
})) 
catch** 
(** 
	Exception** 
e** 
)** 
{++ 
throw,, 
new,, 
LogicaException,, )
(,,) *
$str,,* K
,,,K L
e,,M N
),,N O
;,,O P
}-- 
}.. 	
private11 
Transaccion11 %
GenerarOrdenDeTransaccion11 5
(115 6
Transaccion116 A
	operacion11B K
,11K L
int11M P

idEmpleado11Q [
,11[ \
int11] `
idCentroAtencion11a q
,11q r
int11s v
idProveedor	11w Ç
,
11Ç É
int
11Ñ á 
idOrdenTransaccion
11à ö
,
11ö õ
DateTime
11ú §
fechaOperacion
11• ≥
,
11≥ ¥
DateTime
11µ Ω
fechaRegistro
11æ À
,
11À Ã
ModoOperacionEnum
11Õ ﬁ
tipoDeCompra
11ﬂ Î
,
11Î Ï!
TipoOperacionCompra
11Ì Ä%
tipoDeOperacionDeCompra
11Å ò
,
11ò ô
ModoPago
11ö ¢

modoDePago
11£ ≠
,
11≠ Æ
int
11Ø ≤
estadoTransaccion
11≥ ƒ
,
11ƒ ≈
string
11∆ Ã*
observacionEstadoTransaccion
11Õ È
,
11È Í
string
11Î Ò
observacion
11Ú ˝
,
11˝ ˛
List
11ˇ É
<
11É Ñ!
Detalle_transaccion
11Ñ ó
>
11ó ò
detalles
11ô °
,
11° ¢
bool
11£ ß
ingresoTotalOrden
11® π
)
11π ∫
{22 	
decimal33 
descuentoGlobal33 #
=33$ %
$num33& '
,33' (
descuentoPorItem33) 9
=33: ;
$num33< =
,33= >
anticipo33? G
=33H I
$num33J K
,33K L
gravada33M T
=33U V
$num33W X
,33X Y
	exonerada33Z c
=33d e
$num33f g
,33g h
inafecta33i q
=33r s
$num33t u
,33u v
gratuita33w 
=
33Ä Å
$num
33Ç É
,
33É Ñ
igv
33Ö à
=
33â ä
$num
33ã å
,
33å ç
isc
33é ë
=
33í ì
$num
33î ï
,
33ï ñ
icbper
33ó ù
=
33û ü
$num
33† °
,
33° ¢
otrosCargos
33£ Æ
=
33Ø ∞
$num
33± ≤
,
33≤ ≥
otrosTributos
33¥ ¡
=
33¬ √
$num
33ƒ ≈
;
33≈ ∆
if44 
(44 #
tipoDeOperacionDeCompra44 '
==44( *
TipoOperacionCompra44+ >
.44> ?
	NoGravada44? H
)44H I
{55 
gravada66 
=66 
detalles66 "
.66" #
Sum66# &
(66& '
d66' (
=>66) +
d66, -
.66- .
total66. 3
-664 5
d666 7
.667 8
igv668 ;
)66; <
;66< =
igv77 
=77 
detalles77 
.77 
Sum77 "
(77" #
d77# $
=>77% '
d77( )
.77) *
igv77* -
)77- .
;77. /
}88 
else99 
{:: 
	exonerada;; 
=;; 
detalles;; $
.;;$ %
Sum;;% (
(;;( )
d;;) *
=>;;+ -
d;;. /
.;;/ 0
total;;0 5
);;5 6
;;;6 7
}<< 
Transaccion>> 
ordenDeOperacion>> (
=>>) *
new>>+ .
Transaccion>>/ :
(>>: ;#
codigosOperacion_Logica>>; R
.>>R S1
%ObtenerSiguienteCodigoParaFacturacion>>S x
(>>x y
	operacion	>>y Ç
.
>>Ç É
codigo
>>É â
+
>>ä ã
$str
>>å è
+
>>ê ë
Diccionario
>>í ù
.
>>ù û5
'MapeoTipoTransaccionVsCodigoDeOperacion
>>û ≈
.
>>≈ ∆
Single
>>∆ Ã
(
>>Ã Õ
n
>>Õ Œ
=>
>>œ —
n
>>“ ”
.
>>” ‘
Key
>>‘ ◊
==
>>ÿ ⁄ 
idOrdenTransaccion
>>€ Ì
)
>>Ì Ó
.
>>Ó Ô
Value
>>Ô Ù
,
>>Ù ı 
idOrdenTransaccion
>>ˆ à
)
>>à â
,
>>â ä
null
>>ã è
,
>>è ê
fechaRegistro
>>ë û
,
>>û ü 
idOrdenTransaccion
>>† ≤
,
>>≤ ≥
	operacion
>>¥ Ω
.
>>Ω æ
id_unidad_negocio
>>æ œ
,
>>œ –
true
>>— ’
,
>>’ ÷
fechaOperacion
>>◊ Â
,
>>Â Ê
fechaOperacion
>>Á ı
,
>>ı ˆ
observacion
>>˜ Ç
,
>>Ç É
fechaOperacion
>>Ñ í
,
>>í ì

idEmpleado
>>î û
,
>>û ü
	operacion
>>† ©
.
>>© ™
importe_total
>>™ ∑
,
>>∑ ∏
idCentroAtencion
>>π …
,
>>…  
	operacion
>>À ‘
.
>>‘ ’
	id_moneda
>>’ ﬁ
,
>>ﬁ ﬂ
	operacion
>>‡ È
.
>>È Í
tipo_cambio
>>Í ı
,
>>ı ˆ
null
>>˜ ˚
,
>>˚ ¸
idProveedor
>>˝ à
,
>>à â
descuentoGlobal
>>ä ô
,
>>ô ö
descuentoPorItem
>>õ ´
,
>>´ ¨
anticipo
>>≠ µ
,
>>µ ∂
gravada
>>∑ æ
,
>>æ ø
	exonerada
>>¿ …
,
>>…  
inafecta
>>À ”
,
>>” ‘
gratuita
>>’ ›
,
>>› ﬁ
igv
>>ﬂ ‚
,
>>‚ „
isc
>>‰ Á
,
>>Á Ë
icbper
>>È Ô
,
>>Ô 
otrosCargos
>>Ò ¸
,
>>¸ ˝
otrosTributos
>>˛ ã
)
>>ã å
{?? 
ComprobanteAA 
=AA 
	operacionAA '
.AA' (
ComprobanteAA( 3
}BB 
;BB 
ordenDeOperacionDD 
.DD 
AgregarDetallesDD ,
(DD, -
detallesDD- 5
)DD5 6
;DD6 7
Estado_transaccionFF #
estadoDeLaOrdenDeCompraFF 6
=FF7 8
newFF9 <
Estado_transaccionFF= O
(FFO P

idEmpleadoFFP Z
,FFZ [
estadoTransaccionFF\ m
,FFm n
fechaRegistroFFo |
,FF| })
observacionEstadoTransaccion	FF~ ö
)
FFö õ
;
FFõ ú
ordenDeOperacionGG 
.GG 
Estado_transaccionGG /
.GG/ 0
AddGG0 3
(GG3 4#
estadoDeLaOrdenDeCompraGG4 K
)GGK L
;GGL M
ordenDeOperacionII 
.II !
Parametro_transaccionII 2
.II2 3
AddII3 6
(II6 7
newII7 :!
Parametro_transaccionII; P
(IIP Q
MaestroSettingsIIQ `
.II` a
DefaultIIa h
.IIh i0
#IdDetalleMaestroParametroModoDePago	IIi å
,
IIå ç
(
IIé è
(
IIè ê
int
IIê ì
)
IIì î

modoDePago
IIî û
)
IIû ü
.
IIü †
ToString
II† ®
(
II® ©
)
II© ™
)
II™ ´
)
II´ ¨
;
II¨ ≠
ordenDeOperacionJJ 
.JJ !
Parametro_transaccionJJ 2
.JJ2 3
AddJJ3 6
(JJ6 7
newJJ7 :!
Parametro_transaccionJJ; P
(JJP Q
MaestroSettingsJJQ `
.JJ` a
DefaultJJa h
.JJh i9
,IdDetalleMaestroParametroModoOperacionCompra	JJi ï
,
JJï ñ
(
JJó ò
(
JJò ô
int
JJô ú
)
JJú ù
tipoDeCompra
JJù ©
)
JJ© ™
.
JJ™ ´
ToString
JJ´ ≥
(
JJ≥ ¥
)
JJ¥ µ
)
JJµ ∂
)
JJ∂ ∑
;
JJ∑ ∏
ordenDeOperacionKK 
.KK !
Parametro_transaccionKK 2
.KK2 3
AddKK3 6
(KK6 7
newKK7 :!
Parametro_transaccionKK; P
(KKP Q
MaestroSettingsKKQ `
.KK` a
DefaultKKa h
.KKh i0
#IdDetalleMaestroParametroTipoCompra	KKi å
,
KKå ç
(
KKé è
(
KKè ê
int
KKê ì
)
KKì î%
tipoDeOperacionDeCompra
KKî ´
)
KK´ ¨
.
KK¨ ≠
ToString
KK≠ µ
(
KKµ ∂
)
KK∂ ∑
)
KK∑ ∏
)
KK∏ π
;
KKπ ∫
ifLL 
(LL 
tipoDeCompraLL 
==LL 
ModoOperacionEnumLL  1
.LL1 2
CorporativaLL2 =
)LL= >
{MM 
ordenDeOperacionNN  
.NN  !!
Parametro_transaccionNN! 6
.NN6 7
AddNN7 :
(NN: ;
newNN; >!
Parametro_transaccionNN? T
(NNT U
MaestroSettingsNNU d
.NNd e
DefaultNNe l
.NNl mD
7IdDetalleMaestroParametroEstadoGeneracionOrdenDeAlmacen	NNm §
,
NN§ •
ingresoTotalOrden
NN¶ ∑
?
NN∏ π
(
NN∫ ª
(
NNª º
int
NNº ø
)
NNø ¿
IngresoTotal
NN¿ Ã
.
NNÃ Õ
Si
NNÕ œ
)
NNœ –
.
NN– —
ToString
NN— Ÿ
(
NNŸ ⁄
)
NN⁄ €
:
NN‹ ›
(
NNﬁ ﬂ
(
NNﬂ ‡
int
NN‡ „
)
NN„ ‰
IngresoTotal
NN‰ 
.
NN Ò
No
NNÒ Û
)
NNÛ Ù
.
NNÙ ı
ToString
NNı ˝
(
NN˝ ˛
)
NN˛ ˇ
)
NNˇ Ä
)
NNÄ Å
;
NNÅ Ç
}OO 
returnPP 
ordenDeOperacionPP #
;PP# $
}QQ 	
privateSS 
voidSS 2
&ValidarAccionYRolPuntoDeCompraEnCompraSS ;
(SS; <
intSS< ?
idCompradorSS@ K
,SSK L
intSSM P
idAccionARealizarSSQ b
,SSb c
intSSd g
idTipoTransaccionSSh y
,SSy z
intSS{ ~
idPuntoDeCompra	SS é
)
SSé è
{TT 	
intUU 
idUnidadNegocioUU 
=UU  !
MaestroSettingsUU" 1
.UU1 2
DefaultUU2 9
.UU9 :6
*IdDetalleMaestroUnidadDeNegocioTransversalUU: d
;UUd e
permisos_LogicaWW 
.WW 
ValidarAccionWW )
(WW) *
idCompradorWW* 5
,WW5 6
MaestroSettingsWW7 F
.WWF G
DefaultWWG N
.WWN O+
IdDetalleMaestroAccionConfirmarWWO n
,WWn o 
TransaccionSettings	WWp É
.
WWÉ Ñ
Default
WWÑ ã
.
WWã å,
IdTipoTransaccionOrdenDeCompra
WWå ™
,
WW™ ´
idUnidadNegocio
WW¨ ª
)
WWª º
;
WWº Ω%
ValidarRolesPuntoDeCompraYY %
(YY% &
idPuntoDeCompraYY& 5
)YY5 6
;YY6 7
}ZZ 	
private\\ 
void\\ 8
,ValidarAccionYRolesPuntoDeCompraCajaEnCompra\\ A
(\\A B
int\\B E
idComprador\\F Q
,\\Q R
int\\S V
idAccionARealizar\\W h
,\\h i
int\\j m
idTipoTransaccion\\n 
,	\\ Ä
int
\\Å Ñ
idPuntoDeCompra
\\Ö î
,
\\î ï
int
\\ñ ô
idCaja
\\ö †
)
\\† °
{]] 	
int^^ 
idUnidadNegocio^^ 
=^^  !
MaestroSettings^^" 1
.^^1 2
Default^^2 9
.^^9 :6
*IdDetalleMaestroUnidadDeNegocioTransversal^^: d
;^^d e
permisos_Logica`` 
.`` 
ValidarAccion`` )
(``) *
idComprador``* 5
,``5 6
MaestroSettings``7 F
.``F G
Default``G N
.``N O+
IdDetalleMaestroAccionConfirmar``O n
,``n o 
TransaccionSettings	``p É
.
``É Ñ
Default
``Ñ ã
.
``ã å,
IdTipoTransaccionOrdenDeCompra
``å ™
,
``™ ´
idUnidadNegocio
``¨ ª
)
``ª º
;
``º Ω)
ValidarRolesPuntoDeCompraCajabb )
(bb) *
idPuntoDeComprabb* 9
,bb9 :
idCajabb; A
)bbA B
;bbB C
}cc 	
privateee 
voidee ;
/ValidarAccionYRolesPuntoDeCompraAlmacenEnCompraee D
(eeD E
inteeE H
idCompradoreeI T
,eeT U
inteeV Y
idAccionARealizareeZ k
,eek l
inteem p
idTipoTransaccion	eeq Ç
,
eeÇ É
int
eeÑ á
idPuntoDeCompra
eeà ó
,
eeó ò
int
eeô ú
	idAlmacen
eeù ¶
)
ee¶ ß
{ff 	
intgg 
idUnidadNegociogg 
=gg  !
MaestroSettingsgg" 1
.gg1 2
Defaultgg2 9
.gg9 :6
*IdDetalleMaestroUnidadDeNegocioTransversalgg: d
;ggd e
permisos_Logicaii 
.ii 
ValidarAccionii )
(ii) *
idCompradorii* 5
,ii5 6
MaestroSettingsii7 F
.iiF G
DefaultiiG N
.iiN O+
IdDetalleMaestroAccionConfirmariiO n
,iin o 
TransaccionSettings	iip É
.
iiÉ Ñ
Default
iiÑ ã
.
iiã å,
IdTipoTransaccionOrdenDeCompra
iiå ™
,
ii™ ´
idUnidadNegocio
ii¨ ª
)
iiª º
;
iiº Ω,
 ValidarRolesPuntoDeCompraAlmacenkk ,
(kk, -
idPuntoDeComprakk- <
,kk< =
	idAlmacenkk> G
)kkG H
;kkH I
}ll 	
privatenn 
voidnn ?
3ValidarAccionYRolesPuntoDeCompraCajaAlmacenEnComprann H
(nnH I
intnnI L
idCompradornnM X
,nnX Y
intnnZ ]
idAccionARealizarnn^ o
,nno p
intnnq t
idTipoTransaccion	nnu Ü
,
nnÜ á
int
nnà ã
idPuntoDeCompra
nnå õ
,
nnõ ú
int
nnù †
idCaja
nn° ß
,
nnß ®
int
nn© ¨
	idAlmacen
nn≠ ∂
)
nn∂ ∑
{oo 	
intpp 
idUnidadNegociopp 
=pp  !
MaestroSettingspp" 1
.pp1 2
Defaultpp2 9
.pp9 :6
*IdDetalleMaestroUnidadDeNegocioTransversalpp: d
;ppd e
permisos_Logicarr 
.rr 
ValidarAccionrr )
(rr) *
idCompradorrr* 5
,rr5 6
idAccionARealizarrr7 H
,rrH I
idTipoTransaccionrrJ [
,rr[ \
idUnidadNegociorr] l
)rrl m
;rrm n0
$ValidarRolesPuntoDeCompraCajaAlmacentt 0
(tt0 1
idPuntoDeCompratt1 @
,tt@ A
idCajattB H
,ttH I
	idAlmacenttJ S
)ttS T
;ttT U
}uu 	
publicww 
Listww 
<ww 
DetalleDeOperacionww &
>ww& '$
CalcularDetallesDeCompraww( @
(ww@ A
ListwwA E
<wwE F
DetalleDeOperacionwwF X
>wwX Y
detalleswwZ b
,wwb c
intwwd g
idTipoComprobantewwh y
,wwy z
intww{ ~

tipoCompra	ww â
,
wwâ ä
decimal
wwã í
flete
wwì ò
)
wwò ô
{xx 	
ifzz 
(zz 
fletezz 
>zz 
$numzz 
)zz 
{{{ 
detalles|| 
.|| 
Add|| 
(|| 
new||  
DetalleDeOperacion||! 3
(||3 4
ConceptoSettings||4 D
.||D E
Default||E L
.||L M"
IdConceptoNegocioFlete||M c
,||c d
$num||e f
,||f g
flete||h m
,||m n
flete||o t
,||t u
$num||v w
,||w x
$num||y z
,||z {
$num||| }
,||} ~
null	|| É
,
||É Ñ
null
||Ö â
,
||â ä
null
||ã è
,
||è ê
null
||ë ï
,
||ï ñ
false
||ó ú
,
||ú ù
$str
||û £
,
||£ §
null
||• ©
)
||© ™
)
||™ ´
;
||´ ¨
}}} 
foreach~~ 
(~~ 
var~~ 
item~~ 
in~~  
detalles~~! )
)~~) *
{ 
if
ÅÅ 
(
ÅÅ 
item
ÅÅ 
.
ÅÅ 
Cantidad
ÅÅ !
<=
ÅÅ" $
$num
ÅÅ% &
)
ÅÅ& '
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ -
(
ÇÇ- .
$str
ÇÇ. y
)
ÇÇy z
;
ÇÇz {
item
ÑÑ 
.
ÑÑ 
PrecioUnitario
ÑÑ #
=
ÑÑ$ %
item
ÑÑ& *
.
ÑÑ* +
Importe
ÑÑ+ 2
/
ÑÑ3 4
item
ÑÑ5 9
.
ÑÑ9 :
Cantidad
ÑÑ: B
;
ÑÑB C
if
ÜÜ 
(
ÜÜ 

tipoCompra
ÜÜ 
!=
ÜÜ !
(
ÜÜ" #
int
ÜÜ# &
)
ÜÜ& '!
TipoOperacionCompra
ÜÜ' :
.
ÜÜ: ;
	NoGravada
ÜÜ; D
)
ÜÜD E
item
áá 
.
áá 
Igv
áá 
=
áá 
item
áá #
.
áá# $
Importe
áá$ +
-
áá, -
(
áá. /
item
áá/ 3
.
áá3 4
Importe
áá4 ;
/
áá< =
(
áá> ?
(
áá? @
decimal
áá@ G
)
ááG H
$num
ááH I
+
ááJ K!
TransaccionSettings
ááL _
.
áá_ `
Default
áá` g
.
áág h
TasaIGV
ááh o
)
ááo p
)
ááp q
;
ááq r
}
àà 
return
ââ 
detalles
ââ 
;
ââ 
}
ää 	
private
çç 
void
çç '
GenerarOrdenAlmacenCompra
çç .
(
çç. /
Transaccion
çç/ :
compra
çç; A
,
ççA B
Transaccion
ççC N
ordenDeCompra
ççO \
,
çç\ ]
int
çç^ a
idComprador
ççb m
,
ççm n
int
çço r
idPuntoDeCompraççs Ç
,ççÇ É
intççÑ á
	idAlmacenççà ë
,ççë í
DateTimeççì õ
fechaRegistroççú ©
,çç© ™
boolçç´ Ø&
hayIngresoDeMercaderiaçç∞ ∆
,çç∆ «
Listçç» Ã
<ççÃ Õ"
DetalleDeOperacionççÕ ﬂ
>ççﬂ ‡ 
detallesDeCompraçç· Ò
,ççÒ Ú
ListççÛ ˜
<çç˜ ¯"
DetalleDeOperacionçç¯ ä
>ççä ã!
detallesDeIngresoççå ù
)ççù û
{
éé 	
detallesDeCompra
èè 
=
èè 
detallesDeCompra
èè /
.
èè/ 0
Where
èè0 5
(
èè5 6
dc
èè6 8
=>
èè9 ;
dc
èè< >
.
èè> ?
Producto
èè? G
.
èèG H
EsBien
èèH N
)
èèN O
.
èèO P
ToList
èèP V
(
èèV W
)
èèW X
;
èèX Y
List
êê 
<
êê  
DetalleDeOperacion
êê #
>
êê# $
detallesDeOrden
êê% 4
=
êê5 6
new
êê7 :
List
êê; ?
<
êê? @ 
DetalleDeOperacion
êê@ R
>
êêR S
(
êêS T
)
êêT U
;
êêU V
if
ëë 
(
ëë $
hayIngresoDeMercaderia
ëë &
)
ëë& '
{
íí 
foreach
ìì 
(
ìì 
var
ìì 
detalleDeCompra
ìì ,
in
ìì- /
detallesDeCompra
ìì0 @
)
ìì@ A
{
îî 
detalleDeCompra
ïï #
.
ïï# $
Cantidad
ïï$ ,
-=
ïï- /
detallesDeIngreso
ïï0 A
.
ïïA B
SingleOrDefault
ïïB Q
(
ïïQ R
d
ïïR S
=>
ïïT V
d
ïïW X
.
ïïX Y
Producto
ïïY a
.
ïïa b
Id
ïïb d
==
ïïe g
detalleDeCompra
ïïh w
.
ïïw x
Productoïïx Ä
.ïïÄ Å
IdïïÅ É
&&ïïÑ Ü
dïïá à
.ïïà â
Loteïïâ ç
==ïïé ê
detalleDeCompraïïë †
.ïï† °
Loteïï° •
)ïï• ¶
!=ïïß ©
nullïï™ Æ
?ïïØ ∞!
detallesDeIngresoïï± ¬
.ïï¬ √
SingleOrDefaultïï√ “
(ïï“ ”
dïï” ‘
=>ïï’ ◊
dïïÿ Ÿ
.ïïŸ ⁄
Productoïï⁄ ‚
.ïï‚ „
Idïï„ Â
==ïïÊ Ë
detalleDeCompraïïÈ ¯
.ïï¯ ˘
Productoïï˘ Å
.ïïÅ Ç
IdïïÇ Ñ
&&ïïÖ á
dïïà â
.ïïâ ä
Loteïïä é
==ïïè ë
detalleDeCompraïïí °
.ïï° ¢
Loteïï¢ ¶
)ïï¶ ß
.ïïß ®
Cantidadïï® ∞
:ïï± ≤
$numïï≥ ¥
;ïï¥ µ
detallesDeOrden
ññ #
.
ññ# $
Add
ññ$ '
(
ññ' (
detalleDeCompra
ññ( 7
.
ññ7 8
Clone
ññ8 =
(
ññ= >
)
ññ> ?
)
ññ? @
;
ññ@ A
}
óó 
}
òò 
else
ôô 
{
öö 
detallesDeOrden
õõ 
=
õõ  ! 
DetalleDeOperacion
õõ" 4
.
õõ4 5
Clone
õõ5 :
(
õõ: ;
detallesDeCompra
õõ; K
)
õõK L
;
õõL M
}
úú 
Serie_comprobante
ûû 
serie
ûû #
=
ûû$ %$
transaccionRepositorio
ûû& <
.
ûû< =M
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante
ûû= |
(
ûû| }
MaestroSettingsûû} å
.ûûå ç
Defaultûûç î
.ûûî ï9
)IdDetalleMaestroComprobanteOrdenDeAlmacenûûï æ
,ûûæ ø
idPuntoDeCompraûû¿ œ
)ûûœ –
;ûû– —
Transaccion
†† 
ordenDeAlmacen
†† &
=
††' (#
GenerarOrdenDeAlmacen
††) >
(
††> ?
compra
††? E
,
††E F
idComprador
††G R
,
††R S
	idAlmacen
††T ]
,
††] ^
serie
††_ d
.
††d e
id
††e g
,
††g h
fechaRegistro
††i v
,
††v w
fechaRegistro††x Ö
,††Ö Ü
MaestroSettings††á ñ
.††ñ ó
Default††ó û
.††û ü0
 IdDetalleMaestroEstadoConfirmado††ü ø
,††ø ¿
$str††¡ Û
,††Û Ù
$str††ı º
,††º Ω
detallesDeOrden††æ Õ
)††Õ Œ
;††Œ œ
ordenDeAlmacen
¢¢ 
.
¢¢ 
Transaccion3
¢¢ '
=
¢¢( )
ordenDeCompra
¢¢* 7
;
¢¢7 8
compra
§§ 
.
§§ 
Transaccion1
§§ 
.
§§  
Add
§§  #
(
§§# $
ordenDeAlmacen
§§$ 2
)
§§2 3
;
§§3 4
}
¶¶ 	
public
¨¨ 
OperationResult
¨¨ 
ConfirmarCompra
¨¨ .
(
¨¨. /
int
¨¨/ 2
idComprador
¨¨3 >
,
¨¨> ?
int
¨¨@ C
idPuntoDeCompra
¨¨D S
,
¨¨S T
int
¨¨U X
idCajero
¨¨Y a
,
¨¨a b
int
¨¨c f
idCaja
¨¨g m
,
¨¨m n
int
¨¨o r
idAlmacenero
¨¨s 
,¨¨ Ä
int¨¨Å Ñ
	idAlmacen¨¨Ö é
,¨¨é è
int¨¨ê ì
idProveedor¨¨î ü
,¨¨ü †
int¨¨° §

tipoCompra¨¨• Ø
,¨¨Ø ∞
int¨¨± ¥!
idTipoComprobante¨¨µ ∆
,¨¨∆ «
int¨¨» À"
idSerieComprobante¨¨Ã ﬁ
,¨¨ﬁ ﬂ
bool¨¨‡ ‰
esPropio¨¨Â Ì
,¨¨Ì Ó
string¨¨Ô ı(
numeroSerieDeComprobante¨¨ˆ é
,¨¨é è
int¨¨ê ì#
numeroDeComprobante¨¨î ß
,¨¨ß ®
string¨¨© Ø
observacion¨¨∞ ª
,¨¨ª º
DateTime¨¨Ω ≈
fechaOperacion¨¨∆ ‘
,¨¨‘ ’
List¨¨÷ ⁄
<¨¨⁄ €"
DetalleDeOperacion¨¨€ Ì
>¨¨Ì Ó 
detallesDeCompra¨¨Ô ˇ
,¨¨ˇ Ä
decimal¨¨Å à
flete¨¨â é
,¨¨é è&
UserProfileSessionData¨¨ê ¶
sesionUsuario¨¨ß ¥
)¨¨¥ µ
{
≠≠ 	
try
ÆÆ 
{
ØØ  
ValidarComprobante
∞∞ "
(
∞∞" #
idProveedor
∞∞# .
,
∞∞. /
esPropio
∞∞0 8
,
∞∞8 9
idTipoComprobante
∞∞: K
,
∞∞K L&
numeroSerieDeComprobante
∞∞M e
,
∞∞e f!
numeroDeComprobante
∞∞g z
)
∞∞z {
;
∞∞{ |A
3ValidarAccionYRolesPuntoDeCompraCajaAlmacenEnCompra
≤≤ C
(
≤≤C D
idComprador
≤≤D O
,
≤≤O P
MaestroSettings
≤≤Q `
.
≤≤` a
Default
≤≤a h
.
≤≤h i.
IdDetalleMaestroAccionConfirmar≤≤i à
,≤≤à â#
TransaccionSettings≤≤ä ù
.≤≤ù û
Default≤≤û •
.≤≤• ¶.
IdTipoTransaccionOrdenDeCompra≤≤¶ ƒ
,≤≤ƒ ≈
idPuntoDeCompra≤≤∆ ’
,≤≤’ ÷
idCaja≤≤◊ ›
,≤≤› ﬁ
	idAlmacen≤≤ﬂ Ë
)≤≤Ë È
;≤≤È Í
DateTime
¥¥ 
fechaRegistro
¥¥ &
=
¥¥' (
DateTimeUtil
¥¥) 5
.
¥¥5 6
FechaActual
¥¥6 A
(
¥¥A B
)
¥¥B C
;
¥¥C D
detallesDeCompra
∏∏  
=
∏∏! "&
CalcularDetallesDeCompra
∏∏# ;
(
∏∏; <
detallesDeCompra
∏∏< L
,
∏∏L M
idTipoComprobante
∏∏N _
,
∏∏_ `

tipoCompra
∏∏a k
,
∏∏k l
flete
∏∏m r
)
∏∏r s
;
∏∏s t
List
∫∫ 
<
∫∫ !
Detalle_transaccion
∫∫ (
>
∫∫( )"
detalles_transaccion
∫∫* >
=
∫∫? @
detallesDeCompra
∫∫A Q
.
∫∫Q R
Select
∫∫R X
(
∫∫X Y
d
∫∫Y Z
=>
∫∫[ ]
d
∫∫^ _
.
∫∫_ ` 
DetalleTransaccion
∫∫` r
(
∫∫r s
)
∫∫s t
)
∫∫t u
.
∫∫u v
ToList
∫∫v |
(
∫∫| }
)
∫∫} ~
;
∫∫~ 
decimal
ºº 
importeTotal
ºº $
=
ºº% &"
detalles_transaccion
ºº' ;
.
ºº; <
Sum
ºº< ?
(
ºº? @
dt
ºº@ B
=>
ººC E
dt
ººF H
.
ººH I
total
ººI N
)
ººN O
;
ººO P
Transaccion
ææ 
compra
ææ "
=
ææ# $ 
GenerarTransaccion
ææ% 7
(
ææ7 8
idComprador
ææ8 C
,
ææC D
idPuntoDeCompra
ææE T
,
ææT U
idProveedor
ææV a
,
ææa b!
TransaccionSettings
ææc v
.
ææv w
Default
ææw ~
.
ææ~ &
IdTipoTransaccionCompraææ ñ
,ææñ ó
esPropioææò †
,ææ† °"
idSerieComprobanteææ¢ ¥
,ææ¥ µ!
idTipoComprobanteææ∂ «
,ææ« »(
numeroSerieDeComprobanteææ… ·
,ææ· ‚#
numeroDeComprobanteææ„ ˆ
,ææˆ ˜
fechaOperacionææ¯ Ü
,ææÜ á
fechaRegistroææà ï
,ææï ñ
importeTotalææó £
,ææ£ §
observacionææ• ∞
)ææ∞ ±
;ææ± ≤
Transaccion
¿¿ 
ordenDeCompra
¿¿ )
=
¿¿* +'
GenerarOrdenDeTransaccion
¿¿, E
(
¿¿E F
compra
¿¿F L
,
¿¿L M
idComprador
¿¿N Y
,
¿¿Y Z
idPuntoDeCompra
¿¿[ j
,
¿¿j k
idProveedor
¿¿l w
,
¿¿w x"
TransaccionSettings¿¿y å
.¿¿å ç
Default¿¿ç î
.¿¿î ï.
IdTipoTransaccionOrdenDeCompra¿¿ï ≥
,¿¿≥ ¥
fechaOperacion¿¿µ √
,¿¿√ ƒ
fechaRegistro¿¿≈ “
,¿¿“ ”!
ModoOperacionEnum¿¿‘ Â
.¿¿Â Ê
PorMostrador¿¿Ê Ú
,¿¿Ú Û
(¿¿Ù ı#
TipoOperacionCompra¿¿ı à
)¿¿à â

tipoCompra¿¿â ì
,¿¿ì î
ModoPago¿¿ï ù
.¿¿ù û
Contado¿¿û •
,¿¿• ¶
MaestroSettings¿¿ß ∂
.¿¿∂ ∑
Default¿¿∑ æ
.¿¿æ ø0
 IdDetalleMaestroEstadoConfirmado¿¿ø ﬂ
,¿¿ﬂ ‡
$str¿¿· ¢
,¿¿¢ £
observacion¿¿§ Ø
,¿¿Ø ∞$
detalles_transaccion¿¿± ≈
,¿¿≈ ∆
true¿¿« À
)¿¿À Ã
;¿¿Ã Õ
ordenDeCompra
¬¬ 
.
¬¬ 
enum1
¬¬ #
=
¬¬$ %
(
¬¬& '
int
¬¬' *
)
¬¬* +%
IndicadorImpactoAlmacen
¬¬+ B
.
¬¬B C
	Inmediata
¬¬C L
;
¬¬L M
ordenDeCompra
√√ 
.
√√ '
id_actor_negocio_interno1
√√ 7
=
√√8 9
	idAlmacen
√√: C
;
√√C D 
Estado_transaccion
ƒƒ " 
estadoOrdenAlmacen
ƒƒ# 5
=
ƒƒ6 7
new
ƒƒ8 ; 
Estado_transaccion
ƒƒ< N
(
ƒƒN O
idAlmacenero
ƒƒO [
,
ƒƒ[ \
MaestroSettings
ƒƒ] l
.
ƒƒl m
Default
ƒƒm t
.
ƒƒt u/
 IdDetalleMaestroEstadoCompletadaƒƒu ï
,ƒƒï ñ
fechaRegistroƒƒó §
,ƒƒ§ •
$strƒƒ¶ Œ
)ƒƒŒ œ
;ƒƒœ –
ordenDeCompra
≈≈ 
.
≈≈  
Estado_transaccion
≈≈ 0
.
≈≈0 1
Add
≈≈1 4
(
≈≈4 5 
estadoOrdenAlmacen
≈≈5 G
)
≈≈G H
;
≈≈H I
compra
«« 
.
«« 
Transaccion1
«« #
.
««# $
Add
««$ '
(
««' (
ordenDeCompra
««( 5
)
««5 6
;
««6 7
Cuota
…… 
cuota
…… 
=
…… -
GenerarCuotaUnicaConPagoACuenta
…… =
(
……= >
idComprador
……> I
,
……I J
importeTotal
……K W
,
……W X
fechaOperacion
……Y g
,
……g h
false
……i n
)
……n o
;
……o p
ordenDeCompra
ÀÀ 
.
ÀÀ 
Cuota
ÀÀ #
.
ÀÀ# $
Add
ÀÀ$ '
(
ÀÀ' (
cuota
ÀÀ( -
)
ÀÀ- .
;
ÀÀ. /
Transaccion
ÕÕ 
pago
ÕÕ  
=
ÕÕ! "(
GenerarMovimientoEconomico
ÕÕ# =
(
ÕÕ= >
compra
ÕÕ> D
,
ÕÕD E
cuota
ÕÕF K
,
ÕÕK L
idCajero
ÕÕM U
,
ÕÕU V
idCaja
ÕÕW ]
,
ÕÕ] ^
idProveedor
ÕÕ_ j
,
ÕÕj k!
TransaccionSettings
ÕÕl 
.ÕÕ Ä
DefaultÕÕÄ á
.ÕÕá à8
(IdTipoTransaccionPagoFacturasProveedoresÕÕà ∞
,ÕÕ∞ ±
fechaOperacionÕÕ≤ ¿
,ÕÕ¿ ¡
fechaRegistroÕÕ¬ œ
,ÕÕœ –
observacionÕÕ— ‹
,ÕÕ‹ ›
MaestroSettingsÕÕﬁ Ì
.ÕÕÌ Ó
DefaultÕÕÓ ı
.ÕÕı ˆ3
#IdDetalleMaestroMedioDepagoEfectivoÕÕˆ ô
,ÕÕô ö
MaestroSettingsÕÕõ ™
.ÕÕ™ ´
DefaultÕÕ´ ≤
.ÕÕ≤ ≥9
)IdDetalleMaestroEntidadBancariaPorDefectoÕÕ≥ ‹
,ÕÕ‹ ›
$strÕÕﬁ Ì
)ÕÕÌ Ó
;ÕÕÓ Ô
compra
œœ 
.
œœ 
Transaccion1
œœ #
.
œœ# $
Add
œœ$ '
(
œœ' (
pago
œœ( ,
)
œœ, -
;
œœ- .
Transaccion
”” (
ingresoMercaderiaPorCompra
”” 6
=
””7 8+
GenerarMovimientoDeMercaderia
””9 V
(
””V W
compra
””W ]
,
””] ^
idAlmacenero
””_ k
,
””k l
	idAlmacen
””m v
,
””v w
idProveedor””x É
,””É Ñ#
TransaccionSettings””Ö ò
.””ò ô
Default””ô †
.””† °7
'IdTipoTransaccionIngresoBienesPorCompra””° »
,””» …
fechaRegistro””  ◊
,””◊ ÿ
observacion””Ÿ ‰
,””‰ Â 
detallesDeCompra””Ê ˆ
,””ˆ ˜
sesionUsuario””¯ Ö
,””Ö Ü
$num””á à
)””à â
;””â ä(
ingresoMercaderiaPorCompra
’’ *
.
’’* +
Transaccion3
’’+ 7
=
’’8 9
ordenDeCompra
’’: G
;
’’G H
compra
◊◊ 
.
◊◊ 
Transaccion1
◊◊ #
.
◊◊# $
Add
◊◊$ '
(
◊◊' ((
ingresoMercaderiaPorCompra
◊◊( B
)
◊◊B C
;
◊◊C D
return
⁄⁄ 6
(AfectarInventarioFisicoYGuardarOperacion
⁄⁄ ?
(
⁄⁄? @
new
⁄⁄@ C 
OperacionIntegrada
⁄⁄D V
(
⁄⁄V W
)
⁄⁄W X
{
⁄⁄Y Z
	Operacion
⁄⁄[ d
=
⁄⁄e f
compra
⁄⁄g m
,
⁄⁄m n
OrdenDeOperacion
⁄⁄o 
=⁄⁄Ä Å
ordenDeCompra⁄⁄Ç è
,⁄⁄è ê!
MovimientosBienes⁄⁄ë ¢
=⁄⁄£ §
new⁄⁄• ®
List⁄⁄© ≠
<⁄⁄≠ Æ
Transaccion⁄⁄Æ π
>⁄⁄π ∫
(⁄⁄∫ ª
)⁄⁄ª º
{⁄⁄Ω æ*
ingresoMercaderiaPorCompra⁄⁄ø Ÿ
}⁄⁄⁄ €
}⁄⁄‹ ›
,⁄⁄› ﬁ
sesionUsuario⁄⁄ﬂ Ï
)⁄⁄Ï Ì
;⁄⁄Ì Ó
}
€€ 
catch
‹‹ 
(
‹‹ !
ExistenciaException
‹‹ &
e
‹‹' (
)
‹‹( )
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
LogicaException
ﬁﬁ )
(
ﬁﬁ) *
$str
ﬁﬁ* Z
,
ﬁﬁZ [
e
ﬁﬁ\ ]
)
ﬁﬁ] ^
;
ﬁﬁ^ _
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
·· 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ )
(
‚‚) *
$str
‚‚* H
,
‚‚H I
e
‚‚J K
)
‚‚K L
;
‚‚L M
}
„„ 
}
‰‰ 	
private
ÊÊ 
void
ÊÊ  
ValidarComprobante
ÊÊ '
(
ÊÊ' (
int
ÊÊ( +
idProveedor
ÊÊ, 7
,
ÊÊ7 8
bool
ÊÊ9 =
esPropio
ÊÊ> F
,
ÊÊF G
int
ÊÊH K
idTipoComprobante
ÊÊL ]
,
ÊÊ] ^
string
ÊÊ_ e
numeroSerie
ÊÊf q
,
ÊÊq r
int
ÊÊs v 
numeroComprobanteÊÊw à
)ÊÊà â
{
ÁÁ 	
bool
ÈÈ '
existeNumeroDeComprobante
ÈÈ *
=
ÈÈ+ ,'
ExisteNumeroDeComprobante
ÈÈ- F
(
ÈÈF G
idProveedor
ÈÈG R
,
ÈÈR S
esPropio
ÈÈT \
==
ÈÈ] _
true
ÈÈ` d
?
ÈÈe f
$num
ÈÈg h
:
ÈÈi j
idTipoComprobante
ÈÈk |
,
ÈÈ| }
numeroSerieÈÈ~ â
,ÈÈâ ä!
numeroComprobanteÈÈã ú
,ÈÈú ù
MaestroSettingsÈÈû ≠
.ÈÈ≠ Æ
DefaultÈÈÆ µ
.ÈÈµ ∂0
 IdDetalleMaestroEstadoConfirmadoÈÈ∂ ÷
)ÈÈ÷ ◊
;ÈÈ◊ ÿ
if
ÍÍ 
(
ÍÍ '
existeNumeroDeComprobante
ÍÍ )
)
ÍÍ) *
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* j
)
ÏÏj k
;
ÏÏk l
}
ÌÌ 
}
ÓÓ 	
public
 
OperationResult
 ,
ConfirmarCompraAlCreditoRapido
 =
(
= >
int
> A
idComprador
B M
,
M N
int
O R
idPuntoDeCompra
S b
,
b c
int
d g
idAlmacenero
h t
,
t u
int
v y
	idAlmacenz É
,É Ñ
intÖ à
idProveedorâ î
,î ï
intñ ô

tipoCompraö §
,§ •
int¶ ©!
idTipoComprobante™ ª
,ª º
intΩ ¿"
idSerieComprobante¡ ”
,” ‘
bool’ Ÿ
esPropio⁄ ‚
,‚ „
string‰ Í(
numeroSerieDeComprobanteÎ É
,É Ñ
intÖ à#
numeroDeComprobanteâ ú
,ú ù
stringû §
observacion• ∞
,∞ ±
DateTime≤ ∫
fechaOperacionª …
,…  
ListÀ œ
<œ –"
DetalleDeOperacion– ‚
>‚ „ 
detallesDeCompra‰ Ù
,Ù ı
decimalˆ ˝
flete˛ É
,É Ñ&
UserProfileSessionDataÖ õ
sesionUsuarioú ©
)© ™
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ  
ValidarComprobante
ÙÙ "
(
ÙÙ" #
idProveedor
ÙÙ# .
,
ÙÙ. /
esPropio
ÙÙ0 8
,
ÙÙ8 9
idTipoComprobante
ÙÙ: K
,
ÙÙK L&
numeroSerieDeComprobante
ÙÙM e
,
ÙÙe f!
numeroDeComprobante
ÙÙg z
)
ÙÙz {
;
ÙÙ{ |=
/ValidarAccionYRolesPuntoDeCompraAlmacenEnCompra
ˆˆ ?
(
ˆˆ? @
idComprador
ˆˆ@ K
,
ˆˆK L
MaestroSettings
ˆˆM \
.
ˆˆ\ ]
Default
ˆˆ] d
.
ˆˆd e.
IdDetalleMaestroAccionConfirmarˆˆe Ñ
,ˆˆÑ Ö#
TransaccionSettingsˆˆÜ ô
.ˆˆô ö
Defaultˆˆö °
.ˆˆ° ¢.
IdTipoTransaccionOrdenDeCompraˆˆ¢ ¿
,ˆˆ¿ ¡
idPuntoDeCompraˆˆ¬ —
,ˆˆ— “
	idAlmacenˆˆ” ‹
)ˆˆ‹ ›
;ˆˆ› ﬁ
DateTime
¯¯ 
fechaRegistro
¯¯ &
=
¯¯' (
DateTimeUtil
¯¯) 5
.
¯¯5 6
FechaActual
¯¯6 A
(
¯¯A B
)
¯¯B C
;
¯¯C D
detallesDeCompra
˙˙  
=
˙˙! "&
CalcularDetallesDeCompra
˙˙# ;
(
˙˙; <
detallesDeCompra
˙˙< L
,
˙˙L M
idTipoComprobante
˙˙N _
,
˙˙_ `

tipoCompra
˙˙a k
,
˙˙k l
flete
˙˙m r
)
˙˙r s
;
˙˙s t
List
¸¸ 
<
¸¸ !
Detalle_transaccion
¸¸ (
>
¸¸( )"
detalles_transaccion
¸¸* >
=
¸¸? @
detallesDeCompra
¸¸A Q
.
¸¸Q R
Select
¸¸R X
(
¸¸X Y
d
¸¸Y Z
=>
¸¸[ ]
d
¸¸^ _
.
¸¸_ ` 
DetalleTransaccion
¸¸` r
(
¸¸r s
)
¸¸s t
)
¸¸t u
.
¸¸u v
ToList
¸¸v |
(
¸¸| }
)
¸¸} ~
;
¸¸~ 
decimal
˛˛ 
importeTotal
˛˛ $
=
˛˛% &"
detalles_transaccion
˛˛' ;
.
˛˛; <
Sum
˛˛< ?
(
˛˛? @
dt
˛˛@ B
=>
˛˛C E
dt
˛˛F H
.
˛˛H I
total
˛˛I N
)
˛˛N O
;
˛˛O P
Transaccion
ÄÄ 
compra
ÄÄ "
=
ÄÄ# $ 
GenerarTransaccion
ÄÄ% 7
(
ÄÄ7 8
idComprador
ÄÄ8 C
,
ÄÄC D
idPuntoDeCompra
ÄÄE T
,
ÄÄT U
idProveedor
ÄÄV a
,
ÄÄa b!
TransaccionSettings
ÄÄc v
.
ÄÄv w
Default
ÄÄw ~
.
ÄÄ~ &
IdTipoTransaccionCompraÄÄ ñ
,ÄÄñ ó
esPropioÄÄò †
,ÄÄ† °"
idSerieComprobanteÄÄ¢ ¥
,ÄÄ¥ µ!
idTipoComprobanteÄÄ∂ «
,ÄÄ« »(
numeroSerieDeComprobanteÄÄ… ·
,ÄÄ· ‚#
numeroDeComprobanteÄÄ„ ˆ
,ÄÄˆ ˜
fechaOperacionÄÄ¯ Ü
,ÄÄÜ á
fechaRegistroÄÄà ï
,ÄÄï ñ
importeTotalÄÄó £
,ÄÄ£ §
observacionÄÄ• ∞
)ÄÄ∞ ±
;ÄÄ± ≤
Transaccion
ÇÇ 
ordenDeCompra
ÇÇ )
=
ÇÇ* +'
GenerarOrdenDeTransaccion
ÇÇ, E
(
ÇÇE F
compra
ÇÇF L
,
ÇÇL M
idComprador
ÇÇN Y
,
ÇÇY Z
idPuntoDeCompra
ÇÇ[ j
,
ÇÇj k
idProveedor
ÇÇl w
,
ÇÇw x"
TransaccionSettingsÇÇy å
.ÇÇå ç
DefaultÇÇç î
.ÇÇî ï.
IdTipoTransaccionOrdenDeCompraÇÇï ≥
,ÇÇ≥ ¥
fechaOperacionÇÇµ √
,ÇÇ√ ƒ
fechaRegistroÇÇ≈ “
,ÇÇ“ ”!
ModoOperacionEnumÇÇ‘ Â
.ÇÇÂ Ê
PorMostradorÇÇÊ Ú
,ÇÇÚ Û
(ÇÇÙ ı#
TipoOperacionCompraÇÇı à
)ÇÇà â

tipoCompraÇÇâ ì
,ÇÇì î
ModoPagoÇÇï ù
.ÇÇù û
CreditoRapidoÇÇû ´
,ÇÇ´ ¨
MaestroSettingsÇÇ≠ º
.ÇÇº Ω
DefaultÇÇΩ ƒ
.ÇÇƒ ≈0
 IdDetalleMaestroEstadoConfirmadoÇÇ≈ Â
,ÇÇÂ Ê
$strÇÇÁ ®
,ÇÇ® ©
observacionÇÇ™ µ
,ÇÇµ ∂$
detalles_transaccionÇÇ∑ À
,ÇÇÀ Ã
trueÇÇÕ —
)ÇÇ— “
;ÇÇ“ ”
ordenDeCompra
ÑÑ 
.
ÑÑ 
enum1
ÑÑ #
=
ÑÑ$ %
(
ÑÑ& '
int
ÑÑ' *
)
ÑÑ* +%
IndicadorImpactoAlmacen
ÑÑ+ B
.
ÑÑB C
	Inmediata
ÑÑC L
;
ÑÑL M
ordenDeCompra
ÖÖ 
.
ÖÖ '
id_actor_negocio_interno1
ÖÖ 7
=
ÖÖ8 9
	idAlmacen
ÖÖ: C
;
ÖÖC D 
Estado_transaccion
ÜÜ " 
estadoOrdenAlmacen
ÜÜ# 5
=
ÜÜ6 7
new
ÜÜ8 ; 
Estado_transaccion
ÜÜ< N
(
ÜÜN O
idAlmacenero
ÜÜO [
,
ÜÜ[ \
MaestroSettings
ÜÜ] l
.
ÜÜl m
Default
ÜÜm t
.
ÜÜt u/
 IdDetalleMaestroEstadoCompletadaÜÜu ï
,ÜÜï ñ
fechaRegistroÜÜó §
,ÜÜ§ •
$strÜÜ¶ Œ
)ÜÜŒ œ
;ÜÜœ –
ordenDeCompra
áá 
.
áá  
Estado_transaccion
áá 0
.
áá0 1
Add
áá1 4
(
áá4 5 
estadoOrdenAlmacen
áá5 G
)
ááG H
;
ááH I
compra
ââ 
.
ââ 
Transaccion1
ââ #
.
ââ# $
Add
ââ$ '
(
ââ' (
ordenDeCompra
ââ( 5
)
ââ5 6
;
ââ6 7
Cuota
ãã 
cuota
ãã 
=
ãã 
GenerarCuotaUnica
ãã /
(
ãã/ 0
idComprador
ãã0 ;
,
ãã; <
importeTotal
ãã= I
,
ããI J
fechaOperacion
ããK Y
,
ããY Z
false
ãã[ `
,
ãã` a
MaestroSettings
ããb q
.
ããq r
Default
ããr y
.
ããy z/
 IdDetalleMaestroEstadoConfirmadoããz ö
,ããö õ
$strããú œ
)ããœ –
;ãã– —
ordenDeCompra
çç 
.
çç 
Cuota
çç #
.
çç# $
Add
çç$ '
(
çç' (
cuota
çç( -
)
çç- .
;
çç. /
Transaccion
èè (
ingresoMercaderiaPorCompra
èè 6
=
èè7 8+
GenerarMovimientoDeMercaderia
èè9 V
(
èèV W
compra
èèW ]
,
èè] ^
idAlmacenero
èè_ k
,
èèk l
	idAlmacen
èèm v
,
èèv w
idProveedorèèx É
,èèÉ Ñ#
TransaccionSettingsèèÖ ò
.èèò ô
Defaultèèô †
.èè† °7
'IdTipoTransaccionIngresoBienesPorCompraèè° »
,èè» …
fechaRegistroèè  ◊
,èè◊ ÿ
observacionèèŸ ‰
,èè‰ Â 
detallesDeCompraèèÊ ˆ
,èèˆ ˜
sesionUsuarioèè¯ Ö
,èèÖ Ü
$numèèá à
)èèà â
;èèâ ä(
ingresoMercaderiaPorCompra
ëë *
.
ëë* +
Transaccion3
ëë+ 7
=
ëë8 9
ordenDeCompra
ëë: G
;
ëëG H
compra
ìì 
.
ìì 
Transaccion1
ìì #
.
ìì# $
Add
ìì$ '
(
ìì' ((
ingresoMercaderiaPorCompra
ìì( B
)
ììB C
;
ììC D
return
ïï 6
(AfectarInventarioFisicoYGuardarOperacion
ïï ?
(
ïï? @
new
ïï@ C 
OperacionIntegrada
ïïD V
{
ïïW X
	Operacion
ïïY b
=
ïïc d
compra
ïïe k
,
ïïk l
OrdenDeOperacion
ïïm }
=
ïï~ 
ordenDeCompraïïÄ ç
,ïïç é!
MovimientosBienesïïè †
=ïï° ¢
newïï£ ¶
Listïïß ´
<ïï´ ¨
Transaccionïï¨ ∑
>ïï∑ ∏
(ïï∏ π
)ïïπ ∫
{ïïª º*
ingresoMercaderiaPorCompraïïΩ ◊
}ïïÿ Ÿ
}ïï⁄ €
,ïï€ ‹
sesionUsuarioïï› Í
)ïïÍ Î
;ïïÎ Ï
}
ññ 
catch
óó 
(
óó !
ExistenciaException
óó &
e
óó' (
)
óó( )
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* h
,
ôôh i
e
ôôj k
)
ôôk l
;
ôôl m
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* Z
,
ùùZ [
e
ùù\ ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
public
°° 
OperationResult
°° &
ConfirmarCompraAlCredito
°° 7
(
°°7 8
int
°°8 ;
idComprador
°°< G
,
°°G H
int
°°I L
idPuntoDeCompra
°°M \
,
°°\ ]
int
°°^ a
idCajero
°°b j
,
°°j k
int
°°l o
idCaja
°°p v
,
°°v w
int
°°x {
idAlmacenero°°| à
,°°à â
int°°ä ç
	idAlmacen°°é ó
,°°ó ò
int°°ô ú
idProveedor°°ù ®
,°°® ©
int°°™ ≠

tipoCompra°°Æ ∏
,°°∏ π
int°°∫ Ω!
idTipoComprobante°°æ œ
,°°œ –
int°°— ‘"
idSerieComprobante°°’ Á
,°°Á Ë
bool°°È Ì
esPropio°°Ó ˆ
,°°ˆ ˜
string°°¯ ˛(
numeroSerieDeComprobante°°ˇ ó
,°°ó ò
int°°ô ú#
numeroDeComprobante°°ù ∞
,°°∞ ±
string°°≤ ∏
observacion°°π ƒ
,°°ƒ ≈
DateTime°°∆ Œ
fechaOperacion°°œ ›
,°°› ﬁ
List°°ﬂ „
<°°„ ‰"
DetalleDeOperacion°°‰ ˆ
>°°ˆ ˜ 
detallesDeCompra°°¯ à
,°°à â
decimal°°ä ë
flete°°í ó
,°°ó ò
List°°ô ù
<°°ù û
Cuota°°û £
>°°£ §
cuotas°°• ´
,°°´ ¨&
UserProfileSessionData°°≠ √
sesionUsuario°°ƒ —
)°°— “
{
¢¢ 	
try
££ 
{
§§  
ValidarComprobante
•• "
(
••" #
idProveedor
••# .
,
••. /
esPropio
••0 8
,
••8 9
idTipoComprobante
••: K
,
••K L&
numeroSerieDeComprobante
••M e
,
••e f!
numeroDeComprobante
••g z
)
••z {
;
••{ |=
/ValidarAccionYRolesPuntoDeCompraAlmacenEnCompra
ßß ?
(
ßß? @
idComprador
ßß@ K
,
ßßK L
MaestroSettings
ßßM \
.
ßß\ ]
Default
ßß] d
.
ßßd e.
IdDetalleMaestroAccionConfirmarßße Ñ
,ßßÑ Ö#
TransaccionSettingsßßÜ ô
.ßßô ö
Defaultßßö °
.ßß° ¢.
IdTipoTransaccionOrdenDeCompraßß¢ ¿
,ßß¿ ¡
idPuntoDeCompraßß¬ —
,ßß— “
	idAlmacenßß” ‹
)ßß‹ ›
;ßß› ﬁ
DateTime
©© 
fechaRegistro
©© &
=
©©' (
DateTimeUtil
©©) 5
.
©©5 6
FechaActual
©©6 A
(
©©A B
)
©©B C
;
©©C D
detallesDeCompra
´´  
=
´´! "&
CalcularDetallesDeCompra
´´# ;
(
´´; <
detallesDeCompra
´´< L
,
´´L M
idTipoComprobante
´´N _
,
´´_ `

tipoCompra
´´a k
,
´´k l
flete
´´m r
)
´´r s
;
´´s t
List
≠≠ 
<
≠≠ !
Detalle_transaccion
≠≠ (
>
≠≠( )"
detalles_transaccion
≠≠* >
=
≠≠? @
detallesDeCompra
≠≠A Q
.
≠≠Q R
Select
≠≠R X
(
≠≠X Y
d
≠≠Y Z
=>
≠≠[ ]
d
≠≠^ _
.
≠≠_ ` 
DetalleTransaccion
≠≠` r
(
≠≠r s
)
≠≠s t
)
≠≠t u
.
≠≠u v
ToList
≠≠v |
(
≠≠| }
)
≠≠} ~
;
≠≠~ 
decimal
ØØ 
importeTotal
ØØ $
=
ØØ% &"
detalles_transaccion
ØØ' ;
.
ØØ; <
Sum
ØØ< ?
(
ØØ? @
dt
ØØ@ B
=>
ØØC E
dt
ØØF H
.
ØØH I
total
ØØI N
)
ØØN O
;
ØØO P
Transaccion
±± 
compra
±± "
=
±±# $ 
GenerarTransaccion
±±% 7
(
±±7 8
idComprador
±±8 C
,
±±C D
idPuntoDeCompra
±±E T
,
±±T U
idProveedor
±±V a
,
±±a b!
TransaccionSettings
±±c v
.
±±v w
Default
±±w ~
.
±±~ &
IdTipoTransaccionCompra±± ñ
,±±ñ ó
esPropio±±ò †
,±±† °"
idSerieComprobante±±¢ ¥
,±±¥ µ!
idTipoComprobante±±∂ «
,±±« »(
numeroSerieDeComprobante±±… ·
,±±· ‚#
numeroDeComprobante±±„ ˆ
,±±ˆ ˜
fechaOperacion±±¯ Ü
,±±Ü á
fechaRegistro±±à ï
,±±ï ñ
importeTotal±±ó £
,±±£ §
observacion±±• ∞
)±±∞ ±
;±±± ≤
Transaccion
≥≥ 
ordenDeCompra
≥≥ )
=
≥≥* +'
GenerarOrdenDeTransaccion
≥≥, E
(
≥≥E F
compra
≥≥F L
,
≥≥L M
idComprador
≥≥N Y
,
≥≥Y Z
idPuntoDeCompra
≥≥[ j
,
≥≥j k
idProveedor
≥≥l w
,
≥≥w x"
TransaccionSettings≥≥y å
.≥≥å ç
Default≥≥ç î
.≥≥î ï.
IdTipoTransaccionOrdenDeCompra≥≥ï ≥
,≥≥≥ ¥
fechaOperacion≥≥µ √
,≥≥√ ƒ
fechaRegistro≥≥≈ “
,≥≥“ ”!
ModoOperacionEnum≥≥‘ Â
.≥≥Â Ê
PorMostrador≥≥Ê Ú
,≥≥Ú Û
(≥≥Ù ı#
TipoOperacionCompra≥≥ı à
)≥≥à â

tipoCompra≥≥â ì
,≥≥ì î
ModoPago≥≥ï ù
.≥≥ù û"
CreditoConfigurado≥≥û ∞
,≥≥∞ ±
MaestroSettings≥≥≤ ¡
.≥≥¡ ¬
Default≥≥¬ …
.≥≥…  0
 IdDetalleMaestroEstadoConfirmado≥≥  Í
,≥≥Í Î
$str≥≥Ï ≠
,≥≥≠ Æ
observacion≥≥Ø ∫
,≥≥∫ ª$
detalles_transaccion≥≥º –
,≥≥– —
true≥≥“ ÷
)≥≥÷ ◊
;≥≥◊ ÿ
ordenDeCompra
µµ 
.
µµ 
enum1
µµ #
=
µµ$ %
(
µµ& '
int
µµ' *
)
µµ* +%
IndicadorImpactoAlmacen
µµ+ B
.
µµB C
	Inmediata
µµC L
;
µµL M
ordenDeCompra
∂∂ 
.
∂∂ '
id_actor_negocio_interno1
∂∂ 7
=
∂∂8 9
	idAlmacen
∂∂: C
;
∂∂C D 
Estado_transaccion
∑∑ " 
estadoOrdenAlmacen
∑∑# 5
=
∑∑6 7
new
∑∑8 ; 
Estado_transaccion
∑∑< N
(
∑∑N O
idAlmacenero
∑∑O [
,
∑∑[ \
MaestroSettings
∑∑] l
.
∑∑l m
Default
∑∑m t
.
∑∑t u/
 IdDetalleMaestroEstadoCompletada∑∑u ï
,∑∑ï ñ
fechaRegistro∑∑ó §
,∑∑§ •
$str∑∑¶ Œ
)∑∑Œ œ
;∑∑œ –
ordenDeCompra
∏∏ 
.
∏∏  
Estado_transaccion
∏∏ 0
.
∏∏0 1
Add
∏∏1 4
(
∏∏4 5 
estadoOrdenAlmacen
∏∏5 G
)
∏∏G H
;
∏∏H I
compra
∫∫ 
.
∫∫ 
Transaccion1
∫∫ #
.
∫∫# $
Add
∫∫$ '
(
∫∫' (
ordenDeCompra
∫∫( 5
)
∫∫5 6
;
∫∫6 7
ordenDeCompra
ºº 
.
ºº 
Cuota
ºº #
=
ºº$ %
GenerarCuotas
ºº& 3
(
ºº3 4
idComprador
ºº4 ?
,
ºº? @
cuotas
ººA G
,
ººG H
fechaOperacion
ººI W
,
ººW X
false
ººY ^
,
ºº^ _
MaestroSettings
ºº` o
.
ººo p
Default
ººp w
.
ººw x/
 IdDetalleMaestroEstadoConfirmadoººx ò
,ººò ô
$strººö Õ
)ººÕ Œ
;ººŒ œ
var
ææ 
cuotaInicial
ææ  
=
ææ! "
ordenDeCompra
ææ# 0
.
ææ0 1
Cuota
ææ1 6
.
ææ6 7
SingleOrDefault
ææ7 F
(
ææF G
c
ææG H
=>
ææI K
c
ææL M
.
ææM N
cuota_inicial
ææN [
)
ææ[ \
;
ææ\ ]
if
øø 
(
øø 
cuotaInicial
øø  
!=
øø! #
null
øø$ (
)
øø( )
{
¿¿ 
cuotaInicial
¬¬  
.
¬¬  !
SetPagoACuenta
¬¬! /
(
¬¬/ 0
cuotaInicial
¬¬0 <
.
¬¬< =
total
¬¬= B
)
¬¬B C
;
¬¬C D
Transaccion
ƒƒ 
pago
ƒƒ  $
=
ƒƒ% &(
GenerarMovimientoEconomico
ƒƒ' A
(
ƒƒA B
compra
ƒƒB H
,
ƒƒH I
cuotaInicial
ƒƒJ V
,
ƒƒV W
idCajero
ƒƒX `
,
ƒƒ` a
idCaja
ƒƒb h
,
ƒƒh i
idProveedor
ƒƒj u
,
ƒƒu v"
TransaccionSettingsƒƒw ä
.ƒƒä ã
Defaultƒƒã í
.ƒƒí ì8
(IdTipoTransaccionPagoFacturasProveedoresƒƒì ª
,ƒƒª º
fechaOperacionƒƒΩ À
,ƒƒÀ Ã
fechaRegistroƒƒÕ ⁄
,ƒƒ⁄ €
observacionƒƒ‹ Á
,ƒƒÁ Ë
MaestroSettingsƒƒÈ ¯
.ƒƒ¯ ˘
Defaultƒƒ˘ Ä
.ƒƒÄ Å3
#IdDetalleMaestroMedioDepagoEfectivoƒƒÅ §
,ƒƒ§ •
MaestroSettingsƒƒ¶ µ
.ƒƒµ ∂
Defaultƒƒ∂ Ω
.ƒƒΩ æ9
)IdDetalleMaestroEntidadBancariaPorDefectoƒƒæ Á
,ƒƒÁ Ë
$strƒƒÈ ¯
)ƒƒ¯ ˘
;ƒƒ˘ ˙
compra
∆∆ 
.
∆∆ 
Transaccion1
∆∆ '
.
∆∆' (
Add
∆∆( +
(
∆∆+ ,
pago
∆∆, 0
)
∆∆0 1
;
∆∆1 2
}
«« 
Transaccion
…… (
ingresoMercaderiaPorCompra
…… 6
=
……7 8+
GenerarMovimientoDeMercaderia
……9 V
(
……V W
compra
……W ]
,
……] ^
idAlmacenero
……_ k
,
……k l
	idAlmacen
……m v
,
……v w
idProveedor……x É
,……É Ñ#
TransaccionSettings……Ö ò
.……ò ô
Default……ô †
.……† °7
'IdTipoTransaccionIngresoBienesPorCompra……° »
,……» …
fechaRegistro……  ◊
,……◊ ÿ
observacion……Ÿ ‰
,……‰ Â 
detallesDeCompra……Ê ˆ
,……ˆ ˜
sesionUsuario……¯ Ö
,……Ö Ü
$num……á à
)……à â
;……â ä(
ingresoMercaderiaPorCompra
ÀÀ *
.
ÀÀ* +
Transaccion3
ÀÀ+ 7
=
ÀÀ8 9
ordenDeCompra
ÀÀ: G
;
ÀÀG H
compra
ÕÕ 
.
ÕÕ 
Transaccion1
ÕÕ #
.
ÕÕ# $
Add
ÕÕ$ '
(
ÕÕ' ((
ingresoMercaderiaPorCompra
ÕÕ( B
)
ÕÕB C
;
ÕÕC D
return
œœ 6
(AfectarInventarioFisicoYGuardarOperacion
œœ ?
(
œœ? @
new
œœ@ C 
OperacionIntegrada
œœD V
{
œœW X
	Operacion
œœY b
=
œœc d
compra
œœe k
,
œœk l
OrdenDeOperacion
œœm }
=
œœ~ 
ordenDeCompraœœÄ ç
,œœç é!
MovimientosBienesœœè †
=œœ° ¢
newœœ£ ¶
Listœœß ´
<œœ´ ¨
Transaccionœœ¨ ∑
>œœ∑ ∏
(œœ∏ π
)œœπ ∫
{œœª º*
ingresoMercaderiaPorCompraœœΩ ◊
}œœÿ Ÿ
}œœ⁄ €
,œœ€ ‹
sesionUsuarioœœ› Í
)œœÍ Î
;œœÎ Ï
}
–– 
catch
—— 
(
—— !
ExistenciaException
—— &
e
——' (
)
——( )
{
““ 
throw
”” 
new
”” 
LogicaException
”” )
(
””) *
$str
””* a
,
””a b
e
””c d
)
””d e
;
””e f
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’ 
e
’’ 
)
’’ 
{
÷÷ 
throw
◊◊ 
new
◊◊ 
LogicaException
◊◊ )
(
◊◊) *
$str
◊◊* S
,
◊◊S T
e
◊◊U V
)
◊◊V W
;
◊◊W X
}
ÿÿ 
}
ŸŸ 	
public
·· 
OperationResult
·· +
ContabilizarCompraCorporativa
·· <
(
··< =
long
··= A
idOrdenCompra
··B O
)
··O P
{
‚‚ 	
return
ÏÏ 
null
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
OperationResult
ÔÔ 3
%RegistrarComprobanteCompraCorporativa
ÔÔ D
(
ÔÔD E
int
ÔÔE H

idEmpleado
ÔÔI S
,
ÔÔS T
int
ÔÔU X
idCentroAtencion
ÔÔY i
,
ÔÔi j
long
ÔÔk o
idCompra
ÔÔp x
,
ÔÔx y
int
ÔÔz } 
idTipoComprobanteÔÔ~ è
,ÔÔè ê
intÔÔë î"
idSerieComprobanteÔÔï ß
,ÔÔß ®
boolÔÔ© ≠
esPropioÔÔÆ ∂
,ÔÔ∂ ∑
stringÔÔ∏ æ(
numeroSerieDeComprobanteÔÔø ◊
,ÔÔ◊ ÿ
intÔÔŸ ‹#
numeroDeComprobanteÔÔ› 
)ÔÔ Ò
{
 	
try
ÒÒ 
{
ÚÚ 
DateTime
ÛÛ 
fechaActual
ÛÛ $
=
ÛÛ% &
DateTimeUtil
ÛÛ' 3
.
ÛÛ3 4
FechaActual
ÛÛ4 ?
(
ÛÛ? @
)
ÛÛ@ A
;
ÛÛA B
Compra
ıı 
compra
ıı 
=
ıı 
new
ıı  #
Compra
ıı$ *
(
ıı* +$
transaccionRepositorio
ıı+ A
.
ııA BF
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
ııB z
(
ıız {
idCompraıı{ É
)ııÉ Ñ
)ııÑ Ö
;ııÖ Ü
Transaccion
˜˜ 
nuevaOrdenCompra
˜˜ ,
=
˜˜- .
compra
˜˜/ 5
.
˜˜5 6
OrdenDeCompra
˜˜6 C
(
˜˜C D
)
˜˜D E
.
˜˜E F
Transaccion
˜˜F Q
(
˜˜Q R
)
˜˜R S
.
˜˜S T'
CloneTransaccionYDetalles
˜˜T m
(
˜˜m n
)
˜˜n o
;
˜˜o p
Comprobante
˘˘ 
nuevoComprobante
˘˘ ,
=
˘˘- . 
GenerarComprobante
˘˘/ A
(
˘˘A B
esPropio
˘˘B J
,
˘˘J K 
idSerieComprobante
˘˘L ^
,
˘˘^ _
idTipoComprobante
˘˘` q
,
˘˘q r'
numeroSerieDeComprobante˘˘s ã
,˘˘ã å#
numeroDeComprobante˘˘ç †
)˘˘† °
;˘˘° ¢
nuevaOrdenCompra
˚˚  
.
˚˚  !
Comprobante
˚˚! ,
=
˚˚- .
nuevoComprobante
˚˚/ ?
;
˚˚? @ 
Estado_transaccion
˝˝ "
estadoConfirmado
˝˝# 3
=
˝˝4 5
new
˝˝6 9 
Estado_transaccion
˝˝: L
(
˝˝L M

idEmpleado
˝˝M W
,
˝˝W X
MaestroSettings
˝˝Y h
.
˝˝h i
Default
˝˝i p
.
˝˝p q/
 IdDetalleMaestroEstadoConfirmado˝˝q ë
,˝˝ë í
fechaActual˝˝ì û
,˝˝û ü
$str˝˝† ‘
)˝˝‘ ’
;˝˝’ ÷
nuevaOrdenCompra
˛˛  
.
˛˛  ! 
Estado_transaccion
˛˛! 3
.
˛˛3 4
Add
˛˛4 7
(
˛˛7 8
estadoConfirmado
˛˛8 H
)
˛˛H I
;
˛˛I J
nuevaOrdenCompra
ÄÄ  
.
ÄÄ  !
Cuota
ÄÄ! &
=
ÄÄ' (
compra
ÄÄ) /
.
ÄÄ/ 0
OrdenDeCompra
ÄÄ0 =
(
ÄÄ= >
)
ÄÄ> ?
.
ÄÄ? @
Transaccion
ÄÄ@ K
(
ÄÄK L
)
ÄÄL M
.
ÄÄM N
Cuota
ÄÄN S
.
ÄÄS T
ToList
ÄÄT Z
(
ÄÄZ [
)
ÄÄ[ \
;
ÄÄ\ ] 
Estado_transaccion
ÇÇ "
estadoEditado
ÇÇ# 0
=
ÇÇ1 2
new
ÇÇ3 6 
Estado_transaccion
ÇÇ7 I
(
ÇÇI J

idEmpleado
ÇÇJ T
,
ÇÇT U
MaestroSettings
ÇÇV e
.
ÇÇe f
Default
ÇÇf m
.
ÇÇm n,
IdDetalleMaestroEstadoEditadoÇÇn ã
,ÇÇã å
fechaActualÇÇç ò
,ÇÇò ô
$strÇÇö À
)ÇÇÀ Ã
;ÇÇÃ Õ
estadoEditado
ÉÉ 
.
ÉÉ 
id_transaccion
ÉÉ ,
=
ÉÉ- .
compra
ÉÉ/ 5
.
ÉÉ5 6
OrdenDeCompra
ÉÉ6 C
(
ÉÉC D
)
ÉÉD E
.
ÉÉE F
Transaccion
ÉÉF Q
(
ÉÉQ R
)
ÉÉR S
.
ÉÉS T
id
ÉÉT V
;
ÉÉV W
return
ÖÖ $
transaccionRepositorio
ÖÖ -
.
ÖÖ- .5
'CrearTransaccionYCrearEstadoTransaccion
ÖÖ. U
(
ÖÖU V
nuevaOrdenCompra
ÖÖV f
,
ÖÖf g
estadoEditado
ÖÖh u
)
ÖÖu v
;
ÖÖv w
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
e
ââ 
;
ââ 
}
ää 
}
ãã 	
public
ìì 
OperationResult
ìì 
InvalidarCompra
ìì .
(
ìì. /
long
ìì/ 3
idOrdenDeCompra
ìì4 C
,
ììC D
int
ììE H

idEmpleado
ììI S
,
ììS T
int
ììU X
idCentroAtencion
ììY i
,
ììi j
string
ììk q
observaciones
ììr 
,ìì Ä&
UserProfileSessionDataììÅ ó
sesionUsuarioììò •
)ìì• ¶
{
îî 	
try
ïï 
{
ññ 
OrdenDeCompra
òò 
ordenDeCompra
òò +
=
òò, -
new
òò. 1
OrdenDeCompra
òò2 ?
(
òò? @$
transaccionRepositorio
òò@ V
.
òòV WZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccionòòW ¢
(òò¢ £
idOrdenDeCompraòò£ ≤
)òò≤ ≥
)òò≥ ¥
;òò¥ µ
DateTime
öö 
fechaActual
öö $
=
öö% &
DateTimeUtil
öö' 3
.
öö3 4
FechaActual
öö4 ?
(
öö? @
)
öö@ A
;
ööA B
int
úú 
idUnidadDeNegocio
úú %
=
úú& '
ordenDeCompra
úú( 5
.
úú5 6
Transaccion
úú6 A
(
úúA B
)
úúB C
.
úúC D
Transaccion2
úúD P
.
úúP Q
id_unidad_negocio
úúQ b
;
úúb c
permisos_Logica
ûû 
.
ûû  
ValidarAccion
ûû  -
(
ûû- .

idEmpleado
ûû. 8
,
ûû8 9
MaestroSettings
ûû: I
.
ûûI J
Default
ûûJ Q
.
ûûQ R-
IdDetalleMaestroAccionInvalidar
ûûR q
,
ûûq r"
TransaccionSettingsûûs Ü
.ûûÜ á
Defaultûûá é
.ûûé è.
IdTipoTransaccionOrdenDeCompraûûè ≠
,ûû≠ Æ!
idUnidadDeNegocioûûØ ¿
)ûû¿ ¡
;ûû¡ ¬
decimal
†† 
tipoDeCambio
†† $
=
††% &
ordenDeCompra
††' 4
.
††4 5
TipoDeCambio
††5 A
;
††A B
int
°° 
idProveedor
°° 
=
°°  !
ordenDeCompra
°°" /
.
°°/ 0
	Proveedor
°°0 9
(
°°9 :
)
°°: ;
.
°°; <
Id
°°< >
;
°°> ?
long
¢¢ 
idCompra
¢¢ 
=
¢¢ 
ordenDeCompra
¢¢  -
.
¢¢- .
IdCompra
¢¢. 6
;
¢¢6 7
decimal
££ 
importeTotal
££ $
=
££% &
ordenDeCompra
££' 4
.
££4 5
Total
££5 :
;
££: ;
var
§§ 

modoDePago
§§ 
=
§§  
ordenDeCompra
§§! .
.
§§. /

ModoDePago
§§/ 9
(
§§9 :
)
§§: ;
;
§§; <
var
•• 
tipoDeCompra
••  
=
••! "
ordenDeCompra
••# 0
.
••0 1
TipoDeCompra
••1 =
(
••= >
)
••> ?
;
••? @
var
¶¶ %
tipoDeOperacionDeCompra
¶¶ +
=
¶¶, -
ordenDeCompra
¶¶. ;
.
¶¶; <%
TipoDeOperacionDeCompra
¶¶< S
(
¶¶S T
)
¶¶T U
;
¶¶U V
Compra
®® 
compra
®® 
=
®® 
new
®®  #
Compra
®®$ *
(
®®* +$
transaccionRepositorio
®®+ A
.
®®A B0
"ObtenerTransaccionInclusiveEstados
®®B d
(
®®d e
ordenDeCompra
®®e r
.
®®r s
IdCompra
®®s {
)
®®{ |
)
®®| }
;
®®} ~
bool
™™ #
hayMovimientoDeDinero
™™ *
=
™™+ ,
compra
™™- 3
.
™™3 4
ObtenerPagos
™™4 @
(
™™@ A
)
™™A B
!=
™™C E
null
™™F J
&&
™™K M
compra
™™N T
.
™™T U
ObtenerPagos
™™U a
(
™™a b
)
™™b c
.
™™c d
Count
™™d i
>
™™j k
$num
™™l m
;
™™m n
bool
´´ $
hayMovimientoDeAlmacen
´´ +
=
´´, -
compra
´´. 4
.
´´4 5(
ObtenerIngresoDeMercaderia
´´5 O
(
´´O P
)
´´P Q
!=
´´R T
null
´´U Y
&&
´´Z \
compra
´´] c
.
´´c d(
ObtenerIngresoDeMercaderia
´´d ~
(
´´~ 
)´´ Ä
.´´Ä Å
Count´´Å Ü
>´´á à
$num´´â ä
;´´ä ã
int
≠≠ 
idCaja
≠≠ 
=
≠≠ #
hayMovimientoDeDinero
≠≠ 2
?
≠≠3 4
compra
≠≠5 ;
.
≠≠; <
ObtenerPagos
≠≠< H
(
≠≠H I
)
≠≠I J
.
≠≠J K
Count
≠≠K P
(
≠≠P Q
)
≠≠Q R
>
≠≠S T
$num
≠≠U V
?
≠≠W X
compra
≠≠Y _
.
≠≠_ `
ObtenerPagos
≠≠` l
(
≠≠l m
)
≠≠m n
.
≠≠n o
First
≠≠o t
(
≠≠t u
)
≠≠u v
.
≠≠v w
Transaccion≠≠w Ç
(≠≠Ç É
)≠≠É Ñ
.≠≠Ñ Ö(
id_actor_negocio_interno≠≠Ö ù
:≠≠û ü 
idCentroAtencion≠≠† ∞
:≠≠± ≤ 
idCentroAtencion≠≠≥ √
;≠≠√ ƒ
int
ØØ 
	idAlmacen
ØØ 
=
ØØ $
hayMovimientoDeAlmacen
ØØ  6
?
ØØ7 8
compra
ØØ9 ?
.
ØØ? @(
ObtenerIngresoDeMercaderia
ØØ@ Z
(
ØØZ [
)
ØØ[ \
.
ØØ\ ]
First
ØØ] b
(
ØØb c
)
ØØc d
.
ØØd e
Transaccion
ØØe p
(
ØØp q
)
ØØq r
.
ØØr s'
id_actor_negocio_internoØØs ã
:ØØå ç
$numØØé è
;ØØè ê
decimal
±± 
importePagoTotal
±± (
;
±±( )
List
≤≤ 
<
≤≤ 
Cuota
≤≤ 
>
≤≤ 
cuotasModificadas
≤≤ -
=
≤≤. /
new
≤≤0 3
List
≤≤4 8
<
≤≤8 9
Cuota
≤≤9 >
>
≤≤> ?
(
≤≤? @
)
≤≤@ A
;
≤≤A B
if
¥¥ 
(
¥¥ 
ordenDeCompra
¥¥ !
.
¥¥! "

ModoDePago
¥¥" ,
(
¥¥, -
)
¥¥- .
==
¥¥/ 1
ModoPago
¥¥2 :
.
¥¥: ;
Contado
¥¥; B
)
¥¥B C
{
µµ 
importePagoTotal
∂∂ $
=
∂∂% &
importeTotal
∂∂' 3
;
∂∂3 4
}
∑∑ 
else
∏∏ 
{
ππ 
importePagoTotal
∫∫ $
=
∫∫% &
ordenDeCompra
∫∫' 4
.
∫∫4 5
Transaccion
∫∫5 @
(
∫∫@ A
)
∫∫A B
.
∫∫B C
Cuota
∫∫C H
.
∫∫H I

SelectMany
∫∫I S
(
∫∫S T
c
∫∫T U
=>
∫∫V X
c
∫∫Y Z
.
∫∫Z [

Pago_cuota
∫∫[ e
)
∫∫e f
.
∫∫f g
Sum
∫∫g j
(
∫∫j k
cp
∫∫k m
=>
∫∫n p
cp
∫∫q s
.
∫∫s t
importe
∫∫t {
)
∫∫{ |
;
∫∫| }
var
ªª 
importeRevocar
ªª &
=
ªª' (
importeTotal
ªª) 5
-
ªª6 7
importePagoTotal
ªª8 H
;
ªªH I
foreach
ºº 
(
ºº 
var
ºº  
cuota
ºº! &
in
ºº' )
ordenDeCompra
ºº* 7
.
ºº7 8
Cuotas
ºº8 >
(
ºº> ?
)
ºº? @
.
ºº@ A
OrderByDescending
ººA R
(
ººR S
c
ººS T
=>
ººU W
c
ººX Y
.
ººY Z
fecha_vencimiento
ººZ k
)
ººk l
)
ººl m
{
ΩΩ 
if
ææ 
(
ææ 
cuota
ææ !
.
ææ! "
saldo
ææ" '
>
ææ( )
$num
ææ* +
)
ææ+ ,
{
øø 
cuota
¿¿ !
.
¿¿! "
revocado
¿¿" *
=
¿¿+ ,
cuota
¿¿- 2
.
¿¿2 3
saldo
¿¿3 8
;
¿¿8 9
cuota
¡¡ !
.
¡¡! "
saldo
¡¡" '
=
¡¡( )
cuota
¡¡* /
.
¡¡/ 0
total
¡¡0 5
-
¡¡6 7
cuota
¡¡8 =
.
¡¡= >
pago_a_cuenta
¡¡> K
-
¡¡L M
cuota
¡¡N S
.
¡¡S T
revocado
¡¡T \
;
¡¡\ ]
cuotasModificadas
¬¬ -
.
¬¬- .
Add
¬¬. 1
(
¬¬1 2
cuota
¬¬2 7
)
¬¬7 8
;
¬¬8 9
}
√√ 
}
ƒƒ 
}
≈≈ 
Serie_comprobante
«« !
serie
««" '
=
««( )$
transaccionRepositorio
««* @
.
««@ AN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante««A Ä
(««Ä Å
MaestroSettings««Å ê
.««ê ë
Default««ë ò
.««ò ôA
1IdDetalleMaestroComprobanteNotaInvalidacionCompra««ô  
,««  À 
idCentroAtencion««Ã ‹
)««‹ ›
;««› ﬁ
if
»» 
(
»» 
serie
»» 
==
»» 
null
»» !
)
»»! "
{
…… 
throw
   
new
   
LogicaException
   -
(
  - .
$str
  . N
)
  N O
;
  O P
}
ÀÀ 
List
ŒŒ 
<
ŒŒ  
DetalleDeOperacion
ŒŒ '
>
ŒŒ' (+
detallesDeInvalidacionDeVenta
ŒŒ) F
=
ŒŒG H
ordenDeCompra
ŒŒI V
.
ŒŒV W
Detalles
ŒŒW _
(
ŒŒ_ `
)
ŒŒ` a
;
ŒŒa b 
Estado_transaccion
÷÷ "#
estadoDeOrdenDeCompra
÷÷# 8
=
÷÷9 :
new
÷÷; > 
Estado_transaccion
÷÷? Q
(
÷÷Q R
idOrdenDeCompra
÷÷R a
,
÷÷a b

idEmpleado
÷÷c m
,
÷÷m n
MaestroSettings
÷÷o ~
.
÷÷~ 
Default÷÷ Ü
.÷÷Ü á0
 IdDetalleMaestroEstadoInvalidado÷÷á ß
,÷÷ß ®
fechaActual÷÷© ¥
,÷÷¥ µ
$str
◊◊ B
)
◊◊B C
;
◊◊C D
OperationResult
ŸŸ 
result
ŸŸ  &
=
ŸŸ' (
null
ŸŸ) -
;
ŸŸ- .
if
⁄⁄ 
(
⁄⁄ 
ordenDeCompra
⁄⁄ !
.
⁄⁄! "
TipoDeCompra
⁄⁄" .
(
⁄⁄. /
)
⁄⁄/ 0
==
⁄⁄1 3
ModoOperacionEnum
⁄⁄4 E
.
⁄⁄E F
Corporativa
⁄⁄F Q
)
⁄⁄Q R
{
€€ 
result
‹‹ 
=
‹‹ 3
%ResolverInvalidacionCompraCorporativa
‹‹ B
(
‹‹B C
ordenDeCompra
‹‹C P
,
‹‹P Q

idEmpleado
‹‹R \
,
‹‹\ ]
true
‹‹^ b
,
‹‹b c
serie
‹‹d i
.
‹‹i j
id
‹‹j l
,
‹‹l m
fechaActual
‹‹n y
,
‹‹y z
importeTotal‹‹{ á
,‹‹á à
observaciones‹‹â ñ
,‹‹ñ ó
idProveedor‹‹ò £
,‹‹£ § 
idCentroAtencion‹‹• µ
,‹‹µ ∂
tipoDeCompra‹‹∑ √
,‹‹√ ƒ'
tipoDeOperacionDeCompra‹‹≈ ‹
,‹‹‹ ›

modoDePago‹‹ﬁ Ë
,‹‹Ë È-
detallesDeInvalidacionDeVenta‹‹Í á
,‹‹á à%
estadoDeOrdenDeCompra‹‹â û
,‹‹û ü%
hayMovimientoDeDinero‹‹† µ
,‹‹µ ∂&
hayMovimientoDeAlmacen‹‹∑ Õ
)‹‹Õ Œ
;‹‹Œ œ
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
result
‡‡ 
=
‡‡ 1
#ResolverInvalidacionCompraIntegrada
‡‡ @
(
‡‡@ A
ordenDeCompra
‡‡A N
,
‡‡N O
compra
‡‡P V
,
‡‡V W

idEmpleado
‡‡X b
,
‡‡b c
true
‡‡d h
,
‡‡h i
serie
‡‡j o
.
‡‡o p
id
‡‡p r
,
‡‡r s
fechaActual
‡‡t 
,‡‡ Ä
importeTotal‡‡Å ç
,‡‡ç é 
importePagoTotal‡‡è ü
,‡‡ü †
observaciones‡‡° Æ
,‡‡Æ Ø
idProveedor‡‡∞ ª
,‡‡ª º 
idCentroAtencion‡‡Ω Õ
,‡‡Õ Œ
idCaja‡‡œ ’
,‡‡’ ÷
	idAlmacen‡‡◊ ‡
,‡‡‡ ·
tipoDeCompra‡‡‚ Ó
,‡‡Ó Ô'
tipoDeOperacionDeCompra‡‡ á
,‡‡á à

modoDePago‡‡â ì
,‡‡ì î-
detallesDeInvalidacionDeVenta‡‡ï ≤
,‡‡≤ ≥%
estadoDeOrdenDeCompra‡‡¥ …
,‡‡…  !
cuotasModificadas‡‡À ‹
,‡‡‹ ›
sesionUsuario‡‡ﬁ Î
)‡‡Î Ï
;‡‡Ï Ì
}
·· 
return
„„ 
result
„„ 
;
„„ 
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
return
ÁÁ 
new
ÁÁ 
OperationResult
ÁÁ *
(
ÁÁ* +
new
ÁÁ+ .
	Exception
ÁÁ/ 8
(
ÁÁ8 9
$str
ÁÁ9 `
,
ÁÁ` a
e
ÁÁb c
)
ÁÁc d
)
ÁÁd e
;
ÁÁe f
}
ËË 
}
ÍÍ 	
private
ÓÓ 
OperationResult
ÓÓ 3
%ResolverInvalidacionCompraCorporativa
ÓÓ  E
(
ÓÓE F
OrdenDeCompra
ÓÓF S
ordenDeCompra
ÓÓT a
,
ÓÓa b
int
ÓÓc f

idEmpleado
ÓÓg q
,
ÓÓq r
bool
ÓÓs w
esPropioÓÓx Ä
,ÓÓÄ Å
intÓÓÇ Ö"
idSerieComprobanteÓÓÜ ò
,ÓÓò ô
DateTimeÓÓö ¢
fechaActualÓÓ£ Æ
,ÓÓÆ Ø
decimalÓÓ∞ ∑
importeTotalÓÓ∏ ƒ
,ÓÓƒ ≈
stringÓÓ∆ Ã
observacionÓÓÕ ÿ
,ÓÓÿ Ÿ
intÓÓ⁄ ›
idProveedorÓÓﬁ È
,ÓÓÈ Í
intÓÓÎ Ó 
idCentroAtencionÓÓÔ ˇ
,ÓÓˇ Ä!
ModoOperacionEnumÓÓÅ í
tipoDeCompraÓÓì ü
,ÓÓü †#
TipoOperacionCompraÓÓ° ¥'
tipoDeOperacionDeCompraÓÓµ Ã
,ÓÓÃ Õ
ModoPagoÓÓŒ ÷

modoDePagoÓÓ◊ ·
,ÓÓ· ‚
ListÓÓ„ Á
<ÓÓÁ Ë"
DetalleDeOperacionÓÓË ˙
>ÓÓ˙ ˚
detallesÓÓ¸ Ñ
,ÓÓÑ Ö"
Estado_transaccionÓÓÜ ò%
estadoDeOrdenDeCompraÓÓô Æ
,ÓÓÆ Ø
boolÓÓ∞ ¥%
hayMovimientoDeDineroÓÓµ  
,ÓÓ  À
boolÓÓÃ –&
hayMovimientoDeAlmacenÓÓ— Á
)ÓÓÁ Ë
{
ÔÔ 	
try
 
{
ÒÒ 
List
ÛÛ 
<
ÛÛ !
Detalle_transaccion
ÛÛ (
>
ÛÛ( )"
detalles_transaccion
ÛÛ* >
=
ÛÛ? @
detalles
ÛÛA I
.
ÛÛI J
Select
ÛÛJ P
(
ÛÛP Q
d
ÛÛQ R
=>
ÛÛS U
d
ÛÛV W
.
ÛÛW X 
DetalleTransaccion
ÛÛX j
(
ÛÛj k
)
ÛÛk l
)
ÛÛl m
.
ÛÛm n
ToList
ÛÛn t
(
ÛÛt u
)
ÛÛu v
;
ÛÛv w
Transaccion
ıı "
invalidacionDeCompra
ıı 0
=
ıı1 2 
GenerarTransaccion
ıı3 E
(
ııE F

idEmpleado
ııF P
,
ııP Q
idCentroAtencion
ııR b
,
ııb c
idProveedor
ııd o
,
ııo p"
TransaccionSettingsııq Ñ
.ııÑ Ö
DefaultııÖ å
.ııå ç5
%IdTipoTransaccionInvalidacionDeCompraııç ≤
,ıı≤ ≥
trueıı¥ ∏
,ıı∏ π"
idSerieComprobanteıı∫ Ã
,ııÃ Õ
$numııŒ œ
,ııœ –
$strıı— ”
,ıı” ‘
$numıı’ ÷
,ıı÷ ◊
fechaActualııÿ „
,ıı„ ‰
fechaActualııÂ 
,ıı Ò
importeTotalııÚ ˛
,ıı˛ ˇ
observacionııÄ ã
)ııã å
;ııå ç"
invalidacionDeCompra
˜˜ $
.
˜˜$ %'
id_transaccion_referencia
˜˜% >
=
˜˜? @
ordenDeCompra
˜˜A N
.
˜˜N O
Transaccion
˜˜O Z
(
˜˜Z [
)
˜˜[ \
.
˜˜\ ]"
id_transaccion_padre
˜˜] q
;
˜˜q r
bool
˙˙ &
seEntregoMercaderiaTotal
˙˙ -
=
˙˙. /$
hayMovimientoDeAlmacen
˙˙0 F
?
˙˙G H
(
˙˙I J
bool
˙˙J N
)
˙˙N O
ordenDeCompra
˙˙O \
.
˙˙\ ]+
SeEntregoMercaderiaTotalMente
˙˙] z
(
˙˙z {
)
˙˙{ |
:
˙˙} ~
true˙˙ É
;˙˙É Ñ
Transaccion
˝˝ '
ordenInvalidacionDeCompra
˝˝ 5
=
˝˝6 7'
GenerarOrdenDeTransaccion
˝˝8 Q
(
˝˝Q R"
invalidacionDeCompra
˝˝R f
,
˝˝f g

idEmpleado
˝˝h r
,
˝˝r s
idCentroAtencion˝˝t Ñ
,˝˝Ñ Ö
idProveedor˝˝Ü ë
,˝˝ë í#
TransaccionSettings˝˝ì ¶
.˝˝¶ ß
Default˝˝ß Æ
.˝˝Æ Ø<
,IdTipoTransaccionOrdenDeInvalidacionDeCompra˝˝Ø €
,˝˝€ ‹
fechaActual˝˝› Ë
,˝˝Ë È
fechaActual˝˝Í ı
,˝˝ı ˆ
tipoDeCompra˝˝˜ É
,˝˝É Ñ'
tipoDeOperacionDeCompra˝˝Ö ú
,˝˝ú ù

modoDePago˝˝û ®
,˝˝® ©
MaestroSettings˝˝™ π
.˝˝π ∫
Default˝˝∫ ¡
.˝˝¡ ¬0
 IdDetalleMaestroEstadoConfirmado˝˝¬ ‚
,˝˝‚ „
$str˝˝‰ ™
,˝˝™ ´
observacion˝˝¨ ∑
,˝˝∑ ∏$
detalles_transaccion˝˝π Õ
,˝˝Õ Œ(
seEntregoMercaderiaTotal˝˝œ Á
)˝˝Á Ë
;˝˝Ë È'
ordenInvalidacionDeCompra
ˇˇ )
.
ˇˇ) *'
id_transaccion_referencia
ˇˇ* C
=
ˇˇD E
ordenDeCompra
ˇˇF S
.
ˇˇS T
Id
ˇˇT V
;
ˇˇV W"
invalidacionDeCompra
ÅÅ $
.
ÅÅ$ %
Transaccion1
ÅÅ% 1
.
ÅÅ1 2
Add
ÅÅ2 5
(
ÅÅ5 6'
ordenInvalidacionDeCompra
ÅÅ6 O
)
ÅÅO P
;
ÅÅP Q
decimal
ÇÇ 

totalCuota
ÇÇ "
=
ÇÇ# $
$num
ÇÇ% &
;
ÇÇ& '
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
item
ÉÉ !
in
ÉÉ" $
new
ÉÉ% (
Venta
ÉÉ) .
(
ÉÉ. /
ordenDeCompra
ÉÉ/ <
.
ÉÉ< =
Transaccion
ÉÉ= H
(
ÉÉH I
)
ÉÉI J
.
ÉÉJ K
Transaccion2
ÉÉK W
)
ÉÉW X
.
ÉÉX Y
ObtenerPagos
ÉÉY e
(
ÉÉe f
)
ÉÉf g
)
ÉÉg h
{
ÑÑ 

totalCuota
ÖÖ 
+=
ÖÖ !
item
ÖÖ" &
.
ÖÖ& '
Total
ÖÖ' ,
;
ÖÖ, -
}
ÜÜ 
if
áá 
(
áá #
hayMovimientoDeDinero
áá )
)
áá) *
{
àà 
Cuota
ää 
cuota
ää 
=
ää  !
new
ää" %
Cuota
ää& +
(
ää+ ,2
$ObtenerSiguienteCodigoParaNuevaCuota
ää, P
(
ääP Q
false
ääQ V
,
ääV W
fechaActual
ääX c
.
ääc d
Year
ääd h
)
ääh i
+
ääj k
$str
ääl o
+
ääp q
$num
äär s
,
ääs t
fechaActualääu Ä
,ääÄ Å
fechaActualääÇ ç
,ääç é

totalCuotaääè ô
,ääô ö
$strääõ ‹
,ää‹ ›
trueääﬁ ‚
)ää‚ „
;ää„ ‰'
ordenInvalidacionDeCompra
åå -
.
åå- .
Cuota
åå. 3
.
åå3 4
Add
åå4 7
(
åå7 8
cuota
åå8 =
)
åå= >
;
åå> ?
}
çç 
return
êê $
transaccionRepositorio
êê -
.
êê- .<
.CrearTransacionYEstadoTransaccionYEstadosCuota
êê. \
(
êê\ ]"
invalidacionDeCompra
êê] q
,
êêq r$
estadoDeOrdenDeCompraêês à
,êêà â
nullêêä é
)êêé è
;êêè ê
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
e
íí 
)
íí 
{
ìì 
throw
îî 
new
îî 
LogicaException
îî )
(
îî) *
$str
îî* f
,
îîf g
e
îîh i
)
îîi j
;
îîj k
}
ïï 
}
óó 	
private
ôô 
OperationResult
ôô 1
#ResolverInvalidacionCompraIntegrada
ôô  C
(
ôôC D
OrdenDeCompra
ôôD Q
ordenDeCompra
ôôR _
,
ôô_ `
Compra
ôôa g
compra
ôôh n
,
ôôn o
int
ôôp s

idEmpleado
ôôt ~
,
ôô~ 
boolôôÄ Ñ
esPropioôôÖ ç
,ôôç é
intôôè í"
idSerieComprobanteôôì •
,ôô• ¶
DateTimeôôß Ø
fechaActualôô∞ ª
,ôôª º
decimalôôΩ ƒ
importeTotalôô≈ —
,ôô— “
decimalôô” ⁄ 
importePagoTotalôô€ Î
,ôôÎ Ï
stringôôÌ Û
observacionôôÙ ˇ
,ôôˇ Ä
intôôÅ Ñ
idProveedorôôÖ ê
,ôôê ë
intôôí ï 
idCentroAtencionôôñ ¶
,ôô¶ ß
intôô® ´
idCajaôô¨ ≤
,ôô≤ ≥
intôô¥ ∑
	idAlmacenôô∏ ¡
,ôô¡ ¬!
ModoOperacionEnumôô√ ‘
tipoDeCompraôô’ ·
,ôô· ‚#
TipoOperacionCompraôô„ ˆ'
tipoDeOperacionDeCompraôô˜ é
,ôôé è
ModoPagoôôê ò

modoDePagoôôô £
,ôô£ §
Listôô• ©
<ôô© ™"
DetalleDeOperacionôô™ º
>ôôº Ω
detallesôôæ ∆
,ôô∆ «"
Estado_transaccionôô» ⁄%
estadoDeOrdenDeCompraôô€ 
,ôô Ò
ListôôÚ ˆ
<ôôˆ ˜
Cuotaôô˜ ¸
>ôô¸ ˝!
cuotasModificadasôô˛ è
,ôôè ê&
UserProfileSessionDataôôë ß
sesionUsuarioôô® µ
)ôôµ ∂
{
öö 	
try
õõ 
{
úú 
List
ûû 
<
ûû !
Detalle_transaccion
ûû (
>
ûû( )"
detalles_transaccion
ûû* >
=
ûû? @
detalles
ûûA I
.
ûûI J
Select
ûûJ P
(
ûûP Q
d
ûûQ R
=>
ûûS U
d
ûûV W
.
ûûW X 
DetalleTransaccion
ûûX j
(
ûûj k
)
ûûk l
)
ûûl m
.
ûûm n
ToList
ûûn t
(
ûût u
)
ûûu v
;
ûûv w
Transaccion
†† "
invalidacionDeCompra
†† 0
=
††1 2 
GenerarTransaccion
††3 E
(
††E F

idEmpleado
††F P
,
††P Q
idCentroAtencion
††R b
,
††b c
idProveedor
††d o
,
††o p"
TransaccionSettings††q Ñ
.††Ñ Ö
Default††Ö å
.††å ç5
%IdTipoTransaccionInvalidacionDeCompra††ç ≤
,††≤ ≥
true††¥ ∏
,††∏ π"
idSerieComprobante††∫ Ã
,††Ã Õ
$num††Œ œ
,††œ –
$str††— ”
,††” ‘
$num††’ ÷
,††÷ ◊
fechaActual††ÿ „
,††„ ‰
fechaActual††Â 
,†† Ò
importeTotal††Ú ˛
,††˛ ˇ
observacion††Ä ã
)††ã å
;††å ç"
invalidacionDeCompra
¢¢ $
.
¢¢$ %'
id_transaccion_referencia
¢¢% >
=
¢¢? @
ordenDeCompra
¢¢A N
.
¢¢N O
Transaccion
¢¢O Z
(
¢¢Z [
)
¢¢[ \
.
¢¢\ ]"
id_transaccion_padre
¢¢] q
;
¢¢q r
Transaccion
§§ '
ordenInvalidacionDeCompra
§§ 5
=
§§6 7'
GenerarOrdenDeTransaccion
§§8 Q
(
§§Q R"
invalidacionDeCompra
§§R f
,
§§f g

idEmpleado
§§h r
,
§§r s
idCentroAtencion§§t Ñ
,§§Ñ Ö
idProveedor§§Ü ë
,§§ë í#
TransaccionSettings§§ì ¶
.§§¶ ß
Default§§ß Æ
.§§Æ Ø<
,IdTipoTransaccionOrdenDeInvalidacionDeCompra§§Ø €
,§§€ ‹
fechaActual§§› Ë
,§§Ë È
fechaActual§§Í ı
,§§ı ˆ
tipoDeCompra§§˜ É
,§§É Ñ'
tipoDeOperacionDeCompra§§Ö ú
,§§ú ù

modoDePago§§û ®
,§§® ©
MaestroSettings§§™ π
.§§π ∫
Default§§∫ ¡
.§§¡ ¬0
 IdDetalleMaestroEstadoConfirmado§§¬ ‚
,§§‚ „
$str§§‰ ™
,§§™ ´
observacion§§¨ ∑
,§§∑ ∏$
detalles_transaccion§§π Õ
,§§Õ Œ
true§§œ ”
)§§” ‘
;§§‘ ’'
ordenInvalidacionDeCompra
¶¶ )
.
¶¶) *
enum1
¶¶* /
=
¶¶0 1
(
¶¶2 3
int
¶¶3 6
)
¶¶6 7%
IndicadorImpactoAlmacen
¶¶7 N
.
¶¶N O
	Inmediata
¶¶O X
;
¶¶X Y'
ordenInvalidacionDeCompra
ßß )
.
ßß) *'
id_actor_negocio_interno1
ßß* C
=
ßßD E
	idAlmacen
ßßF O
;
ßßO P 
Estado_transaccion
®® " 
estadoOrdenAlmacen
®®# 5
=
®®6 7
new
®®8 ; 
Estado_transaccion
®®< N
(
®®N O

idEmpleado
®®O Y
,
®®Y Z
MaestroSettings
®®[ j
.
®®j k
Default
®®k r
.
®®r s/
 IdDetalleMaestroEstadoCompletada®®s ì
,®®ì î
fechaActual®®ï †
,®®† °
$str®®¢  
)®®  À
;®®À Ã'
ordenInvalidacionDeCompra
©© )
.
©©) * 
Estado_transaccion
©©* <
.
©©< =
Add
©©= @
(
©©@ A 
estadoOrdenAlmacen
©©A S
)
©©S T
;
©©T U'
ordenInvalidacionDeCompra
´´ )
.
´´) *'
id_transaccion_referencia
´´* C
=
´´D E
ordenDeCompra
´´F S
.
´´S T
Id
´´T V
;
´´V W"
invalidacionDeCompra
≠≠ $
.
≠≠$ %
Transaccion1
≠≠% 1
.
≠≠1 2
Add
≠≠2 5
(
≠≠5 6'
ordenInvalidacionDeCompra
≠≠6 O
)
≠≠O P
;
≠≠P Q
if
ÆÆ 
(
ÆÆ 
importePagoTotal
ÆÆ $
>
ÆÆ% &
$num
ÆÆ' (
)
ÆÆ( )
{
ØØ 
Cuota
±± 
cuota
±± 
=
±±  !
new
±±" %
Cuota
±±& +
(
±±+ ,2
$ObtenerSiguienteCodigoParaNuevaCuota
±±, P
(
±±P Q
false
±±Q V
,
±±V W
fechaActual
±±X c
.
±±c d
Year
±±d h
)
±±h i
+
±±j k
$str
±±l o
+
±±p q
$num
±±r s
,
±±s t
fechaActual±±u Ä
,±±Ä Å
fechaActual±±Ç ç
,±±ç é 
importePagoTotal±±è ü
,±±ü † 
importePagoTotal±±° ±
,±±± ≤
$str±±≥ Ù
,±±Ù ı
true±±ˆ ˙
)±±˙ ˚
;±±˚ ¸'
ordenInvalidacionDeCompra
≥≥ -
.
≥≥- .
Cuota
≥≥. 3
.
≥≥3 4
Add
≥≥4 7
(
≥≥7 8
cuota
≥≥8 =
)
≥≥= >
;
≥≥> ?
Transaccion
µµ 
pago
µµ  $
=
µµ% &(
GenerarMovimientoEconomico
µµ' A
(
µµA B"
invalidacionDeCompra
µµB V
,
µµV W
cuota
µµX ]
,
µµ] ^

idEmpleado
µµ_ i
,
µµi j
idCaja
µµk q
,
µµq r
idProveedor
µµs ~
,
µµ~ #
TransaccionSettingsµµÄ ì
.µµì î
Defaultµµî õ
.µµõ úG
7IdTipoTransaccionIngresoDeDineroPorInvalidacionDeCompraµµú ”
,µµ” ‘
fechaActualµµ’ ‡
,µµ‡ ·
fechaActualµµ‚ Ì
,µµÌ Ó
observacionµµÔ ˙
,µµ˙ ˚
MaestroSettingsµµ¸ ã
.µµã å
Defaultµµå ì
.µµì î3
#IdDetalleMaestroMedioDepagoEfectivoµµî ∑
,µµ∑ ∏
MaestroSettingsµµπ »
.µµ» …
Defaultµµ… –
.µµ– —9
)IdDetalleMaestroEntidadBancariaPorDefectoµµ— ˙
,µµ˙ ˚
$strµµ¸ ã
)µµã å
;µµå ç"
invalidacionDeCompra
∑∑ (
.
∑∑( )
Transaccion1
∑∑) 5
.
∑∑5 6
Add
∑∑6 9
(
∑∑9 :
pago
∑∑: >
)
∑∑> ?
;
∑∑? @
}
∏∏ 
Transaccion
∫∫ 3
%salidaMercaderiaPorInvalidacionCompra
∫∫ A
=
∫∫B C+
GenerarMovimientoDeMercaderia
∫∫D a
(
∫∫a b"
invalidacionDeCompra
∫∫b v
,
∫∫v w

idEmpleado∫∫x Ç
,∫∫Ç É
	idAlmacen∫∫Ñ ç
,∫∫ç é
idProveedor∫∫è ö
,∫∫ö õ#
TransaccionSettings∫∫ú Ø
.∫∫Ø ∞
Default∫∫∞ ∑
.∫∫∑ ∏J
:IdTipoTransaccionSalidaDeMercaderiaPorInvalidacionDeCompra∫∫∏ Ú
,∫∫Ú Û
fechaActual∫∫Ù ˇ
,∫∫ˇ Ä
observacion∫∫Å å
,∫∫å ç
detalles∫∫é ñ
,∫∫ñ ó
sesionUsuario∫∫ò •
,∫∫• ¶
compra∫∫ß ≠
.∫∫≠ Æ*
ObtenerIngresoDeMercaderia∫∫Æ »
(∫∫» …
)∫∫…  
.∫∫  À
First∫∫À –
(∫∫– —
)∫∫— “
.∫∫“ ”
Id∫∫” ’
)∫∫’ ÷
;∫∫÷ ◊3
%salidaMercaderiaPorInvalidacionCompra
ºº 5
.
ºº5 6
Transaccion3
ºº6 B
=
ººC D'
ordenInvalidacionDeCompra
ººE ^
;
ºº^ _"
invalidacionDeCompra
ææ $
.
ææ$ %
Transaccion1
ææ% 1
.
ææ1 2
Add
ææ2 5
(
ææ5 63
%salidaMercaderiaPorInvalidacionCompra
ææ6 [
)
ææ[ \
;
ææ\ ]
return
øø 6
(AfectarInventarioFisicoYGuardarOperacion
øø ?
(
øø? @
new
øø@ C$
OperacionModificatoria
øøD Z
(
øøZ [
)
øø[ \
{
øø] ^
	Operacion
øø_ h
=
øøi j"
invalidacionDeCompra
øøk 
,øø Ä 
OrdenDeOperacionøøÅ ë
=øøí ì)
ordenInvalidacionDeCompraøøî ≠
,øø≠ Æ!
MovimientosBienesøøØ ¿
=øø¡ ¬
newøø√ ∆
Listøø« À
<øøÀ Ã
TransaccionøøÃ ◊
>øø◊ ÿ
(øøÿ Ÿ
)øøŸ ⁄
{øø€ ‹5
%salidaMercaderiaPorInvalidacionCompraøø› Ç
}øøÉ Ñ
,øøÑ Ö5
%NuevosEstadosTransaccionesModificadasøøÜ ´
=øø¨ ≠
newøøÆ ±
Listøø≤ ∂
<øø∂ ∑"
Estado_transaccionøø∑ …
>øø…  
(øø  À
)øøÀ Ã
{øøÕ Œ%
estadoDeOrdenDeCompraøøœ ‰
}øøÂ Ê
,øøÊ Á!
CuotasModificadasøøË ˘
=øø˙ ˚!
cuotasModificadasøø¸ ç
}øøé è
,øøè ê
sesionUsuarioøøë û
)øøû ü
;øøü †
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* d
,
√√d e
e
√√f g
)
√√g h
;
√√h i
}
ƒƒ 
}
≈≈ 	
public
ÀÀ 
OperationResult
ÀÀ )
GuardarNotaDeDebitoDeCompra
ÀÀ :
(
ÀÀ: ;
long
ÀÀ; ? 
idOrdenDeOperacion
ÀÀ@ R
,
ÀÀR S
int
ÀÀT W

idTipoNota
ÀÀX b
,
ÀÀb c
string
ÀÀd j
motivo
ÀÀk q
,
ÀÀq r
int
ÀÀs v 
idTipoComprobanteÀÀw à
,ÀÀà â
intÀÀä ç"
idSerieComprobanteÀÀé †
,ÀÀ† °
boolÀÀ¢ ¶
esPropioÀÀß Ø
,ÀÀØ ∞
stringÀÀ± ∑(
numeroSerieDeComprobanteÀÀ∏ –
,ÀÀ– —
intÀÀ“ ’#
numeroDeComprobanteÀÀ÷ È
,ÀÀÈ Í
stringÀÀÎ Ò
valorDeNotaÀÀÚ ˝
,ÀÀ˝ ˛
ListÀÀˇ É
<ÀÀÉ Ñ"
DetalleOrdenDeNotaÀÀÑ ñ
>ÀÀñ ó
detallesÀÀò †
,ÀÀ† °&
UserProfileSessionDataÀÀ¢ ∏
sesionUsuarioÀÀπ ∆
)ÀÀ∆ «
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ 
OrdenDeCompra
–– 
ordenDeCompra
–– +
=
––, -
new
––. 1
OrdenDeCompra
––2 ?
(
––? @$
transaccionRepositorio
––@ V
.
––V W0
"ObtenerTransaccionInclusiveEstados
––W y
(
––y z!
idOrdenDeOperacion––z å
)––å ç
)––ç é
;––é è
int
““ 
idUnidadNegocio
““ #
=
““$ %
MaestroSettings
““& 5
.
““5 6
Default
““6 =
.
““= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
““> h
;
““h i
DateTime
‘‘ 
fechaActual
‘‘ $
=
‘‘% &
DateTimeUtil
‘‘' 3
.
‘‘3 4
FechaActual
‘‘4 ?
(
‘‘? @
)
‘‘@ A
;
‘‘A B
permisos_Logica
÷÷ 
.
÷÷  
ValidarAccion
÷÷  -
(
÷÷- .
sesionUsuario
÷÷. ;
.
÷÷; <
Empleado
÷÷< D
.
÷÷D E
Id
÷÷E G
,
÷÷G H
MaestroSettings
÷÷I X
.
÷÷X Y
Default
÷÷Y `
.
÷÷` a.
IdDetalleMaestroAccionConfirmar÷÷a Ä
,÷÷Ä Å
Diccionario÷÷Ç ç
.÷÷ç é"
MapeoWraperVsOrden÷÷é †
.÷÷† °
Single÷÷° ß
(÷÷ß ®
m÷÷® ©
=>÷÷™ ¨
m÷÷≠ Æ
.÷÷Æ Ø
Key÷÷Ø ≤
==÷÷≥ µ
Diccionario÷÷∂ ¡
.÷÷¡ ¬>
.MapeoDetalleMaestroVsTipoTransaccionParaCompra÷÷¬ 
.÷÷ Ò
Single÷÷Ò ˜
(÷÷˜ ¯
n÷÷¯ ˘
=>÷÷˙ ¸
n÷÷˝ ˛
.÷÷˛ ˇ
Key÷÷ˇ Ç
==÷÷É Ö

idTipoNota÷÷Ü ê
)÷÷ê ë
.÷÷ë í
Value÷÷í ó
)÷÷ó ò
.÷÷ò ô
Value÷÷ô û
,÷÷û ü
idUnidadNegocio÷÷† Ø
)÷÷Ø ∞
;÷÷∞ ±
List
ÿÿ 
<
ÿÿ !
Detalle_transaccion
ÿÿ (
>
ÿÿ( )
detallesDeNota
ÿÿ* 8
=
ÿÿ9 :.
 CalcularDetalleNotaDebitoCredito
ÿÿ; [
(
ÿÿ[ \
detalles
ÿÿ\ d
,
ÿÿd e
ordenDeCompra
ÿÿf s
.
ÿÿs t!
DetalleTransaccionÿÿt Ü
(ÿÿÜ á
)ÿÿá à
,ÿÿà â

idTipoNotaÿÿä î
,ÿÿî ï
valorDeNotaÿÿñ °
,ÿÿ° ¢
motivoÿÿ£ ©
,ÿÿ© ™
ordenDeCompraÿÿ´ ∏
.ÿÿ∏ π
Igvÿÿπ º
(ÿÿº Ω
)ÿÿΩ æ
>ÿÿø ¿
$numÿÿ¡ ¬
)ÿÿ¬ √
;ÿÿ√ ƒ
Transaccion
⁄⁄ 
notaDeDebito
⁄⁄ (
=
⁄⁄) *(
GenerarNotaDeCreditoDebito
⁄⁄+ E
(
⁄⁄E F
sesionUsuario
⁄⁄F S
.
⁄⁄S T
Empleado
⁄⁄T \
.
⁄⁄\ ]
Id
⁄⁄] _
,
⁄⁄_ `
idUnidadNegocio
⁄⁄a p
,
⁄⁄p q
esPropio
⁄⁄r z
,
⁄⁄z {!
idSerieComprobante⁄⁄| é
,⁄⁄é è!
idTipoComprobante⁄⁄ê °
,⁄⁄° ¢#
numeroDeComprobante⁄⁄£ ∂
,⁄⁄∂ ∑(
numeroSerieDeComprobante⁄⁄∏ –
,⁄⁄– —
fechaActual⁄⁄“ ›
,⁄⁄› ﬁ
$str⁄⁄ﬂ „
,⁄⁄„ ‰
Diccionario⁄⁄Â 
.⁄⁄ Ò>
.MapeoDetalleMaestroVsTipoTransaccionParaCompra⁄⁄Ò ü
.⁄⁄ü †
Single⁄⁄† ¶
(⁄⁄¶ ß
m⁄⁄ß ®
=>⁄⁄© ´
m⁄⁄¨ ≠
.⁄⁄≠ Æ
Key⁄⁄Æ ±
==⁄⁄≤ ¥

idTipoNota⁄⁄µ ø
)⁄⁄ø ¿
.⁄⁄¿ ¡
Value⁄⁄¡ ∆
,⁄⁄∆ «
detallesDeNota⁄⁄» ÷
.⁄⁄÷ ◊
Sum⁄⁄◊ ⁄
(⁄⁄⁄ €
d⁄⁄€ ‹
=>⁄⁄› ﬂ
d⁄⁄‡ ·
.⁄⁄· ‚
total⁄⁄‚ Á
)⁄⁄Á Ë
,⁄⁄Ë È
motivo⁄⁄Í 
,⁄⁄ Ò
ordenDeCompra⁄⁄Ú ˇ
.⁄⁄ˇ Ä
	Proveedor⁄⁄Ä â
(⁄⁄â ä
)⁄⁄ä ã
.⁄⁄ã å
Id⁄⁄å é
,⁄⁄é è
sesionUsuario⁄⁄ê ù
.⁄⁄ù û.
IdCentroDeAtencionSeleccionado⁄⁄û º
,⁄⁄º Ω
sesionUsuario⁄⁄æ À
)⁄⁄À Ã
;⁄⁄Ã Õ
ModoPago
›› 
modoPago
›› !
=
››" #
ordenDeCompra
››$ 1
.
››1 2

ModoDePago
››2 <
(
››< =
)
››= >
;
››> ?
Transaccion
‡‡ !
ordenDeNotaDeDebito
‡‡ /
=
‡‡0 1-
GenerarOrdenNotaDeCreditoDebito
‡‡2 Q
(
‡‡Q R
notaDeDebito
‡‡R ^
,
‡‡^ _
sesionUsuario
‡‡` m
.
‡‡m n
Empleado
‡‡n v
.
‡‡v w
Id
‡‡w y
,
‡‡y z
idUnidadNegocio‡‡{ ä
,‡‡ä ã

idTipoNota‡‡å ñ
,‡‡ñ ó
fechaActual‡‡ò £
,‡‡£ §
(‡‡• ¶
(‡‡¶ ß
int‡‡ß ™
)‡‡™ ´
modoPago‡‡´ ≥
)‡‡≥ ¥
.‡‡¥ µ
ToString‡‡µ Ω
(‡‡Ω æ
)‡‡æ ø
,‡‡ø ¿
$str‡‡¡ ≈
,‡‡≈ ∆
Diccionario‡‡« “
.‡‡“ ”"
MapeoWraperVsOrden‡‡” Â
.‡‡Â Ê
Single‡‡Ê Ï
(‡‡Ï Ì
m‡‡Ì Ó
=>‡‡Ô Ò
m‡‡Ú Û
.‡‡Û Ù
Key‡‡Ù ˜
==‡‡¯ ˙
Diccionario‡‡˚ Ü
.‡‡Ü á>
.MapeoDetalleMaestroVsTipoTransaccionParaCompra‡‡á µ
.‡‡µ ∂
Single‡‡∂ º
(‡‡º Ω
n‡‡Ω æ
=>‡‡ø ¡
n‡‡¬ √
.‡‡√ ƒ
Key‡‡ƒ «
==‡‡»  

idTipoNota‡‡À ’
)‡‡’ ÷
.‡‡÷ ◊
Value‡‡◊ ‹
)‡‡‹ ›
.‡‡› ﬁ
Value‡‡ﬁ „
,‡‡„ ‰
motivo‡‡Â Î
,‡‡Î Ï
ordenDeCompra‡‡Ì ˙
.‡‡˙ ˚
	Proveedor‡‡˚ Ñ
(‡‡Ñ Ö
)‡‡Ö Ü
.‡‡Ü á
Id‡‡á â
,‡‡â ä
$str‡‡ã ç
,‡‡ç é
sesionUsuario‡‡è ú
.‡‡ú ù.
IdCentroDeAtencionSeleccionado‡‡ù ª
,‡‡ª º
detallesDeNota‡‡Ω À
,‡‡À Ã
MaestroSettings‡‡Õ ‹
.‡‡‹ ›
Default‡‡› ‰
.‡‡‰ Â0
 IdDetalleMaestroEstadoConfirmado‡‡Â Ö
,‡‡Ö Ü
$str‡‡á º
,‡‡º Ω
false‡‡æ √
,‡‡√ ƒ
Diccionario‡‡≈ –
.‡‡– —/
MapeoOrdenVsMovimientoDeAlmacen‡‡— 
.‡‡ Ò
SingleOrDefault‡‡Ò Ä
(‡‡Ä Å
l‡‡Å Ç
=>‡‡É Ö
l‡‡Ü á
.‡‡á à
Key‡‡à ã
==‡‡å é
Diccionario‡‡è ö
.‡‡ö õ"
MapeoWraperVsOrden‡‡õ ≠
.‡‡≠ Æ
Single‡‡Æ ¥
(‡‡¥ µ
m‡‡µ ∂
=>‡‡∑ π
m‡‡∫ ª
.‡‡ª º
Key‡‡º ø
==‡‡¿ ¬
Diccionario‡‡√ Œ
.‡‡Œ œ>
.MapeoDetalleMaestroVsTipoTransaccionParaCompra‡‡œ ˝
.‡‡˝ ˛
Single‡‡˛ Ñ
(‡‡Ñ Ö
n‡‡Ö Ü
=>‡‡á â
n‡‡ä ã
.‡‡ã å
Key‡‡å è
==‡‡ê í

idTipoNota‡‡ì ù
)‡‡ù û
.‡‡û ü
Value‡‡ü §
)‡‡§ •
.‡‡• ¶
Value‡‡¶ ´
)‡‡´ ¨
.‡‡¨ ≠
Value‡‡≠ ≤
!=‡‡≥ µ
$num‡‡∂ ∑
)‡‡∑ ∏
;‡‡∏ π!
ordenDeNotaDeDebito
‚‚ #
.
‚‚# $#
Parametro_transaccion
‚‚$ 9
.
‚‚9 :
Add
‚‚: =
(
‚‚= >
new
‚‚> A#
Parametro_transaccion
‚‚B W
(
‚‚W X
MaestroSettings
‚‚X g
.
‚‚g h
Default
‚‚h o
.
‚‚o p2
#IdDetalleMaestroParametroTipoCompra‚‚p ì
,‚‚ì î
(‚‚ï ñ
(‚‚ñ ó
int‚‚ó ö
)‚‚ö õ
ordenDeCompra‚‚õ ®
.‚‚® ©'
TipoDeOperacionDeCompra‚‚© ¿
(‚‚¿ ¡
)‚‚¡ ¬
)‚‚¬ √
.‚‚√ ƒ
ToString‚‚ƒ Ã
(‚‚Ã Õ
)‚‚Õ Œ
)‚‚Œ œ
)‚‚œ –
;‚‚– —!
ordenDeNotaDeDebito
‰‰ #
.
‰‰# $'
id_transaccion_referencia
‰‰$ =
=
‰‰> ?
ordenDeCompra
‰‰@ M
.
‰‰M N
Id
‰‰N P
;
‰‰P Q
notaDeDebito
ÊÊ 
.
ÊÊ 
Transaccion1
ÊÊ )
.
ÊÊ) *
Add
ÊÊ* -
(
ÊÊ- .!
ordenDeNotaDeDebito
ÊÊ. A
)
ÊÊA B
;
ÊÊB C
Cuota
ÈÈ 
cuota
ÈÈ 
=
ÈÈ 
new
ÈÈ !
Cuota
ÈÈ" '
(
ÈÈ' (2
$ObtenerSiguienteCodigoParaNuevaCuota
ÈÈ( L
(
ÈÈL M
false
ÈÈM R
,
ÈÈR S
fechaActual
ÈÈT _
.
ÈÈ_ `
Year
ÈÈ` d
)
ÈÈd e
+
ÈÈf g
$str
ÈÈh k
+
ÈÈl m
$num
ÈÈn o
,
ÈÈo p
fechaActual
ÈÈq |
,
ÈÈ| }
fechaActualÈÈ~ â
,ÈÈâ ä
detallesDeNotaÈÈã ô
.ÈÈô ö
SumÈÈö ù
(ÈÈù û
dÈÈû ü
=>ÈÈ† ¢
dÈÈ£ §
.ÈÈ§ •
totalÈÈ• ™
)ÈÈ™ ´
,ÈÈ´ ¨
$strÈÈ≠ ◊
,ÈÈ◊ ÿ
falseÈÈŸ ﬁ
)ÈÈﬁ ﬂ
;ÈÈﬂ ‡!
ordenDeNotaDeDebito
ÎÎ #
.
ÎÎ# $
Cuota
ÎÎ$ )
.
ÎÎ) *
Add
ÎÎ* -
(
ÎÎ- .
cuota
ÎÎ. 3
)
ÎÎ3 4
;
ÎÎ4 5
if
ÌÌ 
(
ÌÌ 
modoPago
ÌÌ 
==
ÌÌ 
ModoPago
ÌÌ  (
.
ÌÌ( )
Contado
ÌÌ) 0
)
ÌÌ0 1
{
ÓÓ "
ValidarImporteAPagar
 (
(
( )
$num
) *
,
* +
cuota
, 1
.
1 2
total
2 7
,
7 8!
ordenDeNotaDeDebito
9 L
.
L M
importe_total
M Z
)
Z [
;
[ \
Transaccion
ÚÚ 
pago
ÚÚ  $
=
ÚÚ% &.
 GenerarPagoPorNotaCreditoODebito
ÚÚ' G
(
ÚÚG H!
ordenDeNotaDeDebito
ÚÚH [
,
ÚÚ[ \

CodigoPago
ÚÚ] g
(
ÚÚg h
cuota
ÚÚh m
)
ÚÚm n
,
ÚÚn o
cuota
ÚÚp u
.
ÚÚu v
total
ÚÚv {
,
ÚÚ{ |
sesionUsuarioÚÚ} ä
.ÚÚä ã
EmpleadoÚÚã ì
.ÚÚì î
IdÚÚî ñ
,ÚÚñ ó
fechaActualÚÚò £
,ÚÚ£ §
$strÚÚ• ß
,ÚÚß ®
sesionUsuarioÚÚ© ∂
.ÚÚ∂ ∑.
IdCentroDeAtencionSeleccionadoÚÚ∑ ’
,ÚÚ’ ÷
MaestroSettingsÚÚ◊ Ê
.ÚÚÊ Á
DefaultÚÚÁ Ó
.ÚÚÓ Ô0
 IdDetalleMaestroEstadoConfirmadoÚÚÔ è
,ÚÚè ê
$strÚÚë Ÿ
)ÚÚŸ ⁄
;ÚÚ⁄ €
cuota
ÛÛ 
.
ÛÛ 
SetPagoACuenta
ÛÛ (
(
ÛÛ( )!
ordenDeNotaDeDebito
ÛÛ) <
.
ÛÛ< =
importe_total
ÛÛ= J
)
ÛÛJ K
;
ÛÛK L$
VincularPagoConLaCuota
ÙÙ *
(
ÙÙ* +
pago
ÙÙ+ /
,
ÙÙ/ 0
cuota
ÙÙ1 6
,
ÙÙ6 7!
ordenDeNotaDeDebito
ÙÙ8 K
.
ÙÙK L
importe_total
ÙÙL Y
)
ÙÙY Z
;
ÙÙZ [
notaDeDebito
ˆˆ  
.
ˆˆ  !
Transaccion1
ˆˆ! -
.
ˆˆ- .
Add
ˆˆ. 1
(
ˆˆ1 2
pago
ˆˆ2 6
)
ˆˆ6 7
;
ˆˆ7 8
}
˜˜ 
return
¯¯ $
transaccionRepositorio
¯¯ -
.
¯¯- .
CrearTransaccion
¯¯. >
(
¯¯> ?
notaDeDebito
¯¯? K
)
¯¯K L
;
¯¯L M
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
new
¸¸ 
LogicaException
¸¸ )
(
¸¸) *
$str
¸¸* n
,
¸¸n o
e
¸¸p q
)
¸¸q r
;
¸¸r s
}
˝˝ 
}
˛˛ 	
public
ÄÄ 
OperationResult
ÄÄ *
GuardarNotaDeCreditoDeCompra
ÄÄ ;
(
ÄÄ; <
long
ÄÄ< @ 
idOrdenDeOperacion
ÄÄA S
,
ÄÄS T
int
ÄÄU X

idTipoNota
ÄÄY c
,
ÄÄc d
string
ÄÄe k
motivo
ÄÄl r
,
ÄÄr s
int
ÄÄt w 
idTipoComprobanteÄÄx â
,ÄÄâ ä
intÄÄã é"
idSerieComprobanteÄÄè °
,ÄÄ° ¢
boolÄÄ£ ß
esPropioÄÄ® ∞
,ÄÄ∞ ±
stringÄÄ≤ ∏(
numeroSerieDeComprobanteÄÄπ —
,ÄÄ— “
intÄÄ” ÷#
numeroDeComprobanteÄÄ◊ Í
,ÄÄÍ Î
stringÄÄÏ Ú
valorDeNotaÄÄÛ ˛
,ÄÄ˛ ˇ
ListÄÄÄ Ñ
<ÄÄÑ Ö"
DetalleOrdenDeNotaÄÄÖ ó
>ÄÄó ò
detallesÄÄô °
,ÄÄ° ¢&
UserProfileSessionDataÄÄ£ π
sesionUsuarioÄÄ∫ «
)ÄÄ« »
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
OrdenDeCompra
ÖÖ 
ordenDeCompra
ÖÖ +
=
ÖÖ, -
new
ÖÖ. 1
OrdenDeCompra
ÖÖ2 ?
(
ÖÖ? @$
transaccionRepositorio
ÖÖ@ V
.
ÖÖV W0
"ObtenerTransaccionInclusiveEstados
ÖÖW y
(
ÖÖy z!
idOrdenDeOperacionÖÖz å
)ÖÖå ç
)ÖÖç é
;ÖÖé è
Compra
ÜÜ 
compra
ÜÜ 
=
ÜÜ 
new
ÜÜ  #
Compra
ÜÜ$ *
(
ÜÜ* +$
transaccionRepositorio
ÜÜ+ A
.
ÜÜA B0
"ObtenerTransaccionInclusiveEstados
ÜÜB d
(
ÜÜd e
ordenDeCompra
ÜÜe r
.
ÜÜr s
IdCompra
ÜÜs {
)
ÜÜ{ |
)
ÜÜ| }
;
ÜÜ} ~
List
àà 
<
àà !
Detalle_transaccion
àà (
>
àà( )
detallesDeNota
àà* 8
=
àà9 :.
 CalcularDetalleNotaDebitoCredito
àà; [
(
àà[ \
detalles
àà\ d
,
ààd e
ordenDeCompra
ààf s
.
ààs t!
DetalleTransaccionààt Ü
(ààÜ á
)ààá à
,ààà â

idTipoNotaààä î
,ààî ï
valorDeNotaààñ °
,àà° ¢
motivoàà£ ©
,àà© ™
ordenDeCompraàà´ ∏
.àà∏ π
Igvààπ º
(ààº Ω
)ààΩ æ
>ààø ¿
$numàà¡ ¬
)àà¬ √
;àà√ ƒ
var
ää 
importeTotal
ää  
=
ää! "
detallesDeNota
ää# 1
.
ää1 2
Sum
ää2 5
(
ää5 6
d
ää6 7
=>
ää8 :
d
ää; <
.
ää< =
total
ää= B
)
ääB C
+
ääD E
ordenDeCompra
ääF S
.
ääS T
Icbper
ääT Z
(
ääZ [
)
ää[ \
;
ää\ ]
int
åå 
idUnidadNegocio
åå #
=
åå$ %
MaestroSettings
åå& 5
.
åå5 6
Default
åå6 =
.
åå= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
åå> h
;
ååh i
DateTime
éé 
fechaActual
éé $
=
éé% &
DateTimeUtil
éé' 3
.
éé3 4
FechaActual
éé4 ?
(
éé? @
)
éé@ A
;
ééA B
int
êê 5
'idTipoTransaccionMovimientoDeMercaderia
êê ;
=
êê< =
Diccionario
êê> I
.
êêI J-
MapeoOrdenVsMovimientoDeAlmacen
êêJ i
.
êêi j
SingleOrDefault
êêj y
(
êêy z
l
êêz {
=>
êê| ~
lêê Ä
.êêÄ Å
KeyêêÅ Ñ
==êêÖ á
Diccionarioêêà ì
.êêì î"
MapeoWraperVsOrdenêêî ¶
.êê¶ ß
Singleêêß ≠
(êê≠ Æ
mêêÆ Ø
=>êê∞ ≤
mêê≥ ¥
.êê¥ µ
Keyêêµ ∏
==êêπ ª
Diccionarioêêº «
.êê« »>
.MapeoDetalleMaestroVsTipoTransaccionParaCompraêê» ˆ
.êêˆ ˜
Singleêê˜ ˝
(êê˝ ˛
nêê˛ ˇ
=>êêÄ Ç
nêêÉ Ñ
.êêÑ Ö
KeyêêÖ à
==êêâ ã

idTipoNotaêêå ñ
)êêñ ó
.êêó ò
Valueêêò ù
)êêù û
.êêû ü
Valueêêü §
)êê§ •
.êê• ¶
Valueêê¶ ´
;êê´ ¨
permisos_Logica
íí 
.
íí  
ValidarAccion
íí  -
(
íí- .
sesionUsuario
íí. ;
.
íí; <
Empleado
íí< D
.
ííD E
Id
ííE G
,
ííG H
MaestroSettings
ííI X
.
ííX Y
Default
ííY `
.
íí` a.
IdDetalleMaestroAccionConfirmaríía Ä
,ííÄ Å
DiccionarioííÇ ç
.ííç é"
MapeoWraperVsOrdenííé †
.íí† °
Singleíí° ß
(ííß ®
míí® ©
=>íí™ ¨
míí≠ Æ
.ííÆ Ø
KeyííØ ≤
==íí≥ µ
Diccionarioíí∂ ¡
.íí¡ ¬>
.MapeoDetalleMaestroVsTipoTransaccionParaCompraíí¬ 
.íí Ò
SingleííÒ ˜
(íí˜ ¯
níí¯ ˘
=>íí˙ ¸
níí˝ ˛
.íí˛ ˇ
Keyííˇ Ç
==ííÉ Ö

idTipoNotaííÜ ê
)ííê ë
.ííë í
Valueííí ó
)ííó ò
.ííò ô
Valueííô û
,ííû ü
idUnidadNegocioíí† Ø
)ííØ ∞
;íí∞ ±
Transaccion
îî 
notaDeCredito
îî )
=
îî* +(
GenerarNotaDeCreditoDebito
îî, F
(
îîF G
sesionUsuario
îîG T
.
îîT U
Empleado
îîU ]
.
îî] ^
Id
îî^ `
,
îî` a
idUnidadNegocio
îîb q
,
îîq r
esPropio
îîs {
,
îî{ |!
idSerieComprobanteîî} è
,îîè ê!
idTipoComprobanteîîë ¢
,îî¢ £#
numeroDeComprobanteîî§ ∑
,îî∑ ∏(
numeroSerieDeComprobanteîîπ —
,îî— “
fechaActualîî” ﬁ
,îîﬁ ﬂ
$strîî‡ ‰
,îî‰ Â
DiccionarioîîÊ Ò
.îîÒ Ú>
.MapeoDetalleMaestroVsTipoTransaccionParaCompraîîÚ †
.îî† °
Singleîî° ß
(îîß ®
nîî® ©
=>îî™ ¨
nîî≠ Æ
.îîÆ Ø
KeyîîØ ≤
==îî≥ µ

idTipoNotaîî∂ ¿
)îî¿ ¡
.îî¡ ¬
Valueîî¬ «
,îî« »
importeTotalîî… ’
,îî’ ÷
motivoîî◊ ›
,îî› ﬁ
ordenDeCompraîîﬂ Ï
.îîÏ Ì
	ProveedorîîÌ ˆ
(îîˆ ˜
)îî˜ ¯
.îî¯ ˘
Idîî˘ ˚
,îî˚ ¸
sesionUsuarioîî˝ ä
.îîä ã.
IdCentroDeAtencionSeleccionadoîîã ©
,îî© ™
sesionUsuarioîî´ ∏
)îî∏ π
;îîπ ∫
ModoPago
ññ 
modoPago
ññ !
=
ññ" #
ordenDeCompra
ññ$ 1
.
ññ1 2

ModoDePago
ññ2 <
(
ññ< =
)
ññ= >
;
ññ> ?
Transaccion
òò "
ordenDeNotaDeCredito
òò 0
=
òò1 2-
GenerarOrdenNotaDeCreditoDebito
òò3 R
(
òòR S
notaDeCredito
òòS `
,
òò` a
sesionUsuario
òòb o
.
òòo p
Empleado
òòp x
.
òòx y
Id
òòy {
,
òò{ |
idUnidadNegocioòò} å
,òòå ç

idTipoNotaòòé ò
,òòò ô
fechaActualòòö •
,òò• ¶
(òòß ®
(òò® ©
intòò© ¨
)òò¨ ≠
modoPagoòò≠ µ
)òòµ ∂
.òò∂ ∑
ToStringòò∑ ø
(òòø ¿
)òò¿ ¡
,òò¡ ¬
$stròò√ «
,òò« »
Diccionarioòò… ‘
.òò‘ ’"
MapeoWraperVsOrdenòò’ Á
.òòÁ Ë
SingleòòË Ó
(òòÓ Ô
mòòÔ 
=>òòÒ Û
mòòÙ ı
.òòı ˆ
Keyòòˆ ˘
==òò˙ ¸
Diccionarioòò˝ à
.òòà â>
.MapeoDetalleMaestroVsTipoTransaccionParaCompraòòâ ∑
.òò∑ ∏
Singleòò∏ æ
(òòæ ø
nòòø ¿
=>òò¡ √
nòòƒ ≈
.òò≈ ∆
Keyòò∆ …
==òò  Ã

idTipoNotaòòÕ ◊
)òò◊ ÿ
.òòÿ Ÿ
ValueòòŸ ﬁ
)òòﬁ ﬂ
.òòﬂ ‡
Valueòò‡ Â
,òòÂ Ê
motivoòòÁ Ì
,òòÌ Ó
ordenDeCompraòòÔ ¸
.òò¸ ˝
	Proveedoròò˝ Ü
(òòÜ á
)òòá à
.òòà â
Idòòâ ã
,òòã å
$stròòç è
,òòè ê
sesionUsuarioòòë û
.òòû ü.
IdCentroDeAtencionSeleccionadoòòü Ω
,òòΩ æ
detallesDeNotaòòø Õ
,òòÕ Œ
MaestroSettingsòòœ ﬁ
.òòﬁ ﬂ
Defaultòòﬂ Ê
.òòÊ Á0
 IdDetalleMaestroEstadoConfirmadoòòÁ á
,òòá à
$stròòâ ø
,òòø ¿
trueòò¡ ≈
,òò≈ ∆7
'idTipoTransaccionMovimientoDeMercaderiaòò« Ó
!=òòÔ Ò
$numòòÚ Û
)òòÛ Ù
;òòÙ ı
if
öö 
(
öö 
ordenDeCompra
öö !
.
öö! "
Icbper
öö" (
(
öö( )
)
öö) *
>
öö+ ,
$num
öö- .
)
öö. /
{
õõ "
ordenDeNotaDeCredito
úú (
.
úú( )#
Parametro_transaccion
úú) >
.
úú> ?
Add
úú? B
(
úúB C
new
úúC F#
Parametro_transaccion
úúG \
(
úú\ ]
MaestroSettings
úú] l
.
úúl m
Default
úúm t
.
úút u.
IdDetalleMaestroParametroIcbperúúu î
,úúî ï
ordenDeCompraúúñ £
.úú£ §
Icbperúú§ ™
(úú™ ´
)úú´ ¨
.úú¨ ≠
ToStringúú≠ µ
(úúµ ∂
)úú∂ ∑
)úú∑ ∏
)úú∏ π
;úúπ ∫"
ordenDeNotaDeCredito
ùù (
.
ùù( )#
Parametro_transaccion
ùù) >
.
ùù> ?
Add
ùù? B
(
ùùB C
new
ùùC F#
Parametro_transaccion
ùùG \
(
ùù\ ]
MaestroSettings
ùù] l
.
ùùl m
Default
ùùm t
.
ùùt u>
/IdDetalleMaestroParametroNumeroBolsasDePlasticoùùu §
,ùù§ •
ordenDeCompraùù¶ ≥
.ùù≥ ¥&
NumeroBolsasDePlasticoùù¥  
(ùù  À
)ùùÀ Ã
.ùùÃ Õ
ToStringùùÕ ’
(ùù’ ÷
)ùù÷ ◊
)ùù◊ ÿ
)ùùÿ Ÿ
;ùùŸ ⁄
}
ûû "
ordenDeNotaDeCredito
†† $
.
††$ %#
Parametro_transaccion
††% :
.
††: ;
Add
††; >
(
††> ?
new
††? B#
Parametro_transaccion
††C X
(
††X Y
MaestroSettings
††Y h
.
††h i
Default
††i p
.
††p q2
#IdDetalleMaestroParametroTipoCompra††q î
,††î ï
(††ñ ó
(††ó ò
int††ò õ
)††õ ú
ordenDeCompra††ú ©
.††© ™'
TipoDeOperacionDeCompra††™ ¡
(††¡ ¬
)††¬ √
)††√ ƒ
.††ƒ ≈
ToString††≈ Õ
(††Õ Œ
)††Œ œ
)††œ –
)††– —
;††— “"
ordenDeNotaDeCredito
¢¢ $
.
¢¢$ %'
id_transaccion_referencia
¢¢% >
=
¢¢? @
ordenDeCompra
¢¢A N
.
¢¢N O
Id
¢¢O Q
;
¢¢Q R
notaDeCredito
§§ 
.
§§ 
Transaccion1
§§ *
.
§§* +
Add
§§+ .
(
§§. /"
ordenDeNotaDeCredito
§§/ C
)
§§C D
;
§§D E
Cuota
ßß 
cuota
ßß 
=
ßß 
new
ßß !
Cuota
ßß" '
(
ßß' (2
$ObtenerSiguienteCodigoParaNuevaCuota
ßß( L
(
ßßL M
true
ßßM Q
,
ßßQ R
fechaActual
ßßS ^
.
ßß^ _
Year
ßß_ c
)
ßßc d
+
ßße f
$str
ßßg j
+
ßßk l
$num
ßßm n
,
ßßn o
fechaActual
ßßp {
,
ßß{ |
fechaActualßß} à
,ßßà â
importeTotalßßä ñ
,ßßñ ó
$strßßò ¬
,ßß¬ √
trueßßƒ »
)ßß» …
;ßß…  "
ordenDeNotaDeCredito
©© $
.
©©$ %
Cuota
©©% *
.
©©* +
Add
©©+ .
(
©©. /
cuota
©©/ 4
)
©©4 5
;
©©5 6
if
™™ 
(
™™ 
modoPago
™™ 
==
™™ 
ModoPago
™™  (
.
™™( )
Contado
™™) 0
)
™™0 1
{
´´ "
ValidarImporteAPagar
≠≠ (
(
≠≠( )
$num
≠≠) *
,
≠≠* +
cuota
≠≠, 1
.
≠≠1 2
total
≠≠2 7
,
≠≠7 8"
ordenDeNotaDeCredito
≠≠9 M
.
≠≠M N
importe_total
≠≠N [
)
≠≠[ \
;
≠≠\ ]
Transaccion
ØØ 
pago
ØØ  $
=
ØØ% &.
 GenerarPagoPorNotaCreditoODebito
ØØ' G
(
ØØG H"
ordenDeNotaDeCredito
ØØH \
,
ØØ\ ]

CodigoPago
ØØ^ h
(
ØØh i
cuota
ØØi n
)
ØØn o
,
ØØo p
cuota
ØØq v
.
ØØv w
total
ØØw |
,
ØØ| }
sesionUsuarioØØ~ ã
.ØØã å
EmpleadoØØå î
.ØØî ï
IdØØï ó
,ØØó ò
fechaActualØØô §
,ØØ§ •
$strØØ¶ ®
,ØØ® ©
sesionUsuarioØØ™ ∑
.ØØ∑ ∏.
IdCentroDeAtencionSeleccionadoØØ∏ ÷
,ØØ÷ ◊
MaestroSettingsØØÿ Á
.ØØÁ Ë
DefaultØØË Ô
.ØØÔ 0
 IdDetalleMaestroEstadoConfirmadoØØ ê
,ØØê ë
$strØØí ⁄
)ØØ⁄ €
;ØØ€ ‹
cuota
∞∞ 
.
∞∞ 
SetPagoACuenta
∞∞ (
(
∞∞( )"
ordenDeNotaDeCredito
∞∞) =
.
∞∞= >
importe_total
∞∞> K
)
∞∞K L
;
∞∞L M$
VincularPagoConLaCuota
≤≤ *
(
≤≤* +
pago
≤≤+ /
,
≤≤/ 0
cuota
≤≤1 6
,
≤≤6 7"
ordenDeNotaDeCredito
≤≤8 L
.
≤≤L M
importe_total
≤≤M Z
)
≤≤Z [
;
≤≤[ \
notaDeCredito
¥¥ !
.
¥¥! "
Transaccion1
¥¥" .
.
¥¥. /
Add
¥¥/ 2
(
¥¥2 3
pago
¥¥3 7
)
¥¥7 8
;
¥¥8 9
}
µµ "
ordenDeNotaDeCredito
∑∑ $
.
∑∑$ %
enum1
∑∑% *
=
∑∑+ ,
(
∑∑- .
int
∑∑. 1
)
∑∑1 2%
IndicadorImpactoAlmacen
∑∑2 I
.
∑∑I J
NoImpactaNoBienes
∑∑J [
;
∑∑[ \
Transaccion
∏∏ 
salidaMercaderia
∏∏ ,
=
∏∏- .
null
∏∏/ 3
;
∏∏3 4
if
ππ 
(
ππ 5
'idTipoTransaccionMovimientoDeMercaderia
ππ ;
!=
ππ< >
$num
ππ? @
)
ππ@ A
{
∫∫ "
ordenDeNotaDeCredito
ºº (
.
ºº( )
enum1
ºº) .
=
ºº/ 0
(
ºº1 2
int
ºº2 5
)
ºº5 6%
IndicadorImpactoAlmacen
ºº6 M
.
ººM N
	Inmediata
ººN W
;
ººW X"
ordenDeNotaDeCredito
ΩΩ (
.
ΩΩ( )'
id_actor_negocio_interno1
ΩΩ) B
=
ΩΩC D
sesionUsuario
ΩΩE R
.
ΩΩR S6
(IdCentroAtencionQueTieneElStockIntegrada
ΩΩS {
;
ΩΩ{ | 
Estado_transaccion
ææ & 
estadoOrdenAlmacen
ææ' 9
=
ææ: ;
new
ææ< ? 
Estado_transaccion
ææ@ R
(
ææR S
sesionUsuario
ææS `
.
ææ` a
Empleado
ææa i
.
ææi j
Id
ææj l
,
ææl m
MaestroSettings
ææn }
.
ææ} ~
Defaultææ~ Ö
.ææÖ Ü0
 IdDetalleMaestroEstadoCompletadaææÜ ¶
,ææ¶ ß
fechaActualææ® ≥
,ææ≥ ¥
$strææµ 
)ææ Ò
;ææÒ Ú"
ordenDeNotaDeCredito
øø (
.
øø( ) 
Estado_transaccion
øø) ;
.
øø; <
Add
øø< ?
(
øø? @ 
estadoOrdenAlmacen
øø@ R
)
øøR S
;
øøS T
salidaMercaderia
¡¡ $
=
¡¡% &+
GenerarMovimientoDeMercaderia
¡¡' D
(
¡¡D E"
ordenDeNotaDeCredito
¡¡E Y
,
¡¡Y Z
sesionUsuario
¡¡[ h
.
¡¡h i
Empleado
¡¡i q
.
¡¡q r
Id
¡¡r t
,
¡¡t u
sesionUsuario¡¡v É
.¡¡É Ñ8
(IdCentroAtencionQueTieneElStockIntegrada¡¡Ñ ¨
,¡¡¨ ≠
ordenDeCompra¡¡Æ ª
.¡¡ª º
	Proveedor¡¡º ≈
(¡¡≈ ∆
)¡¡∆ «
.¡¡« »
Id¡¡»  
,¡¡  À7
'idTipoTransaccionMovimientoDeMercaderia¡¡Ã Û
,¡¡Û Ù
fechaActual¡¡ı Ä
,¡¡Ä Å
$str¡¡Ç Ñ
,¡¡Ñ Ö
detallesDeNota¡¡Ü î
,¡¡î ï
sesionUsuario¡¡ñ £
,¡¡£ §
compra¡¡• ´
.¡¡´ ¨*
ObtenerIngresoDeMercaderia¡¡¨ ∆
(¡¡∆ «
)¡¡« »
.¡¡» …
First¡¡… Œ
(¡¡Œ œ
)¡¡œ –
.¡¡– —
Id¡¡— ”
)¡¡” ‘
;¡¡‘ ’
salidaMercaderia
√√ $
.
√√$ %
Transaccion3
√√% 1
=
√√2 3"
ordenDeNotaDeCredito
√√4 H
;
√√H I
notaDeCredito
≈≈ !
.
≈≈! "
Transaccion1
≈≈" .
.
≈≈. /
Add
≈≈/ 2
(
≈≈2 3
salidaMercaderia
≈≈3 C
)
≈≈C D
;
≈≈D E
}
∆∆ 
return
«« 5
'idTipoTransaccionMovimientoDeMercaderia
«« >
!=
««? A
$num
««B C
?
««D E6
(AfectarInventarioFisicoYGuardarOperacion
««F n
(
««n o
new
««o r!
OperacionIntegrada««s Ö
{««Ü á
	Operacion««à ë
=««í ì
notaDeCredito««î °
,««° ¢ 
OrdenDeOperacion««£ ≥
=««¥ µ$
ordenDeNotaDeCredito««∂  
,««  À!
MovimientosBienes««Ã ›
=««ﬁ ﬂ
new««‡ „
List««‰ Ë
<««Ë È
Transaccion««È Ù
>««Ù ı
(««ı ˆ
)««ˆ ˜
{««¯ ˘ 
salidaMercaderia««˙ ä
}««ã å
}««ç é
,««é è
sesionUsuario««ê ù
)««ù û
:««ü †&
transaccionRepositorio««° ∑
.««∑ ∏ 
CrearTransaccion««∏ »
(««» …
notaDeCredito««… ÷
)««÷ ◊
;««◊ ÿ
}
»» 
catch
…… 
(
…… 
	Exception
…… 
e
…… 
)
…… 
{
   
throw
ÀÀ 
new
ÀÀ 
LogicaException
ÀÀ )
(
ÀÀ) *
$str
ÀÀ* p
,
ÀÀp q
e
ÀÀr s
)
ÀÀs t
;
ÀÀt u
}
ÃÃ 
}
ÕÕ 	
public
”” 
Compra
”” 
ObtenerCompra
”” #
(
””# $
long
””$ (
data
””) -
)
””- .
{
‘‘ 	
try
’’ 
{
÷÷ 
return
◊◊ 
(
◊◊ 
new
◊◊ 
Compra
◊◊ "
(
◊◊" #$
transaccionRepositorio
◊◊# 9
.
◊◊9 :F
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
◊◊: r
(
◊◊r s
data
◊◊s w
)
◊◊w x
)
◊◊x y
)
◊◊y z
;
◊◊z {
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
new
€€ 
LogicaException
€€ )
(
€€) *
$str
€€* O
,
€€O P
e
€€Q R
)
€€R S
;
€€S T
}
‹‹ 
}
›› 	
public
ﬂﬂ 
OrdenDeCompra
ﬂﬂ "
ObtenerOrdenDeCompra
ﬂﬂ 1
(
ﬂﬂ1 2
long
ﬂﬂ2 6
data
ﬂﬂ7 ;
)
ﬂﬂ; <
{
‡‡ 	
try
·· 
{
‚‚ 
return
„„ 
(
„„ 
new
„„ 
OrdenDeCompra
„„ )
(
„„) *$
transaccionRepositorio
„„* @
.
„„@ AF
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
„„A y
(
„„y z
data
„„z ~
)
„„~ 
)„„ Ä
)„„Ä Å
;„„Å Ç
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
LogicaException
ÁÁ )
(
ÁÁ) *
$str
ÁÁ* X
,
ÁÁX Y
e
ÁÁZ [
)
ÁÁ[ \
;
ÁÁ\ ]
}
ËË 
}
ÈÈ 	
public
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
List
ÎÎ 
<
ÎÎ .
 TipoDeComprobanteParaTransaccion
ÎÎ ?
>
ÎÎ? @
>
ÎÎ@ A1
#ObtenerTiposDeComprobanteParaCompra
ÎÎB e
(
ÎÎe f
int
ÎÎf i

idEmpleado
ÎÎj t
,
ÎÎt u
int
ÎÎv y
idCentroAtencionÎÎz ä
)ÎÎä ã
{
ÏÏ 	
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 
	resultado
ÔÔ 
=
ÔÔ 
await
ÔÔ  %$
transaccionRepositorio
ÔÔ& <
.
ÔÔ< =8
*ObtenerTipoComprobantePorTipoDeTransaccion
ÔÔ= g
(
ÔÔg h!
TransaccionSettings
ÔÔh {
.
ÔÔ{ |
DefaultÔÔ| É
.ÔÔÉ Ñ.
IdTipoTransaccionOrdenDeCompraÔÔÑ ¢
)ÔÔ¢ £
;ÔÔ£ §
foreach
 
(
 
var
 
tipo
 !
in
" $
	resultado
% .
)
. /
{
ÒÒ 
tipo
ÚÚ 
.
ÚÚ 
Detalle_maestro
ÚÚ (
.
ÚÚ( )
Serie_comprobante
ÚÚ) :
=
ÚÚ; <
tipo
ÚÚ= A
.
ÚÚA B
Detalle_maestro
ÚÚB Q
.
ÚÚQ R
Serie_comprobante
ÚÚR c
.
ÚÚc d
Where
ÚÚd i
(
ÚÚi j
sc
ÚÚj l
=>
ÚÚm o
sc
ÚÚp r
.
ÚÚr s
id_propietarioÚÚs Å
==ÚÚÇ Ñ 
idCentroAtencionÚÚÖ ï
&&ÚÚñ ò
scÚÚô õ
.ÚÚõ ú

es_vigenteÚÚú ¶
)ÚÚ¶ ß
.ÚÚß ®
ToListÚÚ® Æ
(ÚÚÆ Ø
)ÚÚØ ∞
;ÚÚ∞ ±
}
ÛÛ 
return
ÙÙ .
 TipoDeComprobanteParaTransaccion
ÙÙ 7
.
ÙÙ7 8
Convert
ÙÙ8 ?
(
ÙÙ? @
	resultado
ÙÙ@ I
.
ÙÙI J
ToList
ÙÙJ P
(
ÙÙP Q
)
ÙÙQ R
)
ÙÙR S
;
ÙÙS T
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
new
¯¯ 
LogicaException
¯¯ )
(
¯¯) *
$str
¯¯* j
,
¯¯j k
e
¯¯l m
)
¯¯m n
;
¯¯n o
}
˘˘ 
}
˙˙ 	
public
¸¸ 
List
¸¸ 
<
¸¸ 
OrdenDeCompra
¸¸ !
>
¸¸! "$
ObtenerOrdenesDeCompra
¸¸# 9
(
¸¸9 :
int
¸¸: =

idEmpleado
¸¸> H
,
¸¸H I
DateTime
¸¸J R

fechaDesde
¸¸S ]
,
¸¸] ^
DateTime
¸¸_ g

fechaHasta
¸¸h r
)
¸¸r s
{
˝˝ 	
try
˛˛ 
{
ˇˇ 
return
ÄÄ 
OrdenDeCompra
ÄÄ $
.
ÄÄ$ %
Convert_
ÄÄ% -
(
ÄÄ- .$
transaccionRepositorio
ÄÄ. D
.
ÄÄD EH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÄÄE 
(ÄÄ Ä#
TransaccionSettingsÄÄÄ ì
.ÄÄì î
DefaultÄÄî õ
.ÄÄõ ú.
IdTipoTransaccionOrdenDeCompraÄÄú ∫
,ÄÄ∫ ª

fechaDesdeÄÄº ∆
,ÄÄ∆ «

fechaHastaÄÄ» “
)ÄÄ“ ”
.ÄÄ” ‘
ToListÄÄ‘ ⁄
(ÄÄ⁄ €
)ÄÄ€ ‹
)ÄÄ‹ ›
;ÄÄ› ﬁ
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
LogicaException
ÑÑ )
(
ÑÑ) *
$str
ÑÑ* W
,
ÑÑW X
e
ÑÑY Z
)
ÑÑZ [
;
ÑÑ[ \
}
ÖÖ 
}
ÜÜ 	
public
àà 
List
àà 
<
àà 
OperacionDeCompra
àà %
>
àà% &(
ObtenerOperacionesDeCompra
àà' A
(
ààA B
int
ààB E

idEmpleado
ààF P
,
ààP Q
DateTime
ààR Z

fechaDesde
àà[ e
,
ààe f
DateTime
ààg o

fechaHasta
ààp z
)
ààz {
{
ââ 	
try
ää 
{
ãã 
List
çç 
<
çç 
OperacionDeCompra
çç &
>
çç& '!
operacionesDeCompra
çç( ;
=
çç< =
OperacionDeCompra
çç> O
.
ççO P
Convert_
ççP X
(
ççX Y$
transaccionRepositorio
ççY o
.
çço pI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoççp ™
(çç™ ´
Diccionarioçç´ ∂
.çç∂ ∑?
/TiposDeTransaccionOrdenesDeOperacionesDeComprasçç∑ Ê
,ççÊ Á
DiccionarioççË Û
.ççÛ ÙC
3TiposDeComprobanteParaCompraExceptoNotaInvalidacionççÙ ß
,ççß ®

fechaDesdeçç© ≥
,çç≥ ¥

fechaHastaççµ ø
)ççø ¿
.çç¿ ¡
ToListçç¡ «
(çç« »
)çç» …
)çç…  
;çç  À
return
èè !
operacionesDeCompra
èè *
.
èè* +
OrderByDescending
èè+ <
(
èè< =
oc
èè= ?
=>
èè@ B
oc
èèC E
.
èèE F
FechaEmision
èèF R
)
èèR S
.
èèS T
ThenByDescending
èèT d
(
èèd e
oc
èèe g
=>
èèh j
oc
èèk m
.
èèm n
Id
èèn p
)
èèp q
.
èèq r
ToList
èèr x
(
èèx y
)
èèy z
;
èèz {
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì )
(
ìì) *
$str
ìì* R
,
ììR S
e
ììT U
)
ììU V
;
ììV W
}
îî 
}
ïï 	
public
óó 
List
óó 
<
óó 
OperacionDeCompra
óó %
>
óó% &(
ObtenerOperacionesDeCompra
óó' A
(
óóA B
int
óóB E

idEmpleado
óóF P
,
óóP Q
int
óóR U
idCentroAtencion
óóV f
,
óóf g
DateTime
óóh p

fechaDesde
óóq {
,
óó{ |
DateTimeóó} Ö

fechaHastaóóÜ ê
)óóê ë
{
òò 	
try
ôô 
{
öö 
List
úú 
<
úú 
OperacionDeCompra
úú &
>
úú& '!
operacionesDeCompra
úú( ;
=
úú< =
OperacionDeCompra
úú> O
.
úúO P
Convert_
úúP X
(
úúX Y$
transaccionRepositorio
úúY o
.
úúo pI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoúúp ™
(úú™ ´
Diccionarioúú´ ∂
.úú∂ ∑?
/TiposDeTransaccionOrdenesDeOperacionesDeComprasúú∑ Ê
,úúÊ Á
DiccionarioúúË Û
.úúÛ ÙC
3TiposDeComprobanteParaCompraExceptoNotaInvalidacionúúÙ ß
,úúß ®

fechaDesdeúú© ≥
,úú≥ ¥

fechaHastaúúµ ø
)úúø ¿
.úú¿ ¡
ToListúú¡ «
(úú« »
)úú» …
)úú…  
;úú  À
return
ûû !
operacionesDeCompra
ûû *
.
ûû* +
OrderByDescending
ûû+ <
(
ûû< =
oc
ûû= ?
=>
ûû@ B
oc
ûûC E
.
ûûE F
FechaEmision
ûûF R
)
ûûR S
.
ûûS T
ToList
ûûT Z
(
ûûZ [
)
ûû[ \
;
ûû\ ]
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ )
(
¢¢) *
$str
¢¢* R
,
¢¢R S
e
¢¢T U
)
¢¢U V
;
¢¢V W
}
££ 
}
§§ 	
public
¶¶ 
List
¶¶ 
<
¶¶ 
OrdenDeCompra
¶¶ !
>
¶¶! "/
!ObtenerOrdenesDeCompraConfirmadas
¶¶# D
(
¶¶D E
int
¶¶E H

idEmpleado
¶¶I S
,
¶¶S T
int
¶¶U X
idCentroAtencion
¶¶Y i
,
¶¶i j
DateTime
¶¶k s

fechaDesde
¶¶t ~
,
¶¶~ 
DateTime¶¶Ä à

fechaHasta¶¶â ì
)¶¶ì î
{
ßß 	
try
®® 
{
©© 
return
™™ 
OrdenDeCompra
™™ $
.
™™$ %
Convert_
™™% -
(
™™- .$
transaccionRepositorio
™™. D
.
™™D EH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
™™E 
(™™ Ä
new™™Ä É
int™™Ñ á
[™™á à
]™™à â
{™™ä ã#
TransaccionSettings™™å ü
.™™ü †
Default™™† ß
.™™ß ®.
IdTipoTransaccionOrdenDeCompra™™® ∆
}™™« »
,™™» …
MaestroSettings™™  Ÿ
.™™Ÿ ⁄
Default™™⁄ ·
.™™· ‚0
 IdDetalleMaestroEstadoConfirmado™™‚ Ç
,™™Ç É

fechaDesde™™Ñ é
,™™é è

fechaHasta™™ê ö
)™™ö õ
.™™õ ú
ToList™™ú ¢
(™™¢ £
)™™£ §
)™™§ •
.™™• ¶
OrderBy™™¶ ≠
(™™≠ Æ
c™™Æ Ø
=>™™∞ ≤
c™™≥ ¥
.™™¥ µ
FechaEmision™™µ ¡
)™™¡ ¬
.™™¬ √
ToList™™√ …
(™™…  
)™™  À
;™™À Ã
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
e
¨¨ 
)
¨¨ 
{
≠≠ 
throw
ÆÆ 
new
ÆÆ 
LogicaException
ÆÆ )
(
ÆÆ) *
$str
ÆÆ* Z
,
ÆÆZ [
e
ÆÆ\ ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
public
≤≤ 
List
≤≤ 
<
≤≤ 
Resumen_Compra
≤≤ "
>
≤≤" #4
&ObtenerResumenesCompraDeTipoNoGravadas
≤≤$ J
(
≤≤J K
int
≤≤K N

idEmpleado
≤≤O Y
,
≤≤Y Z
int
≤≤[ ^
idCentroAtencion
≤≤_ o
,
≤≤o p
DateTime
≤≤q y

fechaDesde≤≤z Ñ
,≤≤Ñ Ö
DateTime≤≤Ü é

fechaHasta≤≤è ô
,≤≤ô ö
int≤≤õ û
tipoComprobante≤≤ü Æ
)≤≤Æ Ø
{
≥≥ 	
try
¥¥ 
{
µµ 
int
∂∂ 
[
∂∂ 
]
∂∂ !
idsTiposComprobante
∂∂ )
=
∂∂* +
tipoComprobante
∂∂, ;
==
∂∂< >
(
∂∂? @
int
∂∂@ C
)
∂∂C D*
TipoComprobanteReporteCompra
∂∂D `
.
∂∂` a
Todos
∂∂a f
?
∂∂g h
Diccionario
∂∂i t
.
∂∂t uB
3TiposDeComprobanteParaCompraExceptoNotaInvalidacion∂∂u ®
:∂∂© ™
tipoComprobante∂∂´ ∫
==∂∂ª Ω
(∂∂æ ø
int∂∂ø ¬
)∂∂¬ √,
TipoComprobanteReporteCompra∂∂√ ﬂ
.∂∂ﬂ ‡
Tributables∂∂‡ Î
?∂∂Ï Ì
Diccionario∂∂Ó ˘
.∂∂˘ ˙-
TiposDeComprobanteTributables∂∂˙ ó
:∂∂ò ô
Diccionario∂∂ö •
.∂∂• ¶5
%TiposDeComprobanteNoTributablesCompra∂∂¶ À
;∂∂À Ã
return
∑∑ $
transaccionRepositorio
∑∑ -
.
∑∑- ./
!ObtenerResumenCompraPorTipoCompra
∑∑. O
(
∑∑O P
Diccionario
∑∑P [
.
∑∑[ \Q
BTiposDeTransaccionOrdenesDeOperacionesDeComprasExceptoInvalidacion∑∑\ û
,∑∑û ü#
idsTiposComprobante∑∑† ≥
,∑∑≥ ¥
MaestroSettings∑∑µ ƒ
.∑∑ƒ ≈
Default∑∑≈ Ã
.∑∑Ã Õ0
 IdDetalleMaestroEstadoConfirmado∑∑Õ Ì
,∑∑Ì Ó
MaestroSettings∑∑Ô ˛
.∑∑˛ ˇ
Default∑∑ˇ Ü
.∑∑Ü á3
#IdDetalleMaestroParametroTipoCompra∑∑á ™
,∑∑™ ´#
TipoOperacionCompra∑∑¨ ø
.∑∑ø ¿
	NoGravada∑∑¿ …
,∑∑…  

fechaDesde∑∑À ’
,∑∑’ ÷

fechaHasta∑∑◊ ·
)∑∑· ‚
.∑∑‚ „
OrderBy∑∑„ Í
(∑∑Í Î
c∑∑Î Ï
=>∑∑Ì Ô
c∑∑ Ò
.∑∑Ò Ú
FechaInicio∑∑Ú ˝
)∑∑˝ ˛
.∑∑˛ ˇ
ToList∑∑ˇ Ö
(∑∑Ö Ü
)∑∑Ü á
;∑∑á à
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* Z
,
ªªZ [
e
ªª\ ]
)
ªª] ^
;
ªª^ _
}
ºº 
}
ΩΩ 	
public
ææ 
List
ææ 
<
ææ 
Resumen_Compra
ææ "
>
ææ" #K
=ObtenerResumenesCompraDeTipoGravadasDestinadasAVentasGravadas
ææ$ a
(
ææa b
int
ææb e

idEmpleado
ææf p
,
ææp q
int
æær u
idCentroAtencionææv Ü
,ææÜ á
DateTimeææà ê

fechaDesdeææë õ
,ææõ ú
DateTimeææù •

fechaHastaææ¶ ∞
,ææ∞ ±
intææ≤ µ
tipoComprobanteææ∂ ≈
)ææ≈ ∆
{
øø 	
try
¿¿ 
{
¡¡ 
int
¬¬ 
[
¬¬ 
]
¬¬ !
idsTiposComprobante
¬¬ )
=
¬¬* +
tipoComprobante
¬¬, ;
==
¬¬< >
(
¬¬? @
int
¬¬@ C
)
¬¬C D*
TipoComprobanteReporteCompra
¬¬D `
.
¬¬` a
Todos
¬¬a f
?
¬¬g h
Diccionario
¬¬i t
.
¬¬t uB
3TiposDeComprobanteParaCompraExceptoNotaInvalidacion¬¬u ®
:¬¬© ™
tipoComprobante¬¬´ ∫
==¬¬ª Ω
(¬¬æ ø
int¬¬ø ¬
)¬¬¬ √,
TipoComprobanteReporteCompra¬¬√ ﬂ
.¬¬ﬂ ‡
Tributables¬¬‡ Î
?¬¬Ï Ì
Diccionario¬¬Ó ˘
.¬¬˘ ˙-
TiposDeComprobanteTributables¬¬˙ ó
:¬¬ò ô
Diccionario¬¬ö •
.¬¬• ¶5
%TiposDeComprobanteNoTributablesCompra¬¬¶ À
;¬¬À Ã
return
√√ $
transaccionRepositorio
√√ -
.
√√- ./
!ObtenerResumenCompraPorTipoCompra
√√. O
(
√√O P
Diccionario
√√P [
.
√√[ \Q
BTiposDeTransaccionOrdenesDeOperacionesDeComprasExceptoInvalidacion√√\ û
,√√û ü#
idsTiposComprobante√√† ≥
,√√≥ ¥
MaestroSettings√√µ ƒ
.√√ƒ ≈
Default√√≈ Ã
.√√Ã Õ0
 IdDetalleMaestroEstadoConfirmado√√Õ Ì
,√√Ì Ó
MaestroSettings√√Ô ˛
.√√˛ ˇ
Default√√ˇ Ü
.√√Ü á3
#IdDetalleMaestroParametroTipoCompra√√á ™
,√√™ ´#
TipoOperacionCompra√√¨ ø
.√√ø ¿/
GravadaDestinadaAVentasGravadas√√¿ ﬂ
,√√ﬂ ‡

fechaDesde√√· Î
,√√Î Ï

fechaHasta√√Ì ˜
)√√˜ ¯
.√√¯ ˘
OrderBy√√˘ Ä
(√√Ä Å
c√√Å Ç
=>√√É Ö
c√√Ü á
.√√á à
FechaInicio√√à ì
)√√ì î
.√√î ï
ToList√√ï õ
(√√õ ú
)√√ú ù
;√√ù û
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
e
≈≈ 
)
≈≈ 
{
∆∆ 
throw
«« 
new
«« 
LogicaException
«« )
(
««) *
$str
««* Z
,
««Z [
e
««\ ]
)
««] ^
;
««^ _
}
»» 
}
…… 	
public
   
List
   
<
   
Resumen_Compra
   "
>
  " #M
?ObtenerResumenesCompraDeTipoGravadasDestinadasAVentasNoGravadas
  $ c
(
  c d
int
  d g

idEmpleado
  h r
,
  r s
int
  t w
idCentroAtencion  x à
,  à â
DateTime  ä í

fechaDesde  ì ù
,  ù û
DateTime  ü ß

fechaHasta  ® ≤
,  ≤ ≥
int  ¥ ∑
tipoComprobante  ∏ «
)  « »
{
ÀÀ 	
try
ÃÃ 
{
ÕÕ 
int
ŒŒ 
[
ŒŒ 
]
ŒŒ !
idsTiposComprobante
ŒŒ )
=
ŒŒ* +
tipoComprobante
ŒŒ, ;
==
ŒŒ< >
(
ŒŒ? @
int
ŒŒ@ C
)
ŒŒC D*
TipoComprobanteReporteCompra
ŒŒD `
.
ŒŒ` a
Todos
ŒŒa f
?
ŒŒg h
Diccionario
ŒŒi t
.
ŒŒt uB
3TiposDeComprobanteParaCompraExceptoNotaInvalidacionŒŒu ®
:ŒŒ© ™
tipoComprobanteŒŒ´ ∫
==ŒŒª Ω
(ŒŒæ ø
intŒŒø ¬
)ŒŒ¬ √,
TipoComprobanteReporteCompraŒŒ√ ﬂ
.ŒŒﬂ ‡
TributablesŒŒ‡ Î
?ŒŒÏ Ì
DiccionarioŒŒÓ ˘
.ŒŒ˘ ˙-
TiposDeComprobanteTributablesŒŒ˙ ó
:ŒŒò ô
DiccionarioŒŒö •
.ŒŒ• ¶5
%TiposDeComprobanteNoTributablesCompraŒŒ¶ À
;ŒŒÀ Ã
return
œœ $
transaccionRepositorio
œœ -
.
œœ- ./
!ObtenerResumenCompraPorTipoCompra
œœ. O
(
œœO P
Diccionario
œœP [
.
œœ[ \Q
BTiposDeTransaccionOrdenesDeOperacionesDeComprasExceptoInvalidacionœœ\ û
,œœû ü#
idsTiposComprobanteœœ† ≥
,œœ≥ ¥
MaestroSettingsœœµ ƒ
.œœƒ ≈
Defaultœœ≈ Ã
.œœÃ Õ0
 IdDetalleMaestroEstadoConfirmadoœœÕ Ì
,œœÌ Ó
MaestroSettingsœœÔ ˛
.œœ˛ ˇ
Defaultœœˇ Ü
.œœÜ á3
#IdDetalleMaestroParametroTipoCompraœœá ™
,œœ™ ´#
TipoOperacionCompraœœ¨ ø
.œœø ¿1
!GravadaDestinadaAVentasNoGravadasœœ¿ ·
,œœ· ‚

fechaDesdeœœ„ Ì
,œœÌ Ó

fechaHastaœœÔ ˘
)œœ˘ ˙
.œœ˙ ˚
OrderByœœ˚ Ç
(œœÇ É
cœœÉ Ñ
=>œœÖ á
cœœà â
.œœâ ä
FechaInicioœœä ï
)œœï ñ
.œœñ ó
ToListœœó ù
(œœù û
)œœû ü
;œœü †
}
–– 
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
““ 
throw
”” 
new
”” 
LogicaException
”” )
(
””) *
$str
””* Z
,
””Z [
e
””\ ]
)
””] ^
;
””^ _
}
‘‘ 
}
’’ 	
public
÷÷ 
List
÷÷ 
<
÷÷ 
Resumen_Compra
÷÷ "
>
÷÷" #V
HObtenerResumenesCompraDeTipoGravadasDestinadasAVentasGravadasYNoGravadas
÷÷$ l
(
÷÷l m
int
÷÷m p

idEmpleado
÷÷q {
,
÷÷{ |
int÷÷} Ä 
idCentroAtencion÷÷Å ë
,÷÷ë í
DateTime÷÷ì õ

fechaDesde÷÷ú ¶
,÷÷¶ ß
DateTime÷÷® ∞

fechaHasta÷÷± ª
,÷÷ª º
int÷÷Ω ¿
tipoComprobante÷÷¡ –
)÷÷– —
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
int
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ !
idsTiposComprobante
⁄⁄ )
=
⁄⁄* +
tipoComprobante
⁄⁄, ;
==
⁄⁄< >
(
⁄⁄? @
int
⁄⁄@ C
)
⁄⁄C D*
TipoComprobanteReporteCompra
⁄⁄D `
.
⁄⁄` a
Todos
⁄⁄a f
?
⁄⁄g h
Diccionario
⁄⁄i t
.
⁄⁄t uB
3TiposDeComprobanteParaCompraExceptoNotaInvalidacion⁄⁄u ®
:⁄⁄© ™
tipoComprobante⁄⁄´ ∫
==⁄⁄ª Ω
(⁄⁄æ ø
int⁄⁄ø ¬
)⁄⁄¬ √,
TipoComprobanteReporteCompra⁄⁄√ ﬂ
.⁄⁄ﬂ ‡
Tributables⁄⁄‡ Î
?⁄⁄Ï Ì
Diccionario⁄⁄Ó ˘
.⁄⁄˘ ˙-
TiposDeComprobanteTributables⁄⁄˙ ó
:⁄⁄ò ô
Diccionario⁄⁄ö •
.⁄⁄• ¶5
%TiposDeComprobanteNoTributablesCompra⁄⁄¶ À
;⁄⁄À Ã
return
€€ $
transaccionRepositorio
€€ -
.
€€- ./
!ObtenerResumenCompraPorTipoCompra
€€. O
(
€€O P
Diccionario
€€P [
.
€€[ \Q
BTiposDeTransaccionOrdenesDeOperacionesDeComprasExceptoInvalidacion€€\ û
,€€û ü#
idsTiposComprobante€€† ≥
,€€≥ ¥
MaestroSettings€€µ ƒ
.€€ƒ ≈
Default€€≈ Ã
.€€Ã Õ0
 IdDetalleMaestroEstadoConfirmado€€Õ Ì
,€€Ì Ó
MaestroSettings€€Ô ˛
.€€˛ ˇ
Default€€ˇ Ü
.€€Ü á3
#IdDetalleMaestroParametroTipoCompra€€á ™
,€€™ ´#
TipoOperacionCompra€€¨ ø
.€€ø ¿:
*GravadaDestinadaAVentasGravadasYNoGravadas€€¿ Í
,€€Í Î

fechaDesde€€Ï ˆ
,€€ˆ ˜

fechaHasta€€¯ Ç
)€€Ç É
.€€É Ñ
OrderBy€€Ñ ã
(€€ã å
c€€å ç
=>€€é ê
c€€ë í
.€€í ì
FechaInicio€€ì û
)€€û ü
.€€ü †
ToList€€† ¶
(€€¶ ß
)€€ß ®
;€€® ©
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› 
e
›› 
)
›› 
{
ﬁﬁ 
throw
ﬂﬂ 
new
ﬂﬂ 
LogicaException
ﬂﬂ )
(
ﬂﬂ) *
$str
ﬂﬂ* Z
,
ﬂﬂZ [
e
ﬂﬂ\ ]
)
ﬂﬂ] ^
;
ﬂﬂ^ _
}
‡‡ 
}
·· 	
public
„„ 
List
„„ 
<
„„ 
OperacionDeCompra
„„ %
>
„„% &F
8ObtenerOrdenesYNotasDeCreditoYDebitoDeComprasTributables
„„' _
(
„„_ `
int
„„` c

idEmpleado
„„d n
,
„„n o
DateTime
„„p x

fechaDesde„„y É
,„„É Ñ
DateTime„„Ö ç

fechaHasta„„é ò
)„„ò ô
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
int
ÁÁ 
[
ÁÁ 
]
ÁÁ 

idsEstados
ÁÁ  
=
ÁÁ! "
{
ÁÁ# $
MaestroSettings
ÁÁ% 4
.
ÁÁ4 5
Default
ÁÁ5 <
.
ÁÁ< =/
!IdDetalleMaestroEstadoTransmitido
ÁÁ= ^
}
ÁÁ_ `
;
ÁÁ` a
int
ÈÈ 
[
ÈÈ 
]
ÈÈ 
idsOrdenesYNotas
ÈÈ &
=
ÈÈ' (
{
ÈÈ) *!
TransaccionSettings
ÈÈ* =
.
ÈÈ= >
Default
ÈÈ> E
.
ÈÈE F,
IdTipoTransaccionOrdenDeCompra
ÈÈF d
,
ÈÈd e!
TransaccionSettings
ÈÈe x
.
ÈÈx y
DefaultÈÈy Ä
.ÈÈÄ Å2
"IdTipoTransaccionAnulacionDeCompraÈÈÅ £
,ÈÈ£ §!
TransaccionSettings
ÍÍ #
.
ÍÍ# $
Default
ÍÍ$ +
.
ÍÍ+ ,:
,IdTipoTransaccionDescuentoSobreOrdenDeCompra
ÍÍ, X
,
ÍÍX Y!
TransaccionSettings
ÍÍZ m
.
ÍÍm n
Default
ÍÍn u
.
ÍÍu v3
$IdTipoTransaccionDebitoOrdenDeCompraÍÍv ö
}ÍÍö õ
;ÍÍõ ú
int
ÏÏ 
[
ÏÏ 
]
ÏÏ "
idsTiposComprobantes
ÏÏ *
=
ÏÏ+ ,
{
ÏÏ- .
MaestroSettings
ÏÏ/ >
.
ÏÏ> ?
Default
ÏÏ? F
.
ÏÏF G/
!IdDetalleMaestroComprobanteBoleta
ÏÏG h
,
ÏÏh i
MaestroSettings
ÏÏj y
.
ÏÏy z
DefaultÏÏz Å
.ÏÏÅ Ç2
"IdDetalleMaestroComprobanteFacturaÏÏÇ §
,ÏÏ§ •
MaestroSettingsÏÏ¶ µ
.ÏÏµ ∂
DefaultÏÏ∂ Ω
.ÏÏΩ æ6
&IdDetalleMaestroComprobanteNotaCreditoÏÏæ ‰
,ÏÏ‰ Â
MaestroSettingsÏÏÊ ı
.ÏÏı ˆ
DefaultÏÏˆ ˝
.ÏÏ˝ ˛7
'IdDetalleMaestroComprobanteNotaDeDebitoÏÏ˛ •
}ÏÏ¶ ß
;ÏÏß ®
return
ÌÌ 
OperacionDeCompra
ÌÌ (
.
ÌÌ( )
Convert_
ÌÌ) 1
(
ÌÌ1 2$
transaccionRepositorio
ÌÌ2 H
.
ÌÌH II
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoÌÌI É
(ÌÌÉ Ñ 
idsOrdenesYNotasÌÌÑ î
,ÌÌî ï$
idsTiposComprobantesÌÌñ ™
,ÌÌ™ ´

idsEstadosÌÌ¨ ∂
,ÌÌ∂ ∑

fechaDesdeÌÌ∏ ¬
,ÌÌ¬ √

fechaHastaÌÌƒ Œ
)ÌÌŒ œ
.ÌÌœ –
ToListÌÌ– ÷
(ÌÌ÷ ◊
)ÌÌ◊ ÿ
)ÌÌÿ Ÿ
;ÌÌŸ ⁄
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
e
ÔÔ 
)
ÔÔ 
{
 
throw
ÒÒ 
new
ÒÒ 
LogicaException
ÒÒ )
(
ÒÒ) *
$str
ÒÒ* 
,ÒÒ Ä
eÒÒÅ Ç
)ÒÒÇ É
;ÒÒÉ Ñ
}
ÚÚ 
}
ÛÛ 	
public
ıı 
bool
ıı '
ExisteNumeroDeComprobante
ıı -
(
ıı- .
int
ıı. 1
idProveedor
ıı2 =
,
ıı= >
int
ıı? B
idTipoComprobante
ııC T
,
ııT U
string
ııV \
numeroDeSerie
ıı] j
,
ııj k
int
ııl o 
numeroComprobanteııp Å
,ııÅ Ç
intııÉ Ü
idEstadoActualııá ï
)ııï ñ
{
ˆˆ 	
try
˜˜ 
{
¯¯ 
return
˘˘ $
transaccionRepositorio
˘˘ -
.
˘˘- .
ExisteComprobante
˘˘. ?
(
˘˘? @
idProveedor
˘˘@ K
,
˘˘K L
idTipoComprobante
˘˘M ^
,
˘˘^ _
numeroDeSerie
˘˘` m
,
˘˘m n 
numeroComprobante˘˘o Ä
,˘˘Ä Å#
TransaccionSettings˘˘Ç ï
.˘˘ï ñ
Default˘˘ñ ù
.˘˘ù û.
IdTipoTransaccionOrdenDeCompra˘˘û º
,˘˘º Ω
idEstadoActual˘˘æ Ã
)˘˘Ã Õ
;˘˘Õ Œ
}
˙˙ 
catch
˚˚ 
(
˚˚ 
	Exception
˚˚ 
e
˚˚ 
)
˚˚ 
{
¸¸ 
throw
˝˝ 
new
˝˝ 
LogicaException
˝˝ )
(
˝˝) *
$str
˝˝* a
,
˝˝a b
e
˝˝c d
)
˝˝d e
;
˝˝e f
}
˛˛ 
}
ˇˇ 	
public
§§ 
List
§§ 
<
§§ 
string
§§ 
>
§§ 4
&ObtenerFechaIncioyFinParaReporteCompra
§§ B
(
§§B C
)
§§C D
{
•• 	
DateTime
¶¶ 
fechaActual
¶¶  
=
¶¶! "
DateTimeUtil
¶¶# /
.
¶¶/ 0
FechaActual
¶¶0 ;
(
¶¶; <
)
¶¶< =
;
¶¶= >
string
ßß 

fechaDesde
ßß 
=
ßß 
fechaActual
ßß  +
.
ßß+ ,
AddDays
ßß, 3
(
ßß3 4
-
ßß4 5
$num
ßß5 6
)
ßß6 7
.
ßß7 8
Date
ßß8 <
.
ßß< =
ToString
ßß= E
(
ßßE F
$str
ßßF R
)
ßßR S
;
ßßS T
string
®® 

fechaHasta
®® 
=
®® 
fechaActual
®®  +
.
®®+ ,
Date
®®, 0
.
®®0 1
ToString
®®1 9
(
®®9 :
$str
®®: F
)
®®F G
;
®®G H
return
™™ 
new
™™ 
List
™™ 
<
™™ 
string
™™ "
>
™™" #
{
™™$ %

fechaDesde
™™& 0
,
™™0 1

fechaHasta
™™2 <
}
™™= >
;
™™> ?
}
´´ 	
}
∞∞ 
}±± °≈
BD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ConceptoLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
ConceptoLogica '
:( )
IConceptoLogica* 9
{ 
private 
readonly #
ITransaccionRepositorio 0#
_transaccionRepositorio1 H
;H I
private 
readonly  
IConceptoRepositorio - 
_conceptoRepositorio. B
;B C
private 
readonly 
IMaestroRepositorio ,
_maestroRepositorio- @
;@ A
public 
readonly 
IPrecioRepositorio *
_precioRepositorio+ =
;= >
public 
readonly 
IActorRepositorio )
_actorRepositorio* ;
;; <
public 
readonly 
IActorNegocioLogica +
_actorLogica, 8
;8 9
public 
readonly $
IInventarioActual_Logica 0#
_inventarioActualLogica1 H
;H I
public 
ConceptoLogica 
( #
ITransaccionRepositorio 5"
transaccionRepositorio6 L
,L M 
IConceptoRepositorioN b
conceptoRepositorioc v
,v w 
IMaestroRepositorio	x ã 
maestroRepositorio
å û
,
û ü 
IPrecioRepositorio
† ≤
precioRepositorio
≥ ƒ
,
ƒ ≈
IActorRepositorio
∆ ◊
actorRepositorio
ÿ Ë
,
Ë È!
IActorNegocioLogica
Í ˝
actorLogica
˛ â
,
â ä&
IInventarioActual_Logica
ã £$
inventarioActualLogica
§ ∫
)
∫ ª
{ 	#
_transaccionRepositorio #
=$ %"
transaccionRepositorio& <
;< = 
_conceptoRepositorio    
=  ! "
conceptoRepositorio  # 6
;  6 7
_maestroRepositorio!! 
=!!  !
maestroRepositorio!!" 4
;!!4 5
_precioRepositorio"" 
=""  
precioRepositorio""! 2
;""2 3
_actorRepositorio## 
=## 
actorRepositorio##  0
;##0 1
_actorLogica$$ 
=$$ 
actorLogica$$ &
;$$& '#
_inventarioActualLogica%% #
=%%$ %"
inventarioActualLogica%%& <
;%%< =
}&& 	
public** 
OperationResult** !
GuardarConceptoBasico** 4
(**4 5
string**5 ;
nombre**< B
,**B C
string**D J
valor**K P
,**P Q
int**R U
[**U V
]**V W
idsCategoria**X d
,**d e
int**f i
[**i j
]**j k
idsCaracteristica**l }
)**} ~
{++ 	
try,, 
{-- 
Detalle_maestro// 
concepto//  (
=//) *
new//+ .
Detalle_maestro/// >
{00 

id_maestro11 
=11  
MaestroSettings11! 0
.110 1
Default111 8
.118 9
IdMaestroConcepto119 J
,11J K
codigo22 
=22 
nombre22 #
.22# $
Length22$ *
>22+ ,
$num22- /
?220 1
nombre222 8
.228 9
	Substring229 B
(22B C
$num22C D
,22D E
$num22F H
)22H I
:22J K
nombre22L R
,22R S
nombre33 
=33 
nombre33 #
,33# $
valor44 
=44 
valor44 !
,44! "
fecha_registro55 "
=55# $
DateTime55% -
.55- .
Now55. 1
,551 2

es_vigente66 
=66  
true66! %
}77 
;77 
if88 
(88 
idsCategoria88  
!=88! #
null88$ (
)88( )
{99 
foreach;; 
(;; 
var;;  
id;;! #
in;;$ &
idsCategoria;;' 3
);;3 4
{<< 
concepto==  
.==  !
Categoria_concepto==! 3
.==3 4
Add==4 7
(==7 8
new==8 ;
Categoria_concepto==< N
(==N O
)==O P
{==Q R
id_categoria==S _
===` a
id==b d
}==e f
)==f g
;==g h
}>> 
}?? 
if@@ 
(@@ 
idsCaracteristica@@ %
!=@@& (
null@@) -
)@@- .
{AA 
foreachCC 
(CC 
varCC  
idCC! #
inCC$ &
idsCaracteristicaCC' 8
)CC8 9
{DD 
conceptoEE  
.EE  !#
Caracteristica_conceptoEE! 8
.EE8 9
AddEE9 <
(EE< =
newEE= @#
Caracteristica_conceptoEEA X
(EEX Y
)EEY Z
{EE[ \
id_caracteristicaEE] n
=EEo p
idEEq s
,EEs t
maximoEEu {
=EE| }
$numEE~ 
,	EE Ä
es_multiple
EEÅ å
=
EEç é
false
EEè î
}
EEï ñ
)
EEñ ó
;
EEó ò
}FF 
}GG 
returnHH 
_maestroRepositorioHH *
.HH* +
crearDetalleMaestroHH+ >
(HH> ?
conceptoHH? G
)HHG H
;HHH I
}II 
catchJJ 
(JJ 
	ExceptionJJ 
eJJ 
)JJ 
{KK 
throwLL 
newLL 
LogicaExceptionLL )
(LL) *
$strLL* N
,LLN O
eLLP Q
)LLQ R
;LLR S
}MM 
}NN 	
publicPP 
OperationResultPP 
ActualizarFamiliaPP 0
(PP0 1
intPP1 4
	idFamiliaPP5 >
,PP> ?
stringPP@ F
nombrePPG M
,PPM N
stringPPO U
valorPPV [
,PP[ \
intPP] `
[PP` a
]PPa b
idsCategoriaPPc o
,PPo p
intPPq t
[PPt u
]PPu v
idsCaracteristica	PPw à
)
PPà â
{QQ 	
tryRR 
{SS 
varTT "
seCambioNombreConceptoTT *
=TT+ ,
falseTT- 2
;TT2 3
OperationResultUU $
resultadoCrearInventarioUU  8
=UU9 :
newUU; >
OperationResultUU? N
(UUN O
)UUO P
;UUP Q
OperationResultVV '
resultadoEliminarInventarioVV  ;
=VV< =
newVV> A
OperationResultVVB Q
(VVQ R
)VVR S
;VVS T
OperationResultWW (
resultActualizacionConceptosWW  <
=WW= >
newWW? B
OperationResultWWC R
(WWR S
)WWS T
;WWT U
varYY 
conceptoBasicoYY "
=YY# $
_maestroRepositorioYY% 8
.YY8 9
ObtenerDetalleYY9 G
(YYG H
	idFamiliaYYH Q
)YYQ R
;YYR S
if[[ 
([[ 
![[ 
conceptoBasico[[ #
.[[# $
nombre[[$ *
.[[* +
Equals[[+ 1
([[1 2
nombre[[2 8
)[[8 9
)[[9 :
{\\ "
seCambioNombreConcepto]] *
=]]+ ,
true]]- 1
;]]1 2
var__ 
detalleMaestro__ &
=__' (
_maestroRepositorio__) <
.__< =4
(ObtenerDetalleMaestroPorIdMaestroYNombre__= e
(__e f
MaestroSettings__f u
.__u v
Default__v }
.__} ~
IdMaestroConcepto	__~ è
,
__è ê
nombre
__ë ó
)
__ó ò
;
__ò ô
if`` 
(`` 
detalleMaestro`` &
!=``' )
null``* .
)``. /
{aa 
throwcc 
newcc !
LogicaExceptioncc" 1
(cc1 2
$strcc2 c
+ccd e
detalleMaestroccf t
.cct u
nombreccu {
+cc| }
$str	cc~ ª
)
ccª º
;
ccº Ω
}dd 
}ee 
ifgg 
(gg 
!gg 
conceptoBasicogg #
.gg# $
valorgg$ )
.gg) *
Equalsgg* 0
(gg0 1
valorgg1 6
)gg6 7
)gg7 8
{hh 
ifjj 
(jj 
conceptoBasicojj &
.jj& '
valorjj' ,
.jj, -
Equalsjj- 3
(jj3 4
$strjj4 7
)jj7 8
)jj8 9
{kk 
ifll 
(ll #
_transaccionRepositorioll 3
.ll3 4@
4ObtenerNumeroDetallesDeTransaccionConCantidadMayorA0ll4 h
(llh i
	idFamilialli r
,llr s 
TransaccionSettings	llt á
.
llá à
Default
llà è
.
llè ê/
!IdTipoTransaccionInventarioActual
llê ±
)
ll± ≤
>
ll≥ ¥
$num
llµ ∂
)
ll∂ ∑
{mm 
thrownn !
newnn" %
LogicaExceptionnn& 5
(nn5 6
$str	nn6 í
)
nní ì
;
nnì î
}oo '
resultadoEliminarInventariopp 3
=pp4 5#
_inventarioActualLogicapp6 M
.ppM NU
HEliminarDetallesInventariosActualesDeConceptosDeNegocioDelConceptoBasico	ppN ñ
(
ppñ ó
	idFamilia
ppó †
)
pp† °
;
pp° ¢
ifqq 
(qq '
resultadoEliminarInventarioqq 7
.qq7 8
code_resultqq8 C
==qqD F
OperationResultEnumqqG Z
.qqZ [
Errorqq[ `
)qq` a
{rr 
throwss !
newss" %
LogicaExceptionss& 5
(ss5 6
$strss6 g
)ssg h
;ssh i
}tt 
}uu 
elsevv 
{ww $
resultadoCrearInventarioxx 0
=xx1 2#
_inventarioActualLogicaxx3 J
.xxJ KR
ECrearDetallesInventariosActualesDeConceptosDeNegocioDelConceptoBasico	xxK ê
(
xxê ë
	idFamilia
xxë ö
)
xxö õ
;
xxõ ú
ifyy 
(yy $
resultadoCrearInventarioyy 4
.yy4 5
code_resultyy5 @
==yyA C
OperationResultEnumyyD W
.yyW X
ErroryyX ]
)yy] ^
{zz 
throw{{ !
new{{" %
LogicaException{{& 5
({{5 6
$str{{6 r
){{r s
;{{s t
}|| 
}}} 
}~~ 
Detalle_maestro
ÄÄ 
concepto
ÄÄ  (
=
ÄÄ) *
new
ÄÄ+ .
Detalle_maestro
ÄÄ/ >
{
ÅÅ 
id
ÇÇ 
=
ÇÇ 
	idFamilia
ÇÇ "
,
ÇÇ" #

id_maestro
ÉÉ 
=
ÉÉ  
MaestroSettings
ÉÉ! 0
.
ÉÉ0 1
Default
ÉÉ1 8
.
ÉÉ8 9
IdMaestroConcepto
ÉÉ9 J
,
ÉÉJ K
codigo
ÑÑ 
=
ÑÑ 
nombre
ÑÑ #
.
ÑÑ# $
Length
ÑÑ$ *
>
ÑÑ+ ,
$num
ÑÑ- /
?
ÑÑ0 1
nombre
ÑÑ2 8
.
ÑÑ8 9
	Substring
ÑÑ9 B
(
ÑÑB C
$num
ÑÑC D
,
ÑÑD E
$num
ÑÑF H
)
ÑÑH I
:
ÑÑJ K
nombre
ÑÑL R
,
ÑÑR S
nombre
ÖÖ 
=
ÖÖ 
nombre
ÖÖ #
,
ÖÖ# $
valor
ÜÜ 
=
ÜÜ 
valor
ÜÜ !
,
ÜÜ! "

es_vigente
áá 
=
áá  
true
áá! %
}
àà 
;
àà 
foreach
ää 
(
ää 
var
ää 
id
ää 
in
ää  "
idsCategoria
ää# /
)
ää/ 0
{
ãã 
concepto
åå 
.
åå  
Categoria_concepto
åå /
.
åå/ 0
Add
åå0 3
(
åå3 4
new
åå4 7 
Categoria_concepto
åå8 J
(
ååJ K
)
ååK L
{
ååM N
id_concepto
ååO Z
=
åå[ \
	idFamilia
åå] f
,
ååf g
id_categoria
ååh t
=
ååu v
id
ååw y
}
ååz {
)
åå{ |
;
åå| }
}
çç 
foreach
èè 
(
èè 
var
èè 
id
èè 
in
èè  "
idsCaracteristica
èè# 4
)
èè4 5
{
êê 
concepto
ëë 
.
ëë %
Caracteristica_concepto
ëë 4
.
ëë4 5
Add
ëë5 8
(
ëë8 9
new
ëë9 <%
Caracteristica_concepto
ëë= T
(
ëëT U
)
ëëU V
{
ëëW X
id_concepto
ëëY d
=
ëëe f
	idFamilia
ëëg p
,
ëëp q 
id_caracteristicaëër É
=ëëÑ Ö
idëëÜ à
,ëëà â
maximoëëä ê
=ëëë í
$numëëì î
,ëëî ï
es_multipleëëñ °
=ëë¢ £
falseëë§ ©
}ëë™ ´
)ëë´ ¨
;ëë¨ ≠
}
íí 
var
ìì ,
resultadoActualizacionConcepto
ìì 2
=
ìì3 4"
_conceptoRepositorio
ìì5 I
.
ììI J 
ActualizarConcepto
ììJ \
(
ìì\ ]
concepto
ìì] e
)
ììe f
;
ììf g
if
îî 
(
îî $
seCambioNombreConcepto
îî *
&&
îî+ -,
resultadoActualizacionConcepto
îî. L
.
îîL M
code_result
îîM X
==
îîY [!
OperationResultEnum
îî\ o
.
îîo p
Success
îîp w
)
îîw x
{
ïï 
List
ññ 
<
ññ 
Concepto_negocio
ññ )
>
ññ) *(
conceptosNegocioActualizar
ññ+ E
=
ññF G
new
ññH K
List
ññL P
<
ññP Q
Concepto_negocio
ññQ a
>
ñña b
(
ññb c
)
ññc d
;
ññd e
var
óó 
conceptosNegocio
óó (
=
óó) *"
_conceptoRepositorio
óó+ ?
.
óó? @?
1ObtenerConceptosDeNegocioPorRolYPorConceptoBasico
óó@ q
(
óóq r
ConceptoSettingsóór Ç
.óóÇ É
DefaultóóÉ ä
.óóä ã
IdRolMercaderiaóóã ö
,óóö õ
	idFamiliaóóú •
)óó• ¶
.óó¶ ß
ToListóóß ≠
(óó≠ Æ
)óóÆ Ø
;óóØ ∞
var
òò 2
$numeroCaracteresNombreConceptoBasico
òò <
=
òò= >
conceptoBasico
òò? M
.
òòM N
nombre
òòN T
.
òòT U
Length
òòU [
;
òò[ \
foreach
ôô 
(
ôô 
var
ôô  
conceptoNegocio
ôô! 0
in
ôô1 3
conceptosNegocio
ôô4 D
)
ôôD E
{
öö 
conceptoNegocio
õõ '
.
õõ' (
nombre
õõ( .
=
õõ/ 0
conceptoNegocio
õõ1 @
.
õõ@ A
nombre
õõA G
.
õõG H
	Substring
õõH Q
(
õõQ R2
$numeroCaracteresNombreConceptoBasico
õõR v
,
õõv w
conceptoNegocioõõx á
.õõá à
nombreõõà é
.õõé è
Lengthõõè ï
-õõñ ó4
$numeroCaracteresNombreConceptoBasicoõõò º
)õõº Ω
;õõΩ æ
conceptoNegocio
úú '
.
úú' (
nombre
úú( .
=
úú/ 0
concepto
úú1 9
.
úú9 :
nombre
úú: @
+
úúA B
conceptoNegocio
úúC R
.
úúR S
nombre
úúS Y
;
úúY Z
}
ùù *
resultActualizacionConceptos
ûû 0
=
ûû1 2"
_conceptoRepositorio
ûû3 G
.
ûûG H.
 ActualizarNombreConceptosNegocio
ûûH h
(
ûûh i)
conceptosNegocioActualizarûûi É
)ûûÉ Ñ
;ûûÑ Ö
if
üü 
(
üü *
resultActualizacionConceptos
üü 4
.
üü4 5
code_result
üü5 @
!=
üüA C!
OperationResultEnum
üüD W
.
üüW X
Success
üüX _
)
üü_ `
{
†† 
throw
°° 
new
°° !
LogicaException
°°" 1
(
°°1 2
$str
°°2 o
)
°°o p
;
°°p q
}
¢¢ 
}
££ 
return
§§ *
resultActualizacionConceptos
§§ 3
;
§§3 4
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
e
®® 
;
®® 
}
©© 
}
™™ 	
public
ÆÆ 
OperationResult
ÆÆ %
CambiarEsVigenteFamilia
ÆÆ 6
(
ÆÆ6 7
int
ÆÆ7 :
	idFamilia
ÆÆ; D
,
ÆÆD E
bool
ÆÆF J
	esVigente
ÆÆK T
)
ÆÆT U
{
ØØ 	
try
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
	esVigente
≤≤ 
)
≤≤ 
{
≥≥ 
bool
µµ #
tieneConceptosNegocio
µµ .
=
µµ/ 0"
_conceptoRepositorio
µµ1 E
.
µµE F%
TieneConceptosDeNegocio
µµF ]
(
µµ] ^
	idFamilia
µµ^ g
,
µµg h
true
µµi m
)
µµm n
;
µµn o
if
∂∂ 
(
∂∂ #
tieneConceptosNegocio
∂∂ -
)
∂∂- .
{
∑∑ 
throw
∏∏ 
new
∏∏ !
LogicaException
∏∏" 1
(
∏∏1 2
$str∏∏2 é
)∏∏é è
;∏∏è ê
}
ππ 
return
∫∫ !
_maestroRepositorio
∫∫ .
.
∫∫. /%
DarDeBajaDetalleMaestro
∫∫/ F
(
∫∫F G
	idFamilia
∫∫G P
,
∫∫P Q
MaestroSettings
∫∫R a
.
∫∫a b
Default
∫∫b i
.
∫∫i j
IdMaestroConcepto
∫∫j {
)
∫∫{ |
;
∫∫| }
}
ªª 
else
ºº 
{
ΩΩ 
return
ææ !
_maestroRepositorio
ææ .
.
ææ. /%
DarDeAltaDetalleMaestro
ææ/ F
(
ææF G
	idFamilia
ææG P
,
ææP Q
MaestroSettings
ææR a
.
ææa b
Default
ææb i
.
ææi j
IdMaestroConcepto
ææj {
)
ææ{ |
;
ææ| }
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* P
,
√√P Q
e
√√R S
)
√√S T
;
√√T U
}
ƒƒ 
}
≈≈ 	
public
»» 
Detalle_maestro
»» *
ObtenerConceptoBasicoVigente
»» ;
(
»»; <
int
»»< ?

idConcepto
»»@ J
)
»»J K
{
…… 	
try
   
{
ÀÀ 
Detalle_maestro
ÃÃ 
concepto
ÃÃ  (
=
ÃÃ) *!
_maestroRepositorio
ÃÃ+ >
.
ÃÃ> ?
ObtenerDetalle
ÃÃ? M
(
ÃÃM N

idConcepto
ÃÃN X
,
ÃÃX Y
true
ÃÃZ ^
)
ÃÃ^ _
;
ÃÃ_ `
return
ÕÕ 
concepto
ÕÕ 
;
ÕÕ  
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
e
œœ 
)
œœ 
{
–– 
throw
—— 
e
—— 
;
—— 
}
““ 
}
”” 	
public
’’ 
List
’’ 
<
’’ 
Detalle_maestro
’’ #
>
’’# $%
ObtenerConceptosBasicos
’’% <
(
’’< =
)
’’= >
{
÷÷ 	
try
◊◊ 
{
ÿÿ 
return
ŸŸ !
_maestroRepositorio
ŸŸ *
.
ŸŸ* +%
obtenerDetallesMaestros
ŸŸ+ B
(
ŸŸB C
MaestroSettings
ŸŸC R
.
ŸŸR S
Default
ŸŸS Z
.
ŸŸZ [
IdMaestroConcepto
ŸŸ[ l
)
ŸŸl m
.
ŸŸm n
ToList
ŸŸn t
(
ŸŸt u
)
ŸŸu v
;
ŸŸv w
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
throw
›› 
e
›› 
;
›› 
}
ﬁﬁ 
}
ﬂﬂ 	
public
·· 
Detalle_maestro
·· [
MObtenerConceptoBasicoVigenteIncluyendonCaracteristicasYValoresCaracteristicas
·· l
(
··l m
int
··m p

idConcepto
··q {
)
··{ |
{
‚‚ 	
try
„„ 
{
‰‰ 
Detalle_maestro
ÂÂ 
concepto
ÂÂ  (
=
ÂÂ) *!
_maestroRepositorio
ÂÂ+ >
.
ÂÂ> ?h
YObtenerDetalleMaestroInclusiveCaracteristicaConceptoConDetalleMaestroYValorCaracteristicaÂÂ? ò
(ÂÂò ô

idConceptoÂÂô £
,ÂÂ£ §
trueÂÂ• ©
)ÂÂ© ™
;ÂÂ™ ´
return
ÊÊ 
concepto
ÊÊ 
;
ÊÊ  
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
e
ÍÍ 
;
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
List
ÓÓ 
<
ÓÓ 
Detalle_maestro
ÓÓ #
>
ÓÓ# $H
:ObtenerConceptosBasicosVigentesIncluyendoCategoriaConcepto
ÓÓ% _
(
ÓÓ_ `
)
ÓÓ` a
{
ÔÔ 	
try
 
{
ÒÒ 
return
ÚÚ !
_maestroRepositorio
ÚÚ *
.
ÚÚ* +@
2ObtenerDetallesMaestrosIncluyendoCategoriaConcepto
ÚÚ+ ]
(
ÚÚ] ^
MaestroSettings
ÚÚ^ m
.
ÚÚm n
Default
ÚÚn u
.
ÚÚu v 
IdMaestroConceptoÚÚv á
,ÚÚá à
trueÚÚâ ç
)ÚÚç é
.ÚÚé è
ToListÚÚè ï
(ÚÚï ñ
)ÚÚñ ó
;ÚÚó ò
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
e
ÙÙ 
)
ÙÙ 
{
ıı 
throw
ˆˆ 
new
ˆˆ 
LogicaException
ˆˆ )
(
ˆˆ) *
$str
ˆˆ* m
,
ˆˆm n
e
ˆˆo p
)
ˆˆp q
;
ˆˆq r
}
˜˜ 
}
¯¯ 	
public
˘˘ 
List
˘˘ 
<
˘˘ 
Detalle_maestro
˘˘ #
>
˘˘# $$
ObtenerTodosLasFamilia
˘˘% ;
(
˘˘; <
)
˘˘< =
{
˙˙ 	
try
˚˚ 
{
¸¸ 
return
˝˝ !
_maestroRepositorio
˝˝ *
.
˝˝* +G
9ObtenerTodoLosDetallesMaestrosIncluyendoCategoriaConcepto
˝˝+ d
(
˝˝d e
MaestroSettings
˝˝e t
.
˝˝t u
Default
˝˝u |
.
˝˝| } 
IdMaestroConcepto˝˝} é
)˝˝é è
.˝˝è ê
ToList˝˝ê ñ
(˝˝ñ ó
)˝˝ó ò
;˝˝ò ô
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* m
,
ÅÅm n
e
ÅÅo p
)
ÅÅp q
;
ÅÅq r
}
ÇÇ 
}
ÉÉ 	
public
ââ 
List
ââ 
<
ââ 
ItemGenerico
ââ  
>
ââ  !+
ObtenerCaracteristicasComunes
ââ" ?
(
ââ? @
)
ââ@ A
{
ää 	
try
ãã 
{
åå 
int
çç 
[
çç 
]
çç (
idsMaestrosCaracteristicas
çç 0
=
çç1 2
{
çç3 4
MaestroSettings
çç5 D
.
ççD E
Default
ççE L
.
ççL M-
IdMaestroCaracteristicaConcepto
ççM l
}
ççm n
;
ççn o
return
éé 
ItemGenerico
éé #
.
éé# $
Convert
éé$ +
(
éé+ ,!
_maestroRepositorio
éé, ?
.
éé? @
ObtenerDetalles
éé@ O
(
ééO P(
idsMaestrosCaracteristicas
ééP j
,
ééj k
true
éél p
)
éép q
.
ééq r
ToList
éér x
(
ééx y
)
ééy z
)
ééz {
;
éé{ |
}
èè 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
throw
íí 
new
íí 
LogicaException
íí )
(
íí) *
$str
íí* L
,
ííL M
e
ííN O
)
ííO P
;
ííP Q
}
ìì 
}
îî 	
public
ïï 
List
ïï 
<
ïï 
Detalle_maestro
ïï #
>
ïï# $$
ObtenerCaracteristicas
ïï% ;
(
ïï; <
)
ïï< =
{
ññ 	
try
óó 
{
òò 
int
ôô 
[
ôô 
]
ôô (
idsMaestrosCaracteristicas
ôô 0
=
ôô1 2
{
ôô3 4
MaestroSettings
ôô5 D
.
ôôD E
Default
ôôE L
.
ôôL M-
IdMaestroCaracteristicaConcepto
ôôM l
,
ôôl m
MaestroSettings
ôôn }
.
ôô} ~
Defaultôô~ Ö
.ôôÖ Ü5
%IdMaestroCaracteristicaPropiaConceptoôôÜ ´
}ôô¨ ≠
;ôô≠ Æ
return
öö !
_maestroRepositorio
öö *
.
öö* +
ObtenerDetalles
öö+ :
(
öö: ;(
idsMaestrosCaracteristicas
öö; U
,
ööU V
true
ööW [
)
öö[ \
.
öö\ ]
ToList
öö] c
(
ööc d
)
ööd e
;
ööe f
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
ùù 
throw
ûû 
new
ûû 
LogicaException
ûû )
(
ûû) *
$str
ûû* L
,
ûûL M
e
ûûN O
)
ûûO P
;
ûûP Q
}
üü 
}
†† 	
public
¢¢ 
Detalle_maestro
¢¢ #
ObtenerCaracteristica
¢¢ 4
(
¢¢4 5
int
¢¢5 8
idCaracteristica
¢¢9 I
)
¢¢I J
{
££ 	
try
§§ 
{
•• 
return
¶¶ !
_maestroRepositorio
¶¶ *
.
¶¶* +
ObtenerDetalle
¶¶+ 9
(
¶¶9 :
idCaracteristica
¶¶: J
)
¶¶J K
;
¶¶K L
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
©© 
throw
™™ 
e
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
public
ÆÆ 
List
ÆÆ 
<
ÆÆ 
ItemGenerico
ÆÆ  
>
ÆÆ  !6
(ObtenerCaracteristicasVigentesPorFamilia
ÆÆ" J
(
ÆÆJ K
int
ÆÆK N
	idFamilia
ÆÆO X
)
ÆÆX Y
{
ØØ 	
try
∞∞ 
{
±± 
return
≤≤ 
ItemGenerico
≤≤ #
.
≤≤# $
Convert
≤≤$ +
(
≤≤+ ,!
_maestroRepositorio
≤≤, ?
.
≤≤? @'
ObtenerDetallesPorFamilia
≤≤@ Y
(
≤≤Y Z
	idFamilia
≤≤Z c
)
≤≤c d
.
≤≤d e
ToList
≤≤e k
(
≤≤k l
)
≤≤l m
)
≤≤m n
;
≤≤n o
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∂∂ 
new
∂∂ 
LogicaException
∂∂ )
(
∂∂) *
$str
∂∂* L
,
∂∂L M
e
∂∂N O
)
∂∂O P
;
∂∂P Q
}
∑∑ 
}
∏∏ 	
public
∫∫ 
OperationResult
∫∫ #
GuardarCarcateristica
∫∫ 4
(
∫∫4 5
int
∫∫5 8%
idMaestroCaracteristica
∫∫9 P
,
∫∫P Q
string
∫∫R X
codigo
∫∫Y _
,
∫∫_ `
string
∫∫a g
nombre
∫∫h n
,
∫∫n o
string
∫∫p v
descripcion∫∫w Ç
,∫∫Ç É
List∫∫Ñ à
<∫∫à â$
Valor_caracteristica∫∫â ù
>∫∫ù û
valores∫∫ü ¶
)∫∫¶ ß
{
ªª 	
try
ºº 
{
ΩΩ 
Detalle_maestro
ææ 
caracteristica
ææ  .
=
ææ/ 0
new
ææ1 4
Detalle_maestro
ææ5 D
(
ææD E
)
ææE F
;
ææF G
caracteristica
øø 
.
øø 

id_maestro
øø )
=
øø* +%
idMaestroCaracteristica
øø, C
;
øøC D
caracteristica
¿¿ 
.
¿¿ 
codigo
¿¿ %
=
¿¿& '
codigo
¿¿( .
;
¿¿. /
caracteristica
¡¡ 
.
¡¡ 
nombre
¡¡ %
=
¡¡& '
nombre
¡¡( .
;
¡¡. /
caracteristica
¬¬ 
.
¬¬ 
valor
¬¬ $
=
¬¬% &
descripcion
¬¬' 2
;
¬¬2 3
caracteristica
√√ 
.
√√ 
fecha_registro
√√ -
=
√√. /
DateTime
√√0 8
.
√√8 9
Now
√√9 <
;
√√< =
caracteristica
ƒƒ 
.
ƒƒ 

es_vigente
ƒƒ )
=
ƒƒ* +
true
ƒƒ, 0
;
ƒƒ0 1
if
≈≈ 
(
≈≈ 
valores
≈≈ 
.
≈≈ 
Count
≈≈ !
>
≈≈" #
$num
≈≈$ %
)
≈≈% &
{
∆∆ 
foreach
«« 
(
«« 
var
««  
item
««! %
in
««& (
valores
««) 0
)
««0 1
{
»» 
caracteristica
…… &
.
……& '"
Valor_caracteristica
……' ;
.
……; <
Add
……< ?
(
……? @
item
……@ D
)
……D E
;
……E F
}
   
}
ÀÀ 
return
ÃÃ !
_maestroRepositorio
ÃÃ *
.
ÃÃ* +!
crearDetalleMaestro
ÃÃ+ >
(
ÃÃ> ?
caracteristica
ÃÃ? M
)
ÃÃM N
;
ÃÃN O
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
e
–– 
;
–– 
}
—— 
}
““ 	
public
‘‘ 
OperationResult
‘‘ &
ActualizarCaracteristica
‘‘ 7
(
‘‘7 8
int
‘‘8 ;
id
‘‘< >
,
‘‘> ?
int
‘‘@ C%
idMaestroCaracteristica
‘‘D [
,
‘‘[ \
string
‘‘] c
codigo
‘‘d j
,
‘‘j k
string
‘‘l r
nombre
‘‘s y
,
‘‘y z
string‘‘{ Å
descripcion‘‘Ç ç
,‘‘ç é
List‘‘è ì
<‘‘ì î$
Valor_caracteristica‘‘î ®
>‘‘® ©
valores‘‘™ ±
,‘‘± ≤
bool‘‘≥ ∑
	esVigente‘‘∏ ¡
)‘‘¡ ¬
{
’’ 	
try
÷÷ 
{
◊◊ 
Detalle_maestro
ÿÿ 
caracteristica
ÿÿ  .
=
ÿÿ/ 0
new
ÿÿ1 4
Detalle_maestro
ÿÿ5 D
(
ÿÿD E
)
ÿÿE F
;
ÿÿF G
caracteristica
ŸŸ 
.
ŸŸ 
id
ŸŸ !
=
ŸŸ" #
id
ŸŸ$ &
;
ŸŸ& '
caracteristica
⁄⁄ 
.
⁄⁄ 

id_maestro
⁄⁄ )
=
⁄⁄* +%
idMaestroCaracteristica
⁄⁄, C
;
⁄⁄C D
caracteristica
€€ 
.
€€ 
codigo
€€ %
=
€€& '
codigo
€€( .
;
€€. /
caracteristica
‹‹ 
.
‹‹ 
nombre
‹‹ %
=
‹‹& '
nombre
‹‹( .
;
‹‹. /
caracteristica
›› 
.
›› 
valor
›› $
=
››% &
descripcion
››' 2
;
››2 3
caracteristica
ﬁﬁ 
.
ﬁﬁ 

es_vigente
ﬁﬁ )
=
ﬁﬁ* +
	esVigente
ﬁﬁ, 5
;
ﬁﬁ5 6
if
ﬂﬂ 
(
ﬂﬂ 
valores
ﬂﬂ 
.
ﬂﬂ 
Count
ﬂﬂ !
>
ﬂﬂ" #
$num
ﬂﬂ$ %
)
ﬂﬂ% &
{
‡‡ 
foreach
·· 
(
·· 
var
··  
item
··! %
in
··& (
valores
··) 0
)
··0 1
{
‚‚ 
caracteristica
„„ &
.
„„& '"
Valor_caracteristica
„„' ;
.
„„; <
Add
„„< ?
(
„„? @
item
„„@ D
)
„„D E
;
„„E F
}
‰‰ 
}
ÂÂ 
return
ÊÊ "
_conceptoRepositorio
ÊÊ +
.
ÊÊ+ ,&
ActualizarCaracteristica
ÊÊ, D
(
ÊÊD E
caracteristica
ÊÊE S
)
ÊÊS T
;
ÊÊT U
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
throw
ÎÎ 
e
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
bool
ÔÔ 5
'ExisteCaracteristicaEnConceptosVigentes
ÔÔ ;
(
ÔÔ; <
int
ÔÔ< ?
idCaracteristica
ÔÔ@ P
)
ÔÔP Q
{
 	
try
ÒÒ 
{
ÚÚ 
var
ÛÛ 
	resultado
ÛÛ 
=
ÛÛ "
_conceptoRepositorio
ÛÛ  4
.
ÛÛ4 57
)ConceptosNegocioVigentesConCaracteristica
ÛÛ5 ^
(
ÛÛ^ _
idCaracteristica
ÛÛ_ o
)
ÛÛo p
.
ÛÛp q
ToList
ÛÛq w
(
ÛÛw x
)
ÛÛx y
;
ÛÛy z
return
ÙÙ 
	resultado
ÙÙ  
.
ÙÙ  !
Count
ÙÙ! &
(
ÙÙ& '
)
ÙÙ' (
>
ÙÙ) *
$num
ÙÙ+ ,
;
ÙÙ, -
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
e
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
public
˚˚ 
bool
˚˚ 4
&ExisteCaracteristicaEnFamiliasVigentes
˚˚ :
(
˚˚: ;
int
˚˚; >
idCaracteristica
˚˚? O
)
˚˚O P
{
¸¸ 	
try
˝˝ 
{
˛˛ 
var
ˇˇ 
	resultado
ˇˇ 
=
ˇˇ "
_conceptoRepositorio
ˇˇ  4
.
ˇˇ4 5/
!FamiliasVigentesConCaracteristica
ˇˇ5 V
(
ˇˇV W
idCaracteristica
ˇˇW g
)
ˇˇg h
.
ˇˇh i
ToList
ˇˇi o
(
ˇˇo p
)
ˇˇp q
;
ˇˇq r
return
ÄÄ 
	resultado
ÄÄ  
.
ÄÄ  !
Count
ÄÄ! &
(
ÄÄ& '
)
ÄÄ' (
>
ÄÄ) *
$num
ÄÄ+ ,
;
ÄÄ, -
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
e
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
àà 
List
àà 
<
àà 
Detalle_maestro
àà #
>
àà# $5
'ObtenerCaracteristicasIncluyendoValores
àà% L
(
ààL M
)
ààM N
{
ââ 	
try
ää 
{
ää 
return
ää !
_maestroRepositorio
ää ,
.
ää, -9
+ObtenerDetallesInclusiveValorCaracteristica
ää- X
(
ääX Y
new
ääY \
int
ää] `
[
ää` a
]
ääa b
{
ääc d
MaestroSettings
ääe t
.
äät u
Default
ääu |
.
ää| }.
IdMaestroCaracteristicaConceptoää} ú
,ääú ù
MaestroSettingsääû ≠
.ää≠ Æ
DefaultääÆ µ
.ääµ ∂5
%IdMaestroCaracteristicaPropiaConceptoää∂ €
}ää‹ ›
)ää› ﬁ
.ääﬁ ﬂ
ToListääﬂ Â
(ääÂ Ê
)ääÊ Á
;ääÁ Ë
}ääÈ Í
catch
ãã 
(
ãã 
	Exception
ãã 
e
ãã 
)
ãã 
{
ãã  !
throw
ãã" '
e
ãã( )
;
ãã) *
}
ãã+ ,
}
åå 	
public
éé 
List
éé 
<
éé 
Detalle_maestro
éé #
>
éé# $=
/ObtenerCaracteristicasVigentesIncluyendoValores
éé% T
(
ééT U
)
ééU V
{
èè 	
try
êê 
{
êê 
return
êê !
_maestroRepositorio
êê ,
.
êê, -A
3ObtenerDetallesVigentesInclusiveValorCaracteristica
êê- `
(
êê` a
new
êêa d
int
êêe h
[
êêh i
]
êêi j
{
êêk l
MaestroSettings
êêm |
.
êê| }
Defaultêê} Ñ
.êêÑ Ö/
IdMaestroCaracteristicaConceptoêêÖ §
,êê§ •
MaestroSettingsêê¶ µ
.êêµ ∂
Defaultêê∂ Ω
.êêΩ æ5
%IdMaestroCaracteristicaPropiaConceptoêêæ „
}êê‰ Â
)êêÂ Ê
.êêÊ Á
ToListêêÁ Ì
(êêÌ Ó
)êêÓ Ô
;êêÔ 
}êêÒ Ú
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
ëë  !
throw
ëë" '
e
ëë( )
;
ëë) *
}
ëë+ ,
}
íí 	
public
ôô 
OperationResult
ôô (
GuardarValorCarcateristica
ôô 9
(
ôô9 :
int
ôô: =
idCaracteristica
ôô> N
,
ôôN O
string
ôôP V!
valorCaracteristica
ôôW j
)
ôôj k
{
öö 	
try
õõ 
{
úú "
Valor_caracteristica
ùù $
valor
ùù% *
=
ùù+ ,
new
ùù- 0"
Valor_caracteristica
ùù1 E
(
ùùE F
)
ùùF G
;
ùùG H
valor
ûû 
.
ûû 
id_caracteristica
ûû '
=
ûû( )
idCaracteristica
ûû* :
;
ûû: ;
valor
üü 
.
üü 
valor
üü 
=
üü !
valorCaracteristica
üü 1
;
üü1 2
return
°° "
_conceptoRepositorio
°° +
.
°°+ ,(
GuardarValorCaracteristica
°°, F
(
°°F G
valor
°°G L
)
°°L M
;
°°M N
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
e
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
©© 
OperationResult
©© +
ActualizarValorCaracteristica
©© <
(
©©< =
int
©©= @#
idValorCaracteristica
©©A V
,
©©V W
int
©©X [
idCaracteristica
©©\ l
,
©©l m
string
©©n t"
valorCaracteristica©©u à
)©©à â
{
™™ 	
try
´´ 
{
¨¨ "
Valor_caracteristica
≠≠ $
valor
≠≠% *
=
≠≠+ ,
new
≠≠- 0"
Valor_caracteristica
≠≠1 E
(
≠≠E F
)
≠≠F G
;
≠≠G H
valor
ÆÆ 
.
ÆÆ 
id_caracteristica
ÆÆ '
=
ÆÆ( )
idCaracteristica
ÆÆ* :
;
ÆÆ: ;
valor
ØØ 
.
ØØ 
valor
ØØ 
=
ØØ !
valorCaracteristica
ØØ 1
;
ØØ1 2
valor
∞∞ 
.
∞∞ 
id
∞∞ 
=
∞∞ #
idValorCaracteristica
∞∞ 0
;
∞∞0 1
return
≤≤ "
_conceptoRepositorio
≤≤ +
.
≤≤+ ,+
ActualizarValorCaracteristica
≤≤, I
(
≤≤I J
valor
≤≤J O
)
≤≤O P
;
≤≤P Q
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
µµ 
throw
∂∂ 
e
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
∫∫ "
Valor_caracteristica
∫∫ #(
ObtenerValorCaracteristica
∫∫$ >
(
∫∫> ?
int
∫∫? B#
idValorCaracteristica
∫∫C X
)
∫∫X Y
{
ªª 	
try
ºº 
{
ΩΩ 
return
ææ "
_conceptoRepositorio
ææ +
.
ææ+ ,(
ObtenerValorCaracteristica
ææ, F
(
ææF G#
idValorCaracteristica
ææG \
)
ææ\ ]
;
ææ] ^
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
e
¿¿ 
)
¿¿ 
{
¡¡ 
throw
¬¬ 
new
¬¬ 
DatosException
¬¬ (
(
¬¬( )
$str
¬¬) S
,
¬¬S T
e
¬¬U V
)
¬¬V W
;
¬¬W X
}
√√ 
}
ƒƒ 	
public
∆∆ 
List
∆∆ 
<
∆∆ "
Valor_caracteristica
∆∆ (
>
∆∆( ),
ObtenerValoresDeCaracteristica
∆∆* H
(
∆∆H I
int
∆∆I L
idCaracteristica
∆∆M ]
)
∆∆] ^
{
«« 	
try
»» 
{
…… 
return
   "
_conceptoRepositorio
   +
.
  + ,,
ObtenerValoresDeCaracteristica
  , J
(
  J K
idCaracteristica
  K [
)
  [ \
.
  \ ]
ToList
  ] c
(
  c d
)
  d e
;
  e f
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
e
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
public
’’ 
OperationResult
’’ 
guardarProducto
’’ .
(
’’. /
string
’’/ 5
codigo
’’6 <
,
’’< =
string
’’> D
nombre
’’E K
,
’’K L
string
’’M S
propiedades
’’T _
)
’’_ `
{
÷÷ 	
try
◊◊ 
{
ÿÿ 
Concepto_negocio
ŸŸ  
nuevoProducto
ŸŸ! .
=
ŸŸ/ 0
new
ŸŸ1 4
Concepto_negocio
ŸŸ5 E
(
ŸŸE F
)
ŸŸF G
;
ŸŸG H
nuevoProducto
€€ 
.
€€ 
codigo
€€ $
=
€€% &
codigo
€€' -
;
€€- .
nuevoProducto
‹‹ 
.
‹‹ 
nombre
‹‹ $
=
‹‹% &
nombre
‹‹' -
;
‹‹- .
nuevoProducto
›› 
.
›› 
propiedades
›› )
=
››* +
propiedades
››, 7
;
››7 8
return
ﬂﬂ "
_conceptoRepositorio
ﬂﬂ +
.
ﬂﬂ+ ,$
CrearConceptoDeNegocio
ﬂﬂ, B
(
ﬂﬂB C
nuevoProducto
ﬂﬂC P
)
ﬂﬂP Q
;
ﬂﬂQ R
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
e
·· 
)
·· 
{
‚‚ 
throw
„„ 
e
„„ 
;
„„ 
}
‰‰ 
}
ÂÂ 	
public
ÁÁ 
ConceptoDeNegocio
ÁÁ  
obtenerProducto
ÁÁ! 0
(
ÁÁ0 1
int
ÁÁ1 4
id
ÁÁ5 7
)
ÁÁ7 8
{
ËË 	
try
ÈÈ 
{
ÍÍ 
ConceptoDeNegocio
ÎÎ !
producto
ÎÎ" *
=
ÎÎ+ ,
new
ÎÎ- 0
ConceptoDeNegocio
ÎÎ1 B
(
ÎÎB C"
_conceptoRepositorio
ÎÎC W
.
ÎÎW Xw
hObtenerConceptoNegocioIncluyendoValorCaracteristicaConceptoNegocioYDetalleMaestroYCaracteristicaConceptoÎÎX ¿
(ÎÎ¿ ¡
idÎÎ¡ √
)ÎÎ√ ƒ
)ÎÎƒ ≈
;ÎÎ≈ ∆
return
ÏÏ 
producto
ÏÏ 
;
ÏÏ  
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
e
ÓÓ 
)
ÓÓ 
{
ÔÔ 
throw
 
e
 
;
 
}
ÒÒ 
}
ÚÚ 	
public
ÙÙ 
List
ÙÙ 
<
ÙÙ 
Stock
ÙÙ 
>
ÙÙ  
ObtenerExistencias
ÙÙ -
(
ÙÙ- .
int
ÙÙ. 1
	idAlmacen
ÙÙ2 ;
)
ÙÙ; <
{
ıı 	
try
ˆˆ 
{
˜˜ 
return
¯¯ 
Stock
¯¯ 
.
¯¯ 
Convert_
¯¯ %
(
¯¯% &"
_conceptoRepositorio
¯¯& :
.
¯¯: ;F
8ObtenerExistenciasIncluyendoConceptoNegocioYActorNegocio
¯¯; s
(
¯¯s t
	idAlmacen
¯¯t }
)
¯¯} ~
.
¯¯~ 
ToList¯¯ Ö
(¯¯Ö Ü
)¯¯Ü á
)¯¯á à
;¯¯à â
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
e
¸¸ 
;
¸¸ 
}
˝˝ 
}
ˇˇ 	
public
ÅÅ 
List
ÅÅ 
<
ÅÅ 
ConceptoDeNegocio
ÅÅ %
>
ÅÅ% &5
'ObtenerMercaderiasIncluyendoExistencias
ÅÅ' N
(
ÅÅN O
)
ÅÅO P
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
return
ÖÖ 
ConceptoDeNegocio
ÖÖ (
.
ÖÖ( )
Convert_
ÖÖ) 1
(
ÖÖ1 2"
_conceptoRepositorio
ÖÖ2 F
.
ÖÖF GA
3ObtenerConceptosDeNegocioPorRolIncluyendoExistencia
ÖÖG z
(
ÖÖz {
ConceptoSettingsÖÖ{ ã
.ÖÖã å
DefaultÖÖå ì
.ÖÖì î
IdRolMercaderiaÖÖî £
)ÖÖ£ §
.ÖÖ§ •
ToListÖÖ• ´
(ÖÖ´ ¨
)ÖÖ¨ ≠
)ÖÖ≠ Æ
;ÖÖÆ Ø
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
e
ââ 
;
ââ 
}
ää 
}
ãã 	
public
çç 
List
çç 
<
çç #
Reporte_Stock_General
çç )
>
çç) *(
ObtenerReporteStockGeneral
çç+ E
(
ççE F
int
ççF I
[
ççI J
]
ççJ K
idsEntidadInterna
ççL ]
)
çç] ^
{
éé 	
try
èè 
{
êê 
return
ëë "
_conceptoRepositorio
ëë +
.
ëë+ ,(
ObtenerReporteStockGeneral
ëë, F
(
ëëF G
idsEntidadInterna
ëëG X
,
ëëX Y!
TransaccionSettings
ëëZ m
.
ëëm n
Default
ëën u
.
ëëu v0
!IdTipoTransaccionInventarioActualëëv ó
,ëëó ò
MaestroSettingsëëô ®
.ëë® ©
Defaultëë© ∞
.ëë∞ ±0
 IdDetalleMaestroEstadoConfirmadoëë± —
)ëë— “
.
íí* +
ToList
íí+ 1
(
íí1 2
)
íí2 3
;
íí3 4
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
e
ññ 
;
ññ 
}
óó 
}
òò 	
public
úú 
List
úú 
<
úú 
ConceptoDeNegocio
úú %
>
úú% &7
)ObtenerMercaderiasIncluyendoStockYPrecios
úú' P
(
úúP Q
)
úúQ R
{
ùù 	
try
ûû 
{
üü 
return
†† 
ConceptoDeNegocio
†† (
.
††( )
Convert_
††) 1
(
††1 2"
_conceptoRepositorio
††2 F
.
††F GK
<ObtenerConceptosDeNegocioPorRolIncluyendoExistenciasYPrecios††G É
(††É Ñ 
ConceptoSettings††Ñ î
.††î ï
Default††ï ú
.††ú ù
IdRolMercaderia††ù ¨
)††¨ ≠
.††≠ Æ
ToList††Æ ¥
(††¥ µ
)††µ ∂
)††∂ ∑
;††∑ ∏
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
e
¢¢ 
)
¢¢ 
{
££ 
throw
§§ 
e
§§ 
;
§§ 
}
•• 
}
ßß 	
public
©© 
List
©© 
<
©© 
ConceptoDeNegocio
©© %
>
©©% &)
obtenerMercaderiasConPrecio
©©' B
(
©©B C
)
©©C D
{
™™ 	
try
´´ 
{
¨¨ 
List
≠≠ 
<
≠≠ 
ConceptoDeNegocio
≠≠ &
>
≠≠& '
	productos
≠≠( 1
=
≠≠2 3
ConceptoDeNegocio
≠≠4 E
.
≠≠E F
Convert_
≠≠F N
(
≠≠N O"
_conceptoRepositorio
≠≠O c
.
≠≠c dg
XObtenerConceptosDeNegocioPorRolIncluyendoExistenciasYPreciosConUnPrecioVigenteComoMinimo≠≠d º
(≠≠º Ω 
ConceptoSettings≠≠Ω Õ
.≠≠Õ Œ
Default≠≠Œ ’
.≠≠’ ÷
IdRolMercaderia≠≠÷ Â
)≠≠Â Ê
.≠≠Ê Á
ToList≠≠Á Ì
(≠≠Ì Ó
)≠≠Ó Ô
)≠≠Ô 
;≠≠ Ò
return
ÆÆ 
	productos
ÆÆ  
;
ÆÆ  !
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
e
∞∞ 
)
∞∞ 
{
±± 
throw
≤≤ 
e
≤≤ 
;
≤≤ 
}
≥≥ 
}
¥¥ 	
public
∂∂ 
ConceptoDeNegocio
∂∂  
ObtenerMercaderia
∂∂! 2
(
∂∂2 3
int
∂∂3 6
idMercaderia
∂∂7 C
)
∂∂C D
{
∑∑ 	
try
∏∏ 
{
ππ 
ConceptoDeNegocio
∫∫ !
producto
∫∫" *
=
∫∫+ ,
new
∫∫- 0
ConceptoDeNegocio
∫∫1 B
(
∫∫B C"
_conceptoRepositorio
∫∫C W
.
∫∫W X?
0ObtenerConceptoDeNegocioPorRolYIdConceptoNegocio∫∫X à
(∫∫à â 
ConceptoSettings∫∫â ô
.∫∫ô ö
Default∫∫ö °
.∫∫° ¢
IdRolMercaderia∫∫¢ ±
,∫∫± ≤
idMercaderia∫∫≥ ø
)∫∫ø ¿
)∫∫¿ ¡
;∫∫¡ ¬
return
ªª 
producto
ªª 
;
ªª  
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
e
ΩΩ 
)
ΩΩ 
{
ææ 
throw
øø 
e
øø 
;
øø 
}
¿¿ 
}
¡¡ 	
public
√√ 
ConceptoDeNegocio
√√  
ObtenerConcepto
√√! 0
(
√√0 1
int
√√1 4

idConcepto
√√5 ?
)
√√? @
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
ConceptoDeNegocio
«« !
concepto
««" *
=
««+ ,
new
««- 0
ConceptoDeNegocio
««1 B
(
««B C"
_conceptoRepositorio
««C W
.
««W X;
,ObtenerConceptoDeNegocioPorIdConceptoNegocio««X Ñ
(««Ñ Ö

idConcepto««Ö è
)««è ê
)««ê ë
;««ë í
return
»» 
concepto
»» 
;
»»  
}
…… 
catch
   
(
   
	Exception
   
e
   
)
   
{
ÀÀ 
throw
ÃÃ 
e
ÃÃ 
;
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
public
““ 
List
““ 
<
““ 
ConceptoDeNegocio
““ %
>
““% & 
obtenerMercaderias
““' 9
(
““9 :
)
““: ;
{
”” 	
try
‘‘ 
{
’’ 
List
÷÷ 
<
÷÷ 
ConceptoDeNegocio
÷÷ &
>
÷÷& '
	productos
÷÷( 1
=
÷÷2 3
ConceptoDeNegocio
÷÷4 E
.
÷÷E F
Convert_
÷÷F N
(
÷÷N O"
_conceptoRepositorio
÷÷O c
.
÷÷c d.
ObtenerConceptosDeNegocioPorRol÷÷d É
(÷÷É Ñ 
ConceptoSettings÷÷Ñ î
.÷÷î ï
Default÷÷ï ú
.÷÷ú ù
IdRolMercaderia÷÷ù ¨
)÷÷¨ ≠
.÷÷≠ Æ
ToList÷÷Æ ¥
(÷÷¥ µ
)÷÷µ ∂
)÷÷∂ ∑
;÷÷∑ ∏
return
◊◊ 
	productos
◊◊  
;
◊◊  !
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
e
€€ 
;
€€ 
}
‹‹ 
}
›› 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
ConceptoDeNegocio
ﬂﬂ %
>
ﬂﬂ% &1
#ObtenerMercaderiasPorConceptoBasico
ﬂﬂ' J
(
ﬂﬂJ K
int
ﬂﬂK N
idConceptoBasico
ﬂﬂO _
)
ﬂﬂ_ `
{
‡‡ 	
try
·· 
{
‚‚ 
var
„„ 

resultados
„„ 
=
„„  "
_conceptoRepositorio
„„! 5
.
„„5 6?
1ObtenerConceptosDeNegocioPorRolYPorConceptoBasico
„„6 g
(
„„g h
ConceptoSettings
„„h x
.
„„x y
Default„„y Ä
.„„Ä Å
IdRolMercaderia„„Å ê
,„„ê ë 
idConceptoBasico„„í ¢
)„„¢ £
.„„£ §
ToList„„§ ™
(„„™ ´
)„„´ ¨
;„„¨ ≠
List
‰‰ 
<
‰‰ 
ConceptoDeNegocio
‰‰ &
>
‰‰& '
	productos
‰‰( 1
=
‰‰2 3
ConceptoDeNegocio
‰‰4 E
.
‰‰E F
Convert_
‰‰F N
(
‰‰N O

resultados
‰‰O Y
)
‰‰Y Z
;
‰‰Z [
return
ÂÂ 
	productos
ÂÂ  
;
ÂÂ  !
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
e
ÁÁ 
)
ÁÁ 
{
ËË 
throw
ÈÈ 
e
ÈÈ 
;
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
ConceptoDeNegocio
ÌÌ  /
!ObtenerConceptoDeNegocioPorNombre
ÌÌ! B
(
ÌÌB C
string
ÌÌC I
nombre
ÌÌJ P
)
ÌÌP Q
{
ÓÓ 	
try
ÔÔ 
{
 
var
ÒÒ 
result
ÒÒ 
=
ÒÒ "
_conceptoRepositorio
ÒÒ 1
.
ÒÒ1 2-
ObtenerConceptoNegocioPorNombre
ÒÒ2 Q
(
ÒÒQ R
nombre
ÒÒR X
)
ÒÒX Y
;
ÒÒY Z
return
ÚÚ 
result
ÚÚ 
!=
ÚÚ  
null
ÚÚ! %
?
ÚÚ& '
new
ÚÚ( +
ConceptoDeNegocio
ÚÚ, =
(
ÚÚ= >
result
ÚÚ> D
)
ÚÚD E
:
ÚÚF G
null
ÚÚH L
;
ÚÚL M
}
ÙÙ 
catch
ıı 
(
ıı 
	Exception
ıı 
e
ıı 
)
ıı 
{
ˆˆ 
throw
˜˜ 
new
˜˜ 
LogicaException
˜˜ )
(
˜˜) *
$str
˜˜* [
,
˜˜[ \
e
˜˜] ^
)
˜˜^ _
;
˜˜_ `
}
¯¯ 
}
˘˘ 	
public
˚˚ 
List
˚˚ 
<
˚˚ *
Precio_Compra_Venta_Concepto
˚˚ 0
>
˚˚0 18
*ObtenerPreciosCompraVentaDeConceptoNegocio
˚˚2 \
(
˚˚\ ]
int
˚˚] `!
idConceptoDeNegocio
˚˚a t
)
˚˚t u
{
¸¸ 	
try
˝˝ 
{
˛˛ 
List
ˇˇ 
<
ˇˇ *
Precio_Compra_Venta_Concepto
ˇˇ 1
>
ˇˇ1 2
	resultado
ˇˇ3 <
=
ˇˇ= >"
_conceptoRepositorio
ˇˇ? S
.
ˇˇS T8
*ObtenerPreciosCompraVentaDeConceptoNegocio
ˇˇT ~
(
ˇˇ~ "
idConceptoDeNegocioˇˇ í
)ˇˇí ì
.ˇˇì î
ToListˇˇî ö
(ˇˇö õ
)ˇˇõ ú
;ˇˇú ù
return
ÄÄ 
	resultado
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
e
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
áá 	
public
ââ 
decimal
ââ 3
%ObtenerCostoUnitarioDelIcbperALaFecha
ââ <
(
ââ< =
)
ââ= >
{
ää 	
try
ãã 
{
åå 
DateTime
çç 
fechaActual
çç $
=
çç% &
DateTimeUtil
çç' 3
.
çç3 4
FechaActual
çç4 ?
(
çç? @
)
çç@ A
;
ççA B
return
éé "
_conceptoRepositorio
éé +
.
éé+ ,+
ObtenerPrecioPublicoDelIcbper
éé, I
(
ééI J
fechaActual
ééJ U
)
ééU V
;
ééV W
}
èè 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
throw
íí 
new
íí 
LogicaException
íí )
(
íí) *
$str
íí* e
,
ííe f
e
ííg h
)
ííh i
;
ííi j
}
ìì 
}
îî 	
public
òò 
List
òò 
<
òò 
ConceptoDeNegocio
òò %
>
òò% &H
:ObtenerMercaderiasPorCentroAtencionIncluyendoStockYPrecios
òò' a
(
òòa b
int
òòb e1
"idCentroAtencionQueTieneLosPreciosòòf à
)òòà â
{
ôô 	
try
öö 
{
õõ 
List
úú 
<
úú 
ConceptoDeNegocio
úú &
>
úú& '
	productos
úú( 1
=
úú2 3
ConceptoDeNegocio
úú4 E
.
úúE F
Convert_
úúF N
(
úúN O"
_conceptoRepositorio
úúO c
.
úúc dw
hObtenerConceptosDeNegocioPorRolIncluyendoExistenciasYPreciosConUnPrecioVigenteComoMinimoParaActorNegocioúúd Ã
(úúÃ Õ2
"idCentroAtencionQueTieneLosPreciosúúÕ Ô
,úúÔ  
ConceptoSettingsúúÒ Å
.úúÅ Ç
DefaultúúÇ â
.úúâ ä
IdRolMercaderiaúúä ô
)úúô ö
.úúö õ
ToListúúõ °
(úú° ¢
)úú¢ £
)úú£ §
;úú§ •
return
ùù 
	productos
ùù  
;
ùù  !
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
e
°° 
;
°° 
}
¢¢ 
}
££ 	
[
•• 	
Obsolete
••	 
(
•• 
$str
•• J
)
••J K
]
••K L
public
¶¶ 
List
¶¶ 
<
¶¶ 
ConceptoDeNegocio
¶¶ %
>
¶¶% &7
)ObtenerMercaderiasIncluyendoStockYPrecios
¶¶' P
(
¶¶P Q
int
¶¶Q T
idConceptoBasico
¶¶U e
,
¶¶e f
int
¶¶g j1
"idCentroAtencionQueTieneLosPrecios¶¶k ç
)¶¶ç é
{
ßß 	
try
®® 
{
©© 
return
´´ 
ConceptoDeNegocio
´´ (
.
´´( )
Convert_
´´) 1
(
´´1 2"
_conceptoRepositorio
´´2 F
.
´´F Gv
gObtenerConceptosDeNegocioPorRolIncluyendoExistenciasYPreciosConUnPrecioVigenteComoMinimoPorActorNegocio´´G Æ
(´´Æ Ø0
"idCentroAtencionQueTieneLosPrecios
¨¨ 6
,
¨¨6 7
ConceptoSettings
¨¨8 H
.
¨¨H I
Default
¨¨I P
.
¨¨P Q
IdRolMercaderia
¨¨Q `
,
¨¨` a
idConceptoBasico
¨¨b r
)
¨¨r s
.
¨¨s t
ToList
¨¨t z
(
¨¨z {
)
¨¨{ |
)
¨¨| }
;
¨¨} ~
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ØØ 
throw
∞∞ 
new
∞∞ 
LogicaException
∞∞ )
(
∞∞) *
$str
∞∞* G
,
∞∞G H
e
∞∞I J
)
∞∞J K
;
∞∞K L
}
±± 
}
≤≤ 	
public
¥¥ 
List
¥¥ 
<
¥¥ 
ConceptoDeNegocio
¥¥ %
>
¥¥% &H
:ObtenerMercaderiasPorConceptoBasicoIncluyendoStockYPrecios
¥¥' a
(
¥¥a b
int
¥¥b e
idConceptoBasico
¥¥f v
)
¥¥v w
{
µµ 	
try
∂∂ 
{
∑∑ 
return
∏∏ 
ConceptoDeNegocio
∏∏ (
.
∏∏( )
Convert_
∏∏) 1
(
∏∏1 2"
_conceptoRepositorio
∏∏2 F
.
∏∏F GK
<ObtenerConceptosDeNegocioPorRolIncluyendoExistenciasYPrecios∏∏G É
(∏∏É Ñ 
ConceptoSettings∏∏Ñ î
.∏∏î ï
Default∏∏ï ú
.∏∏ú ù
IdRolMercaderia∏∏ù ¨
,∏∏¨ ≠ 
idConceptoBasico∏∏Æ æ
)∏∏æ ø
.∏∏ø ¿
ToList∏∏¿ ∆
(∏∏∆ «
)∏∏« »
)∏∏» …
;∏∏…  
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
ªª 
throw
ºº 
e
ºº 
;
ºº 
}
ΩΩ 
}
ææ 	
public
¿¿ 
List
¿¿ 
<
¿¿ 
ConceptoDeNegocio
¿¿ %
>
¿¿% &W
IObtenerMercaderiasPorConceptoBasicoIncluyendoStockPreciosYCaracteristicas
¿¿' p
(
¿¿p q
int
¿¿q t
idConceptoBasico¿¿u Ö
)¿¿Ö Ü
{
¡¡ 	
try
¬¬ 
{
√√ 
return
ƒƒ 
ConceptoDeNegocio
ƒƒ (
.
ƒƒ( )
Convert_
ƒƒ) 1
(
ƒƒ1 2"
_conceptoRepositorio
ƒƒ2 F
.
ƒƒF G\
MObtenerConceptosDeNegocioPorRolIncluyendoExistenciasPreciosYDetallesDeMaestroƒƒG î
(ƒƒî ï 
ConceptoSettingsƒƒï •
.ƒƒ• ¶
Defaultƒƒ¶ ≠
.ƒƒ≠ Æ
IdRolMercaderiaƒƒÆ Ω
,ƒƒΩ æ 
idConceptoBasicoƒƒø œ
)ƒƒœ –
.ƒƒ– —
ToListƒƒ— ◊
(ƒƒ◊ ÿ
)ƒƒÿ Ÿ
)ƒƒŸ ⁄
;ƒƒ⁄ €
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
e
»» 
;
»» 
}
…… 
}
   	
public
ÃÃ 
List
ÃÃ 
<
ÃÃ 
ConceptoDeNegocio
ÃÃ %
>
ÃÃ% &h
YObtenerMercaderiasPorConceptoBasicoYCaracteristicasIncluyendoStockPreciosYCaracteristicasÃÃ' Ä
(ÃÃÄ Å
intÃÃÅ Ñ 
idConceptoBasicoÃÃÖ ï
,ÃÃï ñ
intÃÃó ö
[ÃÃö õ
]ÃÃõ ú+
idsValoresDeCaracteristicasÃÃù ∏
)ÃÃ∏ π
{
ÕÕ 	
try
ŒŒ 
{
œœ 
return
–– 
ConceptoDeNegocio
–– (
.
––( )
Convert_
––) 1
(
––1 2"
_conceptoRepositorio
––2 F
.
––F G\
MObtenerConceptosDeNegocioPorRolIncluyendoExistenciasPreciosYDetallesDeMaestro––G î
(––î ï 
ConceptoSettings––ï •
.––• ¶
Default––¶ ≠
.––≠ Æ
IdRolMercaderia––Æ Ω
,––Ω æ 
idConceptoBasico––ø œ
,––œ –+
idsValoresDeCaracteristicas––— Ï
)––Ï Ì
.––Ì Ó
ToList––Ó Ù
(––Ù ı
)––ı ˆ
)––ˆ ˜
;––˜ ¯
}
—— 
catch
““ 
(
““ 
	Exception
““ 
e
““ 
)
““ 
{
”” 
throw
‘‘ 
new
‘‘ 
LogicaException
‘‘ )
(
‘‘) *
$str
‘‘* k
,
‘‘k l
e
‘‘m n
)
‘‘n o
;
‘‘o p
}
’’ 
}
÷÷ 	
public
ÿÿ 
List
ÿÿ 
<
ÿÿ 
ConceptoDeNegocio
ÿÿ %
>
ÿÿ% &X
JObtenerMercaderiasPorCaracteristicasIncluyendoStockPreciosYCaracteristicas
ÿÿ' q
(
ÿÿq r
int
ÿÿr u
[
ÿÿu v
]
ÿÿv w*
idsValoresDeCaracteristicasÿÿx ì
)ÿÿì î
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
return
‹‹ 
ConceptoDeNegocio
‹‹ (
.
‹‹( )
Convert_
‹‹) 1
(
‹‹1 2"
_conceptoRepositorio
‹‹2 F
.
‹‹F G\
MObtenerConceptosDeNegocioPorRolIncluyendoExistenciasPreciosYDetallesDeMaestro‹‹G î
(‹‹î ï 
ConceptoSettings‹‹ï •
.‹‹• ¶
Default‹‹¶ ≠
.‹‹≠ Æ
IdRolMercaderia‹‹Æ Ω
,‹‹Ω æ+
idsValoresDeCaracteristicas‹‹ø ⁄
)‹‹⁄ €
.‹‹€ ‹
ToList‹‹‹ ‚
(‹‹‚ „
)‹‹„ ‰
)‹‹‰ Â
;‹‹Â Ê
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ 
e
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
throw
‡‡ 
new
‡‡ 
LogicaException
‡‡ )
(
‡‡) *
$str
‡‡* Z
,
‡‡Z [
e
‡‡\ ]
)
‡‡] ^
;
‡‡^ _
}
·· 
}
‚‚ 	
[
‰‰ 	
Obsolete
‰‰	 
(
‰‰ 
$str
‰‰ ?
)
‰‰? @
]
‰‰@ A
public
ÂÂ 
ConceptoDeNegocio
ÂÂ  Y
KObtenerMercaderiaPorCodigoBarraIncluyendoStockYPreciosConUnPrecioComoMinimo
ÂÂ! l
(
ÂÂl m
int
ÂÂm p
idCentroAtencionÂÂq Å
,ÂÂÅ Ç
stringÂÂÉ â
codigoBarraÂÂä ï
)ÂÂï ñ
{
ÊÊ 	
try
ÁÁ 
{
ËË 
int
ÈÈ 0
"idCentroAtencionQueTieneLosPrecios
ÈÈ 6
=
ÈÈ7 8
idCentroAtencion
ÈÈ9 I
;
ÈÈI J
var
ÍÍ 
	resultado
ÍÍ 
=
ÍÍ "
_conceptoRepositorio
ÍÍ  4
.
ÍÍ4 5~
oObtenerConceptoDeNegocioPorCodigoBarraIncluyendoExistenciasYPreciosConUnPrecioVigenteComoMinimoParaActorNegocioÍÍ5 §
(ÍÍ§ •2
"idCentroAtencionQueTieneLosPreciosÍÍ• «
,ÍÍ« » 
ConceptoSettingsÍÍ… Ÿ
.ÍÍŸ ⁄
DefaultÍÍ⁄ ·
.ÍÍ· ‚
IdRolMercaderiaÍÍ‚ Ò
,ÍÍÒ Ú
codigoBarraÍÍÛ ˛
)ÍÍ˛ ˇ
;ÍÍˇ Ä
return
ÎÎ 
	resultado
ÎÎ  
!=
ÎÎ! #
null
ÎÎ$ (
?
ÎÎ) *
new
ÎÎ+ .
ConceptoDeNegocio
ÎÎ/ @
(
ÎÎ@ A
	resultado
ÎÎA J
)
ÎÎJ K
:
ÎÎL M
null
ÎÎN R
;
ÎÎR S
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* Y
,
ÔÔY Z
e
ÔÔ[ \
)
ÔÔ\ ]
;
ÔÔ] ^
}
 
}
ÒÒ 	
public
ÛÛ 
ConceptoDeNegocio
ÛÛ  D
6ObtenerMercaderiaPorCodigoBarraIncluyendoStockYPrecios
ÛÛ! W
(
ÛÛW X
string
ÛÛX ^
codigoBarra
ÛÛ_ j
)
ÛÛj k
{
ÙÙ 	
try
ıı 
{
ˆˆ 
var
˜˜ 
	resultado
˜˜ 
=
˜˜ "
_conceptoRepositorio
˜˜  4
.
˜˜4 59
+ObtenerConceptosDeNegocioPorRolYCodigoBarra
˜˜5 `
(
˜˜` a
ConceptoSettings
˜˜a q
.
˜˜q r
Default
˜˜r y
.
˜˜y z
IdRolMercaderia˜˜z â
,˜˜â ä
codigoBarra˜˜ã ñ
)˜˜ñ ó
;˜˜ó ò
if
¯¯ 
(
¯¯ 
	resultado
¯¯ 
==
¯¯  
null
¯¯! %
)
¯¯% &
{
˘˘ 
throw
˙˙ 
new
˙˙ "
AdvertenciaException
˙˙ 2
(
˙˙2 3
$str
˙˙3 O
)
˙˙O P
;
˙˙P Q
}
˚˚ 
return
¸¸ 
new
¸¸ 
ConceptoDeNegocio
¸¸ ,
(
¸¸, -
	resultado
¸¸- 6
)
¸¸6 7
;
¸¸7 8
}
˝˝ 
catch
˛˛ 
(
˛˛ "
AdvertenciaException
˛˛ '
e
˛˛( )
)
˛˛) *
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ "
AdvertenciaException
ÄÄ .
(
ÄÄ. /
e
ÄÄ/ 0
.
ÄÄ0 1
Message
ÄÄ1 8
)
ÄÄ8 9
;
ÄÄ9 :
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
LogicaException
ÑÑ )
(
ÑÑ) *
$str
ÑÑ* Y
,
ÑÑY Z
e
ÑÑ[ \
)
ÑÑ\ ]
;
ÑÑ] ^
}
ÖÖ 
}
ÜÜ 	
public
àà 
List
àà 
<
àà 
ConceptoDeNegocio
àà %
>
àà% &"
obtenerSubContenidos
àà' ;
(
àà; <
int
àà< ?
IdModelo
àà@ H
)
ààH I
{
ââ 	
try
ää 
{
ãã 
return
åå 
null
åå 
;
åå 
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
e
êê 
;
êê 
}
ëë 
}
íí 	
public
îî 
OperationResult
îî 
GuardarProducto
îî .
(
îî. /
string
îî/ 5
codigoBarra
îî6 A
,
îîA B
string
îîC I
nombre
îîJ P
,
îîP Q
string
îîR X
codigo
îîY _
,
îî_ `
string
îîa g
codigoDigemid
îîh u
,
îîu v
string
îîw }
sufijoîî~ Ñ
,îîÑ Ö
intîîÜ â 
idConceptoBasicoîîä ö
,îîö õ
boolîîú †
esBienîî° ß
,îîß ®
intîî© ¨#
idUnidadDeMedidaComîî≠ ¿
,îî¿ ¡
intîî¬ ≈#
idUnidadDeMedidaRefîî∆ Ÿ
,îîŸ ⁄
intîî€ ﬁ
[îîﬁ ﬂ
]îîﬂ ‡!
idCaracteristicasîî· Ú
,îîÚ Û
intîîÙ ˜
[îî˜ ¯
]îî¯ ˘"
modulosAdicionalesîî˙ å
,îîå ç
intîîé ë
idPresentacionîîí †
,îî† °
decimalîî¢ ©$
cantidadPresentacionîî™ æ
,îîæ ø
intîî¿ √#
idUnidadDeMedidaPreîîƒ ◊
,îî◊ ÿ
intîîŸ ‹
?îî‹ ›*
idPresentacionSubContenidoîîﬁ ¯
,îî¯ ˘
byteîî˙ ˛
[îî˛ ˇ
]îîˇ Ä
fotoîîÅ Ö
,îîÖ Ü
boolîîá ã
hayFotoîîå ì
,îîì î
Listîîï ô
<îîô ö,
Precio_Compra_Venta_Conceptoîîö ∂
>îî∂ ∑
preciosîî∏ ø
,îîø ¿
decimalîî¡ »
?îî» …
stockMinimoîî  ’
,îî’ ÷
intîî◊ ⁄

idEmpleadoîî€ Â
,îîÂ Ê
intîîÁ Í 
idCentroAtencionîîÎ ˚
)îî˚ ¸
{
ïï 	
try
ññ 
{
óó 
int
òò 
idRol
òò 
=
òò 
ConceptoSettings
òò ,
.
òò, -
Default
òò- 4
.
òò4 5
IdRolMercaderia
òò5 D
;
òòD E
if
ôô 
(
ôô "
_conceptoRepositorio
ôô (
.
ôô( )0
"ExisteCodigoBarraEnConceptoVigente
ôô) K
(
ôôK L
idRol
ôôL Q
,
ôôQ R
codigoBarra
ôôS ^
)
ôô^ _
)
ôô_ `
{
öö 
throw
õõ 
new
õõ "
AdvertenciaException
õõ 2
(
õõ2 3
$str
õõ3 c
)
õõc d
;
õõd e
}
úú 
codigoDigemid
ùù 
=
ùù 
(
ùù  !
string
ùù! '
.
ùù' (
IsNullOrEmpty
ùù( 5
(
ùù5 6
codigoDigemid
ùù6 C
)
ùùC D
||
ùùE G
string
ùùH N
.
ùùN O 
IsNullOrWhiteSpace
ùùO a
(
ùùa b
codigoDigemid
ùùb o
)
ùùo p
)
ùùp q
?
ùùr s
$str
ùùt v
:
ùùw x
codigoDigemidùùy Ü
;ùùÜ á
codigo
ûû 
=
ûû 
(
ûû 
string
ûû  
.
ûû  !
IsNullOrEmpty
ûû! .
(
ûû. /
codigo
ûû/ 5
)
ûû5 6
||
ûû7 9
string
ûû: @
.
ûû@ A 
IsNullOrWhiteSpace
ûûA S
(
ûûS T
codigo
ûûT Z
)
ûûZ [
)
ûû[ \
?
ûû] ^
idConceptoBasico
ûû_ o
+
ûûp q
$str
ûûr u
+
ûûv w3
$ObtenerSiguienteCodigoParaMercaderiaûûx ú
(ûûú ù
idRolûûù ¢
,ûû¢ £ 
idConceptoBasicoûû§ ¥
)ûû¥ µ
:ûû∂ ∑
codigoûû∏ æ
;ûûæ ø
Concepto_negocio
††  
producto
††! )
=
††* +
new
††, /
Concepto_negocio
††0 @
(
††@ A
codigo
††A G
,
††G H
codigoBarra
††I T
,
††T U
codigoDigemid
††V c
,
††c d
nombre
††e k
,
††k l
sufijo
††m s
,
††s t
$str
††u w
,
††w x
idConceptoBasico††y â
,††â ä#
idUnidadDeMedidaCom††ã û
,††û ü
idPresentacion††† Æ
,††Æ Ø$
cantidadPresentacion††∞ ƒ
,††ƒ ≈#
idUnidadDeMedidaPre††∆ Ÿ
,††Ÿ ⁄*
idPresentacionSubContenido††€ ı
,††ı ˆ
null††˜ ˚
,††˚ ¸
true††˝ Å
,††Å Ç#
idUnidadDeMedidaRef††É ñ
)††ñ ó
;††ó ò
producto
°° 
.
°° 
id
°° 
=
°° 
$num
°° 
;
°°  
producto
¢¢ 
.
¢¢ "
Concepto_negocio_rol
¢¢ -
.
¢¢- .
Add
¢¢. 1
(
¢¢1 2
new
¢¢2 5"
Concepto_negocio_rol
¢¢6 J
(
¢¢J K
)
¢¢K L
{
¢¢M N
id_rol
¢¢O U
=
¢¢V W
idRol
¢¢X ]
}
¢¢^ _
)
¢¢_ `
;
¢¢` a
if
§§ 
(
§§  
modulosAdicionales
§§ &
!=
§§' )
null
§§* .
)
§§. /
{
•• 
foreach
¶¶ 
(
¶¶ 
var
¶¶  
moduloAdicional
¶¶! 0
in
¶¶1 3 
modulosAdicionales
¶¶4 F
)
¶¶F G
{
ßß 
producto
®®  
.
®®  !"
Concepto_negocio_rol
®®! 5
.
®®5 6
Add
®®6 9
(
®®9 :
new
®®: ="
Concepto_negocio_rol
®®> R
(
®®R S
)
®®S T
{
®®U V
id_rol
®®W ]
=
®®^ _
Diccionario
®®` k
.
®®k l&
MapeoModuloVsRolNegocio®®l É
.®®É Ñ
Single®®Ñ ä
(®®ä ã
m®®ã å
=>®®ç è
m®®ê ë
.®®ë í
Key®®í ï
==®®ñ ò
moduloAdicional®®ô ®
)®®® ©
.®®© ™
Value®®™ Ø
}®®∞ ±
)®®± ≤
;®®≤ ≥
}
©© 
}
™™  
ResolverFotografia
´´ "
(
´´" #
hayFoto
´´# *
,
´´* +
producto
´´, 4
,
´´4 5
foto
´´6 :
)
´´: ;
;
´´; <$
AgregarCaracteristicas
¨¨ &
(
¨¨& '
idCaracteristicas
¨¨' 8
,
¨¨8 9
producto
¨¨: B
)
¨¨B C
;
¨¨C D
DateTime
≠≠ 
fechaActual
≠≠ $
=
≠≠% &
DateTimeUtil
≠≠' 3
.
≠≠3 4
FechaActual
≠≠4 ?
(
≠≠? @
)
≠≠@ A
;
≠≠A B
producto
ØØ 
.
ØØ 
stock_minimo
ØØ %
=
ØØ& '
stockMinimo
ØØ( 3
!=
ØØ4 6
null
ØØ7 ;
?
ØØ< =
(
ØØ> ?
decimal
ØØ? F
)
ØØF G
stockMinimo
ØØG R
:
ØØS T
$num
ØØU V
;
ØØV W
producto
±± 
.
±± 
Precio
±± 
=
±±  !
GenerarPrecios
±±" 0
(
±±0 1
precios
±±1 8
,
±±8 9
fechaActual
±±: E
,
±±E F
$num
±±G H
,
±±H I

idEmpleado
±±J T
)
±±T U
;
±±U V,
RegistrarConceptosEnInventario
≥≥ .
(
≥≥. /
esBien
≥≥/ 5
,
≥≥5 6
producto
≥≥7 ?
)
≥≥? @
;
≥≥@ A
return
¥¥ "
_conceptoRepositorio
¥¥ +
.
¥¥+ ,$
CrearConceptoDeNegocio
¥¥, B
(
¥¥B C
producto
¥¥C K
)
¥¥K L
;
¥¥L M
}
µµ 
catch
∂∂ 
(
∂∂ "
AdvertenciaException
∂∂ '
e
∂∂( )
)
∂∂) *
{
∑∑ 
throw
∏∏ 
new
∏∏ "
AdvertenciaException
∏∏ .
(
∏∏. /
e
∏∏/ 0
.
∏∏0 1
Message
∏∏1 8
)
∏∏8 9
;
∏∏9 :
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
ªª 
throw
ºº 
new
ºº 
LogicaException
ºº )
(
ºº) *
$str
ºº* E
,
ººE F
e
ººG H
)
ººH I
;
ººI J
}
ΩΩ 
}
ææ 	
public
¿¿ 
OperationResult
¿¿ %
GuardarConceptoServicio
¿¿ 6
(
¿¿6 7
string
¿¿7 =
nombre
¿¿> D
,
¿¿D E
int
¿¿F I
idConceptoBasico
¿¿J Z
,
¿¿Z [
string
¿¿\ b
sufijo
¿¿c i
,
¿¿i j
int
¿¿k n

idEmpleado
¿¿o y
,
¿¿y z
int
¿¿{ ~
idCentroAtencion¿¿ è
)¿¿è ê
{
¡¡ 	
try
¬¬ 
{
√√ 
if
ƒƒ 
(
ƒƒ +
ExisteNombreConceptoComercial
ƒƒ 1
(
ƒƒ1 2
nombre
ƒƒ2 8
)
ƒƒ8 9
)
ƒƒ9 :
{
≈≈ 
throw
∆∆ 
new
∆∆ !
ControllerException
∆∆ 1
(
∆∆1 2
$str
∆∆2 r
)
∆∆r s
;
∆∆s t
}
«« 
DateTime
»» 
fechaActual
»» $
=
»»% &
DateTimeUtil
»»' 3
.
»»3 4
FechaActual
»»4 ?
(
»»? @
)
»»@ A
;
»»A B
int
…… 
idRol
…… 
=
…… 
ConceptoSettings
…… ,
.
……, -
Default
……- 4
.
……4 5
IdRolMercaderia
……5 D
;
……D E
string
   
codigo
   
=
   
idConceptoBasico
    0
+
  1 2
$str
  3 6
+
  7 82
$ObtenerSiguienteCodigoParaMercaderia
  9 ]
(
  ] ^
idRol
  ^ c
,
  c d
idConceptoBasico
  e u
)
  u v
;
  v w
Concepto_negocio
ÃÃ  
conceptoServicio
ÃÃ! 1
=
ÃÃ2 3
new
ÃÃ4 7
Concepto_negocio
ÃÃ8 H
(
ÃÃH I
codigo
ÃÃI O
,
ÃÃO P
null
ÃÃQ U
,
ÃÃU V
$str
ÃÃW Y
,
ÃÃY Z
nombre
ÃÃ[ a
,
ÃÃa b
sufijo
ÃÃc i
,
ÃÃi j
$str
ÃÃk m
,
ÃÃm n
idConceptoBasico
ÃÃo 
,ÃÃ Ä 
ConceptoSettingsÃÃÅ ë
.ÃÃë í
DefaultÃÃí ô
.ÃÃô ö(
idUnidadMedidaPorDefectoÃÃö ≤
,ÃÃ≤ ≥ 
ConceptoSettingsÃÃ¥ ƒ
.ÃÃƒ ≈
DefaultÃÃ≈ Ã
.ÃÃÃ Õ(
idPresentacionPorDefectoÃÃÕ Â
,ÃÃÂ Ê
$numÃÃÁ Ë
,ÃÃË È 
ConceptoSettingsÃÃÍ ˙
.ÃÃ˙ ˚
DefaultÃÃ˚ Ç
.ÃÃÇ É(
idUnidadMedidaPorDefectoÃÃÉ õ
,ÃÃõ ú
nullÃÃù °
,ÃÃ° ¢
nullÃÃ£ ß
,ÃÃß ®
trueÃÃ© ≠
,ÃÃ≠ Æ 
ConceptoSettingsÃÃØ ø
.ÃÃø ¿
DefaultÃÃ¿ «
.ÃÃ« »(
idUnidadMedidaPorDefectoÃÃ» ‡
)ÃÃ‡ ·
;ÃÃ· ‚
conceptoServicio
œœ  
.
œœ  !"
Concepto_negocio_rol
œœ! 5
.
œœ5 6
Add
œœ6 9
(
œœ9 :
new
œœ: ="
Concepto_negocio_rol
œœ> R
(
œœR S
)
œœS T
{
œœU V
id_rol
œœW ]
=
œœ^ _
idRol
œœ` e
}
œœf g
)
œœg h
;
œœh i
Precio
““ 
precio
““ 
=
““ 
new
““  #
Precio
““$ *
(
““* +
idCentroAtencion
““+ ;
,
““; <
MaestroSettings
““= L
.
““L M
Default
““M T
.
““T U8
*IdDetalleMaestroUnidadDeNegocioTransversal
““U 
,““ Ä
$num““Å Ç
,““Ç É
MaestroSettings““Ñ ì
.““ì î
Default““î õ
.““õ ú,
IdDetalleMaestroTarifaNormal““ú ∏
,““∏ π
MaestroSettings““∫ …
.““…  
Default““  —
.““— “+
IdDetalleMaestroMonedaSoles“““ Ì
,““Ì Ó
fechaActual““Ô ˙
,““˙ ˚
fechaActual““¸ á
.““á à
	AddMonths““à ë
(““ë í 
ConceptoSettings““í ¢
.““¢ £
Default““£ ™
.““™ ´/
PrecioDuracionPorDefectoEnMeses““´  
)““  À
,““À Ã
fechaActual““Õ ÿ
,““ÿ Ÿ
true““⁄ ﬁ
,““ﬁ ﬂ
true““‡ ‰
,““‰ Â
false““Ê Î
,““Î Ï
$num““Ì Ó
,““Ó Ô
$num““ Ò
,““Ò Ú
MaestroSettings““Û Ç
.““Ç É
Default““É ä
.““ä ã0
 IdDetalleMaestroTipoPrecioPrecio““ã ´
,““´ ¨
$str““≠  
,““  À

idEmpleado““Ã ÷
)““÷ ◊
;““◊ ÿ
conceptoServicio
‘‘  
.
‘‘  !
Precio
‘‘! '
.
‘‘' (
Add
‘‘( +
(
‘‘+ ,
precio
‘‘, 2
)
‘‘2 3
;
‘‘3 4
return
’’ "
_conceptoRepositorio
’’ +
.
’’+ ,$
CrearConceptoDeNegocio
’’, B
(
’’B C
conceptoServicio
’’C S
)
’’S T
;
’’T U
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* N
,
⁄⁄N O
e
⁄⁄P Q
)
⁄⁄Q R
;
⁄⁄R S
}
€€ 
}
‹‹ 	
public
ﬁﬁ 
OperationResult
ﬁﬁ !
DarDeBajaMercaderia
ﬁﬁ 2
(
ﬁﬁ2 3
int
ﬁﬁ3 6
idMercaderia
ﬁﬁ7 C
)
ﬁﬁC D
{
ﬂﬂ 	
try
‡‡ 
{
·· 
if
‚‚ 
(
‚‚ "
_conceptoRepositorio
‚‚ (
.
‚‚( )'
TieneStockConceptoNegocio
‚‚) B
(
‚‚B C
idMercaderia
‚‚C O
)
‚‚O P
)
‚‚P Q
{
„„ 
throw
‰‰ 
new
‰‰ 
LogicaException
‰‰ -
(
‰‰- .
$str
‰‰. r
)
‰‰r s
;
‰‰s t
}
ÂÂ 
return
ÊÊ "
_conceptoRepositorio
ÊÊ +
.
ÊÊ+ ,&
DarDeBajaConceptoNegocio
ÊÊ, D
(
ÊÊD E
idMercaderia
ÊÊE Q
)
ÊÊQ R
;
ÊÊR S
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ 
LogicaException
ÍÍ )
(
ÍÍ) *
$str
ÍÍ* K
,
ÍÍK L
e
ÍÍM N
)
ÍÍN O
;
ÍÍO P
}
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
string
ÓÓ 2
$ObtenerSiguienteCodigoParaMercaderia
ÓÓ :
(
ÓÓ: ;
int
ÓÓ; >
idRol
ÓÓ? D
,
ÓÓD E
int
ÓÓF I
idConceptoBasico
ÓÓJ Z
)
ÓÓZ [
{
ÔÔ 	
try
ÒÒ 
{
ÚÚ 
int
ÛÛ 
maximo
ÛÛ 
=
ÛÛ "
_conceptoRepositorio
ÛÛ 1
.
ÛÛ1 24
&ObtenerMaximoCodigoParaConceptoNegocio
ÛÛ2 X
(
ÛÛX Y
idConceptoBasico
ÛÛY i
+
ÛÛj k
$str
ÛÛl o
,
ÛÛo p
idRol
ÛÛq v
,
ÛÛv w
idConceptoBasicoÛÛx à
)ÛÛà â
;ÛÛâ ä
return
ÙÙ 
(
ÙÙ 
maximo
ÙÙ 
+
ÙÙ  
$num
ÙÙ! "
)
ÙÙ" #
.
ÙÙ# $
ToString
ÙÙ$ ,
(
ÙÙ, -
)
ÙÙ- .
;
ÙÙ. /
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
new
¯¯ 
LogicaException
¯¯ )
(
¯¯) *
$str
¯¯* [
,
¯¯[ \
e
¯¯] ^
)
¯¯^ _
;
¯¯_ `
}
˘˘ 
}
˙˙ 	
public
¸¸ 
void
¸¸  
ResolverFotografia
¸¸ &
(
¸¸& '
bool
¸¸' +
hayFoto
¸¸, 3
,
¸¸3 4
Concepto_negocio
¸¸5 E
concepto
¸¸F N
,
¸¸N O
byte
¸¸P T
[
¸¸T U
]
¸¸U V
foto
¸¸W [
)
¸¸[ \
{
˝˝ 	
if
˛˛ 
(
˛˛ 
hayFoto
˛˛ 
)
˛˛ 
{
ˇˇ 
Foto
ÄÄ 

fotografia
ÄÄ 
=
ÄÄ  !
new
ÄÄ" %
Foto
ÄÄ& *
(
ÄÄ* +
)
ÄÄ+ ,
;
ÄÄ, -

fotografia
ÅÅ 
.
ÅÅ 
imagen
ÅÅ !
=
ÅÅ" #
foto
ÅÅ$ (
;
ÅÅ( )
concepto
ÉÉ 
.
ÉÉ 
Foto
ÉÉ 
=
ÉÉ 

fotografia
ÉÉ  *
;
ÉÉ* +
}
ÑÑ 
}
ÖÖ 	
private
åå 
void
åå ,
RegistrarConceptosEnInventario
åå 3
(
åå3 4
bool
åå4 8
esBien
åå9 ?
,
åå? @
Concepto_negocio
ååA Q
concepto
ååR Z
)
ååZ [
{
çç 	
if
éé 
(
éé 
esBien
éé 
)
éé 
{
èè 
var
êê  
inventariosFisicos
êê &
=
êê' (%
_transaccionRepositorio
êê) @
.
êê@ A"
ObtenerTransacciones
êêA U
(
êêU V!
TransaccionSettings
êêV i
.
êêi j
Default
êêj q
.
êêq r0
!IdTipoTransaccionInventarioActualêêr ì
,êêì î
MaestroSettingsêêï §
.êê§ •
Defaultêê• ¨
.êê¨ ≠0
 IdDetalleMaestroEstadoConfirmadoêê≠ Õ
)êêÕ Œ
;êêŒ œ
foreach
íí 
(
íí 
var
íí 
inventarioFisico
íí -
in
íí. 0 
inventariosFisicos
íí1 C
)
ííC D
{
ìì 
concepto
ïï 
.
ïï !
Detalle_transaccion
ïï 0
.
ïï0 1
Add
ïï1 4
(
ïï4 5
new
ïï5 8!
Detalle_transaccion
ïï9 L
(
ïïL M
)
ïïM N
{
ññ 
id_transaccion
óó &
=
óó' (
inventarioFisico
óó) 9
.
óó9 :
id
óó: <
,
óó< =
cantidad
òò  
=
òò! "
$num
òò# $
,
òò$ %!
id_concepto_negocio
ôô +
=
ôô, -
$num
ôô. /
,
ôô/ 0
detalle
öö 
=
öö  !
$str
öö" 5
,
öö5 6
precio_unitario
õõ '
=
õõ( )
$num
õõ* ,
,
õõ, -
total
úú 
=
úú 
$num
úú  "
,
úú" #
	id_precio
ùù !
=
ùù" #
null
ùù$ (
,
ùù( )!
cantidad_secundaria
ûû +
=
ûû, -
$num
ûû. /
,
ûû/ 0%
indicadorMultiproposito
üü /
=
üü0 1
$num
üü2 3
,
üü3 4 
id_cuenta_contable
†† *
=
††+ ,
null
††- 1
,
††1 2
igv
°° 
=
°° 
$num
°°  
,
°°  !
isc
¢¢ 
=
¢¢ 
$num
¢¢  
,
¢¢  !
	descuento
££ !
=
££" #
$num
££$ &
}
§§ 
)
§§ 
;
§§ 
}
•• 
}
¶¶ 
}
ßß 	
public
©© 
OperationResult
©©  
ActualizarProducto
©© 1
(
©©1 2
int
©©2 5
id
©©6 8
,
©©8 9
string
©©: @
codigoBarra
©©A L
,
©©L M
string
©©N T
nombre
©©U [
,
©©[ \
string
©©] c
codigo
©©d j
,
©©j k
string
©©l r
codigoDigemid©©s Ä
,©©Ä Å
string©©Ç à
sufijo©©â è
,©©è ê
int©©ë î 
idConceptoBasico©©ï •
,©©• ¶
bool©©ß ´
esBien©©¨ ≤
,©©≤ ≥
int©©¥ ∑#
idUnidadDeMedidaCom©©∏ À
,©©À Ã
int©©Õ –#
idUnidadDeMedidaRef©©— ‰
,©©‰ Â
int©©Ê È
[©©È Í
]©©Í Î!
idCaracteristicas©©Ï ˝
,©©˝ ˛
int©©ˇ Ç
[©©Ç É
]©©É Ñ"
modulosAdicionales©©Ö ó
,©©ó ò
int©©ô ú
idPresentacion©©ù ´
,©©´ ¨
decimal©©≠ ¥$
cantidadPresentacion©©µ …
,©©…  
int©©À Œ#
idUnidadDeMedidaPre©©œ ‚
,©©‚ „
int©©‰ Á
?©©Á Ë*
idPresentacionSubContenido©©È É
,©©É Ñ
byte©©Ö â
[©©â ä
]©©ä ã
foto©©å ê
,©©ê ë
bool©©í ñ
hayFoto©©ó û
,©©û ü
List©©† §
<©©§ •,
Precio_Compra_Venta_Concepto©©• ¡
>©©¡ ¬
precios©©√  
,©©  À
decimal©©Ã ”
?©©” ‘
stockMinimo©©’ ‡
,©©‡ ·
int©©‚ Â

idEmpleado©©Ê 
,©© Ò
int©©Ú ı 
idCentroAtencion©©ˆ Ü
)©©Ü á
{
™™ 	
try
´´ 
{
¨¨ 
int
≠≠ 
idRol
≠≠ 
=
≠≠ 
ConceptoSettings
≠≠ ,
.
≠≠, -
Default
≠≠- 4
.
≠≠4 5
IdRolMercaderia
≠≠5 D
;
≠≠D E
if
ÆÆ 
(
ÆÆ "
_conceptoRepositorio
ÆÆ (
.
ÆÆ( );
-ExisteCodigoBarraEnConceptoVigenteAlActuaizar
ÆÆ) V
(
ÆÆV W
id
ÆÆW Y
,
ÆÆY Z
idRol
ÆÆ[ `
,
ÆÆ` a
codigoBarra
ÆÆb m
)
ÆÆm n
)
ÆÆn o
{
ØØ 
throw
∞∞ 
new
∞∞ "
AdvertenciaException
∞∞ 2
(
∞∞2 3
$str
∞∞3 c
)
∞∞c d
;
∞∞d e
}
±± 
codigoDigemid
≤≤ 
=
≤≤ 
(
≤≤  !
string
≤≤! '
.
≤≤' (
IsNullOrEmpty
≤≤( 5
(
≤≤5 6
codigoDigemid
≤≤6 C
)
≤≤C D
||
≤≤E G
string
≤≤H N
.
≤≤N O 
IsNullOrWhiteSpace
≤≤O a
(
≤≤a b
codigoDigemid
≤≤b o
)
≤≤o p
)
≤≤p q
?
≤≤r s
$str
≤≤t v
:
≤≤w x
codigoDigemid≤≤y Ü
;≤≤Ü á
codigo
≥≥ 
=
≥≥ 
(
≥≥ 
string
≥≥  
.
≥≥  !
IsNullOrEmpty
≥≥! .
(
≥≥. /
codigo
≥≥/ 5
)
≥≥5 6
||
≥≥7 9
string
≥≥: @
.
≥≥@ A 
IsNullOrWhiteSpace
≥≥A S
(
≥≥S T
codigo
≥≥T Z
)
≥≥Z [
)
≥≥[ \
?
≥≥] ^
idConceptoBasico
≥≥_ o
+
≥≥p q
$str
≥≥r u
+
≥≥v w3
$ObtenerSiguienteCodigoParaMercaderia≥≥x ú
(≥≥ú ù
idRol≥≥ù ¢
,≥≥¢ £ 
idConceptoBasico≥≥§ ¥
)≥≥¥ µ
:≥≥∂ ∑
codigo≥≥∏ æ
;≥≥æ ø
Concepto_negocio
µµ  
producto
µµ! )
=
µµ* +
new
µµ, /
Concepto_negocio
µµ0 @
(
µµ@ A
id
µµA C
,
µµC D
codigo
µµE K
,
µµK L
codigoBarra
µµM X
,
µµX Y
codigoDigemid
µµZ g
,
µµg h
nombre
µµi o
,
µµo p
sufijo
µµq w
,
µµw x
$str
µµy {
,
µµ{ |
idConceptoBasicoµµ} ç
,µµç é#
idUnidadDeMedidaComµµè ¢
,µµ¢ £
idPresentacionµµ§ ≤
,µµ≤ ≥$
cantidadPresentacionµµ¥ »
,µµ» …#
idUnidadDeMedidaPreµµ  ›
,µµ› ﬁ*
idPresentacionSubContenidoµµﬂ ˘
,µµ˘ ˙
nullµµ˚ ˇ
,µµˇ Ä
trueµµÅ Ö
,µµÖ Ü#
idUnidadDeMedidaRefµµá ö
)µµö õ
;µµõ ú
producto
∂∂ 
.
∂∂ "
Concepto_negocio_rol
∂∂ -
.
∂∂- .
Add
∂∂. 1
(
∂∂1 2
new
∂∂2 5"
Concepto_negocio_rol
∂∂6 J
(
∂∂J K
)
∂∂K L
{
∂∂M N!
id_concepto_negocio
∂∂O b
=
∂∂c d
id
∂∂e g
,
∂∂g h
id_rol
∂∂i o
=
∂∂p q
idRol
∂∂r w
}
∂∂x y
)
∂∂y z
;
∂∂z {
if
∏∏ 
(
∏∏  
modulosAdicionales
∏∏ &
!=
∏∏' )
null
∏∏* .
)
∏∏. /
{
ππ 
foreach
∫∫ 
(
∫∫ 
var
∫∫  
moduloAdicional
∫∫! 0
in
∫∫1 3 
modulosAdicionales
∫∫4 F
)
∫∫F G
{
ªª 
producto
ºº  
.
ºº  !"
Concepto_negocio_rol
ºº! 5
.
ºº5 6
Add
ºº6 9
(
ºº9 :
new
ºº: ="
Concepto_negocio_rol
ºº> R
(
ººR S
)
ººS T
{
ººU V!
id_concepto_negocio
ººW j
=
ººk l
id
ººm o
,
ººo p
id_rol
ººq w
=
ººx y
Diccionarioººz Ö
.ººÖ Ü'
MapeoModuloVsRolNegocioººÜ ù
.ººù û
Singleººû §
(ºº§ •
mºº• ¶
=>ººß ©
mºº™ ´
.ºº´ ¨
Keyºº¨ Ø
==ºº∞ ≤
moduloAdicionalºº≥ ¬
)ºº¬ √
.ºº√ ƒ
Valueººƒ …
}ºº  À
)ººÀ Ã
;ººÃ Õ
}
ΩΩ 
}
ææ  
ResolverFotografia
øø "
(
øø" #
hayFoto
øø# *
,
øø* +
producto
øø, 4
,
øø4 5
foto
øø6 :
)
øø: ;
;
øø; <$
AgregarCaracteristicas
¿¿ &
(
¿¿& '
idCaracteristicas
¿¿' 8
,
¿¿8 9
producto
¿¿: B
)
¿¿B C
;
¿¿C D
DateTime
¡¡ 
fechaActual
¡¡ $
=
¡¡% &
DateTimeUtil
¡¡' 3
.
¡¡3 4
FechaActual
¡¡4 ?
(
¡¡? @
)
¡¡@ A
;
¡¡A B
producto
√√ 
.
√√ 
stock_minimo
√√ %
=
√√& '
(
√√( )
decimal
√√) 0
)
√√0 1
(
√√1 2
esBien
√√2 8
&&
√√9 ;
stockMinimo
√√< G
!=
√√H J
null
√√K O
?
√√P Q
stockMinimo
√√R ]
:
√√^ _
$num
√√` a
)
√√a b
;
√√b c
OperationResult
»» 0
"resultActualizacionConceptoNegocio
»»  B
=
»»C D"
_conceptoRepositorio
»»E Y
.
»»Y Z'
ActualizarConceptoNegocio
»»Z s
(
»»s t
producto
»»t |
)
»»| }
;
»»} ~
OperationResult
…… (
resultActualizacionPrecios
……  :
=
……; <
null
……= A
;
……A B
if
   
(
   0
"resultActualizacionConceptoNegocio
   6
.
  6 7
code_result
  7 B
==
  C E!
OperationResultEnum
  F Y
.
  Y Z
Success
  Z a
)
  a b
{
ÀÀ 
List
ÃÃ 
<
ÃÃ 
Precio
ÃÃ 
>
ÃÃ  
nuevosPrecios
ÃÃ! .
=
ÃÃ/ 0
new
ÃÃ1 4
List
ÃÃ5 9
<
ÃÃ9 :
Precio
ÃÃ: @
>
ÃÃ@ A
(
ÃÃA B
)
ÃÃB C
;
ÃÃC D
List
ÕÕ 
<
ÕÕ 
Precio
ÕÕ 
>
ÕÕ  
preciosCaducos
ÕÕ! /
=
ÕÕ0 1
new
ÕÕ2 5
List
ÕÕ6 :
<
ÕÕ: ;
Precio
ÕÕ; A
>
ÕÕA B
(
ÕÕB C
)
ÕÕC D
;
ÕÕD E
foreach
ŒŒ 
(
ŒŒ 
var
ŒŒ  
item
ŒŒ! %
in
ŒŒ& (
precios
ŒŒ) 0
)
ŒŒ0 1
{
œœ 
if
–– 
(
–– 
item
––  
.
––  !
Seleccionado
––! -
)
––- .
{
—— 
Precio
““ "
precio
““# )
=
““* +
new
““, /
Precio
““0 6
(
““6 7
item
““7 ;
.
““; <
IdPrecio
““< D
,
““D E
item
““F J
.
““J K
IdPuntoPrecio
““K X
,
““X Y
MaestroSettings
““Z i
.
““i j
Default
““j q
.
““q r9
*IdDetalleMaestroUnidadDeNegocioTransversal““r ú
,““ú ù
id““û †
,““† °
item““¢ ¶
.““¶ ß
Valor““ß ¨
,““¨ ≠
item““Æ ≤
.““≤ ≥
IdTarifa““≥ ª
,““ª º
MaestroSettings““Ω Ã
.““Ã Õ
Default““Õ ‘
.““‘ ’+
IdDetalleMaestroMonedaSoles““’ 
,““ Ò
item““Ú ˆ
.““ˆ ˜
FechaInicio““˜ Ç
,““Ç É
item““Ñ à
.““à â
FechaFin““â ë
,““ë í
fechaActual““ì û
,““û ü
true““† §
,““§ •
true““¶ ™
,““™ ´
false““¨ ±
,““± ≤
$num““≥ ¥
,““¥ µ
$num““∂ ∑
,““∑ ∏
MaestroSettings““π »
.““» …
Default““… –
.““– —0
 IdDetalleMaestroTipoPrecioPrecio““— Ò
,““Ò Ú
item““Û ˜
.““˜ ¯
Descripcion““¯ É
,““É Ñ

idEmpleado““Ö è
)““è ê
;““ê ë
nuevosPrecios
”” )
.
””) *
Add
””* -
(
””- .
precio
””. 4
)
””4 5
;
””5 6
}
‘‘ 
else
’’ 
{
÷÷ 
if
◊◊ 
(
◊◊  
item
◊◊  $
.
◊◊$ %
IdPrecio
◊◊% -
!=
◊◊. 0
$num
◊◊1 2
)
◊◊2 3
{
ÿÿ 
Precio
ŸŸ  &
precio
ŸŸ' -
=
ŸŸ. / 
_precioRepositorio
ŸŸ0 B
.
ŸŸB C
obtenerPrecio
ŸŸC P
(
ŸŸP Q
item
ŸŸQ U
.
ŸŸU V
IdPrecio
ŸŸV ^
)
ŸŸ^ _
;
ŸŸ_ `
precio
⁄⁄  &
.
⁄⁄& '
	fecha_fin
⁄⁄' 0
=
⁄⁄1 2
fechaActual
⁄⁄3 >
;
⁄⁄> ?
precio
€€  &
.
€€& ' 
fecha_modificacion
€€' 9
=
€€: ;
fechaActual
€€< G
;
€€G H
precio
‹‹  &
.
‹‹& '

es_vigente
‹‹' 1
=
‹‹2 3
false
‹‹4 9
;
‹‹9 :
preciosCaducos
››  .
.
››. /
Add
››/ 2
(
››2 3
precio
››3 9
)
››9 :
;
››: ;
}
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ (
resultActualizacionPrecios
·· .
=
··/ 0 
_precioRepositorio
··1 C
.
··C D
ResolverPrecios
··D S
(
··S T
nuevosPrecios
··T a
,
··a b
preciosCaducos
··c q
)
··q r
;
··r s
if
‚‚ 
(
‚‚ (
resultActualizacionPrecios
‚‚ 2
.
‚‚2 3
code_result
‚‚3 >
==
‚‚? A!
OperationResultEnum
‚‚B U
.
‚‚U V
Success
‚‚V ]
)
‚‚] ^
{
„„ 
return
‰‰ 
new
‰‰ "
OperationResult
‰‰# 2
(
‰‰2 3!
OperationResultEnum
‰‰3 F
.
‰‰F G
Success
‰‰G N
)
‰‰N O
;
‰‰O P
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
return
ËË 
new
ËË "
OperationResult
ËË# 2
(
ËË2 3!
OperationResultEnum
ËË3 F
.
ËËF G
Warning
ËËG N
,
ËËN O
$strËËP û
+ËËü †*
resultActualizacionPreciosËË° ª
.ËËª º
messageËËº √
)ËË√ ƒ
;ËËƒ ≈
}
ÈÈ 
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
return
ÌÌ 0
"resultActualizacionConceptoNegocio
ÌÌ =
;
ÌÌ= >
}
ÓÓ 
}
ÔÔ 
catch
 
(
 "
AdvertenciaException
 '
e
( )
)
) *
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ "
AdvertenciaException
ÚÚ .
(
ÚÚ. /
e
ÚÚ/ 0
.
ÚÚ0 1
Message
ÚÚ1 8
)
ÚÚ8 9
;
ÚÚ9 :
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
e
ÙÙ 
)
ÙÙ 
{
ıı 
throw
ˆˆ 
new
ˆˆ 
LogicaException
ˆˆ )
(
ˆˆ) *
$str
ˆˆ* H
,
ˆˆH I
e
ˆˆJ K
)
ˆˆK L
;
ˆˆL M
}
˜˜ 
}
¯¯ 	
public
˙˙ 
List
˙˙ 
<
˙˙ 
Precio
˙˙ 
>
˙˙ 
GenerarPrecios
˙˙ *
(
˙˙* +
List
˙˙+ /
<
˙˙/ 0*
Precio_Compra_Venta_Concepto
˙˙0 L
>
˙˙L M
precios
˙˙N U
,
˙˙U V
DateTime
˙˙W _
fecha
˙˙` e
,
˙˙e f
int
˙˙g j

idProducto
˙˙k u
,
˙˙u v
int
˙˙w z

idEmpleado˙˙{ Ö
)˙˙Ö Ü
{
˚˚ 	
List
¸¸ 
<
¸¸ 
Precio
¸¸ 
>
¸¸ 
preciosGenerados
¸¸ )
=
¸¸* +
new
¸¸, /
List
¸¸0 4
<
¸¸4 5
Precio
¸¸5 ;
>
¸¸; <
(
¸¸< =
)
¸¸= >
;
¸¸> ?
foreach
˝˝ 
(
˝˝ 
var
˝˝ 
precioVenta
˝˝ $
in
˝˝% '
precios
˝˝( /
)
˝˝/ 0
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
precioVenta
ˇˇ 
.
ˇˇ  
Valor
ˇˇ  %
>=
ˇˇ& (
$num
ˇˇ) *
&&
ˇˇ+ -
precioVenta
ˇˇ. 9
.
ˇˇ9 :
Valor
ˇˇ: ?
!=
ˇˇ@ B 
AplicacionSettings
ˇˇC U
.
ˇˇU V
Default
ˇˇV ]
.
ˇˇ] ^;
,ValorPrecioVentaPorDefectoQueNoSeDebeGuardarˇˇ^ ä
)ˇˇä ã
{
ÄÄ 
Precio
ÅÅ 
precio
ÅÅ !
=
ÅÅ" #
new
ÅÅ$ '
Precio
ÅÅ( .
(
ÅÅ. /
precioVenta
ÅÅ/ :
.
ÅÅ: ;
IdPuntoPrecio
ÅÅ; H
,
ÅÅH I
MaestroSettings
ÅÅJ Y
.
ÅÅY Z
Default
ÅÅZ a
.
ÅÅa b9
*IdDetalleMaestroUnidadDeNegocioTransversalÅÅb å
,ÅÅå ç

idProductoÅÅé ò
,ÅÅò ô
precioVentaÅÅö •
.ÅÅ• ¶
ValorÅÅ¶ ´
,ÅÅ´ ¨
precioVentaÅÅ≠ ∏
.ÅÅ∏ π
IdTarifaÅÅπ ¡
,ÅÅ¡ ¬
MaestroSettingsÅÅ√ “
.ÅÅ“ ”
DefaultÅÅ” ⁄
.ÅÅ⁄ €+
IdDetalleMaestroMonedaSolesÅÅ€ ˆ
,ÅÅˆ ˜
fechaÅÅ¯ ˝
,ÅÅ˝ ˛
fechaÅÅˇ Ñ
.ÅÅÑ Ö
	AddMonthsÅÅÖ é
(ÅÅé è 
ConceptoSettingsÅÅè ü
.ÅÅü †
DefaultÅÅ† ß
.ÅÅß ®/
PrecioDuracionPorDefectoEnMesesÅÅ® «
)ÅÅ« »
,ÅÅ» …
fechaÅÅ  œ
,ÅÅœ –
trueÅÅ— ’
,ÅÅ’ ÷
trueÅÅ◊ €
,ÅÅ€ ‹
falseÅÅ› ‚
,ÅÅ‚ „
$numÅÅ‰ Â
,ÅÅÂ Ê
$numÅÅÁ Ë
,ÅÅË È
MaestroSettingsÅÅÍ ˘
.ÅÅ˘ ˙
DefaultÅÅ˙ Å
.ÅÅÅ Ç0
 IdDetalleMaestroTipoPrecioPrecioÅÅÇ ¢
,ÅÅ¢ £
precioVentaÅÅ§ Ø
.ÅÅØ ∞
DescripcionÅÅ∞ ª
,ÅÅª º

idEmpleadoÅÅΩ «
)ÅÅ« »
;ÅÅ» …
preciosGenerados
ÇÇ $
.
ÇÇ$ %
Add
ÇÇ% (
(
ÇÇ( )
precio
ÇÇ) /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÉÉ 
}
ÑÑ 
return
ÖÖ 
preciosGenerados
ÖÖ #
;
ÖÖ# $
}
ÜÜ 	
public
àà 
void
àà $
AgregarCaracteristicas
àà *
(
àà* +
int
àà+ .
[
àà. /
]
àà/ 0 
idsCaracteristicas
àà1 C
,
ààC D
Concepto_negocio
ààE U
producto
ààV ^
)
àà^ _
{
ââ 	
if
ää 
(
ää  
idsCaracteristicas
ää "
!=
ää# %
null
ää& *
)
ää* +
{
ãã 
foreach
åå 
(
åå 
var
åå 
item
åå !
in
åå" $ 
idsCaracteristicas
åå% 7
.
åå7 8
Where
åå8 =
(
åå= >
ic
åå> @
=>
ååA C
ic
ååD F
!=
ååG I
$num
ååJ K
)
ååK L
)
ååL M
{
çç 3
%Valor_caracteristica_concepto_negocio
éé 9!
valorCaracteristica
éé: M
=
ééN O
new
ééP S3
%Valor_caracteristica_concepto_negocio
ééT y
(
ééy z
)
ééz {
;
éé{ |!
valorCaracteristica
èè '
.
èè' (%
id_valor_caracteristica
èè( ?
=
èè@ A
item
èèB F
;
èèF G!
valorCaracteristica
êê '
.
êê' (!
id_concepto_negocio
êê( ;
=
êê< =
producto
êê> F
.
êêF G
id
êêG I
;
êêI J
producto
ëë 
.
ëë 3
%Valor_caracteristica_concepto_negocio
ëë B
.
ëëB C
Add
ëëC F
(
ëëF G!
valorCaracteristica
ëëG Z
)
ëëZ [
;
ëë[ \
}
íí 
}
ìì 
}
îî 	
public
òò 
List
òò 
<
òò 
Detalle_maestro
òò #
>
òò# $,
ObtenerConceptosBasicosDeGasto
òò% C
(
òòC D
)
òòD E
{
ôô 	
try
öö 
{
õõ 
int
úú 
IdRol
úú 
=
úú 
ConceptoSettings
úú ,
.
úú, -
Default
úú- 4
.
úú4 5

IdRolGasto
úú5 ?
;
úú? @
return
ùù "
_conceptoRepositorio
ùù +
.
ùù+ ,;
-ObtenerDetalleMaestro4DeConceptoNegocioConRol
ùù, Y
(
ùùY Z
IdRol
ùùZ _
)
ùù_ `
.
ùù` a
Distinct
ùùa i
(
ùùi j
)
ùùj k
.
ùùk l
ToList
ùùl r
(
ùùr s
)
ùùs t
;
ùùt u
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* X
,
°°X Y
e
°°Z [
)
°°[ \
;
°°\ ]
}
¢¢ 
}
££ 	
public
•• 
List
•• 
<
•• 
DetalleGenerico
•• #
>
••# $+
ObtenerConceptosVigentesGasto
••% B
(
••B C
)
••C D
{
¶¶ 	
try
ßß 
{
®® 
var
©© 
result
©© 
=
©© "
_conceptoRepositorio
©© 1
.
©©1 2L
>ObtenerConceptosDeNegocioPorRolesIncluyendoExistenciasYPrecios
©©2 p
(
©©p q
ConceptoSettings©©q Å
.©©Å Ç
Default©©Ç â
.©©â ä

IdRolGasto©©ä î
,©©î ï
true©©ñ ö
)©©ö õ
.©©õ ú
ToList©©ú ¢
(©©¢ £
)©©£ §
;©©§ •
List
™™ 
<
™™ 
DetalleGenerico
™™ $
>
™™$ %
	resultado
™™& /
=
™™0 1
new
™™2 5
List
™™6 :
<
™™: ;
DetalleGenerico
™™; J
>
™™J K
(
™™K L
)
™™L M
;
™™M N
foreach
´´ 
(
´´ 
var
´´ 
item
´´ !
in
´´" $
result
´´% +
)
´´+ ,
{
¨¨ 
	resultado
≠≠ 
.
≠≠ 
Add
≠≠ !
(
≠≠! "
new
≠≠" %
DetalleGenerico
≠≠& 5
(
≠≠5 6
item
≠≠6 :
.
≠≠: ;
id
≠≠; =
,
≠≠= >
item
≠≠? C
.
≠≠C D
nombre
≠≠D J
)
≠≠J K
)
≠≠K L
;
≠≠L M
}
ÆÆ 
return
ØØ 
	resultado
ØØ  
;
ØØ  !
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
e
±± 
)
±± 
{
≤≤ 
throw
≥≥ 
new
≥≥ 
LogicaException
≥≥ )
(
≥≥) *
$str
≥≥* \
,
≥≥\ ]
e
≥≥^ _
)
≥≥_ `
;
≥≥` a
}
¥¥ 
}
µµ 	
public
∑∑ 
OperationResult
∑∑ "
GuardarConceptoGasto
∑∑ 3
(
∑∑3 4
string
∑∑4 :
nombre
∑∑; A
,
∑∑A B
int
∑∑C F
idConceptoBasico
∑∑G W
,
∑∑W X
string
∑∑Y _
sufijo
∑∑` f
,
∑∑f g
int
∑∑h k

idEmpleado
∑∑l v
,
∑∑v w
int
∑∑x {
idCentroAtencion∑∑| å
)∑∑å ç
{
∏∏ 	
try
ππ 
{
∫∫ 
if
ªª 
(
ªª +
ExisteNombreConceptoComercial
ªª 1
(
ªª1 2
nombre
ªª2 8
)
ªª8 9
)
ªª9 :
{
ºº 
throw
ΩΩ 
new
ΩΩ !
ControllerException
ΩΩ 1
(
ΩΩ1 2
$str
ΩΩ2 r
)
ΩΩr s
;
ΩΩs t
}
ææ 
DateTime
øø 
fechaActual
øø $
=
øø% &
DateTimeUtil
øø' 3
.
øø3 4
FechaActual
øø4 ?
(
øø? @
)
øø@ A
;
øøA B
int
¿¿ 
idRol
¿¿ 
=
¿¿ 
ConceptoSettings
¿¿ ,
.
¿¿, -
Default
¿¿- 4
.
¿¿4 5

IdRolGasto
¿¿5 ?
;
¿¿? @
string
¡¡ 
codigo
¡¡ 
=
¡¡ 
idConceptoBasico
¡¡  0
+
¡¡1 2
$str
¡¡3 6
+
¡¡7 82
$ObtenerSiguienteCodigoParaMercaderia
¡¡9 ]
(
¡¡] ^
idRol
¡¡^ c
,
¡¡c d
idConceptoBasico
¡¡e u
)
¡¡u v
;
¡¡v w
Concepto_negocio
√√  
conceptoGasto
√√! .
=
√√/ 0
new
√√1 4
Concepto_negocio
√√5 E
(
√√E F
codigo
√√F L
,
√√L M
null
√√N R
,
√√R S
$str
√√T V
,
√√V W
nombre
√√X ^
,
√√^ _
sufijo
√√` f
,
√√f g
$str
√√h j
,
√√j k
idConceptoBasico
√√l |
,
√√| }
ConceptoSettings√√~ é
.√√é è
Default√√è ñ
.√√ñ ó(
idUnidadMedidaPorDefecto√√ó Ø
,√√Ø ∞ 
ConceptoSettings√√± ¡
.√√¡ ¬
Default√√¬ …
.√√…  (
idPresentacionPorDefecto√√  ‚
,√√‚ „
$num√√‰ Â
,√√Â Ê 
ConceptoSettings√√Á ˜
.√√˜ ¯
Default√√¯ ˇ
.√√ˇ Ä(
idUnidadMedidaPorDefecto√√Ä ò
,√√ò ô
null√√ö û
,√√û ü
null√√† §
,√√§ •
true√√¶ ™
,√√™ ´ 
ConceptoSettings√√¨ º
.√√º Ω
Default√√Ω ƒ
.√√ƒ ≈(
idUnidadMedidaPorDefecto√√≈ ›
)√√› ﬁ
;√√ﬁ ﬂ
conceptoGasto
∆∆ 
.
∆∆ "
Concepto_negocio_rol
∆∆ 2
.
∆∆2 3
Add
∆∆3 6
(
∆∆6 7
new
∆∆7 :"
Concepto_negocio_rol
∆∆; O
(
∆∆O P
)
∆∆P Q
{
∆∆R S
id_rol
∆∆T Z
=
∆∆[ \
idRol
∆∆] b
}
∆∆c d
)
∆∆d e
;
∆∆e f
Precio
…… 
precio
…… 
=
…… 
new
……  #
Precio
……$ *
(
……* +
idCentroAtencion
……+ ;
,
……; <
MaestroSettings
……= L
.
……L M
Default
……M T
.
……T U8
*IdDetalleMaestroUnidadDeNegocioTransversal
……U 
,…… Ä
$num……Å Ç
,……Ç É
MaestroSettings……Ñ ì
.……ì î
Default……î õ
.……õ ú,
IdDetalleMaestroTarifaNormal……ú ∏
,……∏ π
MaestroSettings……∫ …
.………  
Default……  —
.……— “+
IdDetalleMaestroMonedaSoles……“ Ì
,……Ì Ó
fechaActual……Ô ˙
,……˙ ˚
fechaActual……¸ á
.……á à
	AddMonths……à ë
(……ë í 
ConceptoSettings……í ¢
.……¢ £
Default……£ ™
.……™ ´/
PrecioDuracionPorDefectoEnMeses……´  
)……  À
,……À Ã
fechaActual……Õ ÿ
,……ÿ Ÿ
true……⁄ ﬁ
,……ﬁ ﬂ
true……‡ ‰
,……‰ Â
false……Ê Î
,……Î Ï
$num……Ì Ó
,……Ó Ô
$num…… Ò
,……Ò Ú
MaestroSettings……Û Ç
.……Ç É
Default……É ä
.……ä ã0
 IdDetalleMaestroTipoPrecioPrecio……ã ´
,……´ ¨
$str……≠  
,……  À

idEmpleado……Ã ÷
)……÷ ◊
;……◊ ÿ
conceptoGasto
ÀÀ 
.
ÀÀ 
Precio
ÀÀ $
.
ÀÀ$ %
Add
ÀÀ% (
(
ÀÀ( )
precio
ÀÀ) /
)
ÀÀ/ 0
;
ÀÀ0 1
return
ÃÃ "
_conceptoRepositorio
ÃÃ +
.
ÃÃ+ ,$
CrearConceptoDeNegocio
ÃÃ, B
(
ÃÃB C
conceptoGasto
ÃÃC P
)
ÃÃP Q
;
ÃÃQ R
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
—— 
new
—— 
LogicaException
—— )
(
——) *
$str
——* N
,
——N O
e
——P Q
)
——Q R
;
——R S
}
““ 
}
”” 	
public
’’ 
OperationResult
’’ %
ActualizarConceptoGasto
’’ 6
(
’’6 7
int
’’7 :
id
’’; =
,
’’= >
string
’’? E
nombre
’’F L
,
’’L M
int
’’N Q
idConceptoBasico
’’R b
,
’’b c
string
’’d j
sufijo
’’k q
,
’’q r
int
’’s v

idEmpleado’’w Å
,’’Å Ç
int’’É Ü 
idCentroAtencion’’á ó
)’’ó ò
{
÷÷ 	
try
◊◊ 
{
ÿÿ 
if
⁄⁄ 
(
⁄⁄ +
ExisteNombreConceptoComercial
⁄⁄ 1
(
⁄⁄1 2
nombre
⁄⁄2 8
)
⁄⁄8 9
)
⁄⁄9 :
{
€€ 
throw
‹‹ 
new
‹‹ !
ControllerException
‹‹ 1
(
‹‹1 2
$str
‹‹2 r
)
‹‹r s
;
‹‹s t
}
›› 
DateTime
ﬁﬁ 
fechaActual
ﬁﬁ $
=
ﬁﬁ% &
DateTimeUtil
ﬁﬁ' 3
.
ﬁﬁ3 4
FechaActual
ﬁﬁ4 ?
(
ﬁﬁ? @
)
ﬁﬁ@ A
;
ﬁﬁA B
int
ﬂﬂ 
idRol
ﬂﬂ 
=
ﬂﬂ 
ConceptoSettings
ﬂﬂ ,
.
ﬂﬂ, -
Default
ﬂﬂ- 4
.
ﬂﬂ4 5

IdRolGasto
ﬂﬂ5 ?
;
ﬂﬂ? @
string
‡‡ 
codigo
‡‡ 
=
‡‡ 
idConceptoBasico
‡‡  0
+
‡‡1 2
$str
‡‡3 6
+
‡‡7 82
$ObtenerSiguienteCodigoParaMercaderia
‡‡9 ]
(
‡‡] ^
idRol
‡‡^ c
,
‡‡c d
idConceptoBasico
‡‡e u
)
‡‡u v
;
‡‡v w
Concepto_negocio
‚‚  
conceptoGasto
‚‚! .
=
‚‚/ 0
new
‚‚1 4
Concepto_negocio
‚‚5 E
(
‚‚E F
id
‚‚F H
,
‚‚H I
codigo
‚‚J P
,
‚‚P Q
null
‚‚R V
,
‚‚V W
$str
‚‚X Z
,
‚‚Z [
nombre
‚‚\ b
,
‚‚b c
sufijo
‚‚d j
,
‚‚j k
$str
‚‚l n
,
‚‚n o
idConceptoBasico‚‚p Ä
,‚‚Ä Å 
ConceptoSettings‚‚Ç í
.‚‚í ì
Default‚‚ì ö
.‚‚ö õ(
idUnidadMedidaPorDefecto‚‚õ ≥
,‚‚≥ ¥ 
ConceptoSettings‚‚µ ≈
.‚‚≈ ∆
Default‚‚∆ Õ
.‚‚Õ Œ(
idPresentacionPorDefecto‚‚Œ Ê
,‚‚Ê Á
$num‚‚Ë È
,‚‚È Í 
ConceptoSettings‚‚Î ˚
.‚‚˚ ¸
Default‚‚¸ É
.‚‚É Ñ(
idUnidadMedidaPorDefecto‚‚Ñ ú
,‚‚ú ù
null‚‚û ¢
,‚‚¢ £
null‚‚§ ®
,‚‚® ©
true‚‚™ Æ
,‚‚Æ Ø 
ConceptoSettings‚‚∞ ¿
.‚‚¿ ¡
Default‚‚¡ »
.‚‚» …(
idUnidadMedidaPorDefecto‚‚… ·
)‚‚· ‚
;‚‚‚ „
conceptoGasto
ÂÂ 
.
ÂÂ "
Concepto_negocio_rol
ÂÂ 2
.
ÂÂ2 3
Add
ÂÂ3 6
(
ÂÂ6 7
new
ÂÂ7 :"
Concepto_negocio_rol
ÂÂ; O
(
ÂÂO P
)
ÂÂP Q
{
ÂÂR S
id_rol
ÂÂT Z
=
ÂÂ[ \
idRol
ÂÂ] b
}
ÂÂc d
)
ÂÂd e
;
ÂÂe f
Precio
ËË 
precio
ËË 
=
ËË 
new
ËË  #
Precio
ËË$ *
(
ËË* +
idCentroAtencion
ËË+ ;
,
ËË; <
MaestroSettings
ËË= L
.
ËËL M
Default
ËËM T
.
ËËT U8
*IdDetalleMaestroUnidadDeNegocioTransversal
ËËU 
,ËË Ä
$numËËÅ Ç
,ËËÇ É
MaestroSettingsËËÑ ì
.ËËì î
DefaultËËî õ
.ËËõ ú,
IdDetalleMaestroTarifaNormalËËú ∏
,ËË∏ π
MaestroSettingsËË∫ …
.ËË…  
DefaultËË  —
.ËË— “+
IdDetalleMaestroMonedaSolesËË“ Ì
,ËËÌ Ó
fechaActualËËÔ ˙
,ËË˙ ˚
fechaActualËË¸ á
.ËËá à
	AddMonthsËËà ë
(ËËë í 
ConceptoSettingsËËí ¢
.ËË¢ £
DefaultËË£ ™
.ËË™ ´/
PrecioDuracionPorDefectoEnMesesËË´  
)ËË  À
,ËËÀ Ã
fechaActualËËÕ ÿ
,ËËÿ Ÿ
trueËË⁄ ﬁ
,ËËﬁ ﬂ
trueËË‡ ‰
,ËË‰ Â
falseËËÊ Î
,ËËÎ Ï
$numËËÌ Ó
,ËËÓ Ô
$numËË Ò
,ËËÒ Ú
MaestroSettingsËËÛ Ç
.ËËÇ É
DefaultËËÉ ä
.ËËä ã0
 IdDetalleMaestroTipoPrecioPrecioËËã ´
,ËË´ ¨
$strËË≠  
,ËË  À

idEmpleadoËËÃ ÷
)ËË÷ ◊
;ËË◊ ÿ
conceptoGasto
ÍÍ 
.
ÍÍ 
Precio
ÍÍ $
.
ÍÍ$ %
Add
ÍÍ% (
(
ÍÍ( )
precio
ÍÍ) /
)
ÍÍ/ 0
;
ÍÍ0 1
return
ÎÎ "
_conceptoRepositorio
ÎÎ +
.
ÎÎ+ ,'
ActualizarConceptoNegocio
ÎÎ, E
(
ÎÎE F
conceptoGasto
ÎÎF S
)
ÎÎS T
;
ÎÎT U
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* Q
,
ÔÔQ R
e
ÔÔS T
)
ÔÔT U
;
ÔÔU V
}
 
}
ÒÒ 	
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
RolDeNegocio
ÛÛ  
>
ÛÛ  !Q
CObtenerRolesQueAplicaAConceptosDeNegocioExceptoMercaderiaYServicios
ÛÛ" e
(
ÛÛe f
)
ÛÛf g
{
ÙÙ 	
try
ıı 
{
ˆˆ 
int
˜˜ 
[
˜˜ 
]
˜˜ 
idRolesAExcluir
˜˜ %
=
˜˜& '
new
˜˜( +
int
˜˜, /
[
˜˜/ 0
]
˜˜0 1
{
˜˜2 3
ConceptoSettings
˜˜4 D
.
˜˜D E
Default
˜˜E L
.
˜˜L M
IdRolMercaderia
˜˜M \
}
˜˜] ^
;
˜˜^ _
return
¯¯ 
RolDeNegocio
¯¯ #
.
¯¯# $
Convert_
¯¯$ ,
(
¯¯, -"
_conceptoRepositorio
¯¯- A
.
¯¯A B@
2ObtenerRolesDeConceptosExceptoMercaderiaYServicios
¯¯B t
(
¯¯t u
ConceptoSettings¯¯u Ö
.¯¯Ö Ü
Default¯¯Ü ç
.¯¯ç é)
RolAplicaAConceptoNegocio¯¯é ß
,¯¯ß ®
idRolesAExcluir¯¯© ∏
)¯¯∏ π
.¯¯π ∫
ToList¯¯∫ ¿
(¯¯¿ ¡
)¯¯¡ ¬
)¯¯¬ √
;¯¯√ ƒ
}
˙˙ 
catch
˚˚ 
(
˚˚ 
	Exception
˚˚ 
e
˚˚ 
)
˚˚ 
{
¸¸ 
throw
˝˝ 
new
˝˝ 
LogicaException
˝˝ )
(
˝˝) *
$str
˝˝* B
,
˝˝B C
e
˝˝D E
)
˝˝E F
;
˝˝F G
}
˛˛ 
}
Ä	Ä	 	
public
á	á	 
List
á	á	 
<
á	á	 (
Concepto_Negocio_Comercial
á	á	 .
>
á	á	. /1
#ObtenerConceptosNegociosComerciales
á	á	0 S
(
á	á	S T
int
á	á	T W
?
á	á	W X
idConceptoBasico
á	á	Y i
,
á	á	i j
int
á	á	k n
?
á	á	n o
idCategoria
á	á	p {
,
á	á	{ |
intá	á	} Ä
[á	á	Ä Å
]á	á	Å Ç(
idValoresCaracteristicasá	á	É õ
)á	á	õ ú
{
à	à	 	
try
â	â	 
{
ä	ä	 
List
ã	ã	 
<
ã	ã	 (
Concepto_Negocio_Comercial
ã	ã	 /
>
ã	ã	/ 0
	resultado
ã	ã	1 :
=
ã	ã	; <
null
ã	ã	= A
;
ã	ã	A B
if
å	å	 
(
å	å	 &
idValoresCaracteristicas
å	å	 ,
!=
å	å	- /
null
å	å	0 4
)
å	å	4 5
{
ç	ç	 &
idValoresCaracteristicas
é	é	 ,
=
é	é	- .&
idValoresCaracteristicas
é	é	/ G
.
é	é	G H
Where
é	é	H M
(
é	é	M N
id
é	é	N P
=>
é	é	Q S
id
é	é	T V
>
é	é	W X
$num
é	é	Y Z
)
é	é	Z [
.
é	é	[ \
ToArray
é	é	\ c
(
é	é	c d
)
é	é	d e
;
é	é	e f
if
è	è	 
(
è	è	 &
idValoresCaracteristicas
è	è	 0
.
è	è	0 1
Length
è	è	1 7
>
è	è	8 9
$num
è	è	: ;
)
è	è	; <
{
ê	ê	 
if
ë	ë	 
(
ë	ë	 
idConceptoBasico
ë	ë	 ,
!=
ë	ë	- /
null
ë	ë	0 4
)
ë	ë	4 5
{
í	í	 
if
ì	ì	 
(
ì	ì	  
idCategoria
ì	ì	  +
!=
ì	ì	, .
null
ì	ì	/ 3
)
ì	ì	3 4
{
î	î	 
	resultado
ï	ï	  )
=
ï	ï	* +r
cObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicasï	ï	, è
(ï	ï	è ê
(ï	ï	ê ë
intï	ï	ë î
)ï	ï	î ï 
idConceptoBasicoï	ï	ï •
,ï	ï	• ¶
(ï	ï	ß ®
intï	ï	® ´
)ï	ï	´ ¨
idCategoriaï	ï	¨ ∑
,ï	ï	∑ ∏(
idValoresCaracteristicasï	ï	π —
)ï	ï	— “
;ï	ï	“ ”
return
ñ	ñ	  &
	resultado
ñ	ñ	' 0
;
ñ	ñ	0 1
}
ó	ó	 
else
ò	ò	  
{
ô	ô	 
	resultado
ö	ö	  )
=
ö	ö	* +f
WObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicasö	ö	, É
(ö	ö	É Ñ
(ö	ö	Ñ Ö
intö	ö	Ö à
)ö	ö	à â 
idConceptoBasicoö	ö	â ô
,ö	ö	ô ö(
idValoresCaracteristicasö	ö	õ ≥
)ö	ö	≥ ¥
;ö	ö	¥ µ
return
õ	õ	  &
	resultado
õ	õ	' 0
;
õ	õ	0 1
}
ú	ú	 
}
ù	ù	 
else
û	û	 
{
ü	ü	 
if
†	†	 
(
†	†	  
idCategoria
†	†	  +
!=
†	†	, .
null
†	†	/ 3
)
†	†	3 4
{
°	°	 
	resultado
¢	¢	  )
=
¢	¢	* +Z
LObtenerConceptosDeNegocioComercialesPorIdCategoriaYIdsValoresCaracteristicas
¢	¢	, x
(
¢	¢	x y
(
¢	¢	y z
int
¢	¢	z }
)
¢	¢	} ~
idCategoria¢	¢	~ â
,¢	¢	â ä(
idValoresCaracteristicas¢	¢	ã £
)¢	¢	£ §
;¢	¢	§ •
return
£	£	  &
	resultado
£	£	' 0
;
£	£	0 1
}
§	§	 
else
•	•	  
{
¶	¶	 
	resultado
ß	ß	  )
=
ß	ß	* +N
@ObtenerConceptosDeNegocioComercialesPorIdsValoresCaracteristicas
ß	ß	, l
(
ß	ß	l m'
idValoresCaracteristicasß	ß	m Ö
)ß	ß	Ö Ü
;ß	ß	Ü á
return
®	®	  &
	resultado
®	®	' 0
;
®	®	0 1
}
©	©	 
}
™	™	 
}
´	´	 
}
¨	¨	 
else
≠	≠	 
{
Æ	Æ	 
if
Ø	Ø	 
(
Ø	Ø	 
idConceptoBasico
Ø	Ø	 (
!=
Ø	Ø	) +
null
Ø	Ø	, 0
)
Ø	Ø	0 1
{
∞	∞	 
if
±	±	 
(
±	±	 
idCategoria
±	±	 '
!=
±	±	( *
null
±	±	+ /
)
±	±	/ 0
{
≤	≤	 
	resultado
≥	≥	 %
=
≥	≥	& 'W
IObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoria
≥	≥	( q
(
≥	≥	q r
(
≥	≥	r s
int
≥	≥	s v
)
≥	≥	v w
idConceptoBasico≥	≥	w á
,≥	≥	á à
(≥	≥	â ä
int≥	≥	ä ç
)≥	≥	ç é
idCategoria≥	≥	é ô
)≥	≥	ô ö
;≥	≥	ö õ
return
¥	¥	 "
	resultado
¥	¥	# ,
;
¥	¥	, -
}
µ	µ	 
else
∂	∂	 
{
∑	∑	 
	resultado
∏	∏	 %
=
∏	∏	& 'K
=ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasico
∏	∏	( e
(
∏	∏	e f
(
∏	∏	f g
int
∏	∏	g j
)
∏	∏	j k
idConceptoBasico
∏	∏	k {
)
∏	∏	{ |
;
∏	∏	| }
return
π	π	 "
	resultado
π	π	# ,
;
π	π	, -
}
∫	∫	 
}
ª	ª	 
else
º	º	 
{
Ω	Ω	 
if
æ	æ	 
(
æ	æ	 
idCategoria
æ	æ	 '
!=
æ	æ	( *
null
æ	æ	+ /
)
æ	æ	/ 0
{
ø	ø	 
	resultado
¿	¿	 %
=
¿	¿	& 'F
8ObtenerConceptosDeNegocioComercialesPorRolesYIdCategoria
¿	¿	( `
(
¿	¿	` a
(
¿	¿	a b
int
¿	¿	b e
)
¿	¿	e f
idCategoria
¿	¿	f q
)
¿	¿	q r
;
¿	¿	r s
return
¡	¡	 "
	resultado
¡	¡	# ,
;
¡	¡	, -
}
¬	¬	 
else
√	√	 
{
ƒ	ƒ	 
	resultado
≈	≈	 %
=
≈	≈	& ':
,ObtenerConceptosDeNegocioComercialesPorRoles
≈	≈	( T
(
≈	≈	T U
)
≈	≈	U V
;
≈	≈	V W
return
∆	∆	 "
	resultado
∆	∆	# ,
;
∆	∆	, -
}
«	«	 
}
»	»	 
}
…	…	 
return
 	 	 
	resultado
 	 	  
;
 	 	  !
}
À	À	 
catch
Ã	Ã	 
(
Ã	Ã	 
	Exception
Ã	Ã	 
e
Ã	Ã	 
)
Ã	Ã	 
{
Õ	Õ	 
throw
Œ	Œ	 
new
Œ	Œ	 
LogicaException
Œ	Œ	 )
(
Œ	Œ	) *
$str
Œ	Œ	* ^
,
Œ	Œ	^ _
e
Œ	Œ	` a
)
Œ	Œ	a b
;
Œ	Œ	b c
}
œ	œ	 
}
–	–	 	
public
“	“	 
List
“	“	 
<
“	“	 (
Concepto_Negocio_Comercial
“	“	 .
>
“	“	. /r
cObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicas“	“	0 ì
(“	“	ì î
int“	“	î ó 
idConceptoBasico“	“	ò ®
,“	“	® ©
int“	“	™ ≠
idCategoria“	“	Æ π
,“	“	π ∫
int“	“	ª æ
[“	“	æ ø
]“	“	ø ¿+
idsValoresDeCaracteristicas“	“	¡ ‹
)“	“	‹ ›
{
”	”	 	
try
‘	‘	 
{
’	’	 
List
÷	÷	 
<
÷	÷	 (
Concepto_Negocio_Comercial
÷	÷	 /
>
÷	÷	/ 0
	resultado
÷	÷	1 :
=
÷	÷	; <"
_conceptoRepositorio
÷	÷	= Q
.
÷	÷	Q Rr
cObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicas÷	÷	R µ
(÷	÷	µ ∂
new÷	÷	∂ π
int÷	÷	∫ Ω
[÷	÷	Ω æ
]÷	÷	æ ø
{÷	÷	¿ ¡ 
ConceptoSettings÷	÷	¬ “
.÷	÷	“ ”
Default÷	÷	” ⁄
.÷	÷	⁄ €
IdRolMercaderia÷	÷	€ Í
}÷	÷	Î Ï
,÷	÷	Ï Ì 
idConceptoBasico÷	÷	Ó ˛
,÷	÷	˛ ˇ
idCategoria÷	÷	Ä ã
,÷	÷	ã å+
idsValoresDeCaracteristicas÷	÷	ç ®
)÷	÷	® ©
.÷	÷	© ™
ToList÷	÷	™ ∞
(÷	÷	∞ ±
)÷	÷	± ≤
;÷	÷	≤ ≥
return
◊	◊	 
	resultado
◊	◊	  
;
◊	◊	  !
}
ÿ	ÿ	 
catch
Ÿ	Ÿ	 
(
Ÿ	Ÿ	 
	Exception
Ÿ	Ÿ	 
e
Ÿ	Ÿ	 
)
Ÿ	Ÿ	 
{
⁄	⁄	 
throw
€	€	 
new
€	€	 
LogicaException
€	€	 )
(
€	€	) *
$str€	€	* ê
,€	€	ê ë
e€	€	í ì
)€	€	ì î
;€	€	î ï
}
‹	‹	 
}
›	›	 	
public
ﬁ	ﬁ	 
List
ﬁ	ﬁ	 
<
ﬁ	ﬁ	 (
Concepto_Negocio_Comercial
ﬁ	ﬁ	 .
>
ﬁ	ﬁ	. /f
WObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicasﬁ	ﬁ	0 á
(ﬁ	ﬁ	á à
intﬁ	ﬁ	à ã 
idConceptoBasicoﬁ	ﬁ	å ú
,ﬁ	ﬁ	ú ù
intﬁ	ﬁ	û °
[ﬁ	ﬁ	° ¢
]ﬁ	ﬁ	¢ £+
idsValoresDeCaracteristicasﬁ	ﬁ	§ ø
)ﬁ	ﬁ	ø ¿
{
ﬂ	ﬂ	 	
try
‡	‡	 
{
·	·	 
List
‚	‚	 
<
‚	‚	 (
Concepto_Negocio_Comercial
‚	‚	 /
>
‚	‚	/ 0
	resultado
‚	‚	1 :
=
‚	‚	; <"
_conceptoRepositorio
‚	‚	= Q
.
‚	‚	Q Rf
WObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicas‚	‚	R ©
(‚	‚	© ™
new‚	‚	™ ≠
int‚	‚	Æ ±
[‚	‚	± ≤
]‚	‚	≤ ≥
{‚	‚	¥ µ 
ConceptoSettings‚	‚	∂ ∆
.‚	‚	∆ «
Default‚	‚	« Œ
.‚	‚	Œ œ
IdRolMercaderia‚	‚	œ ﬁ
}‚	‚	ﬂ ‡
,‚	‚	‡ · 
idConceptoBasico‚	‚	‚ Ú
,‚	‚	Ú Û+
idsValoresDeCaracteristicas‚	‚	Ù è
)‚	‚	è ê
.‚	‚	ê ë
ToList‚	‚	ë ó
(‚	‚	ó ò
)‚	‚	ò ô
;‚	‚	ô ö
return
„	„	 
	resultado
„	„	  
;
„	„	  !
}
‰	‰	 
catch
Â	Â	 
(
Â	Â	 
	Exception
Â	Â	 
e
Â	Â	 
)
Â	Â	 
{
Ê	Ê	 
throw
Á	Á	 
new
Á	Á	 
LogicaException
Á	Á	 )
(
Á	Á	) *
$strÁ	Á	* Ñ
,Á	Á	Ñ Ö
eÁ	Á	Ü á
)Á	Á	á à
;Á	Á	à â
}
Ë	Ë	 
}
È	È	 	
public
Î	Î	 
List
Î	Î	 
<
Î	Î	 (
Concepto_Negocio_Comercial
Î	Î	 .
>
Î	Î	. /Z
LObtenerConceptosDeNegocioComercialesPorIdCategoriaYIdsValoresCaracteristicas
Î	Î	0 |
(
Î	Î	| }
intÎ	Î	} Ä
idCategoriaÎ	Î	Å å
,Î	Î	å ç
intÎ	Î	é ë
[Î	Î	ë í
]Î	Î	í ì+
idsValoresDeCaracteristicasÎ	Î	î Ø
)Î	Î	Ø ∞
{
Ï	Ï	 	
try
Ì	Ì	 
{
Ó	Ó	 
List
Ô	Ô	 
<
Ô	Ô	 (
Concepto_Negocio_Comercial
Ô	Ô	 /
>
Ô	Ô	/ 0
	resultado
Ô	Ô	1 :
=
Ô	Ô	; <"
_conceptoRepositorio
Ô	Ô	= Q
.
Ô	Ô	Q Rd
UObtenerConceptosDeNegociosComercialesPorRolesYIdCategoriaYIdsValoresDeCaracteristicasÔ	Ô	R ß
(Ô	Ô	ß ®
newÔ	Ô	® ´
intÔ	Ô	¨ Ø
[Ô	Ô	Ø ∞
]Ô	Ô	∞ ±
{Ô	Ô	≤ ≥ 
ConceptoSettingsÔ	Ô	¥ ƒ
.Ô	Ô	ƒ ≈
DefaultÔ	Ô	≈ Ã
.Ô	Ô	Ã Õ
IdRolMercaderiaÔ	Ô	Õ ‹
}Ô	Ô	› ﬁ
,Ô	Ô	ﬁ ﬂ
idCategoriaÔ	Ô	‡ Î
,Ô	Ô	Î Ï+
idsValoresDeCaracteristicasÔ	Ô	Ì à
)Ô	Ô	à â
.Ô	Ô	â ä
ToListÔ	Ô	ä ê
(Ô	Ô	ê ë
)Ô	Ô	ë í
;Ô	Ô	í ì
return
		 
	resultado
		  
;
		  !
}
Ò	Ò	 
catch
Ú	Ú	 
(
Ú	Ú	 
	Exception
Ú	Ú	 
e
Ú	Ú	 
)
Ú	Ú	 
{
Û	Û	 
throw
Ù	Ù	 
new
Ù	Ù	 
LogicaException
Ù	Ù	 )
(
Ù	Ù	) *
$str
Ù	Ù	* ~
,
Ù	Ù	~ 
eÙ	Ù	Ä Å
)Ù	Ù	Å Ç
;Ù	Ù	Ç É
}
ı	ı	 
}
ˆ	ˆ	 	
public
˜	˜	 
List
˜	˜	 
<
˜	˜	 (
Concepto_Negocio_Comercial
˜	˜	 .
>
˜	˜	. /N
@ObtenerConceptosDeNegocioComercialesPorIdsValoresCaracteristicas
˜	˜	0 p
(
˜	˜	p q
int
˜	˜	q t
[
˜	˜	t u
]
˜	˜	u v*
idsValoresDeCaracteristicas˜	˜	w í
)˜	˜	í ì
{
¯	¯	 	
try
˘	˘	 
{
˙	˙	 
List
˚	˚	 
<
˚	˚	 (
Concepto_Negocio_Comercial
˚	˚	 /
>
˚	˚	/ 0
	resultado
˚	˚	1 :
=
˚	˚	; <"
_conceptoRepositorio
˚	˚	= Q
.
˚	˚	Q RX
IObtenerConceptosDeNegociosComercialesPorRolesYIdsValoresDeCaracteristicas˚	˚	R õ
(˚	˚	õ ú
new˚	˚	ú ü
int˚	˚	† £
[˚	˚	£ §
]˚	˚	§ •
{˚	˚	¶ ß 
ConceptoSettings˚	˚	® ∏
.˚	˚	∏ π
Default˚	˚	π ¿
.˚	˚	¿ ¡
IdRolMercaderia˚	˚	¡ –
}˚	˚	— “
,˚	˚	“ ”+
idsValoresDeCaracteristicas˚	˚	‘ Ô
)˚	˚	Ô 
.˚	˚	 Ò
ToList˚	˚	Ò ˜
(˚	˚	˜ ¯
)˚	˚	¯ ˘
;˚	˚	˘ ˙
return
¸	¸	 
	resultado
¸	¸	  
;
¸	¸	  !
}
˝	˝	 
catch
˛	˛	 
(
˛	˛	 
	Exception
˛	˛	 
e
˛	˛	 
)
˛	˛	 
{
ˇ	ˇ	 
throw
Ä
Ä
 
new
Ä
Ä
 
LogicaException
Ä
Ä
 )
(
Ä
Ä
) *
$str
Ä
Ä
* r
,
Ä
Ä
r s
e
Ä
Ä
t u
)
Ä
Ä
u v
;
Ä
Ä
v w
}
Å
Å
 
}
Ç
Ç
 	
public
É
É
 
List
É
É
 
<
É
É
 (
Concepto_Negocio_Comercial
É
É
 .
>
É
É
. /W
IObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoria
É
É
0 y
(
É
É
y z
int
É
É
z }
idConceptoBasicoÉ
É
~ é
,É
É
é è
intÉ
É
ê ì
idCategoriaÉ
É
î ü
)É
É
ü †
{
Ñ
Ñ
 	
try
Ö
Ö
 
{
Ü
Ü
 
List
á
á
 
<
á
á
 (
Concepto_Negocio_Comercial
á
á
 /
>
á
á
/ 0
	resultado
á
á
1 :
=
á
á
; <"
_conceptoRepositorio
á
á
= Q
.
á
á
Q RX
IObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaá
á
R õ
(á
á
õ ú
newá
á
ú ü
intá
á
† £
[á
á
£ §
]á
á
§ •
{á
á
¶ ß 
ConceptoSettingsá
á
® ∏
.á
á
∏ π
Defaultá
á
π ¿
.á
á
¿ ¡
IdRolMercaderiaá
á
¡ –
}á
á
— “
,á
á
“ ”
idCategoriaá
á
‘ ﬂ
,á
á
ﬂ ‡ 
idConceptoBasicoá
á
· Ò
)á
á
Ò Ú
.á
á
Ú Û
ToListá
á
Û ˘
(á
á
˘ ˙
)á
á
˙ ˚
;á
á
˚ ¸
return
à
à
 
	resultado
à
à
  
;
à
à
  !
}
â
â
 
catch
ä
ä
 
(
ä
ä
 
	Exception
ä
ä
 
e
ä
ä
 
)
ä
ä
 
{
ã
ã
 
throw
å
å
 
new
å
å
 
LogicaException
å
å
 )
(
å
å
) *
$str
å
å
* ~
,
å
å
~ 
eå
å
Ä Å
)å
å
Å Ç
;å
å
Ç É
}
ç
ç
 
}
é
é
 	
public
è
è
 
List
è
è
 
<
è
è
 (
Concepto_Negocio_Comercial
è
è
 .
>
è
è
. /K
=ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasico
è
è
0 m
(
è
è
m n
int
è
è
n q
idConceptoBasicoè
è
r Ç
)è
è
Ç É
{
ê
ê
 	
try
ë
ë
 
{
í
í
 
List
ì
ì
 
<
ì
ì
 (
Concepto_Negocio_Comercial
ì
ì
 /
>
ì
ì
/ 0
	resultado
ì
ì
1 :
=
ì
ì
; <"
_conceptoRepositorio
ì
ì
= Q
.
ì
ì
Q RL
=ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoì
ì
R è
(ì
ì
è ê
newì
ì
ê ì
intì
ì
î ó
[ì
ì
ó ò
]ì
ì
ò ô
{ì
ì
ö õ 
ConceptoSettingsì
ì
ú ¨
.ì
ì
¨ ≠
Defaultì
ì
≠ ¥
.ì
ì
¥ µ
IdRolMercaderiaì
ì
µ ƒ
}ì
ì
≈ ∆
,ì
ì
∆ « 
idConceptoBasicoì
ì
» ÿ
)ì
ì
ÿ Ÿ
.ì
ì
Ÿ ⁄
ToListì
ì
⁄ ‡
(ì
ì
‡ ·
)ì
ì
· ‚
;ì
ì
‚ „
return
î
î
 
	resultado
î
î
  
;
î
î
  !
}
ï
ï
 
catch
ñ
ñ
 
(
ñ
ñ
 
	Exception
ñ
ñ
 
e
ñ
ñ
 
)
ñ
ñ
 
{
ó
ó
 
throw
ò
ò
 
new
ò
ò
 
LogicaException
ò
ò
 )
(
ò
ò
) *
$str
ò
ò
* u
,
ò
ò
u v
e
ò
ò
w x
)
ò
ò
x y
;
ò
ò
y z
}
ô
ô
 
}
ö
ö
 	
public
ú
ú
 
List
ú
ú
 
<
ú
ú
 (
Concepto_Negocio_Comercial
ú
ú
 .
>
ú
ú
. /F
8ObtenerConceptosDeNegocioComercialesPorRolesYIdCategoria
ú
ú
0 h
(
ú
ú
h i
int
ú
ú
i l
idCategoria
ú
ú
m x
)
ú
ú
x y
{
ù
ù
 	
try
û
û
 
{
ü
ü
 
List
†
†
 
<
†
†
 (
Concepto_Negocio_Comercial
†
†
 /
>
†
†
/ 0
	resultado
†
†
1 :
=
†
†
; <"
_conceptoRepositorio
†
†
= Q
.
†
†
Q RG
8ObtenerConceptosDeNegocioComercialesPorRolesYIdCategoria†
†
R ä
(†
†
ä ã
new†
†
ã é
int†
†
è í
[†
†
í ì
]†
†
ì î
{†
†
ï ñ 
ConceptoSettings†
†
ó ß
.†
†
ß ®
Default†
†
® Ø
.†
†
Ø ∞
IdRolMercaderia†
†
∞ ø
}†
†
¿ ¡
,†
†
¡ ¬
idCategoria†
†
√ Œ
)†
†
Œ œ
.†
†
œ –
ToList†
†
– ÷
(†
†
÷ ◊
)†
†
◊ ÿ
;†
†
ÿ Ÿ
return
°
°
 
	resultado
°
°
  
;
°
°
  !
}
¢
¢
 
catch
£
£
 
(
£
£
 
	Exception
£
£
 
e
£
£
 
)
£
£
 
{
§
§
 
throw
•
•
 
new
•
•
 
LogicaException
•
•
 )
(
•
•
) *
$str
•
•
* o
,
•
•
o p
e
•
•
q r
)
•
•
r s
;
•
•
s t
}
¶
¶
 
}
ß
ß
 	
public
©
©
 
List
©
©
 
<
©
©
 (
Concepto_Negocio_Comercial
©
©
 .
>
©
©
. /:
,ObtenerConceptosDeNegocioComercialesPorRoles
©
©
0 \
(
©
©
\ ]
)
©
©
] ^
{
™
™
 	
try
´
´
 
{
¨
¨
 
List
≠
≠
 
<
≠
≠
 (
Concepto_Negocio_Comercial
≠
≠
 /
>
≠
≠
/ 0
	resultado
≠
≠
1 :
=
≠
≠
; <"
_conceptoRepositorio
≠
≠
= Q
.
≠
≠
Q R:
,ObtenerConceptosDeNegocioComercialesPorRoles
≠
≠
R ~
(
≠
≠
~ 
new≠
≠
 Ç
int≠
≠
É Ü
[≠
≠
Ü á
]≠
≠
á à
{≠
≠
â ä 
ConceptoSettings≠
≠
ã õ
.≠
≠
õ ú
Default≠
≠
ú £
.≠
≠
£ §
IdRolMercaderia≠
≠
§ ≥
}≠
≠
¥ µ
)≠
≠
µ ∂
.≠
≠
∂ ∑
ToList≠
≠
∑ Ω
(≠
≠
Ω æ
)≠
≠
æ ø
;≠
≠
ø ¿
return
Æ
Æ
 
	resultado
Æ
Æ
  
;
Æ
Æ
  !
}
Ø
Ø
 
catch
∞
∞
 
(
∞
∞
 
	Exception
∞
∞
 
e
∞
∞
 
)
∞
∞
 
{
±
±
 
throw
≤
≤
 
new
≤
≤
 
LogicaException
≤
≤
 )
(
≤
≤
) *
$str
≤
≤
* ^
,
≤
≤
^ _
e
≤
≤
` a
)
≤
≤
a b
;
≤
≤
b c
}
≥
≥
 
}
¥
¥
 	
public
π
π
 
List
π
π
 
<
π
π
 (
Concepto_Negocio_Comercial
π
π
 .
>
π
π
. /A
3ObtenerConceptosNegociosComercialesConStockYPrecios
π
π
0 c
(
π
π
c d
long
π
π
d h,
idTransaccionInventarioFisicoπ
π
i Ü
,π
π
Ü á
intπ
π
à ã7
'idActorNegocioInternoQueTieneLosPreciosπ
π
å ≥
,π
π
≥ ¥
intπ
π
µ ∏
?π
π
∏ π 
idConceptoBasicoπ
π
∫  
,π
π
  À
intπ
π
Ã œ
?π
π
œ –
idCategoriaπ
π
— ‹
,π
π
‹ ›
intπ
π
ﬁ ·
[π
π
· ‚
]π
π
‚ „(
idValoresCaracteristicasπ
π
‰ ¸
)π
π
¸ ˝
{
∫
∫
 	
try
ª
ª
 
{
º
º
 
List
Ω
Ω
 
<
Ω
Ω
 (
Concepto_Negocio_Comercial
Ω
Ω
 /
>
Ω
Ω
/ 0
	resultado
Ω
Ω
1 :
=
Ω
Ω
; <
null
Ω
Ω
= A
;
Ω
Ω
A B
if
æ
æ
 
(
æ
æ
 &
idValoresCaracteristicas
æ
æ
 ,
!=
æ
æ
- /
null
æ
æ
0 4
)
æ
æ
4 5
{
ø
ø
 &
idValoresCaracteristicas
¿
¿
 ,
=
¿
¿
- .&
idValoresCaracteristicas
¿
¿
/ G
.
¿
¿
G H
Where
¿
¿
H M
(
¿
¿
M N
id
¿
¿
N P
=>
¿
¿
Q S
id
¿
¿
T V
>
¿
¿
W X
$num
¿
¿
Y Z
)
¿
¿
Z [
.
¿
¿
[ \
ToArray
¿
¿
\ c
(
¿
¿
c d
)
¿
¿
d e
;
¿
¿
e f
if
¡
¡
 
(
¡
¡
 &
idValoresCaracteristicas
¡
¡
 0
.
¡
¡
0 1
Length
¡
¡
1 7
>
¡
¡
8 9
$num
¡
¡
: ;
)
¡
¡
; <
{
¬
¬
 
if
√
√
 
(
√
√
 
idConceptoBasico
√
√
 ,
!=
√
√
- /
null
√
√
0 4
)
√
√
4 5
{
ƒ
ƒ
 
if
≈
≈
 
(
≈
≈
  
idCategoria
≈
≈
  +
!=
≈
≈
, .
null
≈
≈
/ 3
)
≈
≈
3 4
{
∆
∆
 
	resultado
«
«
  )
=
«
«
* +â
zObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicasIncluyendoStockYPrecios«
«
, ¶
(«
«
¶ ß-
idTransaccionInventarioFisico«
«
ß ƒ
,«
«
ƒ ≈7
'idActorNegocioInternoQueTieneLosPrecios«
«
∆ Ì
,«
«
Ì Ó
(«
«
Ô 
int«
«
 Û
)«
«
Û Ù 
idConceptoBasico«
«
Ù Ñ
,«
«
Ñ Ö
(«
«
Ü á
int«
«
á ä
)«
«
ä ã
idCategoria«
«
ã ñ
,«
«
ñ ó(
idValoresCaracteristicas«
«
ò ∞
)«
«
∞ ±
;«
«
± ≤
return
»
»
  &
	resultado
»
»
' 0
;
»
»
0 1
}
…
…
 
else
 
 
  
{
À
À
 
	resultado
Ã
Ã
  )
=
Ã
Ã
* +}
nObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicasIncluyendoStockYPreciosÃ
Ã
, ö
(Ã
Ã
ö õ-
idTransaccionInventarioFisicoÃ
Ã
õ ∏
,Ã
Ã
∏ π7
'idActorNegocioInternoQueTieneLosPreciosÃ
Ã
∫ ·
,Ã
Ã
· ‚
(Ã
Ã
„ ‰
intÃ
Ã
‰ Á
)Ã
Ã
Á Ë 
idConceptoBasicoÃ
Ã
Ë ¯
,Ã
Ã
¯ ˘(
idValoresCaracteristicasÃ
Ã
˙ í
)Ã
Ã
í ì
;Ã
Ã
ì î
return
Õ
Õ
  &
	resultado
Õ
Õ
' 0
;
Õ
Õ
0 1
}
Œ
Œ
 
}
œ
œ
 
else
–
–
 
{
—
—
 
if
“
“
 
(
“
“
  
idCategoria
“
“
  +
!=
“
“
, .
null
“
“
/ 3
)
“
“
3 4
{
”
”
 
	resultado
‘
‘
  )
=
‘
‘
* +r
cObtenerConceptosDeNegocioComercialesPorIdCategoriaYIdsValoresCaracteristicasIncluyendoStockYPrecios‘
‘
, è
(‘
‘
è ê-
idTransaccionInventarioFisico‘
‘
ê ≠
,‘
‘
≠ Æ7
'idActorNegocioInternoQueTieneLosPrecios‘
‘
Ø ÷
,‘
‘
÷ ◊
(‘
‘
ÿ Ÿ
int‘
‘
Ÿ ‹
)‘
‘
‹ ›
idCategoria‘
‘
› Ë
,‘
‘
Ë È(
idValoresCaracteristicas‘
‘
Í Ç
)‘
‘
Ç É
;‘
‘
É Ñ
return
’
’
  &
	resultado
’
’
' 0
;
’
’
0 1
}
÷
÷
 
else
◊
◊
  
{
ÿ
ÿ
 
	resultado
Ÿ
Ÿ
  )
=
Ÿ
Ÿ
* +f
WObtenerConceptosDeNegocioComercialesPorIdsValoresCaracteristicasIncluyendoStockYPreciosŸ
Ÿ
, É
(Ÿ
Ÿ
É Ñ-
idTransaccionInventarioFisicoŸ
Ÿ
Ñ °
,Ÿ
Ÿ
° ¢7
'idActorNegocioInternoQueTieneLosPreciosŸ
Ÿ
£  
,Ÿ
Ÿ
  À(
idValoresCaracteristicasŸ
Ÿ
Ã ‰
)Ÿ
Ÿ
‰ Â
;Ÿ
Ÿ
Â Ê
;Ÿ
Ÿ
Á Ë
return
⁄
⁄
  &
	resultado
⁄
⁄
' 0
;
⁄
⁄
0 1
}
€
€
 
}
‹
‹
 
}
›
›
 
}
ﬁ
ﬁ
 
else
ﬂ
ﬂ
 
{
‡
‡
 
if
·
·
 
(
·
·
 
idConceptoBasico
·
·
 (
!=
·
·
) +
null
·
·
, 0
)
·
·
0 1
{
‚
‚
 
if
„
„
 
(
„
„
 
idCategoria
„
„
 '
!=
„
„
( *
null
„
„
+ /
)
„
„
/ 0
{
‰
‰
 
	resultado
Â
Â
 %
=
Â
Â
& 'o
`ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaIncluyendoStockYPreciosÂ
Â
( à
(Â
Â
à â-
idTransaccionInventarioFisicoÂ
Â
â ¶
,Â
Â
¶ ß7
'idActorNegocioInternoQueTieneLosPreciosÂ
Â
® œ
,Â
Â
œ –
(Â
Â
— “
intÂ
Â
“ ’
)Â
Â
’ ÷ 
idConceptoBasicoÂ
Â
÷ Ê
,Â
Â
Ê Á
(Â
Â
Ë È
intÂ
Â
È Ï
)Â
Â
Ï Ì
idCategoriaÂ
Â
Ì ¯
)Â
Â
¯ ˘
;Â
Â
˘ ˙
return
Ê
Ê
 "
	resultado
Ê
Ê
# ,
;
Ê
Ê
, -
}
Á
Á
 
else
Ë
Ë
 
{
È
È
 
	resultado
Í
Í
 %
=
Í
Í
& 'b
TObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoIncluyendoStockYPrecios
Í
Í
( |
(
Í
Í
| },
idTransaccionInventarioFisicoÍ
Í
} ö
,Í
Í
ö õ7
'idActorNegocioInternoQueTieneLosPreciosÍ
Í
ú √
,Í
Í
√ ƒ
(Í
Í
≈ ∆
intÍ
Í
∆ …
)Í
Í
…   
idConceptoBasicoÍ
Í
  ⁄
)Í
Í
⁄ €
;Í
Í
€ ‹
return
Î
Î
 "
	resultado
Î
Î
# ,
;
Î
Î
, -
}
Ï
Ï
 
}
Ì
Ì
 
else
Ó
Ó
 
{
Ô
Ô
 
if


 
(


 
idCategoria


 '
!=


( *
null


+ /
)


/ 0
{
Ò
Ò
 
	resultado
Ú
Ú
 %
=
Ú
Ú
& ']
OObtenerConceptosDeNegocioComercialesPorRolesYIdCategoriaIncluyendoStockYPrecios
Ú
Ú
( w
(
Ú
Ú
w x,
idTransaccionInventarioFisicoÚ
Ú
x ï
,Ú
Ú
ï ñ7
'idActorNegocioInternoQueTieneLosPreciosÚ
Ú
ó æ
,Ú
Ú
æ ø
(Ú
Ú
¿ ¡
intÚ
Ú
¡ ƒ
)Ú
Ú
ƒ ≈
idCategoriaÚ
Ú
≈ –
)Ú
Ú
– —
;Ú
Ú
— “
return
Û
Û
 "
	resultado
Û
Û
# ,
;
Û
Û
, -
}
Ù
Ù
 
else
ı
ı
 
{
ˆ
ˆ
 
	resultado
˜
˜
 %
=
˜
˜
& 'I
;ObtenerConceptosDeNegocioComercialesIncluyendoStockYPrecios
˜
˜
( c
(
˜
˜
c d,
idTransaccionInventarioFisico˜
˜
d Å
,˜
˜
Å Ç7
'idActorNegocioInternoQueTieneLosPrecios˜
˜
É ™
)˜
˜
™ ´
;˜
˜
´ ¨
return
¯
¯
 "
	resultado
¯
¯
# ,
;
¯
¯
, -
}
˘
˘
 
}
˙
˙
 
}
˚
˚
 
return
¸
¸
 
	resultado
¸
¸
  
;
¸
¸
  !
}
˝
˝
 
catch
˛
˛
 
(
˛
˛
 
	Exception
˛
˛
 
e
˛
˛
 
)
˛
˛
 
{
ˇ
ˇ
 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* ^
,
ÄÄ^ _
e
ÄÄ` a
)
ÄÄa b
;
ÄÄb c
}
ÅÅ 
}
ÇÇ 	
public
ÉÉ 
List
ÉÉ 
<
ÉÉ (
Concepto_Negocio_Comercial
ÉÉ .
>
ÉÉ. /â
zObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicasIncluyendoStockYPreciosÉÉ0 ™
(ÉÉ™ ´
longÉÉ´ Ø1
!IdTipoTransaccionInventarioActualÉÉ∞ —
,ÉÉ— “
intÉÉ” ÷7
'idActorNegocioInternoQueTieneLosPreciosÉÉ◊ ˛
,ÉÉ˛ ˇ
intÉÉÄ É 
idConceptoBasicoÉÉÑ î
,ÉÉî ï
intÉÉñ ô
idCategoriaÉÉö •
,ÉÉ• ¶
intÉÉß ™
[ÉÉ™ ´
]ÉÉ´ ¨+
idsValoresDeCaracteristicasÉÉ≠ »
)ÉÉ» …
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
List
áá 
<
áá (
Concepto_Negocio_Comercial
áá /
>
áá/ 0
	resultado
áá1 :
=
áá; <"
_conceptoRepositorio
áá= Q
.
ááQ Rà
yObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaYIdsValoresCaracteristicasInclyendoStockYPreciosááR À
(ááÀ Ã1
!IdTipoTransaccionInventarioActualááÃ Ì
,ááÌ Ó7
'idActorNegocioInternoQueTieneLosPreciosááÔ ñ
,ááñ ó
newááò õ
intááú ü
[ááü †
]áá† °
{áá¢ £ 
ConceptoSettingsáá§ ¥
.áá¥ µ
Defaultááµ º
.ááº Ω
IdRolMercaderiaááΩ Ã
}ááÕ Œ
,ááŒ œ
MaestroSettingsáá– ﬂ
.ááﬂ ‡
Defaultáá‡ Á
.ááÁ Ë,
IdDetalleMaestroTarifaNormalááË Ñ
,ááÑ Ö
newááÜ â
intááä ç
[ááç é
]ááé è
{ááê ë#
TransaccionSettingsááí •
.áá• ¶
Defaultáá¶ ≠
.áá≠ Æ7
'IdTipoTransaccionIngresoBienesPorCompraááÆ ’
}áá÷ ◊
,áá◊ ÿ 
idConceptoBasicoááŸ È
,ááÈ Í
idCategoriaááÎ ˆ
,ááˆ ˜+
idsValoresDeCaracteristicasáá¯ ì
)ááì î
.ááî ï
ToListááï õ
(ááõ ú
)ááú ù
;ááù û
return
àà 
	resultado
àà  
;
àà  !
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
new
åå 
LogicaException
åå )
(
åå) *
$str
åå* r
,
åår s
e
ååt u
)
ååu v
;
ååv w
}
çç 
}
éé 	
public
èè 
List
èè 
<
èè (
Concepto_Negocio_Comercial
èè .
>
èè. /}
nObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicasIncluyendoStockYPreciosèè0 û
(èèû ü
longèèü £1
!IdTipoTransaccionInventarioActualèè§ ≈
,èè≈ ∆
intèè«  7
'idActorNegocioInternoQueTieneLosPreciosèèÀ Ú
,èèÚ Û
intèèÙ ˜ 
idConceptoBasicoèè¯ à
,èèà â
intèèä ç
[èèç é
]èèé è+
idsValoresDeCaracteristicasèèê ´
)èè´ ¨
{
êê 	
try
ëë 
{
íí 
List
ìì 
<
ìì (
Concepto_Negocio_Comercial
ìì /
>
ìì/ 0
	resultado
ìì1 :
=
ìì; <"
_conceptoRepositorio
ìì= Q
.
ììQ R|
mObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdsValoresCaracteristicasInclyendoStockYPreciosììR ø
(ììø ¿1
!IdTipoTransaccionInventarioActualìì¿ ·
,ìì· ‚7
'idActorNegocioInternoQueTieneLosPreciosìì„ ä
,ììä ã
newììå è
intììê ì
[ììì î
]ììî ï
{ììñ ó 
ConceptoSettingsììò ®
.ìì® ©
Defaultìì© ∞
.ìì∞ ±
IdRolMercaderiaìì± ¿
}ìì¡ ¬
,ìì¬ √
MaestroSettingsììƒ ”
.ìì” ‘
Defaultìì‘ €
.ìì€ ‹,
IdDetalleMaestroTarifaNormalìì‹ ¯
,ìì¯ ˘
newìì˙ ˝
intìì˛ Å
[ììÅ Ç
]ììÇ É
{ììÑ Ö#
TransaccionSettingsììÜ ô
.ììô ö
Defaultììö °
.ìì° ¢7
'IdTipoTransaccionIngresoBienesPorCompraìì¢ …
}ìì  À
,ììÀ Ã 
idConceptoBasicoììÕ ›
,ìì› ﬁ+
idsValoresDeCaracteristicasììﬂ ˙
)ìì˙ ˚
.ìì˚ ¸
ToListìì¸ Ç
(ììÇ É
)ììÉ Ñ
;ììÑ Ö
return
îî 
	resultado
îî  
;
îî  !
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* r
,
òòr s
e
òòt u
)
òòu v
;
òòv w
}
ôô 
}
öö 	
public
õõ 
List
õõ 
<
õõ (
Concepto_Negocio_Comercial
õõ .
>
õõ. /r
cObtenerConceptosDeNegocioComercialesPorIdCategoriaYIdsValoresCaracteristicasIncluyendoStockYPreciosõõ0 ì
(õõì î
longõõî ò-
idTransaccionInventarioFisicoõõô ∂
,õõ∂ ∑
intõõ∏ ª7
'idActorNegocioInternoQueTieneLosPreciosõõº „
,õõ„ ‰
intõõÂ Ë
idCategoriaõõÈ Ù
,õõÙ ı
intõõˆ ˘
[õõ˘ ˙
]õõ˙ ˚+
idsValoresDeCaracteristicasõõ¸ ó
)õõó ò
{
úú 	
try
ùù 
{
ûû 
List
üü 
<
üü (
Concepto_Negocio_Comercial
üü /
>
üü/ 0
	resultado
üü1 :
=
üü; <"
_conceptoRepositorio
üü= Q
.
üüQ Rz
kObtenerConceptosDeNegociosComercialesPorRolesYIdCategoriaYIdsValoresDeCaracteristicasInclyendoStockYPreciosüüR Ω
(üüΩ æ-
idTransaccionInventarioFisicoüüæ €
,üü€ ‹7
'idActorNegocioInternoQueTieneLosPreciosüü› Ñ
,üüÑ Ö
newüüÜ â
intüüä ç
[üüç é
]üüé è
{üüê ë 
ConceptoSettingsüüí ¢
.üü¢ £
Defaultüü£ ™
.üü™ ´
IdRolMercaderiaüü´ ∫
}üüª º
,üüº Ω
MaestroSettingsüüæ Õ
.üüÕ Œ
DefaultüüŒ ’
.üü’ ÷,
IdDetalleMaestroTarifaNormalüü÷ Ú
,üüÚ Û
newüüÙ ˜
intüü¯ ˚
[üü˚ ¸
]üü¸ ˝
{üü˛ ˇ#
TransaccionSettingsüüÄ ì
.üüì î
Defaultüüî õ
.üüõ ú7
'IdTipoTransaccionIngresoBienesPorCompraüüú √
}üüƒ ≈
,üü≈ ∆
idCategoriaüü« “
,üü“ ”+
idsValoresDeCaracteristicasüü‘ Ô
)üüÔ 
.üü Ò
ToListüüÒ ˜
(üü˜ ¯
)üü¯ ˘
;üü˘ ˙
return
†† 
	resultado
††  
;
††  !
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
e
¢¢ 
)
¢¢ 
{
££ 
throw
§§ 
new
§§ 
LogicaException
§§ )
(
§§) *
$str
§§* r
,
§§r s
e
§§t u
)
§§u v
;
§§v w
}
•• 
}
¶¶ 	
public
ßß 
List
ßß 
<
ßß (
Concepto_Negocio_Comercial
ßß .
>
ßß. /f
WObtenerConceptosDeNegocioComercialesPorIdsValoresCaracteristicasIncluyendoStockYPreciosßß0 á
(ßßá à
longßßà å-
idTransaccionInventarioFisicoßßç ™
,ßß™ ´
intßß¨ Ø7
'idActorNegocioInternoQueTieneLosPreciosßß∞ ◊
,ßß◊ ÿ
intßßŸ ‹
[ßß‹ ›
]ßß› ﬁ+
idsValoresDeCaracteristicasßßﬂ ˙
)ßß˙ ˚
{
®® 	
try
©© 
{
™™ 
List
´´ 
<
´´ (
Concepto_Negocio_Comercial
´´ /
>
´´/ 0
	resultado
´´1 :
=
´´; <"
_conceptoRepositorio
´´= Q
.
´´Q Rn
_ObtenerConceptosDeNegociosComercialesPorRolesYIdsValoresDeCaracteristicasInclyendoStockYPrecios´´R ±
(´´± ≤-
idTransaccionInventarioFisico´´≤ œ
,´´œ –7
'idActorNegocioInternoQueTieneLosPrecios´´— ¯
,´´¯ ˘
new´´˙ ˝
int´´˛ Å
[´´Å Ç
]´´Ç É
{´´Ñ Ö 
ConceptoSettings´´Ü ñ
.´´ñ ó
Default´´ó û
.´´û ü
IdRolMercaderia´´ü Æ
}´´Ø ∞
,´´∞ ±
MaestroSettings´´≤ ¡
.´´¡ ¬
Default´´¬ …
.´´…  ,
IdDetalleMaestroTarifaNormal´´  Ê
,´´Ê Á
new´´Ë Î
int´´Ï Ô
[´´Ô 
]´´ Ò
{´´Ú Û#
TransaccionSettings´´Ù á
.´´á à
Default´´à è
.´´è ê7
'IdTipoTransaccionIngresoBienesPorCompra´´ê ∑
}´´∏ π
,´´π ∫+
idsValoresDeCaracteristicas´´ª ÷
)´´÷ ◊
.´´◊ ÿ
ToList´´ÿ ﬁ
(´´ﬁ ﬂ
)´´ﬂ ‡
;´´‡ ·
return
¨¨ 
	resultado
¨¨  
;
¨¨  !
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ØØ 
throw
∞∞ 
new
∞∞ 
LogicaException
∞∞ )
(
∞∞) *
$str
∞∞* r
,
∞∞r s
e
∞∞t u
)
∞∞u v
;
∞∞v w
}
±± 
}
≤≤ 	
public
≥≥ 
List
≥≥ 
<
≥≥ (
Concepto_Negocio_Comercial
≥≥ .
>
≥≥. /o
`ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaIncluyendoStockYPrecios≥≥0 ê
(≥≥ê ë
long≥≥ë ï-
idTransaccionInventarioFisico≥≥ñ ≥
,≥≥≥ ¥
int≥≥µ ∏7
'idActorNegocioInternoQueTieneLosPrecios≥≥π ‡
,≥≥‡ ·
int≥≥‚ Â 
idConceptoBasico≥≥Ê ˆ
,≥≥ˆ ˜
int≥≥¯ ˚
idCategoria≥≥¸ á
)≥≥á à
{
¥¥ 	
try
µµ 
{
∂∂ 
List
∑∑ 
<
∑∑ (
Concepto_Negocio_Comercial
∑∑ /
>
∑∑/ 0
	resultado
∑∑1 :
=
∑∑; <"
_conceptoRepositorio
∑∑= Q
.
∑∑Q Rn
_ObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoYIdCategoriaInclyendoStockYPrecios∑∑R ±
(∑∑± ≤-
idTransaccionInventarioFisico∑∑≤ œ
,∑∑œ –7
'idActorNegocioInternoQueTieneLosPrecios∑∑— ¯
,∑∑¯ ˘
new∑∑˙ ˝
int∑∑˛ Å
[∑∑Å Ç
]∑∑Ç É
{∑∑Ñ Ö 
ConceptoSettings∑∑Ü ñ
.∑∑ñ ó
Default∑∑ó û
.∑∑û ü
IdRolMercaderia∑∑ü Æ
}∑∑Ø ∞
,∑∑∞ ±
MaestroSettings∑∑≤ ¡
.∑∑¡ ¬
Default∑∑¬ …
.∑∑…  ,
IdDetalleMaestroTarifaNormal∑∑  Ê
,∑∑Ê Á
new∑∑Ë Î
int∑∑Ï Ô
[∑∑Ô 
]∑∑ Ò
{∑∑Ú Û#
TransaccionSettings∑∑Ù á
.∑∑á à
Default∑∑à è
.∑∑è ê7
'IdTipoTransaccionIngresoBienesPorCompra∑∑ê ∑
}∑∑∏ π
,∑∑π ∫ 
idConceptoBasico∑∑ª À
,∑∑À Ã
idCategoria∑∑Õ ÿ
)∑∑ÿ Ÿ
.∑∑Ÿ ⁄
ToList∑∑⁄ ‡
(∑∑‡ ·
)∑∑· ‚
;∑∑‚ „
return
∏∏ 
	resultado
∏∏  
;
∏∏  !
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
ªª 
throw
ºº 
new
ºº 
LogicaException
ºº )
(
ºº) *
$str
ºº* r
,
ººr s
e
ººt u
)
ººu v
;
ººv w
}
ΩΩ 
}
ææ 	
public
øø 
List
øø 
<
øø (
Concepto_Negocio_Comercial
øø .
>
øø. /c
TObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoIncluyendoStockYPreciosøø0 Ñ
(øøÑ Ö
longøøÖ â-
idTransaccionInventarioFisicoøøä ß
,øøß ®
intøø© ¨7
'idActorNegocioInternoQueTieneLosPreciosøø≠ ‘
,øø‘ ’
intøø÷ Ÿ 
idConceptoBasicoøø⁄ Í
)øøÍ Î
{
¿¿ 	
try
¡¡ 
{
¬¬ 
List
√√ 
<
√√ (
Concepto_Negocio_Comercial
√√ /
>
√√/ 0
	resultado
√√1 :
=
√√; <"
_conceptoRepositorio
√√= Q
.
√√Q Rb
SObtenerConceptosDeNegocioComercialesPorRolesYIdConceptoBasicoInclyendoStockYPrecios√√R •
(√√• ¶-
idTransaccionInventarioFisico√√¶ √
,√√√ ƒ7
'idActorNegocioInternoQueTieneLosPrecios√√≈ Ï
,√√Ï Ì
new√√Ó Ò
int√√Ú ı
[√√ı ˆ
]√√ˆ ˜
{√√¯ ˘ 
ConceptoSettings√√˙ ä
.√√ä ã
Default√√ã í
.√√í ì
IdRolMercaderia√√ì ¢
}√√£ §
,√√§ •
MaestroSettings√√¶ µ
.√√µ ∂
Default√√∂ Ω
.√√Ω æ,
IdDetalleMaestroTarifaNormal√√æ ⁄
,√√⁄ €
new√√‹ ﬂ
int√√‡ „
[√√„ ‰
]√√‰ Â
{√√Ê Á#
TransaccionSettings√√Ë ˚
.√√˚ ¸
Default√√¸ É
.√√É Ñ7
'IdTipoTransaccionIngresoBienesPorCompra√√Ñ ´
}√√¨ ≠
,√√≠ Æ 
idConceptoBasico√√Ø ø
)√√ø ¿
.√√¿ ¡
ToList√√¡ «
(√√« »
)√√» …
;√√…  
return
ƒƒ 
	resultado
ƒƒ  
;
ƒƒ  !
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* r
,
»»r s
e
»»t u
)
»»u v
;
»»v w
}
…… 
}
   	
public
ÀÀ 
List
ÀÀ 
<
ÀÀ (
Concepto_Negocio_Comercial
ÀÀ .
>
ÀÀ. /]
OObtenerConceptosDeNegocioComercialesPorRolesYIdCategoriaIncluyendoStockYPrecios
ÀÀ0 
(ÀÀ Ä
longÀÀÄ Ñ-
idTransaccionInventarioFisicoÀÀÖ ¢
,ÀÀ¢ £
intÀÀ§ ß7
'idActorNegocioInternoQueTieneLosPreciosÀÀ® œ
,ÀÀœ –
intÀÀ— ‘
idCategoriaÀÀ’ ‡
)ÀÀ‡ ·
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ 
List
œœ 
<
œœ (
Concepto_Negocio_Comercial
œœ /
>
œœ/ 0
	resultado
œœ1 :
=
œœ; <"
_conceptoRepositorio
œœ= Q
.
œœQ R^
OObtenerConceptosDeNegociosComercialesPorRolesYIdCategoriaInclyendoStockYPreciosœœR °
(œœ° ¢-
idTransaccionInventarioFisicoœœ¢ ø
,œœø ¿7
'idActorNegocioInternoQueTieneLosPreciosœœ¡ Ë
,œœË È
newœœÍ Ì
intœœÓ Ò
[œœÒ Ú
]œœÚ Û
{œœÙ ı 
ConceptoSettingsœœˆ Ü
.œœÜ á
Defaultœœá é
.œœé è
IdRolMercaderiaœœè û
}œœü †
,œœ† °
MaestroSettingsœœ¢ ±
.œœ± ≤
Defaultœœ≤ π
.œœπ ∫,
IdDetalleMaestroTarifaNormalœœ∫ ÷
,œœ÷ ◊
newœœÿ €
intœœ‹ ﬂ
[œœﬂ ‡
]œœ‡ ·
{œœ‚ „#
TransaccionSettingsœœ‰ ˜
.œœ˜ ¯
Defaultœœ¯ ˇ
.œœˇ Ä7
'IdTipoTransaccionIngresoBienesPorCompraœœÄ ß
}œœ® ©
,œœ© ™
idCategoriaœœ´ ∂
)œœ∂ ∑
.œœ∑ ∏
ToListœœ∏ æ
(œœæ ø
)œœø ¿
;œœ¿ ¡
return
–– 
	resultado
––  
;
––  !
}
—— 
catch
““ 
(
““ 
	Exception
““ 
e
““ 
)
““ 
{
”” 
throw
’’ 
new
’’ 
LogicaException
’’ )
(
’’) *
$str
’’* ^
,
’’^ _
e
’’` a
)
’’a b
;
’’b c
}
÷÷ 
}
◊◊ 	
public
ÿÿ 
List
ÿÿ 
<
ÿÿ (
Concepto_Negocio_Comercial
ÿÿ .
>
ÿÿ. /I
;ObtenerConceptosDeNegocioComercialesIncluyendoStockYPrecios
ÿÿ0 k
(
ÿÿk l
long
ÿÿl p,
idTransaccionInventarioFisicoÿÿq é
,ÿÿé è
intÿÿê ì7
'idActorNegocioInternoQueTieneLosPreciosÿÿî ª
)ÿÿª º
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
List
‹‹ 
<
‹‹ (
Concepto_Negocio_Comercial
‹‹ /
>
‹‹/ 0
	resultado
‹‹1 :
=
‹‹; <"
_conceptoRepositorio
‹‹= Q
.
‹‹Q RR
CObtenerConceptosDeNegociosComercialesPorRolesInclyendoStockYPrecios‹‹R ï
(‹‹ï ñ-
idTransaccionInventarioFisico‹‹ñ ≥
,‹‹≥ ¥7
'idActorNegocioInternoQueTieneLosPrecios‹‹µ ‹
,‹‹‹ ›
new‹‹ﬁ ·
int‹‹‚ Â
[‹‹Â Ê
]‹‹Ê Á
{‹‹Ë È 
ConceptoSettings‹‹Í ˙
.‹‹˙ ˚
Default‹‹˚ Ç
.‹‹Ç É
IdRolMercaderia‹‹É í
}‹‹ì î
,‹‹î ï
MaestroSettings‹‹ñ •
.‹‹• ¶
Default‹‹¶ ≠
.‹‹≠ Æ,
IdDetalleMaestroTarifaNormal‹‹Æ  
,‹‹  À
new‹‹Ã œ
int‹‹– ”
[‹‹” ‘
]‹‹‘ ’
{‹‹÷ ◊#
TransaccionSettings‹‹ÿ Î
.‹‹Î Ï
Default‹‹Ï Û
.‹‹Û Ù7
'IdTipoTransaccionIngresoBienesPorCompra‹‹Ù õ
}‹‹ú ù
)‹‹ù û
.‹‹û ü
ToList‹‹ü •
(‹‹• ¶
)‹‹¶ ß
;‹‹ß ®
return
›› 
	resultado
››  
;
››  !
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
e
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ )
(
‚‚) *
$str
‚‚* ^
,
‚‚^ _
e
‚‚` a
)
‚‚a b
;
‚‚b c
}
„„ 
}
‰‰ 	
public
ËË 
List
ËË 
<
ËË 1
#Selector_Concepto_Negocio_Comercial
ËË 7
>
ËË7 83
%ObtenerConceptosDeNegociosComerciales
ËË9 ^
(
ËË^ _
int
ËË_ b&
modoSeleccionTipoFamilia
ËËc {
,
ËË{ |
intËË} Ä+
informacionSelectorConceptoËËÅ ú
,ËËú ù&
UserProfileSessionDataËËû ¥
sesionDeUsuarioËËµ ƒ
)ËËƒ ≈
{
ÈÈ 	
try
ÍÍ 
{
ÎÎ 
var
ÏÏ %
idTransaccionInventario
ÏÏ +
=
ÏÏ, -
sesionDeUsuario
ÏÏ. =
.
ÏÏ= >'
ObtenerIdInventarioActual
ÏÏ> W
(
ÏÏW X
sesionDeUsuario
ÏÏX g
.
ÏÏg h7
(IdCentroAtencionQueTieneElStockIntegradaÏÏh ê
)ÏÏê ë
;ÏÏë í
var
ÌÌ '
idCentroAtencionDePrecios
ÌÌ -
=
ÌÌ. /
sesionDeUsuario
ÌÌ0 ?
.
ÌÌ? @0
"IdCentroAtencionQueTieneLosPrecios
ÌÌ@ b
;
ÌÌb c
List
ÓÓ 
<
ÓÓ 1
#Selector_Concepto_Negocio_Comercial
ÓÓ 8
>
ÓÓ8 9
	resultado
ÓÓ: C
;
ÓÓC D
var
ÔÔ 
idRol
ÔÔ 
=
ÔÔ 
ConceptoSettings
ÔÔ ,
.
ÔÔ, -
Default
ÔÔ- 4
.
ÔÔ4 5
IdRolMercaderia
ÔÔ5 D
;
ÔÔD E
if
 
(
 &
modoSeleccionTipoFamilia
 ,
==
- /
(
0 1
int
1 4
)
4 5&
ModoSeleccionTipoFamilia
5 M
.
M N
Ambos
N S
)
S T
{
ÒÒ 
	resultado
ÚÚ 
=
ÚÚ 
(
ÚÚ  !)
informacionSelectorConcepto
ÚÚ! <
==
ÚÚ= ?
(
ÚÚ@ A
int
ÚÚA D
)
ÚÚD E)
InformacionSelectorConcepto
ÚÚE `
.
ÚÚ` a
Nombre
ÚÚa g
)
ÚÚg h
?
ÚÚi j"
_conceptoRepositorio
ÚÚk 
.ÚÚ Ä;
+ObtenerConceptosDeNegociosComercialesPorRolÚÚÄ ´
(ÚÚ´ ¨
idRolÚÚ¨ ±
)ÚÚ± ≤
.ÚÚ≤ ≥
ToListÚÚ≥ π
(ÚÚπ ∫
)ÚÚ∫ ª
:ÚÚº Ω$
_conceptoRepositorioÚÚæ “
.ÚÚ“ ”I
9ObtenerConceptosDeNegociosComercialesConStockPrecioPorRolÚÚ” å
(ÚÚå ç
idRolÚÚç í
,ÚÚí ì'
idTransaccionInventarioÚÚî ´
,ÚÚ´ ¨)
idCentroAtencionDePreciosÚÚ≠ ∆
)ÚÚ∆ «
.ÚÚ« »
ToListÚÚ» Œ
(ÚÚŒ œ
)ÚÚœ –
;ÚÚ– —
	resultado
ÛÛ 
.
ÛÛ 
ForEach
ÛÛ %
(
ÛÛ% &
cn
ÛÛ& (
=>
ÛÛ) +
cn
ÛÛ, .
.
ÛÛ. /
SinControlStock
ÛÛ/ >
=
ÛÛ? @
sesionDeUsuario
ÛÛA P
.
ÛÛP Q4
&CentroAtencionQueTieneElStockIntegrada
ÛÛQ w
.
ÛÛw x#
SalidaBienesSinStockÛÛx å
)ÛÛå ç
;ÛÛç é
	resultado
ÙÙ 
.
ÙÙ 
ForEach
ÙÙ %
(
ÙÙ% &
cn
ÙÙ& (
=>
ÙÙ) +
cn
ÙÙ, .
.
ÙÙ. /!
MostrarStockYPrecio
ÙÙ/ B
=
ÙÙC D)
informacionSelectorConcepto
ÙÙE `
==
ÙÙa c
(
ÙÙd e
int
ÙÙe h
)
ÙÙh i*
InformacionSelectorConceptoÙÙi Ñ
.ÙÙÑ Ö!
NombreStockPrecioÙÙÖ ñ
)ÙÙñ ó
;ÙÙó ò
}
ıı 
else
ˆˆ 
{
˜˜ 
	resultado
¯¯ 
=
¯¯ 
(
¯¯  !)
informacionSelectorConcepto
¯¯! <
==
¯¯= ?
(
¯¯@ A
int
¯¯A D
)
¯¯D E)
InformacionSelectorConcepto
¯¯E `
.
¯¯` a
Nombre
¯¯a g
)
¯¯g h
?
¯¯i j"
_conceptoRepositorio
¯¯k 
.¯¯ ÄG
7ObtenerConceptosDeNegociosComercialesPorRolYTipoFamilia¯¯Ä ∑
(¯¯∑ ∏
idRol¯¯∏ Ω
,¯¯Ω æ(
modoSeleccionTipoFamilia¯¯ø ◊
.¯¯◊ ÿ
ToString¯¯ÿ ‡
(¯¯‡ ·
)¯¯· ‚
)¯¯‚ „
.¯¯„ ‰
ToList¯¯‰ Í
(¯¯Í Î
)¯¯Î Ï
:¯¯Ì Ó$
_conceptoRepositorio¯¯Ô É
.¯¯É ÑU
EObtenerConceptosDeNegociosComercialesConStockPrecioPorRolYTipoFamilia¯¯Ñ …
(¯¯…  
idRol¯¯  œ
,¯¯œ –'
idTransaccionInventario¯¯— Ë
,¯¯Ë È)
idCentroAtencionDePrecios¯¯Í É
,¯¯É Ñ(
modoSeleccionTipoFamilia¯¯Ö ù
.¯¯ù û
ToString¯¯û ¶
(¯¯¶ ß
)¯¯ß ®
)¯¯® ©
.¯¯© ™
ToList¯¯™ ∞
(¯¯∞ ±
)¯¯± ≤
;¯¯≤ ≥
	resultado
˘˘ 
.
˘˘ 
ForEach
˘˘ %
(
˘˘% &
cn
˘˘& (
=>
˘˘) +
cn
˘˘, .
.
˘˘. /
SinControlStock
˘˘/ >
=
˘˘? @
sesionDeUsuario
˘˘A P
.
˘˘P Q4
&CentroAtencionQueTieneElStockIntegrada
˘˘Q w
.
˘˘w x#
SalidaBienesSinStock˘˘x å
)˘˘å ç
;˘˘ç é
	resultado
˙˙ 
.
˙˙ 
ForEach
˙˙ %
(
˙˙% &
cn
˙˙& (
=>
˙˙) +
cn
˙˙, .
.
˙˙. /!
MostrarStockYPrecio
˙˙/ B
=
˙˙C D)
informacionSelectorConcepto
˙˙E `
==
˙˙a c
(
˙˙d e
int
˙˙e h
)
˙˙h i*
InformacionSelectorConcepto˙˙i Ñ
.˙˙Ñ Ö!
NombreStockPrecio˙˙Ö ñ
)˙˙ñ ó
;˙˙ó ò
}
˚˚ 
return
¸¸ 
	resultado
¸¸  
;
¸¸  !
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* ]
,
ÄÄ] ^
e
ÄÄ_ `
)
ÄÄ` a
;
ÄÄa b
}
ÅÅ 
}
ÇÇ 	
public
ÉÉ 
List
ÉÉ 
<
ÉÉ 1
#Selector_Concepto_Negocio_Comercial
ÉÉ 7
>
ÉÉ7 8F
8ObtenerConceptosDeNegociosComercialesPorBusquedaConcepto
ÉÉ9 q
(
ÉÉq r
string
ÉÉr x
cadenaBusquedaÉÉy á
,ÉÉá à
intÉÉâ å(
modoSeleccionTipoFamiliaÉÉç •
,ÉÉ• ¶
intÉÉß ™+
informacionSelectorConceptoÉÉ´ ∆
,ÉÉ∆ «&
UserProfileSessionDataÉÉ» ﬁ
sesionDeUsuarioÉÉﬂ Ó
)ÉÉÓ Ô
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
var
áá %
idTransaccionInventario
áá +
=
áá, -
sesionDeUsuario
áá. =
.
áá= >'
ObtenerIdInventarioActual
áá> W
(
ááW X
sesionDeUsuario
ááX g
.
áág h7
(IdCentroAtencionQueTieneElStockIntegradaááh ê
)ááê ë
;ááë í
var
àà '
idCentroAtencionDePrecios
àà -
=
àà. /
sesionDeUsuario
àà0 ?
.
àà? @0
"IdCentroAtencionQueTieneLosPrecios
àà@ b
;
ààb c
List
ââ 
<
ââ 1
#Selector_Concepto_Negocio_Comercial
ââ 8
>
ââ8 9
	resultado
ââ: C
;
ââC D
var
ää 
idRol
ää 
=
ää 
ConceptoSettings
ää ,
.
ää, -
Default
ää- 4
.
ää4 5
IdRolMercaderia
ää5 D
;
ääD E
if
ãã 
(
ãã &
modoSeleccionTipoFamilia
ãã ,
==
ãã- /
(
ãã0 1
int
ãã1 4
)
ãã4 5&
ModoSeleccionTipoFamilia
ãã5 M
.
ããM N
Ambos
ããN S
)
ããS T
{
åå 
	resultado
çç 
=
çç 
(
çç  !)
informacionSelectorConcepto
çç! <
==
çç= ?
(
çç@ A
int
ççA D
)
ççD E)
InformacionSelectorConcepto
ççE `
.
çç` a
Nombre
çça g
)
ççg h
?
ççi j"
_conceptoRepositorio
ççk 
.çç ÄL
<ObtenerConceptosDeNegociosComercialesPorRolYBusquedaConceptoççÄ º
(ççº Ω
idRolççΩ ¬
,çç¬ √
cadenaBusquedaççƒ “
)çç“ ”
.çç” ‘
ToListçç‘ ⁄
(çç⁄ €
)çç€ ‹
:çç› ﬁ$
_conceptoRepositorioççﬂ Û
.ççÛ ÙZ
JObtenerConceptosDeNegociosComercialesConStockPrecioPorRolYBusquedaConceptoççÙ æ
(ççæ ø
idRolççø ƒ
,ççƒ ≈'
idTransaccionInventarioçç∆ ›
,çç› ﬁ)
idCentroAtencionDePreciosççﬂ ¯
,çç¯ ˘
cadenaBusquedaçç˙ à
)ççà â
.ççâ ä
ToListççä ê
(ççê ë
)ççë í
;ççí ì
	resultado
éé 
.
éé 
ForEach
éé %
(
éé% &
cn
éé& (
=>
éé) +
cn
éé, .
.
éé. /
SinControlStock
éé/ >
=
éé? @
sesionDeUsuario
ééA P
.
ééP Q4
&CentroAtencionQueTieneElStockIntegrada
ééQ w
.
ééw x#
SalidaBienesSinStockééx å
)ééå ç
;ééç é
	resultado
èè 
.
èè 
ForEach
èè %
(
èè% &
cn
èè& (
=>
èè) +
cn
èè, .
.
èè. /!
MostrarStockYPrecio
èè/ B
=
èèC D)
informacionSelectorConcepto
èèE `
==
èèa c
(
èèd e
int
èèe h
)
èèh i*
InformacionSelectorConceptoèèi Ñ
.èèÑ Ö!
NombreStockPrecioèèÖ ñ
)èèñ ó
;èèó ò
}
êê 
else
ëë 
{
íí 
	resultado
ìì 
=
ìì 
(
ìì  !)
informacionSelectorConcepto
ìì! <
==
ìì= ?
(
ìì@ A
int
ììA D
)
ììD E)
InformacionSelectorConcepto
ììE `
.
ìì` a
Nombre
ììa g
)
ììg h
?
ììi j"
_conceptoRepositorio
ììk 
.ìì ÄX
HObtenerConceptosDeNegociosComercialesPorRolYBusquedaConceptoYTipoFamiliaììÄ »
(ìì» …
idRolìì… Œ
,ììŒ œ
cadenaBusquedaìì– ﬁ
,ììﬁ ﬂ(
modoSeleccionTipoFamiliaìì‡ ¯
.ìì¯ ˘
ToStringìì˘ Å
(ììÅ Ç
)ììÇ É
)ììÉ Ñ
.ììÑ Ö
ToListììÖ ã
(ììã å
)ììå ç
:ììé è$
_conceptoRepositorioììê §
.ìì§ •f
VObtenerConceptosDeNegociosComercialesConStockPrecioPorRolYBusquedaConceptoYTipoFamiliaìì• ˚
(ìì˚ ¸
idRolìì¸ Å
,ììÅ Ç'
idTransaccionInventarioììÉ ö
,ììö õ)
idCentroAtencionDePreciosììú µ
,ììµ ∂
cadenaBusquedaìì∑ ≈
,ìì≈ ∆(
modoSeleccionTipoFamiliaìì« ﬂ
.ììﬂ ‡
ToStringìì‡ Ë
(ììË È
)ììÈ Í
)ììÍ Î
.ììÎ Ï
ToListììÏ Ú
(ììÚ Û
)ììÛ Ù
;ììÙ ı
	resultado
îî 
.
îî 
ForEach
îî %
(
îî% &
cn
îî& (
=>
îî) +
cn
îî, .
.
îî. /
SinControlStock
îî/ >
=
îî? @
sesionDeUsuario
îîA P
.
îîP Q4
&CentroAtencionQueTieneElStockIntegrada
îîQ w
.
îîw x#
SalidaBienesSinStockîîx å
)îîå ç
;îîç é
	resultado
ïï 
.
ïï 
ForEach
ïï %
(
ïï% &
cn
ïï& (
=>
ïï) +
cn
ïï, .
.
ïï. /!
MostrarStockYPrecio
ïï/ B
=
ïïC D)
informacionSelectorConcepto
ïïE `
==
ïïa c
(
ïïd e
int
ïïe h
)
ïïh i*
InformacionSelectorConceptoïïi Ñ
.ïïÑ Ö!
NombreStockPrecioïïÖ ñ
)ïïñ ó
;ïïó ò
}
ññ 
return
óó 
	resultado
óó  
;
óó  !
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
e
ôô 
)
ôô 
{
öö 
throw
õõ 
new
õõ 
LogicaException
õõ )
(
õõ) *
$str
õõ* ]
,
õõ] ^
e
õõ_ `
)
õõ` a
;
õõa b
}
úú 
}
ùù 	
public
ûû 
List
ûû 
<
ûû 1
#Selector_Concepto_Negocio_Comercial
ûû 7
>
ûû7 8=
/ObtenerConceptosDeNegociosComercialesPorFamilia
ûû9 h
(
ûûh i
int
ûûi l
	idFamilia
ûûm v
,
ûûv w
int
ûûx {*
informacionSelectorConceptoûû| ó
,ûûó ò&
UserProfileSessionDataûûô Ø
sesionDeUsuarioûû∞ ø
)ûûø ¿
{
üü 	
try
†† 
{
°° 
var
¢¢ %
idTransaccionInventario
¢¢ +
=
¢¢, -
sesionDeUsuario
¢¢. =
.
¢¢= >'
ObtenerIdInventarioActual
¢¢> W
(
¢¢W X
sesionDeUsuario
¢¢X g
.
¢¢g h7
(IdCentroAtencionQueTieneElStockIntegrada¢¢h ê
)¢¢ê ë
;¢¢ë í
var
££ '
idCentroAtencionDePrecios
££ -
=
££. /
sesionDeUsuario
££0 ?
.
££? @0
"IdCentroAtencionQueTieneLosPrecios
££@ b
;
££b c
var
§§ 
idRol
§§ 
=
§§ 
ConceptoSettings
§§ ,
.
§§, -
Default
§§- 4
.
§§4 5
IdRolMercaderia
§§5 D
;
§§D E
List
•• 
<
•• 1
#Selector_Concepto_Negocio_Comercial
•• 8
>
••8 9
	resultado
••: C
=
••D E
(
••F G)
informacionSelectorConcepto
••G b
==
••c e
(
••f g
int
••g j
)
••j k*
InformacionSelectorConcepto••k Ü
.••Ü á
Nombre••á ç
)••ç é
?••è ê$
_conceptoRepositorio••ë •
.••• ¶C
3ObtenerConceptosDeNegociosComercialesPorRolYFamilia••¶ Ÿ
(••Ÿ ⁄
idRol••⁄ ﬂ
,••ﬂ ‡
	idFamilia••· Í
)••Í Î
.••Î Ï
ToList••Ï Ú
(••Ú Û
)••Û Ù
:••ı ˆ$
_conceptoRepositorio••˜ ã
.••ã åQ
AObtenerConceptosDeNegociosComercialesConStockPrecioPorRolYFamilia••å Õ
(••Õ Œ
idRol••Œ ”
,••” ‘'
idTransaccionInventario••’ Ï
,••Ï Ì)
idCentroAtencionDePrecios••Ó á
,••á à
	idFamilia••â í
)••í ì
.••ì î
ToList••î ö
(••ö õ
)••õ ú
;••ú ù
	resultado
¶¶ 
.
¶¶ 
ForEach
¶¶ !
(
¶¶! "
cn
¶¶" $
=>
¶¶% '
cn
¶¶( *
.
¶¶* +
SinControlStock
¶¶+ :
=
¶¶; <
sesionDeUsuario
¶¶= L
.
¶¶L M4
&CentroAtencionQueTieneElStockIntegrada
¶¶M s
.
¶¶s t#
SalidaBienesSinStock¶¶t à
)¶¶à â
;¶¶â ä
	resultado
ßß 
.
ßß 
ForEach
ßß !
(
ßß! "
cn
ßß" $
=>
ßß% '
cn
ßß( *
.
ßß* +!
MostrarStockYPrecio
ßß+ >
=
ßß? @)
informacionSelectorConcepto
ßßA \
==
ßß] _
(
ßß` a
int
ßßa d
)
ßßd e*
InformacionSelectorConceptoßße Ä
.ßßÄ Å!
NombreStockPrecioßßÅ í
)ßßí ì
;ßßì î
return
®® 
	resultado
®®  
;
®®  !
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* i
,
¨¨i j
e
¨¨k l
)
¨¨l m
;
¨¨m n
}
≠≠ 
}
ÆÆ 	
public
∞∞ )
Concepto_Negocio_Comercial_
∞∞ *=
/ObtenerConceptoDeNegocioComercialPorCodigoBarra
∞∞+ Z
(
∞∞Z [$
UserProfileSessionData
∞∞[ q
sesionDeUsuario∞∞r Å
,∞∞Å Ç
string∞∞É â
codigoBarra∞∞ä ï
,∞∞ï ñ
bool∞∞ó õ 
complementoStock∞∞ú ¨
,∞∞¨ ≠
bool∞∞Æ ≤!
complementoPrecio∞∞≥ ƒ
,∞∞ƒ ≈
int∞∞∆ …(
modoSeleccionTipoFamilia∞∞  ‚
)∞∞‚ „
{
±± 	
try
≤≤ 
{
≥≥ 
if
¥¥ 
(
¥¥ 
string
¥¥ 
.
¥¥ 
IsNullOrEmpty
¥¥ (
(
¥¥( )
codigoBarra
¥¥) 4
)
¥¥4 5
||
¥¥6 8
string
¥¥9 ?
.
¥¥? @ 
IsNullOrWhiteSpace
¥¥@ R
(
¥¥R S
codigoBarra
¥¥S ^
)
¥¥^ _
)
¥¥_ `
{
µµ 
throw
∂∂ 
new
∂∂ "
AdvertenciaException
∂∂ 2
(
∂∂2 3
$str
∂∂3 X
)
∂∂X Y
;
∂∂Y Z
}
∑∑ 
bool
∏∏ 
esBien
∏∏ 
=
∏∏ "
_conceptoRepositorio
∏∏ 2
.
∏∏2 3
EsBien
∏∏3 9
(
∏∏9 :
codigoBarra
∏∏: E
)
∏∏E F
;
∏∏F G
var
ππ 
idRol
ππ 
=
ππ 
ConceptoSettings
ππ ,
.
ππ, -
Default
ππ- 4
.
ππ4 5
IdRolMercaderia
ππ5 D
;
ππD E
var
∫∫ +
idTransaccionInventarioFisico
∫∫ 1
=
∫∫2 3
sesionDeUsuario
∫∫4 C
.
∫∫C D'
ObtenerIdInventarioActual
∫∫D ]
(
∫∫] ^
sesionDeUsuario
∫∫^ m
.
∫∫m n7
(IdCentroAtencionQueTieneElStockIntegrada∫∫n ñ
)∫∫ñ ó
;∫∫ó ò
var
ªª '
idCentroAtencionDePrecios
ªª -
=
ªª. /
sesionDeUsuario
ªª0 ?
.
ªª? @0
"IdCentroAtencionQueTieneLosPrecios
ªª@ b
;
ªªb c
List
ºº 
<
ºº )
Concepto_Negocio_Comercial_
ºº 0
>
ºº0 1
	resultado
ºº2 ;
;
ºº; <
if
ΩΩ 
(
ΩΩ &
modoSeleccionTipoFamilia
ΩΩ ,
==
ΩΩ- /
(
ΩΩ0 1
int
ΩΩ1 4
)
ΩΩ4 5&
ModoSeleccionTipoFamilia
ΩΩ5 M
.
ΩΩM N
Ambos
ΩΩN S
)
ΩΩS T
{
ææ 
if
øø 
(
øø 
complementoStock
øø (
&&
øø) +
complementoPrecio
øø, =
)
øø= >
{
¿¿ 
if
¡¡ 
(
¡¡ 
esBien
¡¡ "
)
¡¡" #
{
¬¬ 
	resultado
√√ %
=
√√& '"
_conceptoRepositorio
√√( <
.
√√< =V
GObtenerConceptosDeNegociosComercialesConStockPrecioPorRolesYCodigoBarra√√= Ñ
(√√Ñ Ö-
idTransaccionInventarioFisico√√Ö ¢
,√√¢ £)
idCentroAtencionDePrecios√√§ Ω
,√√Ω æ
idRol√√ø ƒ
,√√ƒ ≈
codigoBarra√√∆ —
)√√— “
.√√“ ”
ToList√√” Ÿ
(√√Ÿ ⁄
)√√⁄ €
;√√€ ‹
}
ƒƒ 
else
≈≈ 
{
∆∆ 
	resultado
«« %
=
««& '"
_conceptoRepositorio
««( <
.
««< =P
BObtenerConceptosDeNegociosComercialesConPrecioPorRolesYCodigoBarra
««= 
(«« Ä)
idCentroAtencionDePrecios««Ä ô
,««ô ö
idRol««õ †
,««† °
codigoBarra««¢ ≠
)««≠ Æ
.««Æ Ø
ToList««Ø µ
(««µ ∂
)««∂ ∑
;««∑ ∏
}
»» 
}
…… 
else
   
if
   
(
   
complementoStock
   -
&&
  . 0
!
  1 2
complementoPrecio
  2 C
)
  C D
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
esBien
ÃÃ "
)
ÃÃ" #
{
ÕÕ 
	resultado
ŒŒ %
=
ŒŒ& '"
_conceptoRepositorio
ŒŒ( <
.
ŒŒ< =O
AObtenerConceptosDeNegociosComercialesConStockPorRolesYCodigoBarra
ŒŒ= ~
(
ŒŒ~ ,
idTransaccionInventarioFisicoŒŒ ú
,ŒŒú ù
idRolŒŒû £
,ŒŒ£ §
codigoBarraŒŒ• ∞
)ŒŒ∞ ±
.ŒŒ± ≤
ToListŒŒ≤ ∏
(ŒŒ∏ π
)ŒŒπ ∫
;ŒŒ∫ ª
}
œœ 
else
–– 
{
—— 
	resultado
““ %
=
““& '"
_conceptoRepositorio
““( <
.
““< =G
9ObtenerConceptosDeNegociosComercialesPorRolesYCodigoBarra
““= v
(
““v w
idRol
““w |
,
““| }
codigoBarra““~ â
)““â ä
.““ä ã
ToList““ã ë
(““ë í
)““í ì
;““ì î
}
”” 
}
‘‘ 
else
’’ 
if
’’ 
(
’’ 
!
’’ 
complementoStock
’’ .
&&
’’/ 1
complementoPrecio
’’2 C
)
’’C D
{
÷÷ 
	resultado
◊◊ !
=
◊◊" #"
_conceptoRepositorio
◊◊$ 8
.
◊◊8 9P
BObtenerConceptosDeNegociosComercialesConPrecioPorRolesYCodigoBarra
◊◊9 {
(
◊◊{ |(
idCentroAtencionDePrecios◊◊| ï
,◊◊ï ñ
idRol◊◊ó ú
,◊◊ú ù
codigoBarra◊◊û ©
)◊◊© ™
.◊◊™ ´
ToList◊◊´ ±
(◊◊± ≤
)◊◊≤ ≥
;◊◊≥ ¥
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ 
	resultado
€€ !
=
€€" #"
_conceptoRepositorio
€€$ 8
.
€€8 9G
9ObtenerConceptosDeNegociosComercialesPorRolesYCodigoBarra
€€9 r
(
€€r s
idRol
€€s x
,
€€x y
codigoBarra€€z Ö
)€€Ö Ü
.€€Ü á
ToList€€á ç
(€€ç é
)€€é è
;€€è ê
}
‹‹ 
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
complementoStock
‡‡ (
&&
‡‡) +
complementoPrecio
‡‡, =
)
‡‡= >
{
·· 
if
‚‚ 
(
‚‚ 
esBien
‚‚ "
)
‚‚" #
{
„„ 
	resultado
‰‰ %
=
‰‰& '"
_conceptoRepositorio
‰‰( <
.
‰‰< =V
GObtenerConceptosDeNegociosComercialesConStockPrecioPorRolesYCodigoBarra‰‰= Ñ
(‰‰Ñ Ö-
idTransaccionInventarioFisico‰‰Ö ¢
,‰‰¢ £)
idCentroAtencionDePrecios‰‰§ Ω
,‰‰Ω æ
idRol‰‰ø ƒ
,‰‰ƒ ≈
codigoBarra‰‰∆ —
,‰‰— “(
modoSeleccionTipoFamilia‰‰” Î
.‰‰Î Ï
ToString‰‰Ï Ù
(‰‰Ù ı
)‰‰ı ˆ
)‰‰ˆ ˜
.‰‰˜ ¯
ToList‰‰¯ ˛
(‰‰˛ ˇ
)‰‰ˇ Ä
;‰‰Ä Å
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
	resultado
ËË %
=
ËË& '"
_conceptoRepositorio
ËË( <
.
ËË< =P
BObtenerConceptosDeNegociosComercialesConPrecioPorRolesYCodigoBarra
ËË= 
(ËË Ä)
idCentroAtencionDePreciosËËÄ ô
,ËËô ö
idRolËËõ †
,ËË† °
codigoBarraËË¢ ≠
,ËË≠ Æ(
modoSeleccionTipoFamiliaËËØ «
.ËË« »
ToStringËË» –
(ËË– —
)ËË— “
)ËË“ ”
.ËË” ‘
ToListËË‘ ⁄
(ËË⁄ €
)ËË€ ‹
;ËË‹ ›
}
ÈÈ 
}
ÍÍ 
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
complementoStock
ÎÎ -
&&
ÎÎ. 0
!
ÎÎ1 2
complementoPrecio
ÎÎ2 C
)
ÎÎC D
{
ÏÏ 
if
ÌÌ 
(
ÌÌ 
esBien
ÌÌ "
)
ÌÌ" #
{
ÓÓ 
	resultado
ÔÔ %
=
ÔÔ& '"
_conceptoRepositorio
ÔÔ( <
.
ÔÔ< =O
AObtenerConceptosDeNegociosComercialesConStockPorRolesYCodigoBarra
ÔÔ= ~
(
ÔÔ~ ,
idTransaccionInventarioFisicoÔÔ ú
,ÔÔú ù
idRolÔÔû £
,ÔÔ£ §
codigoBarraÔÔ• ∞
,ÔÔ∞ ±(
modoSeleccionTipoFamiliaÔÔ≤  
.ÔÔ  À
ToStringÔÔÀ ”
(ÔÔ” ‘
)ÔÔ‘ ’
)ÔÔ’ ÷
.ÔÔ÷ ◊
ToListÔÔ◊ ›
(ÔÔ› ﬁ
)ÔÔﬁ ﬂ
;ÔÔﬂ ‡
}
 
else
ÒÒ 
{
ÚÚ 
	resultado
ÛÛ %
=
ÛÛ& '"
_conceptoRepositorio
ÛÛ( <
.
ÛÛ< =G
9ObtenerConceptosDeNegociosComercialesPorRolesYCodigoBarra
ÛÛ= v
(
ÛÛv w
idRol
ÛÛw |
,
ÛÛ| }
codigoBarraÛÛ~ â
,ÛÛâ ä(
modoSeleccionTipoFamiliaÛÛã £
.ÛÛ£ §
ToStringÛÛ§ ¨
(ÛÛ¨ ≠
)ÛÛ≠ Æ
)ÛÛÆ Ø
.ÛÛØ ∞
ToListÛÛ∞ ∂
(ÛÛ∂ ∑
)ÛÛ∑ ∏
;ÛÛ∏ π
}
ÙÙ 
}
ıı 
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
complementoStock
ˆˆ .
&&
ˆˆ/ 1
complementoPrecio
ˆˆ2 C
)
ˆˆC D
{
˜˜ 
	resultado
¯¯ !
=
¯¯" #"
_conceptoRepositorio
¯¯$ 8
.
¯¯8 9P
BObtenerConceptosDeNegociosComercialesConPrecioPorRolesYCodigoBarra
¯¯9 {
(
¯¯{ |(
idCentroAtencionDePrecios¯¯| ï
,¯¯ï ñ
idRol¯¯ó ú
,¯¯ú ù
codigoBarra¯¯û ©
,¯¯© ™(
modoSeleccionTipoFamilia¯¯´ √
.¯¯√ ƒ
ToString¯¯ƒ Ã
(¯¯Ã Õ
)¯¯Õ Œ
)¯¯Œ œ
.¯¯œ –
ToList¯¯– ÷
(¯¯÷ ◊
)¯¯◊ ÿ
;¯¯ÿ Ÿ
}
˘˘ 
else
˙˙ 
{
˚˚ 
	resultado
¸¸ !
=
¸¸" #"
_conceptoRepositorio
¸¸$ 8
.
¸¸8 9G
9ObtenerConceptosDeNegociosComercialesPorRolesYCodigoBarra
¸¸9 r
(
¸¸r s
idRol
¸¸s x
,
¸¸x y
codigoBarra¸¸z Ö
,¸¸Ö Ü(
modoSeleccionTipoFamilia¸¸á ü
.¸¸ü †
ToString¸¸† ®
(¸¸® ©
)¸¸© ™
)¸¸™ ´
.¸¸´ ¨
ToList¸¸¨ ≤
(¸¸≤ ≥
)¸¸≥ ¥
;¸¸¥ µ
}
˝˝ 
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
	resultado
ÄÄ 
==
ÄÄ  
null
ÄÄ! %
)
ÄÄ% &
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ "
AdvertenciaException
ÇÇ 2
(
ÇÇ2 3
$str
ÇÇ3 m
)
ÇÇm n
;
ÇÇn o
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
	resultado
ÜÜ !
.
ÜÜ! "
Count
ÜÜ" '
(
ÜÜ' (
)
ÜÜ( )
>
ÜÜ* +
$num
ÜÜ, -
)
ÜÜ- .
{
áá 
throw
àà 
new
àà !"
AdvertenciaException
àà" 6
(
àà6 7
$str
àà7 p
)
ààp q
;
ààq r
}
ââ 
else
ää 
{
ãã 
return
åå 
	resultado
åå (
.
åå( )
First
åå) .
(
åå. /
)
åå/ 0
;
åå0 1
}
çç 
}
éé 
}
èè 
catch
êê 
(
êê "
AdvertenciaException
êê '
e
êê( )
)
êê) *
{
ëë 
throw
íí 
new
íí "
AdvertenciaException
íí .
(
íí. /
e
íí/ 0
.
íí0 1
Message
íí1 8
)
íí8 9
;
íí9 :
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ )
(
ññ) *
$str
ññ* o
,
ñño p
e
ññq r
)
ññr s
;
ññs t
}
óó 
}
òò 	
public
öö )
Concepto_Negocio_Comercial_
öö *<
.ObtenerConceptoDeNegocioComercialPorIdConcepto
öö+ Y
(
ööY Z$
UserProfileSessionData
ööZ p
sesionDeUsuarioööq Ä
,ööÄ Å
intööÇ Ö!
idConceptoNegocioööÜ ó
,ööó ò
boolööô ù 
complementoStockööû Æ
,ööÆ Ø
boolöö∞ ¥!
complementoPrecioööµ ∆
)öö∆ «
{
õõ 	
try
úú 
{
ùù 
bool
ûû 
esBien
ûû 
=
ûû "
_conceptoRepositorio
ûû 2
.
ûû2 3
EsBien
ûû3 9
(
ûû9 :
idConceptoNegocio
ûû: K
)
ûûK L
;
ûûL M
var
üü 
idRol
üü 
=
üü 
ConceptoSettings
üü ,
.
üü, -
Default
üü- 4
.
üü4 5
IdRolMercaderia
üü5 D
;
üüD E
var
†† +
idTransaccionInventarioFisico
†† 1
=
††2 3
sesionDeUsuario
††4 C
.
††C D'
ObtenerIdInventarioActual
††D ]
(
††] ^
sesionDeUsuario
††^ m
.
††m n7
(IdCentroAtencionQueTieneElStockIntegrada††n ñ
)††ñ ó
;††ó ò
var
°° '
idCentroAtencionDePrecios
°° -
=
°°. /
sesionDeUsuario
°°0 ?
.
°°? @0
"IdCentroAtencionQueTieneLosPrecios
°°@ b
;
°°b c)
Concepto_Negocio_Comercial_
¢¢ +
	resultado
¢¢, 5
;
¢¢5 6
if
££ 
(
££ 
complementoStock
££ $
&&
££% '
complementoPrecio
££( 9
)
££9 :
{
§§ 
if
•• 
(
•• 
esBien
•• 
)
•• 
{
¶¶ 
	resultado
ßß !
=
ßß" #"
_conceptoRepositorio
ßß$ 8
.
ßß8 9P
BObtenerConceptoDeNegocioComercialConStockPrecioPorRolesEIdConcepto
ßß9 {
(
ßß{ |,
idTransaccionInventarioFisicoßß| ô
,ßßô ö)
idCentroAtencionDePreciosßßõ ¥
,ßß¥ µ
idRolßß∂ ª
,ßßª º!
idConceptoNegocioßßΩ Œ
)ßßŒ œ
;ßßœ –
}
®® 
else
©© 
{
™™ 
	resultado
´´ !
=
´´" #"
_conceptoRepositorio
´´$ 8
.
´´8 9K
=ObtenerConceptoDeNegocioComercialConPrecioPorRolesEIdConcepto
´´9 v
(
´´v w(
idCentroAtencionDePrecios´´w ê
,´´ê ë
idRol´´í ó
,´´ó ò!
idConceptoNegocio´´ô ™
)´´™ ´
;´´´ ¨
}
¨¨ 
}
≠≠ 
else
ÆÆ 
if
ÆÆ 
(
ÆÆ 
complementoStock
ÆÆ )
&&
ÆÆ* ,
!
ÆÆ- .
complementoPrecio
ÆÆ. ?
)
ÆÆ? @
{
ØØ 
if
∞∞ 
(
∞∞ 
esBien
∞∞ 
)
∞∞ 
{
±± 
	resultado
≤≤ !
=
≤≤" #"
_conceptoRepositorio
≤≤$ 8
.
≤≤8 9J
<ObtenerConceptoDeNegocioComercialConStockPorRolesEIdConcepto
≤≤9 u
(
≤≤u v,
idTransaccionInventarioFisico≤≤v ì
,≤≤ì î
idRol≤≤ï ö
,≤≤ö õ!
idConceptoNegocio≤≤ú ≠
)≤≤≠ Æ
;≤≤Æ Ø
}
≥≥ 
else
¥¥ 
{
µµ 
	resultado
∂∂ !
=
∂∂" #"
_conceptoRepositorio
∂∂$ 8
.
∂∂8 9B
4ObtenerConceptoDeNegocioComercialPorRolesEIdConcepto
∂∂9 m
(
∂∂m n
idRol
∂∂n s
,
∂∂s t 
idConceptoNegocio∂∂u Ü
)∂∂Ü á
;∂∂á à
}
∑∑ 
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
!
ππ 
complementoStock
ππ *
&&
ππ+ -
complementoPrecio
ππ. ?
)
ππ? @
{
∫∫ 
	resultado
ªª 
=
ªª "
_conceptoRepositorio
ªª  4
.
ªª4 5K
=ObtenerConceptoDeNegocioComercialConPrecioPorRolesEIdConcepto
ªª5 r
(
ªªr s(
idCentroAtencionDePreciosªªs å
,ªªå ç
idRolªªé ì
,ªªì î!
idConceptoNegocioªªï ¶
)ªª¶ ß
;ªªß ®
}
ºº 
else
ΩΩ 
{
ææ 
	resultado
øø 
=
øø "
_conceptoRepositorio
øø  4
.
øø4 5B
4ObtenerConceptoDeNegocioComercialPorRolesEIdConcepto
øø5 i
(
øøi j
idRol
øøj o
,
øøo p 
idConceptoNegocioøøq Ç
)øøÇ É
;øøÉ Ñ
}
¿¿ 
if
¡¡ 
(
¡¡ 
	resultado
¡¡ 
==
¡¡  
null
¡¡! %
)
¡¡% &
{
¬¬ 
throw
√√ 
new
√√ "
AdvertenciaException
√√ 2
(
√√2 3
$str
√√3 S
)
√√S T
;
√√T U
}
ƒƒ 
return
≈≈ 
	resultado
≈≈  
;
≈≈  !
}
∆∆ 
catch
«« 
(
«« "
AdvertenciaException
«« '
e
««( )
)
««) *
{
»» 
throw
…… 
new
…… "
AdvertenciaException
…… .
(
……. /
e
……/ 0
.
……0 1
Message
……1 8
)
……8 9
;
……9 :
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
e
ÀÀ 
)
ÀÀ 
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ 
LogicaException
ÕÕ )
(
ÕÕ) *
$str
ÕÕ* t
,
ÕÕt u
e
ÕÕv w
)
ÕÕw x
;
ÕÕx y
}
ŒŒ 
}
œœ 	
public
–– 
List
–– 
<
–– (
Concepto_Negocio_Comercial
–– .
>
––. /C
5ObtenerConceptosDeNegociosComercialParaVentaPorNombre
––0 e
(
––e f
int
––f i1
"idCentroAtencionQueTieneLosPrecios––j å
,––å ç
string––é î
nombre––ï õ
)––õ ú
{
—— 	
try
““ 
{
”” 
var
’’ 
	resultado
’’ 
=
’’ "
_conceptoRepositorio
’’  4
.
’’4 5W
IObtenerConceptosDeNegociosComercialesPorNombreInclyendoStockPreciosYStock
’’5 ~
(
’’~ 1
"idCentroAtencionQueTieneLosPrecios’’ °
,’’° ¢#
TransaccionSettings’’£ ∂
.’’∂ ∑
Default’’∑ æ
.’’æ ø1
!IdTipoTransaccionInventarioActual’’ø ‡
,’’‡ ·
MaestroSettings’’‚ Ò
.’’Ò Ú
Default’’Ú ˘
.’’˘ ˙,
IdDetalleMaestroTarifaNormal’’˙ ñ
,’’ñ ó
MaestroSettings’’ò ß
.’’ß ®
Default’’® Ø
.’’Ø ∞0
 IdDetalleMaestroEstadoConfirmado’’∞ –
,’’– —
new’’“ ’
int’’÷ Ÿ
[’’Ÿ ⁄
]’’⁄ €
{’’‹ › 
ConceptoSettings’’ﬁ Ó
.’’Ó Ô
Default’’Ô ˆ
.’’ˆ ˜
IdRolMercaderia’’˜ Ü
}’’á à
,’’à â
nombre’’ä ê
)’’ê ë
.’’ë í
OrderBy’’í ô
(’’ô ö
cnc’’ö ù
=>’’û †
cnc’’° §
.’’§ •
Nombre’’• ´
)’’´ ¨
.’’¨ ≠
ToList’’≠ ≥
(’’≥ ¥
)’’¥ µ
;’’µ ∂
return
ÿÿ 
	resultado
ÿÿ  
;
ÿÿ  !
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
throw
›› 
new
›› 
LogicaException
›› )
(
››) *
$str
››* i
,
››i j
e
››k l
)
››l m
;
››m n
}
ﬁﬁ 
}
ﬂﬂ 	
public
¿¿ 
List
¿¿ 
<
¿¿ 
Concepto_Basico
¿¿ #
>
¿¿# $G
9ObtenerConceptosaBasicosVigentesIncluyendoCaracteristicas
¿¿% ^
(
¿¿^ _
)
¿¿_ `
{
¡¡ 	
try
¬¬ 
{
√√ 
return
ƒƒ "
_conceptoRepositorio
ƒƒ +
.
ƒƒ+ ,@
2ObtenerConceptosBasicosIncluyendodoCaracteristicas
ƒƒ, ^
(
ƒƒ^ _
MaestroSettings
ƒƒ_ n
.
ƒƒn o
Default
ƒƒo v
.
ƒƒv w 
IdMaestroConceptoƒƒw à
,ƒƒà â
trueƒƒä é
)ƒƒé è
.ƒƒè ê
ToListƒƒê ñ
(ƒƒñ ó
)ƒƒó ò
;ƒƒò ô
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* N
,
»»N O
e
»»P Q
)
»»Q R
;
»»R S
}
…… 
}
   	
public
–– 
List
–– 
<
–– 
ReporteDigemid
–– "
>
––" #,
ObtenerReporteConceptosDigemid
––$ B
(
––B C$
UserProfileSessionData
––C Y
sesionUsuario
––Z g
)
––g h
{
—— 	
try
““ 
{
”” 
int
‘‘ 0
"idCentroAtencionQueTieneLosPrecios
‘‘ 6
=
‘‘7 8
sesionUsuario
‘‘9 F
.
‘‘F G0
"IdCentroAtencionQueTieneLosPrecios
‘‘G i
;
‘‘i j
var
’’ 
	resultado
’’ 
=
’’ "
_conceptoRepositorio
’’  4
.
’’4 5,
ObtenerReporteConceptosDigemid
’’5 S
(
’’S T
ConceptoSettings
’’T d
.
’’d e
Default
’’e l
.
’’l m
IdRolMercaderia
’’m |
,
’’| }1
"idCentroAtencionQueTieneLosPrecios’’~ †
,’’† ° 
ConceptoSettings’’¢ ≤
.’’≤ ≥
Default’’≥ ∫
.’’∫ ªF
6IdTarifaSeleccionadaParaPrecioUnitarioEnReporteDigemid’’ª Ò
)’’Ò Ú
.’’Ú Û
OrderBy’’Û ˙
(’’˙ ˚
cnc’’˚ ˛
=>’’ˇ Å
cnc’’Ç Ö
.’’Ö Ü
CodigoConcepto’’Ü î
)’’î ï
.’’ï ñ
ToList’’ñ ú
(’’ú ù
)’’ù û
;’’û ü
var
÷÷ 
establecimiento
÷÷ #
=
÷÷$ %
_actorRepositorio
÷÷& 7
.
÷÷7 8$
ObtenerEstablecimiento
÷÷8 N
(
÷÷N O
sesionUsuario
÷÷O \
.
÷÷\ ]*
CentroDeAtencionSeleccionado
÷÷] y
.
÷÷y z'
EstablecimientoComercial÷÷z í
.÷÷í ì
Id÷÷ì ï
)÷÷ï ñ
;÷÷ñ ó
	resultado
◊◊ 
.
◊◊ 
ForEach
◊◊ !
(
◊◊! "
r
◊◊" #
=>
◊◊$ &
r
◊◊' (
.
◊◊( )#
CodigoEstablecimiento
◊◊) >
=
◊◊? @
establecimiento
◊◊A P
.
◊◊P Q*
CodigoEstablecimientoDigemid
◊◊Q m
(
◊◊m n
)
◊◊n o
)
◊◊o p
;
◊◊p q
return
ŸŸ 
	resultado
ŸŸ  
;
ŸŸ  !
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
throw
›› 
new
›› 
LogicaException
›› )
(
››) *
$str
››* \
,
››\ ]
e
››^ _
)
››_ `
;
››` a
}
ﬁﬁ 
}
ﬂﬂ 	
}
·· 
}‚‚ Ñ›
GD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\ConfiguracionLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class 
ConfiguracionLogica $
:% & 
IConfiguracionLogica' ;
{ 
private 
readonly %
IConfiguracionRepositorio 2%
_repositorioConfiguracion3 L
;L M
private 
readonly 
IMaestroRepositorio ,
_repositorioMaestro- @
;@ A
private 
readonly #
ITransaccionRepositorio 0#
_repositorioTransaccion1 H
;H I
public 
ConfiguracionLogica "
(" #%
IConfiguracionRepositorio# <$
repositorioConfiguracion= U
,U V
IMaestroRepositorioW j
repositorioMaestrok }
,} ~$
ITransaccionRepositorio	 ñ$
repositorioTransaccion
ó ≠
)
≠ Æ
{ 	%
_repositorioConfiguracion %
=& '$
repositorioConfiguracion( @
;@ A
_repositorioMaestro 
=  !
repositorioMaestro" 4
;4 5#
_repositorioTransaccion #
=$ %"
repositorioTransaccion& <
;< =
} 	
public 
OperationResult  
guardarConfiguracion 3
(3 4
string4 :
nombre; A
,A B
stringC I
descripcionJ U
)U V
{   	
try!! 
{"" 
Configuracion## 
nuevoConfiguracion## 0
=##1 2
new##3 6
Configuracion##7 D
(##D E
)##E F
;##F G
nuevoConfiguracion$$ "
.$$" #
nombre$$# )
=$$* +
nombre$$, 2
;$$2 3
nuevoConfiguracion%% "
.%%" #
descripcion%%# .
=%%/ 0
descripcion%%1 <
;%%< =
return&& %
_repositorioConfiguracion&& 0
.&&0 1
crearConfiguracion&&1 C
(&&C D
nuevoConfiguracion&&D V
)&&V W
;&&W X
}'' 
catch(( 
((( 
	Exception(( 
e(( 
)(( 
{)) 
throw** 
e** 
;** 
}++ 
},, 	
public-- 
OperationResult-- #
actualizarConfiguracion-- 6
(--6 7
int--7 :
id--; =
,--= >
string--? E
nombre--F L
,--L M
string--N T
descripcion--U `
)--` a
{.. 	
try// 
{00 
Configuracion11 
Configuracion11 +
=11, -
new11. 1
Configuracion112 ?
(11? @
)11@ A
;11A B
Configuracion22 
.22 
id22  
=22! "
id22# %
;22% &
Configuracion33 
.33 
nombre33 $
=33% &
nombre33' -
;33- .
Configuracion44 
.44 
descripcion44 )
=44* +
descripcion44, 7
;447 8
return55 %
_repositorioConfiguracion55 0
.550 1#
actualizarConfiguracion551 H
(55H I
Configuracion55I V
)55V W
;55W X
}66 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
throw99 
e99 
;99 
}:: 
};; 	
public<< 
OperationResult<< )
guardarParametroConfiguracion<< <
(<<< =
int<<= @
idConfiguracion<<A P
,<<P Q
string<<R X
nombre<<Y _
,<<_ `
string<<a g
tipo<<h l
,<<l m
string<<n t
descripcion	<<u Ä
,
<<Ä Å
string
<<Ç à
valor
<<â é
)
<<é è
{== 	
try>> 
{?? &
Parametro_de_configuracion@@ *"
parametroConfiguracion@@+ A
=@@B C
new@@D G&
Parametro_de_configuracion@@H b
(@@b c
)@@c d
;@@d e"
parametroConfiguracionAA &
.AA& '
id_configuracionAA' 7
=AA8 9
idConfiguracionAA: I
;AAI J"
parametroConfiguracionBB &
.BB& '
nombreBB' -
=BB. /
nombreBB0 6
;BB6 7"
parametroConfiguracionCC &
.CC& '
tipoCC' +
=CC, -
tipoCC. 2
;CC2 3"
parametroConfiguracionDD &
.DD& '
descripcionDD' 2
=DD3 4
descripcionDD5 @
;DD@ A"
parametroConfiguracionEE &
.EE& '
valorEE' ,
=EE- .
valorEE/ 4
;EE4 5
returnGG %
_repositorioConfiguracionGG 0
.GG0 1'
crearParametroConfiguracionGG1 L
(GGL M"
parametroConfiguracionGGM c
)GGc d
;GGd e
}HH 
catchII 
(II 
	ExceptionII 
eII 
)II 
{JJ 
throwKK 
eKK 
;KK 
}LL 
}MM 	
publicNN 
OperationResultNN ,
 actualizarParametroConfiguracionNN ?
(NN? @
intNN@ C
idNND F
,NNF G
intNNH K
idConfiguracionNNL [
,NN[ \
stringNN] c
nombreNNd j
,NNj k
stringNNl r
tipoNNs w
,NNw x
stringNNy 
descripcion
NNÄ ã
,
NNã å
string
NNç ì
valor
NNî ô
)
NNô ö
{OO 	
tryPP 
{QQ &
Parametro_de_configuracionRR *"
parametroConfiguracionRR+ A
=RRB C
newRRD G&
Parametro_de_configuracionRRH b
(RRb c
)RRc d
;RRd e"
parametroConfiguracionSS &
.SS& '
idSS' )
=SS* +
idSS, .
;SS. /"
parametroConfiguracionTT &
.TT& '
id_configuracionTT' 7
=TT8 9
idConfiguracionTT: I
;TTI J"
parametroConfiguracionUU &
.UU& '
nombreUU' -
=UU. /
nombreUU0 6
;UU6 7"
parametroConfiguracionVV &
.VV& '
tipoVV' +
=VV, -
tipoVV. 2
;VV2 3"
parametroConfiguracionWW &
.WW& '
descripcionWW' 2
=WW3 4
descripcionWW5 @
;WW@ A"
parametroConfiguracionXX &
.XX& '
valorXX' ,
=XX- .
valorXX/ 4
;XX4 5
returnYY %
_repositorioConfiguracionYY 0
.YY0 1,
 actualizarParametroConfiguracionYY1 Q
(YYQ R"
parametroConfiguracionYYR h
)YYh i
;YYi j
}ZZ 
catch[[ 
([[ 
	Exception[[ 
e[[ 
)[[ 
{\\ 
throw]] 
e]] 
;]] 
}^^ 
}__ 	
public`` 
List`` 
<`` 
Configuracion`` !
>``! ""
obtenerConfiguraciones``# 9
(``9 :
)``: ;
{aa 	
trybb 
{bb 
returnbb %
_repositorioConfiguracionbb 2
.bb2 3"
obtenerConfiguracionesbb3 I
(bbI J
)bbJ K
.bbK L
ToListbbL R
(bbR S
)bbS T
;bbT U
}bbV W
catchcc 
(cc 
	Exceptioncc 
ecc 
)cc 
{cc  !
throwcc" '
ecc( )
;cc) *
}cc+ ,
}dd 	
publicee 
Listee 
<ee &
Parametro_de_configuracionee .
>ee. /*
obtenerParametrosConfiguracionee0 N
(eeN O
inteeO R
idConfiguracioneeS b
)eeb c
{ff 	
trygg 
{gg 
returngg %
_repositorioConfiguraciongg 2
.gg2 3*
obtenerParametrosConfiguraciongg3 Q
(ggQ R
idConfiguracionggR a
)gga b
.ggb c
ToListggc i
(ggi j
)ggj k
;ggk l
}ggm n
catchhh 
(hh 
	Exceptionhh 
ehh 
)hh 
{hh  !
throwhh" '
ehh( )
;hh) *
}hh+ ,
}ii 	
publicpp 
OperationResultpp "
CrearTipoDeComprobantepp 5
(pp5 6
stringpp6 <
nombrepp= C
,ppC D
stringppE K
nombreCortoppL W
,ppW X
stringppY _
codigoSunatpp` k
,ppk l
intppm p
[ppp q
]ppq r(
idsTransaccionEmisionPropia	pps é
,
ppé è
int
ppê ì
[
ppì î
]
ppî ï+
idsTransaccionEmisionTerceros
ppñ ≥
)
pp≥ ¥
{qq 	
tryrr 
{ss 
Detalle_maestrott 
tipoDeComprobantett  1
=tt2 3
newtt4 7
Detalle_maestrott8 G
(ttG H
)ttH I
;ttI J
tipoDeComprobanteuu !
.uu! "
nombreuu" (
=uu) *
nombreuu+ 1
;uu1 2
tipoDeComprobantevv !
.vv! "
valorvv" '
=vv( )
nombreCortovv* 5
;vv5 6
tipoDeComprobanteww !
.ww! "
codigoww" (
=ww) *
codigoSunatww+ 6
;ww6 7
tipoDeComprobantexx !
.xx! "

id_maestroxx" ,
=xx- .
MaestroSettingsxx/ >
.xx> ?
Defaultxx? F
.xxF G
IdMaestroDocumentoxxG Y
;xxY Z
tipoDeComprobanteyy !
.yy! "
fecha_registroyy" 0
=yy1 2
DateTimeUtilyy3 ?
.yy? @
FechaActualyy@ K
(yyK L
)yyL M
;yyM N
tipoDeComprobantezz !
.zz! "

es_vigentezz" ,
=zz- .
truezz/ 3
;zz3 4
foreach|| 
(|| 
var|| 
item|| !
in||" $'
idsTransaccionEmisionPropia||% @
)||@ A
{}} -
!Tipo_transaccion_tipo_comprobante~~ 5
tttc~~6 :
=~~; <
new~~= @-
!Tipo_transaccion_tipo_comprobante~~A b
(~~b c
)~~c d
;~~d e
tttc 
. 
id_tipo_transaccion ,
=- .
item/ 3
;3 4
tttc
ÄÄ 
.
ÄÄ 
	es_propio
ÄÄ "
=
ÄÄ# $
true
ÄÄ% )
;
ÄÄ) *
tttc
ÅÅ 
.
ÅÅ 
Detalle_maestro
ÅÅ (
=
ÅÅ) *
tipoDeComprobante
ÅÅ+ <
;
ÅÅ< =
tipoDeComprobante
ÇÇ %
.
ÇÇ% &/
!Tipo_transaccion_tipo_comprobante
ÇÇ& G
.
ÇÇG H
Add
ÇÇH K
(
ÇÇK L
tttc
ÇÇL P
)
ÇÇP Q
;
ÇÇQ R
}
ÉÉ 
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
item
ÑÑ !
in
ÑÑ" $+
idsTransaccionEmisionTerceros
ÑÑ% B
)
ÑÑB C
{
ÖÖ /
!Tipo_transaccion_tipo_comprobante
ÜÜ 5
tttc
ÜÜ6 :
=
ÜÜ; <
new
ÜÜ= @/
!Tipo_transaccion_tipo_comprobante
ÜÜA b
(
ÜÜb c
)
ÜÜc d
;
ÜÜd e
tttc
áá 
.
áá !
id_tipo_transaccion
áá ,
=
áá- .
item
áá/ 3
;
áá3 4
tttc
àà 
.
àà 
	es_propio
àà "
=
àà# $
false
àà% *
;
àà* +
tttc
ââ 
.
ââ 
Detalle_maestro
ââ (
=
ââ) *
tipoDeComprobante
ââ+ <
;
ââ< =
tipoDeComprobante
ää %
.
ää% &/
!Tipo_transaccion_tipo_comprobante
ää& G
.
ääG H
Add
ääH K
(
ääK L
tttc
ääL P
)
ääP Q
;
ääQ R
}
ãã 
return
åå !
_repositorioMaestro
åå *
.
åå* +!
crearDetalleMaestro
åå+ >
(
åå> ?
tipoDeComprobante
åå? P
)
ååP Q
;
ååQ R
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
e
êê 
;
êê 
}
ëë 
}
íí 	
public
ìì 
TipoDeComprobante
ìì  &
ObtenerTipoDeComprobante
ìì! 9
(
ìì9 :
int
ìì: =!
idTipoDeComprobante
ìì> Q
)
ììQ R
{
îî 	
try
ïï 
{
ññ 
return
óó 
new
óó 
TipoDeComprobante
óó ,
(
óó, -'
_repositorioConfiguracion
óó- F
.
óóF GJ
;ObtenerDetalleMaestroIncluidoTipoTransaccionTipoComprobanteóóG Ç
(óóÇ É
MaestroSettingsóóÉ í
.óóí ì
Defaultóóì ö
.óóö õ"
IdMaestroDocumentoóóõ ≠
,óó≠ Æ#
idTipoDeComprobanteóóØ ¬
)óó¬ √
)óó√ ƒ
;óóƒ ≈
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
öö  !
throw
öö" '
e
öö( )
;
öö) *
}
öö+ ,
}
õõ 	
public
úú 
List
úú 
<
úú 
TipoDeComprobante
úú %
>
úú% &'
ObtenerTiposDeComprobante
úú' @
(
úú@ A
)
úúA B
{
ùù 	
try
ûû 
{
üü 
return
†† 
TipoDeComprobante
†† (
.
††( )
Convert
††) 0
(
††0 1'
_repositorioConfiguracion
††1 J
.
††J KK
<ObtenerDetallesMaestroIncluidoTipoTransaccionTipoComprobante††K á
(††á à
MaestroSettings††à ó
.††ó ò
Default††ò ü
.††ü †"
IdMaestroDocumento††† ≤
)††≤ ≥
.††≥ ¥
ToList††¥ ∫
(††∫ ª
)††ª º
)††º Ω
;††Ω æ
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
££  !
throw
££" '
e
££( )
;
££) *
}
££+ ,
}
§§ 	
public
•• 
OperationResult
•• '
ActualizarTipoComprobante
•• 8
(
••8 9
int
••9 <
id
••= ?
,
••? @
string
••A G
nombre
••H N
,
••N O
string
••P V
nombreCorto
••W b
,
••b c
string
••d j
codigoSunat
••k v
,
••v w
List
••x |
<
••| }/
 TipoDeComprobanteParaTransaccion••} ù
>••ù û2
"tiposDeTransaccionConEmisionPropia••ü ¡
,••¡ ¬
List••√ «
<••« »0
 TipoDeComprobanteParaTransaccion••» Ë
>••Ë È4
$tiposDeTransaccionConEmisionTerceros••Í é
)••é è
{
¶¶ 	
try
ßß 
{
®® 
Detalle_maestro
©© 
tipoDeComprobante
©©  1
=
©©2 3
new
©©4 7
Detalle_maestro
©©8 G
(
©©G H
)
©©H I
;
©©I J
tipoDeComprobante
™™ !
.
™™! "
id
™™" $
=
™™% &
id
™™' )
;
™™) *
tipoDeComprobante
´´ !
.
´´! "
nombre
´´" (
=
´´) *
nombre
´´+ 1
;
´´1 2
tipoDeComprobante
¨¨ !
.
¨¨! "
valor
¨¨" '
=
¨¨( )
nombreCorto
¨¨* 5
;
¨¨5 6
tipoDeComprobante
≠≠ !
.
≠≠! "
codigo
≠≠" (
=
≠≠) *
codigoSunat
≠≠+ 6
;
≠≠6 7
tipoDeComprobante
ÆÆ !
.
ÆÆ! "

id_maestro
ÆÆ" ,
=
ÆÆ- .
MaestroSettings
ÆÆ/ >
.
ÆÆ> ?
Default
ÆÆ? F
.
ÆÆF G 
IdMaestroDocumento
ÆÆG Y
;
ÆÆY Z
tipoDeComprobante
ØØ !
.
ØØ! "
fecha_registro
ØØ" 0
=
ØØ1 2
DateTimeUtil
ØØ3 ?
.
ØØ? @
FechaActual
ØØ@ K
(
ØØK L
)
ØØL M
;
ØØM N
foreach
±± 
(
±± 
var
±± 
item
±± !
in
±±" $0
"tiposDeTransaccionConEmisionPropia
±±% G
)
±±G H
{
≤≤ /
!Tipo_transaccion_tipo_comprobante
≥≥ 5
tttc
≥≥6 :
=
≥≥; <
new
≥≥= @/
!Tipo_transaccion_tipo_comprobante
≥≥A b
(
≥≥b c
)
≥≥c d
;
≥≥d e
tttc
¥¥ 
.
¥¥ 
id
¥¥ 
=
¥¥ 
item
¥¥ "
.
¥¥" #
Id
¥¥# %
;
¥¥% &
tttc
µµ 
.
µµ !
id_tipo_transaccion
µµ ,
=
µµ- .
item
µµ/ 3
.
µµ3 4
IdTipoTransaccion
µµ4 E
;
µµE F
tttc
∂∂ 
.
∂∂ 
	es_propio
∂∂ "
=
∂∂# $
true
∂∂% )
;
∂∂) *
tttc
∑∑ 
.
∑∑ !
id_tipo_comprobante
∑∑ ,
=
∑∑- .
tipoDeComprobante
∑∑/ @
.
∑∑@ A
id
∑∑A C
;
∑∑C D
tipoDeComprobante
∏∏ %
.
∏∏% &/
!Tipo_transaccion_tipo_comprobante
∏∏& G
.
∏∏G H
Add
∏∏H K
(
∏∏K L
tttc
∏∏L P
)
∏∏P Q
;
∏∏Q R
}
ππ 
foreach
∫∫ 
(
∫∫ 
var
∫∫ 
item
∫∫ !
in
∫∫" $2
$tiposDeTransaccionConEmisionTerceros
∫∫% I
)
∫∫I J
{
ªª /
!Tipo_transaccion_tipo_comprobante
ºº 5
tttc
ºº6 :
=
ºº; <
new
ºº= @/
!Tipo_transaccion_tipo_comprobante
ººA b
(
ººb c
)
ººc d
;
ººd e
tttc
ΩΩ 
.
ΩΩ 
id
ΩΩ 
=
ΩΩ 
item
ΩΩ "
.
ΩΩ" #
Id
ΩΩ# %
;
ΩΩ% &
tttc
ææ 
.
ææ !
id_tipo_transaccion
ææ ,
=
ææ- .
item
ææ/ 3
.
ææ3 4
IdTipoTransaccion
ææ4 E
;
ææE F
tttc
øø 
.
øø 
	es_propio
øø "
=
øø# $
false
øø% *
;
øø* +
tttc
¿¿ 
.
¿¿ !
id_tipo_comprobante
¿¿ ,
=
¿¿- .
tipoDeComprobante
¿¿/ @
.
¿¿@ A
id
¿¿A C
;
¿¿C D
tipoDeComprobante
¡¡ %
.
¡¡% &/
!Tipo_transaccion_tipo_comprobante
¡¡& G
.
¡¡G H
Add
¡¡H K
(
¡¡K L
tttc
¡¡L P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 
return
√√ '
_repositorioConfiguracion
√√ 0
.
√√0 1G
9ActualizarDetalleMaestroConTipoTransaccionTipoComprobante
√√1 j
(
√√j k
tipoDeComprobante
√√k |
)
√√| }
;
√√} ~
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
e
≈≈ 
)
≈≈ 
{
∆∆ 
throw
«« 
e
«« 
;
«« 
}
»» 
}
…… 	
public
ÕÕ 
OperationResult
ÕÕ %
CrearSerieDeComprobante
ÕÕ 6
(
ÕÕ6 7
int
ÕÕ7 : 
idCentroDeAtencion
ÕÕ; M
,
ÕÕM N
int
ÕÕO R!
idTipoDeComprobante
ÕÕS f
,
ÕÕf g
string
ÕÕh n
numeroDeSerie
ÕÕo |
,
ÕÕ| }
intÕÕ~ Å,
numeroDeComprobanteSiguienteÕÕÇ û
,ÕÕû ü
boolÕÕ† §
autonumericaÕÕ• ±
,ÕÕ± ≤
boolÕÕ≥ ∑
vigenteÕÕ∏ ø
)ÕÕø ¿
{
ŒŒ 	
try
œœ 
{
–– 
Serie_comprobante
““ ! 
serieDeComprobante
““" 4
=
““5 6
new
““7 :
Serie_comprobante
““; L
(
““L M
)
““M N
;
““N O 
serieDeComprobante
”” "
.
””" #
id_propietario
””# 1
=
””2 3 
idCentroDeAtencion
””4 F
;
””F G 
serieDeComprobante
‘‘ "
.
‘‘" #!
id_tipo_comprobante
‘‘# 6
=
‘‘7 8!
idTipoDeComprobante
‘‘9 L
;
‘‘L M 
serieDeComprobante
’’ "
.
’’" #
numero
’’# )
=
’’* +
numeroDeSerie
’’, 9
;
’’9 : 
serieDeComprobante
÷÷ "
.
÷÷" #
proximo_numero
÷÷# 1
=
÷÷2 3*
numeroDeComprobanteSiguiente
÷÷4 P
;
÷÷P Q 
serieDeComprobante
◊◊ "
.
◊◊" #
es_autonumerable
◊◊# 3
=
◊◊4 5
autonumerica
◊◊6 B
;
◊◊B C 
serieDeComprobante
ÿÿ "
.
ÿÿ" #

es_vigente
ÿÿ# -
=
ÿÿ. /
vigente
ÿÿ0 7
;
ÿÿ7 8 
serieDeComprobante
⁄⁄ "
.
⁄⁄" ##
id_modelo_comprobante
⁄⁄# 8
=
⁄⁄9 :
$num
⁄⁄; <
;
⁄⁄< =
return
€€ %
_repositorioTransaccion
€€ .
.
€€. /#
CrearSerieComprobante
€€/ D
(
€€D E 
serieDeComprobante
€€E W
)
€€W X
;
€€X Y
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› 
e
›› 
)
›› 
{
ﬁﬁ 
throw
ﬂﬂ 
e
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
}
·· 	
public
‚‚ 
List
‚‚ 
<
‚‚  
SerieDeComprobante
‚‚ &
>
‚‚& '(
ObtenerSeriesDeComprobante
‚‚( B
(
‚‚B C
)
‚‚C D
{
„„ 	
try
‰‰ 
{
ÂÂ 
return
ÊÊ  
SerieDeComprobante
ÊÊ )
.
ÊÊ) *
Convert
ÊÊ* 1
(
ÊÊ1 2%
_repositorioTransaccion
ÊÊ2 I
.
ÊÊI J&
ObtenerSeriesComprobante
ÊÊJ b
(
ÊÊb c
)
ÊÊc d
.
ÊÊd e
ToList
ÊÊe k
(
ÊÊk l
)
ÊÊl m
)
ÊÊm n
;
ÊÊn o
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ËË  !
throw
ËË" '
e
ËË( )
;
ËË) *
}
ËË+ ,
}
ÍÍ 	
public
ÎÎ  
SerieDeComprobante
ÎÎ !'
ObtenerSerieDeComprobante
ÎÎ" ;
(
ÎÎ; <
int
ÎÎ< ?"
idSerieDeComprobante
ÎÎ@ T
)
ÎÎT U
{
ÏÏ 	
try
ÌÌ 
{
ÓÓ 
return
ÔÔ 
new
ÔÔ  
SerieDeComprobante
ÔÔ -
(
ÔÔ- .%
_repositorioTransaccion
ÔÔ. E
.
ÔÔE F'
ObtenerSerieDeComprobante
ÔÔF _
(
ÔÔ_ `"
idSerieDeComprobante
ÔÔ` t
)
ÔÔt u
)
ÔÔu v
;
ÔÔv w
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
e
ÒÒ 
)
ÒÒ 
{
ÒÒ  !
throw
ÒÒ" '
e
ÒÒ( )
;
ÒÒ) *
}
ÒÒ+ ,
}
ÛÛ 	
public
ıı 
async
ıı 
Task
ıı 
<
ıı 
List
ıı 
<
ıı 
ItemGenerico
ıı +
>
ıı+ ,
>
ıı, --
ObtenerSeriesConTipoComprobante
ıı. M
(
ııM N!
TipoComprobantePara
ııN a
tipoOperacion
ııb o
,
ııo p%
UserProfileSessionDataııq á
sesionUsuarioııà ï
)ııï ñ
{
ˆˆ 	
try
˜˜ 
{
¯¯ 
List
˘˘ 
<
˘˘ '
SelectorTipoDeComprobante
˘˘ .
>
˘˘. /
tiposComprobante
˘˘0 @
=
˘˘A B
await
˘˘C H*
ObtenerSelectorDeComprobante
˘˘I e
(
˘˘e f
tipoOperacion
˘˘f s
,
˘˘s t
sesionUsuario˘˘u Ç
)˘˘Ç É
;˘˘É Ñ
List
˙˙ 
<
˙˙ 
ItemGenerico
˙˙ !
>
˙˙! "#
seriesConComprobantes
˙˙# 8
=
˙˙9 :
new
˙˙; >
List
˙˙? C
<
˙˙C D
ItemGenerico
˙˙D P
>
˙˙P Q
(
˙˙Q R
)
˙˙R S
;
˙˙S T
foreach
˚˚ 
(
˚˚ 
var
˚˚ 
tipoDeComprobante
˚˚ .
in
˚˚/ 1
tiposComprobante
˚˚2 B
)
˚˚B C
{
¸¸ 
foreach
˝˝ 
(
˝˝ 
var
˝˝  
serie
˝˝! &
in
˝˝' )
tipoDeComprobante
˝˝* ;
.
˝˝; <
Series
˝˝< B
)
˝˝B C
{
˛˛ #
seriesConComprobantes
ˇˇ -
.
ˇˇ- .
Add
ˇˇ. 1
(
ˇˇ1 2
new
ˇˇ2 5
ItemGenerico
ˇˇ6 B
(
ˇˇB C
)
ˇˇC D
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ  
serie
ÅÅ! &
.
ÅÅ& '
Id
ÅÅ' )
,
ÅÅ) *
Nombre
ÇÇ "
=
ÇÇ# $
tipoDeComprobante
ÇÇ% 6
.
ÇÇ6 7
TipoComprobante
ÇÇ7 F
.
ÇÇF G
Codigo
ÇÇG M
+
ÇÇN O
$str
ÇÇP T
+
ÇÇU V
serie
ÇÇW \
.
ÇÇ\ ]
Nombre
ÇÇ] c
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 
return
ÜÜ #
seriesConComprobantes
ÜÜ ,
;
ÜÜ, -
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
new
ää 
LogicaException
ää )
(
ää) *
$str
ää* \
,
ää\ ]
e
ää^ _
)
ää_ `
;
ää` a
}
ãã 
}
åå 	
public
éé 
async
éé 
Task
éé 
<
éé 
List
éé 
<
éé '
SelectorTipoDeComprobante
éé 8
>
éé8 9
>
éé9 :*
ObtenerSelectorDeComprobante
éé; W
(
ééW X!
TipoComprobantePara
ééX k
tipoOperacion
éél y
,
ééy z%
UserProfileSessionDataéé{ ë
sesionUsuarioééí ü
)ééü †
{
èè 	
try
êê 
{
ëë 
List
íí 
<
íí '
SelectorTipoDeComprobante
íí .
>
íí. /
tiposComprobante
íí0 @
=
íí@ A
null
ííB F
;
ííF G
if
ìì 
(
ìì 
tipoOperacion
ìì !
==
ìì! #!
TipoComprobantePara
ìì$ 7
.
ìì7 8
Venta
ìì8 =
)
ìì= >
{
îî 
var
ïï 

resultados
ïï 
=
ïï  
sesionUsuario
ïï! .
.
ïï. /,
IdCentroDeAtencionSeleccionado
ïï/ M
==
ïïN P
sesionUsuario
ïïQ ^
.
ïï^ _
Sede
ïï_ c
.
ïïc d
Id
ïïd f
?
ïïg h
await
ïïi n1
"ObtenerTiposDeComprobanteParaVentaïïo ë
(ïïë í
)ïïí ì
:ïïî ï
await
ññ 0
"ObtenerTiposDeComprobanteParaVenta
ññ <
(
ññ< =
sesionUsuario
ññ= J
.
ññJ K
Empleado
ññK S
.
ññS T
Id
ññT V
,
ññV W
sesionUsuario
ññX e
.
ññe f-
IdCentroDeAtencionSeleccionadoññf Ñ
)ññÑ Ö
;ññÖ Ü
tiposComprobante
óó  
=
óó! "
sesionUsuario
óó# 0
.
óó0 1,
IdCentroDeAtencionSeleccionado
óó1 O
==
óóP R
sesionUsuario
óóS `
.
óó` a
Sede
óóa e
.
óóe f
Id
óóf h
?
óói j(
SelectorTipoDeComprobanteóók Ñ
.óóÑ Ö
ConvertóóÖ å
(óóå ç

resultadosóóç ó
)óóó ò
:óóô ö'
SelectorTipoDeComprobante
òò -
.
òò- .
Convert
òò. 5
(
òò5 6

resultados
òò6 @
,
òò@ A
sesionUsuario
òòB O
.
òòO P,
IdCentroDeAtencionSeleccionado
òòP n
)
òòn o
;
òòo p
}
ôô 
else
öö 
if
öö 
(
öö 
tipoOperacion
öö %
==
öö& (!
TipoComprobantePara
öö) <
.
öö< =#
VentasPorContingencia
öö= R
)
ööR S
{
õõ 
var
úú 

resultados
úú "
=
úú# $
await
úú% *@
2ObtenerTiposDeComprobanteParaVentasPorContingencia
úú+ ]
(
úú] ^
sesionUsuario
úú^ k
.
úúk l
Empleado
úúl t
.
úút u
Id
úúu w
,
úúw x
sesionUsuarioúúy Ü
.úúÜ á.
IdCentroDeAtencionSeleccionadoúúá •
)úú• ¶
;úú¶ ß
tiposComprobante
ùù $
=
ùù% &
sesionUsuario
ùù' 4
.
ùù4 5,
IdCentroDeAtencionSeleccionado
ùù5 S
==
ùùT V
sesionUsuario
ùùW d
.
ùùd e
Sede
ùùe i
.
ùùi j
Id
ùùj l
?
ùùm n(
SelectorTipoDeComprobanteùùo à
.ùùà â
Convertùùâ ê
(ùùê ë

resultadosùùë õ
)ùùõ ú
:ùùù û'
SelectorTipoDeComprobante
ûû 1
.
ûû1 2
Convert
ûû2 9
(
ûû9 :

resultados
ûû: D
,
ûûD E
sesionUsuario
ûûF S
.
ûûS T,
IdCentroDeAtencionSeleccionado
ûûT r
)
ûûr s
;
ûûs t
}
üü 
else
†† 
if
†† 
(
†† 
tipoOperacion
†† &
==
††' )!
TipoComprobantePara
††* =
.
††= >
ReporteDeVenta
††> L
)
††L M
{
°° 
var
¢¢ 

resultados
¢¢ "
=
¢¢# $
await
¢¢% *0
"ObtenerTiposDeComprobanteParaVenta
¢¢+ M
(
¢¢M N
)
¢¢N O
;
¢¢O P
tiposComprobante
££ $
=
££% &
sesionUsuario
££' 4
.
££4 5,
IdCentroDeAtencionSeleccionado
££5 S
==
££T V
sesionUsuario
££W d
.
££d e
Sede
££e i
.
££i j
Id
££j l
?
££m n(
SelectorTipoDeComprobante££o à
.££à â
Convert££â ê
(££ê ë

resultados££ë õ
)££õ ú
:££ù û'
SelectorTipoDeComprobante
§§ 1
.
§§1 2
Convert
§§2 9
(
§§9 :

resultados
§§: D
)
§§D E
;
§§E F
}
•• 
else
¶¶ 
if
¶¶ 
(
¶¶ 
tipoOperacion
¶¶ &
==
¶¶' )!
TipoComprobantePara
¶¶* =
.
¶¶= >
VentasYSusNotas
¶¶> M
)
¶¶M N
{
ßß 
var
®® 

resultados
®® "
=
®®# $
await
®®% *:
,ObtenerTiposDeComprobanteParaVentasYSusNotas
®®+ W
(
®®W X
)
®®X Y
;
®®Y Z
tiposComprobante
©© $
=
©©% &
sesionUsuario
©©' 4
.
©©4 5,
IdCentroDeAtencionSeleccionado
©©5 S
==
©©T V
sesionUsuario
©©W d
.
©©d e
Sede
©©e i
.
©©i j
Id
©©j l
?
©©m n(
SelectorTipoDeComprobante©©o à
.©©à â
Convert©©â ê
(©©ê ë

resultados©©ë õ
)©©õ ú
:©©ù û'
SelectorTipoDeComprobante
™™ 1
.
™™1 2
Convert
™™2 9
(
™™9 :

resultados
™™: D
)
™™D E
;
™™E F
}
´´ 
else
¨¨ 
if
¨¨ 
(
¨¨ 
tipoOperacion
¨¨ &
==
¨¨' )!
TipoComprobantePara
¨¨* =
.
¨¨= >*
SeriesAutonumericasParaVenta
¨¨> Z
)
¨¨Z [
{
≠≠ 
var
ÆÆ 

resultados
ÆÆ "
=
ÆÆ# $
sesionUsuario
ÆÆ% 2
.
ÆÆ2 3,
IdCentroDeAtencionSeleccionado
ÆÆ3 Q
==
ÆÆR T
sesionUsuario
ÆÆU b
.
ÆÆb c
Sede
ÆÆc g
.
ÆÆg h
Id
ÆÆh j
?
ÆÆj k
await
ÆÆl q1
"ObtenerTiposDeComprobanteParaVentaÆÆr î
(ÆÆî ï
)ÆÆï ñ
:ÆÆó ò
awaitÆÆô û2
"ObtenerTiposDeComprobanteParaVentaÆÆü ¡
(ÆÆ¡ ¬
sesionUsuarioÆÆ¬ œ
.ÆÆœ –
EmpleadoÆÆ– ÿ
.ÆÆÿ Ÿ
IdÆÆŸ €
,ÆÆ€ ‹
sesionUsuarioÆÆ› Í
.ÆÆÍ Î.
IdCentroDeAtencionSeleccionadoÆÆÎ â
)ÆÆâ ä
;ÆÆä ã
tiposComprobante
ØØ %
=
ØØ& '
sesionUsuario
∞∞ %
.
∞∞% &,
IdCentroDeAtencionSeleccionado
∞∞& D
==
∞∞E G
sesionUsuario
∞∞H U
.
∞∞U V
Sede
∞∞V Z
.
∞∞Z [
Id
∞∞[ ]
?
∞∞^ _'
SelectorTipoDeComprobante
∞∞` y
.
∞∞y z
Convert∞∞z Å
(∞∞Å Ç

resultados∞∞Ç å
,∞∞å ç
true∞∞é í
)∞∞í ì
:∞∞ì î)
SelectorTipoDeComprobante∞∞î ≠
.∞∞≠ Æ
Convert∞∞Æ µ
(∞∞µ ∂

resultados∞∞∂ ¿
,∞∞¿ ¡
sesionUsuario∞∞¬ œ
.∞∞œ –.
IdCentroDeAtencionSeleccionado∞∞– Ó
,∞∞Ó Ô
true∞∞ Ù
)∞∞Ù ı
;∞∞ı ˆ
}
±± 
else
≤≤ 
if
≤≤ 
(
≤≤ 
tipoOperacion
≤≤ &
==
≤≤' )!
TipoComprobantePara
≤≤* =
.
≤≤= >9
+SeriesAutonumericasParaVentaExcluidoFactura
≤≤> i
)
≤≤i j
{
≥≥ 
var
¥¥ 

resultados
¥¥ &
=
¥¥' (
sesionUsuario
¥¥) 6
.
¥¥6 7,
IdCentroDeAtencionSeleccionado
¥¥7 U
==
¥¥V X
sesionUsuario
¥¥Y f
.
¥¥f g
Sede
¥¥g k
.
¥¥k l
Id
¥¥l n
?
¥¥o p
(
¥¥q r
await
¥¥r w1
"ObtenerTiposDeComprobanteParaVenta¥¥x ö
(¥¥õ ú
)¥¥ú ù
)¥¥ù û
.¥¥û ü
Where¥¥ü §
(¥¥§ •
c¥¥• ¶
=>¥¥ß ©
c¥¥™ ´
.¥¥´ ¨!
IdTipoComprobante¥¥¨ Ω
!=¥¥æ ¿
MaestroSettings¥¥¡ –
.¥¥– —
Default¥¥— ÿ
.¥¥ÿ Ÿ2
"IdDetalleMaestroComprobanteFactura¥¥Ÿ ˚
)¥¥˚ ¸
.¥¥¸ ˝
ToList¥¥˝ É
(¥¥É Ñ
)¥¥Ñ Ö
:¥¥Ü á
(
µµ 
await
µµ "0
"ObtenerTiposDeComprobanteParaVenta
µµ# E
(
µµF G
sesionUsuario
µµG T
.
µµT U
Empleado
µµU ]
.
µµ] ^
Id
µµ^ `
,
µµ` a
sesionUsuario
µµb o
.
µµo p-
IdCentroDeAtencionSeleccionadoµµp é
)µµé è
)µµè ê
.µµê ë
Whereµµë ñ
(µµñ ó
cµµó ò
=>µµô õ
cµµú ù
.µµù û!
IdTipoComprobanteµµû Ø
!=µµ∞ ≤
MaestroSettingsµµ≥ ¬
.µµ¬ √
Defaultµµ√  
.µµ  À2
"IdDetalleMaestroComprobanteFacturaµµÀ Ì
)µµÌ Ó
.µµÓ Ô
ToListµµÔ ı
(µµı ˆ
)µµˆ ˜
;µµ˜ ¯
tiposComprobante
∂∂ $
=
∂∂% &
sesionUsuario
∂∂' 4
.
∂∂4 5,
IdCentroDeAtencionSeleccionado
∂∂5 S
==
∂∂T V
sesionUsuario
∂∂W d
.
∂∂d e
Sede
∂∂e i
.
∂∂i j
Id
∂∂j l
?
∂∂m n(
SelectorTipoDeComprobante∂∂o à
.∂∂à â
Convert∂∂â ê
(∂∂ê ë

resultados∂∂ë õ
,∂∂õ ú
true∂∂ù °
)∂∂° ¢
:∂∂£ §'
SelectorTipoDeComprobante
∑∑ 5
.
∑∑5 6
Convert
∑∑6 =
(
∑∑= >

resultados
∑∑> H
,
∑∑H I
sesionUsuario
∑∑J W
.
∑∑W X,
IdCentroDeAtencionSeleccionado
∑∑X v
,
∑∑v w
true
∑∑x |
)
∑∑| }
;
∑∑} ~
}
∏∏ 
else
∏∏ 
if
ππ 
(
ππ 
tipoOperacion
ππ !
==
ππ" $!
TipoComprobantePara
ππ% 8
.
ππ8 9
Pedido
ππ9 ?
)
ππ? @
{
∫∫ 
var
ªª 

resultados
ªª "
=
ªª# $
sesionUsuario
ªª% 2
.
ªª2 3,
IdCentroDeAtencionSeleccionado
ªª3 Q
==
ªªR T
sesionUsuario
ªªU b
.
ªªb c
Sede
ªªc g
.
ªªg h
Id
ªªh j
?
ªªk l
await
ªªm r2
#ObtenerTiposDeComprobanteParaPedidoªªs ñ
(ªªñ ó
)ªªó ò
:ªªô ö
await
ºº 1
#ObtenerTiposDeComprobanteParaPedido
ºº A
(
ººA B
sesionUsuario
ººB O
.
ººO P
Empleado
ººP X
.
ººX Y
Id
ººY [
,
ºº[ \
sesionUsuario
ºº] j
.
ººj k-
IdCentroDeAtencionSeleccionadoººk â
)ººâ ä
;ººä ã
tiposComprobante
ΩΩ $
=
ΩΩ% &
sesionUsuario
ΩΩ' 4
.
ΩΩ4 5,
IdCentroDeAtencionSeleccionado
ΩΩ5 S
==
ΩΩT V
sesionUsuario
ΩΩW d
.
ΩΩd e
Sede
ΩΩe i
.
ΩΩi j
Id
ΩΩj l
?
ΩΩm n(
SelectorTipoDeComprobanteΩΩo à
.ΩΩà â
ConvertΩΩâ ê
(ΩΩê ë

resultadosΩΩë õ
)ΩΩõ ú
:ΩΩù û'
SelectorTipoDeComprobante
ææ 1
.
ææ1 2
Convert
ææ2 9
(
ææ9 :

resultados
ææ: D
,
ææD E
sesionUsuario
ææF S
.
ææS T,
IdCentroDeAtencionSeleccionado
ææT r
)
æær s
;
ææs t
}
øø 
return
¿¿ 
tiposComprobante
¿¿ '
;
¿¿' (
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* \
,
ƒƒ\ ]
e
ƒƒ^ _
)
ƒƒ_ `
;
ƒƒ` a
}
≈≈ 
}
∆∆ 	
public
œœ 
async
œœ 
Task
œœ 
<
œœ 
List
œœ 
<
œœ .
 TipoDeComprobanteParaTransaccion
œœ ?
>
œœ? @
>
œœ@ A0
"ObtenerTiposDeComprobanteParaVenta
œœB d
(
œœd e
int
œœe h

idEmpleado
œœi s
,
œœs t
int
œœu x
idCentroAtencionœœy â
)œœâ ä
{
–– 	
try
—— 
{
““ 
var
”” 
	resultado
”” 
=
”” 
(
””  !
await
””! &%
_repositorioTransaccion
””' >
.
””> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
””? i
(
””i j!
TransaccionSettings
””j }
.
””} ~
Default””~ Ö
.””Ö Ü-
IdTipoTransaccionOrdenDeVenta””Ü £
)””£ §
)””§ •
.””• ¶
Where””¶ ´
(””´ ¨
r””¨ ≠
=>””Æ ∞
r””± ≤
.””≤ ≥#
id_tipo_comprobante””≥ ∆
!=””« …
MaestroSettings””  Ÿ
.””Ÿ ⁄
Default””⁄ ·
.””· ‚5
%IdDetalleMaestroComprobantePorDefecto””‚ á
)””á à
;””à â
foreach
‘‘ 
(
‘‘ 
var
‘‘ 
tipo
‘‘ !
in
‘‘" $
	resultado
‘‘% .
)
‘‘. /
{
’’ 
tipo
÷÷ 
.
÷÷ 
Detalle_maestro
÷÷ (
.
÷÷( )
Serie_comprobante
÷÷) :
=
÷÷; <
tipo
÷÷= A
.
÷÷A B
Detalle_maestro
÷÷B Q
.
÷÷Q R
Serie_comprobante
÷÷R c
.
÷÷c d
Where
÷÷d i
(
÷÷i j
sc
÷÷j l
=>
÷÷m o
sc
÷÷p r
.
÷÷r s
id_propietario÷÷s Å
==÷÷Ç Ñ 
idCentroAtencion÷÷Ö ï
&&÷÷ñ ò
char÷÷ô ù
.÷÷ù û
IsLetter÷÷û ¶
(÷÷¶ ß
sc÷÷ß ©
.÷÷© ™
numero÷÷™ ∞
.÷÷∞ ±
FirstOrDefault÷÷± ø
(÷÷ø ¿
)÷÷¿ ¡
)÷÷¡ ¬
&&÷÷√ ≈
sc÷÷∆ »
.÷÷» …

es_vigente÷÷… ”
)÷÷” ‘
.÷÷‘ ’
ToList÷÷’ €
(÷÷€ ‹
)÷÷‹ ›
;÷÷› ﬁ
}
◊◊ 
return
ÿÿ .
 TipoDeComprobanteParaTransaccion
ÿÿ 7
.
ÿÿ7 8
Convert
ÿÿ8 ?
(
ÿÿ? @
	resultado
ÿÿ@ I
.
ÿÿI J
ToList
ÿÿJ P
(
ÿÿP Q
)
ÿÿQ R
)
ÿÿR S
;
ÿÿS T
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
e
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
new
‹‹ 
LogicaException
‹‹ )
(
‹‹) *
$str
‹‹* \
,
‹‹\ ]
e
‹‹^ _
)
‹‹_ `
;
‹‹` a
}
›› 
}
ﬁﬁ 	
public
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ .
 TipoDeComprobanteParaTransaccion
ﬂﬂ ?
>
ﬂﬂ? @
>
ﬂﬂ@ A1
#ObtenerTiposDeComprobanteParaPedido
ﬂﬂB e
(
ﬂﬂe f
int
ﬂﬂf i

idEmpleado
ﬂﬂj t
,
ﬂﬂt u
int
ﬂﬂv y
idCentroAtencionﬂﬂz ä
)ﬂﬂä ã
{
‡‡ 	
try
·· 
{
‚‚ 
var
„„ 
	resultado
„„ 
=
„„ 
(
„„  !
await
„„! &%
_repositorioTransaccion
„„' >
.
„„> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
„„? i
(
„„i j
PedidoSettings
„„j x
.
„„x y
Default„„y Ä
.„„Ä Å,
IdTipoTransaccionOrdenPedido„„Å ù
)„„ù û
)„„û ü
.„„ü †
Where„„† •
(„„• ¶
r„„¶ ß
=>„„® ™
r„„´ ¨
.„„¨ ≠#
id_tipo_comprobante„„≠ ¿
!=„„¡ √
MaestroSettings„„ƒ ”
.„„” ‘
Default„„‘ €
.„„€ ‹5
%IdDetalleMaestroComprobantePorDefecto„„‹ Å
)„„Å Ç
;„„Ç É
foreach
‰‰ 
(
‰‰ 
var
‰‰ 
tipo
‰‰ !
in
‰‰" $
	resultado
‰‰% .
)
‰‰. /
{
ÂÂ 
tipo
ÊÊ 
.
ÊÊ 
Detalle_maestro
ÊÊ (
.
ÊÊ( )
Serie_comprobante
ÊÊ) :
=
ÊÊ; <
tipo
ÊÊ= A
.
ÊÊA B
Detalle_maestro
ÊÊB Q
.
ÊÊQ R
Serie_comprobante
ÊÊR c
.
ÊÊc d
Where
ÊÊd i
(
ÊÊi j
sc
ÊÊj l
=>
ÊÊm o
sc
ÊÊp r
.
ÊÊr s
id_propietarioÊÊs Å
==ÊÊÇ Ñ 
idCentroAtencionÊÊÖ ï
&&ÊÊñ ò
scÊÊô õ
.ÊÊõ ú

es_vigenteÊÊú ¶
)ÊÊ¶ ß
.ÊÊß ®
ToListÊÊ® Æ
(ÊÊÆ Ø
)ÊÊØ ∞
;ÊÊ∞ ±
}
ÁÁ 
return
ËË .
 TipoDeComprobanteParaTransaccion
ËË 7
.
ËË7 8
Convert
ËË8 ?
(
ËË? @
	resultado
ËË@ I
.
ËËI J
ToList
ËËJ P
(
ËËP Q
)
ËËQ R
)
ËËR S
;
ËËS T
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* ]
,
ÏÏ] ^
e
ÏÏ_ `
)
ÏÏ` a
;
ÏÏa b
}
ÌÌ 
}
ÓÓ 	
public
ÛÛ 
async
ÛÛ 
Task
ÛÛ 
<
ÛÛ 
List
ÛÛ 
<
ÛÛ .
 TipoDeComprobanteParaTransaccion
ÛÛ ?
>
ÛÛ? @
>
ÛÛ@ A0
"ObtenerTiposDeComprobanteParaVenta
ÛÛB d
(
ÛÛd e
)
ÛÛe f
{
ÙÙ 	
try
ıı 
{
ˆˆ 
var
˜˜ 
	resultado
˜˜ 
=
˜˜ 
(
˜˜  !
await
˜˜! &%
_repositorioTransaccion
˜˜' >
.
˜˜> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
˜˜? i
(
˜˜i j!
TransaccionSettings
˜˜j }
.
˜˜} ~
Default˜˜~ Ö
.˜˜Ö Ü-
IdTipoTransaccionOrdenDeVenta˜˜Ü £
)˜˜£ §
)˜˜§ •
.˜˜• ¶
Where˜˜¶ ´
(˜˜´ ¨
r˜˜¨ ≠
=>˜˜Æ ∞
r˜˜± ≤
.˜˜≤ ≥#
id_tipo_comprobante˜˜≥ ∆
!=˜˜« …
MaestroSettings˜˜  Ÿ
.˜˜Ÿ ⁄
Default˜˜⁄ ·
.˜˜· ‚5
%IdDetalleMaestroComprobantePorDefecto˜˜‚ á
)˜˜á à
.˜˜à â
ToList˜˜â è
(˜˜è ê
)˜˜ê ë
;˜˜ë í
foreach
¯¯ 
(
¯¯ 
var
¯¯ 
tipo
¯¯ !
in
¯¯" $
	resultado
¯¯% .
)
¯¯. /
{
˘˘ 
tipo
˙˙ 
.
˙˙ 
Detalle_maestro
˙˙ (
.
˙˙( )
Serie_comprobante
˙˙) :
=
˙˙; <
tipo
˙˙= A
.
˙˙A B
Detalle_maestro
˙˙B Q
.
˙˙Q R
Serie_comprobante
˙˙R c
.
˙˙c d
Where
˙˙d i
(
˙˙i j
sc
˙˙j l
=>
˙˙m o
char
˙˙p t
.
˙˙t u
IsLetter
˙˙u }
(
˙˙} ~
sc˙˙~ Ä
.˙˙Ä Å
numero˙˙Å á
.˙˙á à
FirstOrDefault˙˙à ñ
(˙˙ñ ó
)˙˙ó ò
)˙˙ò ô
&&˙˙ö ú
sc˙˙ù ü
.˙˙ü †

es_vigente˙˙† ™
)˙˙™ ´
.˙˙´ ¨
ToList˙˙¨ ≤
(˙˙≤ ≥
)˙˙≥ ¥
;˙˙¥ µ
}
˚˚ 
return
¸¸ .
 TipoDeComprobanteParaTransaccion
¸¸ 7
.
¸¸7 8
Convert
¸¸8 ?
(
¸¸? @
	resultado
¸¸@ I
.
¸¸I J
ToList
¸¸J P
(
¸¸P Q
)
¸¸Q R
)
¸¸R S
;
¸¸S T
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* \
,
ÄÄ\ ]
e
ÄÄ^ _
)
ÄÄ_ `
;
ÄÄ` a
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
List
ÑÑ 
<
ÑÑ .
 TipoDeComprobanteParaTransaccion
ÑÑ ?
>
ÑÑ? @
>
ÑÑ@ A1
#ObtenerTiposDeComprobanteParaPedido
ÑÑB e
(
ÑÑe f
)
ÑÑf g
{
ÖÖ 	
try
ÜÜ 
{
áá 
var
àà 
	resultado
àà 
=
àà 
(
àà  !
await
àà! &%
_repositorioTransaccion
àà' >
.
àà> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
àà? i
(
àài j
PedidoSettings
ààj x
.
ààx y
Defaultàày Ä
.ààÄ Å,
IdTipoTransaccionOrdenPedidoààÅ ù
)ààù û
)ààû ü
.ààü †
Whereàà† •
(àà• ¶
ràà¶ ß
=>àà® ™
ràà´ ¨
.àà¨ ≠#
id_tipo_comprobanteàà≠ ¿
!=àà¡ √
MaestroSettingsààƒ ”
.àà” ‘
Defaultàà‘ €
.àà€ ‹5
%IdDetalleMaestroComprobantePorDefectoàà‹ Å
)ààÅ Ç
.ààÇ É
ToListààÉ â
(ààâ ä
)ààä ã
;ààã å
foreach
ââ 
(
ââ 
var
ââ 
tipo
ââ !
in
ââ" $
	resultado
ââ% .
)
ââ. /
{
ää 
tipo
ãã 
.
ãã 
Detalle_maestro
ãã (
.
ãã( )
Serie_comprobante
ãã) :
=
ãã; <
tipo
ãã= A
.
ããA B
Detalle_maestro
ããB Q
.
ããQ R
Serie_comprobante
ããR c
.
ããc d
Where
ããd i
(
ããi j
sc
ããj l
=>
ããm o
sc
ããp r
.
ããr s

es_vigente
ããs }
)
ãã} ~
.
ãã~ 
ToListãã Ö
(ããÖ Ü
)ããÜ á
;ããá à
}
åå 
return
çç .
 TipoDeComprobanteParaTransaccion
çç 7
.
çç7 8
Convert
çç8 ?
(
çç? @
	resultado
çç@ I
.
ççI J
ToList
ççJ P
(
ççP Q
)
ççQ R
)
ççR S
;
ççS T
}
éé 
catch
èè 
(
èè 
	Exception
èè 
e
èè 
)
èè 
{
êê 
throw
ëë 
new
ëë 
LogicaException
ëë )
(
ëë) *
$str
ëë* \
,
ëë\ ]
e
ëë^ _
)
ëë_ `
;
ëë` a
}
íí 
}
ìì 	
public
ôô 
async
ôô 
Task
ôô 
<
ôô 
List
ôô 
<
ôô .
 TipoDeComprobanteParaTransaccion
ôô ?
>
ôô? @
>
ôô@ A:
,ObtenerTiposDeComprobanteParaVentasYSusNotas
ôôB n
(
ôôn o
)
ôôo p
{
öö 	
try
õõ 
{
úú 
var
ùù 
	resultado
ùù 
=
ùù 
(
ùù  !
await
ùù! &%
_repositorioTransaccion
ùù' >
.
ùù> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
ùù? i
(
ùùi j
Diccionario
ùùj u
.
ùùu vR
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesùùv π
)ùùπ ∫
)ùù∫ ª
.ùùª º
Whereùùº ¡
(ùù¡ ¬
rùù¬ √
=>ùùƒ ∆
rùù« »
.ùù» …#
id_tipo_comprobanteùù… ‹
!=ùù› ﬂ
MaestroSettingsùù‡ Ô
.ùùÔ 
Defaultùù ˜
.ùù˜ ¯5
%IdDetalleMaestroComprobantePorDefectoùù¯ ù
)ùùù û
.
ûû 
GroupBy
ûû 
(
ûû 
r
ûû 
=>
ûû !
new
ûû" %
{
ûû& '
r
ûû( )
.
ûû) *!
id_tipo_comprobante
ûû* =
,
ûû= >
r
ûû? @
.
ûû@ A
	es_propio
ûûA J
}
ûûK L
)
ûûL M
.
ûûM N
Select
ûûN T
(
ûûT U
r
ûûU V
=>
ûûW Y
r
ûûZ [
.
ûû[ \
FirstOrDefault
ûû\ j
(
ûûj k
)
ûûk l
)
ûûl m
.
üü 
ToList
üü 
(
üü 
)
üü 
;
üü 
foreach
†† 
(
†† 
var
†† 
tipo
†† !
in
††" $
	resultado
††% .
)
††. /
{
°° 
tipo
¢¢ 
.
¢¢ 
Detalle_maestro
¢¢ (
.
¢¢( )
Serie_comprobante
¢¢) :
=
¢¢; <
tipo
¢¢= A
.
¢¢A B
Detalle_maestro
¢¢B Q
.
¢¢Q R
Serie_comprobante
¢¢R c
.
¢¢c d
ToList
¢¢d j
(
¢¢j k
)
¢¢k l
;
¢¢l m
}
££ 
return
§§ .
 TipoDeComprobanteParaTransaccion
§§ 7
.
§§7 8
Convert
§§8 ?
(
§§? @
	resultado
§§@ I
.
§§I J
ToList
§§J P
(
§§P Q
)
§§Q R
)
§§R S
;
§§S T
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* \
,
®®\ ]
e
®®^ _
)
®®_ `
;
®®` a
}
©© 
}
™™ 	
public
≤≤ 
async
≤≤ 
Task
≤≤ 
<
≤≤ 
List
≤≤ 
<
≤≤ .
 TipoDeComprobanteParaTransaccion
≤≤ ?
>
≤≤? @
>
≤≤@ A@
2ObtenerTiposDeComprobanteParaVentasPorContingencia
≤≤B t
(
≤≤t u
int
≤≤u x

idEmpleado≤≤y É
,≤≤É Ñ
int≤≤Ö à 
idCentroAtencion≤≤â ô
)≤≤ô ö
{
≥≥ 	
try
¥¥ 
{
µµ 
var
∂∂ 
	resultado
∂∂ 
=
∂∂ 
(
∂∂  !
await
∂∂! &%
_repositorioTransaccion
∂∂' >
.
∂∂> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
∂∂? i
(
∂∂i j!
TransaccionSettings
∂∂j }
.
∂∂} ~
Default∂∂~ Ö
.∂∂Ö Ü-
IdTipoTransaccionOrdenDeVenta∂∂Ü £
)∂∂£ §
)∂∂§ •
.∂∂• ¶
Where∂∂¶ ´
(∂∂´ ¨
r∂∂¨ ≠
=>∂∂Æ ∞
r∂∂± ≤
.∂∂≤ ≥#
id_tipo_comprobante∂∂≥ ∆
!=∂∂« …
MaestroSettings∂∂  Ÿ
.∂∂Ÿ ⁄
Default∂∂⁄ ·
.∂∂· ‚5
%IdDetalleMaestroComprobantePorDefecto∂∂‚ á
)∂∂á à
;∂∂à â
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
tipo
∑∑ !
in
∑∑" $
	resultado
∑∑% .
)
∑∑. /
{
∏∏ 
tipo
ππ 
.
ππ 
Detalle_maestro
ππ (
.
ππ( )
Serie_comprobante
ππ) :
=
ππ; <
tipo
ππ= A
.
ππA B
Detalle_maestro
ππB Q
.
ππQ R
Serie_comprobante
ππR c
.
ππc d
Where
ππd i
(
ππi j
sc
ππj l
=>
ππm o
char
ππp t
.
ππt u
IsNumber
ππu }
(
ππ} ~
scππ~ Ä
.ππÄ Å
numeroππÅ á
.ππá à
FirstOrDefaultππà ñ
(ππñ ó
)ππó ò
)ππò ô
&&ππö ú
scππù ü
.ππü †

es_vigenteππ† ™
)ππ™ ´
.ππ´ ¨
ToListππ¨ ≤
(ππ≤ ≥
)ππ≥ ¥
;ππ¥ µ
}
∫∫ 
return
ªª .
 TipoDeComprobanteParaTransaccion
ªª 7
.
ªª7 8
Convert
ªª8 ?
(
ªª? @
	resultado
ªª@ I
.
ªªI J
ToList
ªªJ P
(
ªªP Q
)
ªªQ R
)
ªªR S
;
ªªS T
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
e
ΩΩ 
)
ΩΩ 
{
ææ 
throw
øø 
new
øø 
LogicaException
øø )
(
øø) *
$str
øø* n
,
øøn o
e
øøp q
)
øøq r
;
øør s
}
¿¿ 
}
¡¡ 	
public
≈≈ 
async
≈≈ 
Task
≈≈ 
<
≈≈ 
List
≈≈ 
<
≈≈ .
 TipoDeComprobanteParaTransaccion
≈≈ ?
>
≈≈? @
>
≈≈@ A6
(ObtenerTiposDeComprobanteParaAnularVenta
≈≈B j
(
≈≈j k
)
≈≈k l
{
∆∆ 	
try
«« 
{
»» 
var
…… 
	resultado
…… 
=
…… 
(
……  !
await
……! &%
_repositorioTransaccion
……' >
.
……> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
……? i
(
……i j!
TransaccionSettings
……j }
.
……} ~
Default……~ Ö
.……Ö Ü8
(IdTipoTransaccionOrdenDeAnulacionDeVenta……Ü Æ
)……Æ Ø
)……Ø ∞
.……∞ ±
Where……± ∂
(……∂ ∑
r……∑ ∏
=>……π ª
r……º Ω
.……Ω æ#
id_tipo_comprobante……æ —
!=……“ ‘
MaestroSettings……’ ‰
.……‰ Â
Default……Â Ï
.……Ï Ì5
%IdDetalleMaestroComprobantePorDefecto……Ì í
)……í ì
.……ì î
ToList……î ö
(……ö õ
)……õ ú
;……ú ù
return
   .
 TipoDeComprobanteParaTransaccion
   7
.
  7 8
Convert
  8 ?
(
  ? @
	resultado
  @ I
)
  I J
;
  J K
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ 
LogicaException
ŒŒ )
(
ŒŒ) *
$str
ŒŒ* j
,
ŒŒj k
e
ŒŒl m
)
ŒŒm n
;
ŒŒn o
}
œœ 
}
–– 	
public
”” 
async
”” 
Task
”” 
<
”” 
List
”” 
<
”” .
 TipoDeComprobanteParaTransaccion
”” ?
>
””? @
>
””@ A9
+ObtenerTiposDeComprobanteParaAnulacionVenta
””B m
(
””m n
int
””n q

idEmpleado
””r |
,
””| }
int””~ Å 
idCentroAtencion””Ç í
)””í ì
{
‘‘ 	
try
’’ 
{
÷÷ 
var
◊◊ 
	resultado
◊◊ 
=
◊◊ 
(
◊◊  !
await
◊◊! &%
_repositorioTransaccion
◊◊' >
.
◊◊> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
◊◊? i
(
◊◊i j!
TransaccionSettings
◊◊j }
.
◊◊} ~
Default◊◊~ Ö
.◊◊Ö Ü8
(IdTipoTransaccionOrdenDeAnulacionDeVenta◊◊Ü Æ
)◊◊Æ Ø
)◊◊Ø ∞
.◊◊∞ ±
Where◊◊± ∂
(◊◊∂ ∑
r◊◊∑ ∏
=>◊◊π ª
r◊◊º Ω
.◊◊Ω æ#
id_tipo_comprobante◊◊æ —
!=◊◊“ ‘
MaestroSettings◊◊’ ‰
.◊◊‰ Â
Default◊◊Â Ï
.◊◊Ï Ì5
%IdDetalleMaestroComprobantePorDefecto◊◊Ì í
)◊◊í ì
;◊◊ì î
foreach
ÿÿ 
(
ÿÿ 
var
ÿÿ 
tipo
ÿÿ !
in
ÿÿ" $
	resultado
ÿÿ% .
)
ÿÿ. /
{
ŸŸ 
tipo
⁄⁄ 
.
⁄⁄ 
Detalle_maestro
⁄⁄ (
.
⁄⁄( )
Serie_comprobante
⁄⁄) :
=
⁄⁄; <
tipo
⁄⁄= A
.
⁄⁄A B
Detalle_maestro
⁄⁄B Q
.
⁄⁄Q R
Serie_comprobante
⁄⁄R c
.
⁄⁄c d
Where
⁄⁄d i
(
⁄⁄i j
sc
⁄⁄j l
=>
⁄⁄m o
sc
⁄⁄p r
.
⁄⁄r s
id_propietario⁄⁄s Å
==⁄⁄Ç Ñ 
idCentroAtencion⁄⁄Ö ï
)⁄⁄ï ñ
.⁄⁄ñ ó
ToList⁄⁄ó ù
(⁄⁄ù û
)⁄⁄û ü
;⁄⁄ü †
}
€€ 
return
‹‹ .
 TipoDeComprobanteParaTransaccion
‹‹ 7
.
‹‹7 8
Convert
‹‹8 ?
(
‹‹? @
	resultado
‹‹@ I
.
‹‹I J
ToList
‹‹J P
(
‹‹P Q
)
‹‹Q R
)
‹‹R S
;
‹‹S T
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ 
e
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
throw
‡‡ 
new
‡‡ 
LogicaException
‡‡ )
(
‡‡) *
$str
‡‡* j
,
‡‡j k
e
‡‡l m
)
‡‡m n
;
‡‡n o
}
·· 
}
‚‚ 	
public
„„ 
async
„„ 
Task
„„ 
<
„„ 
List
„„ 
<
„„ .
 TipoDeComprobanteParaTransaccion
„„ ?
>
„„? @
>
„„@ A>
0ObtenerTiposDeComprobanteParaDescuentoSobreVenta
„„B r
(
„„r s
)
„„s t
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
var
ÁÁ 
	resultado
ÁÁ 
=
ÁÁ 
(
ÁÁ  !
await
ÁÁ! &%
_repositorioTransaccion
ÁÁ' >
.
ÁÁ> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
ÁÁ? i
(
ÁÁi j!
TransaccionSettings
ÁÁj }
.
ÁÁ} ~
DefaultÁÁ~ Ö
.ÁÁÖ Ü;
+IdTipoTransaccionDescuentoSobreOrdenDeVentaÁÁÜ ±
)ÁÁ± ≤
)ÁÁ≤ ≥
.ÁÁ≥ ¥
WhereÁÁ¥ π
(ÁÁπ ∫
rÁÁ∫ ª
=>ÁÁº æ
rÁÁø ¿
.ÁÁ¿ ¡#
id_tipo_comprobanteÁÁ¡ ‘
!=ÁÁ’ ◊
MaestroSettingsÁÁÿ Á
.ÁÁÁ Ë
DefaultÁÁË Ô
.ÁÁÔ 5
%IdDetalleMaestroComprobantePorDefectoÁÁ ï
)ÁÁï ñ
.ÁÁñ ó
ToListÁÁó ù
(ÁÁù û
)ÁÁû ü
;ÁÁü †
return
ËË .
 TipoDeComprobanteParaTransaccion
ËË 7
.
ËË7 8
Convert
ËË8 ?
(
ËË? @
	resultado
ËË@ I
)
ËËI J
;
ËËJ K
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* n
,
ÏÏn o
e
ÏÏp q
)
ÏÏq r
;
ÏÏr s
}
ÌÌ 
}
ÓÓ 	
public
 
async
 
Task
 
<
 
List
 
<
 .
 TipoDeComprobanteParaTransaccion
 ?
>
? @
>
@ A<
.ObtenerTiposDeComprobanteParaRecargoSobreVenta
B p
(
p q
)
q r
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
var
ÙÙ 
	resultado
ÙÙ 
=
ÙÙ 
(
ÙÙ  !
await
ÙÙ! &%
_repositorioTransaccion
ÙÙ' >
.
ÙÙ> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
ÙÙ? i
(
ÙÙi j!
TransaccionSettings
ÙÙj }
.
ÙÙ} ~
DefaultÙÙ~ Ö
.ÙÙÖ Ü3
#IdTipoTransaccionDebitoOrdenDeVentaÙÙÜ ©
)ÙÙ© ™
)ÙÙ™ ´
.ÙÙ´ ¨
WhereÙÙ¨ ±
(ÙÙ± ≤
rÙÙ≤ ≥
=>ÙÙ¥ ∂
rÙÙ∑ ∏
.ÙÙ∏ π#
id_tipo_comprobanteÙÙπ Ã
!=ÙÙÕ œ
MaestroSettingsÙÙ– ﬂ
.ÙÙﬂ ‡
DefaultÙÙ‡ Á
.ÙÙÁ Ë5
%IdDetalleMaestroComprobantePorDefectoÙÙË ç
)ÙÙç é
.ÙÙé è
ToListÙÙè ï
(ÙÙï ñ
)ÙÙñ ó
;ÙÙó ò
return
ıı .
 TipoDeComprobanteParaTransaccion
ıı 7
.
ıı7 8
Convert
ıı8 ?
(
ıı? @
	resultado
ıı@ I
)
ııI J
;
ııJ K
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
new
˘˘ 
LogicaException
˘˘ )
(
˘˘) *
$str
˘˘* l
,
˘˘l m
e
˘˘n o
)
˘˘o p
;
˘˘p q
}
˚˚ 
}
¸¸ 	
public
ÉÉ 
OperationResult
ÉÉ *
ActualizarSerieDeComprobante
ÉÉ ;
(
ÉÉ; <
int
ÉÉ< ?
id
ÉÉ@ B
,
ÉÉB C
int
ÉÉD G 
idCentroDeAtencion
ÉÉH Z
,
ÉÉZ [
int
ÉÉ\ _!
idTipoDeComprobante
ÉÉ` s
,
ÉÉs t
string
ÉÉu {
numeroDeSerieÉÉ| â
,ÉÉâ ä
intÉÉã é,
numeroDeComprobanteSiguienteÉÉè ´
,ÉÉ´ ¨
boolÉÉ≠ ±
autonumericaÉÉ≤ æ
,ÉÉæ ø
boolÉÉ¿ ƒ
vigenteÉÉ≈ Ã
)ÉÉÃ Õ
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
Serie_comprobante
àà ! 
serieDeComprobante
àà" 4
=
àà5 6
new
àà7 :
Serie_comprobante
àà; L
(
ààL M
)
ààM N
;
ààN O 
serieDeComprobante
ââ "
.
ââ" #
id
ââ# %
=
ââ& '
id
ââ( *
;
ââ* + 
serieDeComprobante
ää "
.
ää" #
id_propietario
ää# 1
=
ää2 3 
idCentroDeAtencion
ää4 F
;
ääF G 
serieDeComprobante
ãã "
.
ãã" #!
id_tipo_comprobante
ãã# 6
=
ãã7 8!
idTipoDeComprobante
ãã9 L
;
ããL M 
serieDeComprobante
åå "
.
åå" #
numero
åå# )
=
åå* +
numeroDeSerie
åå, 9
;
åå9 : 
serieDeComprobante
çç "
.
çç" #
proximo_numero
çç# 1
=
çç2 3*
numeroDeComprobanteSiguiente
çç4 P
;
ççP Q 
serieDeComprobante
éé "
.
éé" #
es_autonumerable
éé# 3
=
éé4 5
autonumerica
éé6 B
;
ééB C 
serieDeComprobante
èè "
.
èè" #

es_vigente
èè# -
=
èè. /
vigente
èè0 7
;
èè7 8 
serieDeComprobante
êê "
.
êê" ##
id_modelo_comprobante
êê# 8
=
êê9 :
$num
êê; <
;
êê< =
return
ëë %
_repositorioTransaccion
ëë .
.
ëë. /(
ActualizarSerieComprobante
ëë/ I
(
ëëI J 
serieDeComprobante
ëëJ \
)
ëë\ ]
;
ëë] ^
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
e
ïï 
;
ïï 
}
ññ 
}
óó 	
public
ôô 
bool
ôô D
6ExisteNumeroDeSerieDeComprobanteSegunTipoDeComprobante
ôô J
(
ôôJ K
int
ôôK N!
idTipoDeComprobante
ôôO b
,
ôôc d
string
ôôd j
numeroDeSerie
ôôk x
)
ôôx y
{
öö 	
return
õõ %
_repositorioTransaccion
õõ *
.
õõ* +<
.ExisteSerieDeComprobanteSegunTipoDeComprobante
õõ+ Y
(
õõY Z!
idTipoDeComprobante
õõZ m
,
õõm n
numeroDeSerie
õõo |
)
õõ| }
;
õõ} ~
}
úú 	
public
•• 
List
•• 
<
•• 
AccionDeNegocio
•• #
>
••# $&
ObtenerAccionesDeNegocio
••% =
(
••= >
)
••> ?
{
¶¶ 	
try
ßß 
{
ßß 
return
ßß 
AccionDeNegocio
ßß (
.
ßß( )
Convert
ßß) 0
(
ßß0 1%
_repositorioTransaccion
ßß1 H
.
ßßH I&
ObtenerAccionesDeNegocio
ßßI a
(
ßßa b
)
ßßb c
.
ßßc d
ToList
ßßd j
(
ßßj k
)
ßßk l
)
ßßl m
;
ßßm n
}
ßßo p
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
®®  !
throw
®®" '
e
®®( )
;
®®) *
}
®®+ ,
}
©© 	
public
¨¨ 
List
¨¨ 
<
¨¨ 
TipoDeTransaccion
¨¨ %
>
¨¨% &'
ObtenerTiposDeTransaccion
¨¨' @
(
¨¨@ A
)
¨¨A B
{
≠≠ 	
try
ÆÆ 
{
ÆÆ 
return
ÆÆ 
TipoDeTransaccion
ÆÆ *
.
ÆÆ* +
Convert
ÆÆ+ 2
(
ÆÆ2 3%
_repositorioTransaccion
ÆÆ3 J
.
ÆÆJ K>
0ObtenerTiposDeTransaccionIncluidoAccionDeNegocio
ÆÆK {
(
ÆÆ{ |
)
ÆÆ| }
.
ÆÆ} ~
ToListÆÆ~ Ñ
(ÆÆÑ Ö
)ÆÆÖ Ü
)ÆÆÜ á
;ÆÆá à
}ÆÆâ ä
catch
ØØ 
(
ØØ 
	Exception
ØØ 
e
ØØ 
)
ØØ 
{
ØØ  !
throw
ØØ" '
e
ØØ( )
;
ØØ) *
}
ØØ+ ,
}
∞∞ 	
public
≤≤ 
OperationResult
≤≤ $
CrearTipoDeTransaccion
≤≤ 5
(
≤≤5 6
string
≤≤6 <
nombre
≤≤= C
,
≤≤C D
string
≤≤E K
descripcion
≤≤L W
,
≤≤W X
int
≤≤Y \"
idTransaccionMaestro
≤≤] q
,
≤≤q r
List
≤≤s w
<
≤≤w x0
!AccionDeNegocioPorTipoTransaccion≤≤x ô
>≤≤ô ö3
#accionesDeNegocioPorTipoTransaccion≤≤õ æ
)≤≤æ ø
{
≥≥ 	
try
¥¥ 
{
µµ 
Tipo_transaccion
∂∂  
tipoDeTransaccion
∂∂! 2
=
∂∂3 4
new
∂∂5 8
Tipo_transaccion
∂∂9 I
(
∂∂I J
)
∂∂J K
;
∂∂K L
tipoDeTransaccion
∑∑ !
.
∑∑! "
nombre
∑∑" (
=
∑∑) *
nombre
∑∑+ 1
;
∑∑1 2
tipoDeTransaccion
∏∏ !
.
∏∏! "
descripcion
∏∏" -
=
∏∏. /
descripcion
∏∏0 ;
;
∏∏; <
tipoDeTransaccion
ππ !
.
ππ! "'
id_tipo_transaccion_padre
ππ" ;
=
ππ< =
(
ππ> ?"
idTransaccionMaestro
ππ? S
==
ππT V
$num
ππW X
)
ππX Y
?
ππZ [
(
ππ\ ]
int
ππ] `
?
ππ` a
)
ππa b
null
ππb f
:
ππg h"
idTransaccionMaestro
ππi }
;
ππ} ~
foreach
∫∫ 
(
∫∫ 
var
∫∫ 
item
∫∫ !
in
∫∫" $1
#accionesDeNegocioPorTipoTransaccion
∫∫% H
)
∫∫H I
{
ªª 4
&Accion_de_negocio_por_tipo_transaccion
ºº :
adnptt
ºº; A
=
ººB C
new
ººD G4
&Accion_de_negocio_por_tipo_transaccion
ººH n
(
ººn o
)
ººo p
;
ººp q
adnptt
ΩΩ 
.
ΩΩ 
Tipo_transaccion
ΩΩ +
=
ΩΩ, -
tipoDeTransaccion
ΩΩ. ?
;
ΩΩ? @
adnptt
ææ 
.
ææ "
id_accion_de_negocio
ææ /
=
ææ0 1
item
ææ2 6
.
ææ6 7
IdAccionDeNegocio
ææ7 H
;
ææH I
adnptt
øø 
.
øø 
valor
øø  
=
øø! "
item
øø# '
.
øø' (
Valor
øø( -
;
øø- .
tipoDeTransaccion
¡¡ %
.
¡¡% &4
&Accion_de_negocio_por_tipo_transaccion
¡¡& L
.
¡¡L M
Add
¡¡M P
(
¡¡P Q
adnptt
¡¡Q W
)
¡¡W X
;
¡¡X Y
}
¬¬ 
return
√√ %
_repositorioTransaccion
√√ .
.
√√. /"
CrearTipoTransaccion
√√/ C
(
√√C D
tipoDeTransaccion
√√D U
)
√√U V
;
√√V W
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
e
≈≈ 
)
≈≈ 
{
∆∆ 
throw
«« 
e
«« 
;
«« 
}
»» 
}
…… 	
public
ÀÀ 
TipoDeTransaccion
ÀÀ  &
ObtenerTipoDeTransaccion
ÀÀ! 9
(
ÀÀ9 :
int
ÀÀ: =!
IdTipoDeTransaccion
ÀÀ> Q
)
ÀÀQ R
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ 
return
œœ 
new
œœ 
TipoDeTransaccion
œœ ,
(
œœ, -%
_repositorioTransaccion
œœ- D
.
œœD E=
/ObtenerTipoDeTransaccionIncluidoAccionDeNegocio
œœE t
(
œœt u"
IdTipoDeTransaccionœœu à
)œœà â
)œœâ ä
;œœä ã
}
–– 
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
——  !
throw
——" '
e
——( )
;
——) *
}
——+ ,
}
““ 	
public
‘‘ 
OperationResult
‘‘ )
ActualizarTipoDeTransaccion
‘‘ :
(
‘‘: ;
int
‘‘; >
Id
‘‘? A
,
‘‘A B
string
‘‘C I
Nombre
‘‘J P
,
‘‘P Q
string
‘‘R X
Descripcion
‘‘Y d
,
‘‘d e
int
‘‘f i"
IdTransaccionMaestro
‘‘j ~
,
‘‘~ 
List‘‘Ä Ñ
<‘‘Ñ Ö1
!AccionDeNegocioPorTipoTransaccion‘‘Ö ¶
>‘‘¶ ß3
#AccionesDeNegocioPorTipoTransaccion‘‘® À
)‘‘À Ã
{
’’ 	
try
÷÷ 
{
◊◊ 
Tipo_transaccion
ÿÿ  
tipoDeTransaccion
ÿÿ! 2
=
ÿÿ3 4
new
ÿÿ5 8
Tipo_transaccion
ÿÿ9 I
(
ÿÿI J
)
ÿÿJ K
;
ÿÿK L
tipoDeTransaccion
ŸŸ !
.
ŸŸ! "
id
ŸŸ" $
=
ŸŸ% &
Id
ŸŸ' )
;
ŸŸ) *
tipoDeTransaccion
⁄⁄ !
.
⁄⁄! "
nombre
⁄⁄" (
=
⁄⁄) *
Nombre
⁄⁄+ 1
;
⁄⁄1 2
tipoDeTransaccion
€€ !
.
€€! "
descripcion
€€" -
=
€€. /
Descripcion
€€0 ;
;
€€; <
tipoDeTransaccion
‹‹ !
.
‹‹! "'
id_tipo_transaccion_padre
‹‹" ;
=
‹‹< =
(
‹‹> ?"
IdTransaccionMaestro
‹‹? S
==
‹‹T V
$num
‹‹W X
)
‹‹X Y
?
‹‹Z [
(
‹‹\ ]
int
‹‹] `
?
‹‹` a
)
‹‹a b
null
‹‹b f
:
‹‹g h"
IdTransaccionMaestro
‹‹i }
;
‹‹} ~
foreach
›› 
(
›› 
var
›› 
item
›› !
in
››" $1
#AccionesDeNegocioPorTipoTransaccion
››% H
)
››H I
{
ﬁﬁ 4
&Accion_de_negocio_por_tipo_transaccion
ﬂﬂ :
adnptt
ﬂﬂ; A
=
ﬂﬂB C
new
ﬂﬂD G4
&Accion_de_negocio_por_tipo_transaccion
ﬂﬂH n
(
ﬂﬂn o
)
ﬂﬂo p
;
ﬂﬂp q
adnptt
‡‡ 
.
‡‡ 
id
‡‡ 
=
‡‡ 
item
‡‡  $
.
‡‡$ %
Id
‡‡% '
;
‡‡' (
adnptt
·· 
.
·· !
id_tipo_transaccion
·· .
=
··/ 0
tipoDeTransaccion
··1 B
.
··B C
id
··C E
;
··E F
adnptt
‚‚ 
.
‚‚ "
id_accion_de_negocio
‚‚ /
=
‚‚0 1
item
‚‚2 6
.
‚‚6 7
IdAccionDeNegocio
‚‚7 H
;
‚‚H I
adnptt
„„ 
.
„„ 
valor
„„  
=
„„! "
item
„„# '
.
„„' (
Valor
„„( -
;
„„- .
tipoDeTransaccion
ÂÂ %
.
ÂÂ% &4
&Accion_de_negocio_por_tipo_transaccion
ÂÂ& L
.
ÂÂL M
Add
ÂÂM P
(
ÂÂP Q
adnptt
ÂÂQ W
)
ÂÂW X
;
ÂÂX Y
}
ÊÊ 
return
ÁÁ %
_repositorioTransaccion
ÁÁ .
.
ÁÁ. /7
)ActualizarTipoTransaccionConAccionNegocio
ÁÁ/ X
(
ÁÁX Y
tipoDeTransaccion
ÁÁY j
)
ÁÁj k
;
ÁÁk l
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
throw
ÎÎ 
e
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
public
ÒÒ 
OperationResult
ÒÒ 
CrearRol
ÒÒ '
(
ÒÒ' (
string
ÒÒ( .
nombre
ÒÒ/ 5
,
ÒÒ5 6
string
ÒÒ7 =
descripcion
ÒÒ> I
,
ÒÒI J
int
ÒÒK N

idRolPadre
ÒÒO Y
,
ÒÒY Z
int
ÒÒ[ ^
aplica
ÒÒ_ e
)
ÒÒe f
{
ÚÚ 	
try
ÛÛ 
{
ÙÙ 
Rol
ıı 
rol
ıı 
=
ıı 
new
ıı 
Rol
ıı !
(
ıı! "
)
ıı" #
;
ıı# $
rol
ˆˆ 
.
ˆˆ 
nombre
ˆˆ 
=
ˆˆ 
nombre
ˆˆ #
;
ˆˆ# $
rol
˜˜ 
.
˜˜ 
descripcion
˜˜ 
=
˜˜  !
descripcion
˜˜" -
;
˜˜- .
rol
¯¯ 
.
¯¯ 
id_rol_padre
¯¯  
=
¯¯! "
(
¯¯# $

idRolPadre
¯¯$ .
==
¯¯/ 1
$num
¯¯2 3
)
¯¯3 4
?
¯¯5 6
(
¯¯7 8
int
¯¯8 ;
?
¯¯; <
)
¯¯< =
null
¯¯= A
:
¯¯B C

idRolPadre
¯¯D N
;
¯¯N O
rol
˘˘ 
.
˘˘ 
aplica_a
˘˘ 
=
˘˘ 
aplica
˘˘ %
;
˘˘% &
return
˙˙ '
_repositorioConfiguracion
˙˙ 0
.
˙˙0 1
CrearRol
˙˙1 9
(
˙˙9 :
rol
˙˙: =
)
˙˙= >
;
˙˙> ?
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
e
¸¸ 
)
¸¸ 
{
˝˝ 
throw
˛˛ 
e
˛˛ 
;
˛˛ 
}
ˇˇ 
}
ÅÅ 	
public
ÇÇ 
List
ÇÇ 
<
ÇÇ 
RolDeNegocio
ÇÇ  
>
ÇÇ  !#
ObtenerRolesDeNegocio
ÇÇ" 7
(
ÇÇ7 8
)
ÇÇ8 9
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
return
ÜÜ 
RolDeNegocio
ÜÜ #
.
ÜÜ# $
Convert_
ÜÜ$ ,
(
ÜÜ, -'
_repositorioConfiguracion
ÜÜ- F
.
ÜÜF G
ObtenerRoles
ÜÜG S
(
ÜÜS T
)
ÜÜT U
.
ÜÜU V
ToList
ÜÜV \
(
ÜÜ\ ]
)
ÜÜ] ^
)
ÜÜ^ _
;
ÜÜ_ `
}
áá 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ââ  !
throw
ââ" '
e
ââ( )
;
ââ) *
}
ââ+ ,
}
ää 	
public
çç 5
'OperacionTipoTransaccionTipoComprobante
çç 6<
.ObtenerTipoTransaccionTipoComprobanteOperacion
çç7 e
(
ççe f
long
ççf j
idOperacion
ççk v
)
ççv w
{
éé 	
try
èè 
{
êê 
var
ëë 
	resultado
ëë 
=
ëë %
_repositorioTransaccion
ëë  7
.
ëë7 8<
.ObtenerTipoTransaccionTipoComprobanteOperacion
ëë8 f
(
ëëf g
idOperacion
ëëg r
)
ëër s
;
ëës t
return
íí 
	resultado
íí  
;
íí  !
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ )
(
ññ) *
$str
ññ* n
,
ññn o
e
ññp q
)
ññq r
;
ññr s
}
óó 
}
òò 	
}
öö 
}õõ Ù•
DD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\CotizacionLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class 
CotizacionLogica !
:" #
ICotizacionLogica$ 5
{ 
private 
readonly #
ITransaccionRepositorio 0#
_repositorioTransaccion1 H
;H I
private 
readonly 
IPermisos_Logica )
_permisos_Logica* :
;: ;
private 
readonly $
ICodigosOperacion_Logica 1$
_codigosOperacion_Logica2 J
;J K
public 
CotizacionLogica 
(  
)  !
{ 	
} 	
public 
CotizacionLogica 
(  #
ITransaccionRepositorio  7"
repositorioTransaccion8 N
,N O
IPermisos_LogicaP `
permisos_Logicaa p
,p q%
ICodigosOperacion_Logica	r ä%
codigosOperacion_Logica
ã ¢
)
¢ £
{ 	#
_repositorioTransaccion #
=$ %"
repositorioTransaccion& <
;< =
_permisos_Logica 
= 
permisos_Logica .
;. /$
_codigosOperacion_Logica   $
=  % &#
codigosOperacion_Logica  ' >
;  > ?
}!! 	
private$$ 
Transaccion$$ 
GenerarCotizacion$$ -
($$- .
int$$. 1

idEmpleado$$2 <
,$$< =
int$$> A
idTipoDeComprobante$$B U
,$$U V
DateTime$$W _
fechaEmision$$` l
,$$l m
DateTime$$n v
fechaRegistro	$$w Ñ
,
$$Ñ Ö
DateTime
$$Ü é
fechaVencimiento
$$è ü
,
$$ü †
string
$$° ß
sufijoCodigo
$$® ¥
,
$$¥ µ
int
$$∂ π
idTipoTransaccion
$$∫ À
,
$$À Ã
int
$$Õ –
accionARealizar
$$— ‡
,
$$‡ ·
int
$$‚ Â&
idTipoTransaccionValidar
$$Ê ˛
,
$$˛ ˇ
decimal
$$Ä á
importe
$$à è
,
$$è ê
string
$$ë ó
observacion
$$ò £
,
$$£ §
int
$$• ®
	idCliente
$$© ≤
,
$$≤ ≥
int
$$¥ ∑
idCentroAtencion
$$∏ »
)
$$» …
{%% 	
try&& 
{'' 
int(( 
idMoneda(( 
=(( 
MaestroSettings(( .
.((. /
Default((/ 6
.((6 7'
IdDetalleMaestroMonedaSoles((7 R
;((R S
int)) 
idUnidadNegocio)) #
=))$ %
MaestroSettings))& 5
.))5 6
Default))6 =
.))= >6
*IdDetalleMaestroUnidadDeNegocioTransversal))> h
;))h i
decimal** 
tipoDeCambio** $
=**% &
$num**' (
;**( )
_permisos_Logica,,  
.,,  !
ValidarAccion,,! .
(,,. /

idEmpleado,,/ 9
,,,9 :
accionARealizar,,; J
,,,J K$
idTipoTransaccionValidar,,L d
,,,d e
idUnidadNegocio,,f u
),,u v
;,,v w
	Operacion.. 
operacionGenerica.. +
=.., -
new... 1
	Operacion..2 ;
(..; <#
_repositorioTransaccion..< S
...S T$
ObtenerUltimaTransaccion..T l
(..l m 
TransaccionSettings	..m Ä
.
..Ä Å
Default
..Å à
.
..à â(
IdTipoTransaccionOperacion
..â £
)
..£ §
)
..§ •
;
..• ¶
string00 
codigo00 
=00 $
_codigosOperacion_Logica00  8
.008 91
%ObtenerSiguienteCodigoParaFacturacion009 ^
(00^ _
sufijoCodigo00_ k
,00k l
idTipoTransaccion00m ~
)00~ 
;	00 Ä
Transaccion22 

cotizacion22 &
=22' (
new22) ,
Transaccion22- 8
(228 9
codigo229 ?
,22? @
operacionGenerica22A R
.22R S
Id22S U
,22U V
fechaRegistro22W d
,22d e
idTipoTransaccion22f w
,22w x
idUnidadNegocio	22y à
,
22à â
true
22ä é
,
22é è
fechaEmision
22ê ú
,
22ú ù
fechaVencimiento
22û Æ
,
22Æ Ø
observacion
22∞ ª
,
22ª º
fechaEmision
22Ω …
,
22…  

idEmpleado
22À ’
,
22’ ÷
importe
22◊ ﬁ
,
22ﬁ ﬂ
idCentroAtencion
22‡ 
,
22 Ò
idMoneda
22Ú ˙
,
22˙ ˚
tipoDeCambio
22¸ à
,
22à â
null
22ä é
,
22é è
	idCliente
22ê ô
)
22ô ö
;
22ö õ
return33 

cotizacion33 !
;33! "
}44 
catch55 
(55 
	Exception55 
e55 
)55 
{66 
throw77 
new77 
LogicaException77 )
(77) *
$str77* S
,77S T
e77U V
)77V W
;77W X
}88 
}99 	
private<< 
Transaccion<< $
GenerarOrdenDeCotizacion<< 4
(<<4 5
Transaccion<<5 @

cotizacion<<A K
,<<K L
int<<M P

idEmpleado<<Q [
,<<[ \
int<<] `
idCentroAtencion<<a q
,<<q r
DateTime<<s {
fechaEmision	<<| à
,
<<à â
DateTime
<<ä í
fechaRegistro
<<ì †
,
<<† °
DateTime
<<¢ ™
fechaVencimiento
<<´ ª
,
<<ª º
string
<<Ω √
sufijoCodigo
<<ƒ –
,
<<– —
int
<<“ ’ 
idOrdenTransaccion
<<÷ Ë
,
<<Ë È
string
<<Í 
observacion
<<Ò ¸
,
<<¸ ˝
int
<<˛ Å
	idCliente
<<Ç ã
,
<<ã å
string
<<ç ì
aliasCliente
<<î †
,
<<† °
List
<<¢ ¶
<
<<¶ ß!
Detalle_transaccion
<<ß ∫
>
<<∫ ª
detalles
<<º ƒ
)
<<ƒ ≈
{== 	
var>> 
gravada>> 
=>> 
detalles>> "
.>>" #
Sum>># &
(>>& '
d>>' (
=>>>) +
d>>, -
.>>- .
igv>>. 1
)>>1 2
>>>3 4
$num>>5 6
?>>7 8
detalles>>9 A
.>>A B
Sum>>B E
(>>E F
d>>F G
=>>>H J
d>>K L
.>>L M
total>>M R
)>>R S
->>T U
detalles>>V ^
.>>^ _
Sum>>_ b
(>>b c
d>>c d
=>>>e g
d>>h i
.>>i j
igv>>j m
)>>m n
:>>o p
$num>>q r
;>>r s
var?? 
	exonerada?? 
=?? 
detalles?? $
.??$ %
Sum??% (
(??( )
d??) *
=>??+ -
d??. /
.??/ 0
igv??0 3
)??3 4
==??5 7
$num??8 9
???: ;
detalles??< D
.??D E
Sum??E H
(??H I
d??I J
=>??K M
d??N O
.??O P
total??P U
)??U V
:??W X
$num??Y Z
;??Z [
var@@ 
igv@@ 
=@@ 
detalles@@ 
.@@ 
Sum@@ "
(@@" #
d@@# $
=>@@% '
d@@( )
.@@) *
igv@@* -
)@@- .
;@@. /
TransaccionBB 
ordenDeCotizacionBB )
=BB* +
newBB, /
TransaccionBB0 ;
(BB; <$
_codigosOperacion_LogicaBB< T
.BBT U1
%ObtenerSiguienteCodigoParaFacturacionBBU z
(BBz {

cotizacion	BB{ Ö
.
BBÖ Ü
codigo
BBÜ å
+
BBç é
$str
BBè ì
+
BBî ï
sufijoCodigo
BBñ ¢
,
BB¢ £ 
idOrdenTransaccion
BB§ ∂
)
BB∂ ∑
,
BB∑ ∏
null
BBπ Ω
,
BBΩ æ
fechaRegistro
BBø Ã
,
BBÃ Õ 
idOrdenTransaccion
BBŒ ‡
,
BB‡ ·

cotizacion
BB‚ Ï
.
BBÏ Ì
id_unidad_negocio
BBÌ ˛
,
BB˛ ˇ
true
BBÄ Ñ
,
BBÑ Ö
fechaEmision
BBÜ í
,
BBí ì
fechaVencimiento
BBî §
,
BB§ •
observacion
BB¶ ±
,
BB± ≤
fechaEmision
BB≥ ø
,
BBø ¿

idEmpleado
BB¡ À
,
BBÀ Ã

cotizacion
BBÕ ◊
.
BB◊ ÿ
importe_total
BBÿ Â
,
BBÂ Ê
idCentroAtencion
BBÁ ˜
,
BB˜ ¯

cotizacion
BB˘ É
.
BBÉ Ñ
	id_moneda
BBÑ ç
,
BBç é

cotizacion
BBè ô
.
BBô ö
tipo_cambio
BBö •
,
BB• ¶
null
BBß ´
,
BB´ ¨
	idCliente
BB≠ ∂
,
BB∂ ∑
$num
BB∏ π
,
BBπ ∫
$num
BBª º
,
BBº Ω
$num
BBæ ø
,
BBø ¿
gravada
BB¡ »
,
BB» …
	exonerada
BB  ”
,
BB” ‘
$num
BB’ ÷
,
BB÷ ◊
$num
BBÿ Ÿ
,
BBŸ ⁄
igv
BB€ ﬁ
,
BBﬁ ﬂ
$num
BB‡ ·
,
BB· ‚
$num
BB„ ‰
,
BB‰ Â
$num
BBÊ Á
,
BBÁ Ë
$num
BBÈ Í
)
BBÍ Î
;
BBÎ Ï
ordenDeCotizacionDD 
.DD 
AgregarDetallesDD -
(DD- .
detallesDD. 6
)DD6 7
;DD7 8
ifFF 
(FF 
!FF 
StringFF 
.FF 
IsNullOrEmptyFF %
(FF% &
aliasClienteFF& 2
)FF2 3
&&FF4 6
!FF7 8
StringFF8 >
.FF> ?
IsNullOrWhiteSpaceFF? Q
(FFQ R
aliasClienteFFR ^
)FF^ _
&&FF` b
	idClienteFFc l
==FFm o
ActorSettingsFFp }
.FF} ~
Default	FF~ Ö
.
FFÖ Ü
IdClienteGenerico
FFÜ ó
)
FFó ò
{GG 
ordenDeCotizacionHH !
.HH! "!
Parametro_transaccionHH" 7
.HH7 8
AddHH8 ;
(HH; <
newHH< ?!
Parametro_transaccionHH@ U
(HHU V
MaestroSettingsHHV e
.HHe f
DefaultHHf m
.HHm n2
%IdDetalleMaestroParametroAliasCliente	HHn ì
,
HHì î
aliasCliente
HHï °
)
HH° ¢
)
HH¢ £
;
HH£ §
}II 
returnJJ 
ordenDeCotizacionJJ $
;JJ$ %
}KK 	
publicMM 
ListMM 
<MM 
DetalleDeOperacionMM &
>MM& '
ResolverDetalleMM( 7
(MM7 8
ListMM8 <
<MM< =
DetalleDeOperacionMM= O
>MMO P
detallesMMQ Y
,MMY Z
boolMM[ _
gravaIgvMM` h
,MMh i
decimalMMj q
fleteMMr w
)MMw x
{NN 	
ifPP 
(PP 
fletePP 
>PP 
$numPP 
)PP 
{QQ 
detallesRR 
.RR 
AddRR 
(RR 
newRR  
DetalleDeOperacionRR! 3
(RR3 4
ConceptoSettingsRR4 D
.RRD E
DefaultRRE L
.RRL M"
IdConceptoNegocioFleteRRM c
,RRc d
$numRRe f
,RRf g
fleteRRh m
,RRm n
fleteRRo t
,RRt u
$numRRv w
,RRw x
$numRRy z
,RRz {
$numRR| }
,RR} ~
null	RR É
,
RRÉ Ñ
null
RRÖ â
,
RRâ ä
null
RRã è
,
RRè ê
null
RRë ï
,
RRï ñ
false
RRó ú
,
RRú ù
$str
RRû £
,
RR£ §
null
RR• ©
)
RR© ™
)
RR™ ´
;
RR´ ¨
}SS 
foreachUU 
(UU 
varUU 
itemUU 
inUU  
detallesUU! )
)UU) *
{VV 
ifWW 
(WW 
itemWW 
.WW 
CantidadWW !
<=WW" $
$numWW% &
)WW& '
{XX 
throwYY 
newYY 
LogicaExceptionYY -
(YY- .
$strYY. y
)YYy z
;YYz {
}ZZ 
if\\ 
(\\ .
"VerificarCalculadoMascaraDeCalculo\\ 6
(\\6 7
item\\7 ;
.\\; <
MascaraDeCalculo\\< L
,\\L M)
ElementoDeCalculoEnVentasEnum\\N k
.\\k l
Cantidad\\l t
)\\t u
)\\u v
{]] 
item^^ 
.^^ 
Cantidad^^ !
=^^" #
item^^$ (
.^^( )
Importe^^) 0
/^^1 2
item^^3 7
.^^7 8
PrecioUnitario^^8 F
;^^F G
}__ 
if`` 
(`` .
"VerificarCalculadoMascaraDeCalculo`` 6
(``6 7
item``7 ;
.``; <
MascaraDeCalculo``< L
,``L M)
ElementoDeCalculoEnVentasEnum``N k
.``k l
PrecioUnitario``l z
)``z {
)``{ |
{aa 
itembb 
.bb 
PrecioUnitariobb '
=bb( )
itembb* .
.bb. /
Importebb/ 6
/bb7 8
itembb9 =
.bb= >
Cantidadbb> F
;bbF G
}cc 
ifdd 
(dd .
"VerificarCalculadoMascaraDeCalculodd 6
(dd6 7
itemdd7 ;
.dd; <
MascaraDeCalculodd< L
,ddL M)
ElementoDeCalculoEnVentasEnumddN k
.ddk l
Importeddl s
)dds t
)ddt u
{ee 
itemff 
.ff 
Importeff  
=ff! "
itemff# '
.ff' (
Cantidadff( 0
*ff1 2
itemff3 7
.ff7 8
PrecioUnitarioff8 F
;ffF G
}gg 
ifii 
(ii 
gravaIgvii 
)ii 
{jj 
itemkk 
.kk 
Igvkk 
=kk 
itemkk #
.kk# $
Importekk$ +
-kk, -
(kk. /
itemkk/ 3
.kk3 4
Importekk4 ;
/kk< =
(kk> ?
$numkk? @
+kkA B
TransaccionSettingskkC V
.kkV W
DefaultkkW ^
.kk^ _
TasaIGVkk_ f
)kkf g
)kkg h
;kkh i
}ll 
}mm 
returnnn 
detallesnn 
;nn 
}oo 	
privateqq 
boolqq .
"VerificarCalculadoMascaraDeCalculoqq 7
(qq7 8
stringqq8 >
mascaraDeCalculoqq? O
,qqO P)
ElementoDeCalculoEnVentasEnumqqQ n
ordenqqo t
)qqt u
{rr 	
Listss 
<ss 
intss 
>ss !
mascaraDeCalculoArrayss +
=ss, -
mascaraDeCalculoss. >
.ss> ?
Selectss? E
(ssE F
digitossF L
=>ssM O
intssP S
.ssS T
ParsessT Y
(ssY Z
digitossZ `
.ss` a
ToStringssa i
(ssi j
)ssj k
)ssk l
)ssl m
.ssm n
ToListssn t
(sst u
)ssu v
;ssv w
returnuu 
!uu 
Convertuu 
.uu 
	ToBooleanuu %
(uu% &!
mascaraDeCalculoArrayuu& ;
[uu; <
(uu< =
intuu= @
)uu@ A
ordenuuA F
]uuF G
)uuG H
;uuH I
}vv 	
publicxx 
Comprobantexx 1
%GenerarComprobantePropioAutonumerablexx @
(xx@ A
intxxA D
idSerieComprobantexxE W
)xxW X
{yy 	
Serie_comprobantezz 
seriezz #
=zz$ %#
_repositorioTransaccionzz& =
.zz= >%
ObtenerSerieDeComprobantezz> W
(zzW X
idSerieComprobantezzX j
)zzj k
;zzk l
Comprobante{{ 
comprobante{{ #
={{$ %
new{{& )
Comprobante{{* 5
({{5 6
serie{{6 ;
.{{; <
id_tipo_comprobante{{< O
,{{O P
serie{{Q V
.{{V W
id{{W Y
,{{Y Z
serie{{[ `
.{{` a
proximo_numero{{a o
,{{o p
true{{q u
,{{u v
serie{{w |
.{{| }
numero	{{} É
)
{{É Ñ
;
{{Ñ Ö
serie|| 
.|| 
proximo_numero||  
++||  "
;||" ##
_repositorioTransaccion}} #
.}}# $%
MarcarSerieComoModificada}}$ =
(}}= >
serie}}> C
)}}C D
;}}D E
return~~ 
comprobante~~ 
;~~ 
} 	
public
ÑÑ 
OperationResult
ÑÑ 
AgregarCotizacion
ÑÑ 0
(
ÑÑ0 1
int
ÑÑ1 4

idEmpleado
ÑÑ5 ?
,
ÑÑ? @
int
ÑÑA D
idCentroAtencion
ÑÑE U
,
ÑÑU V
int
ÑÑW Z
	idCliente
ÑÑ[ d
,
ÑÑd e
string
ÑÑf l
aliasCliente
ÑÑm y
,
ÑÑy z
int
ÑÑ{ ~ 
idTipoComprobanteÑÑ ê
,ÑÑê ë
intÑÑí ï"
idSerieComprobanteÑÑñ ®
,ÑÑ® ©
boolÑÑ™ Æ
gravaIgvÑÑØ ∑
,ÑÑ∑ ∏
DateTimeÑÑπ ¡ 
fechaVencimientoÑÑ¬ “
,ÑÑ“ ”
stringÑÑ‘ ⁄
observacionÑÑ€ Ê
,ÑÑÊ Á
ListÑÑË Ï
<ÑÑÏ Ì"
DetalleDeOperacionÑÑÌ ˇ
>ÑÑˇ Ä
detallesÑÑÅ â
,ÑÑâ ä
decimalÑÑã í
fleteÑÑì ò
)ÑÑò ô
{
ÖÖ 	
try
ÜÜ 
{
áá 
OperationResult
àà 
result
àà  &
;
àà& '
var
ää "
detallesDeCotizacion
ää (
=
ää) *
ResolverDetalle
ää+ :
(
ää: ;
detalles
ää; C
,
ääC D
gravaIgv
ääE M
,
ääM N
flete
ääO T
)
ääT U
;
ääU V
var
ãã "
detalles_transaccion
ãã (
=
ãã) *"
detallesDeCotizacion
ãã+ ?
.
ãã? @
Select
ãã@ F
(
ããF G
d
ããG H
=>
ããI K
d
ããL M
.
ããM N 
DetalleTransaccion
ããN `
(
ãã` a
)
ããa b
)
ããb c
.
ããc d
ToList
ããd j
(
ããj k
)
ããk l
;
ããl m
var
åå 
fechaActual
åå 
=
åå  !
DateTimeUtil
åå" .
.
åå. /
FechaActual
åå/ :
(
åå: ;
)
åå; <
;
åå< =
Transaccion
éé 

cotizacion
éé &
=
éé' (
GenerarCotizacion
éé) :
(
éé: ;

idEmpleado
éé; E
,
ééE F
idTipoComprobante
ééG X
,
ééX Y
fechaActual
ééZ e
,
éée f
fechaActual
éég r
,
éér s
fechaVencimientoéét Ñ
,ééÑ Ö
$strééÜ ä
,ééä ã#
TransaccionSettingsééå ü
.ééü †
Defaultéé† ß
.ééß ®+
IdTipoTransaccionCotizacionéé® √
,éé√ ƒ
MaestroSettingséé≈ ‘
.éé‘ ’
Defaultéé’ ‹
.éé‹ ›/
IdDetalleMaestroAccionConfirmaréé› ¸
,éé¸ ˝#
TransaccionSettingséé˛ ë
.ééë í
Defaultééí ô
.ééô ö2
"IdTipoTransaccionOrdenDeCotizacionééö º
,ééº Ω$
detalles_transaccionééæ “
.éé“ ”
Suméé” ÷
(éé÷ ◊
déé◊ ÿ
=>ééŸ €
déé‹ ›
.éé› ﬁ
totalééﬁ „
)éé„ ‰
,éé‰ Â
observacionééÊ Ò
,ééÒ Ú
	idClienteééÛ ¸
,éé¸ ˝ 
idCentroAtencionéé˛ é
)ééé è
;ééè ê

cotizacion
èè 
.
èè 
Comprobante
èè &
=
èè' (3
%GenerarComprobantePropioAutonumerable
èè) N
(
èèN O 
idSerieComprobante
èèO a
)
èèa b
;
èèb c
Transaccion
ëë 
ordenDeCotizacion
ëë -
=
ëë. /&
GenerarOrdenDeCotizacion
ëë0 H
(
ëëH I

cotizacion
ëëI S
,
ëëS T

idEmpleado
ëëU _
,
ëë_ `
idCentroAtencion
ëëa q
,
ëëq r
fechaActual
ëës ~
,
ëë~ 
fechaActualëëÄ ã
,ëëã å 
fechaVencimientoëëç ù
,ëëù û
$strëëü £
,ëë£ §#
TransaccionSettingsëë• ∏
.ëë∏ π
Defaultëëπ ¿
.ëë¿ ¡2
"IdTipoTransaccionOrdenDeCotizacionëë¡ „
,ëë„ ‰
observacionëëÂ 
,ëë Ò
	idClienteëëÚ ˚
,ëë˚ ¸
aliasClienteëë˝ â
,ëëâ ä$
detalles_transaccionëëã ü
)ëëü †
;ëë† °
ordenDeCotizacion
íí !
.
íí! "
Comprobante
íí" -
=
íí. /

cotizacion
íí0 :
.
íí: ;
Comprobante
íí; F
;
ííF G 
Estado_transaccion
îî ")
estadoDeLaOrdenDeCotizacion
îî# >
=
îî? @
new
îîA D 
Estado_transaccion
îîE W
(
îîW X

idEmpleado
îîX b
,
îîb c
MaestroSettings
îîd s
.
îîs t
Default
îît {
.
îî{ |/
 IdDetalleMaestroEstadoConfirmadoîî| ú
,îîú ù
fechaActualîîû ©
,îî© ™
$strîî´ 
)îî Ò
;îîÒ Ú
ordenDeCotizacion
ïï !
.
ïï! " 
Estado_transaccion
ïï" 4
.
ïï4 5
Add
ïï5 8
(
ïï8 9)
estadoDeLaOrdenDeCotizacion
ïï9 T
)
ïïT U
;
ïïU V

cotizacion
óó 
.
óó 
Transaccion1
óó '
.
óó' (
Add
óó( +
(
óó+ ,
ordenDeCotizacion
óó, =
)
óó= >
;
óó> ?
result
ôô 
=
ôô %
_repositorioTransaccion
ôô 0
.
ôô0 1
CrearTransaccion
ôô1 A
(
ôôA B

cotizacion
ôôB L
)
ôôL M
;
ôôM N
result
öö 
.
öö 
information
öö "
=
öö# $
new
öö% (

Cotizacion
öö) 3
(
öö3 4

cotizacion
öö4 >
)
öö> ?
.
öö? @
OrdenDeCotizacion
öö@ Q
(
ööQ R
)
ööR S
.
ööS T
Id
ööT V
;
ööV W
return
õõ 
result
õõ 
;
õõ 
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
e
ùù 
)
ùù 
{
ûû 
throw
üü 
new
üü 
LogicaException
üü )
(
üü) *
$str
üü* L
,
üüL M
e
üüN O
)
üüO P
;
üüP Q
}
†† 
}
°° 	
public
££ 
OperationResult
££ 
EditarCotizacion
££ /
(
££/ 0
long
££0 4
id
££5 7
,
££7 8
long
££9 =
idOrden
££> E
,
££E F
long
££G K
idComprobante
££L Y
,
££Y Z
int
££[ ^
idEstado
££_ g
,
££g h
int
££i l

idEmpleado
££m w
,
££w x
int
££y |
idCentroAtencion££} ç
,££ç é
int££è í
	idCliente££ì ú
,££ú ù
string££û §
aliasCliente££• ±
,££± ≤
int££≥ ∂!
idTipoComprobante££∑ »
,££» …
int££  Õ"
idSerieComprobante££Œ ‡
,££‡ ·
bool££‚ Ê
gravaIgv££Á Ô
,££Ô 
DateTime££Ò ˘ 
fechaVencimiento££˙ ä
,££ä ã
string££å í
observacion££ì û
,££û ü
List££† §
<££§ •"
DetalleDeOperacion££• ∑
>££∑ ∏
detalles££π ¡
,££¡ ¬
decimal££√  
flete££À –
)££– —
{
§§ 	
try
•• 
{
¶¶ 
OperationResult
ßß 
result
ßß  &
;
ßß& '
var
©© "
detallesDeCotizacion
©© (
=
©©) *
ResolverDetalle
©©+ :
(
©©: ;
detalles
©©; C
,
©©C D
gravaIgv
©©E M
,
©©M N
flete
©©O T
)
©©T U
;
©©U V
var
™™ "
detalles_transaccion
™™ (
=
™™) *"
detallesDeCotizacion
™™+ ?
.
™™? @
Select
™™@ F
(
™™F G
d
™™G H
=>
™™I K
d
™™L M
.
™™M N 
DetalleTransaccion
™™N `
(
™™` a
)
™™a b
)
™™b c
.
™™c d
ToList
™™d j
(
™™j k
)
™™k l
;
™™l m
var
´´ 
fechaActual
´´ 
=
´´  !
DateTimeUtil
´´" .
.
´´. /
FechaActual
´´/ :
(
´´: ;
)
´´; <
;
´´< =
Transaccion
≠≠ 
dbCotizacion
≠≠ (
=
≠≠) *%
_repositorioTransaccion
≠≠+ B
.
≠≠B C 
ObtenerTransaccion
≠≠C U
(
≠≠U V
id
≠≠V X
)
≠≠X Y
;
≠≠Y Z
Transaccion
ÆÆ 

cotizacion
ÆÆ &
=
ÆÆ' (
GenerarCotizacion
ÆÆ) :
(
ÆÆ: ;

idEmpleado
ÆÆ; E
,
ÆÆE F
idTipoComprobante
ÆÆG X
,
ÆÆX Y
fechaActual
ÆÆZ e
,
ÆÆe f
fechaActual
ÆÆg r
,
ÆÆr s
fechaVencimientoÆÆt Ñ
,ÆÆÑ Ö
$strÆÆÜ ä
,ÆÆä ã#
TransaccionSettingsÆÆå ü
.ÆÆü †
DefaultÆÆ† ß
.ÆÆß ®+
IdTipoTransaccionCotizacionÆÆ® √
,ÆÆ√ ƒ
MaestroSettingsÆÆ≈ ‘
.ÆÆ‘ ’
DefaultÆÆ’ ‹
.ÆÆ‹ ›/
IdDetalleMaestroAccionConfirmarÆÆ› ¸
,ÆÆ¸ ˝#
TransaccionSettingsÆÆ˛ ë
.ÆÆë í
DefaultÆÆí ô
.ÆÆô ö2
"IdTipoTransaccionOrdenDeCotizacionÆÆö º
,ÆÆº Ω$
detalles_transaccionÆÆæ “
.ÆÆ“ ”
SumÆÆ” ÷
(ÆÆ÷ ◊
dÆÆ◊ ÿ
=>ÆÆŸ €
dÆÆ‹ ›
.ÆÆ› ﬁ
totalÆÆﬁ „
)ÆÆ„ ‰
,ÆÆ‰ Â
observacionÆÆÊ Ò
,ÆÆÒ Ú
	idClienteÆÆÛ ¸
,ÆÆ¸ ˝ 
idCentroAtencionÆÆ˛ é
)ÆÆé è
;ÆÆè ê

cotizacion
ØØ 
.
ØØ 
id
ØØ 
=
ØØ 
id
ØØ  "
;
ØØ" #

cotizacion
∞∞ 
.
∞∞ 
id_comprobante
∞∞ )
=
∞∞* +
idComprobante
∞∞, 9
;
∞∞9 :

cotizacion
±± 
.
±± 
codigo
±± !
=
±±" #
dbCotizacion
±±$ 0
.
±±0 1
codigo
±±1 7
;
±±7 8
Transaccion
≥≥ 
dbOrdenCotizacion
≥≥ -
=
≥≥. /%
_repositorioTransaccion
≥≥0 G
.
≥≥G H 
ObtenerTransaccion
≥≥H Z
(
≥≥Z [
idOrden
≥≥[ b
)
≥≥b c
;
≥≥c d
Transaccion
¥¥ 
ordenCotizacion
¥¥ +
=
¥¥, -&
GenerarOrdenDeCotizacion
¥¥. F
(
¥¥F G

cotizacion
¥¥G Q
,
¥¥Q R

idEmpleado
¥¥S ]
,
¥¥] ^
idCentroAtencion
¥¥_ o
,
¥¥o p
fechaActual
¥¥q |
,
¥¥| }
fechaActual¥¥~ â
,¥¥â ä 
fechaVencimiento¥¥ã õ
,¥¥õ ú
$str¥¥ù °
,¥¥° ¢#
TransaccionSettings¥¥£ ∂
.¥¥∂ ∑
Default¥¥∑ æ
.¥¥æ ø2
"IdTipoTransaccionOrdenDeCotizacion¥¥ø ·
,¥¥· ‚
observacion¥¥„ Ó
,¥¥Ó Ô
	idCliente¥¥ ˘
,¥¥˘ ˙
aliasCliente¥¥˚ á
,¥¥á à$
detalles_transaccion¥¥â ù
)¥¥ù û
;¥¥û ü
ordenCotizacion
µµ 
.
µµ  
id
µµ  "
=
µµ# $
idOrden
µµ% ,
;
µµ, -
ordenCotizacion
∂∂ 
.
∂∂  "
id_transaccion_padre
∂∂  4
=
∂∂5 6
id
∂∂7 9
;
∂∂9 :
ordenCotizacion
∑∑ 
.
∑∑  
id_comprobante
∑∑  .
=
∑∑/ 0
idComprobante
∑∑1 >
;
∑∑> ?
ordenCotizacion
∏∏ 
.
∏∏  
id_estado_actual
∏∏  0
=
∏∏1 2
idEstado
∏∏3 ;
;
∏∏; <
ordenCotizacion
ππ 
.
ππ  
codigo
ππ  &
=
ππ' (
dbOrdenCotizacion
ππ) :
.
ππ: ;
codigo
ππ; A
;
ππA B
ordenCotizacion
ªª 
.
ªª  !
Detalle_transaccion
ªª  3
.
ªª3 4
ToList
ªª4 :
(
ªª: ;
)
ªª; <
.
ªª< =
ForEach
ªª= D
(
ªªD E
d
ªªE F
=>
ªªG I
d
ªªJ K
.
ªªK L
id_transaccion
ªªL Z
=
ªª[ \
idOrden
ªª] d
)
ªªd e
;
ªªe f

cotizacion
ΩΩ 
.
ΩΩ 
Transaccion1
ΩΩ '
.
ΩΩ' (
Add
ΩΩ( +
(
ΩΩ+ ,
ordenCotizacion
ΩΩ, ;
)
ΩΩ; <
;
ΩΩ< =
result
øø 
=
øø %
_repositorioTransaccion
øø 0
.
øø0 1@
2ActualizarTransaccionTransaccion1DetallesParametro
øø1 c
(
øøc d

cotizacion
øød n
)
øøn o
;
øøo p
result
¿¿ 
.
¿¿ 
information
¿¿ "
=
¿¿# $
new
¿¿% (

Cotizacion
¿¿) 3
(
¿¿3 4

cotizacion
¿¿4 >
)
¿¿> ?
.
¿¿? @
OrdenDeCotizacion
¿¿@ Q
(
¿¿Q R
)
¿¿R S
.
¿¿S T
Id
¿¿T V
;
¿¿V W
return
¡¡ 
result
¡¡ 
;
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
ƒƒ 
throw
≈≈ 
new
≈≈ 
LogicaException
≈≈ )
(
≈≈) *
$str
≈≈* L
,
≈≈L M
e
≈≈N O
)
≈≈O P
;
≈≈P Q
}
∆∆ 
}
«« 	
public
…… 
List
…… 
<
…… 
OrdenDeCotizacion
…… %
>
……% &(
ObtenerOrdenesDeCotizacion
……' A
(
……A B
int
……B E

idEmpleado
……F P
,
……P Q
int
……R U
idCentroAtencion
……V f
,
……f g
DateTime
……h p

fechaDesde
……q {
,
……{ |
DateTime……} Ö

fechaHasta……Ü ê
)……ê ë
{
   	
try
ÀÀ 
{
ÃÃ 
return
ÕÕ 
OrdenDeCotizacion
ÕÕ (
.
ÕÕ( )
Convert
ÕÕ) 0
(
ÕÕ0 1%
_repositorioTransaccion
ÕÕ1 H
.
ÕÕH II
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoÕÕI É
(ÕÕÉ Ñ#
TransaccionSettingsÕÕÑ ó
.ÕÕó ò
DefaultÕÕò ü
.ÕÕü †2
"IdTipoTransaccionOrdenDeCotizacionÕÕ† ¬
,ÕÕ¬ √

fechaDesdeÕÕƒ Œ
,ÕÕŒ œ

fechaHastaÕÕ– ⁄
)ÕÕ⁄ €
.ÕÕ€ ‹!
OrderByDescendingÕÕ‹ Ì
(ÕÕÌ Ó
tÕÕÓ Ô
=>ÕÕ Ú
tÕÕÛ Ù
.ÕÕÙ ı
fecha_inicioÕÕı Å
)ÕÕÅ Ç
.ÕÕÇ É
ToListÕÕÉ â
(ÕÕâ ä
)ÕÕä ã
)ÕÕã å
;ÕÕå ç
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
e
œœ 
)
œœ 
{
–– 
throw
—— 
new
—— 
LogicaException
—— )
(
——) *
$str
——* V
,
——V W
e
——X Y
)
——Y Z
;
——Z [
}
““ 
}
”” 	
public
’’ 
OrdenDeCotizacion
’’  &
ObtenerOrdenDeCotizacion
’’! 9
(
’’9 :
long
’’: >!
idOrdenDeCotizacion
’’? R
)
’’R S
{
÷÷ 	
try
◊◊ 
{
ÿÿ 
return
ŸŸ 
new
ŸŸ 
OrdenDeCotizacion
ŸŸ ,
(
ŸŸ, -%
_repositorioTransaccion
ŸŸ- D
.
ŸŸD EF
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
ŸŸE }
(
ŸŸ} ~"
idOrdenDeCotizacionŸŸ~ ë
)ŸŸë í
)ŸŸí ì
;ŸŸì î
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
e
€€ 
)
€€ 
{
‹‹ 
throw
›› 
e
›› 
;
›› 
}
ﬁﬁ 
}
ﬂﬂ 	
public
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
List
ÂÂ 
<
ÂÂ .
 TipoDeComprobanteParaTransaccion
ÂÂ ?
>
ÂÂ? @
>
ÂÂ@ A5
'ObtenerTiposDeComprobanteParaCotizacion
ÂÂB i
(
ÂÂi j
int
ÂÂj m
idCentroAtencion
ÂÂn ~
)
ÂÂ~ 
{
ÊÊ 	
try
ÁÁ 
{
ËË 
var
ÈÈ 
	resultado
ÈÈ 
=
ÈÈ 
(
ÈÈ  !
await
ÈÈ! &%
_repositorioTransaccion
ÈÈ' >
.
ÈÈ> ?8
*ObtenerTipoComprobantePorTipoDeTransaccion
ÈÈ? i
(
ÈÈi j!
TransaccionSettings
ÈÈj }
.
ÈÈ} ~
DefaultÈÈ~ Ö
.ÈÈÖ Ü2
"IdTipoTransaccionOrdenDeCotizacionÈÈÜ ®
)ÈÈ® ©
)ÈÈ© ™
.ÈÈ™ ´
ToListÈÈ´ ±
(ÈÈ± ≤
)ÈÈ≤ ≥
;ÈÈ≥ ¥
foreach
ÍÍ 
(
ÍÍ 
var
ÍÍ 
tipo
ÍÍ !
in
ÍÍ" $
	resultado
ÍÍ% .
)
ÍÍ. /
{
ÎÎ 
tipo
ÏÏ 
.
ÏÏ 
Detalle_maestro
ÏÏ (
.
ÏÏ( )
Serie_comprobante
ÏÏ) :
=
ÏÏ; <
tipo
ÏÏ= A
.
ÏÏA B
Detalle_maestro
ÏÏB Q
.
ÏÏQ R
Serie_comprobante
ÏÏR c
.
ÏÏc d
Where
ÏÏd i
(
ÏÏi j
sc
ÏÏj l
=>
ÏÏm o
sc
ÏÏp r
.
ÏÏr s
id_propietarioÏÏs Å
==ÏÏÇ Ñ 
idCentroAtencionÏÏÖ ï
&&ÏÏñ ò
scÏÏô õ
.ÏÏõ ú

es_vigenteÏÏú ¶
)ÏÏ¶ ß
.ÏÏß ®
ToListÏÏ® Æ
(ÏÏÆ Ø
)ÏÏØ ∞
;ÏÏ∞ ±
}
ÌÌ 
return
ÓÓ .
 TipoDeComprobanteParaTransaccion
ÓÓ 7
.
ÓÓ7 8
Convert
ÓÓ8 ?
(
ÓÓ? @
	resultado
ÓÓ@ I
.
ÓÓI J
ToList
ÓÓJ P
(
ÓÓP Q
)
ÓÓQ R
)
ÓÓR S
;
ÓÓS T
}
ÔÔ 
catch
 
(
 
	Exception
 
e
 
)
 
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ 
LogicaException
ÚÚ )
(
ÚÚ) *
$str
ÚÚ* \
,
ÚÚ\ ]
e
ÚÚ^ _
)
ÚÚ_ `
;
ÚÚ` a
}
ÛÛ 
}
ÙÙ 	
public
ˆˆ 
string
ˆˆ .
 ObtenerAsuntoDeCorreoElectronico
ˆˆ 6
(
ˆˆ6 7&
EstablecimientoComercial
ˆˆ7 O
sede
ˆˆP T
,
ˆˆT U
OrdenDeCotizacion
ˆˆV g
ordenDeCotizacion
ˆˆh y
)
ˆˆy z
{
˜˜ 	
string
¯¯ 
asunto
¯¯ 
=
¯¯ 
sede
¯¯  
.
¯¯  !
Nombre
¯¯! '
+
¯¯( )
$str
¯¯* .
+
¯¯/ 0
ordenDeCotizacion
¯¯1 B
.
¯¯B C
Comprobante
¯¯C N
(
¯¯N O
)
¯¯O P
.
¯¯P Q

NombreTipo
¯¯Q [
+
¯¯\ ]
$str
¯¯^ c
+
¯¯d e
ordenDeCotizacion
¯¯f w
.
¯¯w x
Comprobante¯¯x É
(¯¯É Ñ
)¯¯Ñ Ö
.¯¯Ö Ü
NumeroDeSerie¯¯Ü ì
+¯¯î ï
$str¯¯ñ õ
+¯¯ú ù!
ordenDeCotizacion¯¯û Ø
.¯¯Ø ∞
Comprobante¯¯∞ ª
(¯¯ª º
)¯¯º Ω
.¯¯Ω æ#
NumeroDeComprobante¯¯æ —
;¯¯— “
return
˘˘ 
asunto
˘˘ 
;
˘˘ 
}
˙˙ 	
public
˚˚ 
string
˚˚ .
 ObtenerCuerpoDeCorreoElectronico
˚˚ 6
(
˚˚6 7&
EstablecimientoComercial
˚˚7 O
sede
˚˚P T
,
˚˚T U
OrdenDeCotizacion
˚˚V g
ordenDeCotizacion
˚˚h y
)
˚˚y z
{
¸¸ 	
string
˝˝ 
cuerpo
˝˝ 
=
˝˝ 
$str
˝ˇ 
+
ˇˇ 
sede
ˇˇ !
.
ˇˇ! "
Nombre
ˇˇ" (
+
ˇˇ) *
$str
ˇÄ+ 
+
ÄÄ 
ordenDeCotizacion
ÄÄ .
.
ÄÄ. /
Comprobante
ÄÄ/ :
(
ÄÄ: ;
)
ÄÄ; <
.
ÄÄ< =

NombreTipo
ÄÄ= G
+
ÄÄH I
$str
ÄÄJ O
+
ÄÄP Q
ordenDeCotizacion
ÄÄR c
.
ÄÄc d
Comprobante
ÄÄd o
(
ÄÄo p
)
ÄÄp q
.
ÄÄq r
NumeroDeSerie
ÄÄr 
+ÄÄÄ Å
$strÄÄÇ á
+ÄÄà â!
ordenDeCotizacionÄÄä õ
.ÄÄõ ú
ComprobanteÄÄú ß
(ÄÄß ®
)ÄÄ® ©
.ÄÄ© ™#
NumeroDeComprobanteÄÄ™ Ω
+ÄÄæ ø
$strÄÑ¿ 
;
ÑÑ 
return
ÖÖ 
cuerpo
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
}
àà 
}ââ Ω¢
ID:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Gasto.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public 
List 
< 
OrdenDeGasto  
>  !!
ObtenerOrdenesDeGasto" 7
(7 8
int8 ;

idEmpleado< F
,F G
DateTimeH P

fechaDesdeQ [
,[ \
DateTime] e

fechaHastaf p
)p q
{ 	
try 
{ 
List 
< 
Transaccion  
>  !
gastos" (
=) *"
transaccionRepositorio+ A
.A BF
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoB |
(| } 
TransaccionSettings	} ê
.
ê ë
Default
ë ò
.
ò ô)
IdTipoTransaccionOrdenGasto
ô ¥
,
¥ µ

fechaDesde
∂ ¿
,
¿ ¡

fechaHasta
¬ Ã
)
Ã Õ
.
Õ Œ
ToList
Œ ‘
(
‘ ’
)
’ ÷
;
÷ ◊
return 
OrdenDeGasto #
.# $
Convert_$ ,
(, -
gastos- 3
.3 4
OrderByDescending4 E
(E F
gF G
=>H J
gK L
.L M"
fecha_registro_sistemaM c
)c d
.d e
ToListe k
(k l
)l m
)m n
;n o
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* R
,R S
eT U
)U V
;V W
} 
} 	
public!! 
async!! 
Task!! 
<!! 
List!! 
<!! ,
 TipoDeComprobanteParaTransaccion!! ?
>!!? @
>!!@ A.
"ObtenerTiposDeComprobanteParaGasto!!B d
(!!d e
int!!e h

idEmpleado!!i s
,!!s t
int!!u x
idCentroAtencion	!!y â
)
!!â ä
{"" 	
try## 
{$$ 
var%% 
	resultado%% 
=%% 
await%%  %"
transaccionRepositorio%%& <
.%%< =6
*ObtenerTipoComprobantePorTipoDeTransaccion%%= g
(%%g h
TransaccionSettings%%h {
.%%{ |
Default	%%| É
.
%%É Ñ)
IdTipoTransaccionOrdenGasto
%%Ñ ü
)
%%ü †
;
%%† °
foreach&& 
(&& 
var&& 
tipo&& !
in&&" $
	resultado&&% .
)&&. /
{'' 
tipo(( 
.(( 
Detalle_maestro(( (
.((( )
Serie_comprobante(() :
=((; <
tipo((= A
.((A B
Detalle_maestro((B Q
.((Q R
Serie_comprobante((R c
.((c d
Where((d i
(((i j
sc((j l
=>((m o
sc((p r
.((r s
id_propietario	((s Å
==
((Ç Ñ
idCentroAtencion
((Ö ï
&&
((ñ ò
sc
((ô õ
.
((õ ú

es_vigente
((ú ¶
)
((¶ ß
.
((ß ®
ToList
((® Æ
(
((Æ Ø
)
((Ø ∞
;
((∞ ±
})) 
return** ,
 TipoDeComprobanteParaTransaccion** 7
.**7 8
Convert**8 ?
(**? @
	resultado**@ I
.**I J
ToList**J P
(**P Q
)**Q R
)**R S
;**S T
}++ 
catch,, 
(,, 
	Exception,, 
e,, 
),, 
{-- 
throw.. 
new.. 
LogicaException.. )
(..) *
$str..* j
,..j k
e..l m
)..m n
;..n o
}// 
}00 	
private22 
Transaccion22 
GenerarGasto22 (
(22( )
int22) ,

idEmpleado22- 7
,227 8
int229 <
idUnidadNegocio22= L
,22L M
bool22N R
esPropio22S [
,22[ \
int22] `
idSerieComprobante22a s
,22s t
int22u x
idTipoComprobante	22y ä
,
22ä ã
int
22å è!
numeroDeComprobante
22ê £
,
22£ §
string
22• ´&
numeroSerieDeComprobante
22¨ ƒ
,
22ƒ ≈
DateTime
22∆ Œ
fechaEmision
22œ €
,
22€ ‹
DateTime
22› Â
fechaRegistro
22Ê Û
,
22Û Ù
string
22ı ˚
sufijoCodigo
22¸ à
,
22à â
int
22ä ç
idTipoTransaccion
22é ü
,
22ü †
decimal
22° ®
importeTotal
22© µ
,
22µ ∂
string
22∑ Ω
observacion
22æ …
,
22…  
int
22À Œ
	idTercero
22œ ÿ
,
22ÿ Ÿ
int
22⁄ ›
idCentroAtencion
22ﬁ Ó
)
22Ó Ô
{33 	
try44 
{55 
int66 
idMoneda66 
=66 
MaestroSettings66 .
.66. /
Default66/ 6
.666 7'
IdDetalleMaestroMonedaSoles667 R
;66R S
decimal77 
tipoDeCambio77 $
=77% &
$num77' (
;77( )
	Operacion99 
operacionGenerica99 +
=99, -
new99. 1
	Operacion992 ;
(99; <"
transaccionRepositorio99< R
.99R S$
ObtenerUltimaTransaccion99S k
(99k l
TransaccionSettings99l 
.	99 Ä
Default
99Ä á
.
99á à(
IdTipoTransaccionOperacion
99à ¢
)
99¢ £
)
99£ §
;
99§ •
string;; 
codigo;; 
=;; #
codigosOperacion_Logica;;  7
.;;7 81
%ObtenerSiguienteCodigoParaFacturacion;;8 ]
(;;] ^
sufijoCodigo;;^ j
,;;j k
idTipoTransaccion;;l }
);;} ~
;;;~ 
Comprobante== 
comprobante== '
===( )
GenerarComprobante==* <
(==< =
esPropio=== E
,==E F
idSerieComprobante==G Y
,==Y Z
idTipoComprobante==[ l
,==l m%
numeroSerieDeComprobante	==n Ü
,
==Ü á!
numeroDeComprobante
==à õ
)
==õ ú
;
==ú ù
Transaccion?? 
transaccion?? '
=??( )
new??* -
Transaccion??. 9
(??9 :
codigo??: @
,??@ A
operacionGenerica??B S
.??S T
Id??T V
,??V W
fechaRegistro??X e
,??e f
idTipoTransaccion??g x
,??x y
idUnidadNegocio	??z â
,
??â ä
true
??ã è
,
??è ê
fechaEmision
??ë ù
,
??ù û
fechaEmision
??ü ´
,
??´ ¨
observacion
??≠ ∏
,
??∏ π
fechaEmision
??∫ ∆
,
??∆ «

idEmpleado
??» “
,
??“ ”
importeTotal
??‘ ‡
,
??‡ ·
idCentroAtencion
??‚ Ú
,
??Ú Û
idMoneda
??Ù ¸
,
??¸ ˝
tipoDeCambio
??˛ ä
,
??ä ã
null
??å ê
,
??ê ë
	idTercero
??í õ
)
??õ ú
{@@ 
ComprobanteAA 
=AA  !
comprobanteAA" -
}BB 
;BB 
returnCC 
transaccionCC "
;CC" #
}DD 
catchEE 
(EE 
	ExceptionEE 
eEE 
)EE 
{FF 
throwGG 
newGG 
LogicaExceptionGG )
(GG) *
$strGG* T
,GGT U
eGGV W
)GGW X
;GGX Y
}HH 
}II 	
privateKK 
TransaccionKK 
GenerarOrdenGastoKK -
(KK- .
TransaccionKK. 9
gastoKK: ?
,KK? @
intKKA D

idEmpleadoKKE O
,KKO P
intKKQ T
idUnidadNegocioKKU d
,KKd e
DateTimeKKf n
fechaEmisionKKo {
,KK{ |
DateTime	KK} Ö
fechaRegistro
KKÜ ì
,
KKì î
string
KKï õ
sufijoCodigo
KKú ®
,
KK® ©
int
KK™ ≠ 
idOrdenTransaccion
KKÆ ¿
,
KK¿ ¡
string
KK¬ »
observacion
KK… ‘
,
KK‘ ’
int
KK÷ Ÿ
idProveedor
KK⁄ Â
,
KKÂ Ê
int
KKÁ Í
idCentroAtencion
KKÎ ˚
,
KK˚ ¸
List
KK˝ Å
<
KKÅ Ç!
Detalle_transaccion
KKÇ ï
>
KKï ñ
detalles
KKó ü
,
KKü †
int
KK° §
estadoTransaccion
KK• ∂
,
KK∂ ∑
string
KK∏ æ,
observacionEstadoTransacciones
KKø ›
)
KK› ﬁ
{LL 	
TransaccionMM 

ordenGastoMM "
=MM# $
newMM% (
TransaccionMM) 4
(MM4 5#
codigosOperacion_LogicaMM5 L
.MML M1
%ObtenerSiguienteCodigoParaFacturacionMMM r
(MMr s
gastoMMs x
.MMx y
codigoMMy 
+
MMÄ Å
$str
MMÇ Ü
+
MMá à
sufijoCodigo
MMâ ï
,
MMï ñ 
idOrdenTransaccion
MMó ©
)
MM© ™
,
MM™ ´
null
MM¨ ∞
,
MM∞ ±
fechaRegistro
MM≤ ø
,
MMø ¿ 
idOrdenTransaccion
MM¡ ”
,
MM” ‘
idUnidadNegocio
MM’ ‰
,
MM‰ Â
true
MMÊ Í
,
MMÍ Î
fechaEmision
MMÏ ¯
,
MM¯ ˘
fechaEmision
MM˙ Ü
,
MMÜ á
observacion
MMà ì
,
MMì î
fechaEmision
MMï °
,
MM° ¢

idEmpleado
MM£ ≠
,
MM≠ Æ
gasto
MMØ ¥
.
MM¥ µ
importe_total
MMµ ¬
,
MM¬ √
idCentroAtencion
MMƒ ‘
,
MM‘ ’
gasto
MM÷ €
.
MM€ ‹
	id_moneda
MM‹ Â
,
MMÂ Ê
gasto
MMÁ Ï
.
MMÏ Ì
tipo_cambio
MMÌ ¯
,
MM¯ ˘
null
MM˙ ˛
,
MM˛ ˇ
idProveedor
MMÄ ã
)
MMã å
{NN 
ComprobantePP 
=PP 
gastoPP #
.PP# $
ComprobantePP$ /
}QQ 
;QQ 

ordenGastoRR 
.RR 
AgregarDetallesRR &
(RR& '
detallesRR' /
)RR/ 0
;RR0 1
Estado_transaccionTT "
estadoDeLaOrdenDeGastoTT 5
=TT6 7
newTT8 ;
Estado_transaccionTT< N
(TTN O

idEmpleadoTTO Y
,TTY Z
estadoTransaccionTT[ l
,TTl m
fechaRegistroTTn {
,TT{ |+
observacionEstadoTransacciones	TT} õ
)
TTõ ú
;
TTú ù

ordenGastoUU 
.UU 
Estado_transaccionUU )
.UU) *
AddUU* -
(UU- ."
estadoDeLaOrdenDeGastoUU. D
)UUD E
;UUE F

ordenGastoWW 
.WW !
Parametro_transaccionWW ,
.WW, -
AddWW- 0
(WW0 1
newWW1 4!
Parametro_transaccionWW5 J
(WWJ K
MaestroSettingsWWK Z
.WWZ [
DefaultWW[ b
.WWb c0
#IdDetalleMaestroParametroModoDePago	WWc Ü
,
WWÜ á
(
WWà â
(
WWâ ä
int
WWä ç
)
WWç é
ModoPago
WWé ñ
.
WWñ ó
Contado
WWó û
)
WWû ü
.
WWü †
ToString
WW† ®
(
WW® ©
)
WW© ™
)
WW™ ´
)
WW´ ¨
;
WW¨ ≠

ordenGastoXX 
.XX !
Parametro_transaccionXX ,
.XX, -
AddXX- 0
(XX0 1
newXX1 4!
Parametro_transaccionXX5 J
(XXJ K
MaestroSettingsXXK Z
.XXZ [
DefaultXX[ b
.XXb c0
#IdDetalleMaestroParametroTipoCompra	XXc Ü
,
XXÜ á
(
XXà â
(
XXâ ä
int
XXä ç
)
XXç é
ModoOperacionEnum
XXé ü
.
XXü †
PorMostrador
XX† ¨
)
XX¨ ≠
.
XX≠ Æ
ToString
XXÆ ∂
(
XX∂ ∑
)
XX∑ ∏
)
XX∏ π
)
XXπ ∫
;
XX∫ ª
returnYY 

ordenGastoYY 
;YY 
}ZZ 	
public]] 
List]] 
<]] 
Detalle_transaccion]] '
>]]' (
GenerarDetalleGasto]]) <
(]]< =
int]]= @

idConcepto]]A K
,]]K L
string]]M S
nombreConcepto]]T b
,]]b c
string]]d j
detalle]]k r
,]]r s
decimal]]t {
igv]]| 
,	]] Ä
decimal
]]Å à
total
]]â é
)
]]é è
{^^ 	
var__ 
detalles__ 
=__ 
new__ 
Detalle_transaccion__ 2
[__2 3
]__3 4
{__5 6
new__7 :
Detalle_transaccion__; N
(__N O
$num__O P
,__P Q

idConcepto__R \
,__\ ]
nombreConcepto__^ l
+__m n
$str__o r
+__s t
detalle__u |
,__| }
total	__~ É
,
__É Ñ
total
__Ö ä
,
__ä ã
null
__å ê
,
__ê ë
$num
__í ì
,
__ì î
null
__ï ô
,
__ô ö
null
__õ ü
,
__ü †
$num
__° ¢
,
__¢ £
igv
__§ ß
,
__ß ®
$num
__© ™
,
__™ ´
null
__¨ ∞
,
__∞ ±
null
__≤ ∂
,
__∂ ∑
null
__∏ º
)
__º Ω
}
__æ ø
;
__ø ¿
return`` 
detalles`` 
.`` 
ToList`` "
(``" #
)``# $
;``$ %
}aa 	
publiccc 
OperationResultcc 
GuardarGastocc +
(cc+ ,
intcc, /

idEmpleadocc0 :
,cc: ;
intcc< ?
idCentroAtencioncc@ P
,ccP Q
intccR U
idProveedorccV a
,cca b
intccc f
idTipoComprobanteccg x
,ccx y
intccz }
idSerieComprobante	cc~ ê
,
ccê ë
bool
ccí ñ
esPropio
ccó ü
,
ccü †
string
cc° ß&
numeroSerieDeComprobante
cc® ¿
,
cc¿ ¡
int
cc¬ ≈!
numeroDeComprobante
cc∆ Ÿ
,
ccŸ ⁄
int
cc€ ﬁ

idConcepto
ccﬂ È
,
ccÈ Í
string
ccÎ Ò
nombreConcepto
ccÚ Ä
,
ccÄ Å
string
ccÇ à
detalle
ccâ ê
,
ccê ë
string
ccí ò
observacion
ccô §
,
cc§ •
DateTime
cc¶ Æ
fechaEmision
ccØ ª
,
ccª º
decimal
ccΩ ƒ
igv
cc≈ »
,
cc» …
decimal
cc  —
total
cc“ ◊
,
cc◊ ÿ
bool
ccŸ ›
	esContado
ccﬁ Á
,
ccÁ Ë
bool
ccÈ Ì
	esCredito
ccÓ ˜
,
cc˜ ¯
List
cc˘ ˝
<
cc˝ ˛
Cuota
cc˛ É
>
ccÉ Ñ
cuotas
ccÖ ã
)
ccã å
{dd 	
tryee 
{ff 
intgg 
idUnidadNegociogg #
=gg$ %
MaestroSettingsgg& 5
.gg5 6
Defaultgg6 =
.gg= >6
*IdDetalleMaestroUnidadDeNegocioTransversalgg> h
;ggh i
DateTimehh 
fechaRegistrohh &
=hh' (
DateTimeUtilhh) 5
.hh5 6
FechaActualhh6 A
(hhA B
)hhB C
;hhC D
permisos_Logicajj 
.jj  
ValidarAccionjj  -
(jj- .

idEmpleadojj. 8
,jj8 9
MaestroSettingsjj: I
.jjI J
DefaultjjJ Q
.jjQ R+
IdDetalleMaestroAccionConfirmarjjR q
,jjq r 
TransaccionSettings	jjs Ü
.
jjÜ á
Default
jjá é
.
jjé è)
IdTipoTransaccionOrdenGasto
jjè ™
,
jj™ ´
idUnidadNegocio
jj¨ ª
)
jjª º
;
jjº Ω
varll 
detallesll 
=ll 
GenerarDetalleGastoll 2
(ll2 3

idConceptoll3 =
,ll= >
nombreConceptoll? M
,llM N
detallellO V
,llV W
igvllX [
,ll[ \
totalll] b
)llb c
;llc d
Transaccionnn 
gastonn !
=nn" #
GenerarGastonn$ 0
(nn0 1

idEmpleadonn1 ;
,nn; <
idUnidadNegocionn= L
,nnL M
esPropionnN V
,nnV W
idSerieComprobantennX j
,nnj k
idTipoComprobantennl }
,nn} ~ 
numeroDeComprobante	nn í
,
nní ì&
numeroSerieDeComprobante
nnî ¨
,
nn¨ ≠
fechaEmision
nnÆ ∫
,
nn∫ ª
fechaRegistro
nnº …
,
nn…  
$str
nnÀ Œ
,
nnŒ œ!
TransaccionSettings
nn– „
.
nn„ ‰
Default
nn‰ Î
.
nnÎ Ï$
IdTipoTransaccionGasto
nnÏ Ç
,
nnÇ É
total
nnÑ â
,
nnâ ä
observacion
nnã ñ
,
nnñ ó
idProveedor
nnò £
,
nn£ §
idCentroAtencion
nn• µ
)
nnµ ∂
;
nn∂ ∑
Transaccionpp 
ordenDeGastopp (
=pp) *
GenerarOrdenGastopp+ <
(pp< =
gastopp= B
,ppB C

idEmpleadoppD N
,ppN O
MaestroSettingsppP _
.pp_ `
Defaultpp` g
.ppg h7
*IdDetalleMaestroUnidadDeNegocioTransversal	pph í
,
ppí ì
fechaEmision
ppî †
,
pp† °
fechaRegistro
pp¢ Ø
,
ppØ ∞
$str
pp± ¥
,
pp¥ µ!
TransaccionSettings
pp∂ …
.
pp…  
Default
pp  —
.
pp— “)
IdTipoTransaccionOrdenGasto
pp“ Ì
,
ppÌ Ó
observacion
ppÔ ˙
,
pp˙ ˚
idProveedor
pp¸ á
,
ppá à
idCentroAtencion
ppâ ô
,
ppô ö
detalles
ppõ £
,
pp£ §
MaestroSettings
pp• ¥
.
pp¥ µ
Default
ppµ º
.
ppº Ω.
 IdDetalleMaestroEstadoConfirmado
ppΩ ›
,
pp› ﬁ
$str
ppﬂ û
)
ppû ü
;
ppü †
gastorr 
.rr 
Transaccion1rr "
.rr" #
Addrr# &
(rr& '
ordenDeGastorr' 3
)rr3 4
;rr4 5
Cuotass 
cuotaAPagarss !
=ss" #
nullss$ (
;ss( )
iftt 
(tt 
!tt 
	esContadott 
&&tt !
!tt" #
	esCreditott# ,
)tt, -
{uu 
ordenDeGastovv  
.vv  !
Cuotavv! &
=vv' (
GenerarCuotasvv) 6
(vv6 7

idEmpleadovv7 A
,vvA B
cuotasvvC I
,vvI J
fechaRegistrovvK X
,vvX Y
falsevvZ _
,vv_ `
MaestroSettingsvva p
.vvp q
Defaultvvq x
.vvx y-
 IdDetalleMaestroEstadoConfirmado	vvy ô
,
vvô ö
$str
vvõ Œ
)
vvŒ œ
;
vvœ –
cuotaAPagarww 
=ww  !
ordenDeGastoww" .
.ww. /
Cuotaww/ 4
.ww4 5
SingleOrDefaultww5 D
(wwD E
cwwE F
=>wwG I
cwwJ K
.wwK L
cuota_inicialwwL Y
)wwY Z
;wwZ [
}xx 
elseyy 
{zz 
var{{ 
cuota{{ 
={{ 
new{{  #
Cuota{{$ )
({{) *0
$ObtenerSiguienteCodigoParaNuevaCuota{{* N
({{N O
false{{O T
,{{T U
fechaRegistro{{V c
.{{c d
Year{{d h
){{h i
+{{j k
$str{{l o
+{{p q
$num{{r s
,{{s t
fechaRegistro	{{u Ç
,
{{Ç É
fechaRegistro
{{Ñ ë
,
{{ë í
gasto
{{ì ò
.
{{ò ô
importe_total
{{ô ¶
,
{{¶ ß
$str
{{® “
,
{{“ ”
false
{{‘ Ÿ
)
{{Ÿ ⁄
;
{{⁄ €
ordenDeGasto||  
.||  !
Cuota||! &
.||& '
Add||' *
(||* +
cuota||+ 0
)||0 1
;||1 2
cuotaAPagar}} 
=}}  !
	esContado}}" +
?}}, -
cuota}}. 3
:}}4 5
null}}6 :
;}}: ;
}~~ 
if 
( 
cuotaAPagar 
!=  "
null# '
)' (
{
ÄÄ 
cuotaAPagar
ÅÅ 
.
ÅÅ  
SetPagoACuenta
ÅÅ  .
(
ÅÅ. /
cuotaAPagar
ÅÅ/ :
.
ÅÅ: ;
total
ÅÅ; @
)
ÅÅ@ A
;
ÅÅA B
Transaccion
ÇÇ 
pago
ÇÇ  $
=
ÇÇ% &(
GenerarMovimientoEconomico
ÇÇ' A
(
ÇÇA B
gasto
ÇÇB G
,
ÇÇG H
cuotaAPagar
ÇÇI T
,
ÇÇT U

idEmpleado
ÇÇV `
,
ÇÇ` a
idCentroAtencion
ÇÇb r
,
ÇÇr s
idProveedor
ÇÇt 
,ÇÇ Ä#
TransaccionSettingsÇÇÅ î
.ÇÇî ï
DefaultÇÇï ú
.ÇÇú ù*
IdTipoTransaccionPagoGastoÇÇù ∑
,ÇÇ∑ ∏
fechaRegistroÇÇπ ∆
,ÇÇ∆ «
fechaRegistroÇÇ» ’
,ÇÇ’ ÷
observacionÇÇ◊ ‚
,ÇÇ‚ „
MaestroSettingsÇÇ‰ Û
.ÇÇÛ Ù
DefaultÇÇÙ ˚
.ÇÇ˚ ¸3
#IdDetalleMaestroMedioDepagoEfectivoÇÇ¸ ü
,ÇÇü †
MaestroSettingsÇÇ° ∞
.ÇÇ∞ ±
DefaultÇÇ± ∏
.ÇÇ∏ π9
)IdDetalleMaestroEntidadBancariaPorDefectoÇÇπ ‚
,ÇÇ‚ „
$strÇÇ‰ Û
)ÇÇÛ Ù
;ÇÇÙ ı
gasto
ÉÉ 
.
ÉÉ 
Transaccion1
ÉÉ &
.
ÉÉ& '
Add
ÉÉ' *
(
ÉÉ* +
pago
ÉÉ+ /
)
ÉÉ/ 0
;
ÉÉ0 1
}
ÑÑ 
return
ÖÖ $
transaccionRepositorio
ÖÖ -
.
ÖÖ- .
CrearTransaccion
ÖÖ. >
(
ÖÖ> ?
gasto
ÖÖ? D
)
ÖÖD E
;
ÖÖE F
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
new
ââ 
LogicaException
ââ )
(
ââ) *
$str
ââ* N
,
ââN O
e
ââP Q
)
ââQ R
;
ââR S
}
ää 
}
ãã 	
public
çç 
OperationResult
çç 
InvalidarGasto
çç -
(
çç- .
long
çç. 2
idOrdenDeGasto
çç3 A
,
ççA B
int
ççC F

idEmpleado
ççG Q
,
ççQ R
int
ççS V
idCentroAtencion
ççW g
,
ççg h
string
ççi o
observacion
ççp {
)
çç{ |
{
éé 	
try
èè 
{
êê 
OrdenDeGasto
ëë 
ordenDeGasto
ëë )
=
ëë* +
new
ëë, /
OrdenDeGasto
ëë0 <
(
ëë< =$
transaccionRepositorio
ëë= S
.
ëëS T 
ObtenerTransaccion
ëëT f
(
ëëf g
idOrdenDeGasto
ëëg u
)
ëëu v
)
ëëv w
;
ëëw x
int
ìì 
idUnidadNegocio
ìì #
=
ìì$ %
MaestroSettings
ìì& 5
.
ìì5 6
Default
ìì6 =
.
ìì= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
ìì> h
;
ììh i
DateTime
îî 
fechaRegistro
îî &
=
îî' (
DateTimeUtil
îî) 5
.
îî5 6
FechaActual
îî6 A
(
îîA B
)
îîB C
;
îîC D
permisos_Logica
ññ 
.
ññ  
ValidarAccion
ññ  -
(
ññ- .

idEmpleado
ññ. 8
,
ññ8 9
MaestroSettings
ññ: I
.
ññI J
Default
ññJ Q
.
ññQ R-
IdDetalleMaestroAccionConfirmar
ññR q
,
ññq r"
TransaccionSettingsññs Ü
.ññÜ á
Defaultññá é
.ññé è+
IdTipoTransaccionOrdenGastoññè ™
,ññ™ ´
idUnidadNegocioññ¨ ª
)ññª º
;ññº Ω
List
òò 
<
òò !
Detalle_transaccion
òò (
>
òò( )
detalles
òò* 2
=
òò3 4
new
òò5 8
List
òò9 =
<
òò= >!
Detalle_transaccion
òò> Q
>
òòQ R
(
òòR S
)
òòS T
;
òòT U
foreach
ôô 
(
ôô 
var
ôô 
detalle
ôô $
in
ôô% '
ordenDeGasto
ôô( 4
.
ôô4 5
Detalles
ôô5 =
(
ôô= >
)
ôô> ?
)
ôô? @
{
öö 
detalles
õõ 
.
õõ 
Add
õõ  
(
õõ  !
new
õõ! $!
Detalle_transaccion
õõ% 8
(
õõ8 9
detalle
õõ9 @
.
õõ@ A
Cantidad
õõA I
,
õõI J
detalle
õõK R
.
õõR S
Producto
õõS [
.
õõ[ \
Id
õõ\ ^
,
õõ^ _
null
õõ` d
,
õõd e
detalle
õõf m
.
õõm n
PrecioUnitario
õõn |
,
õõ| }
detalleõõ~ Ö
.õõÖ Ü
ImporteõõÜ ç
,õõç é
nullõõè ì
,õõì î
$numõõï ñ
,õõñ ó
nullõõò ú
,õõú ù
nullõõû ¢
,õõ¢ £
$numõõ§ •
,õõ• ¶
detalleõõß Æ
.õõÆ Ø
IgvõõØ ≤
,õõ≤ ≥
detalleõõ¥ ª
.õõª º
	Descuentoõõº ≈
,õõ≈ ∆
detalleõõ« Œ
.õõŒ œ
Loteõõœ ”
,õõ” ‘
detalleõõ’ ‹
.õõ‹ ›
Vencimientoõõ› Ë
,õõË È
detalleõõÍ Ò
.õõÒ Ú
RegistroõõÚ ˙
)õõ˙ ˚
)õõ˚ ¸
;õõ¸ ˝
}
úú 
decimal
ùù 
importePagoTotal
ùù (
=
ùù) *
ordenDeGasto
ùù+ 7
.
ùù7 8

ModoDePago
ùù8 B
(
ùùB C
)
ùùC D
==
ùùE G
ModoPago
ùùH P
.
ùùP Q
Contado
ùùQ X
?
ùùY Z
ordenDeGasto
ùù[ g
.
ùùg h
Total
ùùh m
:
ùùn o
ordenDeGasto
ùùp |
.
ùù| }
Transaccionùù} à
(ùùà â
)ùùâ ä
.ùùä ã
Cuotaùùã ê
.ùùê ë

SelectManyùùë õ
(ùùõ ú
cùùú ù
=>ùùû †
cùù° ¢
.ùù¢ £

Pago_cuotaùù£ ≠
)ùù≠ Æ
.ùùÆ Ø
SumùùØ ≤
(ùù≤ ≥
cpùù≥ µ
=>ùù∂ ∏
cpùùπ ª
.ùùª º
importeùùº √
)ùù√ ƒ
;ùùƒ ≈
var
ûû 
idProveedor
ûû 
=
ûû  !
ordenDeGasto
ûû" .
.
ûû. /
Transaccion
ûû/ :
(
ûû: ;
)
ûû; <
.
ûû< =&
id_actor_negocio_externo
ûû= U
;
ûûU V
Serie_comprobante
†† !
serie
††" '
=
††( )$
transaccionRepositorio
††* @
.
††@ AN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante††A Ä
(††Ä Å
MaestroSettings††Å ê
.††ê ë
Default††ë ò
.††ò ô@
0IdDetalleMaestroComprobanteNotaInvalidacionGasto††ô …
,††…   
idCentroAtencion††À €
)††€ ‹
;††‹ ›
if
°° 
(
°° 
serie
°° 
==
°° 
null
°°  
)
°°  !
{
¢¢ 
throw
££ 
new
££ 
LogicaException
££ -
(
££- .
$str
££. j
)
££j k
;
££k l
}
§§ 
Transaccion
¶¶ 
invalidacionGasto
¶¶ -
=
¶¶. /
GenerarGasto
¶¶0 <
(
¶¶< =

idEmpleado
¶¶= G
,
¶¶G H
idUnidadNegocio
¶¶I X
,
¶¶X Y
true
¶¶Z ^
,
¶¶^ _
serie
¶¶` e
.
¶¶e f
id
¶¶f h
,
¶¶h i
serie
¶¶j o
.
¶¶o p"
id_tipo_comprobante¶¶p É
,¶¶É Ñ
serie¶¶Ö ä
.¶¶ä ã
proximo_numero¶¶ã ô
,¶¶ô ö
serie¶¶õ †
.¶¶† °
numero¶¶° ß
,¶¶ß ®
fechaRegistro¶¶© ∂
,¶¶∂ ∑
fechaRegistro¶¶∏ ≈
,¶¶≈ ∆
$str¶¶«  
,¶¶  À#
TransaccionSettings¶¶Ã ﬂ
.¶¶ﬂ ‡
Default¶¶‡ Á
.¶¶Á Ë2
"IdTipoTransaccionInvalidacionGasto¶¶Ë ä
,¶¶ä ã 
importePagoTotal¶¶å ú
,¶¶ú ù
observacion¶¶û ©
,¶¶© ™
idProveedor¶¶´ ∂
,¶¶∂ ∑ 
idCentroAtencion¶¶∏ »
)¶¶» …
;¶¶…  
Transaccion
®® $
ordenInvalidacionGasto
®® 2
=
®®3 4
GenerarOrdenGasto
®®5 F
(
®®F G
invalidacionGasto
®®G X
,
®®X Y

idEmpleado
®®Z d
,
®®d e
MaestroSettings
®®f u
.
®®u v
Default
®®v }
.
®®} ~9
*IdDetalleMaestroUnidadDeNegocioTransversal®®~ ®
,®®® ©
fechaRegistro®®™ ∑
,®®∑ ∏
fechaRegistro®®π ∆
,®®∆ «
$str®®» À
,®®À Ã#
TransaccionSettings®®Õ ‡
.®®‡ ·
Default®®· Ë
.®®Ë È7
'IdTipoTransaccionOrdenInvalidacionGasto®®È ê
,®®ê ë
observacion®®í ù
,®®ù û
idProveedor®®ü ™
,®®™ ´ 
idCentroAtencion®®¨ º
,®®º Ω
detalles®®æ ∆
,®®∆ «
MaestroSettings®®» ◊
.®®◊ ÿ
Default®®ÿ ﬂ
.®®ﬂ ‡0
 IdDetalleMaestroEstadoConfirmado®®‡ Ä
,®®Ä Å
$str®®Ç …
)®®…  
;®®  À
invalidacionGasto
™™ !
.
™™! "
Transaccion1
™™" .
.
™™. /
Add
™™/ 2
(
™™2 3$
ordenInvalidacionGasto
™™3 I
)
™™I J
;
™™J K
Cuota
¨¨ 
cuota
¨¨ 
=
¨¨ 
new
¨¨ !
Cuota
¨¨" '
(
¨¨' (2
$ObtenerSiguienteCodigoParaNuevaCuota
¨¨( L
(
¨¨L M
false
¨¨M R
,
¨¨R S
fechaRegistro
¨¨T a
.
¨¨a b
Year
¨¨b f
)
¨¨f g
+
¨¨h i
$str
¨¨j m
+
¨¨n o
$num
¨¨p q
,
¨¨q r
fechaRegistro¨¨s Ä
,¨¨Ä Å
fechaRegistro¨¨Ç è
,¨¨è ê!
invalidacionGasto¨¨ë ¢
.¨¨¢ £
importe_total¨¨£ ∞
,¨¨∞ ±!
invalidacionGasto¨¨≤ √
.¨¨√ ƒ
importe_total¨¨ƒ —
,¨¨— “
$str¨¨” ˝
,¨¨˝ ˛
false¨¨ˇ Ñ
)¨¨Ñ Ö
;¨¨Ö Ü$
ordenInvalidacionGasto
≠≠ &
.
≠≠& '
Cuota
≠≠' ,
.
≠≠, -
Add
≠≠- 0
(
≠≠0 1
cuota
≠≠1 6
)
≠≠6 7
;
≠≠7 8
Transaccion
ØØ 
pago
ØØ  
=
ØØ! "(
GenerarMovimientoEconomico
ØØ# =
(
ØØ= >
invalidacionGasto
ØØ> O
,
ØØO P
cuota
ØØQ V
,
ØØV W

idEmpleado
ØØX b
,
ØØb c
idCentroAtencion
ØØd t
,
ØØt u
idProveedorØØv Å
,ØØÅ Ç#
TransaccionSettingsØØÉ ñ
.ØØñ ó
DefaultØØó û
.ØØû ü7
'IdTipoTransaccionCobroInvalidacionGastoØØü ∆
,ØØ∆ «
fechaRegistroØØ» ’
,ØØ’ ÷
fechaRegistroØØ◊ ‰
,ØØ‰ Â
observacionØØÊ Ò
,ØØÒ Ú
MaestroSettingsØØÛ Ç
.ØØÇ É
DefaultØØÉ ä
.ØØä ã3
#IdDetalleMaestroMedioDepagoEfectivoØØã Æ
,ØØÆ Ø
MaestroSettingsØØ∞ ø
.ØØø ¿
DefaultØØ¿ «
.ØØ« »9
)IdDetalleMaestroEntidadBancariaPorDefectoØØ» Ò
,ØØÒ Ú
$strØØÛ Ç
)ØØÇ É
;ØØÉ Ñ
invalidacionGasto
∞∞ !
.
∞∞! "
Transaccion1
∞∞" .
.
∞∞. /
Add
∞∞/ 2
(
∞∞2 3
pago
∞∞3 7
)
∞∞7 8
;
∞∞8 9 
Estado_transaccion
≥≥ "$
estadoDeLaOrdenDeGasto
≥≥# 9
=
≥≥: ;
new
≥≥< ? 
Estado_transaccion
≥≥@ R
(
≥≥R S
idOrdenDeGasto
≥≥S a
,
≥≥a b

idEmpleado
≥≥c m
,
≥≥m n
MaestroSettings
≥≥o ~
.
≥≥~ 
Default≥≥ Ü
.≥≥Ü á0
 IdDetalleMaestroEstadoInvalidado≥≥á ß
,≥≥ß ®
fechaRegistro≥≥© ∂
,≥≥∂ ∑
$str
¥¥ @
)
¥¥@ A
;
¥¥A B
List
∂∂ 
<
∂∂ 
Estado_cuota
∂∂ !
>
∂∂! "
estadosDeCuota
∂∂# 1
=
∂∂2 3
new
∂∂4 7
List
∂∂8 <
<
∂∂< =
Estado_cuota
∂∂= I
>
∂∂I J
(
∂∂J K
)
∂∂K L
;
∂∂L M
return
ºº $
transaccionRepositorio
ºº -
.
ºº- .<
.CrearTransacionYEstadoTransaccionYEstadosCuota
ºº. \
(
ºº\ ]
invalidacionGasto
ºº] n
,
ººn o%
estadoDeLaOrdenDeGastoººp Ü
,ººÜ á
estadosDeCuotaººà ñ
)ººñ ó
;ººó ò
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
øø 
throw
¿¿ 
new
¿¿ 
LogicaException
¿¿ )
(
¿¿) *
$str
¿¿* N
,
¿¿N O
e
¿¿P Q
)
¿¿Q R
;
¿¿R S
}
¡¡ 
}
¬¬ 	
public
ƒƒ 
OrdenDeGasto
ƒƒ 
ObtenerGasto
ƒƒ (
(
ƒƒ( )
long
ƒƒ) -
idOrdenGasto
ƒƒ. :
)
ƒƒ: ;
{
≈≈ 	
try
∆∆ 
{
«« 
return
»» 
new
»» 
OrdenDeGasto
»» '
(
»»' ($
transaccionRepositorio
»»( >
.
»»> ?F
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
»»? w
(
»»w x
idOrdenGasto»»x Ñ
)»»Ñ Ö
)»»Ö Ü
;»»Ü á
}
…… 
catch
   
(
   
	Exception
   
e
   
)
   
{
ÀÀ 
throw
ÃÃ 
new
ÃÃ 
LogicaException
ÃÃ )
(
ÃÃ) *
$str
ÃÃ* N
,
ÃÃN O
e
ÃÃP Q
)
ÃÃQ R
;
ÃÃR S
}
ÕÕ 
}
ŒŒ 	
public
–– 
List
–– 
<
–– 4
&Resumen_Transaccion_Gasto_Por_Concepto
–– :
>
––: ;,
ObtenerReporteGastoPorConcepto
––< Z
(
––Z [
DateTime
––[ c

fechaDesde
––d n
,
––n o
DateTime
––p x

fechaHasta––y É
,––É Ñ
bool––Ö â
reporteGlobal––ä ó
,––ó ò
int––ô ú
[––ú ù
]––ù û"
idsCentrosAtencion––ü ±
)––± ≤
{
—— 	
List
““ 
<
““ 4
&Resumen_Transaccion_Gasto_Por_Concepto
““ 7
>
““7 8
	resultado
““9 B
;
““B C
if
”” 
(
”” 
reporteGlobal
”” 
)
”” 
{
‘‘ 
	resultado
’’ 
=
’’ $
transaccionRepositorio
’’ 2
.
’’2 3<
.ObtenerResumenTransaccionesDeGastosPorConcepto
’’3 a
(
’’a b!
TransaccionSettings
’’b u
.
’’u v
Default
’’v }
.
’’} ~*
IdTipoTransaccionOrdenGasto’’~ ô
,’’ô ö
MaestroSettings’’õ ™
.’’™ ´
Default’’´ ≤
.’’≤ ≥0
 IdDetalleMaestroEstadoConfirmado’’≥ ”
,’’” ‘

fechaDesde’’’ ﬂ
,’’ﬂ ‡

fechaHasta’’· Î
)’’Î Ï
.’’Ï Ì
ToList’’Ì Û
(’’Û Ù
)’’Ù ı
;’’ı ˆ
}
÷÷ 
else
◊◊ 
{
ÿÿ 
	resultado
ŸŸ 
=
ŸŸ $
transaccionRepositorio
ŸŸ 2
.
ŸŸ2 3<
.ObtenerResumenTransaccionesDeGastosPorConcepto
ŸŸ3 a
(
ŸŸa b!
TransaccionSettings
ŸŸb u
.
ŸŸu v
Default
ŸŸv }
.
ŸŸ} ~*
IdTipoTransaccionOrdenGastoŸŸ~ ô
,ŸŸô ö
MaestroSettingsŸŸõ ™
.ŸŸ™ ´
DefaultŸŸ´ ≤
.ŸŸ≤ ≥0
 IdDetalleMaestroEstadoConfirmadoŸŸ≥ ”
,ŸŸ” ‘"
idsCentrosAtencionŸŸ’ Á
,ŸŸÁ Ë

fechaDesdeŸŸÈ Û
,ŸŸÛ Ù

fechaHastaŸŸı ˇ
)ŸŸˇ Ä
.ŸŸÄ Å
ToListŸŸÅ á
(ŸŸá à
)ŸŸà â
;ŸŸâ ä
}
⁄⁄ 
return
€€ 
	resultado
€€ 
;
€€ 
}
‹‹ 	
}
öö 
}õõ ‰∂
LD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\LibrosElectronicosLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class $
LibrosElectronicosLogica )
:* +%
ILibrosElectronicosLogica, E
{ 
private 
readonly 
IOperacionLogica )!
_facturacionOperacion* ?
;? @
private 
readonly 
IActorNegocioLogica ,
_actorLogica- 9
;9 :
private 
readonly #
ITransaccionRepositorio 0#
_transaccionRepositorio1 H
;H I
public $
LibrosElectronicosLogica '
(' (
IOperacionLogica( 8
facturacionLogica9 J
,J K
IActorNegocioLogicaL _
actorLogica` k
,k l$
ITransaccionRepositorio	m Ñ$
transaccionRepositorio
Ö õ
)
õ ú
{ 	!
_facturacionOperacion !
=" #
facturacionLogica$ 5
;5 6
_actorLogica 
= 
actorLogica &
;& '#
_transaccionRepositorio #
=$ %"
transaccionRepositorio& <
;< =
}   	
privatell 
Listll 
<ll $
EBookVentasIngresosModelll -
>ll- .&
ConsolidarRegistroDeVentasll/ I
(llI J
PeriodollJ Q
periodollR Y
,llY Z
intll[ ^

idEmpleadoll_ i
)lli j
{mm 	
DateTimenn 

fechaDesdenn 
=nn  !
newnn" %
DateTimenn& .
(nn. /
Convertnn/ 6
.nn6 7
ToInt32nn7 >
(nn> ?
periodonn? F
.nnF G
anionnG K
)nnK L
,nnL M
ConvertnnN U
.nnU V
ToInt32nnV ]
(nn] ^
periodonn^ e
.nne f
mesnnf i
)nni j
,nnj k
$numnnl m
)nnm n
;nnn o
DateTimeoo 

fechaHastaoo 
=oo  !
newoo" %
DateTimeoo& .
(oo. /
Convertoo/ 6
.oo6 7
ToInt32oo7 >
(oo> ?
periodooo? F
.ooF G
anioooG K
)ooK L
,ooL M
ConvertooN U
.ooU V
ToInt32ooV ]
(oo] ^
periodooo^ e
.ooe f
mesoof i
)ooi j
,ooj k
DateTimeool t
.oot u
DaysInMonth	oou Ä
(
ooÄ Å
Convert
ooÅ à
.
ooà â
ToInt32
ooâ ê
(
ooê ë
periodo
ooë ò
.
ooò ô
anio
ooô ù
)
ooù û
,
ooû ü
Convert
oo† ß
.
ooß ®
ToInt32
oo® Ø
(
ooØ ∞
periodo
oo∞ ∑
.
oo∑ ∏
mes
oo∏ ª
)
ooª º
)
ooº Ω
)
ooΩ æ
.
ooæ ø
AddDays
ooø ∆
(
oo∆ «
$num
oo« »
)
oo» …
.
oo…  
AddMilliseconds
oo  Ÿ
(
ooŸ ⁄
-
oo⁄ €
$num
oo€ ‹
)
oo‹ ›
;
oo› ﬁ
Listqq 
<qq $
EBookVentasIngresosModelqq )
>qq) *
	registrosqq+ 4
=qq5 6
newqq7 :
Listqq; ?
<qq? @$
EBookVentasIngresosModelqq@ X
>qqX Y
(qqY Z
)qqZ [
;qq[ \
Listtt 
<tt 
OperacionDeVentatt !
>tt! ""
operacionesInvalidadastt# 9
=tt: ;!
_facturacionOperaciontt< Q
.ttQ Ra
TObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasInvalidadasYTributables	ttR ¶
(
tt¶ ß

idEmpleado
ttß ±
,
tt± ≤

fechaDesde
tt≥ Ω
,
ttΩ æ

fechaHasta
ttø …
)
tt…  
;
tt  À
Listvv 
<vv 
OperacionDeVentavv !
>vv! "(
operacionesDeVentasSinBoletavv# ?
=vv@ A!
_facturacionOperacionvvB W
.vvW XZ
MObtenerOrdenesConFacturaYNotasDeCreditoYDebitoDeVentasConfirmadasYTributables	vvX •
(
vv• ¶

idEmpleado
vv¶ ∞
,
vv∞ ±

fechaDesde
vv≤ º
,
vvº Ω

fechaHasta
vvæ »
)
vv» …
;
vv…  
varww 
	idsSeriesww 
=ww !
_facturacionOperacionww 1
.ww1 2>
2ObtenerIdsDeSeriesDeComprobantesParaBoletasDeVentaww2 d
(wwd e
)wwe f
;wwf g
intxx 
correlativoxx 
=xx 
$numxx 
;xx  
varyy 
anyoyy 
=yy 
Convertyy 
.yy 
ToInt32yy &
(yy& '
periodoyy' .
.yy. /
anioyy/ 3
)yy3 4
;yy4 5
varzz 
meszz 
=zz 
Convertzz 
.zz 
ToInt32zz %
(zz% &
periodozz& -
.zz- .
meszz. 1
)zz1 2
;zz2 3
	registros|| 
.|| 
AddRange|| 
(|| $
EBookVentasIngresosModel|| 7
.||7 8
Convert||8 ?
(||? @(
operacionesDeVentasSinBoleta||@ \
,||\ ]
periodo||^ e
,||e f
correlativo||g r
)||r s
)||s t
;||t u
	registros~~ 
.~~ 
AddRange~~ 
(~~ $
EBookVentasIngresosModel~~ 7
.~~7 8
Convert~~8 ?
(~~? @"
operacionesInvalidadas~~@ V
.~~V W
Where~~W \
(~~\ ]
oi~~] _
=>~~` b
oi~~c e
.~~e f
Comprobante~~f q
(~~q r
)~~r s
.~~s t
IdTipo~~t z
!=~~{ }
MaestroSettings	~~~ ç
.
~~ç é
Default
~~é ï
.
~~ï ñ/
!IdDetalleMaestroComprobanteBoleta
~~ñ ∑
)
~~∑ ∏
.
~~∏ π
ToList
~~π ø
(
~~ø ¿
)
~~¿ ¡
,
~~¡ ¬
periodo
~~√  
,
~~  À
correlativo
~~Ã ◊
)
~~◊ ÿ
)
~~ÿ Ÿ
;
~~Ÿ ⁄
foreach 
( 
var 
idSerie  
in! #
	idsSeries$ -
)- .
{
ÄÄ 
Int64
ÅÅ 1
#primerNumeroDeComprobanteDelPeriodo
ÅÅ 9
=
ÅÅ: ;#
_facturacionOperacion
ÅÅ< Q
.
ÅÅQ R_
PObtenerNumeroDeComprobanteDePrimeraOrdenConBoletaDeVentasConfirmadasYTributablesÅÅR ¢
(ÅÅ¢ £

idEmpleadoÅÅ£ ≠
,ÅÅ≠ Æ

fechaDesdeÅÅØ π
,ÅÅπ ∫

fechaHastaÅÅª ≈
,ÅÅ≈ ∆
idSerieÅÅ« Œ
)ÅÅŒ œ
;ÅÅœ –
Int64
ÇÇ 1
#maximoNumeroDeComprobanteDelPeriodo
ÇÇ 9
=
ÇÇ: ;#
_facturacionOperacion
ÇÇ< Q
.
ÇÇQ R^
OObtenerNumeroDeComprobanteDeUltimaOrdenConBoletaDeVentasConfirmadasYTributablesÇÇR °
(ÇÇ° ¢

idEmpleadoÇÇ¢ ¨
,ÇÇ¨ ≠

fechaDesdeÇÇÆ ∏
,ÇÇ∏ π

fechaHastaÇÇ∫ ƒ
,ÇÇƒ ≈
idSerieÇÇ∆ Õ
)ÇÇÕ Œ
;ÇÇŒ œ
var
ÑÑ "
invalidadasDeLaSerie
ÑÑ (
=
ÑÑ) *$
operacionesInvalidadas
ÑÑ+ A
.
ÑÑA B
Where
ÑÑB G
(
ÑÑG H
id
ÑÑH J
=>
ÑÑK M
id
ÑÑN P
.
ÑÑP Q
Comprobante
ÑÑQ \
(
ÑÑ\ ]
)
ÑÑ] ^
.
ÑÑ^ _
IdSerie
ÑÑ_ f
==
ÑÑg i
idSerie
ÑÑj q
)
ÑÑq r
.
ÑÑr s
ToList
ÑÑs y
(
ÑÑy z
)
ÑÑz {
;
ÑÑ{ |
Int64
ÖÖ 1
#ultimoNumeroDeComprobanteRegistrado
ÖÖ 9
=
ÖÖ: ;1
#primerNumeroDeComprobanteDelPeriodo
ÖÖ< _
-
ÖÖ` a
$num
ÖÖb c
;
ÖÖc d
if
ÜÜ 
(
ÜÜ "
invalidadasDeLaSerie
ÜÜ (
.
ÜÜ( )
Count
ÜÜ) .
(
ÜÜ. /
)
ÜÜ/ 0
>
ÜÜ1 2
$num
ÜÜ3 4
)
ÜÜ4 5
{
áá 
for
àà 
(
àà 
int
àà 
j
àà 
=
àà  
$num
àà! "
;
àà" #
j
àà$ %
<
àà& '"
invalidadasDeLaSerie
àà( <
.
àà< =
Count
àà= B
(
ààB C
)
ààC D
;
ààD E
j
ààF G
++
ààG I
)
ààI J
{
ââ 
var
ää  
invalidadaAnterior
ää .
=
ää/ 0
j
ää1 2
>
ää3 4
$num
ää5 6
?
ää7 8"
invalidadasDeLaSerie
ää9 M
.
ääM N
	ElementAt
ääN W
(
ääW X
j
ääX Y
-
ääZ [
$num
ää\ ]
)
ää] ^
:
ää_ `
null
ääa e
;
ääe f
var
ãã 
invalidadaActual
ãã ,
=
ãã- ."
invalidadasDeLaSerie
ãã/ C
.
ããC D
	ElementAt
ããD M
(
ããM N
j
ããN O
)
ããO P
;
ããP Q
var
åå !
invalidadaSiguiente
åå /
=
åå0 1
(
åå2 3
j
åå3 4
+
åå5 6
$num
åå7 8
)
åå8 9
<
åå: ;"
invalidadasDeLaSerie
åå< P
.
ååP Q
Count
ååQ V
(
ååV W
)
ååW X
?
ååY Z"
invalidadasDeLaSerie
åå[ o
.
ååo p
	ElementAt
ååp y
(
ååy z
j
ååz {
+
åå| }
$num
åå~ 
)åå Ä
:ååÅ Ç
nullååÉ á
;ååá à
var
çç )
fechaDeLaInvalidadaAnterior
çç 7
=
çç8 9 
invalidadaAnterior
çç: L
!=
ççM O
null
ççP T
?
ççU V
(
ççW X
DateTime
ççX `
?
çç` a
)
çça b 
invalidadaAnterior
ççb t
.
ççt u
FechaEmisionççu Å
:ççÇ É
nullççÑ à
;ççà â
var
èè ;
-ventasConfirmadasDeLaSerieAntesDeLaInvalidada
èè I
=
èèJ K#
_facturacionOperacion
èèL a
.
èèa by
jObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorAFechaDesdeHastaèèb Ã
(èèÃ Õ

idEmpleadoèèÕ ◊
,èè◊ ÿ
idSerieèèŸ ‡
,èè‡ ·3
#ultimoNumeroDeComprobanteRegistradoèè‚ Ö
,èèÖ Ü 
invalidadaActualèèá ó
.èèó ò
Comprobanteèèò £
(èè£ §
)èè§ •
.èè• ¶#
NumeroDeComprobanteèè¶ π
,èèπ ∫

fechaDesdeèèª ≈
,èè≈ ∆

fechaHastaèè« —
)èè— “
;èè“ ”
if
ëë 
(
ëë ;
-ventasConfirmadasDeLaSerieAntesDeLaInvalidada
ëë I
!=
ëëJ L
null
ëëM Q
&&
ëëR T<
-ventasConfirmadasDeLaSerieAntesDeLaInvalidadaëëU Ç
.ëëÇ É
CountëëÉ à
>ëëâ ä
$numëëã å
)ëëå ç
{
íí 
	registros
ìì %
.
ìì% &
AddRange
ìì& .
(
ìì. /&
EBookVentasIngresosModel
ìì/ G
.
ììG H
Convert
ììH O
(
ììO P;
-ventasConfirmadasDeLaSerieAntesDeLaInvalidada
ììP }
,
ìì} ~
periodoìì Ü
,ììÜ á
correlativoììà ì
)ììì î
)ììî ï
;ììï ñ1
#ultimoNumeroDeComprobanteRegistrado
îî ?
=
îî@ A;
-ventasConfirmadasDeLaSerieAntesDeLaInvalidada
îîB o
.
îîo p
Last
îîp t
(
îît u
)
îîu v
.
îîv w
NumeroFinalîîw Ç
;îîÇ É
correlativo
ïï '
+=
ïï( *;
-ventasConfirmadasDeLaSerieAntesDeLaInvalidada
ïï+ X
.
ïïX Y
Count
ïïY ^
(
ïï^ _
)
ïï_ `
;
ïï` a
}
ññ 
	registros
òò !
.
òò! "
Add
òò" %
(
òò% &
new
òò& )&
EBookVentasIngresosModel
òò* B
(
òòB C
invalidadaActual
òòC S
,
òòS T
periodo
òòU \
,
òò\ ]
correlativo
òò^ i
)
òòi j
)
òòj k
;
òòk l1
#ultimoNumeroDeComprobanteRegistrado
ôô ;
=
ôô< =
invalidadaActual
ôô> N
.
ôôN O
Comprobante
ôôO Z
(
ôôZ [
)
ôô[ \
.
ôô\ ]!
NumeroDeComprobante
ôô] p
;
ôôp q
correlativo
öö #
++
öö# %
;
öö% &
var
úú <
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada
úú J
=
úúK L!
invalidadaSiguiente
ùù /
!=
ùù0 2
null
ùù3 7
?
ùù8 9#
_facturacionOperacion
ûû 1
.
ûû1 2j
[ObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorAûû2 ç
(ûûç é

idEmpleadoûûé ò
,ûûò ô
idSerieûûö °
,ûû° ¢3
#ultimoNumeroDeComprobanteRegistradoûû£ ∆
,ûû∆ «#
invalidadaSiguienteûû» €
.ûû€ ‹
Comprobanteûû‹ Á
(ûûÁ Ë
)ûûË È
.ûûÈ Í#
NumeroDeComprobanteûûÍ ˝
)ûû˝ ˛
:
üü #
_facturacionOperacion
üü 3
.
üü3 4j
[ObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorAüü4 è
(üüè ê

idEmpleadoüüê ö
,üüö õ
idSerieüüú £
,üü£ §3
#ultimoNumeroDeComprobanteRegistradoüü• »
,üü» …3
#maximoNumeroDeComprobanteDelPeriodoüü  Ì
+üüÓ Ô
$numüü Ò
)üüÒ Ú
;üüÚ Û
if
†† 
(
†† <
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada
†† J
!=
††K M
null
††N R
&&
††S U=
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada††V Ñ
.††Ñ Ö
Count††Ö ä
>††ã å
$num††ç é
)††é è
{
°° 
	registros
¢¢ %
.
¢¢% &
AddRange
¢¢& .
(
¢¢. /&
EBookVentasIngresosModel
¢¢/ G
.
¢¢G H
Convert
¢¢H O
(
¢¢O P<
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada
¢¢P ~
,
¢¢~ 
periodo¢¢Ä á
,¢¢á à
correlativo¢¢â î
)¢¢î ï
)¢¢ï ñ
;¢¢ñ ó1
#ultimoNumeroDeComprobanteRegistrado
££ ?
=
££@ A<
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada
££B p
.
££p q
Last
££q u
(
££u v
)
££v w
.
££w x
NumeroFinal££x É
;££É Ñ
correlativo
§§ '
+=
§§( *<
.ventasConfirmadaDeLaSerieDespuesDeLaInvalidada
§§+ Y
.
§§Y Z
Count
§§Z _
(
§§_ `
)
§§` a
;
§§a b
}
•• 
}
¶¶ 
}
ßß 
else
®® 
{
©© 
var
™™ (
ventasConfirmadasDeLaSerie
™™ 2
=
™™3 4#
_facturacionOperacion
™™5 J
.
™™J Kj
[ObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorA™™K ¶
(™™¶ ß

idEmpleado™™ß ±
,™™± ≤
idSerie™™≥ ∫
,™™∫ ª3
#ultimoNumeroDeComprobanteRegistrado™™º ﬂ
,™™ﬂ ‡3
#maximoNumeroDeComprobanteDelPeriodo™™· Ñ
+™™Ö Ü
$num™™á à
)™™à â
;™™â ä
if
´´ 
(
´´ (
ventasConfirmadasDeLaSerie
´´ 2
!=
´´3 5
null
´´6 :
&&
´´; =(
ventasConfirmadasDeLaSerie
´´> X
.
´´X Y
Count
´´Y ^
>
´´_ `
$num
´´a b
)
´´b c
{
¨¨ 
	registros
≠≠ !
.
≠≠! "
AddRange
≠≠" *
(
≠≠* +&
EBookVentasIngresosModel
≠≠+ C
.
≠≠C D
Convert
≠≠D K
(
≠≠K L(
ventasConfirmadasDeLaSerie
≠≠L f
,
≠≠f g
periodo
≠≠h o
,
≠≠o p
correlativo
≠≠q |
)
≠≠| }
)
≠≠} ~
;
≠≠~ 1
#ultimoNumeroDeComprobanteRegistrado
ÆÆ ;
=
ÆÆ< =(
ventasConfirmadasDeLaSerie
ÆÆ> X
.
ÆÆX Y
Last
ÆÆY ]
(
ÆÆ] ^
)
ÆÆ^ _
.
ÆÆ_ `
NumeroFinal
ÆÆ` k
;
ÆÆk l
correlativo
ØØ #
+=
ØØ$ &(
ventasConfirmadasDeLaSerie
ØØ' A
.
ØØA B
Count
ØØB G
(
ØØG H
)
ØØH I
;
ØØI J
}
∞∞ 
}
±± 
}
≤≤ 
	registros
≥≥ 
=
≥≥ 
	registros
≥≥ !
.
≥≥! "
OrderBy
≥≥" )
(
≥≥) *
r
≥≥* +
=>
≥≥, .
r
≥≥/ 0
.
≥≥0 1)
FechaEmisionComprobantePago
≥≥1 L
)
≥≥L M
.
≥≥M N
ThenBy
≥≥N T
(
≥≥T U
r
≥≥U V
=>
≥≥W Y
r
≥≥Z [
.
≥≥[ \3
$NumeroSerieComprobantePagoODocumento≥≥\ Ä
)≥≥Ä Å
.≥≥Å Ç
ToList≥≥Ç à
(≥≥à â
)≥≥â ä
;≥≥ä ã
correlativo
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
	registros
µµ 
.
µµ 
ForEach
µµ 
(
µµ 
r
µµ 
=>
µµ !
r
µµ" #
.
µµ# $
Correlativo
µµ$ /
=
µµ/ 0
correlativo
µµ1 <
++
µµ< >
)
µµ> ?
;
µµ? @
return
∂∂ 
	registros
∂∂ 
;
∂∂ 
}
∑∑ 	
public
ππ 
List
ππ 
<
ππ !
ReporteVentaCliente
ππ '
>
ππ' (%
ObtenerRegistrosDeVenta
ππ) @
(
ππ@ A
Periodo
ππA H
periodo
ππI P
,
ππP Q
int
ππR U

idEmpleado
ππV `
)
ππ` a
{
∫∫ 	
try
ªª 
{
ºº 
List
ΩΩ 
<
ΩΩ &
EBookVentasIngresosModel
ΩΩ -
>
ΩΩ- .
registrosVentas
ΩΩ/ >
=
ΩΩ? @
null
ΩΩA E
;
ΩΩE F
if
ææ 
(
ææ (
LibrosElectronicosSettings
ææ .
.
ææ. /
Default
ææ/ 6
.
ææ6 71
#ConsolidarBoletasEnRegistroDeVentas
ææ7 Z
)
ææZ [
{
øø 
registrosVentas
¿¿ #
=
¿¿$ %(
ConsolidarRegistroDeVentas
¿¿& @
(
¿¿@ A
periodo
¿¿A H
,
¿¿H I

idEmpleado
¿¿J T
)
¿¿T U
;
¿¿U V
}
¡¡ 
else
¬¬ 
{
√√ 
registrosVentas
ƒƒ #
=
ƒƒ$ %&
EBookVentasIngresosModel
ƒƒ& >
.
ƒƒ> ?
Convert
ƒƒ? F
(
ƒƒF G#
_facturacionOperacion
ƒƒG \
.
ƒƒ\ ]W
HObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasTributablesƒƒ] •
(ƒƒ• ¶

idEmpleadoƒƒ¶ ∞
,ƒƒ∞ ±
periodoƒƒ≤ π
.ƒƒπ ∫

FechaDesdeƒƒ∫ ƒ
,ƒƒƒ ≈
periodoƒƒ∆ Õ
.ƒƒÕ Œ

FechaHastaƒƒŒ ÿ
)ƒƒÿ Ÿ
,ƒƒŸ ⁄
periodoƒƒ€ ‚
)ƒƒ‚ „
;ƒƒ„ ‰
}
∆∆ 
List
«« 
<
«« !
ReporteVentaCliente
«« (
>
««( )
	resultado
««* 3
=
««4 5!
ReporteVentaCliente
««6 I
.
««I J
Convert
««J Q
(
««Q R
registrosVentas
««R a
)
««a b
;
««b c
return
»» 
	resultado
»»  
;
»»  !
}
…… 
catch
   
(
   
	Exception
   
e
   
)
   
{
ÀÀ 
throw
ÃÃ 
new
ÃÃ 
LogicaException
ÃÃ )
(
ÃÃ) *
$str
ÃÃ* Y
,
ÃÃY Z
e
ÃÃ[ \
)
ÃÃ\ ]
;
ÃÃ] ^
}
ÕÕ 
}
ŒŒ 	
public
–– 
List
–– 
<
–– (
DetalleLibroVentasIngresos
–– .
>
––. /6
(ObtenerLibroElectronicoDeVentasEIngresos
––0 X
(
––X Y
Periodo
––Y `
periodo
––a h
,
––h i
int
––j m

idEmpleado
––n x
)
––x y
{
—— 	
try
““ 
{
”” 
List
‘‘ 
<
‘‘ (
DetalleLibroVentasIngresos
‘‘ /
>
‘‘/ 0
	resultado
‘‘1 :
=
‘‘; <(
DetalleLibroVentasIngresos
‘‘= W
.
‘‘W X
Convert
‘‘X _
(
‘‘_ `#
_facturacionOperacion
‘‘` u
.
‘‘u vW
HObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasTributables‘‘v æ
(‘‘æ ø

idEmpleado‘‘ø …
,‘‘…  
periodo‘‘À “
.‘‘“ ”

FechaDesde‘‘” ›
,‘‘› ﬁ
periodo‘‘ﬂ Ê
.‘‘Ê Á

FechaHasta‘‘Á Ò
)‘‘Ò Ú
,‘‘Ú Û
periodo‘‘Ù ˚
)‘‘˚ ¸
;‘‘¸ ˝
return
’’ 
	resultado
’’  
;
’’  !
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
LogicaException
ŸŸ )
(
ŸŸ) *
$str
ŸŸ* n
,
ŸŸn o
e
ŸŸp q
)
ŸŸq r
;
ŸŸr s
}
€€ 
}
‹‹ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ 
Periodo
ÏÏ 
>
ÏÏ 
ObtenerPeriodos
ÏÏ ,
(
ÏÏ, -
)
ÏÏ- .
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
return
 %
_transaccionRepositorio
 .
.
. /
ObtenerPeriodos
/ >
(
> ?
)
? @
;
@ A
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
e
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 	
public
¯¯ 
Periodo
¯¯ 
ObtenerPeriodo
¯¯ %
(
¯¯% &
int
¯¯& )
	idPeriodo
¯¯* 3
)
¯¯3 4
{
˘˘ 	
try
˙˙ 
{
˚˚ 
return
¸¸ %
_transaccionRepositorio
¸¸ .
.
¸¸. /
ObtenerPeriodo
¸¸/ =
(
¸¸= >
	idPeriodo
¸¸> G
)
¸¸G H
;
¸¸H I
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
e
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
Periodo
ÑÑ 
ObtenerPeriodo
ÑÑ %
(
ÑÑ% &
string
ÑÑ& ,
nombrePeriodo
ÑÑ- :
)
ÑÑ: ;
{
ÖÖ 	
try
ÜÜ 
{
áá 
return
àà %
_transaccionRepositorio
àà .
.
àà. /
ObtenerPeriodo
àà/ =
(
àà= >
nombrePeriodo
àà> K
)
ààK L
;
ààL M
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
e
åå 
;
åå 
}
çç 
}
éé 	
}
ëë 
}íí Ö 
AD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\MaestroLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class 
MaestroLogica 
:  
IMaestroLogica! /
{ 
private 
readonly 
IMaestroRepositorio ,
_repositorioMaestro- @
;@ A
public 
MaestroLogica 
( 
IMaestroRepositorio 0
repositorioMaestro1 C
)C D
{ 	
_repositorioMaestro 
=  !
repositorioMaestro" 4
;4 5
} 	
public 
OperationResult 
guardarMaestro -
(- .
string. 4
codigo5 ;
,; <
string= C
nombreD J
)J K
{ 	
try 
{ 
Maestro 
nuevoMaestro $
=% &
new' *
Maestro+ 2
{ 
codigo 
= 
codigo #
,# $
nombre   
=   
nombre   #
}!! 
;!! 
return"" 
_repositorioMaestro"" *
.""* +
crearMaestro""+ 7
(""7 8
nuevoMaestro""8 D
)""D E
;""E F
}## 
catch$$ 
($$ 
	Exception$$ 
e$$ 
)$$ 
{%% 
throw&& 
e&& 
;&& 
}'' 
}(( 	
public** 
OperationResult** !
guardarDetalleMaestro** 4
(**4 5
int**5 8
	idMaestro**9 B
,**B C
string**D J
codigo**K Q
,**Q R
string**S Y
nombre**Z `
,**` a
string**b h
valor**i n
)**n o
{++ 	
try,, 
{-- 
Detalle_maestro.. 
detalleMaestro..  .
=../ 0
new..1 4
Detalle_maestro..5 D
{// 

id_maestro00 
=00  
	idMaestro00! *
,00* +
codigo11 
=11 
codigo11 #
,11# $
nombre22 
=22 
nombre22 #
,22# $
valor33 
=33 
valor33 !
,33! "
fecha_registro44 "
=44# $
DateTime44% -
.44- .
Now44. 1
,441 2

es_vigente55 
=55  
true55! %
}66 
;66 
return77 
_repositorioMaestro77 *
.77* +
crearDetalleMaestro77+ >
(77> ?
detalleMaestro77? M
)77M N
;77N O
}88 
catch99 
(99 
	Exception99 
e99 
)99 
{:: 
throw;; 
e;; 
;;; 
}<< 
}== 	
public>> 
OperationResult>> (
GuardarDetalleDetalleMaestro>> ;
(>>; <
int>>< ?
	idMaestro>>@ I
,>>I J
string>>K Q
codigo>>R X
,>>X Y
string>>Z `
nombre>>a g
,>>g h
string>>i o
valor>>p u
,>>u v
int>>w z
idMaestroPadre	>>{ â
)
>>â ä
{?? 	
try@@ 
{AA #
Detalle_detalle_maestroBB '
detalleBB( /
=BB0 1
newBB2 5#
Detalle_detalle_maestroBB6 M
(BBM N
)BBN O
{CC (
id_detalle_maestro_principalDD 0
=DD1 2
idMaestroPadreDD3 A
,DDA B
Detalle_maestro1EE $
=EE% &
newEE' *
Detalle_maestroEE+ :
{FF 

id_maestroGG "
=GG# $
	idMaestroGG% .
,GG. /
codigoHH 
=HH  
codigoHH! '
,HH' (
nombreII 
=II  
nombreII! '
,II' (
valorJJ 
=JJ 
valorJJ  %
,JJ% &
fecha_registroKK &
=KK' (
DateTimeKK) 1
.KK1 2
NowKK2 5
,KK5 6

es_vigenteLL "
=LL# $
trueLL% )
}MM 
}NN 
;NN 
returnOO 
_repositorioMaestroOO *
.OO* +&
CrearDetalleDetalleMaestroOO+ E
(OOE F
detalleOOF M
)OOM N
;OON O
}PP 
catchQQ 
(QQ 
	ExceptionQQ 
eQQ 
)QQ 
{RR 
throwSS 
eSS 
;SS 
}TT 
}UU 	
publicVV 
OperationResultVV 
actualizarMaestroVV 0
(VV0 1
intVV1 4
idVV5 7
,VV7 8
stringVV9 ?
codigoVV@ F
,VVF G
stringVVH N
nombreVVO U
)VVU V
{WW 	
tryXX 
{YY 
MaestroZZ 
maestroZZ 
=ZZ  !
newZZ" %
MaestroZZ& -
(ZZ- .
)ZZ. /
;ZZ/ 0
maestro[[ 
.[[ 
id[[ 
=[[ 
id[[ 
;[[  
maestro\\ 
.\\ 
codigo\\ 
=\\  
codigo\\! '
;\\' (
maestro]] 
.]] 
nombre]] 
=]]  
nombre]]! '
;]]' (
return^^ 
_repositorioMaestro^^ *
.^^* +
actualizarMaestro^^+ <
(^^< =
maestro^^= D
)^^D E
;^^E F
}__ 
catch`` 
(`` 
	Exception`` 
e`` 
)`` 
{aa 
throwbb 
ebb 
;bb 
}cc 
}dd 	
publicff 
OperationResultff $
actualizarDetalleMaestroff 7
(ff7 8
intff8 ;
idff< >
,ff> ?
intff@ C
	idMaestroffD M
,ffM N
stringffO U
codigoffV \
,ff\ ]
stringff^ d
nombreffe k
,ffk l
stringffm s
valorfft y
)ffy z
{gg 	
tryhh 
{ii 
Detalle_maestrojj 
detalleMaestrojj  .
=jj/ 0
newjj1 4
Detalle_maestrojj5 D
{kk 
idll 
=ll 
idll 
,ll 

id_maestromm 
=mm  
	idMaestromm! *
,mm* +
codigonn 
=nn 
codigonn #
,nn# $
nombreoo 
=oo 
nombreoo #
,oo# $
valorpp 
=pp 
valorpp !
,pp! "

es_vigenteqq 
=qq  
trueqq! %
}rr 
;rr 
returnss 
_repositorioMaestross *
.ss* +$
actualizarDetalleMaestross+ C
(ssC D
detalleMaestrossD R
)ssR S
;ssS T
}tt 
catchuu 
(uu 
	Exceptionuu 
euu 
)uu 
{vv 
throwww 
eww 
;ww 
}xx 
}yy 	
public{{ 
OperationResult{{ +
ActualizarDetalleDetalleMaestro{{ >
({{> ?
int{{? B
id{{C E
,{{E F
int{{G J
	idMaestro{{K T
,{{T U
string{{V \
codigo{{] c
,{{c d
string{{e k
nombre{{l r
,{{r s
string{{t z
valor	{{{ Ä
,
{{Ä Å
int
{{Ç Ö
idMaestroPadre
{{Ü î
)
{{î ï
{|| 	
try}} 
{~~ #
Detalle_detalle_maestro '
detalle( /
=0 1
new2 5#
Detalle_detalle_maestro6 M
(M N
)N O
{
ÄÄ *
id_detalle_maestro_principal
ÅÅ 0
=
ÅÅ1 2
idMaestroPadre
ÅÅ3 A
,
ÅÅA B
Detalle_maestro1
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
Detalle_maestro
ÇÇ+ :
{
ÉÉ 
id
ÑÑ 
=
ÑÑ 
id
ÑÑ 
,
ÑÑ  

id_maestro
ÖÖ "
=
ÖÖ# $
	idMaestro
ÖÖ% .
,
ÖÖ. /
codigo
ÜÜ 
=
ÜÜ  
codigo
ÜÜ! '
,
ÜÜ' (
nombre
áá 
=
áá  
nombre
áá! '
,
áá' (
valor
àà 
=
àà 
valor
àà  %
,
àà% &
fecha_registro
ââ &
=
ââ' (
DateTime
ââ) 1
.
ââ1 2
Now
ââ2 5
,
ââ5 6

es_vigente
ää "
=
ää# $
true
ää% )
}
ãã 
}
åå 
;
åå 
return
çç !
_repositorioMaestro
çç *
.
çç* +-
ActualizarDetalleDetalleMaestro
çç+ J
(
ççJ K
detalle
ççK R
)
ççR S
;
ççS T
}
éé 
catch
èè 
(
èè 
	Exception
èè 
e
èè 
)
èè 
{
êê 
throw
ëë 
e
ëë 
;
ëë 
}
íí 
}
ìì 	
public
ïï 
List
ïï 
<
ïï 
Maestro
ïï 
>
ïï 
obtenerMaestros
ïï ,
(
ïï, -
)
ïï- .
{
ññ 	
try
óó 
{
óó 
return
óó !
_repositorioMaestro
óó ,
.
óó, -
obtenerMaestros
óó- <
(
óó< =
)
óó= >
.
óó> ?
ToList
óó? E
(
óóE F
)
óóF G
;
óóG H
}
óóI J
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
òò  !
throw
òò" '
e
òò( )
;
òò) *
}
òò+ ,
}
ôô 	
public
õõ 
Detalle_maestro
õõ #
obtenerDetalleMaestro
õõ 4
(
õõ4 5
int
õõ5 8
idDetalleMaestro
õõ9 I
)
õõI J
{
úú 	
try
ùù 
{
ùù 
return
ùù !
_repositorioMaestro
ùù ,
.
ùù, -
ObtenerDetalle
ùù- ;
(
ùù; <
idDetalleMaestro
ùù< L
)
ùùL M
;
ùùM N
}
ùùO P
catch
ûû 
(
ûû 
	Exception
ûû 
e
ûû 
)
ûû 
{
ûû  !
throw
ûû" '
e
ûû( )
;
ûû) *
}
ûû+ ,
}
üü 	
public
°° 
Detalle_maestro
°° 6
(ObtenerDetalleMaestroPorIdMaestroYNombre
°° G
(
°°G H
int
°°H K
	idMaestro
°°L U
,
°°U V
string
°°W ]
nombre
°°^ d
)
°°d e
{
¢¢ 	
try
££ 
{
££ 
return
££ !
_repositorioMaestro
££ ,
.
££, -6
(ObtenerDetalleMaestroPorIdMaestroYNombre
££- U
(
££U V
	idMaestro
££V _
,
££_ `
nombre
££a g
)
££g h
;
££h i
}
££j k
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
§§  !
throw
§§" '
new
§§( +
LogicaException
§§, ;
(
§§; <
$str
§§< u
,
§§u v
e
§§w x
)
§§x y
;
§§y z
}
§§{ |
}
•• 	
public
®® 
async
®® 
Task
®® 
<
®® 
List
®® 
<
®® 
Detalle_maestro
®® .
>
®®. /
>
®®/ 0*
ObtenerDetallesMaestrosAsync
®®1 M
(
®®M N
int
®®N Q
	idMaestro
®®R [
)
®®[ \
{
©© 	
try
™™ 
{
´´ 
return
¨¨ 
(
¨¨ 
await
¨¨ !
_repositorioMaestro
¨¨ 1
.
¨¨1 2"
ObtenerDetallesAsync
¨¨2 F
(
¨¨F G
	idMaestro
¨¨G P
)
¨¨P Q
)
¨¨Q R
.
¨¨R S
ToList
¨¨S Y
(
¨¨Y Z
)
¨¨Z [
;
¨¨[ \
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ØØ 
throw
∞∞ 
e
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
¥¥ 
List
¥¥ 
<
¥¥ 
Detalle_maestro
¥¥ #
>
¥¥# $%
ObtenerDetallesMaestros
¥¥% <
(
¥¥< =
int
¥¥= @
	idMaestro
¥¥A J
)
¥¥J K
{
µµ 	
try
∂∂ 
{
∂∂ 
return
∂∂ !
_repositorioMaestro
∂∂ ,
.
∂∂, -
ObtenerDetalles
∂∂- <
(
∂∂< =
	idMaestro
∂∂= F
)
∂∂F G
.
∂∂G H
ToList
∂∂H N
(
∂∂N O
)
∂∂O P
;
∂∂P Q
}
∂∂R S
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
e
∑∑ 
)
∑∑ 
{
∑∑  !
throw
∑∑" '
e
∑∑( )
;
∑∑) *
}
∑∑+ ,
}
∏∏ 	
public
∫∫ 
async
∫∫ 
Task
∫∫ 
<
∫∫ 
List
∫∫ 
<
∫∫ 
Detalle_maestro
∫∫ .
>
∫∫. /
>
∫∫/ 0
ObtenerCategorias
∫∫1 B
(
∫∫B C
)
∫∫C D
{
ªª 	
try
ºº 
{
ºº 
return
ºº 
(
ºº 
await
ºº !
_repositorioMaestro
ºº  3
.
ºº3 4"
ObtenerDetallesAsync
ºº4 H
(
ººH I
MaestroSettings
ººI X
.
ººX Y
Default
ººY `
.
ºº` a(
IdMaestroCategoriaConcepto
ººa {
)
ºº{ |
)
ºº| }
.
ºº} ~
ToListºº~ Ñ
(ººÑ Ö
)ººÖ Ü
;ººÜ á
}ººà â
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
e
ΩΩ 
)
ΩΩ 
{
ΩΩ  !
throw
ΩΩ" '
e
ΩΩ( )
;
ΩΩ) *
}
ΩΩ+ ,
}
ææ 	
public
¿¿ 
async
¿¿ 
Task
¿¿ 
<
¿¿ 
List
¿¿ 
<
¿¿ 
Detalle_maestro
¿¿ .
>
¿¿. /
>
¿¿/ 0)
ObtenerEntidadesFinancieras
¿¿1 L
(
¿¿L M
)
¿¿M N
{
¡¡ 	
try
¬¬ 
{
¬¬ 
return
¬¬ 
(
¬¬ 
await
¬¬ !
_repositorioMaestro
¬¬  3
.
¬¬3 4"
ObtenerDetallesAsync
¬¬4 H
(
¬¬H I
MaestroSettings
¬¬I X
.
¬¬X Y
Default
¬¬Y `
.
¬¬` a)
IdMaestroEntidadesBancarias
¬¬a |
)
¬¬| }
)
¬¬} ~
.
¬¬~ 
ToList¬¬ Ö
(¬¬Ö Ü
)¬¬Ü á
;¬¬á à
}¬¬â ä
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
√√  !
throw
√√" '
e
√√( )
;
√√) *
}
√√+ ,
}
ƒƒ 	
public
≈≈ 
async
≈≈ 
Task
≈≈ 
<
≈≈ 
List
≈≈ 
<
≈≈ 
Detalle_maestro
≈≈ .
>
≈≈. /
>
≈≈/ 0
ObtenerMonedas
≈≈1 ?
(
≈≈? @
)
≈≈@ A
{
∆∆ 	
try
«« 
{
»» 
return
…… 
(
…… 
await
…… !
_repositorioMaestro
…… 1
.
……1 2"
ObtenerDetallesAsync
……2 F
(
……F G
MaestroSettings
……G V
.
……V W
Default
……W ^
.
……^ _
IdMaestroMonedas
……_ o
)
……o p
)
……p q
.
……q r
ToList
……r x
(
……x y
)
……y z
;
……z {
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
e
ÀÀ 
)
ÀÀ 
{
ÀÀ  !
throw
ÀÀ" '
e
ÀÀ( )
;
ÀÀ) *
}
ÀÀ+ ,
}
ÃÃ 	
public
ŒŒ 
async
ŒŒ 
Task
ŒŒ 
<
ŒŒ 
List
ŒŒ 
<
ŒŒ 
Detalle_maestro
ŒŒ .
>
ŒŒ. /
>
ŒŒ/ 0(
ObtenerTiposCuentaBancaria
ŒŒ1 K
(
ŒŒK L
)
ŒŒL M
{
œœ 	
try
–– 
{
–– 
return
–– 
(
–– 
await
–– !
_repositorioMaestro
––  3
.
––3 4"
ObtenerDetallesAsync
––4 H
(
––H I
MaestroSettings
––I X
.
––X Y
Default
––Y `
.
––` a*
IdMaestroTiposCuentaBancaria
––a }
)
––} ~
)
––~ 
.–– Ä
ToList––Ä Ü
(––Ü á
)––á à
;––à â
}––ä ã
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
——  !
throw
——" '
e
——( )
;
——) *
}
——+ ,
}
““ 	
public
”” 
async
”” 
Task
”” 
<
”” 
List
”” 
<
”” 
Detalle_maestro
”” .
>
””. /
>
””/ 0(
ObtenerOperadoresDeTarjeta
””1 K
(
””K L
)
””L M
{
‘‘ 	
try
’’ 
{
’’ 
return
’’ 
(
’’ 
await
’’ !
_repositorioMaestro
’’  3
.
’’3 4"
ObtenerDetallesAsync
’’4 H
(
’’H I
MaestroSettings
’’I X
.
’’X Y
Default
’’Y `
.
’’` a(
IdMaestroTarjetasBancarias
’’a {
)
’’{ |
)
’’| }
.
’’} ~
ToList’’~ Ñ
(’’Ñ Ö
)’’Ö Ü
;’’Ü á
}’’à â
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
÷÷  !
throw
÷÷" '
e
÷÷( )
;
÷÷) *
}
÷÷+ ,
}
◊◊ 	
public
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
List
ŸŸ 
<
ŸŸ 
Detalle_maestro
ŸŸ .
>
ŸŸ. /
>
ŸŸ/ 0'
ObtenerTiposDeComprobante
ŸŸ1 J
(
ŸŸJ K
int
ŸŸK N
	idMaestro
ŸŸO X
)
ŸŸX Y
{
⁄⁄ 	
try
€€ 
{
€€ 
return
€€ 
(
€€ 
await
€€ !
_repositorioMaestro
€€  3
.
€€3 4"
ObtenerDetallesAsync
€€4 H
(
€€H I
MaestroSettings
€€I X
.
€€X Y
Default
€€Y `
.
€€` a 
IdMaestroDocumento
€€a s
)
€€s t
)
€€t u
.
€€u v
ToList
€€v |
(
€€| }
)
€€} ~
;
€€~ 
}€€Ä Å
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
e
‹‹ 
)
‹‹ 
{
‹‹  !
throw
‹‹" '
e
‹‹( )
;
‹‹) *
}
‹‹+ ,
}
›› 	
public
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
Detalle_maestro
ﬂﬂ .
>
ﬂﬂ. /
>
ﬂﬂ/ 0!
ObtenerMediosDePago
ﬂﬂ1 D
(
ﬂﬂD E
)
ﬂﬂE F
{
‡‡ 	
try
·· 
{
·· 
return
·· 
(
·· 
await
·· !
_repositorioMaestro
··  3
.
··3 4"
ObtenerDetallesAsync
··4 H
(
··H I
MaestroSettings
··I X
.
··X Y
Default
··Y `
.
··` a"
IdMaestroMedioDePago
··a u
)
··u v
)
··v w
.
··w x
ToList
··x ~
(
··~ 
)·· Ä
;··Ä Å
}··Ç É
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
e
‚‚ 
)
‚‚ 
{
‚‚  !
throw
‚‚" '
e
‚‚( )
;
‚‚) *
}
‚‚+ ,
}
„„ 	
public
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
List
ÂÂ 
<
ÂÂ 
Detalle_maestro
ÂÂ .
>
ÂÂ. /
>
ÂÂ/ 0-
ObtenerModalidadesTrasladoAsync
ÂÂ1 P
(
ÂÂP Q
)
ÂÂQ R
{
ÊÊ 	
try
ÁÁ 
{
ÁÁ 
return
ÁÁ 
(
ÁÁ 
await
ÁÁ !
_repositorioMaestro
ÁÁ  3
.
ÁÁ3 4"
ObtenerDetallesAsync
ÁÁ4 H
(
ÁÁH I
MaestroSettings
ÁÁI X
.
ÁÁX Y
Default
ÁÁY `
.
ÁÁ` a*
IdMaestroModalidadDeTraslado
ÁÁa }
)
ÁÁ} ~
)
ÁÁ~ 
.ÁÁ Ä
ToListÁÁÄ Ü
(ÁÁÜ á
)ÁÁá à
;ÁÁà â
}ÁÁä ã
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ËË  !
throw
ËË" '
e
ËË( )
;
ËË) *
}
ËË+ ,
}
ÈÈ 	
public
ÍÍ 
List
ÍÍ 
<
ÍÍ 
Detalle_maestro
ÍÍ #
>
ÍÍ# $(
ObtenerModalidadesTraslado
ÍÍ% ?
(
ÍÍ? @
)
ÍÍ@ A
{
ÎÎ 	
try
ÏÏ 
{
ÏÏ 
return
ÏÏ !
_repositorioMaestro
ÏÏ ,
.
ÏÏ, -
ObtenerDetalles
ÏÏ- <
(
ÏÏ< =
MaestroSettings
ÏÏ= L
.
ÏÏL M
Default
ÏÏM T
.
ÏÏT U*
IdMaestroModalidadDeTraslado
ÏÏU q
)
ÏÏq r
.
ÏÏr s
ToList
ÏÏs y
(
ÏÏy z
)
ÏÏz {
;
ÏÏ{ |
}
ÏÏ} ~
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÌÌ  !
throw
ÌÌ" '
e
ÌÌ( )
;
ÌÌ) *
}
ÌÌ+ ,
}
ÓÓ 	
public
 
async
 
Task
 
<
 
List
 
<
 
Detalle_maestro
 .
>
. /
>
/ 0)
ObtenerMotivosTrasladoAsync
1 L
(
L M
)
M N
{
ÒÒ 	
try
ÚÚ 
{
ÚÚ 
return
ÚÚ 
(
ÚÚ 
await
ÚÚ !
_repositorioMaestro
ÚÚ  3
.
ÚÚ3 4"
ObtenerDetallesAsync
ÚÚ4 H
(
ÚÚH I
MaestroSettings
ÚÚI X
.
ÚÚX Y
Default
ÚÚY `
.
ÚÚ` a'
IdMaestroMotivoDeTraslado
ÚÚa z
)
ÚÚz {
)
ÚÚ{ |
.
ÚÚ| }
ToListÚÚ} É
(ÚÚÉ Ñ
)ÚÚÑ Ö
;ÚÚÖ Ü
}ÚÚá à
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÛÛ  !
throw
ÛÛ" '
e
ÛÛ( )
;
ÛÛ) *
}
ÛÛ+ ,
}
ÙÙ 	
public
ıı 
async
ıı 
Task
ıı 
<
ıı 
List
ıı 
<
ıı 
Detalle_maestro
ıı .
>
ıı. /
>
ıı/ 01
#ObtenerMotivosTrasladoVigentesAsync
ıı1 T
(
ııT U
)
ııU V
{
ˆˆ 	
try
˜˜ 
{
˜˜ 
return
˜˜ 
(
˜˜ 
await
˜˜ !
_repositorioMaestro
˜˜  3
.
˜˜3 4*
ObtenerDetallesVigentesAsync
˜˜4 P
(
˜˜P Q
MaestroSettings
˜˜Q `
.
˜˜` a
Default
˜˜a h
.
˜˜h i(
IdMaestroMotivoDeTraslado˜˜i Ç
)˜˜Ç É
)˜˜É Ñ
.˜˜Ñ Ö
ToList˜˜Ö ã
(˜˜ã å
)˜˜å ç
;˜˜ç é
}˜˜è ê
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
e
¯¯ 
)
¯¯ 
{
¯¯  !
throw
¯¯" '
e
¯¯( )
;
¯¯) *
}
¯¯+ ,
}
˘˘ 	
public
˙˙ 
List
˙˙ 
<
˙˙ 
Detalle_maestro
˙˙ #
>
˙˙# $$
ObtenerMotivosTraslado
˙˙% ;
(
˙˙; <
)
˙˙< =
{
˚˚ 	
try
¸¸ 
{
¸¸ 
return
¸¸ !
_repositorioMaestro
¸¸ ,
.
¸¸, -
ObtenerDetalles
¸¸- <
(
¸¸< =
MaestroSettings
¸¸= L
.
¸¸L M
Default
¸¸M T
.
¸¸T U'
IdMaestroMotivoDeTraslado
¸¸U n
)
¸¸n o
.
¸¸o p
ToList
¸¸p v
(
¸¸v w
)
¸¸w x
;
¸¸x y
}
¸¸z {
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
e
˝˝ 
)
˝˝ 
{
˝˝  !
throw
˝˝" '
e
˝˝( )
;
˝˝) *
}
˝˝+ ,
}
˛˛ 	
public
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
List
ÅÅ 
<
ÅÅ 
Detalle_maestro
ÅÅ .
>
ÅÅ. /
>
ÅÅ/ 0(
ObtenerMotivosDeViajeAsync
ÅÅ1 K
(
ÅÅK L
)
ÅÅL M
{
ÇÇ 	
try
ÉÉ 
{
ÉÉ 
return
ÉÉ 
(
ÉÉ 
await
ÉÉ !
_repositorioMaestro
ÉÉ  3
.
ÉÉ3 4"
ObtenerDetallesAsync
ÉÉ4 H
(
ÉÉH I
HotelSettings
ÉÉI V
.
ÉÉV W
Default
ÉÉW ^
.
ÉÉ^ _%
IdMaestroMotivosDeViaje
ÉÉ_ v
)
ÉÉv w
)
ÉÉw x
.
ÉÉx y
ToList
ÉÉy 
(ÉÉ Ä
)ÉÉÄ Å
;ÉÉÅ Ç
}ÉÉÉ Ñ
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÑÑ  !
throw
ÑÑ" '
e
ÑÑ( )
;
ÑÑ) *
}
ÑÑ+ ,
}
ÖÖ 	
public
áá 
async
áá 
Task
áá 
<
áá 
List
áá 
<
áá 
Detalle_maestro
áá .
>
áá. /
>
áá/ 0(
ObtenerTiposDeNotaDeDebito
áá1 K
(
ááK L
)
ááL M
{
àà 	
try
ââ 
{
ää 
int
ãã 
[
ãã 
]
ãã "
idsTiposComprobantes
ãã *
=
ãã+ ,
{
ãã- .
MaestroSettings
ãã/ >
.
ãã> ?
Default
ãã? F
.
ããF GP
AIdDetalleMaestroNotaDeDebitoElectronicaPenalidadesYOtrosConceptosããG à
}ããâ ä
;ããä ã
List
åå 
<
åå 
Detalle_maestro
åå $
>
åå$ %
detalles
åå& .
=
åå/ 0
(
åå1 2
await
åå2 7!
_repositorioMaestro
åå8 K
.
ååK L"
ObtenerDetallesAsync
ååL `
(
åå` a
MaestroSettings
ååa p
.
ååp q
Default
ååq x
.
ååx y5
&IdMaestroTipoDeNotaDeDebitoElectronicaååy ü
)ååü †
)åå† °
.åå° ¢
ToListåå¢ ®
(åå® ©
)åå© ™
;åå™ ´
detalles
çç 
.
çç 
	RemoveAll
çç "
(
çç" #
d
çç# $
=>
çç% '"
idsTiposComprobantes
çç( <
.
çç< =
Contains
çç= E
(
ççE F
d
ççF G
.
ççG H
id
ççH J
)
ççJ K
)
ççK L
;
ççL M
return
éé 
detalles
éé 
;
éé  
}
èè 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
throw
íí 
e
íí 
;
íí 
}
ìì 
}
îî 	
public
ññ 
async
ññ 
Task
ññ 
<
ññ 
List
ññ 
<
ññ 
Detalle_maestro
ññ .
>
ññ. /
>
ññ/ 0)
ObtenerTiposDeNotaDeCredito
ññ1 L
(
ññL M
)
ññM N
{
óó 	
try
òò 
{
ôô 
int
öö 
[
öö 
]
öö "
idsTiposComprobantes
öö *
=
öö+ ,
{
öö- .
MaestroSettings
öö/ >
.
öö> ?
Default
öö? F
.
ööF GO
@IdDetalleMaestroNotaDeCreditoElectronicaAnulacionPorErrorEnElRucööG á
,ööá à
MaestroSettingsööâ ò
.ööò ô
Defaultööô †
.öö† °Y
IIdDetalleMaestroNotaDeCreditoElectronicaCorreccionPorErrorEnLaDescripcionöö° Í
,ööÍ Î
MaestroSettingsööÏ ˚
.öö˚ ¸
Defaultöö¸ É
.ööÉ ÑD
4IdDetalleMaestroNotaDeCreditoElectronicaBonificacionööÑ ∏
,öö∏ π
MaestroSettingsöö∫ …
.öö…  
Defaultöö  —
.öö— “L
<IdDetalleMaestroNotaDeCreditoElectronicaDisminucionEnElValoröö“ é
,ööé è
MaestroSettingsööê ü
.ööü †
Defaultöö† ß
.ööß ®F
6IdDetalleMaestroNotaDeCreditoElectronicaOtrosConceptosöö® ﬁ
}ööﬂ ‡
;öö‡ ·
List
õõ 
<
õõ 
Detalle_maestro
õõ $
>
õõ$ %
detalles
õõ& .
=
õõ/ 0
(
õõ1 2
await
õõ2 7!
_repositorioMaestro
õõ8 K
.
õõK L"
ObtenerDetallesAsync
õõL `
(
õõ` a
MaestroSettings
õõa p
.
õõp q
Default
õõq x
.
õõx y6
'IdMaestroTipoDeNotaDeCreditoElectronicaõõy †
)õõ† °
)õõ° ¢
.õõ¢ £
ToListõõ£ ©
(õõ© ™
)õõ™ ´
;õõ´ ¨
detalles
úú 
.
úú 
	RemoveAll
úú "
(
úú" #
d
úú# $
=>
úú% '"
idsTiposComprobantes
úú( <
.
úú< =
Contains
úú= E
(
úúE F
d
úúF G
.
úúG H
id
úúH J
)
úúJ K
)
úúK L
;
úúL M
return
ùù 
detalles
ùù 
;
ùù  
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
e
°° 
;
°° 
}
¢¢ 
}
££ 	
public
•• 
async
•• 
Task
•• 
<
•• 
List
•• 
<
•• 
Detalle_maestro
•• .
>
••. /
>
••/ 0
ObtenerTiposDeVia
••1 B
(
••B C
)
••C D
{
¶¶ 	
try
ßß 
{
ßß 
return
ßß 
(
ßß 
await
ßß !
_repositorioMaestro
ßß  3
.
ßß3 4"
ObtenerDetallesAsync
ßß4 H
(
ßßH I
MaestroSettings
ßßI X
.
ßßX Y
Default
ßßY `
.
ßß` a 
IdMaestroTipoDeVia
ßßa s
)
ßßs t
)
ßßt u
.
ßßu v
ToList
ßßv |
(
ßß| }
)
ßß} ~
;
ßß~ 
}ßßÄ Å
catch
®® 
(
®® 
	Exception
®® 
e
®® 
)
®® 
{
®®  !
throw
®®" '
e
®®( )
;
®®) *
}
®®+ ,
}
©© 	
public
´´ 
async
´´ 
Task
´´ 
<
´´ 
List
´´ 
<
´´ 
Detalle_maestro
´´ .
>
´´. /
>
´´/ 0 
ObtenerTiposDeZona
´´1 C
(
´´C D
)
´´D E
{
¨¨ 	
try
≠≠ 
{
≠≠ 
return
≠≠ 
(
≠≠ 
await
≠≠ !
_repositorioMaestro
≠≠  3
.
≠≠3 4"
ObtenerDetallesAsync
≠≠4 H
(
≠≠H I
MaestroSettings
≠≠I X
.
≠≠X Y
Default
≠≠Y `
.
≠≠` a!
IdMaestroTipoDeZona
≠≠a t
)
≠≠t u
)
≠≠u v
.
≠≠v w
ToList
≠≠w }
(
≠≠} ~
)
≠≠~ 
;≠≠ Ä
}≠≠Å Ç
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ÆÆ  !
throw
ÆÆ" '
e
ÆÆ( )
;
ÆÆ) *
}
ÆÆ+ ,
}
ØØ 	
public
±± 
async
±± 
Task
±± 
<
±± 
List
±± 
<
±± 
Detalle_maestro
±± .
>
±±. /
>
±±/ 0
ObtenerNaciones
±±1 @
(
±±@ A
)
±±A B
{
≤≤ 	
try
≥≥ 
{
≥≥ 
return
≥≥ 
(
≥≥ 
await
≥≥ !
_repositorioMaestro
≥≥  3
.
≥≥3 4"
ObtenerDetallesAsync
≥≥4 H
(
≥≥H I
MaestroSettings
≥≥I X
.
≥≥X Y
Default
≥≥Y `
.
≥≥` a
IdMaestroNacion
≥≥a p
)
≥≥p q
)
≥≥q r
.
≥≥r s
ToList
≥≥s y
(
≥≥y z
)
≥≥z {
;
≥≥{ |
}
≥≥} ~
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
e
¥¥ 
)
¥¥ 
{
¥¥  !
throw
¥¥" '
e
¥¥( )
;
¥¥) *
}
¥¥+ ,
}
µµ 	
public
∑∑ 
async
∑∑ 
Task
∑∑ 
<
∑∑ 
List
∑∑ 
<
∑∑ 
Detalle_maestro
∑∑ .
>
∑∑. /
>
∑∑/ 01
#ObtenerTiposDeDocumentosDeIdentidad
∑∑1 T
(
∑∑T U
)
∑∑U V
{
∏∏ 	
try
ππ 
{
∫∫ 
var
ªª 
idsTipoDocumento
ªª $
=
ªª% &
Diccionario
ªª' 2
.
ªª2 3C
5TiposDeDocumentoIdentidadParaTipoActorNaturalJuridico
ªª3 h
;
ªªh i
return
ºº 
(
ºº 
await
ºº !
_repositorioMaestro
ºº 1
.
ºº1 2(
ObtenerDetallesEspecificos
ºº2 L
(
ººL M
idsTipoDocumento
ººM ]
)
ºº] ^
)
ºº^ _
.
ºº_ `
ToList
ºº` f
(
ººf g
)
ººg h
;
ººh i
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
øø 
throw
¿¿ 
e
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 	
public
ƒƒ 
List
ƒƒ 
<
ƒƒ 
Ubigeo
ƒƒ 
>
ƒƒ #
obtenerUbigeoDistrito
ƒƒ 1
(
ƒƒ1 2
)
ƒƒ2 3
{
≈≈ 	
try
∆∆ 
{
∆∆ 
return
∆∆ !
_repositorioMaestro
∆∆ ,
.
∆∆, -
obtenerUbigeos
∆∆- ;
(
∆∆; <
MaestroSettings
∆∆< K
.
∆∆K L
Default
∆∆L S
.
∆∆S T
IdPaisUbigeoPeru
∆∆T d
)
∆∆d e
.
∆∆e f
ToList
∆∆f l
(
∆∆l m
)
∆∆m n
;
∆∆n o
}
∆∆p q
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
««  !
throw
««" '
e
««( )
;
««) *
}
««+ ,
}
»» 	
public
   
List
   
<
   
Ubigeo
   
>
   
obtenerUbigeo
   )
(
  ) *
int
  * -
[
  - .
]
  . /
	idUbigeos
  0 9
)
  9 :
{
ÀÀ 	
try
ÃÃ 
{
ÃÃ 
return
ÃÃ !
_repositorioMaestro
ÃÃ ,
.
ÃÃ, -
obtenerUbigeos
ÃÃ- ;
(
ÃÃ; <
	idUbigeos
ÃÃ< E
)
ÃÃE F
.
ÃÃF G
ToList
ÃÃG M
(
ÃÃM N
)
ÃÃN O
;
ÃÃO P
}
ÃÃQ R
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
e
ÕÕ 
)
ÕÕ 
{
ÕÕ  !
throw
ÕÕ" '
e
ÕÕ( )
;
ÕÕ) *
}
ÕÕ+ ,
}
ŒŒ 	
public
–– 
async
–– 
Task
–– 
<
–– 
List
–– 
<
–– 
Detalle_maestro
–– .
>
––. /
>
––/ 0%
ObtenerTiposDeDireccion
––1 H
(
––H I
)
––I J
{
—— 	
try
““ 
{
““ 
return
““ 
(
““ 
await
““ !
_repositorioMaestro
““  3
.
““3 4"
ObtenerDetallesAsync
““4 H
(
““H I
MaestroSettings
““I X
.
““X Y
Default
““Y `
.
““` a$
IdMaestroTipoDireccion
““a w
)
““w x
)
““x y
.
““y z
ToList““z Ä
(““Ä Å
)““Å Ç
;““Ç É
}““Ñ Ö
catch
”” 
(
”” 
	Exception
”” 
e
”” 
)
”” 
{
””  !
throw
””" '
e
””( )
;
””) *
}
””+ ,
}
‘‘ 	
public
÷÷ 
List
÷÷ 
<
÷÷ 
Detalle_maestro
÷÷ #
>
÷÷# $
obtenerTarifas
÷÷% 3
(
÷÷3 4
)
÷÷4 5
{
◊◊ 	
try
ÿÿ 
{
ÿÿ 
return
ÿÿ !
_repositorioMaestro
ÿÿ ,
.
ÿÿ, -%
obtenerDetallesMaestros
ÿÿ- D
(
ÿÿD E
MaestroSettings
ÿÿE T
.
ÿÿT U
Default
ÿÿU \
.
ÿÿ\ ]
IdMaestroTarifa
ÿÿ] l
)
ÿÿl m
.
ÿÿm n
OrderBy
ÿÿn u
(
ÿÿu v
t
ÿÿv w
=>
ÿÿx z
t
ÿÿ{ |
.
ÿÿ| }
id
ÿÿ} 
)ÿÿ Ä
.ÿÿÄ Å
ToListÿÿÅ á
(ÿÿá à
)ÿÿà â
;ÿÿâ ä
}ÿÿã å
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
ŸŸ  !
throw
ŸŸ" '
e
ŸŸ( )
;
ŸŸ) *
}
ŸŸ+ ,
}
⁄⁄ 	
public
‡‡ 
List
‡‡ 
<
‡‡ 
Detalle_maestro
‡‡ #
>
‡‡# $&
ObtenerConceptosVigentes
‡‡% =
(
‡‡= >
)
‡‡> ?
{
·· 	
try
‚‚ 
{
„„ 
var
‰‰ 
familiasVigentes
‰‰ $
=
‰‰% &
true
‰‰' +
;
‰‰+ ,
return
ÂÂ !
_repositorioMaestro
ÂÂ *
.
ÂÂ* +
ObtenerDetalles
ÂÂ+ :
(
ÂÂ: ;
MaestroSettings
ÂÂ; J
.
ÂÂJ K
Default
ÂÂK R
.
ÂÂR S
IdMaestroConcepto
ÂÂS d
,
ÂÂd e
familiasVigentes
ÂÂf v
)
ÂÂv w
.
ÂÂw x
ToList
ÂÂx ~
(
ÂÂ~ 
)ÂÂ Ä
;ÂÂÄ Å
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
e
ÁÁ 
)
ÁÁ 
{
ËË 
throw
ÈÈ 
new
ÈÈ 
LogicaException
ÈÈ )
(
ÈÈ) *
$str
ÈÈ* c
,
ÈÈc d
e
ÈÈe f
)
ÈÈf g
;
ÈÈg h
}
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
List
ÌÌ 
<
ÌÌ (
Familia_Concepto_Comercial
ÌÌ .
>
ÌÌ. /%
ObtenerFamiliasVigentes
ÌÌ0 G
(
ÌÌG H
)
ÌÌH I
{
ÓÓ 	
try
ÔÔ 
{
 
var
ÒÒ 
familiasVigentes
ÒÒ $
=
ÒÒ% &
true
ÒÒ' +
;
ÒÒ+ ,
var
ÚÚ 
	resultado
ÚÚ 
=
ÚÚ !
_repositorioMaestro
ÚÚ  3
.
ÚÚ3 4.
 ObtenerFamiliasConceptoComercial
ÚÚ4 T
(
ÚÚT U
MaestroSettings
ÚÚU d
.
ÚÚd e
Default
ÚÚe l
.
ÚÚl m
IdMaestroConcepto
ÚÚm ~
,
ÚÚ~  
familiasVigentesÚÚÄ ê
)ÚÚê ë
.ÚÚë í
OrderByÚÚí ô
(ÚÚô ö
fÚÚö õ
=>ÚÚú û
fÚÚü †
.ÚÚ† °
NombreÚÚ° ß
)ÚÚß ®
.ÚÚ® ©
ToListÚÚ© Ø
(ÚÚØ ∞
)ÚÚ∞ ±
;ÚÚ± ≤
foreach
ÛÛ 
(
ÛÛ 
var
ÛÛ  
idFamiliaNoMostrar
ÛÛ /
in
ÛÛ0 2
Diccionario
ÛÛ3 >
.
ÛÛ> ?"
IdsFamilasANoMostrar
ÛÛ? S
)
ÛÛS T
{
ÙÙ 
	resultado
ıı 
.
ıı 
Remove
ıı $
(
ıı$ %
	resultado
ıı% .
.
ıı. /
Single
ıı/ 5
(
ıı5 6
r
ıı6 7
=>
ıı8 :
r
ıı; <
.
ıı< =
Id
ıı= ?
==
ıı@ B
Convert
ııC J
.
ııJ K
ToInt32
ııK R
(
ııR S 
idFamiliaNoMostrar
ııS e
)
ııe f
)
ııf g
)
ııg h
;
ııh i
}
ˆˆ 
return
˜˜ 
	resultado
˜˜  
;
˜˜  !
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
e
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
new
˚˚ 
LogicaException
˚˚ )
(
˚˚) *
$str
˚˚* c
,
˚˚c d
e
˚˚e f
)
˚˚f g
;
˚˚g h
}
¸¸ 
}
˝˝ 	
public
ˇˇ 
List
ˇˇ 
<
ˇˇ (
Familia_Concepto_Comercial
ˇˇ .
>
ˇˇ. /%
ObtenerFamiliasVigentes
ˇˇ0 G
(
ˇˇG H
int
ˇˇH K&
modoSeleccionTipoFamilia
ˇˇL d
)
ˇˇd e
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
List
ÉÉ 
<
ÉÉ (
Familia_Concepto_Comercial
ÉÉ /
>
ÉÉ/ 0
	resultado
ÉÉ1 :
;
ÉÉ: ;
var
ÑÑ 
familiasVigentes
ÑÑ $
=
ÑÑ% &
true
ÑÑ' +
;
ÑÑ+ ,
if
ÖÖ 
(
ÖÖ &
modoSeleccionTipoFamilia
ÖÖ ,
==
ÖÖ- /
(
ÖÖ0 1
int
ÖÖ1 4
)
ÖÖ4 5&
ModoSeleccionTipoFamilia
ÖÖ5 M
.
ÖÖM N
Ambos
ÖÖN S
)
ÖÖS T
{
ÜÜ 
	resultado
áá 
=
áá !
_repositorioMaestro
áá  3
.
áá3 4.
 ObtenerFamiliasConceptoComercial
áá4 T
(
ááT U
MaestroSettings
ááU d
.
áád e
Default
ááe l
.
áál m
IdMaestroConcepto
áám ~
,
áá~  
familiasVigentesááÄ ê
)ááê ë
.ááë í
OrderByááí ô
(ááô ö
fááö õ
=>ááú û
fááü †
.áá† °
Nombreáá° ß
)ááß ®
.áá® ©
ToListáá© Ø
(ááØ ∞
)áá∞ ±
;áá± ≤
}
àà 
else
ââ 
{
ää 
	resultado
ãã 
=
ãã !
_repositorioMaestro
ãã  3
.
ãã3 4.
 ObtenerFamiliasConceptoComercial
ãã4 T
(
ããT U
MaestroSettings
ããU d
.
ããd e
Default
ããe l
.
ããl m
IdMaestroConcepto
ããm ~
,
ãã~ (
modoSeleccionTipoFamiliaããÄ ò
.ããò ô
ToStringããô °
(ãã° ¢
)ãã¢ £
,ãã£ § 
familiasVigentesãã• µ
)ããµ ∂
.ãã∂ ∑
OrderByãã∑ æ
(ããæ ø
fããø ¿
=>ãã¡ √
fããƒ ≈
.ãã≈ ∆
Nombreãã∆ Ã
)ããÃ Õ
.ããÕ Œ
ToListããŒ ‘
(ãã‘ ’
)ãã’ ÷
;ãã÷ ◊
}
åå 
foreach
çç 
(
çç 
var
çç  
idFamiliaNoMostrar
çç /
in
çç0 2
Diccionario
çç3 >
.
çç> ?"
IdsFamilasANoMostrar
çç? S
)
ççS T
{
éé 
	resultado
èè 
.
èè 
Remove
èè $
(
èè$ %
	resultado
èè% .
.
èè. /
Single
èè/ 5
(
èè5 6
r
èè6 7
=>
èè8 :
r
èè; <
.
èè< =
Id
èè= ?
==
èè@ B
Convert
èèC J
.
èèJ K
ToInt32
èèK R
(
èèR S 
idFamiliaNoMostrar
èèS e
)
èèe f
)
èèf g
)
èèg h
;
èèh i
}
êê 
return
ëë 
	resultado
ëë  
;
ëë  !
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
e
ïï 
;
ïï 
}
ññ 
}
óó 	
public
òò 
List
òò 
<
òò (
Familia_Concepto_Comercial
òò .
>
òò. /9
+ObtenerFamiliasConceptosComercialesVigentes
òò0 [
(
òò[ \
)
òò\ ]
{
ôô 	
try
öö 
{
õõ 
var
úú 
conceptosVigentes
úú %
=
úú& '
true
úú( ,
;
úú, -
var
ùù 
	resultado
ùù 
=
ùù !
_repositorioMaestro
ùù  3
.
ùù3 44
&ObtenerFamiliasConceptoComercialPorRol
ùù4 Z
(
ùùZ [
ConceptoSettings
ùù[ k
.
ùùk l
Default
ùùl s
.
ùùs t
IdRolMercaderiaùùt É
,ùùÉ Ñ!
conceptosVigentesùùÖ ñ
)ùùñ ó
.ùùó ò
OrderByùùò ü
(ùùü †
fùù† °
=>ùù¢ §
fùù• ¶
.ùù¶ ß
Nombreùùß ≠
)ùù≠ Æ
.ùùÆ Ø
ToListùùØ µ
(ùùµ ∂
)ùù∂ ∑
;ùù∑ ∏
return
ûû 
	resultado
ûû  
;
ûû  !
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
throw
¢¢ 
e
¢¢ 
;
¢¢ 
}
££ 
}
§§ 	
public
¶¶ 
List
¶¶ 
<
¶¶ (
Familia_Concepto_Comercial
¶¶ .
>
¶¶. /9
+ObtenerFamiliasConceptosComercialesVigentes
¶¶0 [
(
¶¶[ \
int
¶¶\ _&
modoSeleccionTipoFamilia
¶¶` x
)
¶¶x y
{
ßß 	
try
®® 
{
©© 
List
™™ 
<
™™ (
Familia_Concepto_Comercial
™™ /
>
™™/ 0
	resultado
™™1 :
;
™™: ;
var
´´ 
conceptosVigentes
´´ %
=
´´& '
true
´´( ,
;
´´, -
if
¨¨ 
(
¨¨ &
modoSeleccionTipoFamilia
¨¨ ,
==
¨¨- /
(
¨¨0 1
int
¨¨1 4
)
¨¨4 5&
ModoSeleccionTipoFamilia
¨¨5 M
.
¨¨M N
Ambos
¨¨N S
)
¨¨S T
{
≠≠ 
	resultado
ÆÆ 
=
ÆÆ !
_repositorioMaestro
ÆÆ  3
.
ÆÆ3 44
&ObtenerFamiliasConceptoComercialPorRol
ÆÆ4 Z
(
ÆÆZ [
ConceptoSettings
ÆÆ[ k
.
ÆÆk l
Default
ÆÆl s
.
ÆÆs t
IdRolMercaderiaÆÆt É
,ÆÆÉ Ñ!
conceptosVigentesÆÆÖ ñ
)ÆÆñ ó
.ÆÆó ò
OrderByÆÆò ü
(ÆÆü †
fÆÆ† °
=>ÆÆ¢ §
fÆÆ• ¶
.ÆÆ¶ ß
NombreÆÆß ≠
)ÆÆ≠ Æ
.ÆÆÆ Ø
ToListÆÆØ µ
(ÆÆµ ∂
)ÆÆ∂ ∑
;ÆÆ∑ ∏
}
ØØ 
else
∞∞ 
{
±± 
	resultado
≤≤ 
=
≤≤ !
_repositorioMaestro
≤≤  3
.
≤≤3 4.
 ObtenerFamiliasConceptoComercial
≤≤4 T
(
≤≤T U
ConceptoSettings
≤≤U e
.
≤≤e f
Default
≤≤f m
.
≤≤m n
IdRolMercaderia
≤≤n }
,
≤≤} ~'
modoSeleccionTipoFamilia≤≤ ó
.≤≤ó ò
ToString≤≤ò †
(≤≤† °
)≤≤° ¢
,≤≤¢ £!
conceptosVigentes≤≤§ µ
)≤≤µ ∂
.≤≤∂ ∑
OrderBy≤≤∑ æ
(≤≤æ ø
f≤≤ø ¿
=>≤≤¡ √
f≤≤ƒ ≈
.≤≤≈ ∆
Nombre≤≤∆ Ã
)≤≤Ã Õ
.≤≤Õ Œ
ToList≤≤Œ ‘
(≤≤‘ ’
)≤≤’ ÷
;≤≤÷ ◊
}
≥≥ 
return
¥¥ 
	resultado
¥¥  
;
¥¥  !
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
e
∏∏ 
;
∏∏ 
}
ππ 
}
∫∫ 	
public
ææ 
List
ææ 
<
ææ 
Detalle_maestro
ææ #
>
ææ# $.
 ObtenerConceptosServicioVigentes
ææ% E
(
ææE F
)
ææF G
{
øø 	
try
¿¿ 
{
¡¡ 
string
¬¬ +
valorServicioDeConceptoBasico
¬¬ 4
=
¬¬5 6
$str
¬¬7 :
;
¬¬: ;
return
√√ !
_repositorioMaestro
√√ *
.
√√* +-
ObtenerDetallesVigentesPorValor
√√+ J
(
√√J K
MaestroSettings
√√K Z
.
√√Z [
Default
√√[ b
.
√√b c
IdMaestroConcepto
√√c t
,
√√t u
true
√√v z
,
√√z {,
valorServicioDeConceptoBasico√√| ô
)√√ô ö
.√√ö õ
ToList√√õ °
(√√° ¢
)√√¢ £
;√√£ §
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
e
≈≈ 
)
≈≈ 
{
≈≈  !
throw
≈≈" '
e
≈≈( )
;
≈≈) *
}
≈≈+ ,
}
∆∆ 	
public
…… 
List
…… 
<
…… 
Detalle_maestro
…… #
>
……# $3
%ObtenerConceptosVigentesDeCompraVenta
……% J
(
……J K
)
……K L
{
   	
try
ÀÀ 
{
ÃÃ 
List
ÕÕ 
<
ÕÕ 
Detalle_maestro
ÕÕ $
>
ÕÕ$ %
	conceptos
ÕÕ& /
=
ÕÕ0 1!
_repositorioMaestro
ÕÕ2 E
.
ÕÕE F
ObtenerDetalles
ÕÕF U
(
ÕÕU V
MaestroSettings
ÕÕV e
.
ÕÕe f
Default
ÕÕf m
.
ÕÕm n
IdMaestroConcepto
ÕÕn 
,ÕÕ Ä
trueÕÕÅ Ö
)ÕÕÖ Ü
.ÕÕÜ á
ToListÕÕá ç
(ÕÕç é
)ÕÕé è
;ÕÕè ê
List
ŒŒ 
<
ŒŒ 
int
ŒŒ 
>
ŒŒ "
idConceptosExcluidos
ŒŒ .
=
ŒŒ/ 0
new
ŒŒ1 4
List
ŒŒ5 9
<
ŒŒ9 :
int
ŒŒ: =
>
ŒŒ= >
(
ŒŒ> ?
)
ŒŒ? @
{
ŒŒA B
ConceptoSettings
ŒŒC S
.
ŒŒS T
Default
ŒŒT [
.
ŒŒ[ \$
IdConceptoNegocioFlete
ŒŒ\ r
}
ŒŒs t
;
ŒŒt u
return
œœ 
	conceptos
œœ  
.
œœ  !
Where
œœ! &
(
œœ& '
c
œœ' (
=>
œœ) +
!
œœ, -"
idConceptosExcluidos
œœ- A
.
œœA B
Contains
œœB J
(
œœJ K
c
œœK L
.
œœL M
id
œœM O
)
œœO P
)
œœP Q
.
œœQ R
ToList
œœR X
(
œœX Y
)
œœY Z
;
œœZ [
}
–– 
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
““ 
throw
”” 
e
”” 
;
”” 
}
‘‘ 
}
’’ 	
public
◊◊ 
async
◊◊ 
Task
◊◊ 
<
◊◊ 
List
◊◊ 
<
◊◊ 
Detalle_maestro
◊◊ .
>
◊◊. /
>
◊◊/ 0+
ObtenerConceptosPagoEmpleados
◊◊1 N
(
◊◊N O
)
◊◊O P
{
ÿÿ 	
try
ŸŸ 
{
ŸŸ 
return
ŸŸ 
(
ŸŸ 
await
ŸŸ !
_repositorioMaestro
ŸŸ  3
.
ŸŸ3 4"
ObtenerDetallesAsync
ŸŸ4 H
(
ŸŸH I
MaestroSettings
ŸŸI X
.
ŸŸX Y
Default
ŸŸY `
.
ŸŸ` a+
IdMaestroConceptoPagoEmpleado
ŸŸa ~
)
ŸŸ~ 
)ŸŸ Ä
.ŸŸÄ Å
ToListŸŸÅ á
(ŸŸá à
)ŸŸà â
;ŸŸâ ä
}ŸŸã å
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
e
⁄⁄ 
)
⁄⁄ 
{
⁄⁄  !
throw
⁄⁄" '
e
⁄⁄( )
;
⁄⁄) *
}
⁄⁄+ ,
}
€€ 	
public
›› 
async
›› 
Task
›› 
<
›› 
List
›› 
<
›› 
Detalle_maestro
›› .
>
››. /
>
››/ 0*
ObtenerTiposServicioImpuesto
››1 M
(
››M N
)
››N O
{
ﬁﬁ 	
try
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ 
(
ﬂﬂ 
await
ﬂﬂ !
_repositorioMaestro
ﬂﬂ  3
.
ﬂﬂ3 4"
ObtenerDetallesAsync
ﬂﬂ4 H
(
ﬂﬂH I
MaestroSettings
ﬂﬂI X
.
ﬂﬂX Y
Default
ﬂﬂY `
.
ﬂﬂ` a+
IdMaestroTipoServicioImpuesto
ﬂﬂa ~
)
ﬂﬂ~ 
)ﬂﬂ Ä
.ﬂﬂÄ Å
ToListﬂﬂÅ á
(ﬂﬂá à
)ﬂﬂà â
;ﬂﬂâ ä
}ﬂﬂã å
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
‡‡  !
throw
‡‡" '
e
‡‡( )
;
‡‡) *
}
‡‡+ ,
}
·· 	
public
„„ 
async
„„ 
Task
„„ 
<
„„ 
List
„„ 
<
„„ 
Detalle_maestro
„„ .
>
„„. /
>
„„/ 0*
ObtenerTiposProductoDeCompra
„„1 M
(
„„M N
)
„„N O
{
‰‰ 	
try
ÂÂ 
{
ÂÂ 
return
ÂÂ 
(
ÂÂ 
await
ÂÂ !
_repositorioMaestro
ÂÂ  3
.
ÂÂ3 4"
ObtenerDetallesAsync
ÂÂ4 H
(
ÂÂH I
MaestroSettings
ÂÂI X
.
ÂÂX Y
Default
ÂÂY `
.
ÂÂ` a+
IdMaestroTipoProductoDeCompra
ÂÂa ~
)
ÂÂ~ 
)ÂÂ Ä
.ÂÂÄ Å
ToListÂÂÅ á
(ÂÂá à
)ÂÂà â
;ÂÂâ ä
}ÂÂã å
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÊÊ  !
throw
ÊÊ" '
e
ÊÊ( )
;
ÊÊ) *
}
ÊÊ+ ,
}
ÁÁ 	
public
ÈÈ 
async
ÈÈ 
Task
ÈÈ 
<
ÈÈ 
List
ÈÈ 
<
ÈÈ 
Detalle_maestro
ÈÈ .
>
ÈÈ. /
>
ÈÈ/ 0
ObtenerTiposBien
ÈÈ1 A
(
ÈÈA B
)
ÈÈB C
{
ÍÍ 	
try
ÎÎ 
{
ÎÎ 
return
ÎÎ 
(
ÎÎ 
await
ÎÎ !
_repositorioMaestro
ÎÎ  3
.
ÎÎ3 4"
ObtenerDetallesAsync
ÎÎ4 H
(
ÎÎH I
MaestroSettings
ÎÎI X
.
ÎÎX Y
Default
ÎÎY `
.
ÎÎ` a
IdMaestroTipoBien
ÎÎa r
)
ÎÎr s
)
ÎÎs t
.
ÎÎt u
ToList
ÎÎu {
(
ÎÎ{ |
)
ÎÎ| }
;
ÎÎ} ~
}ÎÎ Ä
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
e
ÏÏ 
)
ÏÏ 
{
ÏÏ  !
throw
ÏÏ" '
e
ÏÏ( )
;
ÏÏ) *
}
ÏÏ+ ,
}
ÌÌ 	
public
ÔÔ 
List
ÔÔ 
<
ÔÔ 
Detalle_maestro
ÔÔ #
>
ÔÔ# $
obtenerMarcas
ÔÔ% 2
(
ÔÔ2 3
int
ÔÔ3 6

idArticulo
ÔÔ7 A
)
ÔÔA B
{
 	
try
ÒÒ 
{
ÒÒ 
return
ÒÒ !
_repositorioMaestro
ÒÒ ,
.
ÒÒ, -"
obtenerDetallesMarca
ÒÒ- A
(
ÒÒA B

idArticulo
ÒÒB L
)
ÒÒL M
.
ÒÒM N
ToList
ÒÒN T
(
ÒÒT U
)
ÒÒU V
;
ÒÒV W
}
ÒÒX Y
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÚÚ  !
throw
ÚÚ" '
e
ÚÚ( )
;
ÚÚ) *
}
ÚÚ+ ,
}
ÛÛ 	
public
ıı 
Detalle_maestro
ıı %
ObtenerMonedaPorDefecto
ıı 6
(
ıı6 7
)
ıı7 8
{
ˆˆ 	
try
˜˜ 
{
˜˜ 
return
˜˜ !
_repositorioMaestro
˜˜ ,
.
˜˜, -
ObtenerDetalle
˜˜- ;
(
˜˜; <
MaestroSettings
˜˜< K
.
˜˜K L
Default
˜˜L S
.
˜˜S T)
IdDetalleMaestroMonedaSoles
˜˜T o
)
˜˜o p
;
˜˜p q
}
˜˜r s
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
e
¯¯ 
)
¯¯ 
{
¯¯  !
throw
¯¯" '
e
¯¯( )
;
¯¯) *
}
¯¯+ ,
}
˘˘ 	
public
˚˚ 
async
˚˚ 
Task
˚˚ 
<
˚˚ 
List
˚˚ 
<
˚˚ 
Detalle_maestro
˚˚ .
>
˚˚. /
>
˚˚/ 0%
ObtenerUnidadesDeMedida
˚˚1 H
(
˚˚H I
)
˚˚I J
{
¸¸ 	
try
˝˝ 
{
˝˝ 
return
˝˝ 
(
˝˝ 
await
˝˝ !
_repositorioMaestro
˝˝  3
.
˝˝3 4"
ObtenerDetallesAsync
˝˝4 H
(
˝˝H I
MaestroSettings
˝˝I X
.
˝˝X Y
Default
˝˝Y `
.
˝˝` a%
IdMaestroUnidadDeMedida
˝˝a x
)
˝˝x y
)
˝˝y z
.
˝˝z {
ToList˝˝{ Å
(˝˝Å Ç
)˝˝Ç É
;˝˝É Ñ
}˝˝Ö Ü
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
˛˛  !
throw
˛˛" '
e
˛˛( )
;
˛˛) *
}
˛˛+ ,
}
ˇˇ 	
public
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
List
ÅÅ 
<
ÅÅ 
Detalle_maestro
ÅÅ .
>
ÅÅ. /
>
ÅÅ/ 0#
ObtenerPresentaciones
ÅÅ1 F
(
ÅÅF G
)
ÅÅG H
{
ÇÇ 	
try
ÉÉ 
{
ÉÉ 
return
ÉÉ 
(
ÉÉ 
await
ÉÉ !
_repositorioMaestro
ÉÉ  3
.
ÉÉ3 4"
ObtenerDetallesAsync
ÉÉ4 H
(
ÉÉH I
MaestroSettings
ÉÉI X
.
ÉÉX Y
Default
ÉÉY `
.
ÉÉ` a+
IdMaestroPresentacionConcepto
ÉÉa ~
)
ÉÉ~ 
)ÉÉ Ä
.ÉÉÄ Å
ToListÉÉÅ á
(ÉÉá à
)ÉÉà â
;ÉÉâ ä
}ÉÉã å
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÑÑ  !
throw
ÑÑ" '
e
ÑÑ( )
;
ÑÑ) *
}
ÑÑ+ ,
}
ÖÖ 	
public
áá 
List
áá 
<
áá +
Valor_caracteristica_concepto
áá 1
>
áá1 21
#obtenercaracteristicasConceptoValor
áá3 V
(
ááV W
int
ááW Z

idArticulo
áá[ e
)
ááe f
{
àà 	
try
ââ 
{
ââ 
return
ââ !
_repositorioMaestro
ââ ,
.
ââ, -0
"obtenerValorCaracteristicaConcepto
ââ- O
(
ââO P

idArticulo
ââP Z
)
ââZ [
.
ââ[ \
ToList
ââ\ b
(
ââb c
)
ââc d
;
ââd e
}
ââf g
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ää  !
throw
ää" '
e
ää( )
;
ää) *
}
ää+ ,
}
ãã 	
public
çç 
async
çç 
Task
çç 
<
çç 
List
çç 
<
çç 
Detalle_maestro
çç .
>
çç. /
>
çç/ 0'
ObtenerEstadosTransaccion
çç1 J
(
ççJ K
)
ççK L
{
éé 	
try
èè 
{
èè 
return
èè 
(
èè 
await
èè !
_repositorioMaestro
èè  3
.
èè3 4"
ObtenerDetallesAsync
èè4 H
(
èèH I
MaestroSettings
èèI X
.
èèX Y
Default
èèY `
.
èè` a(
IdMaestroEstadoTransaccion
èèa {
)
èè{ |
)
èè| }
.
èè} ~
ToListèè~ Ñ
(èèÑ Ö
)èèÖ Ü
;èèÜ á
}èèà â
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
êê  !
throw
êê" '
e
êê( )
;
êê) *
}
êê+ ,
}
ëë 	
public
ìì 
async
ìì 
Task
ìì 
<
ìì 
List
ìì 
<
ìì 
Detalle_maestro
ìì .
>
ìì. /
>
ìì/ 0(
ObtenerAccionesTransaccion
ìì1 K
(
ììK L
)
ììL M
{
îî 	
try
ïï 
{
ïï 
return
ïï 
(
ïï 
await
ïï !
_repositorioMaestro
ïï  3
.
ïï3 4"
ObtenerDetallesAsync
ïï4 H
(
ïïH I
MaestroSettings
ïïI X
.
ïïX Y
Default
ïïY `
.
ïï` a2
#IdMaestroAccionOperativaTransaccionïïa Ñ
)ïïÑ Ö
)ïïÖ Ü
.ïïÜ á
ToListïïá ç
(ïïç é
)ïïé è
;ïïè ê
}ïïë í
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
ññ  !
throw
ññ" '
e
ññ( )
;
ññ) *
}
ññ+ ,
}
óó 	
public
ôô 
async
ôô 
Task
ôô 
<
ôô 
List
ôô 
<
ôô 
Detalle_maestro
ôô .
>
ôô. /
>
ôô/ 0&
ObtenerUnidadesDeNegocio
ôô1 I
(
ôôI J
)
ôôJ K
{
öö 	
try
õõ 
{
õõ 
return
õõ 
(
õõ 
await
õõ !
_repositorioMaestro
õõ  3
.
õõ3 4"
ObtenerDetallesAsync
õõ4 H
(
õõH I
MaestroSettings
õõI X
.
õõX Y
Default
õõY `
.
õõ` a&
IdMaestroUnidadDeNegocio
õõa y
)
õõy z
)
õõz {
.
õõ{ |
ToListõõ| Ç
(õõÇ É
)õõÉ Ñ
;õõÑ Ö
}õõÜ á
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
úú  !
throw
úú" '
e
úú( )
;
úú) *
}
úú+ ,
}
ùù 	
public
ûû 
List
ûû 
<
ûû 
Menu_aplicacion
ûû #
>
ûû# $
obtenerMenus
ûû% 1
(
ûû1 2
)
ûû2 3
{
üü 	
try
†† 
{
†† 
return
†† !
_repositorioMaestro
†† ,
.
††, -
obtenerMenus
††- 9
(
††9 :
)
††: ;
.
††; <
ToList
††< B
(
††B C
)
††C D
;
††D E
}
††F G
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
°°  !
throw
°°" '
e
°°( )
;
°°) *
}
°°+ ,
}
¢¢ 	
public
§§ 
Detalle_maestro
§§ .
 ObtenerDetalleMaestroDeDocumento
§§ ?
(
§§? @
string
§§@ F
codigoDocumento
§§G V
)
§§V W
{
•• 	
try
¶¶ 
{
ßß 
return
®® !
_repositorioMaestro
®® *
.
®®* +
obtenerDetalle
®®+ 9
(
®®9 :
MaestroSettings
®®: I
.
®®I J
Default
®®J Q
.
®®Q R 
IdMaestroDocumento
®®R d
,
®®d e
codigoDocumento
®®f u
)
®®u v
;
®®v w
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
e
¨¨ 
;
¨¨ 
}
≠≠ 
}
ÆÆ 	
public
∞∞ 
Detalle_maestro
∞∞ 7
)ObtenerDetalleMaestroDeDocumentoIdentidad
∞∞ H
(
∞∞H I
string
∞∞I O&
codigoDocumentoIdentidad
∞∞P h
)
∞∞h i
{
±± 	
try
≤≤ 
{
≥≥ 
return
¥¥ !
_repositorioMaestro
¥¥ *
.
¥¥* +
obtenerDetalle
¥¥+ 9
(
¥¥9 :
MaestroSettings
¥¥: I
.
¥¥I J
Default
¥¥J Q
.
¥¥Q R)
idMaestroDocumentoIdentidad
¥¥R m
,
¥¥m n'
codigoDocumentoIdentidad¥¥o á
)¥¥á à
;¥¥à â
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
e
∏∏ 
;
∏∏ 
}
ππ 
}
∫∫ 	
public
ææ 
void
ææ 7
)ComprobarSiYaExisteNombreDeDetalleMaestro
ææ =
(
ææ= >
int
ææ> A
	idMaestro
ææB K
,
ææK L
int
ææM P
idDetalleMaestro
ææQ a
,
ææa b
string
ææc i
nombre
ææj p
)
ææp q
{
øø 	
try
¿¿ 
{
¡¡ 
Detalle_maestro
¬¬ 
detalle
¬¬  '
=
¬¬( )
null
¬¬* .
;
¬¬. /
if
√√ 
(
√√ 
idDetalleMaestro
√√ $
>
√√% &
$num
√√' (
)
√√( )
{
ƒƒ 
detalle
≈≈ 
=
≈≈ !
_repositorioMaestro
≈≈ 1
.
≈≈1 2
ObtenerDetalle
≈≈2 @
(
≈≈@ A
idDetalleMaestro
≈≈A Q
)
≈≈Q R
;
≈≈R S
if
«« 
(
«« 
nombre
«« 
!=
«« !
detalle
««" )
.
««) *
nombre
««* 0
)
««0 1
{
»» 
bool
…… 
existeNombre
…… )
=
……* +!
_repositorioMaestro
……, ?
.
……? @*
ExisteNombreDeDetalleMaestro
……@ \
(
……\ ]
	idMaestro
……] f
,
……f g
nombre
……h n
,
……n o
true
……p t
)
……t u
;
……u v
if
ÀÀ 
(
ÀÀ 
existeNombre
ÀÀ (
)
ÀÀ( )
{
ÃÃ 
throw
ÕÕ !
new
ÕÕ" %
LogicaException
ÕÕ& 5
(
ÕÕ5 6
$str
ÕÕ6 b
)
ÕÕb c
;
ÕÕc d
}
ŒŒ 
}
œœ 
}
–– 
else
—— 
{
““ 
bool
”” 
existeNombre
”” %
=
””& '!
_repositorioMaestro
””( ;
.
””; <*
ExisteNombreDeDetalleMaestro
””< X
(
””X Y
	idMaestro
””Y b
,
””b c
nombre
””d j
,
””j k
true
””l p
)
””p q
;
””q r
if
‘‘ 
(
‘‘ 
existeNombre
‘‘ $
)
‘‘$ %
{
’’ 
throw
÷÷ 
new
÷÷ !
LogicaException
÷÷" 1
(
÷÷1 2
$str
÷÷2 ^
)
÷÷^ _
;
÷÷_ `
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
e
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
new
‹‹ 
LogicaException
‹‹ )
(
‹‹) *
$str
‹‹* S
,
‹‹S T
e
‹‹U V
)
‹‹V W
;
‹‹W X
}
›› 
}
ﬁﬁ 	
public
‡‡ 
bool
‡‡ 7
)ComprobarSiYaExisteNombreDeDetalleMaestro
‡‡ =
(
‡‡= >
int
‡‡> A
idDetalleMaesro
‡‡B Q
,
‡‡Q R
string
‡‡S Y"
nombreDetalleMaestro
‡‡Z n
,
‡‡n o
Detalle_maestro
‡‡p 
detalleMaestro‡‡Ä é
)‡‡é è
{
·· 	
try
‚‚ 
{
„„ 
bool
‰‰ 
debeActualizar
‰‰ #
=
‰‰$ %
false
‰‰& +
;
‰‰+ ,
if
ÂÂ 
(
ÂÂ 
detalleMaestro
ÂÂ "
!=
ÂÂ# %
null
ÂÂ& *
)
ÂÂ* +
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
detalleMaestro
ÁÁ &
.
ÁÁ& '

es_vigente
ÁÁ' 1
)
ÁÁ1 2
{
ËË 
if
ÍÍ 
(
ÍÍ 
idDetalleMaesro
ÍÍ +
==
ÍÍ, .
$num
ÍÍ/ 0
)
ÍÍ0 1
{
ÎÎ 
throw
ÏÏ !
new
ÏÏ" %
LogicaException
ÏÏ& 5
(
ÏÏ5 6
$str
ÏÏ6 b
)
ÏÏb c
;
ÏÏc d
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
detalleMaestro
ÔÔ *
.
ÔÔ* +
id
ÔÔ+ -
!=
ÔÔ. 0
idDetalleMaesro
ÔÔ1 @
&&
ÔÔA C
detalleMaestro
ÔÔD R
.
ÔÔR S
nombre
ÔÔS Y
==
ÔÔZ \"
nombreDetalleMaestro
ÔÔ] q
)
ÔÔq r
{
 
throw
ÒÒ !
new
ÒÒ" %
LogicaException
ÒÒ& 5
(
ÒÒ5 6
$str
ÒÒ6 b
)
ÒÒb c
;
ÒÒc d
}
ÚÚ 
}
ÛÛ 
else
ÙÙ 
{
ıı 
debeActualizar
˜˜ &
=
˜˜' (
false
˜˜) .
;
˜˜. /
}
¯¯ 
}
˙˙ 
return
¸¸ 
debeActualizar
¸¸ %
;
¸¸% &
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* S
,
ÄÄS T
e
ÄÄU V
)
ÄÄV W
;
ÄÄW X
}
ÅÅ 
}
ÇÇ 	
public
ÖÖ 
List
ÖÖ 
<
ÖÖ 
ItemGenerico
ÖÖ  
>
ÖÖ  !3
%ObtenerDetalleMaestroLibroElectronico
ÖÖ" G
(
ÖÖG H
)
ÖÖH I
{
ÜÜ 	
try
áá 
{
àà 
List
ââ 
<
ââ 
ItemGenerico
ââ !
>
ââ! " 
librosElectronicos
ââ# 5
=
ââ6 7
ItemGenerico
ââ8 D
.
ââD E
Convert
ââE L
(
ââL M!
_repositorioMaestro
ââM `
.
ââ` a
ObtenerDetalles
ââa p
(
ââp q
MaestroSettingsââq Ä
.ââÄ Å
DefaultââÅ à
.ââà â+
IdMaestroLibrosElectronicosâââ §
,ââ§ •
trueââ¶ ™
)ââ™ ´
.ââ´ ¨
ToListââ¨ ≤
(ââ≤ ≥
)ââ≥ ¥
)ââ¥ µ
;ââµ ∂
return
ää  
librosElectronicos
ää )
;
ää) *
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
e
éé 
;
éé 
}
èè 
}
êê 	
public
ëë 
ItemGenerico
ëë %
ObtenerLibroElectronico
ëë 3
(
ëë3 4
int
ëë4 7 
idLibroElectronico
ëë8 J
)
ëëJ K
{
íí 	
try
ìì 
{
îî 
ItemGenerico
ïï 
libroElectronico
ïï -
=
ïï. /
ItemGenerico
ïï0 <
.
ïï< =
Convert
ïï= D
(
ïïD E!
_repositorioMaestro
ïïE X
.
ïïX Y
ObtenerDetalle
ïïY g
(
ïïg h 
idLibroElectronico
ïïh z
,
ïïz {
trueïï| Ä
)ïïÄ Å
)ïïÅ Ç
;ïïÇ É
return
ññ 
libroElectronico
ññ '
;
ññ' (
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
throw
öö 
e
öö 
;
öö 
}
õõ 
}
úú 	
public
üü 
Tipo_cambio
üü *
ObtenerTipoCambioDolarActual
üü 7
(
üü7 8
)
üü8 9
{
†† 	
try
°° 
{
¢¢ 
DateTime
££ 
fechaActual
££ $
=
££% &
DateTimeUtil
££' 3
.
££3 4
FechaActual
££4 ?
(
££? @
)
££@ A
.
££A B
Date
££B F
;
££F G
Tipo_cambio
§§ 
tipoCambioActual
§§ ,
=
§§- .!
_repositorioMaestro
§§/ B
.
§§B C
ObtenerTipoCambio
§§C T
(
§§T U
MaestroSettings
§§U d
.
§§d e
Default
§§e l
.
§§l m,
IdDetalleMaestroMonedaDolares§§m ä
,§§ä ã
fechaActual§§å ó
)§§ó ò
;§§ò ô
return
•• 
tipoCambioActual
•• '
;
••' (
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
e
©© 
;
©© 
}
™™ 
}
´´ 	
public
¨¨ 
OperationResult
¨¨ *
GuardarTipoCambioDolarActual
¨¨ ;
(
¨¨; <
Tipo_cambio
¨¨< G

tipoCambio
¨¨H R
)
¨¨R S
{
≠≠ 	
try
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 

tipoCambio
∞∞ 
.
∞∞ 
fecha
∞∞ $
==
∞∞% '
DateTime
∞∞( 0
.
∞∞0 1
MinValue
∞∞1 9
)
∞∞9 :
{
±± 

tipoCambio
≤≤ 
.
≤≤ 
fecha
≤≤ $
=
≤≤% &
DateTimeUtil
≤≤' 3
.
≤≤3 4
FechaActual
≤≤4 ?
(
≤≤? @
)
≤≤@ A
.
≤≤A B
Date
≤≤B F
;
≤≤F G

tipoCambio
≥≥ 
.
≥≥ 
idMoneda
≥≥ '
=
≥≥( )
MaestroSettings
≥≥* 9
.
≥≥9 :
Default
≥≥: A
.
≥≥A B+
IdDetalleMaestroMonedaDolares
≥≥B _
;
≥≥_ `
}
¥¥ 
return
µµ !
_repositorioMaestro
µµ *
.
µµ* +
GuardarTipoCambio
µµ+ <
(
µµ< =

tipoCambio
µµ= G
)
µµG H
;
µµH I
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
e
∑∑ 
)
∑∑ 
{
∏∏ 
throw
ππ 
e
ππ 
;
ππ 
}
∫∫ 
}
ªª 	
public
ΩΩ 
async
ΩΩ 
Task
ΩΩ 
<
ΩΩ 
List
ΩΩ 
<
ΩΩ 
ItemGenerico
ΩΩ +
>
ΩΩ+ ,
>
ΩΩ, -'
ObtenerTiposGrupoClientes
ΩΩ. G
(
ΩΩG H
)
ΩΩH I
{
ææ 	
try
øø 
{
¿¿ 
var
¡¡  
tiposGrupoClientes
¡¡ &
=
¡¡' (
ItemGenerico
¡¡) 5
.
¡¡5 6
Convert
¡¡6 =
(
¡¡= >
(
¡¡> ?
await
¡¡? D!
_repositorioMaestro
¡¡E X
.
¡¡X Y"
ObtenerDetallesAsync
¡¡Y m
(
¡¡m n
MaestroSettings
¡¡n }
.
¡¡} ~
Default¡¡~ Ö
.¡¡Ö Ü+
IdMaestroTiposGrupoClientes¡¡Ü °
)¡¡° ¢
)¡¡¢ £
.¡¡£ §
ToList¡¡§ ™
(¡¡™ ´
)¡¡´ ¨
)¡¡¨ ≠
;¡¡≠ Æ
return
¬¬  
tiposGrupoClientes
¬¬ )
;
¬¬) *
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
e
ƒƒ 
)
ƒƒ 
{
≈≈ 
throw
∆∆ 
new
∆∆ 
LogicaException
∆∆ )
(
∆∆) *
$str
∆∆* d
,
∆∆d e
e
∆∆f g
)
∆∆g h
;
∆∆h i
}
«« 
}
»» 	
public
…… 
async
…… 
Task
…… 
<
…… 
List
…… 
<
…… 
ItemGenerico
…… +
>
……+ ,
>
……, -1
#ObtenerClasificacionesGrupoClientes
……. Q
(
……Q R
)
……R S
{
   	
try
ÀÀ 
{
ÃÃ 
var
ÕÕ  
tiposGrupoClientes
ÕÕ &
=
ÕÕ' (
ItemGenerico
ÕÕ) 5
.
ÕÕ5 6
Convert
ÕÕ6 =
(
ÕÕ= >
(
ÕÕ> ?
await
ÕÕ? D!
_repositorioMaestro
ÕÕE X
.
ÕÕX Y"
ObtenerDetallesAsync
ÕÕY m
(
ÕÕm n
MaestroSettings
ÕÕn }
.
ÕÕ} ~
DefaultÕÕ~ Ö
.ÕÕÖ Ü5
%IdMaestroClasificacionesGrupoClientesÕÕÜ ´
)ÕÕ´ ¨
)ÕÕ¨ ≠
.ÕÕ≠ Æ
ToListÕÕÆ ¥
(ÕÕ¥ µ
)ÕÕµ ∂
)ÕÕ∂ ∑
;ÕÕ∑ ∏
return
ŒŒ  
tiposGrupoClientes
ŒŒ )
;
ŒŒ) *
}
œœ 
catch
–– 
(
–– 
	Exception
–– 
e
–– 
)
–– 
{
—— 
throw
““ 
new
““ 
LogicaException
““ )
(
““) *
$str
““* n
,
““n o
e
““p q
)
““q r
;
““r s
}
”” 
}
‘‘ 	
}
’’ 
}÷÷ ˝π
CD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
:) *
IOperacionLogica+ ;
{ 
private 
readonly #
ITransaccionRepositorio 0"
transaccionRepositorio1 G
;G H
private 
readonly 
IMaestroRepositorio ,
maestroRepositorio- ?
;? @
private 
readonly  
IConceptoRepositorio -
conceptoRepositorio. A
;A B
private 
readonly 
IActorRepositorio *
actorRepositorio+ ;
;; <
private 
readonly #
IFacturacionRepositorio 0"
facturacionRepositorio1 G
;G H
private 
readonly $
ICodigosOperacion_Logica 1#
codigosOperacion_Logica2 I
;I J
private 
readonly 
IPermisos_Logica )
permisos_Logica* 9
;9 :
private   
readonly   )
ICentroDeAtencion_Repositorio   6!
centroDeAtencionDatos  7 L
;  L M
private!! 
readonly!! 
IActor_Repositorio!! +
actor_Datos!!, 7
;!!7 8
private"" 
readonly"" ,
 IInventarioHistorico_Repositorio"" 9%
inventarioHistorico_Datos"": S
;""S T
private## 
readonly## %
IOrdenAlmacen_Repositorio## 2
ordenAlmacen_Datos##3 E
;##E F
public&& 
OperacionLogica&& 
(&& 
)&&  
{'' 	
}(( 	
public** 
OperacionLogica** 
(** #
ITransaccionRepositorio** 6"
repositorioTransaccion**7 M
,**M N
IMaestroRepositorio**O b
maestroRepositorio**c u
,**u v
IActorRepositorio	**w à
actorRepositorio
**â ô
,
**ô ö"
IConceptoRepositorio
**õ Ø!
conceptoRepositorio
**∞ √
,
**√ ƒ%
IFacturacionRepositorio
**≈ ‹$
facturacionRepositorio
**› Û
,
**Û Ù&
ICodigosOperacion_Logica
**ı ç%
codigosOperacion_Logica
**é •
,
**• ¶
IPermisos_Logica
**ß ∑
permisos_Logica
**∏ «
,
**« »+
ICentroDeAtencion_Repositorio
**… Ê#
centroDeAtencionDatos
**Á ¸
,
**¸ ˝ 
IActor_Repositorio
**˛ ê
actor_Datos
**ë ú
,
**ú ù.
 IInventarioHistorico_Repositorio
**û æ'
inventarioHistorico_Datos
**ø ÿ
,
**ÿ Ÿ'
IOrdenAlmacen_Repositorio
**⁄ Û 
ordenAlmacen_Datos
**Ù Ü
)
**Ü á
{++ 	
this,, 
.,, "
transaccionRepositorio,, '
=,,( )"
repositorioTransaccion,,* @
;,,@ A
this-- 
.-- 
maestroRepositorio-- #
=--$ %
maestroRepositorio--& 8
;--8 9
this.. 
... 
actorRepositorio.. !
=.." #
actorRepositorio..$ 4
;..4 5
this// 
.// 
conceptoRepositorio// $
=//% &
conceptoRepositorio//' :
;//: ;
this00 
.00 "
facturacionRepositorio00 '
=00( )"
facturacionRepositorio00* @
;00@ A
this11 
.11 #
codigosOperacion_Logica11 (
=11) *#
codigosOperacion_Logica11+ B
;11B C
this22 
.22 
permisos_Logica22  
=22! "
permisos_Logica22# 2
;222 3
this33 
.33 !
centroDeAtencionDatos33 &
=33' (!
centroDeAtencionDatos33) >
;33> ?
this44 
.44 
actor_Datos44 
=44 
actor_Datos44 *
;44* +
this55 
.55 %
inventarioHistorico_Datos55 *
=55+ ,%
inventarioHistorico_Datos55- F
;55F G
this66 
.66 
ordenAlmacen_Datos66 #
=66$ %
ordenAlmacen_Datos66& 8
;668 9
}77 	
public;; 
void;; #
ValidarRolPuntoDeCompra;; +
(;;+ ,
int;;, /
idPuntoDeCompra;;0 ?
);;? @
{<< 	

ValidarRol== 
(== 
idPuntoDeCompra== &
,==& '
ActorSettings==( 5
.==5 6
Default==6 =
.=== >
IdRolPuntoDeCompra==> P
,==P Q
$str	==R Ü
)
==Ü á
;
==á à
}>> 	
public@@ 
void@@ 
ValidarRolCaja@@ "
(@@" #
int@@# &
idCaja@@' -
)@@- .
{AA 	

ValidarRolBB 
(BB 
idCajaBB 
,BB 
ActorSettingsBB ,
.BB, -
DefaultBB- 4
.BB4 5
	IdRolCajaBB5 >
,BB> ?
$strBB@ i
)BBi j
;BBj k
}CC 	
publicEE 
voidEE 
ValidarRolAlmacenEE %
(EE% &
intEE& )
	idAlmacenEE* 3
)EE3 4
{FF 	

ValidarRolGG 
(GG 
	idAlmacenGG  
,GG  !
ActorSettingsGG" /
.GG/ 0
DefaultGG0 7
.GG7 8
IdRolAlmacenGG8 D
,GGD E
$strGGF r
)GGr s
;GGs t
}HH 	
publicJJ 
voidJJ %
ValidarRolesPuntoDeCompraJJ -
(JJ- .
intJJ. 1
idPuntoDeCompraJJ2 A
)JJA B
{KK 	

ValidarRolLL 
(LL 
idPuntoDeCompraLL &
,LL& '
ActorSettingsLL( 5
.LL5 6
DefaultLL6 =
.LL= >
IdRolPuntoDeCompraLL> P
,LLP Q
$str	LLR Ü
)
LLÜ á
;
LLá à
}MM 	
publicOO 
voidOO )
ValidarRolesPuntoDeCompraCajaOO 1
(OO1 2
intOO2 5
idPuntoDeCompraOO6 E
,OOE F
intOOG J
idCajaOOK Q
)OOQ R
{PP 	

ValidarRolQQ 
(QQ 
idPuntoDeCompraQQ &
,QQ& '
ActorSettingsQQ( 5
.QQ5 6
DefaultQQ6 =
.QQ= >
IdRolPuntoDeCompraQQ> P
,QQP Q
$str	QQR Ü
)
QQÜ á
;
QQá à

ValidarRolRR 
(RR 
idCajaRR 
,RR 
ActorSettingsRR ,
.RR, -
DefaultRR- 4
.RR4 5
	IdRolCajaRR5 >
,RR> ?
$strRR@ i
)RRi j
;RRj k
}SS 	
publicUU 
voidUU ,
 ValidarRolesPuntoDeCompraAlmacenUU 4
(UU4 5
intUU5 8
idPuntoDeCompraUU9 H
,UUH I
intUUJ M
	idAlmacenUUN W
)UUW X
{VV 	

ValidarRolWW 
(WW 
idPuntoDeCompraWW &
,WW& '
ActorSettingsWW( 5
.WW5 6
DefaultWW6 =
.WW= >
IdRolPuntoDeCompraWW> P
,WWP Q
$str	WWR Ü
)
WWÜ á
;
WWá à

ValidarRolXX 
(XX 
	idAlmacenXX  
,XX  !
ActorSettingsXX" /
.XX/ 0
DefaultXX0 7
.XX7 8
IdRolAlmacenXX8 D
,XXD E
$strXXF r
)XXr s
;XXs t
}YY 	
public[[ 
void[[ 0
$ValidarRolesPuntoDeCompraCajaAlmacen[[ 8
([[8 9
int[[9 <
idPuntoDeCompra[[= L
,[[L M
int[[N Q
idCaja[[R X
,[[X Y
int[[Z ]
	idAlmacen[[^ g
)[[g h
{\\ 	

ValidarRol]] 
(]] 
idPuntoDeCompra]] &
,]]& '
ActorSettings]]( 5
.]]5 6
Default]]6 =
.]]= >
IdRolPuntoDeCompra]]> P
,]]P Q
$str	]]R Ü
)
]]Ü á
;
]]á à

ValidarRol^^ 
(^^ 
idCaja^^ 
,^^ 
ActorSettings^^ ,
.^^, -
Default^^- 4
.^^4 5
	IdRolCaja^^5 >
,^^> ?
$str^^@ i
)^^i j
;^^j k

ValidarRol__ 
(__ 
	idAlmacen__  
,__  !
ActorSettings__" /
.__/ 0
Default__0 7
.__7 8
IdRolAlmacen__8 D
,__D E
$str__F r
)__r s
;__s t
}`` 	
publicbb 
voidbb 

ValidarRolbb 
(bb 
intbb "
idCentroAtencionbb# 3
,bb3 4
intbb5 8
idRolbb9 >
,bb> ?
stringbb@ F
mensajeDeErrorbbG U
)bbU V
{cc 	
ifdd 
(dd 
actorRepositoriodd  
.dd  !(
ObtenerActorDeNegocioVigentedd! =
(dd= >
idCentroAtenciondd> N
,ddN O
idRolddP U
)ddU V
==ddW Y
nullddZ ^
)dd^ _
{ee 
throwff 
newff 
LogicaExceptionff )
(ff) *
mensajeDeErrorff* 8
)ff8 9
;ff9 :
}gg 
}hh 	
publicqq 
Listqq 
<qq ,
 TipoDeComprobanteParaTransaccionqq 4
>qq4 55
)ObtenerTiposDeComprobanteParaNotaDeDebitoqq6 _
(qq_ `
intqq` c

idEmpleadoqqd n
,qqn o
intqqp s
idCentroAtencion	qqt Ñ
)
qqÑ Ö
{rr 	
tryss 
{tt 
varuu 
	resultadouu 
=uu "
transaccionRepositoriouu  6
.uu6 76
*ObtenerTipoComprobantePorTipoDeComprobanteuu7 a
(uua b
MaestroSettingsuub q
.uuq r
Defaultuur y
.uuy z4
'IdDetalleMaestroComprobanteNotaDeDebito	uuz °
)
uu° ¢
.
uu¢ £
GroupBy
uu£ ™
(
uu™ ´
r
uu´ ¨
=>
uu≠ Ø
new
uu∞ ≥
{
uu¥ µ
r
uu∂ ∑
.
uu∑ ∏!
id_tipo_comprobante
uu∏ À
,
uuÀ Ã
r
uuÕ Œ
.
uuŒ œ
	es_propio
uuœ ÿ
}
uuŸ ⁄
)
uu⁄ €
.
uu€ ‹
Select
uu‹ ‚
(
uu‚ „
r
uu„ ‰
=>
uuÂ Á
r
uuË È
.
uuÈ Í
FirstOrDefault
uuÍ ¯
(
uu¯ ˘
)
uu˘ ˙
)
uu˙ ˚
;
uu˚ ¸
foreachvv 
(vv 
varvv 
tipovv !
invv" $
	resultadovv% .
)vv. /
{ww 
tipoxx 
.xx 
Detalle_maestroxx (
.xx( )
Serie_comprobantexx) :
=xx; <
tipoxx= A
.xxA B
Detalle_maestroxxB Q
.xxQ R
Serie_comprobantexxR c
.xxc d
Wherexxd i
(xxi j
scxxj l
=>xxm o
scxxp r
.xxr s
id_propietario	xxs Å
==
xxÇ Ñ
idCentroAtencion
xxÖ ï
&&
xxñ ò
sc
xxô õ
.
xxõ ú

es_vigente
xxú ¶
)
xx¶ ß
.
xxß ®
ToList
xx® Æ
(
xxÆ Ø
)
xxØ ∞
;
xx∞ ±
}yy 
returnzz ,
 TipoDeComprobanteParaTransaccionzz 7
.zz7 8
Convertzz8 ?
(zz? @
	resultadozz@ I
.zzI J
ToListzzJ P
(zzP Q
)zzQ R
)zzR S
;zzS T
}{{ 
catch|| 
(|| 
	Exception|| 
e|| 
)|| 
{||  !
throw||" '
e||( )
;||) *
}||+ ,
}}} 	
public 
List 
< ,
 TipoDeComprobanteParaTransaccion 4
>4 56
*ObtenerTiposDeComprobanteParaNotaDeCredito6 `
(` a
inta d

idEmpleadoe o
,o p
intq t
idCentroAtencion	u Ö
)
Ö Ü
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
var
ÉÉ 
	resultado
ÉÉ 
=
ÉÉ $
transaccionRepositorio
ÉÉ  6
.
ÉÉ6 78
*ObtenerTipoComprobantePorTipoDeComprobante
ÉÉ7 a
(
ÉÉa b
MaestroSettings
ÉÉb q
.
ÉÉq r
Default
ÉÉr y
.
ÉÉy z5
&IdDetalleMaestroComprobanteNotaCreditoÉÉz †
)ÉÉ† °
.ÉÉ° ¢
GroupByÉÉ¢ ©
(ÉÉ© ™
rÉÉ™ ´
=>ÉÉ¨ Æ
newÉÉØ ≤
{ÉÉ≥ ¥
rÉÉµ ∂
.ÉÉ∂ ∑#
id_tipo_comprobanteÉÉ∑  
,ÉÉ  À
rÉÉÃ Õ
.ÉÉÕ Œ
	es_propioÉÉŒ ◊
}ÉÉÿ Ÿ
)ÉÉŸ ⁄
.ÉÉ⁄ €
SelectÉÉ€ ·
(ÉÉ· ‚
rÉÉ‚ „
=>ÉÉ‰ Ê
rÉÉÁ Ë
.ÉÉË È
FirstOrDefaultÉÉÈ ˜
(ÉÉ˜ ¯
)ÉÉ¯ ˘
)ÉÉ˘ ˙
;ÉÉ˙ ˚
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
tipo
ÑÑ !
in
ÑÑ" $
	resultado
ÑÑ% .
)
ÑÑ. /
{
ÖÖ 
tipo
ÜÜ 
.
ÜÜ 
Detalle_maestro
ÜÜ (
.
ÜÜ( )
Serie_comprobante
ÜÜ) :
=
ÜÜ; <
tipo
ÜÜ= A
.
ÜÜA B
Detalle_maestro
ÜÜB Q
.
ÜÜQ R
Serie_comprobante
ÜÜR c
.
ÜÜc d
Where
ÜÜd i
(
ÜÜi j
sc
ÜÜj l
=>
ÜÜm o
sc
ÜÜp r
.
ÜÜr s
id_propietarioÜÜs Å
==ÜÜÇ Ñ 
idCentroAtencionÜÜÖ ï
&&ÜÜñ ò
scÜÜô õ
.ÜÜõ ú

es_vigenteÜÜú ¶
)ÜÜ¶ ß
.ÜÜß ®
ToListÜÜ® Æ
(ÜÜÆ Ø
)ÜÜØ ∞
;ÜÜ∞ ±
}
áá 
return
àà .
 TipoDeComprobanteParaTransaccion
àà 7
.
àà7 8
Convert
àà8 ?
(
àà? @
	resultado
àà@ I
.
ààI J
ToList
ààJ P
(
ààP Q
)
ààQ R
)
ààR S
;
ààS T
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ää  !
throw
ää" '
e
ää( )
;
ää) *
}
ää+ ,
}
ãã 	
private
éé 
Transaccion
éé (
GenerarNotaDeCreditoDebito
éé 6
(
éé6 7
int
éé7 :

idEmpleado
éé; E
,
ééE F
int
ééG J
idUnidadNegocio
ééK Z
,
ééZ [
bool
éé\ `
esPropio
ééa i
,
ééi j
int
éék n!
idSerieComprobanteééo Å
,ééÅ Ç
intééÉ Ü!
idTipoComprobanteééá ò
,ééò ô
intééö ù#
numeroDeComprobanteééû ±
,éé± ≤
stringéé≥ π(
numeroSerieDeComprobanteéé∫ “
,éé“ ”
DateTimeéé‘ ‹
fechaRegistroéé› Í
,ééÍ Î
stringééÏ Ú
sufijoCodigoééÛ ˇ
,ééˇ Ä
intééÅ Ñ!
idTipoTransaccionééÖ ñ
,ééñ ó
decimalééò ü
importeTotaléé† ¨
,éé¨ ≠
stringééÆ ¥
observacionééµ ¿
,éé¿ ¡
intéé¬ ≈
idProveedoréé∆ —
,éé— “
intéé” ÷ 
idCentroAtencionéé◊ Á
,ééÁ Ë&
UserProfileSessionDataééÈ ˇ
sesionDeUsuarioééÄ è
)ééè ê
{
èè 	
try
êê 
{
ëë 
int
íí 
idMoneda
íí 
=
íí 
MaestroSettings
íí .
.
íí. /
Default
íí/ 6
.
íí6 7)
IdDetalleMaestroMonedaSoles
íí7 R
;
ííR S
decimal
ìì 
tipoDeCambio
ìì $
=
ìì% &
sesionDeUsuario
ìì' 6
.
ìì6 7
TipoDeCambio
ìì7 C
.
ììC D

ValorVenta
ììD N
;
ììN O
	Operacion
ïï 
operacionGenerica
ïï +
=
ïï, -
new
ïï. 1
	Operacion
ïï2 ;
(
ïï; <$
transaccionRepositorio
ïï< R
.
ïïR S&
ObtenerUltimaTransaccion
ïïS k
(
ïïk l!
TransaccionSettings
ïïl 
.ïï Ä
DefaultïïÄ á
.ïïá à*
IdTipoTransaccionOperacionïïà ¢
)ïï¢ £
)ïï£ §
;ïï§ •
string
óó 
codigo
óó 
=
óó %
codigosOperacion_Logica
óó  7
.
óó7 83
%ObtenerSiguienteCodigoParaFacturacion
óó8 ]
(
óó] ^
sufijoCodigo
óó^ j
,
óój k
idTipoTransaccion
óól }
)
óó} ~
;
óó~ 
Comprobante
ôô 
comprobante
ôô '
=
ôô( ) 
GenerarComprobante
ôô* <
(
ôô< =
esPropio
ôô= E
,
ôôE F 
idSerieComprobante
ôôG Y
,
ôôY Z
idTipoComprobante
ôô[ l
,
ôôl m'
numeroSerieDeComprobanteôôn Ü
,ôôÜ á#
numeroDeComprobanteôôà õ
)ôôõ ú
;ôôú ù
Transaccion
õõ 
nota
õõ  
=
õõ! "
new
õõ# &
Transaccion
õõ' 2
(
õõ2 3
codigo
õõ3 9
,
õõ9 :
operacionGenerica
õõ; L
.
õõL M
Id
õõM O
,
õõO P
fechaRegistro
õõQ ^
,
õõ^ _
idTipoTransaccion
õõ` q
,
õõq r
idUnidadNegocioõõs Ç
,õõÇ É
trueõõÑ à
,õõà â
fechaRegistroõõä ó
,õõó ò
fechaRegistroõõô ¶
,õõ¶ ß
observacionõõ® ≥
,õõ≥ ¥
fechaRegistroõõµ ¬
,õõ¬ √

idEmpleadoõõƒ Œ
,õõŒ œ
importeTotalõõ– ‹
,õõ‹ › 
idCentroAtencionõõﬁ Ó
,õõÓ Ô
idMonedaõõ ¯
,õõ¯ ˘
tipoDeCambioõõ˙ Ü
,õõÜ á
nullõõà å
,õõå ç
idProveedorõõé ô
)õõô ö
{
úú 
Comprobante
ûû 
=
ûû  !
comprobante
ûû" -
}
üü 
;
üü 
return
†† 
nota
†† 
;
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
e
¢¢ 
)
¢¢ 
{
££ 
throw
§§ 
new
§§ 
LogicaException
§§ )
(
§§) *
$str
§§* K
,
§§K L
e
§§M N
)
§§N O
;
§§O P
}
•• 
}
¶¶ 	
private
©© 
Transaccion
©© -
GenerarOrdenNotaDeCreditoDebito
©© ;
(
©©; <
Transaccion
©©< G
	operacion
©©H Q
,
©©Q R
int
©©S V

idEmpleado
©©W a
,
©©a b
int
©©c f
idUnidadNegocio
©©g v
,
©©v w
int
©©x {

idTipoNota©©| Ü
,©©Ü á
DateTime©©à ê
fechaRegistro©©ë û
,©©û ü
string©©† ¶

modoDePago©©ß ±
,©©± ≤
string©©≥ π
sufijoCodigo©©∫ ∆
,©©∆ «
int©©» À"
idOrdenTransaccion©©Ã ﬁ
,©©ﬁ ﬂ
string©©‡ Ê
observacion©©Á Ú
,©©Ú Û
int©©Ù ˜
	idTercero©©¯ Å
,©©Å Ç
string©©É â
aliasTercero©©ä ñ
,©©ñ ó
int©©ò õ 
idCentroAtencion©©ú ¨
,©©¨ ≠
List©©Æ ≤
<©©≤ ≥#
Detalle_transaccion©©≥ ∆
>©©∆ «
detalles©©» –
,©©– —
int©©“ ’!
estadoTransaccion©©÷ Á
,©©Á Ë
string©©È Ô.
observacionEstadoTransacciones©© é
,©©é è
bool©©ê î
esIntegrado©©ï †
,©©† °
bool©©¢ ¶)
hayMovimientoDeMercaderia©©ß ¿
)©©¿ ¡
{
™™ 	
decimal
´´ 
descuentoGlobal
´´ #
=
´´$ %
$num
´´& '
,
´´' (
descuentoPorItem
´´) 9
=
´´: ;
$num
´´< =
,
´´= >
anticipo
´´? G
=
´´H I
$num
´´J K
,
´´K L
gravada
´´M T
=
´´U V
$num
´´W X
,
´´X Y
	exonerada
´´Z c
=
´´d e
$num
´´f g
,
´´g h
inafecta
´´i q
=
´´r s
$num
´´t u
,
´´u v
gratuita
´´w 
=´´Ä Å
$num´´Ç É
,´´É Ñ
igv´´Ö à
=´´â ä
$num´´ã å
,´´å ç
isc´´é ë
=´´í ì
$num´´î ï
,´´ï ñ
icbper´´ó ù
=´´û ü
$num´´† °
,´´° ¢
otrosCargos´´£ Æ
=´´Ø ∞
$num´´± ≤
,´´≤ ≥
otrosTributos´´¥ ¡
=´´¬ √
$num´´ƒ ≈
;´´≈ ∆
if
¨¨ 
(
¨¨ 
detalles
¨¨ 
.
¨¨ 
Sum
¨¨ 
(
¨¨ 
d
¨¨ 
=>
¨¨ !
d
¨¨" #
.
¨¨# $
igv
¨¨$ '
)
¨¨' (
>
¨¨) *
$num
¨¨+ ,
)
¨¨, -
{
≠≠ 
gravada
ÆÆ 
=
ÆÆ 
detalles
ÆÆ "
.
ÆÆ" #
Sum
ÆÆ# &
(
ÆÆ& '
d
ÆÆ' (
=>
ÆÆ) +
d
ÆÆ, -
.
ÆÆ- .
total
ÆÆ. 3
-
ÆÆ4 5
d
ÆÆ6 7
.
ÆÆ7 8
igv
ÆÆ8 ;
)
ÆÆ; <
;
ÆÆ< =
igv
ØØ 
=
ØØ 
detalles
ØØ 
.
ØØ 
Sum
ØØ "
(
ØØ" #
d
ØØ# $
=>
ØØ% '
d
ØØ( )
.
ØØ) *
igv
ØØ* -
)
ØØ- .
;
ØØ. /
}
∞∞ 
else
±± 
{
≤≤ 
	exonerada
≥≥ 
=
≥≥ 
detalles
≥≥ $
.
≥≥$ %
Sum
≥≥% (
(
≥≥( )
d
≥≥) *
=>
≥≥+ -
d
≥≥. /
.
≥≥/ 0
total
≥≥0 5
)
≥≥5 6
;
≥≥6 7
}
¥¥ 
Transaccion
∂∂ 
ordenDeNota
∂∂ #
=
∂∂$ %
new
∂∂& )
Transaccion
∂∂* 5
(
∂∂5 6%
codigosOperacion_Logica
∂∂6 M
.
∂∂M N3
%ObtenerSiguienteCodigoParaFacturacion
∂∂N s
(
∂∂s t
	operacion
∂∂t }
.
∂∂} ~
codigo∂∂~ Ñ
+∂∂Ö Ü
$str∂∂á ã
+∂∂å ç
sufijoCodigo∂∂é ö
,∂∂ö õ"
idOrdenTransaccion∂∂ú Æ
)∂∂Æ Ø
,∂∂Ø ∞
null∂∂± µ
,∂∂µ ∂
fechaRegistro∂∂∑ ƒ
,∂∂ƒ ≈"
idOrdenTransaccion∂∂∆ ÿ
,∂∂ÿ Ÿ
idUnidadNegocio∂∂⁄ È
,∂∂È Í
true∂∂Î Ô
,∂∂Ô 
fechaRegistro∂∂Ò ˛
,∂∂˛ ˇ
fechaRegistro∂∂Ä ç
,∂∂ç é
observacion∂∂è ö
,∂∂ö õ
fechaRegistro∂∂ú ©
,∂∂© ™

idEmpleado∂∂´ µ
,∂∂µ ∂
	operacion∂∂∑ ¿
.∂∂¿ ¡
importe_total∂∂¡ Œ
,∂∂Œ œ 
idCentroAtencion∂∂– ‡
,∂∂‡ ·
	operacion∂∂‚ Î
.∂∂Î Ï
	id_moneda∂∂Ï ı
,∂∂ı ˆ
	operacion∂∂˜ Ä
.∂∂Ä Å
tipo_cambio∂∂Å å
,∂∂å ç
null∂∂é í
,∂∂í ì
	idTercero∂∂î ù
,∂∂ù û
descuentoGlobal∂∂ü Æ
,∂∂Æ Ø 
descuentoPorItem∂∂∞ ¿
,∂∂¿ ¡
anticipo∂∂¬  
,∂∂  À
gravada∂∂Ã ”
,∂∂” ‘
	exonerada∂∂’ ﬁ
,∂∂ﬁ ﬂ
inafecta∂∂‡ Ë
,∂∂Ë È
gratuita∂∂Í Ú
,∂∂Ú Û
igv∂∂Ù ˜
,∂∂˜ ¯
isc∂∂˘ ¸
,∂∂¸ ˝
icbper∂∂˛ Ñ
,∂∂Ñ Ö
otrosCargos∂∂Ü ë
,∂∂ë í
otrosTributos∂∂ì †
)∂∂† °
{
∑∑ 
Comprobante
ππ 
=
ππ 
	operacion
ππ '
.
ππ' (
Comprobante
ππ( 3
}
∫∫ 
;
∫∫ 
ordenDeNota
ºº 
.
ºº 
AgregarDetalles
ºº '
(
ºº' (!
Detalle_transaccion
ºº( ;
.
ºº; <
Clone
ºº< A
(
ººA B
detalles
ººB J
)
ººJ K
)
ººK L
;
ººL M 
Estado_transaccion
ææ %
estadoDeLaOrdenDeCompra
ææ 6
=
ææ7 8
new
ææ9 < 
Estado_transaccion
ææ= O
(
ææO P

idEmpleado
ææP Z
,
ææZ [
estadoTransaccion
ææ\ m
,
ææm n
fechaRegistro
ææo |
,
ææ| }-
observacionEstadoTransaccionesææ~ ú
)ææú ù
;ææù û
ordenDeNota
øø 
.
øø  
Estado_transaccion
øø *
.
øø* +
Add
øø+ .
(
øø. /%
estadoDeLaOrdenDeCompra
øø/ F
)
øøF G
;
øøG H
ordenDeNota
¿¿ 
.
¿¿ #
Parametro_transaccion
¿¿ -
.
¿¿- .
Add
¿¿. 1
(
¿¿1 2
new
¿¿2 5#
Parametro_transaccion
¿¿6 K
(
¿¿K L
MaestroSettings
¿¿L [
.
¿¿[ \
Default
¿¿\ c
.
¿¿c d2
#IdDetalleMaestroParametroModoDePago¿¿d á
,¿¿á à

modoDePago¿¿â ì
)¿¿ì î
)¿¿î ï
;¿¿ï ñ
if
¡¡ 
(
¡¡ 
!
¡¡ 
esIntegrado
¡¡ 
&&
¡¡ '
hayMovimientoDeMercaderia
¡¡  9
)
¡¡9 :
{
¬¬ 
ordenDeNota
√√ 
.
√√ #
Parametro_transaccion
√√ 1
.
√√1 2
Add
√√2 5
(
√√5 6
new
√√6 9#
Parametro_transaccion
√√: O
(
√√O P
MaestroSettings
√√P _
.
√√_ `
Default
√√` g
.
√√g h?
0IdDetalleMaestroParametroEstadoEntregaMercaderia√√h ò
,√√ò ô
$str√√ö ù
)√√ù û
)√√û ü
;√√ü †
}
ƒƒ 
ordenDeNota
≈≈ 
.
≈≈ #
Parametro_transaccion
≈≈ -
.
≈≈- .
Add
≈≈. 1
(
≈≈1 2
new
≈≈2 5#
Parametro_transaccion
≈≈6 K
(
≈≈K L
MaestroSettings
≈≈L [
.
≈≈[ \
Default
≈≈\ c
.
≈≈c d>
/IdDetalleMaestroParametroCodigoTransaccionSunat≈≈d ì
,≈≈ì î"
maestroRepositorio≈≈ï ß
.≈≈ß ®
ObtenerDetalle≈≈® ∂
(≈≈∂ ∑

idTipoNota≈≈∑ ¡
)≈≈¡ ¬
.≈≈¬ √
codigo≈≈√ …
)≈≈…  
)≈≈  À
;≈≈À Ã
if
∆∆ 
(
∆∆ 
aliasTercero
∆∆ 
!=
∆∆ 
$str
∆∆  "
)
∆∆" #
{
«« 
ordenDeNota
»» 
.
»» #
Parametro_transaccion
»» 1
.
»»1 2
Add
»»2 5
(
»»5 6
new
»»6 9#
Parametro_transaccion
»»: O
(
»»O P
MaestroSettings
»»P _
.
»»_ `
Default
»»` g
.
»»g h4
%IdDetalleMaestroParametroAliasCliente»»h ç
,»»ç é
aliasTercero»»è õ
)»»õ ú
)»»ú ù
;»»ù û
}
…… 
return
   
ordenDeNota
   
;
   
}
ÀÀ 	
public
ÃÃ 
List
ÃÃ 
<
ÃÃ !
Detalle_transaccion
ÃÃ '
>
ÃÃ' (.
 CalcularDetalleNotaDebitoCredito
ÃÃ) I
(
ÃÃI J
List
ÃÃJ N
<
ÃÃN O 
DetalleOrdenDeNota
ÃÃO a
>
ÃÃa b
detallesDeNota
ÃÃc q
,
ÃÃq r
List
ÃÃs w
<
ÃÃw x"
Detalle_transaccionÃÃx ã
>ÃÃã å(
detallesDeOrdenOperacionÃÃç •
,ÃÃ• ¶
intÃÃß ™
idTipoDeNotaÃÃ´ ∑
,ÃÃ∑ ∏
stringÃÃπ ø
valorDeNotaÃÃ¿ À
,ÃÃÀ Ã
stringÃÃÕ ”
motivoÃÃ‘ ⁄
,ÃÃ⁄ €
boolÃÃ‹ ‡
gravaIgvÃÃ· È
)ÃÃÈ Í
{
ÕÕ 	
List
ŒŒ 
<
ŒŒ !
Detalle_transaccion
ŒŒ $
>
ŒŒ$ %
detalleResultado
ŒŒ& 6
=
ŒŒ7 8
new
ŒŒ9 <
List
ŒŒ= A
<
ŒŒA B!
Detalle_transaccion
ŒŒB U
>
ŒŒU V
(
ŒŒV W
)
ŒŒW X
;
ŒŒX Y
bool
œœ 
calcularIgv
œœ 
=
œœ 
idTipoDeNota
œœ +
==
œœ, .
MaestroSettings
œœ/ >
.
œœ> ?
Default
œœ? F
.
œœF GE
7IdDetalleMaestroNotaDeCreditoElectronicaDescuentoGlobal
œœG ~
||œœ Å
idTipoDeNotaœœÇ é
==œœè ë
MaestroSettingsœœí °
.œœ° ¢
Defaultœœ¢ ©
.œœ© ™H
8IdDetalleMaestroNotaDeCreditoElectronicaDescuentoPorItemœœ™ ‚
||œœ„ Â
idTipoDeNotaœœÊ Ú
==œœÛ ı
MaestroSettingsœœˆ Ö
.œœÖ Ü
DefaultœœÜ ç
.œœç éI
9IdDetalleMaestroNotaDeCreditoElectronicaDevolucionPorItemœœé «
||œœ»  
idTipoDeNotaœœÀ ◊
==œœÿ ⁄
MaestroSettingsœœ€ Í
.œœÍ Î
DefaultœœÎ Ú
.œœÚ ÛG
7IdDetalleMaestroNotaDeDebitoElectronicaInteresesPorMoraœœÛ ™
||œœ´ ≠
idTipoDeNotaœœÆ ∫
==œœª Ω
MaestroSettingsœœæ Õ
.œœÕ Œ
DefaultœœŒ ’
.œœ’ ÷G
7IdDetalleMaestroNotaDeDebitoElectronicaAumentoEnElValorœœ÷ ç
;œœç é
if
““ 
(
““ 
idTipoDeNota
““ 
==
““ 
MaestroSettings
““  /
.
““/ 0
Default
““0 7
.
““7 8L
>IdDetalleMaestroNotaDeCreditoElectronicaAnulacionDeLaOperacion
““8 v
||
““w y
idTipoDeNota““z Ü
==““á â
MaestroSettings““ä ô
.““ô ö
Default““ö °
.““° ¢G
7IdDetalleMaestroNotaDeCreditoElectronicaDevolucionTotal““¢ Ÿ
)““Ÿ ⁄
{
”” 
detalleResultado
‘‘  
=
‘‘! "&
detallesDeOrdenOperacion
‘‘# ;
;
‘‘; <
}
’’ 
else
◊◊ 
if
◊◊ 
(
◊◊ 
idTipoDeNota
◊◊ !
==
◊◊" $
MaestroSettings
◊◊% 4
.
◊◊4 5
Default
◊◊5 <
.
◊◊< =N
@IdDetalleMaestroNotaDeCreditoElectronicaAnulacionPorErrorEnElRuc
◊◊= }
)
◊◊} ~
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
LogicaException
ŸŸ )
(
ŸŸ) *
$str
ŸŸ* q
)
ŸŸq r
;
ŸŸr s
}
€€ 
else
›› 
if
›› 
(
›› 
idTipoDeNota
›› !
==
››" $
MaestroSettings
››% 4
.
››4 5
Default
››5 <
.
››< =E
7IdDetalleMaestroNotaDeCreditoElectronicaDescuentoGlobal
››= t
)
››t u
{
ﬁﬁ 
detalleResultado
ﬂﬂ  
=
ﬂﬂ! "
new
ﬂﬂ# &
List
ﬂﬂ' +
<
ﬂﬂ+ ,!
Detalle_transaccion
ﬂﬂ, ?
>
ﬂﬂ? @
(
ﬂﬂ@ A
)
ﬂﬂA B
{
ﬂﬂC D
new
ﬂﬂE H!
Detalle_transaccion
ﬂﬂI \
(
ﬂﬂ\ ]
$num
ﬂﬂ] ^
,
ﬂﬂ^ _
ConceptoSettings
ﬂﬂ` p
.
ﬂﬂp q
Default
ﬂﬂq x
.
ﬂﬂx y/
 IdConceptoNegocioDescuentoGlobalﬂﬂy ô
,ﬂﬂô ö
motivoﬂﬂõ °
,ﬂﬂ° ¢
Decimalﬂﬂ£ ™
.ﬂﬂ™ ´
Parseﬂﬂ´ ∞
(ﬂﬂ∞ ±
valorDeNotaﬂﬂ± º
)ﬂﬂº Ω
,ﬂﬂΩ æ
Decimalﬂﬂø ∆
.ﬂﬂ∆ «
Parseﬂﬂ« Ã
(ﬂﬂÃ Õ
valorDeNotaﬂﬂÕ ÿ
)ﬂﬂÿ Ÿ
,ﬂﬂŸ ⁄
nullﬂﬂ€ ﬂ
,ﬂﬂﬂ ‡
$numﬂﬂ· ‚
,ﬂﬂ‚ „
nullﬂﬂ‰ Ë
,ﬂﬂË È
nullﬂﬂÍ Ó
,ﬂﬂÓ Ô
$numﬂﬂ Ò
,ﬂﬂÒ Ú
$numﬂﬂÛ Ù
,ﬂﬂÙ ı
$numﬂﬂˆ ˜
,ﬂﬂ˜ ¯
nullﬂﬂ˘ ˝
,ﬂﬂ˝ ˛
nullﬂﬂˇ É
,ﬂﬂÉ Ñ
nullﬂﬂÖ â
)ﬂﬂâ ä
}ﬂﬂã å
;ﬂﬂå ç
}
‡‡ 
else
‚‚ 
if
‚‚ 
(
‚‚ 
idTipoDeNota
‚‚ !
==
‚‚" $
MaestroSettings
‚‚% 4
.
‚‚4 5
Default
‚‚5 <
.
‚‚< =X
IIdDetalleMaestroNotaDeCreditoElectronicaCorreccionPorErrorEnLaDescripcion‚‚= Ü
)‚‚Ü á
{
„„ 
throw
‰‰ 
new
‰‰ 
LogicaException
‰‰ )
(
‰‰) *
$str
‰‰* y
)
‰‰y z
;
‰‰z {
}
ÊÊ 
else
ËË 
if
ËË 
(
ËË 
idTipoDeNota
ËË !
==
ËË" $
MaestroSettings
ËË% 4
.
ËË4 5
Default
ËË5 <
.
ËË< =F
8IdDetalleMaestroNotaDeCreditoElectronicaDescuentoPorItem
ËË= u
)
ËËu v
{
ÈÈ 
detalleResultado
ÍÍ  
=
ÍÍ! "
detallesDeNota
ÍÍ# 1
.
ÍÍ1 2
Where
ÍÍ2 7
(
ÍÍ7 8
d
ÍÍ8 9
=>
ÍÍ: <
d
ÍÍ= >
.
ÍÍ> ?
MontoDetalle
ÍÍ? K
!=
ÍÍL N
$num
ÍÍO P
)
ÍÍP Q
.
ÍÍQ R
Select
ÍÍR X
(
ÍÍX Y
d
ÍÍY Z
=>
ÍÍ[ ]
{
ÍÍ^ _
d
ÍÍ` a
.
ÍÍa b
PrecioUnitario
ÍÍb p
=
ÍÍq r
d
ÍÍs t
.
ÍÍt u
MontoDetalleÍÍu Å
/ÍÍÇ É
dÍÍÑ Ö
.ÍÍÖ Ü
CantidadÍÍÜ é
;ÍÍé è
dÍÍê ë
.ÍÍë í
ImporteÍÍí ô
=ÍÍö õ
dÍÍù û
.ÍÍû ü
MontoDetalleÍÍü ´
;ÍÍ´ ¨
returnÍÍ≠ ≥
dÍÍ¥ µ
;ÍÍµ ∂
}ÍÍ∑ ∏
)ÍÍ∏ π
.ÍÍπ ∫
SelectÍÍ∫ ¿
(ÍÍ¿ ¡
dÍÍ¡ ¬
=>ÍÍ√ ≈
dÍÍ∆ «
.ÍÍ« »"
DetalleTransaccionÍÍ» ⁄
(ÍÍ⁄ €
)ÍÍ€ ‹
)ÍÍ‹ ›
.ÍÍ› ﬁ
ToListÍÍﬁ ‰
(ÍÍ‰ Â
)ÍÍÂ Ê
;ÍÍÊ Á
}
ÎÎ 
else
ÌÌ 
if
ÌÌ 
(
ÌÌ 
idTipoDeNota
ÌÌ !
==
ÌÌ" $
MaestroSettings
ÌÌ% 4
.
ÌÌ4 5
Default
ÌÌ5 <
.
ÌÌ< =G
9IdDetalleMaestroNotaDeCreditoElectronicaDevolucionPorItem
ÌÌ= v
)
ÌÌv w
{
ÓÓ 
detalleResultado
ÔÔ  
=
ÔÔ! "
detallesDeNota
ÔÔ# 1
.
ÔÔ1 2
Where
ÔÔ2 7
(
ÔÔ7 8
d
ÔÔ8 9
=>
ÔÔ: <
d
ÔÔ= >
.
ÔÔ> ?
MontoDetalle
ÔÔ? K
!=
ÔÔL N
$num
ÔÔO P
)
ÔÔP Q
.
ÔÔQ R
Select
ÔÔR X
(
ÔÔX Y
d
ÔÔY Z
=>
ÔÔ[ ]
{
ÔÔ^ _
d
ÔÔ` a
.
ÔÔa b
Cantidad
ÔÔb j
=
ÔÔk l
d
ÔÔm n
.
ÔÔn o
MontoDetalle
ÔÔo {
;
ÔÔ{ |
d
ÔÔ} ~
.
ÔÔ~ 
ImporteÔÔ Ü
=ÔÔá à
MathÔÔâ ç
.ÔÔç é
RoundÔÔé ì
(ÔÔì î
dÔÔî ï
.ÔÔï ñ
MontoDetalleÔÔñ ¢
*ÔÔ£ §
dÔÔ• ¶
.ÔÔ¶ ß
PrecioUnitarioÔÔß µ
,ÔÔµ ∂
$numÔÔ∑ ∏
)ÔÔ∏ π
;ÔÔπ ∫
returnÔÔª ¡
dÔÔ¬ √
;ÔÔ√ ƒ
}ÔÔ≈ ∆
)ÔÔ∆ «
.ÔÔ« »
SelectÔÔ» Œ
(ÔÔŒ œ
dÔÔœ –
=>ÔÔ— ”
dÔÔ‘ ’
.ÔÔ’ ÷"
DetalleTransaccionÔÔ÷ Ë
(ÔÔË È
)ÔÔÈ Í
)ÔÔÍ Î
.ÔÔÎ Ï
ToListÔÔÏ Ú
(ÔÔÚ Û
)ÔÔÛ Ù
;ÔÔÙ ı
}
 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ 
idTipoDeNota
ÛÛ !
==
ÛÛ" $
MaestroSettings
ÛÛ% 4
.
ÛÛ4 5
Default
ÛÛ5 <
.
ÛÛ< =E
7IdDetalleMaestroNotaDeDebitoElectronicaInteresesPorMora
ÛÛ= t
)
ÛÛt u
{
ÙÙ 
detalleResultado
ıı  
=
ıı! "
new
ıı# &
List
ıı' +
<
ıı+ ,!
Detalle_transaccion
ıı, ?
>
ıı? @
(
ıı@ A
)
ııA B
{
ııC D
new
ııE H!
Detalle_transaccion
ııI \
(
ıı\ ]
$num
ıı] ^
,
ıı^ _
ConceptoSettings
ıı` p
.
ııp q
Default
ııq x
.
ııx y.
IdConceptoNegocioInteresPorMoraııy ò
,ııò ô
motivoııö †
,ıı† °
decimalıı¢ ©
.ıı© ™
Parseıı™ Ø
(ııØ ∞
valorDeNotaıı∞ ª
)ııª º
,ııº Ω
decimalııæ ≈
.ıı≈ ∆
Parseıı∆ À
(ııÀ Ã
valorDeNotaııÃ ◊
)ıı◊ ÿ
,ııÿ Ÿ
nullıı⁄ ﬁ
,ııﬁ ﬂ
$numıı‡ ·
,ıı· ‚
nullıı„ Á
,ııÁ Ë
nullııÈ Ì
,ııÌ Ó
$numııÔ 
,ıı Ò
$numııÚ Û
,ııÛ Ù
$numııı ˆ
,ııˆ ˜
nullıı¯ ¸
,ıı¸ ˝
nullıı˛ Ç
,ııÇ É
nullııÑ à
)ııà â
}ııä ã
;ııã å
}
ˆˆ 
else
¯¯ 
if
¯¯ 
(
¯¯ 
idTipoDeNota
¯¯ !
==
¯¯" $
MaestroSettings
¯¯% 4
.
¯¯4 5
Default
¯¯5 <
.
¯¯< =E
7IdDetalleMaestroNotaDeDebitoElectronicaAumentoEnElValor
¯¯= t
)
¯¯t u
{
˘˘ 
detalleResultado
˙˙  
=
˙˙! "
detallesDeNota
˙˙# 1
.
˙˙1 2
Where
˙˙2 7
(
˙˙7 8
d
˙˙8 9
=>
˙˙: <
d
˙˙= >
.
˙˙> ?
MontoDetalle
˙˙? K
!=
˙˙L N
$num
˙˙O P
)
˙˙P Q
.
˙˙Q R
Select
˙˙R X
(
˙˙X Y
d
˙˙Y Z
=>
˙˙[ ]
{
˙˙^ _
d
˙˙` a
.
˙˙a b
PrecioUnitario
˙˙b p
=
˙˙q r
d
˙˙s t
.
˙˙t u
MontoDetalle˙˙u Å
/˙˙Ç É
d˙˙Ñ Ö
.˙˙Ö Ü
Cantidad˙˙Ü é
;˙˙é è
d˙˙ê ë
.˙˙ë í
Importe˙˙í ô
=˙˙ö õ
d˙˙ú ù
.˙˙ù û
MontoDetalle˙˙û ™
;˙˙™ ´
return˙˙¨ ≤
d˙˙≥ ¥
;˙˙¥ µ
}˙˙∂ ∑
)˙˙∑ ∏
.˙˙∏ π
Select˙˙π ø
(˙˙ø ¿
d˙˙¿ ¡
=>˙˙¬ ƒ
d˙˙≈ ∆
.˙˙∆ «"
DetalleTransaccion˙˙« Ÿ
(˙˙Ÿ ⁄
)˙˙⁄ €
)˙˙€ ‹
.˙˙‹ ›
ToList˙˙› „
(˙˙„ ‰
)˙˙‰ Â
;˙˙Â Ê
}
˚˚ 
if
˝˝ 
(
˝˝ 
calcularIgv
˝˝ 
&&
˝˝ 
gravaIgv
˝˝ '
)
˝˝' (
{
˛˛ 
detalleResultado
ˇˇ  
.
ˇˇ  !
ForEach
ˇˇ! (
(
ˇˇ( )
d
ˇˇ) *
=>
ˇˇ+ -
d
ˇˇ. /
.
ˇˇ/ 0
igv
ˇˇ0 3
=
ˇˇ4 5
Decimal
ˇˇ6 =
.
ˇˇ= >
Round
ˇˇ> C
(
ˇˇC D
d
ˇˇD E
.
ˇˇE F
total
ˇˇF K
-
ˇˇL M
(
ˇˇN O
d
ˇˇO P
.
ˇˇP Q
total
ˇˇQ V
/
ˇˇW X
(
ˇˇY Z
$num
ˇˇZ [
+
ˇˇ\ ]!
TransaccionSettings
ˇˇ^ q
.
ˇˇq r
Default
ˇˇr y
.
ˇˇy z
TasaIGVˇˇz Å
)ˇˇÅ Ç
)ˇˇÇ É
,ˇˇÉ Ñ
$numˇˇÖ Ü
)ˇˇÜ á
)ˇˇá à
;ˇˇà â
}
ÄÄ 
return
ÅÅ 
detalleResultado
ÅÅ #
;
ÅÅ# $
}
ÇÇ 	
private
ÑÑ 
Transaccion
ÑÑ .
 GenerarPagoPorNotaCreditoODebito
ÑÑ <
(
ÑÑ< =
Transaccion
ÑÑ= H
	ordenNota
ÑÑI R
,
ÑÑR S
string
ÑÑT Z

codigoPago
ÑÑ[ e
,
ÑÑe f
decimal
ÑÑg n
	totalPago
ÑÑo x
,
ÑÑx y
int
ÑÑz }

idEmpleadoÑÑ~ à
,ÑÑà â
DateTimeÑÑä í
fechaDePagoÑÑì û
,ÑÑû ü
stringÑÑ† ¶
observacionÑÑß ≤
,ÑÑ≤ ≥
intÑÑ¥ ∑ 
idCentroAtencionÑÑ∏ »
,ÑÑ» …
intÑÑ  Õ!
estadoTransaccionÑÑŒ ﬂ
,ÑÑﬂ ‡
stringÑÑ· Á.
observacionEstadoTransaccionesÑÑË Ü
)ÑÑÜ á
{
ÖÖ 	
int
ÜÜ #
idTipoTransaccionPago
ÜÜ %
=
ÜÜ& '
Diccionario
ÜÜ( 3
.
ÜÜ3 4-
MapeoOrdenVsMovimientoEconomico
ÜÜ4 S
.
ÜÜS T
Single
ÜÜT Z
(
ÜÜZ [
m
ÜÜ[ \
=>
ÜÜ] _
m
ÜÜ` a
.
ÜÜa b
Key
ÜÜb e
==
ÜÜf h
	ordenNota
ÜÜi r
.
ÜÜr s"
id_tipo_transaccionÜÜs Ü
)ÜÜÜ á
.ÜÜá à
ValueÜÜà ç
;ÜÜç é
Transaccion
áá 
pago
áá 
=
áá 
new
áá "
Transaccion
áá# .
(
áá. /

codigoPago
áá/ 9
,
áá9 :
null
áá; ?
,
áá? @
fechaDePago
ááA L
,
ááL M#
idTipoTransaccionPago
ááN c
,
áác d
	ordenNota
ááe n
.
áán o 
id_unidad_negocioááo Ä
,ááÄ Å
trueááÇ Ü
,ááÜ á
fechaDePagoááà ì
,ááì î
fechaDePagoááï †
,áá† °
observacionáá¢ ≠
,áá≠ Æ
fechaDePagoááØ ∫
,áá∫ ª

idEmpleadoááº ∆
,áá∆ «
	totalPagoáá» —
,áá— “ 
idCentroAtencionáá” „
,áá„ ‰
	ordenNotaááÂ Ó
.ááÓ Ô
	id_monedaááÔ ¯
,áá¯ ˘
	ordenNotaáá˙ É
.ááÉ Ñ
tipo_cambioááÑ è
,ááè ê
nullááë ï
,ááï ñ
	ordenNotaááó †
.áá† °(
id_actor_negocio_externoáá° π
)ááπ ∫
;áá∫ ª
pago
àà 
.
àà 
Comprobante
àà 
=
àà 
	ordenNota
àà (
.
àà( )
Comprobante
àà) 4
;
àà4 5
pago
ââ 
.
ââ 

Traza_pago
ââ 
.
ââ 
Add
ââ 
(
ââ  
new
ââ  #

Traza_pago
ââ$ .
(
ââ. /
MaestroSettings
ââ/ >
.
ââ> ?
Default
ââ? F
.
ââF G1
#IdDetalleMaestroMedioDepagoEfectivo
ââG j
,
ââj k
$str
ââl z
,
ââz {
MaestroSettingsââ| ã
.ââã å
Defaultââå ì
.ââì î9
)IdDetalleMaestroEntidadBancariaPorDefectoââî Ω
)ââΩ æ
)ââæ ø
;ââø ¿
pago
ää 
.
ää  
Estado_transaccion
ää #
.
ää# $
Add
ää$ '
(
ää' (
new
ää( + 
Estado_transaccion
ää, >
(
ää> ?

idEmpleado
ää? I
,
ääI J
estadoTransaccion
ääK \
,
ää\ ]
fechaDePago
ää^ i
,
ääi j-
observacionEstadoTransaccionesääk â
)ääâ ä
)äää ã
;ääã å
return
ãã 
pago
ãã 
;
ãã 
}
åå 	
public
êê 
void
êê "
ResolverComprobantes
êê (
(
êê( )
List
êê) -
<
êê- .%
OperacionIntegradaSerie
êê. E
>
êêE F
operaciones
êêG R
)
êêR S
{
ëë 	
foreach
íí 
(
íí 
var
íí 
idSerieUnica
íí %
in
íí& (
operaciones
íí) 4
.
íí4 5
Select
íí5 ;
(
íí; <
vis
íí< ?
=>
íí@ B
vis
ííC F
.
ííF G 
IdSerieComprobante
ííG Y
)
ííY Z
.
ííZ [
Distinct
íí[ c
(
ííc d
)
ííd e
)
ííe f
{
ìì 
Serie_comprobante
îî !
serie
îî" '
=
îî( )$
transaccionRepositorio
îî* @
.
îî@ A'
ObtenerSerieDeComprobante
îîA Z
(
îîZ [
idSerieUnica
îî[ g
)
îîg h
;
îîh i$
transaccionRepositorio
ïï &
.
ïï& ''
MarcarSerieComoModificada
ïï' @
(
ïï@ A
serie
ïïA F
)
ïïF G
;
ïïG H
foreach
ññ 
(
ññ 
var
ññ 
	operacion
ññ &
in
ññ' )
operaciones
ññ* 5
)
ññ5 6
{
óó 
if
òò 
(
òò 
	operacion
òò !
.
òò! " 
IdSerieComprobante
òò" 4
==
òò5 7
serie
òò8 =
.
òò= >
id
òò> @
)
òò@ A
{
ôô 
Comprobante
öö #
comprobante
öö$ /
=
öö0 13
%GenerarComprobantePropioAutonumerable
öö2 W
(
ööW X
serie
ööX ]
)
öö] ^
;
öö^ _
	operacion
õõ !
.
õõ! " 
OperacionIntegrada
õõ" 4
.
õõ4 5 
AsignarComprobante
õõ5 G
(
õõG H
comprobante
õõH S
)
õõS T
;
õõT U
}
úú 
}
ùù 
}
ûû 
}
üü 	
public
°° 
void
°° "
ResolverComprobantes
°° (
(
°°( )
List
°°) -
<
°°- . 
OperacionIntegrada
°°. @
>
°°@ A
operaciones
°°B M
)
°°M N
{
¢¢ 	
foreach
££ 
(
££ 
var
££ 
idSerie
££  
in
££! #
operaciones
££$ /
.
££/ 0
Select
££0 6
(
££6 7
o
££7 8
=>
££9 ;
(
££< =
int
££= @
)
££@ A
o
££A B
.
££B C
OrdenDeOperacion
££C S
.
££S T
Comprobante
££T _
.
££_ `"
id_serie_comprobante
££` t
)
££t u
.
££u v
Distinct
££v ~
(
££~ 
)££ Ä
)££Ä Å
{
§§ 
Serie_comprobante
•• !
serie
••" '
=
••( )$
transaccionRepositorio
••* @
.
••@ A'
ObtenerSerieDeComprobante
••A Z
(
••Z [
idSerie
••[ b
)
••b c
;
••c d$
transaccionRepositorio
¶¶ &
.
¶¶& ''
MarcarSerieComoModificada
¶¶' @
(
¶¶@ A
serie
¶¶A F
)
¶¶F G
;
¶¶G H
foreach
ßß 
(
ßß 
var
ßß 
	operacion
ßß &
in
ßß' )
operaciones
ßß* 5
.
ßß5 6
Where
ßß6 ;
(
ßß; <
o
ßß< =
=>
ßß> @
o
ßßA B
.
ßßB C
OrdenDeOperacion
ßßC S
.
ßßS T
Comprobante
ßßT _
.
ßß_ `"
id_serie_comprobante
ßß` t
==
ßßu w
serie
ßßx }
.
ßß} ~
idßß~ Ä
)ßßÄ Å
)ßßÅ Ç
{
®® 
	operacion
©© 
.
©© #
ReemplazarComprobante
©© 3
(
©©3 43
%GenerarComprobantePropioAutonumerable
©©4 Y
(
©©Y Z
serie
©©Z _
)
©©_ `
)
©©` a
;
©©a b
}
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
public
ÆÆ 
Comprobante
ÆÆ  
GenerarComprobante
ÆÆ -
(
ÆÆ- .
bool
ÆÆ. 2
esPropio
ÆÆ3 ;
,
ÆÆ; <
int
ÆÆ= @ 
idSerieComprobante
ÆÆA S
,
ÆÆS T
int
ÆÆU X
idTipoComprobante
ÆÆY j
,
ÆÆj k
string
ÆÆl r'
numeroSerieDeComprobanteÆÆs ã
,ÆÆã å
intÆÆç ê#
numeroDeComprobanteÆÆë §
)ÆÆ§ •
{
ØØ 	
Comprobante
∞∞ 
comprobante
∞∞ #
;
∞∞# $
if
±± 
(
±± 
esPropio
±± 
)
±± 
{
≤≤ 
comprobante
≥≥ 
=
≥≥ &
GenerarComprobantePropio
≥≥ 6
(
≥≥6 7 
idSerieComprobante
≥≥7 I
,
≥≥I J!
numeroDeComprobante
≥≥K ^
)
≥≥^ _
;
≥≥_ `
}
¥¥ 
else
µµ 
{
∂∂ 
comprobante
∑∑ 
=
∑∑ (
GenerarComprobanteNoPropio
∑∑ 8
(
∑∑8 9
idTipoComprobante
∑∑9 J
,
∑∑J K&
numeroSerieDeComprobante
∑∑L d
,
∑∑d e!
numeroDeComprobante
∑∑f y
)
∑∑y z
;
∑∑z {
}
∏∏ 
return
ππ 
comprobante
ππ 
;
ππ 
}
∫∫ 	
public
ºº 
Comprobante
ºº &
GenerarComprobantePropio
ºº 3
(
ºº3 4
int
ºº4 7 
idSerieComprobante
ºº8 J
,
ººJ K
int
ººL O!
numeroDeComprobante
ººP c
)
ººc d
{
ΩΩ 	
Serie_comprobante
ææ 
serie
ææ #
=
ææ$ %$
transaccionRepositorio
ææ& <
.
ææ< ='
ObtenerSerieDeComprobante
ææ= V
(
ææV W 
idSerieComprobante
ææW i
)
ææi j
;
ææj k
Comprobante
øø 
comprobante
øø #
;
øø# $
if
¿¿ 
(
¿¿ 
serie
¿¿ 
.
¿¿ 
es_autonumerable
¿¿ &
)
¿¿& '
{
¡¡ 
comprobante
¬¬ 
=
¬¬ N
@GenerarComprobantePropioAutonumerableMarcandoSerieComoModificada
¬¬ ^
(
¬¬^ _
serie
¬¬_ d
)
¬¬d e
;
¬¬e f
}
√√ 
else
ƒƒ 
{
≈≈ 
comprobante
∆∆ 
=
∆∆ 5
'GenerarComprobantePropioNoAutonumerable
∆∆ E
(
∆∆E F
serie
∆∆F K
,
∆∆K L!
numeroDeComprobante
∆∆M `
)
∆∆` a
;
∆∆a b
}
«« 
return
»» 
comprobante
»» 
;
»» 
}
…… 	
public
ÀÀ 
Comprobante
ÀÀ 3
%GenerarComprobantePropioAutonumerable
ÀÀ @
(
ÀÀ@ A
int
ÀÀA D 
idSerieComprobante
ÀÀE W
)
ÀÀW X
{
ÃÃ 	
Serie_comprobante
ÕÕ 
serie
ÕÕ #
=
ÕÕ$ %$
transaccionRepositorio
ÕÕ& <
.
ÕÕ< ='
ObtenerSerieDeComprobante
ÕÕ= V
(
ÕÕV W 
idSerieComprobante
ÕÕW i
)
ÕÕi j
;
ÕÕj k
return
ŒŒ N
@GenerarComprobantePropioAutonumerableMarcandoSerieComoModificada
ŒŒ S
(
ŒŒS T
serie
ŒŒT Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 	
public
—— 
Comprobante
—— N
@GenerarComprobantePropioAutonumerableMarcandoSerieComoModificada
—— [
(
——[ \
Serie_comprobante
——\ m
serie
——n s
)
——s t
{
““ 	
Comprobante
”” 
comprobante
”” #
=
””$ %3
%GenerarComprobantePropioAutonumerable
””& K
(
””K L
serie
””L Q
)
””Q R
;
””R S$
transaccionRepositorio
‘‘ "
.
‘‘" #'
MarcarSerieComoModificada
‘‘# <
(
‘‘< =
serie
‘‘= B
)
‘‘B C
;
‘‘C D
return
’’ 
comprobante
’’ 
;
’’ 
}
÷÷ 	
public
ÿÿ 
void
ÿÿ :
,AutoIncrementarSerieMarcandolaComoModificada
ÿÿ @
(
ÿÿ@ A
Serie_comprobante
ÿÿA R
serie
ÿÿS X
)
ÿÿX Y
{
ŸŸ 	
serie
⁄⁄ 
.
⁄⁄ 
proximo_numero
⁄⁄  
++
⁄⁄  "
;
⁄⁄" #$
transaccionRepositorio
€€ "
.
€€" #'
MarcarSerieComoModificada
€€# <
(
€€< =
serie
€€= B
)
€€B C
;
€€C D
}
‹‹ 	
public
ﬁﬁ 
Comprobante
ﬁﬁ 3
%GenerarComprobantePropioAutonumerable
ﬁﬁ @
(
ﬁﬁ@ A
Serie_comprobante
ﬁﬁA R
serie
ﬁﬁS X
)
ﬁﬁX Y
{
ﬂﬂ 	
Comprobante
‡‡ 
comprobante
‡‡ #
=
‡‡$ %
new
‡‡& )
Comprobante
‡‡* 5
(
‡‡5 6
serie
‡‡6 ;
.
‡‡; <!
id_tipo_comprobante
‡‡< O
,
‡‡O P
serie
‡‡Q V
.
‡‡V W
id
‡‡W Y
,
‡‡Y Z
serie
‡‡[ `
.
‡‡` a
proximo_numero
‡‡a o
,
‡‡o p
true
‡‡q u
,
‡‡u v
serie
‡‡w |
.
‡‡| }
numero‡‡} É
)‡‡É Ñ
;‡‡Ñ Ö
serie
·· 
.
·· 
proximo_numero
··  
++
··  "
;
··" #
return
‚‚ 
comprobante
‚‚ 
;
‚‚ 
}
„„ 	
public
ÂÂ 
Comprobante
ÂÂ 5
'GenerarComprobantePropioNoAutonumerable
ÂÂ B
(
ÂÂB C
Serie_comprobante
ÂÂC T
serie
ÂÂU Z
,
ÂÂZ [
int
ÂÂ\ _!
numeroDeComprobante
ÂÂ` s
)
ÂÂs t
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ !
numeroDeComprobante
ÁÁ #
<=
ÁÁ$ &
$num
ÁÁ' (
)
ÁÁ( )
throw
ÁÁ* /
new
ÁÁ0 3
LogicaException
ÁÁ4 C
(
ÁÁC D
$str
ÁÁD t
)
ÁÁt u
;
ÁÁu v
Comprobante
ËË 
comprobante
ËË #
=
ËË$ %
new
ËË& )
Comprobante
ËË* 5
(
ËË5 6
serie
ËË6 ;
.
ËË; <!
id_tipo_comprobante
ËË< O
,
ËËO P
serie
ËËQ V
.
ËËV W
id
ËËW Y
,
ËËY Z!
numeroDeComprobante
ËË[ n
,
ËËn o
true
ËËp t
,
ËËt u
serie
ËËv {
.
ËË{ |
numeroËË| Ç
)ËËÇ É
;ËËÉ Ñ
return
ÈÈ 
comprobante
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
Comprobante
ÏÏ (
GenerarComprobanteNoPropio
ÏÏ 5
(
ÏÏ5 6
int
ÏÏ6 9
idTipoComprobante
ÏÏ: K
,
ÏÏK L
string
ÏÏM S&
numeroSerieDeComprobante
ÏÏT l
,
ÏÏl m
int
ÏÏn q"
numeroDeComprobanteÏÏr Ö
)ÏÏÖ Ü
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ !
numeroDeComprobante
ÓÓ #
<=
ÓÓ$ &
$num
ÓÓ' (
)
ÓÓ( )
throw
ÓÓ* /
new
ÓÓ0 3
LogicaException
ÓÓ4 C
(
ÓÓC D
$str
ÓÓD t
)
ÓÓt u
;
ÓÓu v
if
ÔÔ 
(
ÔÔ 
string
ÔÔ 
.
ÔÔ 
IsNullOrEmpty
ÔÔ $
(
ÔÔ$ %&
numeroSerieDeComprobante
ÔÔ% =
)
ÔÔ= >
)
ÔÔ> ?
throw
ÔÔ@ E
new
ÔÔF I
LogicaException
ÔÔJ Y
(
ÔÔY Z
$strÔÔZ ì
)ÔÔì î
;ÔÔî ï
Comprobante
 
comprobante
 #
=
$ %
new
& )
Comprobante
* 5
(
5 6
idTipoComprobante
6 G
,
G H
null
I M
,
M N!
numeroDeComprobante
O b
,
b c
true
d h
,
h i'
numeroSerieDeComprobantej Ç
)Ç É
;É Ñ
return
ÒÒ 
comprobante
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
public
ÙÙ 
	Operacion
ÙÙ /
!ObtenerOperacionSesionContenedora
ÙÙ :
(
ÙÙ: ;
int
ÙÙ; >
idCentroAtencion
ÙÙ? O
)
ÙÙO P
{
ıı 	
return
ˆˆ 
new
ˆˆ 
	Operacion
ˆˆ  
(
ˆˆ  !$
transaccionRepositorio
ˆˆ! 7
.
ˆˆ7 8&
ObtenerUltimaTransaccion
ˆˆ8 P
(
ˆˆP Q!
TransaccionSettings
ˆˆQ d
.
ˆˆd e
Default
ˆˆe l
.
ˆˆl m)
IdTipoTransaccionOperacionˆˆm á
)ˆˆá à
)ˆˆà â
;ˆˆâ ä
}
˜˜ 	
}
ââ 
}ää ≠∆
@D:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\PrecioLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

class 
PrecioLogica 
: 
IPrecioLogica  -
{ 
private 
readonly 
IPrecioRepositorio +
_precioRepositorio, >
;> ?
public 
PrecioLogica 
( 
IPrecioRepositorio .
precioRepositorio/ @
)@ A
{ 	
_precioRepositorio 
=  
precioRepositorio! 2
;2 3
} 	
public 
OperationResult 
actualizarPrecio /
(/ 0
int0 3
idCentroAttencion4 E
,E F
intF I
idPrecioJ R
,R S
intT W

idProductoX b
,b c
intd g
idTarifah p
,p q
decimalr y
importe	z Å
,
Å Ç
DateTime
É ã

fechaDesde
å ñ
,
ñ ó
DateTime
ò †

fechaHasta
° ´
,
´ ¨
string
≠ ≥
descripcion
¥ ø
,
ø ¿
int
¡ ƒ
idResponsable
≈ “
)
“ ”
{ 	
try 
{ 
DateTime   
fechaActual   $
=  % &
DateTimeUtil  ' 3
.  3 4
FechaActual  4 ?
(  ? @
)  @ A
;  A B
int!! 
idUnidadDeNegocio!! %
=!!& '
MaestroSettings!!( 7
.!!7 8
Default!!8 ?
.!!? @6
*IdDetalleMaestroUnidadDeNegocioTransversal!!@ j
;!!j k
int"" 
idMoneda"" 
="" 
MaestroSettings"" .
."". /
Default""/ 6
.""6 7'
IdDetalleMaestroMonedaSoles""7 R
;""R S
int## 
idTipo## 
=## 
MaestroSettings## ,
.##, -
Default##- 4
.##4 5,
 IdDetalleMaestroTipoPrecioPrecio##5 U
;##U V
int$$ 
cantidadMinima$$ "
=$$# $
$num$$% &
;$$& '
int%% 
cantidadMaxima%% "
=%%# $
$num%%% &
;%%& '
Precio(( 
precio(( 
=(( 
new((  #
Precio(($ *
(((* +
idPrecio((+ 3
,((3 4
idCentroAttencion((5 F
,((F G
idUnidadDeNegocio((H Y
,((Y Z

idProducto(([ e
,((e f
importe((g n
,((n o
idTarifa((p x
,((x y
idMoneda	((z Ç
,
((Ç É

fechaDesde
((Ñ é
,
((é è

fechaHasta)) 
,)) 
fechaActual))  +
,))+ ,
true))- 1
,))1 2
true))3 7
,))7 8
false))9 >
,))> ?
cantidadMinima))@ N
,))N O
cantidadMaxima))P ^
,))^ _
idTipo))` f
,))f g
descripcion))g r
,))r s
idResponsable	))t Å
)
))Å Ç
;
))Ç É
return++ 
_precioRepositorio++ )
.++) *
ActualizarPrecio++* :
(++: ;
precio++; A
)++A B
;++B C
},, 
catch-- 
(-- 
	Exception-- 
e-- 
)-- 
{.. 
throw// 
e// 
;// 
}00 
}11 	
public33 
OperationResult33 
establecerPrecios33 0
(330 1
int331 4
idCentroAtencion335 E
,33E F
int33G J
idSede33K Q
,33Q R
int33R U

idEmpleado33V `
,33` a
List33b f
<33f g
Precio33g m
>33m n
tarifasConPrecio33o 
,	33 Ä
int
33Å Ñ
idMercaderia
33Ö ë
)
33ë í
{44 	
try55 
{55 
DateTime77 
fechaActual77 $
=77% &
DateTimeUtil77' 3
.773 4
FechaActual774 ?
(77? @
)77@ A
;77A B
List88 
<88 
Precio88 
>88 
precios88 $
=88% &
new88' *
List88+ /
<88/ 0
Precio880 6
>886 7
(887 8
)888 9
;889 :
foreach99 
(99 
var99 
item99 !
in99" $
tarifasConPrecio99% 5
)995 6
{:: 
Precio?? 
precio?? !
=??" #
new??$ '
Precio??( .
(??. /
)??/ 0
{@@ 
id_actor_negocioAA (
=AA) *
idCentroAtencionAA+ ;
,AA; <
id_unidad_negocioBB )
=BB* +
MaestroSettingsBB, ;
.BB; <
DefaultBB< C
.BBC D6
*IdDetalleMaestroUnidadDeNegocioTransversalBBD n
,BBn o
id_concepto_negocioCC +
=CC, -
idMercaderiaCC. :
,CC: ;
valorDD 
=DD 
itemDD  $
.DD$ %
valorDD% *
,DD* +
id_tarifa_dEE #
=EE$ %
itemEE& *
.EE* +
id_tarifa_dEE+ 6
,EE6 7
	id_monedaFF !
=FF" #
MaestroSettingsFF$ 3
.FF3 4
DefaultFF4 ;
.FF; <'
IdDetalleMaestroMonedaSolesFF< W
,FFW X
fecha_inicioGG $
=GG% &
fechaActualGG' 2
,GG2 3
	fecha_finHH !
=HH" #
fechaActualHH$ /
.HH/ 0
	AddMonthsHH0 9
(HH9 :
ConceptoSettingsHH: J
.HHJ K
DefaultHHK R
.HHR S+
PrecioDuracionPorDefectoEnMesesHHS r
)HHr s
,HHs t
fecha_modificacionII *
=II+ ,
fechaActualII- 8
,II8 9$
indicador_multipropositoJJ 0
=JJ1 2
trueJJ3 7
,JJ7 8

es_vigenteKK "
=KK# $
trueKK% )
,KK) *
cantidad_minimaLL '
=LL( )
$numLL* +
,LL+ ,
cantidad_maximaMM '
=MM( )
$numMM* +
,MM+ ,
id_tipoNN 
=NN  !
MaestroSettingsNN" 1
.NN1 2
DefaultNN2 9
.NN9 :,
 IdDetalleMaestroTipoPrecioPrecioNN: Z
,NNZ [
id_responsableOO &
=OO' (

idEmpleadoOO) 3
,OO3 4
}RR 
;RR 
preciosSS 
.SS 
AddSS 
(SS  
precioSS  &
)SS& '
;SS' (
}TT 
returnUU 
_precioRepositorioUU )
.UU) *
establecerPreciosUU* ;
(UU; <
preciosUU< C
)UUC D
;UUD E
}VV 
catchWW 
(WW 
	ExceptionWW 
eWW 
)WW 
{XX 
throwYY 
eYY 
;YY 
}ZZ 
}[[ 	
public\\ 
OperationResult\\ 
establecerPrecio\\ /
(\\/ 0
int\\0 3
idCentroAtencion\\4 D
,\\D E
int\\F I

idProducto\\J T
,\\T U
int\\V Y
idTarifa\\Z b
,\\b c
decimal\\d k
importe\\l s
,\\s t
DateTime\\u }

fechaDesde	\\~ à
,
\\à â
DateTime]] 

fechaHasta]] 
,]]  
string]]! '
descripcion]]( 3
,]]3 4
int]]5 8
idResponsable]]9 F
)]]F G
{^^ 	
try__ 
{`` 
DateTimeaa 
fechaActualaa $
=aa% &
DateTimeUtilaa' 3
.aa3 4
FechaActualaa4 ?
(aa? @
)aa@ A
;aaA B
intcc 
idUnidadDeNegociocc %
=cc& '
MaestroSettingscc( 7
.cc7 8
Defaultcc8 ?
.cc? @6
*IdDetalleMaestroUnidadDeNegocioTransversalcc@ j
;ccj k
intdd 
idMonedadd 
=dd 
MaestroSettingsdd .
.dd. /
Defaultdd/ 6
.dd6 7'
IdDetalleMaestroMonedaSolesdd7 R
;ddR S
intee 
idTipoee 
=ee 
MaestroSettingsee ,
.ee, -
Defaultee- 4
.ee4 5,
 IdDetalleMaestroTipoPrecioPrecioee5 U
;eeU V
intff 
cantidadMinimaff "
=ff# $
$numff% &
;ff& '
intgg 
cantidadMaximagg "
=gg# $
$numgg% &
;gg& '
Preciojj 
preciojj 
=jj 
newjj  #
Preciojj$ *
(jj* +
idCentroAtencionjj+ ;
,jj; <
idUnidadDeNegociojj= N
,jjN O

idProductojjP Z
,jjZ [
importejj\ c
,jjc d
idTarifajje m
,jjm n
idMonedajjo w
,jjw x

fechaDesde	jjy É
,
jjÉ Ñ

fechaHastakk 
,kk 
fechaActualkk  +
,kk+ ,
truekk- 1
,kk1 2
truekk3 7
,kk7 8
falsekk8 =
,kk= >
cantidadMinimakk> L
,kkL M
cantidadMaximakkM [
,kk[ \
idTipokk\ b
,kkb c
descripcionkkc n
,kkn o
idResponsablekkp }
)kk} ~
;kk~ 
returnmm 
_precioRepositoriomm )
.mm) *
EstablecerPreciomm* :
(mm: ;
preciomm; A
)mmA B
;mmB C
}nn 
catchoo 
(oo 
	Exceptionoo 
eoo 
)oo 
{pp 
throwqq 
eqq 
;qq 
}rr 
}ss 	
publicuu 
OperationResultuu 
EstablecerPreciouu /
(uu/ 0
Listuu0 4
<uu4 5(
Precio_Compra_Venta_Conceptouu5 Q
>uuQ R
preciosuuS Z
,uuZ [
intuu\ _

idConceptouu` j
,uuj k
intuul o

idEmpleadouup z
)uuz {
{vv 	
tryww 
{xx 
OperationResultyy 
resultyy  &
=yy' (
newyy) ,
OperationResultyy- <
(yy< =
)yy= >
;yy> ?
DateTimezz 
fechaActualzz $
=zz% &
DateTimeUtilzz' 3
.zz3 4
FechaActualzz4 ?
(zz? @
)zz@ A
;zzA B
int{{ 
idUnidadDeNegocio{{ %
={{& '
MaestroSettings{{( 7
.{{7 8
Default{{8 ?
.{{? @6
*IdDetalleMaestroUnidadDeNegocioTransversal{{@ j
;{{j k
int|| 
idMoneda|| 
=|| 
MaestroSettings|| .
.||. /
Default||/ 6
.||6 7'
IdDetalleMaestroMonedaSoles||7 R
;||R S
int}} 
idTipo}} 
=}} 
MaestroSettings}} ,
.}}, -
Default}}- 4
.}}4 5,
 IdDetalleMaestroTipoPrecioPrecio}}5 U
;}}U V
int~~ 
cantidadMinima~~ "
=~~# $
$num~~% &
;~~& '
int 
cantidadMaxima "
=# $
$num% &
;& '
foreach
ÅÅ 
(
ÅÅ 
var
ÅÅ 
item
ÅÅ !
in
ÅÅ" $
precios
ÅÅ% ,
)
ÅÅ, -
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
item
ÉÉ 
.
ÉÉ 
Seleccionado
ÉÉ )
)
ÉÉ) *
{
ÑÑ 
Precio
ÖÖ 
precio
ÖÖ %
=
ÖÖ& '
new
ÖÖ( +
Precio
ÖÖ, 2
(
ÖÖ2 3
item
ÖÖ3 7
.
ÖÖ7 8
IdPrecio
ÖÖ8 @
,
ÖÖ@ A
item
ÖÖB F
.
ÖÖF G
IdPuntoPrecio
ÖÖG T
,
ÖÖT U
idUnidadDeNegocio
ÖÖV g
,
ÖÖg h

idConcepto
ÖÖi s
,
ÖÖs t
item
ÖÖu y
.
ÖÖy z
Valor
ÖÖz 
,ÖÖ Ä
itemÖÖÅ Ö
.ÖÖÖ Ü
IdTarifaÖÖÜ é
,ÖÖé è
idMonedaÖÖê ò
,ÖÖò ô
itemÖÖö û
.ÖÖû ü
FechaInicioÖÖü ™
,ÖÖ™ ´
itemÖÖ¨ ∞
.ÖÖ∞ ±
FechaFinÖÖ± π
,ÖÖπ ∫
fechaActualÖÖª ∆
,ÖÖ∆ «
trueÖÖ» Ã
,ÖÖÃ Õ
trueÖÖŒ “
,ÖÖ“ ”
falseÖÖ‘ Ÿ
,ÖÖŸ ⁄
cantidadMinimaÖÖ€ È
,ÖÖÈ Í
cantidadMaximaÖÖÎ ˘
,ÖÖ˘ ˙
idTipoÖÖ˚ Å
,ÖÖÅ Ç
itemÖÖÉ á
.ÖÖá à
DescripcionÖÖà ì
,ÖÖì î

idEmpleadoÖÖï ü
)ÖÖü †
;ÖÖ† °
result
ÜÜ 
=
ÜÜ   
_precioRepositorio
ÜÜ! 3
.
ÜÜ3 4
EstablecerPrecio
ÜÜ4 D
(
ÜÜD E
precio
ÜÜE K
)
ÜÜK L
;
ÜÜL M
}
áá 
else
àà 
{
ââ 
if
ää 
(
ää 
item
ää 
.
ää  
IdPrecio
ää  (
!=
ää) +
$num
ää, -
)
ää- .
{
ãã 
result
åå "
=
åå# $
caducarPrecio
åå% 2
(
åå2 3
item
åå3 7
.
åå7 8
IdPrecio
åå8 @
)
åå@ A
;
ååA B
}
çç 
}
éé 
}
èè 
return
êê 
result
êê 
;
êê 
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
e
íí 
)
íí 
{
ìì 
throw
îî 
new
îî 
LogicaException
îî )
(
îî) *
$str
îî* K
,
îîK L
e
îîM N
)
îîN O
;
îîO P
}
ïï 
}
ññ 	
public
òò 
OperationResult
òò 
crearDescuento
òò -
(
òò- .
int
òò. 1
idCentroAtencion
òò2 B
,
òòB C
int
òòD G

idProducto
òòH R
,
òòR S
bool
òòT X

porcentaje
òòY c
,
òòc d
decimal
òòe l
valor
òòm r
,
òòr s
int
òòt w
cantidadMinimaòòx Ü
,òòÜ á
intòòà ã
cantidadMaximaòòå ö
,òòö õ
DateTime
ôô 

fechaDesde
ôô 
,
ôô  
DateTime
ôô! )

fechaHasta
ôô* 4
,
ôô4 5
string
ôô6 <
descripcion
ôô= H
,
ôôH I
int
ôôJ M
idResponsable
ôôN [
)
ôô[ \
{
öö 	
DateTime
õõ 
fechaActual
õõ  
=
õõ! "
DateTimeUtil
õõ# /
.
õõ/ 0
FechaActual
õõ0 ;
(
õõ; <
)
õõ< =
;
õõ= >
int
úú 
idUnidadDeNegocio
úú !
=
úú" #
MaestroSettings
úú$ 3
.
úú3 4
Default
úú4 ;
.
úú; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
úú< f
;
úúf g
int
ùù 
idMoneda
ùù 
=
ùù 
MaestroSettings
ùù *
.
ùù* +
Default
ùù+ 2
.
ùù2 3)
IdDetalleMaestroMonedaSoles
ùù3 N
;
ùùN O
int
ûû 
idTipo
ûû 
=
ûû 
MaestroSettings
ûû (
.
ûû( )
Default
ûû) 0
.
ûû0 11
#IdDetalleMaestroTipoPrecioDescuento
ûû1 T
;
ûûT U
int
üü 
idTarifa
üü 
=
üü 
MaestroSettings
üü *
.
üü* +
Default
üü+ 2
.
üü2 3*
IdDetalleMaestroTarifaNormal
üü3 O
;
üüO P
Precio
°° 
precio
°° 
=
°° 
new
°° 
Precio
°°  &
(
°°& '
idCentroAtencion
°°' 7
,
°°7 8
idUnidadDeNegocio
°°9 J
,
°°J K

idProducto
°°L V
,
°°V W
valor
°°X ]
,
°°] ^
idTarifa
°°_ g
,
°°g h
idMoneda
°°i q
,
°°q r

fechaDesde
°°s }
,
°°} ~

fechaHasta
¢¢ 
,
¢¢ 
fechaActual
¢¢ '
,
¢¢' (
true
¢¢) -
,
¢¢- .
true
¢¢/ 3
,
¢¢3 4

porcentaje
¢¢5 ?
,
¢¢? @
cantidadMinima
¢¢A O
,
¢¢O P
cantidadMaxima
¢¢Q _
,
¢¢_ `
idTipo
¢¢a g
,
¢¢g h
descripcion
¢¢h s
,
¢¢s t
idResponsable¢¢u Ç
)¢¢Ç É
;¢¢É Ñ
return
§§  
_precioRepositorio
§§ %
.
§§% &
EstablecerPrecio
§§& 6
(
§§6 7
precio
§§7 =
)
§§= >
;
§§> ?
}
•• 	
public
ßß 
OperationResult
ßß 
crearBonificacion
ßß 0
(
ßß0 1
int
ßß1 4
idCentroAtencion
ßß5 E
,
ßßE F
int
ßßG J

idProducto
ßßK U
,
ßßU V
bool
ßßW [

porcentaje
ßß\ f
,
ßßf g
decimal
ßßh o
valor
ßßp u
,
ßßu v
int
ßßw z
cantidadMinimaßß{ â
,ßßâ ä
intßßã é
cantidadMaximaßßè ù
,ßßù û
DateTimeßßü ß

fechaDesdeßß® ≤
,ßß≤ ≥
DateTimeßß¥ º

fechaHastaßßΩ «
,ßß« »
intßß… Ã$
idProductoReferenciaßßÕ ·
,ßß· ‚
stringßß„ È
descripcionßßÍ ı
,ßßı ˆ
intßß˜ ˙
idResponsableßß˚ à
)ßßà â
{
®® 	
DateTime
©© 
fechaActual
©©  
=
©©! "
DateTimeUtil
©©# /
.
©©/ 0
FechaActual
©©0 ;
(
©©; <
)
©©< =
;
©©= >
int
™™ 
idUnidadDeNegocio
™™ !
=
™™" #
MaestroSettings
™™$ 3
.
™™3 4
Default
™™4 ;
.
™™; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
™™< f
;
™™f g
int
´´ 
idMoneda
´´ 
=
´´ 
MaestroSettings
´´ *
.
´´* +
Default
´´+ 2
.
´´2 3)
IdDetalleMaestroMonedaSoles
´´3 N
;
´´N O
int
¨¨ 
idTipo
¨¨ 
=
¨¨ 
MaestroSettings
¨¨ (
.
¨¨( )
Default
¨¨) 0
.
¨¨0 14
&IdDetalleMaestroTipoPrecioBonificacion
¨¨1 W
;
¨¨W X
int
≠≠ 
idTarifa
≠≠ 
=
≠≠ 
MaestroSettings
≠≠ *
.
≠≠* +
Default
≠≠+ 2
.
≠≠2 3*
IdDetalleMaestroTarifaNormal
≠≠3 O
;
≠≠O P
Precio
ØØ 
precio
ØØ 
=
ØØ 
new
ØØ 
Precio
ØØ  &
(
ØØ& '
idCentroAtencion
ØØ' 7
,
ØØ7 8
idUnidadDeNegocio
ØØ9 J
,
ØØJ K

idProducto
ØØL V
,
ØØV W
valor
ØØX ]
,
ØØ] ^
idTarifa
ØØ_ g
,
ØØg h
idMoneda
ØØi q
,
ØØq r

fechaDesde
ØØs }
,
ØØ} ~

fechaHasta
∞∞ 
,
∞∞ 
fechaActual
∞∞ '
,
∞∞' (
true
∞∞) -
,
∞∞- .
true
∞∞/ 3
,
∞∞3 4

porcentaje
∞∞5 ?
,
∞∞? @
cantidadMinima
∞∞A O
,
∞∞O P
cantidadMaxima
∞∞Q _
,
∞∞_ `
idTipo
∞∞a g
,
∞∞g h"
idProductoReferencia
∞∞h |
,
∞∞| }
descripcion∞∞} à
,∞∞à â
idResponsable∞∞ä ó
)∞∞ó ò
;∞∞ò ô
return
≤≤  
_precioRepositorio
≤≤ %
.
≤≤% &
CrearPrecio
≤≤& 1
(
≤≤1 2
precio
≤≤2 8
)
≤≤8 9
;
≤≤9 :
}
≥≥ 	
public
∂∂ 
OperationResult
∂∂ 
caducarPrecio
∂∂ ,
(
∂∂, -
int
∂∂- 0
idPrecio
∂∂1 9
)
∂∂9 :
{
∑∑ 	
try
∏∏ 
{
ππ 
DateTime
∫∫ 
fechaActual
∫∫ $
=
∫∫% &
DateTimeUtil
∫∫' 3
.
∫∫3 4
FechaActual
∫∫4 ?
(
∫∫? @
)
∫∫@ A
;
∫∫A B
Precio
ªª 
precio
ªª 
=
ªª  
_precioRepositorio
ªª  2
.
ªª2 3
obtenerPrecio
ªª3 @
(
ªª@ A
idPrecio
ªªA I
)
ªªI J
;
ªªJ K
precio
ºº 
.
ºº 
	fecha_fin
ºº  
=
ºº! "
fechaActual
ºº# .
;
ºº. /
precio
ΩΩ 
.
ΩΩ  
fecha_modificacion
ΩΩ )
=
ΩΩ* +
fechaActual
ΩΩ, 7
;
ΩΩ7 8
precio
ææ 
.
ææ 

es_vigente
ææ !
=
ææ" #
false
ææ$ )
;
ææ) *
return
øø  
_precioRepositorio
øø )
.
øø) *
ActualizarPrecio
øø* :
(
øø: ;
precio
øø; A
)
øøA B
;
øøB C
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
e
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 	
public
»» 
List
»» 
<
»» 
Precio
»» 
>
»» $
obtenerPreciosVigentes
»» 2
(
»»2 3
)
»»3 4
{
…… 	
try
   
{
ÀÀ 
return
ÃÃ  
_precioRepositorio
ÃÃ )
.
ÃÃ) *$
obtenerPreciosVigentes
ÃÃ* @
(
ÃÃ@ A
)
ÃÃA B
.
ÃÃB C
ToList
ÃÃC I
(
ÃÃI J
)
ÃÃJ K
;
ÃÃK L
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
e
–– 
;
–– 
}
—— 
}
““ 	
public
”” 
List
”” 
<
”” 
Precio_Concepto
”” #
>
””# $
ObtenerPrecios
””% 3
(
””3 4
)
””4 5
{
‘‘ 	
try
’’ 
{
÷÷ 
return
◊◊  
_precioRepositorio
◊◊ )
.
◊◊) *
ObtenerPrecios
◊◊* 8
(
◊◊8 9
MaestroSettings
◊◊9 H
.
◊◊H I
Default
◊◊I P
.
◊◊P Q.
 IdDetalleMaestroTipoPrecioPrecio
◊◊Q q
)
◊◊q r
.
◊◊r s
ToList
◊◊s y
(
◊◊y z
)
◊◊z {
;
◊◊{ |
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
e
€€ 
;
€€ 
}
‹‹ 
}
›› 	
public
ﬁﬁ 
List
ﬁﬁ 
<
ﬁﬁ 
Precio
ﬁﬁ 
>
ﬁﬁ 
obtenerDescuentos
ﬁﬁ -
(
ﬁﬁ- .
)
ﬁﬁ. /
{
ﬂﬂ 	
try
‡‡ 
{
·· 
return
‚‚ 
null
‚‚ 
;
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
e
‰‰ 
)
‰‰ 
{
ÂÂ 
throw
ÊÊ 
e
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}
ËË 	
public
ÈÈ 
List
ÈÈ 
<
ÈÈ 
Precio
ÈÈ 
>
ÈÈ #
obtenerBonificaciones
ÈÈ 1
(
ÈÈ1 2
)
ÈÈ2 3
{
ÍÍ 	
try
ÎÎ 
{
ÏÏ 
return
ÌÌ 
null
ÌÌ 
;
ÌÌ 
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
e
ÔÔ 
)
ÔÔ 
{
 
throw
ÒÒ 
e
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ÙÙ 
Precio
ÙÙ 
obtenerPrecio
ÙÙ #
(
ÙÙ# $
int
ÙÙ$ '
idPrecio
ÙÙ( 0
)
ÙÙ0 1
{
ıı 	
try
ˆˆ 
{
˜˜ 
return
¯¯  
_precioRepositorio
¯¯ )
.
¯¯) *
obtenerPrecio
¯¯* 7
(
¯¯7 8
idPrecio
¯¯8 @
)
¯¯@ A
;
¯¯A B
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
e
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 	
public
ÄÄ 
List
ÄÄ 
<
ÄÄ 
Precio
ÄÄ 
>
ÄÄ +
ObtenerPreciosMercaderiaUnica
ÄÄ 9
(
ÄÄ9 :
int
ÄÄ: =
idMercaderia
ÄÄ> J
)
ÄÄJ K
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
return
ÑÑ  
_precioRepositorio
ÑÑ )
.
ÑÑ) *7
)ObtenerPreciosVigentesDeUnConceptoNegocio
ÑÑ* S
(
ÑÑS T
MaestroSettings
ÑÑT c
.
ÑÑc d
Default
ÑÑd k
.
ÑÑk l/
 IdDetalleMaestroTipoPrecioPrecioÑÑl å
,ÑÑå ç
idMercaderiaÑÑç ô
)ÑÑô ö
.ÑÑö õ
OrderByÑÑõ ¢
(ÑÑ¢ £
pÑÑ• ¶
=>ÑÑß ©
pÑÑ™ ´
.ÑÑ´ ¨
id_tarifa_dÑÑ¨ ∑
)ÑÑ∑ ∏
.ÑÑ∏ π
ToListÑÑπ ø
(ÑÑø ¿
)ÑÑ¿ ¡
;ÑÑ¡ ¬
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
e
ÜÜ 
)
ÜÜ 
{
áá 
throw
àà 
e
àà 
;
àà 
}
ââ 
}
ää 	
}
çç 
}éé Ïí"
ID:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Venta.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public!! 
void!! 
ResolverDetalles!! $
(!!$ %
List!!% )
<!!) *
DetalleDeOperacion!!* <
>!!< =
detalles!!> F
,!!F G
DatosVentaIntegrada!!H [
datosVentaIntegrada!!\ o
)!!o p
{"" 	
if$$ 
($$ 
datosVentaIntegrada$$ #
.$$# $
Orden$$$ )
.$$) *
Flete$$* /
>$$0 1
$num$$2 3
)$$3 4
{%% 
detalles&& 
.&& 
Add&& 
(&& 
new&&  
DetalleDeOperacion&&! 3
(&&3 4
ConceptoSettings&&4 D
.&&D E
Default&&E L
.&&L M"
IdConceptoNegocioFlete&&M c
,&&c d
$num&&e f
,&&f g
datosVentaIntegrada&&h {
.&&{ |
Orden	&&| Å
.
&&Å Ç
Flete
&&Ç á
,
&&á à!
datosVentaIntegrada
&&â ú
.
&&ú ù
Orden
&&ù ¢
.
&&¢ £
Flete
&&£ ®
,
&&® ©
$num
&&™ ´
,
&&´ ¨
$num
&&≠ Æ
,
&&Æ Ø
$num
&&∞ ±
,
&&± ≤
null
&&≥ ∑
,
&&∑ ∏
null
&&π Ω
,
&&Ω æ
null
&&ø √
,
&&√ ƒ
null
&&≈ …
,
&&…  
false
&&À –
,
&&– —
VentasSettings
&&“ ‡
.
&&‡ ·
Default
&&· Ë
.
&&Ë È0
"MascaraDeCalculoPorDefectoEnVentas
&&È ã
,
&&ã å
null
&&ç ë
)
&&ë í
)
&&í ì
;
&&ì î
}'' 
foreach)) 
()) 
var)) 
item)) 
in))  
detalles))! )
)))) *
{** 
if++ 
(++ 
item++ 
.++ 
Cantidad++ !
<=++" $
$num++% &
)++& '
{,, 
throw-- 
new-- 
LogicaException-- -
(--- .
$str--. y
)--y z
;--z {
}.. 
if// 
(// 
item// 
.// 
Importe//  
<//! "
$num//# $
)//$ %
{00 
throw11 
new11 
LogicaException11 -
(11- .
$str11. b
)11b c
;11c d
}22 
if33 
(33 .
"VerificarCalculadoMascaraDeCalculo33 6
(336 7
item337 ;
.33; <
MascaraDeCalculo33< L
,33L M)
ElementoDeCalculoEnVentasEnum33N k
.33k l
Cantidad33l t
)33t u
)33u v
{44 
item55 
.55 
Cantidad55 !
=55" #
item55$ (
.55( )
Importe55) 0
/551 2
item553 7
.557 8
PrecioUnitario558 F
;55F G
}66 
if77 
(77 .
"VerificarCalculadoMascaraDeCalculo77 6
(776 7
item777 ;
.77; <
MascaraDeCalculo77< L
,77L M)
ElementoDeCalculoEnVentasEnum77N k
.77k l
PrecioUnitario77l z
)77z {
)77{ |
{88 
item99 
.99 
PrecioUnitario99 '
=99( )
item99* .
.99. /
Importe99/ 6
/997 8
item999 =
.99= >
Cantidad99> F
;99F G
}:: 
if;; 
(;; .
"VerificarCalculadoMascaraDeCalculo;; 6
(;;6 7
item;;7 ;
.;;; <
MascaraDeCalculo;;< L
,;;L M)
ElementoDeCalculoEnVentasEnum;;N k
.;;k l
Importe;;l s
);;s t
);;t u
{<< 
item== 
.== 
Importe==  
===! "
Math==# '
.==' (
Round==( -
(==- .
item==. 2
.==2 3
Cantidad==3 ;
*==< =
item==> B
.==B C
PrecioUnitario==C Q
,==Q R
$num==S T
)==T U
;==U V
}>> 
if?? 
(?? 
datosVentaIntegrada?? '
.??' (
Orden??( -
.??- .
VentaGravaIgv??. ;
)??; <
{@@ 
itemAA 
.AA 
IgvAA 
=AA 
MathAA #
.AA# $
RoundAA$ )
(AA) *
itemAA* .
.AA. /
ImporteAA/ 6
-AA7 8
(AA9 :
itemAA: >
.AA> ?
ImporteAA? F
/AAG H
(AAI J
$numAAJ K
+AAL M
TransaccionSettingsAAN a
.AAa b
DefaultAAb i
.AAi j
TasaIGVAAj q
)AAq r
)AAr s
,AAs t
$numAAu v
)AAv w
;AAw x
}BB 
ifCC 
(CC 
VentasSettingsCC "
.CC" #
DefaultCC# *
.CC* +*
PermitirRegistroDePlacaEnVentaCC+ I
)CCI J
{DD 
itemEE 
.EE 
RegistroEE !
=EE" #
datosVentaIntegradaEE$ 7
.EE7 8
OrdenEE8 =
.EE= >
PlacaEE> C
;EEC D
}FF 
}GG 
}HH 	
privatePP 
boolPP .
"VerificarCalculadoMascaraDeCalculoPP 7
(PP7 8
stringPP8 >
mascaraDeCalculoPP? O
,PPO P)
ElementoDeCalculoEnVentasEnumPPQ n
ordenPPo t
)PPt u
{QQ 	
ListRR 
<RR 
intRR 
>RR !
mascaraDeCalculoArrayRR +
=RR, -
mascaraDeCalculoRR. >
.RR> ?
SelectRR? E
(RRE F
digitoRRF L
=>RRM O
intRRP S
.RRS T
ParseRRT Y
(RRY Z
digitoRRZ `
.RR` a
ToStringRRa i
(RRi j
)RRj k
)RRk l
)RRl m
.RRm n
ToListRRn t
(RRt u
)RRu v
;RRv w
returnTT 
!TT 
ConvertTT 
.TT 
	ToBooleanTT %
(TT% &!
mascaraDeCalculoArrayTT& ;
[TT; <
(TT< =
intTT= @
)TT@ A
ordenTTA F
]TTF G
)TTG H
;TTH I
}UU 	
private]] 
void]] )
CalcularDatosDeVentaIntegrada]] 2
(]]2 3
ModoOperacionEnum]]3 D
tipoDeVenta]]E P
,]]P Q
DatosVentaIntegrada]]R e
datosVentaIntegrada]]f y
,]]y z#
UserProfileSessionData	]]{ ë
sesionDeUsuario
]]í °
)
]]° ¢
{^^ 	
try__ 
{`` 
datosVentaIntegradaaa #
.aa# $
Ordenaa$ )
.aa) *
Observacionaa* 5
=aa6 7
stringaa8 >
.aa> ?
IsNullOrEmptyaa? L
(aaL M
datosVentaIntegradaaaM `
.aa` a
Ordenaaa f
.aaf g
Observacionaag r
)aar s
?aat u
$straav 
:
aaÄ Å
Regex
aaÇ á
.
aaá à
Replace
aaà è
(
aaè ê!
datosVentaIntegrada
aaê £
.
aa£ §
Orden
aa§ ©
.
aa© ™
Observacion
aa™ µ
,
aaµ ∂
$str
aa∑ Ω
,
aaΩ æ
$str
aaø ¬
)
aa¬ √
;
aa√ ƒ
datosVentaIntegradacc #
.cc# $
Ordencc$ )
.cc) *
PuntoDeVentacc* 6
=cc7 8
(cc9 :
datosVentaIntegradacc: M
.ccM N
EsVentaModoCajaccN ]
||cc^ `
tipoDeVentacca l
==ccm o
ModoOperacionEnum	ccp Å
.
ccÅ Ç*
VentaIntegradaMasivaDigitada
ccÇ û
||
ccü °
tipoDeVenta
cc¢ ≠
==
ccÆ ∞
ModoOperacionEnum
cc± ¬
.
cc¬ √2
$VentaCobranzaCarteraClientesDigitada
cc√ Á
)
ccÁ Ë
?
ccÈ Í!
datosVentaIntegrada
ccÎ ˛
.
cc˛ ˇ
Orden
ccˇ Ñ
.
ccÑ Ö
PuntoDeVenta
ccÖ ë
:
ccí ì
new
ccî ó
ItemGenerico
ccò §
(
cc§ •
sesionDeUsuario
cc• ¥
.
cc¥ µ*
CentroDeAtencionSeleccionado
ccµ —
.
cc— “
Id
cc“ ‘
)
cc‘ ’
;
cc’ ÷
datosVentaIntegradadd #
.dd# $
Ordendd$ )
.dd) *
Vendedordd* 2
=dd3 4
(dd5 6
datosVentaIntegradadd6 I
.ddI J
EsVentaModoCajaddJ Y
||ddZ \
tipoDeVentadd] h
==ddi k
ModoOperacionEnumddl }
.dd} ~)
VentaIntegradaMasivaDigitada	dd~ ö
||
ddõ ù
tipoDeVenta
ddû ©
==
dd™ ¨
ModoOperacionEnum
dd≠ æ
.
ddæ ø2
$VentaCobranzaCarteraClientesDigitada
ddø „
)
dd„ ‰
?
ddÂ Ê!
datosVentaIntegrada
ddÁ ˙
.
dd˙ ˚
Orden
dd˚ Ä
.
ddÄ Å
Vendedor
ddÅ â
:
ddä ã
new
ddå è
ItemGenerico
ddê ú
(
ddú ù
sesionDeUsuario
ddù ¨
.
dd¨ ≠
Empleado
dd≠ µ
.
ddµ ∂
Id
dd∂ ∏
)
dd∏ π
;
ddπ ∫
datosVentaIntegradaee #
.ee# $
Pagoee$ (
.ee( )
Cajaee) -
=ee. /
(ee0 1
tipoDeVentaee1 <
==ee= ?
ModoOperacionEnumee@ Q
.eeQ R(
VentaIntegradaMasivaDigitadaeeR n
||eeo q
tipoDeVentaeer }
==	ee~ Ä
ModoOperacionEnum
eeÅ í
.
eeí ì2
$VentaCobranzaCarteraClientesDigitada
eeì ∑
)
ee∑ ∏
?
eeπ ∫!
datosVentaIntegrada
eeª Œ
.
eeŒ œ
Pago
eeœ ”
.
ee” ‘
Caja
ee‘ ÿ
:
eeŸ ⁄
new
ee€ ﬁ
ItemGenerico
eeﬂ Î
(
eeÎ Ï
sesionDeUsuario
eeÏ ˚
.
ee˚ ¸*
CentroDeAtencionSeleccionado
ee¸ ò
.
eeò ô
Id
eeô õ
)
eeõ ú
;
eeú ù
datosVentaIntegradaff #
.ff# $
Pagoff$ (
.ff( )
Cajeroff) /
=ff0 1
(ff2 3
tipoDeVentaff3 >
==ff? A
ModoOperacionEnumffB S
.ffS T(
VentaIntegradaMasivaDigitadaffT p
||ffq s
tipoDeVentafft 
==
ffÄ Ç
ModoOperacionEnum
ffÉ î
.
ffî ï2
$VentaCobranzaCarteraClientesDigitada
ffï π
)
ffπ ∫
?
ffª º!
datosVentaIntegrada
ffΩ –
.
ff– —
Pago
ff— ’
.
ff’ ÷
Cajero
ff÷ ‹
:
ff› ﬁ
new
ffﬂ ‚
ItemGenerico
ff„ Ô
(
ffÔ 
sesionDeUsuario
ff ˇ
.
ffˇ Ä
Empleado
ffÄ à
.
ffà â
Id
ffâ ã
)
ffã å
;
ffå ç
datosVentaIntegradagg #
.gg# $
MovimientoAlmacengg$ 5
.gg5 6
Almacengg6 =
=gg> ?
(gg@ A
tipoDeVentaggA L
==ggM O
ModoOperacionEnumggP a
.gga b(
VentaIntegradaMasivaDigitadaggb ~
||	gg Å
tipoDeVenta
ggÇ ç
==
ggé ê
ModoOperacionEnum
ggë ¢
.
gg¢ £2
$VentaCobranzaCarteraClientesDigitada
gg£ «
||
gg»  
(
ggÀ Ã!
datosVentaIntegrada
ggÃ ﬂ
.
ggﬂ ‡
EsVentaModoCaja
gg‡ Ô
&&
gg Ú
VentasSettings
ggÛ Å
.
ggÅ Ç
Default
ggÇ â
.
ggâ äI
;PermitirRegistroAlmacenEnVentaPorMostradorIntegradoModoCaja
ggä ≈
)
gg≈ ∆
)
gg∆ «
?
gg» …!
datosVentaIntegrada
gg  ›
.
gg› ﬁ
MovimientoAlmacen
ggﬁ Ô
.
ggÔ 
Almacen
gg ˜
:
gg¯ ˘
new
gg˙ ˝
ItemGenerico
gg˛ ä
(
ggä ã
sesionDeUsuario
ggã ö
.
ggö õ6
(IdCentroAtencionQueTieneElStockIntegrada
ggõ √
)
gg√ ƒ
;
ggƒ ≈
datosVentaIntegradahh #
.hh# $
MovimientoAlmacenhh$ 5
.hh5 6

Almacenerohh6 @
=hhA B
(hhC D
tipoDeVentahhD O
==hhP R
ModoOperacionEnumhhS d
.hhd e)
VentaIntegradaMasivaDigitada	hhe Å
||
hhÇ Ñ
tipoDeVenta
hhÖ ê
==
hhë ì
ModoOperacionEnum
hhî •
.
hh• ¶2
$VentaCobranzaCarteraClientesDigitada
hh¶  
||
hhÀ Õ
(
hhŒ œ!
datosVentaIntegrada
hhœ ‚
.
hh‚ „
EsVentaModoCaja
hh„ Ú
&&
hhÛ ı
VentasSettings
hhˆ Ñ
.
hhÑ Ö
Default
hhÖ å
.
hhå çI
;PermitirRegistroAlmacenEnVentaPorMostradorIntegradoModoCaja
hhç »
)
hh» …
)
hh…  
?
hhÀ Ã!
datosVentaIntegrada
hhÕ ‡
.
hh‡ ·
MovimientoAlmacen
hh· Ú
.
hhÚ Û

Almacenero
hhÛ ˝
:
hh˛ ˇ
new
hhÄ É
ItemGenerico
hhÑ ê
(
hhê ë
sesionDeUsuario
hhë †
.
hh† °
Empleado
hh° ©
.
hh© ™
Id
hh™ ¨
)
hh¨ ≠
;
hh≠ Æ
ResolverDetalleskk  
(kk  !
datosVentaIntegradakk! 4
.kk4 5
Ordenkk5 :
.kk: ;
Detalleskk; C
,kkC D
datosVentaIntegradakkE X
)kkX Y
;kkY Z
datosVentaIntegradamm #
.mm# $
FechaRegistromm$ 1
=mm2 3
DateTimeUtilmm4 @
.mm@ A
FechaActualmmA L
(mmL M
)mmM N
;mmN O
datosVentaIntegradaoo #
.oo# $
Ordenoo$ )
.oo) *
FechaEmisionoo* 6
=oo7 8
datosVentaIntegradaoo9 L
.ooL M
OrdenooM R
.ooR S
EsVentaPasadaooS `
?ooa b
datosVentaIntegradaooc v
.oov w
Ordenoow |
.oo| }
FechaEmision	oo} â
:
ooä ã!
datosVentaIntegrada
ooå ü
.
ooü †
FechaRegistro
oo† ≠
;
oo≠ Æ
datosVentaIntegradaqq #
.qq# $
Pagoqq$ (
.qq( )
Trazaqq) .
.qq. /
MedioDePagoqq/ :
=qq; <
datosVentaIntegradaqq= P
.qqP Q
PagoqqQ U
.qqU V
TrazaqqV [
.qq[ \
MedioDePagoqq\ g
??qqh j
newqqk n
ItemGenericoqqo {
(qq{ |
MaestroSettings	qq| ã
.
qqã å
Default
qqå ì
.
qqì î1
#IdDetalleMaestroMedioDepagoEfectivo
qqî ∑
)
qq∑ ∏
;
qq∏ π
datosVentaIntegradass #
.ss# $
Pagoss$ (
.ss( )
Trazass) .
.ss. /
Infoss/ 3
=ss4 5
datosVentaIntegradass6 I
.ssI J
PagossJ N
.ssN O
TrazassO T
.ssT U
InfossU Y
??ssZ \
newss] `
InfoPagossa i
(ssi j
)ssj k
;ssk l
iftt 
(tt 
datosVentaIntegradatt '
.tt' (
Pagott( ,
.tt, -
Trazatt- 2
.tt2 3
MedioDePagott3 >
.tt> ?
Idtt? A
==ttB D
MaestroSettingsttE T
.ttT U
DefaultttU \
.tt\ ]=
0IdDetalleMaestroMedioDepagoTransferenciaDeFondos	tt] ç
||
tté ê!
datosVentaIntegrada
ttë §
.
tt§ •
Pago
tt• ©
.
tt© ™
Traza
tt™ Ø
.
ttØ ∞
MedioDePago
tt∞ ª
.
ttª º
Id
ttº æ
==
ttø ¡
MaestroSettings
tt¬ —
.
tt— “
Default
tt“ Ÿ
.
ttŸ ⁄9
+IdDetalleMaestroMedioDepagoDepositoEnCuenta
tt⁄ Ö
)
ttÖ Ü
{uu 
datosVentaIntegradavv '
.vv' (
Pagovv( ,
.vv, -
Trazavv- 2
.vv2 3
Infovv3 7
.vv7 8
EntidadFinancieravv8 I
=vvJ K
newvvL O
ItemGenericovvP \
{vv] ^
Idvv_ a
=vvb c
intvvd g
.vvg h
Parsevvh m
(vvm n 
datosVentaIntegrada	vvn Å
.
vvÅ Ç
Pago
vvÇ Ü
.
vvÜ á
Traza
vvá å
.
vvå ç
Info
vvç ë
.
vvë í
CuentaBancaria
vví †
.
vv† °
Valor
vv° ¶
)
vv¶ ß
}
vv® ©
;
vv© ™
}ww 
datosVentaIntegradaxx #
.xx# $
Pagoxx$ (
.xx( )
Trazaxx) .
.xx. /
Infoxx/ 3
.xx3 4
EntidadFinancieraxx4 E
=xxF G
DiccionarioxxH S
.xxS T3
'IdsMediosDePagoQueTienenEntidadBancariaxxT {
.xx{ |
Contains	xx| Ñ
(
xxÑ Ö!
datosVentaIntegrada
xxÖ ò
.
xxò ô
Pago
xxô ù
.
xxù û
Traza
xxû £
.
xx£ §
MedioDePago
xx§ Ø
.
xxØ ∞
Id
xx∞ ≤
)
xx≤ ≥
?
xx¥ µ!
datosVentaIntegrada
xx∂ …
.
xx…  
Pago
xx  Œ
.
xxŒ œ
Traza
xxœ ‘
.
xx‘ ’
Info
xx’ Ÿ
.
xxŸ ⁄
EntidadFinanciera
xx⁄ Î
:
xxÏ Ì
new
xxÓ Ò
ItemGenerico
xxÚ ˛
(
xx˛ ˇ
MaestroSettings
xxˇ é
.
xxé è
Default
xxè ñ
.
xxñ ó7
)IdDetalleMaestroEntidadBancariaPorDefecto
xxó ¿
)
xx¿ ¡
;
xx¡ ¬
datosVentaIntegradayy #
.yy# $
Pagoyy$ (
.yy( )
Trazayy) .
.yy. /
Infoyy/ 3
.yy3 4
OperadorTarjetayy4 C
=yyD E
datosVentaIntegradayyF Y
.yyY Z
PagoyyZ ^
.yy^ _
Trazayy_ d
.yyd e
MedioDePagoyye p
.yyp q
Idyyq s
==yyt v
MaestroSettings	yyw Ü
.
yyÜ á
Default
yyá é
.
yyé è7
)IdDetalleMaestroMedioDePagoTarjetaCredito
yyè ∏
?
yyπ ∫!
datosVentaIntegrada
yyª Œ
.
yyŒ œ
Pago
yyœ ”
.
yy” ‘
Traza
yy‘ Ÿ
.
yyŸ ⁄
Info
yy⁄ ﬁ
.
yyﬁ ﬂ
OperadorTarjeta
yyﬂ Ó
:
yyÔ 
new
yyÒ Ù
ItemGenerico
yyı Å
(
yyÅ Ç
)
yyÇ É
;
yyÉ Ñ
datosVentaIntegradazz #
.zz# $
Pagozz$ (
.zz( )
Trazazz) .
.zz. /
Infozz/ 3
.zz3 4
Observacionzz4 ?
=zz@ A
stringzzB H
.zzH I
IsNullOrEmptyzzI V
(zzV W
datosVentaIntegradazzW j
.zzj k
Pagozzk o
.zzo p
Trazazzp u
.zzu v
Infozzv z
.zzz {
Observacion	zz{ Ü
)
zzÜ á
?
zzà â
$str
zzä ì
:
zzî ï!
datosVentaIntegrada
zzñ ©
.
zz© ™
Pago
zz™ Æ
.
zzÆ Ø
Traza
zzØ ¥
.
zz¥ µ
Info
zzµ π
.
zzπ ∫
Observacion
zz∫ ≈
;
zz≈ ∆
}{{ 
catch|| 
(|| 
	Exception|| 
e|| 
)|| 
{}} 
throw~~ 
new~~ 
LogicaException~~ )
(~~) *
$str~~* c
,~~c d
e~~e f
)~~f g
;~~g h
} 
}
ÄÄ 	
private
áá 
void
áá 
ValidarVenta
áá !
(
áá! "!
DatosVentaIntegrada
áá" 5!
datosVentaIntegrada
áá6 I
,
ááI J!
ConfiguracionAccion
ááK ^'
configConfirmacionDeVenta
áá_ x
)
ááx y
{
àà 	
permisos_Logica
ââ 
.
ââ 
ValidarAccion
ââ )
(
ââ) *!
datosVentaIntegrada
ââ* =
.
ââ= >
Orden
ââ> C
.
ââC D
Vendedor
ââD L
.
ââL M
Id
ââM O
,
ââO P'
configConfirmacionDeVenta
ââQ j
.
ââj k
IdAccionDeVenta
ââk z
,
ââz {(
configConfirmacionDeVentaââ| ï
.ââï ñ-
IdTipoTransaccionOrdenDeVentaââñ ≥
,ââ≥ ¥)
configConfirmacionDeVentaââµ Œ
.ââŒ œ,
IdUnidadDeNegocioTransversalââœ Î
)ââÎ Ï
;ââÏ Ì
if
ãã 
(
ãã !
datosVentaIntegrada
ãã #
.
ãã# $
Orden
ãã$ )
.
ãã) *
Comprobante
ãã* 5
.
ãã5 6
Tipo
ãã6 :
.
ãã: ;
Id
ãã; =
==
ãã> @
MaestroSettings
ããA P
.
ããP Q
Default
ããQ X
.
ããX Y/
!IdDetalleMaestroComprobanteBoleta
ããY z
&&
ãã{ }"
datosVentaIntegradaãã~ ë
.ããë í
Ordenããí ó
.ããó ò
Clienteããò ü
.ããü †
Idãã† ¢
==ãã£ •
ActorSettingsãã¶ ≥
.ãã≥ ¥
Defaultãã¥ ª
.ããª º!
IdClienteGenericoããº Õ
&&ããŒ –#
datosVentaIntegradaãã— ‰
.ãã‰ Â
OrdenããÂ Í
.ããÍ Î
ImporteTotalããÎ ˜
>=ãã¯ ˙.
FacturacionElectronicaSettingsãã˚ ô
.ããô ö
Defaultããö °
.ãã° ¢A
1MontoMaximoAVenderCuandoClienteNoEstaIdenticicadoãã¢ ”
)ãã” ‘
{
åå 
throw
çç 
new
çç 
LogicaException
çç )
(
çç) *
$strçç* §
)çç§ •
;çç• ¶
}
éé 
if
èè 
(
èè !
datosVentaIntegrada
èè #
.
èè# $
Orden
èè$ )
.
èè) *
Comprobante
èè* 5
.
èè5 6
Tipo
èè6 :
.
èè: ;
Id
èè; =
==
èè> @
MaestroSettings
èèA P
.
èèP Q
Default
èèQ X
.
èèX Y0
"IdDetalleMaestroComprobanteFactura
èèY {
&&
èè| ~
actorRepositorioèè è
.èèè ê%
obtenerActorDeNegocioèèê •
(èè• ¶#
datosVentaIntegradaèè¶ π
.èèπ ∫
Ordenèè∫ ø
.èèø ¿
Clienteèè¿ «
.èè« »
Idèè»  
,èè  À
ActorSettingsèèÃ Ÿ
.èèŸ ⁄
Defaultèè⁄ ·
.èè· ‚
IdRolClienteèè‚ Ó
)èèÓ Ô
.èèÔ 
Actorèè ı
.èèı ˆ&
id_documento_identidadèèˆ å
!=èèç è
ActorSettingsèèê ù
.èèù û
Defaultèèû •
.èè• ¶+
IdTipoDocumentoIdentidadRucèè¶ ¡
)èè¡ ¬
{
êê 
throw
ëë 
new
ëë 
LogicaException
ëë )
(
ëë) *
$str
ëë* [
)
ëë[ \
;
ëë\ ]
}
íí 
if
ìì 
(
ìì !
datosVentaIntegrada
ìì #
.
ìì# $
Orden
ìì$ )
.
ìì) *
Comprobante
ìì* 5
.
ìì5 6
Tipo
ìì6 :
.
ìì: ;
Id
ìì; =
==
ìì> @
MaestroSettings
ììA P
.
ììP Q
Default
ììQ X
.
ììX Y0
"IdDetalleMaestroComprobanteFactura
ììY {
&&
ìì| ~"
datosVentaIntegradaìì í
.ììí ì
Ordenììì ò
.ììò ô
Clienteììô †
.ìì† °
Idìì° £
==ìì§ ¶
ActorSettingsììß ¥
.ìì¥ µ
Defaultììµ º
.ììº Ω!
IdClienteGenericoììΩ Œ
)ììŒ œ
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï )
(
ïï) *
$str
ïï* s
)
ïïs t
;
ïït u
}
ññ 
if
óó 
(
óó !
datosVentaIntegrada
óó #
.
óó# $
Orden
óó$ )
.
óó) *
ImporteTotal
óó* 6
<=
óó7 9
$num
óó: ;
)
óó; <
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* u
)
ôôu v
;
ôôv w
}
öö 
if
õõ 
(
õõ 
(
õõ !
datosVentaIntegrada
õõ $
.
õõ$ %
Orden
õõ% *
.
õõ* +
Comprobante
õõ+ 6
.
õõ6 7
Tipo
õõ7 ;
.
õõ; <
Id
õõ< >
==
õõ? A
MaestroSettings
õõB Q
.
õõQ R
Default
õõR Y
.
õõY Z/
!IdDetalleMaestroComprobanteBoleta
õõZ {
||
õõ| ~"
datosVentaIntegradaõõ í
.õõí ì
Ordenõõì ò
.õõò ô
Comprobanteõõô §
.õõ§ •
Tipoõõ• ©
.õõ© ™
Idõõ™ ¨
==õõ≠ Ø
MaestroSettingsõõ∞ ø
.õõø ¿
Defaultõõ¿ «
.õõ« »2
"IdDetalleMaestroComprobanteFacturaõõ» Í
)õõÍ Î
&&õõÏ Ó#
datosVentaIntegradaõõÔ Ç
.õõÇ É
OrdenõõÉ à
.õõà â
Observacionõõâ î
.õõî ï
Lengthõõï õ
>õõú ù
$numõõû °
)õõ° ¢
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* 
)ùù Ä
;ùùÄ Å
}
ûû 
if
üü 
(
üü !
datosVentaIntegrada
üü #
.
üü# $
Orden
üü$ )
.
üü) *
EsVentaPasada
üü* 7
)
üü7 8
{
†† 
Transaccion
°° 
transaccion
°° '
=
°°( )$
transaccionRepositorio
°°* @
.
°°@ A3
%ObtenerTransaccionDeUltimoComprobante
°°A f
(
°°f g!
datosVentaIntegrada
°°g z
.
°°z {
Orden°°{ Ä
.°°Ä Å
Comprobante°°Å å
.°°å ç
Serie°°ç í
.°°í ì
Id°°ì ï
)°°ï ñ
;°°ñ ó
if
¢¢ 
(
¢¢ 
transaccion
¢¢ 
!=
¢¢  "
null
¢¢# '
)
¢¢' (
if
££ 
(
££ 
transaccion
££ #
.
££# $
fecha_inicio
££$ 0
>
££1 2!
datosVentaIntegrada
££3 F
.
££F G
Orden
££G L
.
££L M
FechaEmision
££M Y
)
££Y Z
{
§§ 
throw
•• 
new
•• !
LogicaException
••" 1
(
••1 2
$str••2 £
)••£ §
;••§ •
}
¶¶ 
}
ßß 
if
®® 
(
®® 
VentasSettings
®® 
.
®® 
Default
®® &
.
®®& '7
)PermitirVentasConSoloBienesOSoloServicios
®®' P
)
®®P Q
{
©© 
var
™™ #
validadorBienServicio
™™ )
=
™™* +!
conceptoRepositorio
™™, ?
.
™™? @
EsBien
™™@ F
(
™™F G!
datosVentaIntegrada
™™G Z
.
™™Z [
Orden
™™[ `
.
™™` a
Detalles
™™a i
.
™™i j
First
™™j o
(
™™o p
)
™™p q
.
™™q r
Producto
™™r z
.
™™z {
Id
™™{ }
)
™™} ~
;
™™~ 
foreach
´´ 
(
´´ 
var
´´ 
detalle
´´ $
in
´´% '!
datosVentaIntegrada
´´( ;
.
´´; <
Orden
´´< A
.
´´A B
Detalles
´´B J
)
´´J K
{
¨¨ 
if
≠≠ 
(
≠≠ #
validadorBienServicio
≠≠ -
!=
≠≠. 0!
conceptoRepositorio
≠≠1 D
.
≠≠D E
EsBien
≠≠E K
(
≠≠K L
detalle
≠≠L S
.
≠≠S T
Producto
≠≠T \
.
≠≠\ ]
Id
≠≠] _
)
≠≠_ `
)
≠≠` a
{
ÆÆ 
throw
ØØ 
new
ØØ !
LogicaException
ØØ" 1
(
ØØ1 2
$strØØ2 à
)ØØà â
;ØØâ ä
}
∞∞ 
}
±± 
}
≤≤ 
}
≥≥ 	
private
ΩΩ 
Transaccion
ΩΩ 
GenerarVenta
ΩΩ (
(
ΩΩ( )!
DatosVentaIntegrada
ΩΩ) <!
datosVentaIntegrada
ΩΩ= P
,
ΩΩP Q
Comprobante
ΩΩR ]
comprobante
ΩΩ^ i
,
ΩΩi j!
ConfiguracionAccion
ΩΩk ~(
configConfirmacionDeVentaΩΩ ò
,ΩΩò ô&
UserProfileSessionDataΩΩö ∞
sesionDeUsuarioΩΩ± ¿
)ΩΩ¿ ¡
{
ææ 	
try
øø 
{
¿¿ 
	Operacion
¬¬ 
operacionGenerica
¬¬ +
=
¬¬, -
new
¬¬. 1
	Operacion
¬¬2 ;
(
¬¬; <$
transaccionRepositorio
¬¬< R
.
¬¬R S&
ObtenerUltimaTransaccion
¬¬S k
(
¬¬k l!
TransaccionSettings
¬¬l 
.¬¬ Ä
Default¬¬Ä á
.¬¬á à*
IdTipoTransaccionOperacion¬¬à ¢
)¬¬¢ £
)¬¬£ §
;¬¬§ •
string
ƒƒ 
codigo
ƒƒ 
=
ƒƒ %
codigosOperacion_Logica
ƒƒ  7
.
ƒƒ7 83
%ObtenerSiguienteCodigoParaFacturacion
ƒƒ8 ]
(
ƒƒ] ^
Diccionario
ƒƒ^ i
.
ƒƒi j6
'MapeoTipoTransaccionVsCodigoDeOperacionƒƒj ë
.ƒƒë í
Singleƒƒí ò
(ƒƒò ô
nƒƒô ö
=>ƒƒõ ù
nƒƒû ü
.ƒƒü †
Keyƒƒ† £
==ƒƒ§ ¶)
configConfirmacionDeVentaƒƒß ¿
.ƒƒ¿ ¡&
IdTipoTransaccionVentaƒƒ¡ ◊
)ƒƒ◊ ÿ
.ƒƒÿ Ÿ
ValueƒƒŸ ﬁ
,ƒƒﬁ ﬂ)
configConfirmacionDeVentaƒƒ‡ ˘
.ƒƒ˘ ˙&
IdTipoTransaccionVentaƒƒ˙ ê
)ƒƒê ë
;ƒƒë í
Transaccion
∆∆ 
venta
∆∆ !
=
∆∆" #
new
∆∆$ '
Transaccion
∆∆( 3
(
∆∆3 4
codigo
∆∆4 :
,
∆∆: ;
operacionGenerica
∆∆< M
.
∆∆M N
Id
∆∆N P
,
∆∆P Q!
datosVentaIntegrada
∆∆R e
.
∆∆e f
FechaRegistro
∆∆f s
,
∆∆s t(
configConfirmacionDeVenta∆∆u é
.∆∆é è&
IdTipoTransaccionVenta∆∆è •
,∆∆• ¶)
configConfirmacionDeVenta∆∆ß ¿
.∆∆¿ ¡,
IdUnidadDeNegocioTransversal∆∆¡ ›
,∆∆› ﬁ
true∆∆ﬂ „
,∆∆„ ‰#
datosVentaIntegrada∆∆Â ¯
.∆∆¯ ˘
Orden∆∆˘ ˛
.∆∆˛ ˇ
FechaEmision∆∆ˇ ã
,∆∆ã å#
datosVentaIntegrada∆∆ç †
.∆∆† °
Orden∆∆° ¶
.∆∆¶ ß
FechaEmision∆∆ß ≥
,∆∆≥ ¥#
datosVentaIntegrada∆∆µ »
.∆∆» …
Orden∆∆… Œ
.∆∆Œ œ
Observacion∆∆œ ⁄
,∆∆⁄ €#
datosVentaIntegrada∆∆‹ Ô
.∆∆Ô 
Orden∆∆ ı
.∆∆ı ˆ
FechaEmision∆∆ˆ Ç
,∆∆Ç É#
datosVentaIntegrada∆∆Ñ ó
.∆∆ó ò
Orden∆∆ò ù
.∆∆ù û
Vendedor∆∆û ¶
.∆∆¶ ß
Id∆∆ß ©
,∆∆© ™#
datosVentaIntegrada∆∆´ æ
.∆∆æ ø
Orden∆∆ø ƒ
.∆∆ƒ ≈
ImporteTotal∆∆≈ —
,∆∆— “#
datosVentaIntegrada∆∆” Ê
.∆∆Ê Á
Orden∆∆Á Ï
.∆∆Ï Ì
PuntoDeVenta∆∆Ì ˘
.∆∆˘ ˙
Id∆∆˙ ¸
,∆∆¸ ˝)
configConfirmacionDeVenta∆∆˛ ó
.∆∆ó ò
IdMonedaSoles∆∆ò •
,∆∆• ¶
sesionDeUsuario∆∆ß ∂
.∆∆∂ ∑
TipoDeCambio∆∆∑ √
.∆∆√ ƒ

ValorVenta∆∆ƒ Œ
,∆∆Œ œ
null∆∆– ‘
,∆∆‘ ’#
datosVentaIntegrada∆∆÷ È
.∆∆È Í
Orden∆∆Í Ô
.∆∆Ô 
Cliente∆∆ ˜
.∆∆˜ ¯
Id∆∆¯ ˙
)∆∆˙ ˚
{
«« 
Comprobante
»» 
=
»»  !
comprobante
»»" -
}
…… 
;
…… 
return
   
venta
   
;
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
e
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ 
LogicaException
ŒŒ )
(
ŒŒ) *
$str
ŒŒ* K
,
ŒŒK L
e
ŒŒM N
)
ŒŒN O
;
ŒŒO P
}
œœ 
}
–– 	
private
⁄⁄ 
Transaccion
⁄⁄ !
GenerarOrdenDeVenta
⁄⁄ /
(
⁄⁄/ 0
Transaccion
⁄⁄0 ;
venta
⁄⁄< A
,
⁄⁄A B
ModoOperacionEnum
⁄⁄C T
tipoDeVenta
⁄⁄U `
,
⁄⁄` a!
DatosVentaIntegrada
⁄⁄b u"
datosVentaIntegrada⁄⁄v â
,⁄⁄â ä#
ConfiguracionAccion⁄⁄ã û)
configConfirmacionDeVenta⁄⁄ü ∏
)⁄⁄∏ π
{
€€ 	
int
‹‹ +
IdTipoTransaccionOrdenDeVenta
‹‹ -
=
‹‹. /!
TransaccionSettings
‹‹0 C
.
‹‹C D
Default
‹‹D K
.
‹‹K L+
IdTipoTransaccionOrdenDeVenta
‹‹L i
;
‹‹i j
Transaccion
ﬁﬁ 
ordenDeVenta
ﬁﬁ $
=
ﬁﬁ% &
new
ﬁﬁ' *
Transaccion
ﬁﬁ+ 6
(
ﬁﬁ6 7%
codigosOperacion_Logica
ﬁﬁ7 N
.
ﬁﬁN O3
%ObtenerSiguienteCodigoParaFacturacion
ﬁﬁO t
(
ﬁﬁt u
venta
ﬁﬁu z
.
ﬁﬁz {
codigoﬁﬁ{ Å
+ﬁﬁÇ É
$strﬁﬁÑ á
+ﬁﬁà â
Diccionarioﬁﬁä ï
.ﬁﬁï ñ7
'MapeoTipoTransaccionVsCodigoDeOperacionﬁﬁñ Ω
.ﬁﬁΩ æ
Singleﬁﬁæ ƒ
(ﬁﬁƒ ≈
mtﬁﬁ≈ «
=>ﬁﬁ»  
mtﬁﬁÀ Õ
.ﬁﬁÕ Œ
KeyﬁﬁŒ —
==ﬁﬁ“ ‘-
IdTipoTransaccionOrdenDeVentaﬁﬁ’ Ú
)ﬁﬁÚ Û
.ﬁﬁÛ Ù
ValueﬁﬁÙ ˘
,ﬁﬁ˘ ˙-
IdTipoTransaccionOrdenDeVentaﬁﬁ˚ ò
)ﬁﬁò ô
,ﬁﬁô ö
nullﬁﬁõ ü
,ﬁﬁü †#
datosVentaIntegradaﬁﬁ° ¥
.ﬁﬁ¥ µ
FechaRegistroﬁﬁµ ¬
,ﬁﬁ¬ √-
IdTipoTransaccionOrdenDeVentaﬁﬁƒ ·
,ﬁﬁ· ‚
ventaﬁﬁ„ Ë
.ﬁﬁË È!
id_unidad_negocioﬁﬁÈ ˙
,ﬁﬁ˙ ˚
trueﬁﬁ¸ Ä
,ﬁﬁÄ Å#
datosVentaIntegradaﬁﬁÇ ï
.ﬁﬁï ñ
Ordenﬁﬁñ õ
.ﬁﬁõ ú
FechaEmisionﬁﬁú ®
,ﬁﬁ® ©#
datosVentaIntegradaﬁﬁ™ Ω
.ﬁﬁΩ æ
Ordenﬁﬁæ √
.ﬁﬁ√ ƒ
FechaEmisionﬁﬁƒ –
,ﬁﬁ– —#
datosVentaIntegradaﬁﬁ“ Â
.ﬁﬁÂ Ê
OrdenﬁﬁÊ Î
.ﬁﬁÎ Ï
ObservacionﬁﬁÏ ˜
,ﬁﬁ˜ ¯#
datosVentaIntegradaﬁﬁ˘ å
.ﬁﬁå ç
Ordenﬁﬁç í
.ﬁﬁí ì
FechaEmisionﬁﬁì ü
,ﬁﬁü †#
datosVentaIntegradaﬁﬁ° ¥
.ﬁﬁ¥ µ
Ordenﬁﬁµ ∫
.ﬁﬁ∫ ª
Vendedorﬁﬁª √
.ﬁﬁ√ ƒ
Idﬁﬁƒ ∆
,ﬁﬁ∆ «
ventaﬁﬁ» Õ
.ﬁﬁÕ Œ
importe_totalﬁﬁŒ €
,ﬁﬁ€ ‹#
datosVentaIntegradaﬁﬁ› 
.ﬁﬁ Ò
OrdenﬁﬁÒ ˆ
.ﬁﬁˆ ˜
PuntoDeVentaﬁﬁ˜ É
.ﬁﬁÉ Ñ
IdﬁﬁÑ Ü
,ﬁﬁÜ á
ventaﬁﬁà ç
.ﬁﬁç é
	id_monedaﬁﬁé ó
,ﬁﬁó ò
ventaﬁﬁô û
.ﬁﬁû ü
tipo_cambioﬁﬁü ™
,ﬁﬁ™ ´
nullﬁﬁ¨ ∞
,ﬁﬁ∞ ±#
datosVentaIntegradaﬁﬁ≤ ≈
.ﬁﬁ≈ ∆
Ordenﬁﬁ∆ À
.ﬁﬁÀ Ã
ClienteﬁﬁÃ ”
.ﬁﬁ” ‘
Idﬁﬁ‘ ÷
,ﬁﬁ÷ ◊#
datosVentaIntegradaﬁﬁÿ Î
.ﬁﬁÎ Ï
OrdenﬁﬁÏ Ò
.ﬁﬁÒ Ú
DescuentoGlobalﬁﬁÚ Å
,ﬁﬁÅ Ç#
datosVentaIntegradaﬁﬁÉ ñ
.ﬁﬁñ ó
Ordenﬁﬁó ú
.ﬁﬁú ù 
DescuentoPorItemﬁﬁù ≠
,ﬁﬁ≠ Æ#
datosVentaIntegradaﬁﬁØ ¬
.ﬁﬁ¬ √
Ordenﬁﬁ√ »
.ﬁﬁ» …
Anticipoﬁﬁ… —
,ﬁﬁ— “#
datosVentaIntegradaﬁﬁ” Ê
.ﬁﬁÊ Á
OrdenﬁﬁÁ Ï
.ﬁﬁÏ Ì
GravadaﬁﬁÌ Ù
,ﬁﬁÙ ı#
datosVentaIntegradaﬁﬁˆ â
.ﬁﬁâ ä
Ordenﬁﬁä è
.ﬁﬁè ê
	Exoneradaﬁﬁê ô
,ﬁﬁô ö#
datosVentaIntegradaﬁﬁõ Æ
.ﬁﬁÆ Ø
OrdenﬁﬁØ ¥
.ﬁﬁ¥ µ
Inafectaﬁﬁµ Ω
,ﬁﬁΩ æ#
datosVentaIntegradaﬁﬁø “
.ﬁﬁ“ ”
Ordenﬁﬁ” ÿ
.ﬁﬁÿ Ÿ
GratuitaﬁﬁŸ ·
,ﬁﬁ· ‚#
datosVentaIntegradaﬁﬁ„ ˆ
.ﬁﬁˆ ˜
Ordenﬁﬁ˜ ¸
.ﬁﬁ¸ ˝
Igvﬁﬁ˝ Ä
,ﬁﬁÄ Å#
datosVentaIntegradaﬁﬁÇ ï
.ﬁﬁï ñ
Ordenﬁﬁñ õ
.ﬁﬁõ ú
Iscﬁﬁú ü
,ﬁﬁü †#
datosVentaIntegradaﬁﬁ° ¥
.ﬁﬁ¥ µ
Ordenﬁﬁµ ∫
.ﬁﬁ∫ ª
Icbperﬁﬁª ¡
,ﬁﬁ¡ ¬#
datosVentaIntegradaﬁﬁ√ ÷
.ﬁﬁ÷ ◊
Ordenﬁﬁ◊ ‹
.ﬁﬁ‹ ›
OtrosCargosﬁﬁ› Ë
,ﬁﬁË È#
datosVentaIntegradaﬁﬁÍ ˝
.ﬁﬁ˝ ˛
Ordenﬁﬁ˛ É	
.ﬁﬁÉ	 Ñ	
OtrosTributosﬁﬁÑ	 ë	
)ﬁﬁë	 í	
{
ﬂﬂ 
Comprobante
·· 
=
·· 
venta
·· #
.
··# $
Comprobante
··$ /
,
··/ 0
}
‚‚ 
;
‚‚ 
if
‰‰ 
(
‰‰ 
VentasSettings
‰‰ 
.
‰‰ 
Default
‰‰ &
.
‰‰& '#
GenerarPuntosEnVentas
‰‰' <
&&
‰‰= ?!
datosVentaIntegrada
‰‰@ S
.
‰‰S T
Pago
‰‰T X
.
‰‰X Y
Traza
‰‰Y ^
.
‰‰^ _
MedioDePago
‰‰_ j
.
‰‰j k
Id
‰‰k m
!=
‰‰n p
MaestroSettings‰‰q Ä
.‰‰Ä Å
Default‰‰Å à
.‰‰à â1
!IdDetalleMaestroMedioDepagoPuntos‰‰â ™
&&‰‰´ ≠#
datosVentaIntegrada‰‰Æ ¡
.‰‰¡ ¬
Orden‰‰¬ «
.‰‰« »
Cliente‰‰» œ
.‰‰œ –
Id‰‰– “
!=‰‰” ’
ActorSettings‰‰÷ „
.‰‰„ ‰
Default‰‰‰ Î
.‰‰Î Ï!
IdClienteGenerico‰‰Ï ˝
)‰‰˝ ˛
{
ÂÂ 
var
ÊÊ 
puntosGanados
ÊÊ !
=
ÊÊ" #
Convert
ÊÊ$ +
.
ÊÊ+ ,
ToInt32
ÊÊ, 3
(
ÊÊ3 4
Math
ÊÊ4 8
.
ÊÊ8 9
Truncate
ÊÊ9 A
(
ÊÊA B
ordenDeVenta
ÊÊB N
.
ÊÊN O
importe_total
ÊÊO \
/
ÊÊ] ^
VentasSettings
ÊÊ_ m
.
ÊÊm n
Default
ÊÊn u
.
ÊÊu v/
 ImporteDeVentaParaGenerarUnPuntoÊÊv ñ
)ÊÊñ ó
)ÊÊó ò
;ÊÊò ô
var
ÁÁ 
puntosAcumulados
ÁÁ $
=
ÁÁ% &$
ObtenerPuntosDeCliente
ÁÁ' =
(
ÁÁ= >!
datosVentaIntegrada
ÁÁ> Q
.
ÁÁQ R
Orden
ÁÁR W
.
ÁÁW X
Cliente
ÁÁX _
.
ÁÁ_ `
Id
ÁÁ` b
)
ÁÁb c
.
ÁÁc d
PuntosPorCanjear
ÁÁd t
+
ÁÁu v
puntosGanadosÁÁw Ñ
;ÁÁÑ Ö
ordenDeVenta
ËË 
.
ËË (
EstablecerCantidadesPuntos
ËË 7
(
ËË7 8
puntosGanados
ËË8 E
,
ËËE F
$num
ËËG H
,
ËËH I
puntosGanados
ËËJ W
,
ËËW X
puntosAcumulados
ËËY i
)
ËËi j
;
ËËj k
}
ÈÈ 
if
ÍÍ 
(
ÍÍ !
datosVentaIntegrada
ÍÍ #
.
ÍÍ# $
Pago
ÍÍ$ (
.
ÍÍ( )
Traza
ÍÍ) .
.
ÍÍ. /
MedioDePago
ÍÍ/ :
.
ÍÍ: ;
Id
ÍÍ; =
==
ÍÍ> @
MaestroSettings
ÍÍA P
.
ÍÍP Q
Default
ÍÍQ X
.
ÍÍX Y/
!IdDetalleMaestroMedioDepagoPuntos
ÍÍY z
)
ÍÍz {
{
ÎÎ 
var
ÏÏ 
puntosAcumulados
ÏÏ $
=
ÏÏ% &$
ObtenerPuntosDeCliente
ÏÏ' =
(
ÏÏ= >!
datosVentaIntegrada
ÏÏ> Q
.
ÏÏQ R
Orden
ÏÏR W
.
ÏÏW X
Cliente
ÏÏX _
.
ÏÏ_ `
Id
ÏÏ` b
)
ÏÏb c
.
ÏÏc d
PuntosPorCanjear
ÏÏd t
-
ÏÏu v"
datosVentaIntegradaÏÏw ä
.ÏÏä ã
PagoÏÏã è
.ÏÏè ê
TrazaÏÏê ï
.ÏÏï ñ
InfoÏÏñ ö
.ÏÏö õ
PuntosCajeadosÏÏõ ©
;ÏÏ© ™
ordenDeVenta
ÌÌ 
.
ÌÌ (
EstablecerCantidadesPuntos
ÌÌ 7
(
ÌÌ7 8
$num
ÌÌ8 9
,
ÌÌ9 :
$num
ÌÌ; <
,
ÌÌ< =
$num
ÌÌ> ?
,
ÌÌ? @
puntosAcumulados
ÌÌA Q
)
ÌÌQ R
;
ÌÌR S
}
ÓÓ 
if
 
(
 
!
 
string
 
.
 
IsNullOrEmpty
 %
(
% &!
datosVentaIntegrada
& 9
.
9 :
Orden
: ?
.
? @
Informacion
@ K
)
K L
)
L M
{
ÒÒ 
ordenDeVenta
ÚÚ 
.
ÚÚ 
informacion
ÚÚ (
=
ÚÚ) *!
datosVentaIntegrada
ÚÚ+ >
.
ÚÚ> ?
Orden
ÚÚ? D
.
ÚÚD E
Informacion
ÚÚE P
;
ÚÚP Q
}
ÛÛ 
if
ıı 
(
ıı !
datosVentaIntegrada
ıı #
.
ıı# $
Orden
ıı$ )
.
ıı) *
Cliente
ıı* 1
.
ıı1 2
SeleccionarGrupo
ıı2 B
)
ııB C
{
ˆˆ 
if
˜˜ 
(
˜˜ 
!
˜˜ !
datosVentaIntegrada
˜˜ (
.
˜˜( )
Orden
˜˜) .
.
˜˜. /
Cliente
˜˜/ 6
.
˜˜6 7
NingunGrupo
˜˜7 B
)
˜˜B C
ordenDeVenta
¯¯  
.
¯¯  !'
id_actor_negocio_externo1
¯¯! :
=
¯¯; <!
datosVentaIntegrada
¯¯= P
.
¯¯P Q
Orden
¯¯Q V
.
¯¯V W
Cliente
¯¯W ^
.
¯¯^ _
Grupo
¯¯_ d
.
¯¯d e
Id
¯¯e g
;
¯¯g h
}
˘˘ 
ordenDeVenta
˚˚ 
.
˚˚ 
AgregarDetalles
˚˚ (
(
˚˚( )!
datosVentaIntegrada
˚˚) <
.
˚˚< =
Orden
˚˚= B
.
˚˚B C
DetallesDeVenta
˚˚C R
(
˚˚R S
)
˚˚S T
)
˚˚T U
;
˚˚U V 
Estado_transaccion
˝˝ $
estadoDeLaOrdenDeVenta
˝˝ 5
=
˝˝6 7
new
˝˝8 ; 
Estado_transaccion
˝˝< N
(
˝˝N O!
datosVentaIntegrada
˝˝O b
.
˝˝b c
Orden
˝˝c h
.
˝˝h i
Vendedor
˝˝i q
.
˝˝q r
Id
˝˝r t
,
˝˝t u(
configConfirmacionDeVenta˝˝v è
.˝˝è ê
IdEstadoDeVenta˝˝ê ü
,˝˝ü †#
datosVentaIntegrada˝˝° ¥
.˝˝¥ µ
FechaRegistro˝˝µ ¬
,˝˝¬ √)
configConfirmacionDeVenta˝˝ƒ ›
.˝˝› ﬁ'
ComentarioEstadoDeVenta˝˝ﬁ ı
)˝˝ı ˆ
;˝˝ˆ ˜
ordenDeVenta
˛˛ 
.
˛˛  
Estado_transaccion
˛˛ +
.
˛˛+ ,
Add
˛˛, /
(
˛˛/ 0$
estadoDeLaOrdenDeVenta
˛˛0 F
)
˛˛F G
;
˛˛G H.
 ResolverParametrosDeOrdenDeVenta
ÄÄ ,
(
ÄÄ, -
ordenDeVenta
ÄÄ- 9
,
ÄÄ9 :
tipoDeVenta
ÄÄ; F
,
ÄÄF G!
datosVentaIntegrada
ÄÄH [
)
ÄÄ[ \
;
ÄÄ\ ]
ordenDeVenta
ÇÇ 
.
ÇÇ 
enum1
ÇÇ 
=
ÇÇ  !
datosVentaIntegrada
ÇÇ! 4
.
ÇÇ4 5
Orden
ÇÇ5 :
.
ÇÇ: ;$
HayBienesEnLosDetalles
ÇÇ; Q
(
ÇÇQ R
)
ÇÇR S
?
ÇÇT U
(
ÇÇV W
VentasSettings
ÇÇW e
.
ÇÇe f
Default
ÇÇf m
.
ÇÇm n+
MostrarSeccionEntregaEnVentaÇÇn ä
?ÇÇã å
(ÇÇç é#
datosVentaIntegradaÇÇé °
.ÇÇ° ¢!
MovimientoAlmacenÇÇ¢ ≥
.ÇÇ≥ ¥
EntregaDiferidaÇÇ¥ √
?ÇÇƒ ≈
(ÇÇ∆ «
intÇÇ«  
)ÇÇ  À'
IndicadorImpactoAlmacenÇÇÀ ‚
.ÇÇ‚ „
DiferidaÇÇ„ Î
:ÇÇÏ Ì
(ÇÇÔ 
intÇÇ Û
)ÇÇÛ Ù'
IndicadorImpactoAlmacenÇÇÙ ã
.ÇÇã å
	InmediataÇÇå ï
)ÇÇï ñ
:ÇÇó ò
(ÇÇô ö
intÇÇö ù
)ÇÇù û'
IndicadorImpactoAlmacenÇÇû µ
.ÇÇµ ∂
	InmediataÇÇ∂ ø
)ÇÇø ¿
:ÇÇ¡ ¬
(ÇÇ√ ƒ
intÇÇƒ «
)ÇÇ« »'
IndicadorImpactoAlmacenÇÇ» ﬂ
.ÇÇﬂ ‡!
NoImpactaNoBienesÇÇ‡ Ò
;ÇÇÒ Ú
if
ÑÑ 
(
ÑÑ !
datosVentaIntegrada
ÑÑ #
.
ÑÑ# $
Orden
ÑÑ$ )
.
ÑÑ) *$
HayBienesEnLosDetalles
ÑÑ* @
(
ÑÑ@ A
)
ÑÑA B
)
ÑÑB C
{
ÖÖ 
ordenDeVenta
ÜÜ 
.
ÜÜ '
id_actor_negocio_interno1
ÜÜ 6
=
ÜÜ7 8!
datosVentaIntegrada
ÜÜ9 L
.
ÜÜL M
MovimientoAlmacen
ÜÜM ^
.
ÜÜ^ _
Almacen
ÜÜ_ f
.
ÜÜf g
Id
ÜÜg i
;
ÜÜi j 
Estado_transaccion
áá " 
estadoOrdenAlmacen
áá# 5
=
áá6 7
new
áá8 ; 
Estado_transaccion
áá< N
(
ááN O!
datosVentaIntegrada
ááO b
.
ááb c
MovimientoAlmacen
áác t
.
áát u

Almacenero
ááu 
.áá Ä
IdááÄ Ç
,ááÇ É#
datosVentaIntegradaááÑ ó
.ááó ò!
MovimientoAlmacenááò ©
.áá© ™
EntregaDiferidaáá™ π
?áá∫ ª
MaestroSettingsááº À
.ááÀ Ã
DefaultááÃ ”
.áá” ‘/
IdDetalleMaestroEstadoPendienteáá‘ Û
:ááÙ ı
MaestroSettingsááˆ Ö
.ááÖ Ü
DefaultááÜ ç
.ááç é0
 IdDetalleMaestroEstadoCompletadaááé Æ
,ááÆ Ø#
datosVentaIntegradaáá∞ √
.áá√ ƒ
FechaRegistroááƒ —
,áá— “
$stráá” ˙
)áá˙ ˚
;áá˚ ¸
ordenDeVenta
àà 
.
àà  
Estado_transaccion
àà /
.
àà/ 0
Add
àà0 3
(
àà3 4 
estadoOrdenAlmacen
àà4 F
)
ààF G
;
ààG H
}
ââ 
return
ää 
ordenDeVenta
ää 
;
ää  
}
ãã 	
private
ìì 
void
ìì .
 ResolverParametrosDeOrdenDeVenta
ìì 5
(
ìì5 6
Transaccion
ìì6 A
ordenDeVenta
ììB N
,
ììN O
ModoOperacionEnum
ììP a
tipoDeVenta
ììb m
,
ììm n"
DatosVentaIntegradaììo Ç#
datosVentaIntegradaììÉ ñ
)ììñ ó
{
îî 	
ordenDeVenta
ññ 
.
ññ #
Parametro_transaccion
ññ .
.
ññ. /
Add
ññ/ 2
(
ññ2 3
new
ññ3 6#
Parametro_transaccion
ññ7 L
(
ññL M
MaestroSettings
ññM \
.
ññ\ ]
Default
ññ] d
.
ññd e1
"IdDetalleMaestroParametroTipoVentaññe á
,ññá à
(ññâ ä
(ññä ã
intññã é
)ññé è
tipoDeVentaññè ö
)ññö õ
.ññõ ú
ToStringññú §
(ññ§ •
)ññ• ¶
)ññ¶ ß
)ññß ®
;ññ® ©
ordenDeVenta
òò 
.
òò #
Parametro_transaccion
òò .
.
òò. /
Add
òò/ 2
(
òò2 3
new
òò3 6#
Parametro_transaccion
òò7 L
(
òòL M
MaestroSettings
òòM \
.
òò\ ]
Default
òò] d
.
òòd e2
#IdDetalleMaestroParametroModoDePagoòòe à
,òòà â
(òòä ã
(òòã å
intòòå è
)òòè ê#
datosVentaIntegradaòòê £
.òò£ §
Pagoòò§ ®
.òò® ©

ModoDePagoòò© ≥
)òò≥ ¥
.òò¥ µ
ToStringòòµ Ω
(òòΩ æ
)òòæ ø
)òòø ¿
)òò¿ ¡
;òò¡ ¬
if
öö 
(
öö 
!
öö 
String
öö 
.
öö 
IsNullOrEmpty
öö %
(
öö% &!
datosVentaIntegrada
öö& 9
.
öö9 :
Orden
öö: ?
.
öö? @
Cliente
öö@ G
.
ööG H
Alias
ööH M
)
ööM N
&&
ööO Q
!
ööR S
String
ööS Y
.
ööY Z 
IsNullOrWhiteSpace
ööZ l
(
ööl m"
datosVentaIntegradaööm Ä
.ööÄ Å
OrdenööÅ Ü
.ööÜ á
Clienteööá é
.ööé è
Aliasööè î
)ööî ï
&&ööñ ò#
datosVentaIntegradaööô ¨
.öö¨ ≠
Ordenöö≠ ≤
.öö≤ ≥
Clienteöö≥ ∫
.öö∫ ª
Idööª Ω
==ööæ ¿
ActorSettingsöö¡ Œ
.ööŒ œ
Defaultööœ ÷
.öö÷ ◊!
IdClienteGenericoöö◊ Ë
)ööË È
{
õõ 
ordenDeVenta
úú 
.
úú #
Parametro_transaccion
úú 2
.
úú2 3
Add
úú3 6
(
úú6 7
new
úú7 :#
Parametro_transaccion
úú; P
(
úúP Q
MaestroSettings
úúQ `
.
úú` a
Default
úúa h
.
úúh i4
%IdDetalleMaestroParametroAliasClienteúúi é
,úúé è#
datosVentaIntegradaúúê £
.úú£ §
Ordenúú§ ©
.úú© ™
Clienteúú™ ±
.úú± ≤
Aliasúú≤ ∑
)úú∑ ∏
)úú∏ π
;úúπ ∫
}
ùù 
if
üü 
(
üü !
datosVentaIntegrada
üü #
.
üü# $
Orden
üü$ )
.
üü) *
UnificarDetalles
üü* :
)
üü: ;
{
†† 
ordenDeVenta
°° 
.
°° #
Parametro_transaccion
°° 2
.
°°2 3
Add
°°3 6
(
°°6 7
new
°°7 :#
Parametro_transaccion
°°; P
(
°°P Q
MaestroSettings
°°Q `
.
°°` a
Default
°°a h
.
°°h i8
)IdDetalleMaestroParametroDetalleUnificado°°i í
,°°í ì
VentasSettings°°î ¢
.°°¢ £
Default°°£ ™
.°°™ ´4
$ActivarDetalleUnificadoPersonalizado°°´ œ
?°°– —#
datosVentaIntegrada°°“ Â
.°°Â Ê
Orden°°Ê Î
.°°Î Ï%
ValorDetalleUnificado°°Ï Å
:°°Ç É"
AplicacionSettings°°Ñ ñ
.°°ñ ó
Default°°ó û
.°°û ü%
ValorDetalleUnificado°°ü ¥
)°°¥ µ
)°°µ ∂
;°°∂ ∑
}
¢¢ 
if
§§ 
(
§§ !
datosVentaIntegrada
§§ #
.
§§# $
MovimientoAlmacen
§§$ 5
.
§§5 60
"HayComprobanteDeSalidaDeMercaderia
§§6 X
)
§§X Y
{
•• 
ordenDeVenta
¶¶ 
.
¶¶ #
Parametro_transaccion
¶¶ 2
.
¶¶2 3
Add
¶¶3 6
(
¶¶6 7
new
¶¶7 :#
Parametro_transaccion
¶¶; P
(
¶¶P Q
MaestroSettings
¶¶Q `
.
¶¶` a
Default
¶¶a h
.
¶¶h i;
,IdDetalleMaestroParametroTieneGuiaDeRemision¶¶i ï
,¶¶ï ñ
$str¶¶ó ö
)¶¶ö õ
)¶¶õ ú
;¶¶ú ù
}
ßß 
if
©© 
(
©© !
datosVentaIntegrada
©© #
.
©©# $
Orden
©©$ )
.
©©) *
Icbper
©©* 0
>
©©1 2
$num
©©3 4
)
©©4 5
{
™™ 
ordenDeVenta
´´ 
.
´´ #
Parametro_transaccion
´´ 2
.
´´2 3
Add
´´3 6
(
´´6 7
new
´´7 :#
Parametro_transaccion
´´; P
(
´´P Q
MaestroSettings
´´Q `
.
´´` a
Default
´´a h
.
´´h i>
/IdDetalleMaestroParametroNumeroBolsasDePlastico´´i ò
,´´ò ô#
datosVentaIntegrada´´ö ≠
.´´≠ Æ
Orden´´Æ ≥
.´´≥ ¥&
NumeroBolsasDePlastico´´¥  
.´´  À
ToString´´À ”
(´´” ‘
)´´‘ ’
)´´’ ÷
)´´÷ ◊
;´´◊ ÿ
ordenDeVenta
¨¨ 
.
¨¨ #
Parametro_transaccion
¨¨ 2
.
¨¨2 3
Add
¨¨3 6
(
¨¨6 7
new
¨¨7 :#
Parametro_transaccion
¨¨; P
(
¨¨P Q
MaestroSettings
¨¨Q `
.
¨¨` a
Default
¨¨a h
.
¨¨h i.
IdDetalleMaestroParametroIcbper¨¨i à
,¨¨à â#
datosVentaIntegrada¨¨ä ù
.¨¨ù û
Orden¨¨û £
.¨¨£ §
Icbper¨¨§ ™
.¨¨™ ´
ToString¨¨´ ≥
(¨¨≥ ¥
)¨¨¥ µ
)¨¨µ ∂
)¨¨∂ ∑
;¨¨∑ ∏
}
≠≠ 
}
ÆÆ 	
public
µµ 
void
µµ ,
ResolverCuotasDeVentaIntegrada
µµ 2
(
µµ2 3
Transaccion
µµ3 >
ordenDeVenta
µµ? K
,
µµK L!
DatosVentaIntegrada
µµM `!
datosVentaIntegrada
µµa t
)
µµt u
{
∂∂ 	
try
∑∑ 
{
∏∏ 
if
∫∫ 
(
∫∫ !
datosVentaIntegrada
∫∫ '
.
∫∫' (
Pago
∫∫( ,
.
∫∫, -

ModoDePago
∫∫- 7
==
∫∫8 :
ModoPago
∫∫; C
.
∫∫C D 
CreditoConfigurado
∫∫D V
)
∫∫V W
{
ªª 
int
ºº 
cont
ºº 
=
ºº 
$num
ºº  
;
ºº  !
foreach
ΩΩ 
(
ΩΩ 
var
ΩΩ  
item
ΩΩ! %
in
ΩΩ& (!
datosVentaIntegrada
ΩΩ) <
.
ΩΩ< =
Pago
ΩΩ= A
.
ΩΩA B
CuotasDeVenta
ΩΩB O
(
ΩΩO P
)
ΩΩP Q
)
ΩΩQ R
{
ææ 
Cuota
øø 
cuota
øø #
=
øø$ %
new
øø& )
Cuota
øø* /
(
øø/ 02
$ObtenerSiguienteCodigoParaNuevaCuota
øø0 T
(
øøT U
true
øøU Y
,
øøY Z!
datosVentaIntegrada
øø[ n
.
øøn o
Orden
øøo t
.
øøt u
FechaEmisionøøu Å
.øøÅ Ç
YearøøÇ Ü
)øøÜ á
+øøà â
$strøøä ç
+øøé è
contøøê î
++øøî ñ
,øøñ ó#
datosVentaIntegradaøøò ´
.øø´ ¨
Ordenøø¨ ±
.øø± ≤
FechaEmisionøø≤ æ
,øøæ ø
itemøø¿ ƒ
.øøƒ ≈!
fecha_vencimientoøø≈ ÷
,øø÷ ◊
itemøøÿ ‹
.øø‹ ›
capitaløø› ‰
,øø‰ Â
itemøøÊ Í
.øøÍ Î
interesøøÎ Ú
,øøÚ Û
itemøøÙ ¯
.øø¯ ˘
totaløø˘ ˛
,øø˛ ˇ
$strøøÄ ò
+øøô ö
contøøõ ü
,øøü †
trueøø° •
,øø• ¶
itemøøß ´
.øø´ ¨
cuota_inicialøø¨ π
)øøπ ∫
;øø∫ ª
ordenDeVenta
¿¿ $
.
¿¿$ %
Cuota
¿¿% *
.
¿¿* +
Add
¿¿+ .
(
¿¿. /
cuota
¿¿/ 4
)
¿¿4 5
;
¿¿5 6
}
¡¡ 
var
√√ 
cuotas
√√ 
=
√√  
ordenDeVenta
√√! -
.
√√- .
Cuota
√√. 3
;
√√3 4
var
ƒƒ 

diferencia
ƒƒ "
=
ƒƒ# $
ordenDeVenta
ƒƒ% 1
.
ƒƒ1 2
importe_total
ƒƒ2 ?
-
ƒƒ@ A
cuotas
ƒƒB H
.
ƒƒH I
Sum
ƒƒI L
(
ƒƒL M
c
ƒƒM N
=>
ƒƒO Q
c
ƒƒR S
.
ƒƒS T
total
ƒƒT Y
)
ƒƒY Z
;
ƒƒZ [
cuotas
≈≈ 
.
≈≈ 
Last
≈≈ 
(
≈≈  
)
≈≈  !
.
≈≈! "
total
≈≈" '
=
≈≈( )
cuotas
≈≈* 0
.
≈≈0 1
Last
≈≈1 5
(
≈≈5 6
)
≈≈6 7
.
≈≈7 8
capital
≈≈8 ?
=
≈≈@ A
cuotas
≈≈B H
.
≈≈H I
Last
≈≈I M
(
≈≈M N
)
≈≈N O
.
≈≈O P
total
≈≈P U
+
≈≈V W

diferencia
≈≈X b
;
≈≈b c
}
«« 
else
»» 
{
…… 
Cuota
ÀÀ 
cuota
ÀÀ 
=
ÀÀ  !
new
ÀÀ" %
Cuota
ÀÀ& +
(
ÀÀ+ ,2
$ObtenerSiguienteCodigoParaNuevaCuota
ÀÀ, P
(
ÀÀP Q
true
ÀÀQ U
,
ÀÀU V!
datosVentaIntegrada
ÀÀW j
.
ÀÀj k
Orden
ÀÀk p
.
ÀÀp q
FechaEmision
ÀÀq }
.
ÀÀ} ~
YearÀÀ~ Ç
)ÀÀÇ É
+ÀÀÑ Ö
$strÀÀÜ â
+ÀÀä ã
$numÀÀå ç
,ÀÀç é#
datosVentaIntegradaÀÀè ¢
.ÀÀ¢ £
OrdenÀÀ£ ®
.ÀÀ® ©
FechaEmisionÀÀ© µ
,ÀÀµ ∂#
datosVentaIntegradaÀÀ∑  
.ÀÀ  À
PagoÀÀÀ œ
.ÀÀœ –

ModoDePagoÀÀ– ⁄
==ÀÀ€ ›
ModoPagoÀÀﬁ Ê
.ÀÀÊ Á
CreditoRapidoÀÀÁ Ù
?ÀÀı ˆ#
datosVentaIntegradaÀÀ˜ ä
.ÀÀä ã
OrdenÀÀã ê
.ÀÀê ë
FechaEmisionÀÀë ù
.ÀÀù û
AddDaysÀÀû •
(ÀÀ• ¶
VentasSettingsÀÀ¶ ¥
.ÀÀ¥ µ
DefaultÀÀµ º
.ÀÀº Ω7
'DiasDeVencimientoEnCreditoRapidoDeVentaÀÀΩ ‰
)ÀÀ‰ Â
:ÀÀÊ Á#
datosVentaIntegradaÀÀË ˚
.ÀÀ˚ ¸
OrdenÀÀ¸ Å
.ÀÀÅ Ç
FechaEmisionÀÀÇ é
,ÀÀé è#
datosVentaIntegradaÀÀê £
.ÀÀ£ §
OrdenÀÀ§ ©
.ÀÀ© ™
ImporteTotalÀÀ™ ∂
,ÀÀ∂ ∑
$strÀÀ∏ ‚
,ÀÀ‚ „
trueÀÀ‰ Ë
)ÀÀË È
;ÀÀÈ Í
ordenDeVenta
ÕÕ  
.
ÕÕ  !
Cuota
ÕÕ! &
.
ÕÕ& '
Add
ÕÕ' *
(
ÕÕ* +
cuota
ÕÕ+ 0
)
ÕÕ0 1
;
ÕÕ1 2
}
ŒŒ 
}
œœ 
catch
–– 
(
–– 
	Exception
–– 
e
–– 
)
–– 
{
—— 
throw
““ 
new
““ 
LogicaException
““ )
(
““) *
$str
““* ^
,
““^ _
e
““` a
)
““a b
;
““b c
}
”” 
}
‘‘ 	
public
›› 
Transaccion
›› 4
&GenerarIngresoDeDineroDeVentaIntegrada
›› A
(
››A B
Transaccion
››B M
venta
››N S
,
››S T
Transaccion
››U `
ordenDeVenta
››a m
,
››m n"
DatosVentaIntegrada››o Ç#
datosVentaIntegrada››É ñ
)››ñ ó
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
Transaccion
‚‚ 
ingresoDeDinero
‚‚ +
=
‚‚, -
null
‚‚. 2
;
‚‚2 3
if
‰‰ 
(
‰‰ !
datosVentaIntegrada
‰‰ '
.
‰‰' (
Pago
‰‰( ,
.
‰‰, -
HayIngresoDinero
‰‰- =
)
‰‰= >
{
ÂÂ 
var
ÊÊ +
esCreditoRapidoConPagoInicial
ÊÊ 5
=
ÊÊ6 7
(
ÊÊ8 9!
datosVentaIntegrada
ÊÊ9 L
.
ÊÊL M
Pago
ÊÊM Q
.
ÊÊQ R

ModoDePago
ÊÊR \
==
ÊÊ] _
ModoPago
ÊÊ` h
.
ÊÊh i
CreditoRapido
ÊÊi v
&&
ÊÊw y"
datosVentaIntegradaÊÊz ç
.ÊÊç é
PagoÊÊé í
.ÊÊí ì
InicialÊÊì ö
>ÊÊõ ú
$numÊÊù û
)ÊÊû ü
;ÊÊü †
Cuota
ËË 
cuotaACobrar
ËË &
=
ËË' (
(
ËË) *!
datosVentaIntegrada
ËË* =
.
ËË= >
Pago
ËË> B
.
ËËB C

ModoDePago
ËËC M
==
ËËN P
ModoPago
ËËQ Y
.
ËËY Z
Contado
ËËZ a
||
ËËb d,
esCreditoRapidoConPagoInicialËËe Ç
)ËËÇ É
?ËËÑ Ö
ordenDeVentaËËÜ í
.ËËí ì
CuotaËËì ò
.ËËò ô
FirstËËô û
(ËËû ü
)ËËü †
:ËË° ¢
ordenDeVentaËË£ Ø
.ËËØ ∞
CuotaËË∞ µ
.ËËµ ∂
SingleËË∂ º
(ËËº Ω
cËËΩ æ
=>ËËø ¡
cËË¬ √
.ËË√ ƒ
cuota_inicialËËƒ —
)ËË— “
;ËË“ ”
cuotaACobrar
ÈÈ  
.
ÈÈ  !
SetPagoACuenta
ÈÈ! /
(
ÈÈ/ 0+
esCreditoRapidoConPagoInicial
ÈÈ0 M
?
ÈÈN O!
datosVentaIntegrada
ÈÈP c
.
ÈÈc d
Pago
ÈÈd h
.
ÈÈh i
Inicial
ÈÈi p
:
ÈÈq r
cuotaACobrar
ÈÈs 
.ÈÈ Ä
totalÈÈÄ Ö
)ÈÈÖ Ü
;ÈÈÜ á"
ValidarImporteAPagar
ÍÍ (
(
ÍÍ( )
$num
ÍÍ) *
,
ÍÍ* +
cuotaACobrar
ÍÍ, 8
.
ÍÍ8 9
total
ÍÍ9 >
,
ÍÍ> ?
venta
ÍÍ@ E
.
ÍÍE F
importe_total
ÍÍF S
)
ÍÍS T
;
ÍÍT U
ingresoDeDinero
ÎÎ #
=
ÎÎ$ %!
GenerarCobroDeVenta
ÎÎ& 9
(
ÎÎ9 :!
datosVentaIntegrada
ÎÎ: M
.
ÎÎM N
Pago
ÎÎN R
.
ÎÎR S
Cajero
ÎÎS Y
.
ÎÎY Z
Id
ÎÎZ \
,
ÎÎ\ ]!
datosVentaIntegrada
ÎÎ^ q
.
ÎÎq r
Pago
ÎÎr v
.
ÎÎv w
Caja
ÎÎw {
.
ÎÎ{ |
Id
ÎÎ| ~
,
ÎÎ~ #
datosVentaIntegradaÎÎÄ ì
.ÎÎì î
OrdenÎÎî ô
.ÎÎô ö
ClienteÎÎö °
.ÎÎ° ¢
IdÎÎ¢ §
,ÎÎ§ •

CodigoPagoÎÎ¶ ∞
(ÎÎ∞ ±
cuotaACobrarÎÎ± Ω
)ÎÎΩ æ
,ÎÎæ ø
ventaÎÎ¿ ≈
.ÎÎ≈ ∆
ComprobanteÎÎ∆ —
,ÎÎ— “
ventaÎÎ” ÿ
.ÎÎÿ Ÿ
tipo_cambioÎÎŸ ‰
,ÎÎ‰ Â
ventaÎÎÊ Î
.ÎÎÎ Ï!
id_unidad_negocioÎÎÏ ˝
,ÎÎ˝ ˛
ventaÎÎˇ Ñ
.ÎÎÑ Ö
	id_monedaÎÎÖ é
,ÎÎé è
cuotaACobrarÎÎê ú
.ÎÎú ù
pago_a_cuentaÎÎù ™
,ÎÎ™ ´#
datosVentaIntegradaÎÎ¨ ø
.ÎÎø ¿
OrdenÎÎ¿ ≈
.ÎÎ≈ ∆
FechaEmisionÎÎ∆ “
,ÎÎ“ ”#
datosVentaIntegradaÎÎ‘ Á
.ÎÎÁ Ë
FechaRegistroÎÎË ı
,ÎÎı ˆ#
datosVentaIntegradaÎÎ˜ ä
.ÎÎä ã
OrdenÎÎã ê
.ÎÎê ë
ObservacionÎÎë ú
,ÎÎú ù#
datosVentaIntegradaÎÎû ±
.ÎÎ± ≤
PagoÎÎ≤ ∂
.ÎÎ∂ ∑
TrazaÎÎ∑ º
.ÎÎº Ω
MedioDePagoÎÎΩ »
.ÎÎ» …
IdÎÎ… À
,ÎÎÀ Ã#
datosVentaIntegradaÎÎÕ ‡
.ÎÎ‡ ·
PagoÎÎ· Â
.ÎÎÂ Ê
TrazaÎÎÊ Î
.ÎÎÎ Ï
InfoÎÎÏ 
.ÎÎ Ò!
EntidadFinancieraÎÎÒ Ç
.ÎÎÇ É
IdÎÎÉ Ö
,ÎÎÖ Ü#
datosVentaIntegradaÎÎá ö
.ÎÎö õ
PagoÎÎõ ü
.ÎÎü †
TrazaÎÎ† •
.ÎÎ• ¶
InfoÎÎ¶ ™
.ÎÎ™ ´
OperadorTarjetaÎÎ´ ∫
.ÎÎ∫ ª
IdÎÎª Ω
,ÎÎΩ æ#
datosVentaIntegradaÎÎø “
.ÎÎ“ ”
PagoÎÎ” ◊
.ÎÎ◊ ÿ
TrazaÎÎÿ ›
.ÎÎ› ﬁ
InfoÎÎﬁ ‚
.ÎÎ‚ „
ObservacionÎÎ„ Ó
)ÎÎÓ Ô
;ÎÎÔ 
if
ÌÌ 
(
ÌÌ !
datosVentaIntegrada
ÌÌ +
.
ÌÌ+ ,
Pago
ÌÌ, 0
.
ÌÌ0 1
Traza
ÌÌ1 6
.
ÌÌ6 7
MedioDePago
ÌÌ7 B
.
ÌÌB C
Id
ÌÌC E
==
ÌÌF H
MaestroSettings
ÌÌI X
.
ÌÌX Y
Default
ÌÌY `
.
ÌÌ` a0
!IdDetalleMaestroMedioDepagoPuntosÌÌa Ç
)ÌÌÇ É
{
ÓÓ 
ingresoDeDinero
ÔÔ '
.
ÔÔ' (
	cantidad1
ÔÔ( 1
=
ÔÔ2 3!
datosVentaIntegrada
ÔÔ4 G
.
ÔÔG H
Pago
ÔÔH L
.
ÔÔL M
Traza
ÔÔM R
.
ÔÔR S
Info
ÔÔS W
.
ÔÔW X
PuntosCajeados
ÔÔX f
;
ÔÔf g
}
 
if
ÒÒ 
(
ÒÒ !
datosVentaIntegrada
ÒÒ +
.
ÒÒ+ ,
Pago
ÒÒ, 0
.
ÒÒ0 1
Traza
ÒÒ1 6
.
ÒÒ6 7
MedioDePago
ÒÒ7 B
.
ÒÒB C
Id
ÒÒC E
==
ÒÒF H
MaestroSettings
ÒÒI X
.
ÒÒX Y
Default
ÒÒY `
.
ÒÒ` a:
+IdDetalleMaestroMedioDepagoDepositoEnCuentaÒÒa å
||ÒÒç è#
datosVentaIntegradaÒÒê £
.ÒÒ£ §
PagoÒÒ§ ®
.ÒÒ® ©
TrazaÒÒ© Æ
.ÒÒÆ Ø
MedioDePagoÒÒØ ∫
.ÒÒ∫ ª
IdÒÒª Ω
==ÒÒæ ¿
MaestroSettingsÒÒ¡ –
.ÒÒ– —
DefaultÒÒ— ÿ
.ÒÒÿ Ÿ@
0IdDetalleMaestroMedioDepagoTransferenciaDeFondosÒÒŸ â
)ÒÒâ ä
{
ÚÚ 
ingresoDeDinero
ÛÛ '
.
ÛÛ' ('
id_actor_negocio_interno1
ÛÛ( A
=
ÛÛB C!
datosVentaIntegrada
ÛÛD W
.
ÛÛW X
Pago
ÛÛX \
.
ÛÛ\ ]
Traza
ÛÛ] b
.
ÛÛb c
Info
ÛÛc g
.
ÛÛg h
CuentaBancaria
ÛÛh v
.
ÛÛv w
Id
ÛÛw y
;
ÛÛy z
}
ÙÙ $
VincularPagoConLaCuota
ıı *
(
ıı* +
ingresoDeDinero
ıı+ :
,
ıı: ;
cuotaACobrar
ıı< H
,
ııH I
cuotaACobrar
ııJ V
.
ııV W
pago_a_cuenta
ııW d
)
ııd e
;
ııe f
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
string
ˆˆ 
.
ˆˆ  
IsNullOrEmpty
ˆˆ  -
(
ˆˆ- .!
datosVentaIntegrada
ˆˆ. A
.
ˆˆA B
Pago
ˆˆB F
.
ˆˆF G
Traza
ˆˆG L
.
ˆˆL M
Info
ˆˆM Q
.
ˆˆQ R
InformacionJson
ˆˆR a
)
ˆˆa b
)
ˆˆb c
ingresoDeDinero
ˆˆd s
.
ˆˆs t

Traza_pago
ˆˆt ~
.
ˆˆ~ 
Firstˆˆ Ñ
(ˆˆÑ Ö
)ˆˆÖ Ü
.ˆˆÜ á
extension_jsonˆˆá ï
=ˆˆñ ó#
datosVentaIntegradaˆˆò ´
.ˆˆ´ ¨
Pagoˆˆ¨ ∞
.ˆˆ∞ ±
Trazaˆˆ± ∂
.ˆˆ∂ ∑
Infoˆˆ∑ ª
.ˆˆª º
InformacionJsonˆˆº À
;ˆˆÀ Ã
}
˜˜ 
return
¯¯ 
ingresoDeDinero
¯¯ &
;
¯¯& '
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
new
¸¸ 
LogicaException
¸¸ )
(
¸¸) *
$str
¸¸* j
,
¸¸j k
e
¸¸l m
)
¸¸m n
;
¸¸n o
}
˝˝ 
}
˛˛ 	
public
áá 
List
áá 
<
áá 
Transaccion
áá 
>
áá  7
)GenerarSalidaDeMercaderiaDeVentaIntegrada
áá! J
(
ááJ K
Transaccion
ááK V
venta
ááW \
,
áá\ ]!
DatosVentaIntegrada
áá^ q"
datosVentaIntegradaáár Ö
,ááÖ Ü&
UserProfileSessionDataááá ù
sesionDeUsuarioááû ≠
)áá≠ Æ
{
àà 	
try
ââ 
{
ää 
List
ãã 
<
ãã 
Transaccion
ãã  
>
ãã  !!
salidasDeMercaderia
ãã" 5
=
ãã6 7
new
ãã8 ;
List
ãã< @
<
ãã@ A
Transaccion
ããA L
>
ããL M
(
ããM N
)
ããN O
;
ããO P
if
çç 
(
çç 
!
çç !
datosVentaIntegrada
çç (
.
çç( )
MovimientoAlmacen
çç) :
.
çç: ;
EntregaDiferida
çç; J
)
ççJ K
{
éé 
if
êê 
(
êê !
datosVentaIntegrada
êê +
.
êê+ ,
MovimientoAlmacen
êê, =
.
êê= >0
"HayComprobanteDeSalidaDeMercaderia
êê> `
)
êê` a
{
ëë 
int
ìì *
maximoCodigoSalidaMercaderia
ìì 8
=
ìì9 :%
codigosOperacion_Logica
ìì; R
.
ììR S0
"ObtenerMaximoCodigoParaTransaccion
ììS u
(
ììu v
venta
ììv {
.
ìì{ |
codigoìì| Ç
+ììÉ Ñ
$strììÖ à
+ììâ ä
Diccionarioììã ñ
.ììñ ó7
'MapeoTipoTransaccionVsCodigoDeOperacionììó æ
.ììæ ø
Singleììø ≈
(ìì≈ ∆
cìì∆ «
=>ìì»  
cììÀ Ã
.ììÃ Õ
KeyììÕ –
==ìì— ”#
TransaccionSettingsìì‘ Á
.ììÁ Ë
DefaultììË Ô
.ììÔ 5
%IdTipoTransaccionSalidaBienesPorVentaìì ï
)ììï ñ
,ììñ ó#
TransaccionSettingsììò ´
.ìì´ ¨
Defaultìì¨ ≥
.ìì≥ ¥5
%IdTipoTransaccionSalidaBienesPorVentaìì¥ Ÿ
)ììŸ ⁄
;ìì⁄ €
Codigo
îî 
maximosCodigos
îî -
;
îî- .
foreach
ïï 
(
ïï  !
var
ïï! $
salida
ïï% +
in
ïï, .!
datosVentaIntegrada
ïï/ B
.
ïïB C
MovimientoAlmacen
ïïC T
.
ïïT U/
!ComprobantesDeSalidasDeMercaderia
ïïU v
)
ïïv w
{
ññ 
maximosCodigos
óó *
=
óó+ ,
new
óó- 0
Codigo
óó1 7
(
óó7 8*
maximoCodigoSalidaMercaderia
óó8 T
)
óóT U
;
óóU V
Transaccion
ôô '&
salidaMercaderiaPorVenta
ôô( @
=
ôôA B0
"GenerarSalidaDeMercaderiaParaVenta
ôôC e
(
ôôe f
venta
ôôf k
,
ôôk l"
datosVentaIntegradaôôm Ä
.ôôÄ Å!
MovimientoAlmacenôôÅ í
.ôôí ì

Almaceneroôôì ù
.ôôù û
Idôôû †
,ôô† °#
datosVentaIntegradaôô¢ µ
.ôôµ ∂!
MovimientoAlmacenôô∂ «
.ôô« »
Almacenôô» œ
.ôôœ –
Idôô– “
,ôô“ ”
salidaôô‘ ⁄
.ôô⁄ €
	IdTerceroôô€ ‰
,ôô‰ Â
ventaôôÊ Î
.ôôÎ Ï
codigoôôÏ Ú
+ôôÛ Ù
maximosCodigosôôı É
.ôôÉ Ñ/
SiguienteCodigoSalidaMercaderiaôôÑ £
,ôô£ §#
datosVentaIntegradaôô• ∏
.ôô∏ π
FechaRegistroôôπ ∆
,ôô∆ «
salidaôô» Œ
,ôôŒ œ
sesionDeUsuarioôô– ﬂ
)ôôﬂ ‡
;ôô‡ ·!
salidasDeMercaderia
öö /
.
öö/ 0
Add
öö0 3
(
öö3 4&
salidaMercaderiaPorVenta
öö4 L
)
ööL M
;
ööM N*
maximoCodigoSalidaMercaderia
õõ 8
++
õõ8 :
;
õõ: ;
}
úú 
}
ùù 
else
ûû 
if
ûû 
(
ûû !
datosVentaIntegrada
ûû 0
.
ûû0 1
Orden
ûû1 6
.
ûû6 7$
HayBienesEnLosDetalles
ûû7 M
(
ûûM N
)
ûûN O
)
ûûO P
{
üü 
Transaccion
†† #&
salidaMercaderiaPorVenta
††$ <
=
††= >+
GenerarMovimientoDeMercaderia
††? \
(
††\ ]
venta
††] b
,
††b c!
datosVentaIntegrada
††d w
.
††w x 
MovimientoAlmacen††x â
.††â ä

Almacenero††ä î
.††î ï
Id††ï ó
,††ó ò#
datosVentaIntegrada††ô ¨
.††¨ ≠!
MovimientoAlmacen††≠ æ
.††æ ø
Almacen††ø ∆
.††∆ «
Id††« …
,††…  #
datosVentaIntegrada††À ﬁ
.††ﬁ ﬂ
Orden††ﬂ ‰
.††‰ Â
Cliente††Â Ï
.††Ï Ì
Id††Ì Ô
,††Ô #
TransaccionSettings††Ò Ñ
.††Ñ Ö
Default††Ö å
.††å ç5
%IdTipoTransaccionSalidaBienesPorVenta††ç ≤
,††≤ ≥#
datosVentaIntegrada††¥ «
.††« »
FechaRegistro††» ’
,††’ ÷#
datosVentaIntegrada††◊ Í
.††Í Î
Orden††Î 
.†† Ò
Observacion††Ò ¸
,††¸ ˝#
datosVentaIntegrada††˛ ë
.††ë í
Orden††í ó
.††ó ò+
DetallesDeVentaQueSonBienes††ò ≥
(††≥ ¥
)††¥ µ
,††µ ∂
sesionDeUsuario††∑ ∆
,††∆ «
$num††» …
)††…  
;††  À!
salidasDeMercaderia
°° +
.
°°+ ,
Add
°°, /
(
°°/ 0&
salidaMercaderiaPorVenta
°°0 H
)
°°H I
;
°°I J
}
¢¢ 
}
££ 
return
§§ !
salidasDeMercaderia
§§ *
;
§§* +
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* x
,
®®x y
e
®®z {
)
®®{ |
;
®®| }
}
©© 
}
™™ 	
public
≥≥  
OperacionIntegrada
≥≥ !#
GenerarVentaIntegrada
≥≥" 7
(
≥≥7 8
ModoOperacionEnum
≥≥8 I
tipoDeVenta
≥≥J U
,
≥≥U V$
UserProfileSessionData
≥≥W m
sesionDeUsuario
≥≥n }
,
≥≥} ~"
DatosVentaIntegrada≥≥ í#
datosVentaIntegrada≥≥ì ¶
,≥≥¶ ß
bool≥≥® ¨"
GenerarComprobante≥≥≠ ø
)≥≥ø ¿
{
¥¥ 	
try
µµ 
{
∂∂ +
CalcularDatosDeVentaIntegrada
∑∑ -
(
∑∑- .
tipoDeVenta
∑∑. 9
,
∑∑9 :!
datosVentaIntegrada
∑∑; N
,
∑∑N O
sesionDeUsuario
∑∑P _
)
∑∑_ `
;
∑∑` a
ValidarVenta
∏∏ 
(
∏∏ !
datosVentaIntegrada
∏∏ 0
,
∏∏0 1!
ConfiguracionAccion
∏∏2 E
.
∏∏E F$
ConfirmacionOrdenVenta
∏∏F \
)
∏∏\ ]
;
∏∏] ^
Comprobante
∫∫ 
comprobante
∫∫ '
=
∫∫( ) 
GenerarComprobante
∫∫* <
?
∫∫= >&
GenerarComprobantePropio
∫∫? W
(
∫∫W X!
datosVentaIntegrada
∫∫X k
.
∫∫k l
Orden
∫∫l q
.
∫∫q r
Comprobante
∫∫r }
.
∫∫} ~
Serie∫∫~ É
.∫∫É Ñ
Id∫∫Ñ Ü
,∫∫Ü á#
datosVentaIntegrada∫∫à õ
.∫∫õ ú
Orden∫∫ú °
.∫∫° ¢
Comprobante∫∫¢ ≠
.∫∫≠ Æ
Numero∫∫Æ ¥
)∫∫¥ µ
:∫∫∂ ∑
null∫∫∏ º
;∫∫º Ω
Transaccion
ªª 
venta
ªª !
=
ªª" #
GenerarVenta
ªª$ 0
(
ªª0 1!
datosVentaIntegrada
ªª1 D
,
ªªD E
comprobante
ªªF Q
,
ªªQ R!
ConfiguracionAccion
ªªS f
.
ªªf g$
ConfirmacionOrdenVenta
ªªg }
,
ªª} ~
sesionDeUsuarioªª é
)ªªé è
;ªªè ê
Transaccion
ºº 
ordenDeVenta
ºº (
=
ºº) *!
GenerarOrdenDeVenta
ºº+ >
(
ºº> ?
venta
ºº? D
,
ººD E
tipoDeVenta
ººF Q
,
ººQ R!
datosVentaIntegrada
ººS f
,
ººf g!
ConfiguracionAccion
ººh {
.
ºº{ |%
ConfirmacionOrdenVentaºº| í
)ººí ì
;ººì î,
ResolverCuotasDeVentaIntegrada
ææ .
(
ææ. /
ordenDeVenta
ææ/ ;
,
ææ; <!
datosVentaIntegrada
ææ= P
)
ææP Q
;
ææQ R
Transaccion
¿¿ 
ingresoDeDinero
¿¿ +
=
¿¿, -4
&GenerarIngresoDeDineroDeVentaIntegrada
¿¿. T
(
¿¿T U
venta
¿¿U Z
,
¿¿Z [
ordenDeVenta
¿¿\ h
,
¿¿h i!
datosVentaIntegrada
¿¿j }
)
¿¿} ~
;
¿¿~ 
List
¡¡ 
<
¡¡ 
Transaccion
¡¡  
>
¡¡  !!
salidasDeMercaderia
¡¡" 5
=
¡¡6 77
)GenerarSalidaDeMercaderiaDeVentaIntegrada
¡¡8 a
(
¡¡a b
venta
¡¡b g
,
¡¡g h!
datosVentaIntegrada
¡¡i |
,
¡¡| }
sesionDeUsuario¡¡~ ç
)¡¡ç é
;¡¡é è
List
¬¬ 
<
¬¬ 
Transaccion
¬¬  
>
¬¬  !&
transaccionesModificadas
¬¬" :
=
¬¬; <A
3ObtenerTransaccionesYModificarEstasPorPagoConPuntos
¬¬= p
(
¬¬p q"
datosVentaIntegrada¬¬q Ñ
,¬¬Ñ Ö
ingresoDeDinero¬¬Ü ï
)¬¬ï ñ
;¬¬ñ ó,
ResolverPreGeneracionOperacion
ƒƒ .
(
ƒƒ. /&
transaccionesModificadas
ƒƒ/ G
,
ƒƒG H!
datosVentaIntegrada
ƒƒI \
)
ƒƒ\ ]
;
ƒƒ] ^
var
≈≈ 
ventaIntegrada
≈≈ "
=
≈≈# $
new
≈≈% ( 
OperacionIntegrada
≈≈) ;
(
≈≈; <
venta
≈≈< A
,
≈≈A B
ordenDeVenta
≈≈C O
,
≈≈O P
ingresoDeDinero
≈≈Q `
,
≈≈` a!
salidasDeMercaderia
≈≈b u
,
≈≈u v"
datosVentaIntegrada≈≈w ä
.≈≈ä ã!
TransaccionOrigen≈≈ã ú
,≈≈ú ù#
datosVentaIntegrada≈≈û ±
.≈≈± ≤#
TransaccionCreacion≈≈≤ ≈
)≈≈≈ ∆
{
∆∆ &
TransaccionesModificadas
«« ,
=
««- .&
transaccionesModificadas
««/ G
,
««G H'
ActoresNegocioModificados
»» -
=
»». /
(
»»0 1!
datosVentaIntegrada
»»1 D
.
»»D E
ActorReferencia
»»E T
==
»»U W
null
»»X \
)
»»\ ]
?
»»^ _
new
»»` c
List
»»d h
<
»»h i
Actor_negocio
»»i v
>
»»v w
(
»»w x
)
»»x y
:
»»z {
new
»»| 
List»»Ä Ñ
<»»Ñ Ö
Actor_negocio»»Ö í
>»»í ì
(»»ì î
)»»î ï
{»»ñ ó#
datosVentaIntegrada»»ò ´
.»»´ ¨
ActorReferencia»»¨ ª
}»»º Ω
,»»Ω æ&
NuevosEstadosTransaccion
…… ,
=
……- .
(
……/ 0!
datosVentaIntegrada
……0 C
.
……C D
NuevoEstado
……D O
==
……P R
null
……S W
)
……W X
?
……Y Z
new
……[ ^
List
……_ c
<
……c d 
Estado_transaccion
……d v
>
……v w
(
……w x
)
……x y
:
……z {
new
……| 
List……Ä Ñ
<……Ñ Ö"
Estado_transaccion……Ö ó
>……ó ò
(……ò ô
)……ô ö
{……õ ú#
datosVentaIntegrada……ù ∞
.……∞ ±
NuevoEstado……± º
}……Ω æ
}
   
;
   
ventaIntegrada
ÀÀ 
.
ÀÀ "
EnlazarTransacciones
ÀÀ 3
(
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
return
ÃÃ 
ventaIntegrada
ÃÃ %
;
ÃÃ% &
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* l
,
––l m
e
––n o
)
––o p
;
––p q
}
—— 
}
““ 	
public
‘‘ 
void
‘‘ ,
ResolverPreGeneracionOperacion
‘‘ 2
(
‘‘2 3
List
‘‘3 7
<
‘‘7 8
Transaccion
‘‘8 C
>
‘‘C D&
transaccionesModificadas
‘‘E ]
,
‘‘] ^!
DatosVentaIntegrada
‘‘_ r"
datosVentaIntegrada‘‘s Ü
)‘‘Ü á
{
’’ 	
try
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ !
datosVentaIntegrada
ÿÿ '
.
ÿÿ' (
Orden
ÿÿ( -
.
ÿÿ- .$
EsOperacionPreGenerada
ÿÿ. D
)
ÿÿD E
{
ŸŸ 
var
⁄⁄ &
transaccionPreGeneracion
⁄⁄ 0
=
⁄⁄1 2$
transaccionRepositorio
⁄⁄3 I
.
⁄⁄I J 
ObtenerTransaccion
⁄⁄J \
(
⁄⁄\ ]!
datosVentaIntegrada
⁄⁄] p
.
⁄⁄p q
Orden
⁄⁄q v
.
⁄⁄v w%
IdOperacionPreGenerada⁄⁄w ç
)⁄⁄ç é
;⁄⁄é è&
transaccionPreGeneracion
€€ ,
.
€€, -

indicador2
€€- 7
=
€€8 9
true
€€: >
;
€€> ?&
transaccionesModificadas
‹‹ ,
.
‹‹, -
Add
‹‹- 0
(
‹‹0 1&
transaccionPreGeneracion
‹‹1 I
)
‹‹I J
;
‹‹J K
}
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
e
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
throw
·· 
new
·· 
LogicaException
·· )
(
··) *
$str
··* ^
,
··^ _
e
··` a
)
··a b
;
··b c
}
‚‚ 
}
„„ 	
public
ËË 
OperationResult
ËË %
ConfirmarVentaIntegrada
ËË 6
(
ËË6 7
ModoOperacionEnum
ËË7 H
tipoDeVenta
ËËI T
,
ËËT U$
UserProfileSessionData
ËËV l
sesionDeUsuario
ËËm |
,
ËË| }"
DatosVentaIntegradaËË~ ë#
datosVentaIntegradaËËí •
)ËË• ¶
{
ÈÈ 	
try
ÍÍ 
{
ÎÎ  
OperacionIntegrada
ÏÏ "
ventaIntegrada
ÏÏ# 1
=
ÏÏ2 3#
GenerarVentaIntegrada
ÏÏ4 I
(
ÏÏI J
tipoDeVenta
ÏÏJ U
,
ÏÏU V
sesionDeUsuario
ÏÏW f
,
ÏÏf g!
datosVentaIntegrada
ÏÏh {
,
ÏÏ{ |
trueÏÏ} Å
)ÏÏÅ Ç
;ÏÏÇ É
return
ÓÓ 6
(AfectarInventarioFisicoYGuardarOperacion
ÓÓ ?
(
ÓÓ? @
ventaIntegrada
ÓÓ@ N
,
ÓÓN O
sesionDeUsuario
ÓÓP _
)
ÓÓ_ `
;
ÓÓ` a
}
ÔÔ 
catch
 
(
 
	Exception
 
e
 
)
 
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ 
LogicaException
ÚÚ )
(
ÚÚ) *
$str
ÚÚ* Q
,
ÚÚQ R
e
ÚÚS T
)
ÚÚT U
;
ÚÚU V
}
ÛÛ 
}
ÙÙ 	
public
ıı 
PuntosDeCliente
ıı $
ObtenerPuntosDeCliente
ıı 5
(
ıı5 6
int
ıı6 9
	idCliente
ıı: C
)
ııC D
{
ˆˆ 	
DateTime
¯¯ 
fechaActual
¯¯  
=
¯¯! "
DateTimeUtil
¯¯# /
.
¯¯/ 0
FechaActual
¯¯0 ;
(
¯¯; <
)
¯¯< =
;
¯¯= >
DateTime
˙˙ +
fechaDesdeParaObtencionPuntos
˙˙ 2
=
˙˙3 4
fechaActual
˙˙5 @
.
˙˙@ A
AddDays
˙˙A H
(
˙˙H I
-
˙˙I J
VentasSettings
˙˙J X
.
˙˙X Y
Default
˙˙Y `
.
˙˙` a$
VigenciaEnDiasDePuntos
˙˙a w
)
˙˙w x
;
˙˙x y
return
¸¸ $
transaccionRepositorio
¸¸ )
.
¸¸) *$
ObtenerPuntosDeCliente
¸¸* @
(
¸¸@ A+
fechaDesdeParaObtencionPuntos
¸¸A ^
,
¸¸^ _
	idCliente
¸¸` i
)
¸¸i j
;
¸¸j k
}
˝˝ 	
public
ÇÇ 
List
ÇÇ 
<
ÇÇ 
Transaccion
ÇÇ 
>
ÇÇ  A
3ObtenerTransaccionesYModificarEstasPorPagoConPuntos
ÇÇ! T
(
ÇÇT U!
DatosVentaIntegrada
ÇÇU h!
datosVentaIntegrada
ÇÇi |
,
ÇÇ| }
TransaccionÇÇ~ â
ingresoDeDineroÇÇä ô
)ÇÇô ö
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
List
ÜÜ 
<
ÜÜ 
Transaccion
ÜÜ  
>
ÜÜ  !%
transaccionesAModificar
ÜÜ" 9
=
ÜÜ: ;
new
ÜÜ< ?
List
ÜÜ@ D
<
ÜÜD E
Transaccion
ÜÜE P
>
ÜÜP Q
(
ÜÜQ R
)
ÜÜR S
;
ÜÜS T
List
áá 
<
áá 
PuntoCanjeado
áá "
>
áá" #
puntosCanjeados
áá$ 3
=
áá4 5
new
áá6 9
List
áá: >
<
áá> ?
PuntoCanjeado
áá? L
>
ááL M
(
ááM N
)
ááN O
;
ááO P
if
ââ 
(
ââ !
datosVentaIntegrada
ââ '
.
ââ' (
Pago
ââ( ,
.
ââ, -
Traza
ââ- 2
.
ââ2 3
MedioDePago
ââ3 >
.
ââ> ?
Id
ââ? A
==
ââB D
MaestroSettings
ââE T
.
ââT U
Default
ââU \
.
ââ\ ]/
!IdDetalleMaestroMedioDepagoPuntos
ââ] ~
)
ââ~ 
{
ää 
DateTime
åå 
fechaActual
åå (
=
åå) *
DateTimeUtil
åå+ 7
.
åå7 8
FechaActual
åå8 C
(
ååC D
)
ååD E
;
ååE F
DateTime
éé +
fechaDesdeParaObtencionPuntos
éé :
=
éé; <
fechaActual
éé= H
.
ééH I
AddDays
ééI P
(
ééP Q
-
ééQ R
VentasSettings
ééR `
.
éé` a
Default
ééa h
.
ééh i$
VigenciaEnDiasDePuntos
ééi 
)éé Ä
;ééÄ Å
var
êê 5
'transaccionesConPuntosPendientesDeCanje
êê ?
=
êê@ A$
transaccionRepositorio
êêB X
.
êêX Y1
#ObtenerTransaccionesParaCanjePuntos
êêY |
(
êê| },
fechaDesdeParaObtencionPuntosêê} ö
,êêö õ#
datosVentaIntegradaêêú Ø
.êêØ ∞
Ordenêê∞ µ
.êêµ ∂
Clienteêê∂ Ω
.êêΩ æ
Idêêæ ¿
)êê¿ ¡
;êê¡ ¬
var
ëë 
puntosPorCanjear
ëë (
=
ëë) *!
datosVentaIntegrada
ëë+ >
.
ëë> ?
Pago
ëë? C
.
ëëC D
Traza
ëëD I
.
ëëI J
Info
ëëJ N
.
ëëN O
PuntosCajeados
ëëO ]
;
ëë] ^
foreach
ìì 
(
ìì 
var
ìì  +
transaccionConPuntosPendiente
ìì! >
in
ìì? A5
'transaccionesConPuntosPendientesDeCanje
ììB i
)
ììi j
{
îî 
if
ïï 
(
ïï +
transaccionConPuntosPendiente
ïï 9
.
ïï9 :
	cantidad3
ïï: C
>=
ïïD F
puntosPorCanjear
ïïG W
)
ïïW X
{
ññ 
puntosCanjeados
óó +
.
óó+ ,
Add
óó, /
(
óó/ 0
new
óó0 3
PuntoCanjeado
óó4 A
(
óóA B+
transaccionConPuntosPendiente
óóB _
.
óó_ `
id
óó` b
,
óób c
puntosPorCanjear
óód t
)
óót u
)
óóu v
;
óóv w+
transaccionConPuntosPendiente
òò 9
.
òò9 :
	cantidad2
òò: C
+=
òòD F
puntosPorCanjear
òòG W
;
òòW X+
transaccionConPuntosPendiente
ôô 9
.
ôô9 :
	cantidad3
ôô: C
-=
ôôD F
puntosPorCanjear
ôôG W
;
ôôW X
puntosPorCanjear
öö ,
-=
öö- /
puntosPorCanjear
öö0 @
;
öö@ A
}
õõ 
else
úú 
{
ùù 
puntosPorCanjear
ûû ,
-=
ûû- /
(
ûû0 1
int
ûû1 4
)
ûû4 5+
transaccionConPuntosPendiente
ûû5 R
.
ûûR S
	cantidad3
ûûS \
;
ûû\ ]
puntosCanjeados
üü +
.
üü+ ,
Add
üü, /
(
üü/ 0
new
üü0 3
PuntoCanjeado
üü4 A
(
üüA B+
transaccionConPuntosPendiente
üüB _
.
üü_ `
id
üü` b
,
üüb c
(
üüd e
int
üüe h
)
üüh i,
transaccionConPuntosPendienteüüi Ü
.üüÜ á
	cantidad3üüá ê
)üüê ë
)üüë í
;üüí ì+
transaccionConPuntosPendiente
†† 9
.
††9 :
	cantidad2
††: C
+=
††D F+
transaccionConPuntosPendiente
††G d
.
††d e
	cantidad3
††e n
;
††n o+
transaccionConPuntosPendiente
°° 9
.
°°9 :
	cantidad3
°°: C
-=
°°D F+
transaccionConPuntosPendiente
°°G d
.
°°d e
	cantidad3
°°e n
;
°°n o
}
¢¢ %
transaccionesAModificar
££ /
.
££/ 0
Add
££0 3
(
££3 4+
transaccionConPuntosPendiente
££4 Q
)
££Q R
;
££R S
if
§§ 
(
§§ 
puntosPorCanjear
§§ ,
==
§§- /
$num
§§0 1
)
§§1 2
{
•• 
break
¶¶ !
;
¶¶! "
}
ßß 
}
®® 
var
™™ 
jsonDeTraza
™™ #
=
™™$ %
JsonConvert
™™& 1
.
™™1 2
SerializeObject
™™2 A
(
™™A B
puntosCanjeados
™™B Q
)
™™Q R
;
™™R S
ingresoDeDinero
´´ #
.
´´# $

Traza_pago
´´$ .
.
´´. /
Single
´´/ 5
(
´´5 6
i
´´6 7
=>
´´8 :
i
´´; <
.
´´< =
id_medio_pago
´´= J
==
´´K M
MaestroSettings
´´N ]
.
´´] ^
Default
´´^ e
.
´´e f0
!IdDetalleMaestroMedioDepagoPuntos´´f á
)´´á à
.´´à â
extension_json´´â ó
=´´ò ô
jsonDeTraza´´ö •
;´´• ¶
}
¨¨ 
return
≠≠ %
transaccionesAModificar
≠≠ .
;
≠≠. /
}
ÆÆ 
catch
ØØ 
(
ØØ 
	Exception
ØØ 
e
ØØ 
)
ØØ 
{
∞∞ 
throw
±± 
new
±± 
LogicaException
±± )
(
±±) *
$str
±±* Q
,
±±Q R
e
±±S T
)
±±T U
;
±±U V
}
≤≤ 
}
≥≥ 	
public
¥¥ 
OperationResult
¥¥ +
InvalidarOrdenVentaRegistrada
¥¥ <
(
¥¥< =
long
¥¥= A
idOrdenDeVenta
¥¥B P
,
¥¥P Q
int
¥¥R U

idEmpleado
¥¥V `
,
¥¥` a
int
¥¥b e
idCentroAtencion
¥¥f v
,
¥¥v w
string
¥¥x ~
observaciones¥¥ å
)¥¥å ç
{
µµ 	
try
∂∂ 
{
∑∑ 
OrdenDeVenta
∏∏ 
ordenDeVenta
∏∏ )
=
∏∏* +
new
∏∏, /
OrdenDeVenta
∏∏0 <
(
∏∏< =$
transaccionRepositorio
∏∏= S
.
∏∏S T0
"ObtenerTransaccionInclusiveEstados
∏∏T v
(
∏∏v w
idOrdenDeVenta∏∏w Ö
)∏∏Ö Ü
)∏∏Ü á
;∏∏á à
AccionOperativa
ππ 
accionAIntentar
ππ  /
=
ππ0 1
new
ππ2 5
AccionOperativa
ππ6 E
(
ππE F 
maestroRepositorio
ππF X
.
ππX Y
ObtenerDetalle
ππY g
(
ππg h
MaestroSettings
ππh w
.
ππw x
Default
ππx 
.ππ Ä/
IdDetalleMaestroAccionInvalidarππÄ ü
)ππü †
)ππ† °
;ππ° ¢*
validarAccionSoberOrdenVenta
∫∫ ,
(
∫∫, -
ordenDeVenta
∫∫- 9
,
∫∫9 :
accionAIntentar
∫∫; J
,
∫∫J K

idEmpleado
∫∫L V
)
∫∫V W
;
∫∫W X
DateTime
ªª 
fechaActual
ªª $
=
ªª% &
DateTimeUtil
ªª' 3
.
ªª3 4
FechaActual
ªª4 ?
(
ªª? @
)
ªª@ A
;
ªªA B 
Estado_transaccion
ΩΩ "-
estadoDeLaOrdenAnulacionDeVenta
ΩΩ# B
=
ΩΩC D
new
ΩΩE H 
Estado_transaccion
ΩΩI [
(
ΩΩ[ \

idEmpleado
ΩΩ\ f
,
ΩΩf g
MaestroSettings
ΩΩh w
.
ΩΩw x
Default
ΩΩx 
.ΩΩ Ä0
 IdDetalleMaestroEstadoInvalidadoΩΩÄ †
,ΩΩ† °
fechaActualΩΩ¢ ≠
,ΩΩ≠ Æ
$strΩΩØ Í
)ΩΩÍ Î
;ΩΩÎ Ï
ordenDeVenta
ææ 
.
ææ 
Transaccion
ææ (
(
ææ( )
)
ææ) *
.
ææ* + 
Estado_transaccion
ææ+ =
.
ææ= >
Add
ææ> A
(
ææA B-
estadoDeLaOrdenAnulacionDeVenta
ææB a
)
ææa b
;
ææb c
var
¿¿ 
result
¿¿ 
=
¿¿ $
transaccionRepositorio
¿¿ 3
.
¿¿3 4#
ActualizarTransaccion
¿¿4 I
(
¿¿I J
ordenDeVenta
¿¿J V
.
¿¿V W
Transaccion
¿¿W b
(
¿¿b c
)
¿¿c d
)
¿¿d e
;
¿¿e f
result
¡¡ 
.
¡¡ 
data
¡¡ 
=
¡¡ 
ordenDeVenta
¡¡ *
.
¡¡* +
Id
¡¡+ -
;
¡¡- .
return
¬¬ 
result
¬¬ 
;
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
e
ƒƒ 
)
ƒƒ 
{
≈≈ 
throw
∆∆ 
new
∆∆ 
LogicaException
∆∆ )
(
∆∆) *
$str
∆∆* W
,
∆∆W X
e
∆∆Y Z
)
∆∆Z [
;
∆∆[ \
}
«« 
}
»» 	
public
   
void
   *
validarAccionSoberOrdenVenta
   0
(
  0 1
OrdenDeVenta
  1 =
ordenDeVenta
  > J
,
  J K
AccionOperativa
  L [
accionAIntentar
  \ k
,
  k l
int
  m p

idEmpleado
  q {
)
  { |
{
ÀÀ 	
Empleado
ÃÃ 
empleado
ÃÃ 
=
ÃÃ 
new
ÃÃ  #
Empleado
ÃÃ$ ,
(
ÃÃ, -
actorRepositorio
ÃÃ- =
.
ÃÃ= >#
obtenerActorDeNegocio
ÃÃ> S
(
ÃÃS T

idEmpleado
ÃÃT ^
,
ÃÃ^ _
ActorSettings
ÃÃ` m
.
ÃÃm n
Default
ÃÃn u
.
ÃÃu v
IdRolEmpleadoÃÃv É
)ÃÃÉ Ñ
)ÃÃÑ Ö
;ÃÃÖ Ü
int
ÕÕ 
idUnidadDeNegocio
ÕÕ !
=
ÕÕ" #
MaestroSettings
ÕÕ$ 3
.
ÕÕ3 4
Default
ÕÕ4 ;
.
ÕÕ; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
ÕÕ< f
;
ÕÕf g
if
ŒŒ 
(
ŒŒ 
ordenDeVenta
ŒŒ 
==
ŒŒ 
null
ŒŒ  $
)
ŒŒ$ %
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* >
)
––> ?
;
––? @
}
—— 
List
““ 
<
““ 
AccionOperativa
““  
>
““  !
accionesPosibles
““" 2
=
““3 4
ordenDeVenta
““5 A
.
““A B%
ObtenerAccionesPosibles
““B Y
(
““Y Z
)
““Z [
;
““[ \
if
‘‘ 
(
‘‘ 
!
‘‘ 
accionesPosibles
‘‘ !
.
‘‘! "
Any
‘‘" %
(
‘‘% &
ap
‘‘& (
=>
‘‘) +
ap
‘‘, .
.
‘‘. /
IdAccion
‘‘/ 7
==
‘‘8 :
accionAIntentar
‘‘; J
.
‘‘J K
IdAccion
‘‘K S
)
‘‘S T
)
‘‘T U
{
’’ 
throw
÷÷ 
new
÷÷ 
LogicaException
÷÷ )
(
÷÷) *
$str
÷÷* 6
+
÷÷7 8
accionAIntentar
÷÷9 H
.
÷÷H I
NombreAccion
÷÷I U
+
÷÷V W
$str÷÷X Ä
)÷÷Ä Å
;÷÷Å Ç
}
◊◊ 
else
ÿÿ 
if
ÿÿ 
(
ÿÿ 
empleado
ÿÿ 
.
ÿÿ '
ObtenerRolesHijosVigentes
ÿÿ 7
(
ÿÿ7 8
)
ÿÿ8 9
.
ÿÿ9 :
Select
ÿÿ: @
(
ÿÿ@ A
r
ÿÿA B
=>
ÿÿC E
r
ÿÿF G
.
ÿÿG H
id
ÿÿH J
)
ÿÿJ K
.
ÿÿK L
	Intersect
ÿÿL U
(
ÿÿU V
accionAIntentar
ÿÿV e
.
ÿÿe f
rolesPermitidos
ÿÿf u
(
ÿÿu v
ordenDeVentaÿÿv Ç
.ÿÿÇ É
TipoTransaccionÿÿÉ í
(ÿÿí ì
)ÿÿì î
.ÿÿî ï
Idÿÿï ó
,ÿÿó ò!
idUnidadDeNegocioÿÿô ™
)ÿÿ™ ´
.ÿÿ´ ¨
Selectÿÿ¨ ≤
(ÿÿ≤ ≥
rÿÿ≥ ¥
=>ÿÿµ ∑
rÿÿ∏ π
.ÿÿπ ∫
idÿÿ∫ º
)ÿÿº Ω
)ÿÿΩ æ
.ÿÿæ ø
Countÿÿø ƒ
(ÿÿƒ ≈
)ÿÿ≈ ∆
<=ÿÿ« …
$numÿÿ  À
)ÿÿÀ Ã
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* j
+
⁄⁄k l
accionAIntentar
⁄⁄m |
.
⁄⁄| }
NombreAccion⁄⁄} â
)⁄⁄â ä
;⁄⁄ä ã
}
€€ 
}
‹‹ 	
public
ﬁﬁ 
OperationResult
ﬁﬁ !
RegistrarOrdenVenta
ﬁﬁ 2
(
ﬁﬁ2 3
int
ﬁﬁ3 6

idEmpleado
ﬁﬁ7 A
,
ﬁﬁA B
int
ﬁﬁC F
idCentroAtencion
ﬁﬁG W
,
ﬁﬁW X
int
ﬁﬁY \
	idCliente
ﬁﬁ] f
,
ﬁﬁf g
int
ﬁﬁh k#
idSerieDeComprobanteﬁﬁl Ä
,ﬁﬁÄ Å
DateTimeﬁﬁÇ ä
fechaRegistroﬁﬁã ò
,ﬁﬁò ô
stringﬁﬁö †
observacionﬁﬁ° ¨
,ﬁﬁ¨ ≠
ListﬁﬁÆ ≤
<ﬁﬁ≤ ≥#
Detalle_transaccionﬁﬁ≥ ∆
>ﬁﬁ∆ «
detallesﬁﬁ» –
)ﬁﬁ– —
{
ﬂﬂ 	
try
‡‡ 
{
·· 
int
‚‚ 
idUnidadNegocio
‚‚ #
=
‚‚$ %
MaestroSettings
‚‚& 5
.
‚‚5 6
Default
‚‚6 =
.
‚‚= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
‚‚> h
;
‚‚h i
int
„„ 
idMoneda
„„ 
=
„„ 
MaestroSettings
„„ .
.
„„. /
Default
„„/ 6
.
„„6 7)
IdDetalleMaestroMonedaSoles
„„7 R
;
„„R S
permisos_Logica
‰‰ 
.
‰‰  
ValidarAccion
‰‰  -
(
‰‰- .

idEmpleado
‰‰. 8
,
‰‰8 9
MaestroSettings
‰‰: I
.
‰‰I J
Default
‰‰J Q
.
‰‰Q R-
IdDetalleMaestroAccionRegistrar
‰‰R q
,
‰‰q r"
TransaccionSettings‰‰s Ü
.‰‰Ü á
Default‰‰á é
.‰‰é è-
IdTipoTransaccionOrdenDeVenta‰‰è ¨
,‰‰¨ ≠
idUnidadNegocio‰‰Æ Ω
)‰‰Ω æ
;‰‰æ ø
	Operacion
ÊÊ 
operacionGenerica
ÊÊ +
=
ÊÊ, -
new
ÊÊ. 1
	Operacion
ÊÊ2 ;
(
ÊÊ; <$
transaccionRepositorio
ÊÊ< R
.
ÊÊR S&
ObtenerUltimaTransaccion
ÊÊS k
(
ÊÊk l!
TransaccionSettings
ÊÊl 
.ÊÊ Ä
DefaultÊÊÄ á
.ÊÊá à*
IdTipoTransaccionOperacionÊÊà ¢
)ÊÊ¢ £
)ÊÊ£ §
;ÊÊ§ •
decimal
ËË 
tipoDeCambio
ËË $
=
ËË% &
$num
ËË' (
;
ËË( )
string
ÍÍ 
codigo
ÍÍ 
=
ÍÍ %
codigosOperacion_Logica
ÍÍ  7
.
ÍÍ7 83
%ObtenerSiguienteCodigoParaFacturacion
ÍÍ8 ]
(
ÍÍ] ^
$str
ÍÍ^ a
,
ÍÍa b!
TransaccionSettings
ÍÍc v
.
ÍÍv w
Default
ÍÍw ~
.
ÍÍ~ %
IdTipoTransaccionVentaÍÍ ï
)ÍÍï ñ
;ÍÍñ ó
var
ÓÓ 
ValorDeVenta
ÓÓ  
=
ÓÓ! "
detalles
ÓÓ# +
.
ÓÓ+ ,
Sum
ÓÓ, /
(
ÓÓ/ 0
d
ÓÓ0 1
=>
ÓÓ2 4
d
ÓÓ5 6
.
ÓÓ6 7
total
ÓÓ7 <
)
ÓÓ< =
;
ÓÓ= >
Comprobante
 
comprobante
 '
=
( )$
transaccionRepositorio
* @
.
@ A$
ObtenerComprobanteCero
A W
(
W X"
idSerieDeComprobante
X l
)
l m
;
m n
Transaccion
ÙÙ 
venta
ÙÙ !
=
ÙÙ" #
new
ÙÙ$ '
Transaccion
ÙÙ( 3
(
ÙÙ3 4
codigo
ÙÙ4 :
,
ÙÙ: ;
operacionGenerica
ÙÙ< M
.
ÙÙM N
Id
ÙÙN P
,
ÙÙP Q
fechaRegistro
ÙÙR _
,
ÙÙ_ `!
TransaccionSettings
ÙÙa t
.
ÙÙt u
Default
ÙÙu |
.
ÙÙ| }%
IdTipoTransaccionVentaÙÙ} ì
,ÙÙì î
idUnidadNegocio
ıı #
,
ıı# $
true
ıı% )
,
ıı) *
fechaRegistro
ıı+ 8
,
ıı8 9
fechaRegistro
ıı: G
,
ııG H
$str
ııI K
,
ııK L
fechaRegistro
ııM Z
,
ııZ [

idEmpleado
ıı\ f
,
ııf g
ValorDeVenta
ııh t
,
ııt u
idCentroAtencionııv Ü
,ııÜ á
idMoneda
ˆˆ 
,
ˆˆ 
tipoDeCambio
ˆˆ *
,
ˆˆ* +
null
ˆˆ, 0
,
ˆˆ0 1
	idCliente
ˆˆ2 ;
)
ˆˆ; <
;
ˆˆ< =
venta
¯¯ 
.
¯¯ 
Comprobante
¯¯ !
=
¯¯" #
comprobante
¯¯$ /
;
¯¯/ 0
Transaccion
˙˙ 
ordenDeVenta
˙˙ (
=
˙˙) *
new
˙˙+ .
Transaccion
˙˙/ :
(
˙˙: ;%
codigosOperacion_Logica
˙˙; R
.
˙˙R S3
%ObtenerSiguienteCodigoParaFacturacion
˙˙S x
(
˙˙x y
codigo
˙˙y 
+˙˙Ä Å
$str˙˙Ç á
,˙˙á à!
TransaccionSettings
˚˚ '
.
˚˚' (
Default
˚˚( /
.
˚˚/ 0+
IdTipoTransaccionOrdenDeVenta
˚˚0 M
)
˚˚M N
,
˚˚N O
null
˚˚P T
,
˚˚T U
fechaRegistro
˚˚V c
,
˚˚c d!
TransaccionSettings
˚˚e x
.
˚˚x y
Default˚˚y Ä
.˚˚Ä Å-
IdTipoTransaccionOrdenDeVenta˚˚Å û
,˚˚û ü
idUnidadNegocio
¸¸ #
,
¸¸# $
true
¸¸% )
,
¸¸) *
fechaRegistro
¸¸+ 8
,
¸¸8 9
fechaRegistro
¸¸: G
,
¸¸G H
observacion
¸¸I T
,
¸¸T U
fechaRegistro
¸¸V c
,
¸¸c d

idEmpleado
¸¸e o
,
¸¸o p
ValorDeVenta
¸¸q }
,
¸¸} ~
idCentroAtencion¸¸ è
,¸¸è ê
idMoneda
˝˝ 
,
˝˝ 
tipoDeCambio
˝˝ *
,
˝˝* +
null
˝˝, 0
,
˝˝0 1
	idCliente
˝˝2 ;
)
˝˝; <
;
˝˝< =
ordenDeVenta
ˇˇ 
.
ˇˇ 
Comprobante
ˇˇ (
=
ˇˇ) *
comprobante
ˇˇ+ 6
;
ˇˇ6 7
ordenDeVenta
ÅÅ 
.
ÅÅ 
Transaccion2
ÅÅ )
=
ÅÅ* +
venta
ÅÅ, 1
;
ÅÅ1 2
ordenDeVenta
ÉÉ 
.
ÉÉ 
AgregarDetalles
ÉÉ ,
(
ÉÉ, -
detalles
ÉÉ- 5
)
ÉÉ5 6
;
ÉÉ6 7 
Estado_transaccion
ÖÖ "$
estadoDeLaOrdenDeVenta
ÖÖ# 9
=
ÖÖ: ;
new
ÖÖ< ? 
Estado_transaccion
ÖÖ@ R
(
ÖÖR S

idEmpleado
ÖÖS ]
,
ÖÖ] ^
MaestroSettings
ÖÖ_ n
.
ÖÖn o
Default
ÖÖo v
.
ÖÖv w/
 IdDetalleMaestroEstadoRegistradoÖÖw ó
,ÖÖó ò
fechaRegistroÖÖô ¶
,ÖÖ¶ ß
$str
ÜÜ T
)
ÜÜT U
;
ÜÜU V
ordenDeVenta
áá 
.
áá  
Estado_transaccion
áá /
.
áá/ 0
Add
áá0 3
(
áá3 4$
estadoDeLaOrdenDeVenta
áá4 J
)
ááJ K
;
ááK L
venta
ââ 
.
ââ 
Transaccion1
ââ "
.
ââ" #
Add
ââ# &
(
ââ& '
ordenDeVenta
ââ' 3
)
ââ3 4
;
ââ4 5
OperationResult
ãã 
result
ãã  &
=
ãã' ($
transaccionRepositorio
ãã) ?
.
ãã? @
CrearTransaccion
ãã@ P
(
ããP Q
venta
ããQ V
)
ããV W
;
ããW X
return
çç 
result
çç 
;
çç 
}
éé 
catch
èè 
(
èè 
	Exception
èè 
e
èè 
)
èè 
{
êê 
return
ëë 
new
ëë 
OperationResult
ëë *
(
ëë* +
e
ëë+ ,
)
ëë, -
;
ëë- .
}
íí 
}
ìì 	
public
ïï 
OperationResult
ïï '
ConfirmarYPagarOrdenVenta
ïï 8
(
ïï8 9
int
ïï9 <

idEmpleado
ïï= G
,
ïïG H
int
ïïI L
idCentroAtencion
ïïM ]
,
ïï] ^
long
ïï_ c
idVenta
ïïd k
,
ïïk l
int
ïïm p#
idSerieDeComprobanteïïq Ö
,ïïÖ Ü
DateTimeïïá è!
fechaConfirmacionïïê °
,ïï° ¢
intïï£ ¶
idMedioDePagoïïß ¥
,ïï¥ µ
intïï∂ π#
idEntidadFinancieraïï∫ Õ
,ïïÕ Œ
stringïïœ ’#
informacionBancariaïï÷ È
,ïïÈ Í
stringïïÎ Ò
observacionïïÚ ˝
)ïï˝ ˛
{
ññ 	
try
óó 
{
òò 
int
ôô 
idUnidadNegocio
ôô #
=
ôô$ %
MaestroSettings
ôô& 5
.
ôô5 6
Default
ôô6 =
.
ôô= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
ôô> h
;
ôôh i
int
öö 
idMoneda
öö 
=
öö 
MaestroSettings
öö .
.
öö. /
Default
öö/ 6
.
öö6 7)
IdDetalleMaestroMonedaSoles
öö7 R
;
ööR S
AccionOperativa
õõ 
accionAIntentar
õõ  /
=
õõ0 1
new
õõ2 5
AccionOperativa
õõ6 E
(
õõE F 
maestroRepositorio
õõF X
.
õõX Y
ObtenerDetalle
õõY g
(
õõg h
MaestroSettings
õõh w
.
õõw x
Default
õõx 
.õõ Ä/
IdDetalleMaestroAccionConfirmarõõÄ ü
)õõü †
)õõ† °
;õõ° ¢
decimal
úú 
tipoDeCambio
úú $
=
úú% &
$num
úú' (
;
úú( )
Transaccion
ùù 
venta
ùù !
=
ùù" #%
ObtenerVentaYOrdenVenta
ùù$ ;
(
ùù; <

idEmpleado
ùù< F
,
ùùF G
idCentroAtencion
ùùH X
,
ùùX Y
idVenta
ùùZ a
)
ùùa b
;
ùùb c
Venta
ûû 
_venta
ûû 
=
ûû 
new
ûû "
Venta
ûû# (
(
ûû( )
venta
ûû) .
)
ûû. /
;
ûû/ 0*
validarAccionSoberOrdenVenta
üü ,
(
üü, -
_venta
üü- 3
.
üü3 4
OrdenDeVenta
üü4 @
(
üü@ A
)
üüA B
,
üüB C
accionAIntentar
üüD S
,
üüS T

idEmpleado
üüU _
)
üü_ `
;
üü` a
permisos_Logica
†† 
.
††  
ValidarAccion
††  -
(
††- .

idEmpleado
††. 8
,
††8 9
MaestroSettings
††: I
.
††I J
Default
††J Q
.
††Q R-
IdDetalleMaestroAccionRegistrar
††R q
,
††q r"
TransaccionSettings††s Ü
.††Ü á
Default††á é
.††é è-
IdTipoTransaccionOrdenDeVenta††è ¨
,††¨ ≠
idUnidadNegocio††Æ Ω
)††Ω æ
;††æ ø
DateTime
°° 
fechaActual
°° $
=
°°% &
DateTimeUtil
°°' 3
.
°°3 4
FechaActual
°°4 ?
(
°°? @
)
°°@ A
;
°°A B
Serie_comprobante
§§ !
serie
§§" '
=
§§( )$
transaccionRepositorio
§§* @
.
§§@ A'
ObtenerSerieDeComprobante
§§A Z
(
§§Z ["
idSerieDeComprobante
§§[ o
)
§§o p
;
§§p q
Comprobante
•• 
comprobante
•• '
=
••( )
new
••* -
Comprobante
••. 9
(
••9 :
serie
••: ?
.
••? @!
id_tipo_comprobante
••@ S
,
••S T
serie
••U Z
.
••Z [
id
••[ ]
,
••] ^
serie
••_ d
.
••d e
proximo_numero
••e s
,
••s t
true
••u y
,
••y z
serie••{ Ä
.••Ä Å
numero••Å á
)••á à
;••à â
serie
ßß 
.
ßß 
proximo_numero
ßß $
=
ßß% &
(
ßß' (
serie
ßß( -
.
ßß- .
proximo_numero
ßß. <
+
ßß= >
$num
ßß? @
)
ßß@ A
;
ßßA B
_venta
´´ 
.
´´ 
OrdenDeVenta
´´ #
(
´´# $
)
´´$ %
.
´´% &
Transaccion
´´& 1
(
´´1 2
)
´´2 3
.
´´3 4
Comprobante
´´4 ?
=
´´@ A
comprobante
´´B M
;
´´M N
venta
¨¨ 
.
¨¨ 
Comprobante
¨¨ !
=
¨¨" #
comprobante
¨¨$ /
;
¨¨/ 0 
Estado_transaccion
ÆÆ "-
estadoDeLaOrdenAnulacionDeVenta
ÆÆ# B
=
ÆÆC D
new
ÆÆE H 
Estado_transaccion
ÆÆI [
(
ÆÆ[ \

idEmpleado
ÆÆ\ f
,
ÆÆf g
MaestroSettings
ÆÆh w
.
ÆÆw x
Default
ÆÆx 
.ÆÆ Ä0
 IdDetalleMaestroEstadoConfirmadoÆÆÄ †
,ÆÆ† °
fechaActualÆÆ¢ ≠
,ÆÆ≠ Æ
$strÆÆØ Ò
)ÆÆÒ Ú
;ÆÆÚ Û
_venta
ØØ 
.
ØØ 
OrdenDeVenta
ØØ #
(
ØØ# $
)
ØØ$ %
.
ØØ% &
Transaccion
ØØ& 1
(
ØØ1 2
)
ØØ2 3
.
ØØ3 4 
Estado_transaccion
ØØ4 F
.
ØØF G
Add
ØØG J
(
ØØJ K-
estadoDeLaOrdenAnulacionDeVenta
ØØK j
)
ØØj k
;
ØØk l
var
±± 
ValorDeVenta
±±  
=
±±! "
venta
±±# (
.
±±( )
importe_total
±±) 6
;
±±6 7
Cuota
≥≥ 
cuota
≥≥ 
=
≥≥ 
new
≥≥ !
Cuota
≥≥" '
(
≥≥' (2
$ObtenerSiguienteCodigoParaNuevaCuota
≥≥( L
(
≥≥L M
true
≥≥M Q
,
≥≥Q R
fechaConfirmacion
≥≥S d
.
≥≥d e
Year
≥≥e i
)
≥≥i j
+
≥≥k l
$str
≥≥m p
+
≥≥q r
$num
≥≥s t
,
≥≥t u 
fechaConfirmacion≥≥v á
,≥≥á à!
fechaConfirmacion≥≥â ö
,≥≥ö õ
venta≥≥ú °
.≥≥° ¢
importe_total≥≥¢ Ø
,≥≥Ø ∞
$str
¥¥ R
,
¥¥R S
true
¥¥T X
)
¥¥X Y
;
¥¥Y Z
venta
µµ 
.
µµ 
Cuota
µµ 
.
µµ 
Add
µµ 
(
µµ  
cuota
µµ  %
)
µµ% &
;
µµ& '
string
∑∑ 

codigoPago
∑∑ !
=
∑∑" #
cuota
∑∑$ )
.
∑∑) *
codigo
∑∑* 0
+
∑∑1 2
$str
∑∑3 8
;
∑∑8 9
Transaccion
∏∏ 
pago
∏∏  
=
∏∏! "
new
∏∏# &
Transaccion
∏∏' 2
(
∏∏2 3

codigoPago
∏∏3 =
,
∏∏= >
null
∏∏? C
,
∏∏C D
fechaConfirmacion
∏∏E V
,
∏∏V W!
TransaccionSettings
∏∏X k
.
∏∏k l
Default
∏∏l s
.
∏∏s t8
)IdTipoTransaccionCobranzaFacturasClientes∏∏t ù
,∏∏ù û
idUnidadNegocio∏∏ü Æ
,∏∏Æ Ø
true∏∏∞ ¥
,∏∏¥ µ!
fechaConfirmacion∏∏∂ «
,∏∏« »!
fechaConfirmacion∏∏… ⁄
,∏∏⁄ €
observacion∏∏‹ Á
,∏∏Á Ë!
fechaConfirmacion∏∏È ˙
,∏∏˙ ˚

idEmpleado
ππ 
,
ππ 
ValorDeVenta
ππ  ,
,
ππ, -
idCentroAtencion
ππ. >
,
ππ> ?
idMoneda
ππ@ H
,
ππH I
tipoDeCambio
ππJ V
,
ππV W
null
ππX \
,
ππ\ ]
Convert
ππ^ e
.
ππe f
ToInt32
ππf m
(
ππm n
venta
ππn s
.
ππs t
Actor_negocio1ππt Ç
.ππÇ É
idππÉ Ö
)ππÖ Ü
)ππÜ á
;ππá à
pago
ºº 
.
ºº 
Comprobante
ºº  
=
ºº! "
comprobante
ºº# .
;
ºº. /

Pago_cuota
ææ 
	pagoCuota
ææ $
=
ææ% &
new
ææ' *

Pago_cuota
ææ+ 5
(
ææ5 6
)
ææ6 7
;
ææ7 8
	pagoCuota
øø 
.
øø 
Transaccion
øø %
=
øø& '
pago
øø( ,
;
øø, -
	pagoCuota
¿¿ 
.
¿¿ 
Cuota
¿¿ 
=
¿¿  !
cuota
¿¿" '
;
¿¿' (
pago
¡¡ 
.
¡¡ 

Pago_cuota
¡¡ 
.
¡¡  
Add
¡¡  #
(
¡¡# $
	pagoCuota
¡¡$ -
)
¡¡- .
;
¡¡. /
if
ƒƒ 
(
ƒƒ 
idMedioDePago
ƒƒ !
==
ƒƒ" $
MaestroSettings
ƒƒ% 4
.
ƒƒ4 5
Default
ƒƒ5 <
.
ƒƒ< =1
#IdDetalleMaestroMedioDepagoEfectivo
ƒƒ= `
)
ƒƒ` a
{
≈≈ 

Traza_pago
∆∆ 
traza
∆∆ $
=
∆∆% &
new
∆∆' *

Traza_pago
∆∆+ 5
(
∆∆5 6
idMedioDePago
∆∆6 C
,
∆∆C D!
informacionBancaria
∆∆E X
,
∆∆X Y
MaestroSettings
∆∆Z i
.
∆∆i j
Default
∆∆j q
.
∆∆q r8
)IdDetalleMaestroEntidadBancariaPorDefecto∆∆r õ
)∆∆õ ú
;∆∆ú ù
pago
«« 
.
«« 

Traza_pago
«« #
.
««# $
Add
««$ '
(
««' (
traza
««( -
)
««- .
;
««. /
}
»» 
else
…… 
{
   

Traza_pago
ÀÀ 
traza
ÀÀ $
=
ÀÀ% &
new
ÀÀ' *

Traza_pago
ÀÀ+ 5
(
ÀÀ5 6
idMedioDePago
ÀÀ6 C
,
ÀÀC D!
informacionBancaria
ÀÀE X
,
ÀÀX Y!
idEntidadFinanciera
ÀÀZ m
)
ÀÀm n
;
ÀÀn o
pago
ÃÃ 
.
ÃÃ 

Traza_pago
ÃÃ #
.
ÃÃ# $
Add
ÃÃ$ '
(
ÃÃ' (
traza
ÃÃ( -
)
ÃÃ- .
;
ÃÃ. /
}
ÕÕ  
Estado_transaccion
œœ "
estadoDelPago
œœ# 0
=
œœ1 2
new
œœ3 6 
Estado_transaccion
œœ7 I
(
œœI J

idEmpleado
œœJ T
,
œœT U
MaestroSettings
œœV e
.
–– 
Default
–– 
.
–– .
 IdDetalleMaestroEstadoRegistrado
–– =
,
––= >
fechaConfirmacion
––? P
,
––P Q
$str
––R T
)
––T U
;
––U V
pago
—— 
.
——  
Estado_transaccion
—— '
.
——' (
Add
——( +
(
——+ ,
estadoDelPago
——, 9
)
——9 :
;
——: ;
pago
““ 
.
““ 
Transaccion2
““ !
=
““" #
venta
““$ )
;
““) *
OperationResult
‘‘ 
result
‘‘  &
=
‘‘' ($
transaccionRepositorio
‘‘) ?
.
‘‘? @#
ActualizarTransaccion
‘‘@ U
(
‘‘U V
venta
‘‘V [
)
‘‘[ \
;
‘‘\ ]
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
return
⁄⁄ 
new
⁄⁄ 
OperationResult
⁄⁄ *
(
⁄⁄* +
e
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
}
€€ 
}
‹‹ 	
public
‡‡ 
OperationResult
‡‡ "
cancelarOrdenDeVenta
‡‡ 3
(
‡‡3 4
long
‡‡4 8
idOrdenDeVenta
‡‡9 G
,
‡‡G H
int
‡‡I L

idEmpleado
‡‡M W
,
‡‡W X
int
‡‡Y \
idCentroAtencion
‡‡] m
)
‡‡m n
{
·· 	
try
‚‚ 
{
„„ 
permisos_Logica
ÂÂ 
.
ÂÂ  
ValidarAccion
ÂÂ  -
(
ÂÂ- .

idEmpleado
ÂÂ. 8
,
ÂÂ8 9
MaestroSettings
ÂÂ: I
.
ÂÂI J
Default
ÂÂJ Q
.
ÂÂQ R-
IdDetalleMaestroAccionInvalidar
ÂÂR q
,
ÂÂq r!
TransaccionSettings
ÊÊ '
.
ÊÊ' (
Default
ÊÊ( /
.
ÊÊ/ 0,
IdTipoTransaccionOrdenDeCompra
ÊÊ0 N
,
ÊÊN O
MaestroSettings
ÁÁ #
.
ÁÁ# $
Default
ÁÁ$ +
.
ÁÁ+ ,8
*IdDetalleMaestroUnidadDeNegocioTransversal
ÁÁ, V
)
ÁÁV W
;
ÁÁW X
DateTime
ÈÈ 
fechaActual
ÈÈ $
=
ÈÈ% &
DateTimeUtil
ÈÈ' 3
.
ÈÈ3 4
FechaActual
ÈÈ4 ?
(
ÈÈ? @
)
ÈÈ@ A
;
ÈÈA B
OrdenDeVenta
ÎÎ 
ordenOriginal
ÎÎ *
=
ÎÎ+ ,
new
ÎÎ- 0
OrdenDeVenta
ÎÎ1 =
(
ÎÎ= >$
transaccionRepositorio
ÎÎ> T
.
ÎÎT U0
"ObtenerTransaccionInclusiveEstados
ÎÎU w
(
ÎÎw x
idOrdenDeVentaÎÎx Ü
)ÎÎÜ á
)ÎÎá à
;ÎÎà â
List
ÌÌ 
<
ÌÌ  
Estado_transaccion
ÌÌ '
>
ÌÌ' (
estados
ÌÌ) 0
=
ÌÌ1 2
new
ÌÌ3 6
List
ÌÌ7 ;
<
ÌÌ; < 
Estado_transaccion
ÌÌ< N
>
ÌÌN O
(
ÌÌO P
)
ÌÌP Q
;
ÌÌQ R
estados
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ 
new
ÔÔ  
Estado_transaccion
ÔÔ  2
(
ÔÔ2 3
ordenOriginal
ÔÔ3 @
.
ÔÔ@ A
Id
ÔÔA C
,
ÔÔC D

idEmpleado
ÔÔE O
,
ÔÔO P
MaestroSettings
ÔÔQ `
.
ÔÔ` a
Default
ÔÔa h
.
ÔÔh i/
 IdDetalleMaestroEstadoInvalidadoÔÔi â
,ÔÔâ ä
fechaActualÔÔã ñ
,ÔÔñ ó
$strÔÔò ≠
)ÔÔ≠ Æ
)ÔÔÆ Ø
;ÔÔØ ∞
if
ÒÒ 
(
ÒÒ 
ordenOriginal
ÒÒ !
.
ÒÒ! "
Venta
ÒÒ" '
(
ÒÒ' (
)
ÒÒ( )
.
ÒÒ) *
ObtenerPagos
ÒÒ* 6
(
ÒÒ6 7
)
ÒÒ7 8
!=
ÒÒ9 ;
null
ÒÒ< @
)
ÒÒ@ A
{
ÚÚ 
foreach
ÛÛ 
(
ÛÛ 
var
ÛÛ  
pago
ÛÛ! %
in
ÛÛ& (
ordenOriginal
ÛÛ) 6
.
ÛÛ6 7
Venta
ÛÛ7 <
(
ÛÛ< =
)
ÛÛ= >
.
ÛÛ> ?
ObtenerPagos
ÛÛ? K
(
ÛÛK L
)
ÛÛL M
)
ÛÛM N
{
ÙÙ 
estados
ıı 
.
ıı  
Add
ıı  #
(
ıı# $
new
ıı$ ' 
Estado_transaccion
ıı( :
(
ıı: ;
pago
ıı; ?
.
ıı? @
Id
ıı@ B
,
ııB C

idEmpleado
ııD N
,
ııN O
MaestroSettings
ııP _
.
ıı_ `
Default
ıı` g
.
ııg h/
 IdDetalleMaestroEstadoInvalidadoııh à
,ııà â
fechaActualııä ï
,ııï ñ
$strııó ´
)ıı´ ¨
)ıı¨ ≠
;ıı≠ Æ
}
ˆˆ 
}
˜˜ 
var
˘˘ 
result
˘˘ 
=
˘˘ $
transaccionRepositorio
˘˘ 3
.
˘˘3 4.
 CrearEstadosDeTransaccionesAhora
˘˘4 T
(
˘˘T U
estados
˘˘U \
)
˘˘\ ]
;
˘˘] ^
return
˙˙ 
new
˙˙ 
OperationResult
˙˙ *
(
˙˙* +!
OperationResultEnum
˙˙+ >
.
˙˙> ?
Success
˙˙? F
,
˙˙F G
$str
˙˙H o
,
˙˙o p
ordenOriginal
˙˙q ~
.
˙˙~ 
Id˙˙ Å
)˙˙Å Ç
;˙˙Ç É
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
e
˝˝ 
)
˝˝ 
{
˛˛ 
return
ˇˇ 
new
ˇˇ 
OperationResult
ˇˇ *
(
ˇˇ* +
new
ˇˇ+ .
	Exception
ˇˇ/ 8
(
ˇˇ8 9
$str
ˇˇ9 ^
,
ˇˇ^ _
e
ˇˇ` a
)
ˇˇa b
)
ˇˇb c
;
ˇˇc d
}
ÄÄ 
}
ÅÅ 	
public
ÑÑ 
OrdenDeVenta
ÑÑ !
ObtenerOrdenDeVenta
ÑÑ /
(
ÑÑ/ 0
int
ÑÑ0 3

idEmpleado
ÑÑ4 >
,
ÑÑ> ?
int
ÑÑ@ C
idCentroAtencion
ÑÑD T
,
ÑÑT U
long
ÑÑV Z
idOrdenVenta
ÑÑ[ g
)
ÑÑg h
{
ÖÖ 	
try
ÜÜ 
{
áá 
return
àà 
new
àà 
OrdenDeVenta
àà '
(
àà' ($
transaccionRepositorio
àà( >
.
àà> ?F
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
àà? w
(
ààw x
idOrdenVentaààx Ñ
)ààÑ Ö
)ààÖ Ü
;ààÜ á
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
e
åå 
;
åå 
}
çç 
}
éé 	
public
êê 
Transaccion
êê %
ObtenerVentaYOrdenVenta
êê 2
(
êê2 3
int
êê3 6

idEmpleado
êê7 A
,
êêA B
int
êêC F
idCentroAtencion
êêG W
,
êêW X
long
êêY ]
idVenta
êê^ e
)
êêe f
{
ëë 	
try
íí 
{
ìì 
return
îî $
transaccionRepositorio
îî -
.
îî- .F
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
îî. f
(
îîf g
idVenta
îîg n
)
îîn o
;
îîo p
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
e
òò 
;
òò 
}
ôô 
}
öö 	
public
ùù 
List
ùù 
<
ùù 
int
ùù 
>
ùù '
ObtenerIdsDeSeriesActivas
ùù 2
(
ùù2 3
int
ùù3 6
[
ùù6 7
]
ùù7 8 
idsTipoComprobante
ùù9 K
)
ùùK L
{
ûû 	
return
üü $
transaccionRepositorio
üü )
.
üü) **
ObtenerIdsSeriesComprobantes
üü* F
(
üüF G 
idsTipoComprobante
üüG Y
,
üüY Z
true
üü[ _
)
üü_ `
.
üü` a
ToList
üüa g
(
üüg h
)
üüh i
;
üüi j
}
†† 	
public
¢¢ 
long
¢¢ M
?ObtenerIdDePrimeraOrdenConBoletaDeVentasConfirmadasYTributables
¢¢ S
(
¢¢S T
int
¢¢T W

idEmpleado
¢¢X b
,
¢¢b c
DateTime
¢¢d l

fechaDesde
¢¢m w
,
¢¢w x
DateTime¢¢y Å

fechaHasta¢¢Ç å
,¢¢å ç
int¢¢é ë
idSerie¢¢í ô
)¢¢ô ö
{
££ 	
try
§§ 
{
•• 
int
¶¶ 
[
¶¶ 
]
¶¶  
idsTipoTransaccion
¶¶ (
=
¶¶) *
{
¶¶+ ,!
TransaccionSettings
¶¶- @
.
¶¶@ A
Default
¶¶A H
.
¶¶H I+
IdTipoTransaccionOrdenDeVenta
¶¶I f
}
¶¶g h
;
¶¶h i
int
ßß 
[
ßß 
]
ßß "
idsTiposComprobantes
ßß *
=
ßß+ ,
{
ßß- .
MaestroSettings
ßß/ >
.
ßß> ?
Default
ßß? F
.
ßßF G/
!IdDetalleMaestroComprobanteBoleta
ßßG h
}
ßßi j
;
ßßj k
return
®® $
transaccionRepositorio
®® -
.
®®- .)
ObtenerIdPrimeraTransaccion
®®. I
(
®®I J 
idsTipoTransaccion
®®J \
,
®®\ ]"
idsTiposComprobantes
®®^ r
,
®®r s
MaestroSettings®®t É
.®®É Ñ
Default®®Ñ ã
.®®ã å1
!IdDetalleMaestroEstadoTransmitido®®å ≠
,®®≠ Æ
MaestroSettings®®Ø æ
.®®æ ø
Default®®ø ∆
.®®∆ «0
 IdDetalleMaestroEstadoConfirmado®®« Á
,®®Á Ë

fechaDesde®®È Û
,®®Û Ù

fechaHasta®®ı ˇ
,®®ˇ Ä
idSerie®®Å à
)®®à â
;®®â ä
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* Y
,
¨¨Y Z
e
¨¨[ \
)
¨¨\ ]
;
¨¨] ^
}
≠≠ 
}
ÆÆ 	
public
ØØ 
long
ØØ L
>ObtenerIdDeUltimaOrdenConBoletaDeVentasConfirmadasYTributables
ØØ R
(
ØØR S
int
ØØS V

idEmpleado
ØØW a
,
ØØa b
DateTime
ØØc k

fechaDesde
ØØl v
,
ØØv w
DateTimeØØx Ä

fechaHastaØØÅ ã
,ØØã å
intØØç ê
idSerieØØë ò
)ØØò ô
{
∞∞ 	
try
±± 
{
≤≤ 
int
≥≥ 
[
≥≥ 
]
≥≥  
idsTipoTransaccion
≥≥ (
=
≥≥) *
{
≥≥+ ,!
TransaccionSettings
≥≥- @
.
≥≥@ A
Default
≥≥A H
.
≥≥H I+
IdTipoTransaccionOrdenDeVenta
≥≥I f
}
≥≥g h
;
≥≥h i
int
¥¥ 
[
¥¥ 
]
¥¥ "
idsTiposComprobantes
¥¥ *
=
¥¥+ ,
{
¥¥- .
MaestroSettings
¥¥/ >
.
¥¥> ?
Default
¥¥? F
.
¥¥F G/
!IdDetalleMaestroComprobanteBoleta
¥¥G h
}
¥¥i j
;
¥¥j k
return
µµ $
transaccionRepositorio
µµ -
.
µµ- .(
ObtenerIdUltimaTransaccion
µµ. H
(
µµH I 
idsTipoTransaccion
µµI [
,
µµ[ \"
idsTiposComprobantes
µµ] q
,
µµq r
MaestroSettingsµµs Ç
.µµÇ É
DefaultµµÉ ä
.µµä ã1
!IdDetalleMaestroEstadoTransmitidoµµã ¨
,µµ¨ ≠
MaestroSettingsµµÆ Ω
.µµΩ æ
Defaultµµæ ≈
.µµ≈ ∆0
 IdDetalleMaestroEstadoConfirmadoµµ∆ Ê
,µµÊ Á

fechaDesdeµµË Ú
,µµÚ Û

fechaHastaµµÙ ˛
,µµ˛ ˇ
idSerieµµÄ á
)µµá à
;µµà â
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
e
∑∑ 
)
∑∑ 
{
∏∏ 
throw
ππ 
new
ππ 
LogicaException
ππ )
(
ππ) *
$str
ππ* g
,
ππg h
e
ππi j
)
ππj k
;
ππk l
}
∫∫ 
}
ªª 	
public
øø 
long
øø ^
PObtenerNumeroDeComprobanteDePrimeraOrdenConBoletaDeVentasConfirmadasYTributables
øø d
(
øød e
int
øøe h

idEmpleado
øøi s
,
øøs t
DateTime
øøu }

fechaDesdeøø~ à
,øøà â
DateTimeøøä í

fechaHastaøøì ù
,øøù û
intøøü ¢
idSerieøø£ ™
)øø™ ´
{
¿¿ 	
try
¡¡ 
{
¬¬ 
int
√√ 
[
√√ 
]
√√  
idsTipoTransaccion
√√ (
=
√√) *
{
√√+ ,!
TransaccionSettings
√√- @
.
√√@ A
Default
√√A H
.
√√H I+
IdTipoTransaccionOrdenDeVenta
√√I f
}
√√g h
;
√√h i
int
ƒƒ 
[
ƒƒ 
]
ƒƒ "
idsTiposComprobantes
ƒƒ *
=
ƒƒ+ ,
{
ƒƒ- .
MaestroSettings
ƒƒ/ >
.
ƒƒ> ?
Default
ƒƒ? F
.
ƒƒF G/
!IdDetalleMaestroComprobanteBoleta
ƒƒG h
}
ƒƒi j
;
ƒƒj k
return
≈≈ $
transaccionRepositorio
≈≈ -
.
≈≈- .:
,ObtenerNumeroDeComprobantePrimeraTransaccion
≈≈. Z
(
≈≈Z [ 
idsTipoTransaccion
≈≈[ m
,
≈≈m n#
idsTiposComprobantes≈≈o É
,≈≈É Ñ
MaestroSettings≈≈Ö î
.≈≈î ï
Default≈≈ï ú
.≈≈ú ù0
 IdDetalleMaestroEstadoConfirmado≈≈ù Ω
,≈≈Ω æ

fechaDesde≈≈ø …
,≈≈…  

fechaHasta≈≈À ’
,≈≈’ ÷
idSerie≈≈◊ ﬁ
)≈≈ﬁ ﬂ
;≈≈ﬂ ‡
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
new
…… 
LogicaException
…… )
(
……) *
$str
……* Y
,
……Y Z
e
……[ \
)
……\ ]
;
……] ^
}
   
}
ÀÀ 	
public
ÃÃ 
long
ÃÃ ]
OObtenerNumeroDeComprobanteDeUltimaOrdenConBoletaDeVentasConfirmadasYTributables
ÃÃ c
(
ÃÃc d
int
ÃÃd g

idEmpleado
ÃÃh r
,
ÃÃr s
DateTime
ÃÃt |

fechaDesdeÃÃ} á
,ÃÃá à
DateTimeÃÃâ ë

fechaHastaÃÃí ú
,ÃÃú ù
intÃÃû °
idSerieÃÃ¢ ©
)ÃÃ© ™
{
ÕÕ 	
try
ŒŒ 
{
œœ 
int
–– 
[
–– 
]
––  
idsTipoTransaccion
–– (
=
––) *
{
––+ ,!
TransaccionSettings
––- @
.
––@ A
Default
––A H
.
––H I+
IdTipoTransaccionOrdenDeVenta
––I f
}
––g h
;
––h i
int
—— 
[
—— 
]
—— "
idsTiposComprobantes
—— *
=
——+ ,
{
——- .
MaestroSettings
——/ >
.
——> ?
Default
——? F
.
——F G/
!IdDetalleMaestroComprobanteBoleta
——G h
}
——i j
;
——j k
return
““ $
transaccionRepositorio
““ -
.
““- .9
+ObtenerNumeroDeComprobanteUltimaTransaccion
““. Y
(
““Y Z 
idsTipoTransaccion
““Z l
,
““l m#
idsTiposComprobantes““n Ç
,““Ç É
MaestroSettings““Ñ ì
.““ì î
Default““î õ
.““õ ú0
 IdDetalleMaestroEstadoConfirmado““ú º
,““º Ω

fechaDesde““æ »
,““» …

fechaHasta““  ‘
,““‘ ’
idSerie““÷ ›
)““› ﬁ
;““ﬁ ﬂ
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
e
‘‘ 
)
‘‘ 
{
’’ 
throw
÷÷ 
new
÷÷ 
LogicaException
÷÷ )
(
÷÷) *
$str
÷÷* g
,
÷÷g h
e
÷÷i j
)
÷÷j k
;
÷÷k l
}
◊◊ 
}
ÿÿ 	
public
ﬁﬁ 
List
ﬁﬁ 
<
ﬁﬁ 
OperacionDeVenta
ﬁﬁ $
>
ﬁﬁ$ %[
MObtenerOrdenesConFacturaYNotasDeCreditoYDebitoDeVentasConfirmadasYTributables
ﬁﬁ& s
(
ﬁﬁs t
int
ﬁﬁt w

idEmpleadoﬁﬁx Ç
,ﬁﬁÇ É
DateTimeﬁﬁÑ å

fechaDesdeﬁﬁç ó
,ﬁﬁó ò
DateTimeﬁﬁô °

fechaHastaﬁﬁ¢ ¨
)ﬁﬁ¨ ≠
{
ﬂﬂ 	
try
‡‡ 
{
·· 
return
‰‰ 
OperacionDeVenta
‰‰ '
.
‰‰' (
Convert_
‰‰( 0
(
‰‰0 1$
transaccionRepositorio
‰‰1 G
.
‰‰G HI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado‰‰H Ç
(‰‰Ç É
Diccionario‰‰É é
.‰‰é èS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones‰‰è “
,‰‰“ ”
Diccionario‰‰‘ ﬂ
.‰‰ﬂ ‡:
*TiposDeComprobanteTributablesExceptoBoleta‰‰‡ ä
,‰‰ä ã
MaestroSettings‰‰å õ
.‰‰õ ú
Default‰‰ú £
.‰‰£ §0
 IdDetalleMaestroEstadoConfirmado‰‰§ ƒ
,‰‰ƒ ≈

fechaDesde‰‰∆ –
,‰‰– —

fechaHasta‰‰“ ‹
)‰‰‹ ›
.‰‰› ﬁ
OrderBy‰‰ﬁ Â
(‰‰Â Ê
t‰‰Ê Á
=>‰‰Ë Í
t‰‰Î Ï
.‰‰Ï Ì
fecha_inicio‰‰Ì ˘
)‰‰˘ ˙
.‰‰˙ ˚
ThenBy‰‰˚ Å
(‰‰Å Ç
t‰‰Ç É
=>‰‰Ñ Ü
t‰‰á à
.‰‰à â
Comprobante‰‰â î
.‰‰î ï!
Serie_comprobante‰‰ï ¶
)‰‰¶ ß
.‰‰ß ®
ThenBy‰‰® Æ
(‰‰Æ Ø
t‰‰Ø ∞
=>‰‰± ≥
t‰‰¥ µ
.‰‰µ ∂
id‰‰∂ ∏
)‰‰∏ π
.‰‰π ∫
ToList‰‰∫ ¿
(‰‰¿ ¡
)‰‰¡ ¬
)‰‰¬ √
;‰‰√ ƒ
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÁÁ 
throw
ËË 
new
ËË 
LogicaException
ËË )
(
ËË) *
$str
ËË* Y
,
ËËY Z
e
ËË[ \
)
ËË\ ]
;
ËË] ^
}
ÈÈ 
}
ÍÍ 	
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
OperacionDeVenta
ÛÛ $
>
ÛÛ$ %b
TObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasInvalidadasYTributables
ÛÛ& z
(
ÛÛz {
int
ÛÛ{ ~

idEmpleadoÛÛ â
,ÛÛâ ä
DateTimeÛÛã ì

fechaDesdeÛÛî û
,ÛÛû ü
DateTimeÛÛ† ®

fechaHastaÛÛ© ≥
)ÛÛ≥ ¥
{
ÙÙ 	
try
ıı 
{
ˆˆ 
return
˜˜ 
OperacionDeVenta
˜˜ '
.
˜˜' (
Convert_
˜˜( 0
(
˜˜0 1$
transaccionRepositorio
˜˜1 G
.
˜˜G HI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado˜˜H Ç
(˜˜Ç É
Diccionario˜˜É é
.˜˜é èS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones˜˜è “
,˜˜“ ”
Diccionario˜˜‘ ﬂ
.˜˜ﬂ ‡-
TiposDeComprobanteTributables˜˜‡ ˝
,˜˜˝ ˛
MaestroSettings˜˜ˇ é
.˜˜é è
Default˜˜è ñ
.˜˜ñ ó0
 IdDetalleMaestroEstadoInvalidado˜˜ó ∑
,˜˜∑ ∏

fechaDesde˜˜π √
,˜˜√ ƒ

fechaHasta˜˜≈ œ
)˜˜œ –
.˜˜– —
OrderBy˜˜— ÿ
(˜˜ÿ Ÿ
t˜˜Ÿ ⁄
=>˜˜€ ›
t˜˜ﬁ ﬂ
.˜˜ﬂ ‡
fecha_inicio˜˜‡ Ï
)˜˜Ï Ì
.˜˜Ì Ó
OrderBy˜˜Ó ı
(˜˜ı ˆ
t˜˜ˆ ˜
=>˜˜¯ ˙
t˜˜˚ ¸
.˜˜¸ ˝
Comprobante˜˜˝ à
.˜˜à â
numero_serie˜˜â ï
)˜˜ï ñ
.˜˜ñ ó
OrderBy˜˜ó û
(˜˜û ü
t˜˜ü †
=>˜˜° £
t˜˜§ •
.˜˜• ¶
id˜˜¶ ®
)˜˜® ©
.˜˜© ™
ToList˜˜™ ∞
(˜˜∞ ±
)˜˜± ≤
)˜˜≤ ≥
;˜˜≥ ¥
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
e
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
new
˚˚ 
LogicaException
˚˚ )
(
˚˚) *
$str
˚˚* z
,
˚˚z {
e
˚˚| }
)
˚˚} ~
;
˚˚~ 
}
¸¸ 
}
˝˝ 	
public
ÅÅ 
List
ÅÅ 
<
ÅÅ 
OperacionDeVenta
ÅÅ $
>
ÅÅ$ %n
_ObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasInvalidadasYTributablesSinConceptoÅÅ& Ö
(ÅÅÖ Ü
intÅÅÜ â

idEmpleadoÅÅä î
,ÅÅî ï
DateTimeÅÅñ û

fechaDesdeÅÅü ©
,ÅÅ© ™
DateTimeÅÅ´ ≥

fechaHastaÅÅ¥ æ
)ÅÅæ ø
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
int
ÖÖ 
[
ÖÖ 
]
ÖÖ 

idsEstados
ÖÖ  
=
ÖÖ! "
{
ÖÖ# $
MaestroSettings
ÖÖ% 4
.
ÖÖ4 5
Default
ÖÖ5 <
.
ÖÖ< =/
!IdDetalleMaestroEstadoTransmitido
ÖÖ= ^
}
ÖÖ_ `
;
ÖÖ` a
return
áá 
OperacionDeVenta
áá '
.
áá' (
Convert_
áá( 0
(
áá0 1$
transaccionRepositorio
áá1 G
.
ááG HT
EObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoSinConceptoááH ç
(ááç é
Diccionarioááé ô
.ááô öS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesááö ›
,áá› ﬁ
Diccionarioááﬂ Í
.ááÍ Î-
TiposDeComprobanteTributablesááÎ à
,ááà â

idsEstadosááä î
,ááî ï

fechaDesdeááñ †
,áá† °

fechaHastaáá¢ ¨
)áá¨ ≠
.áá≠ Æ
ToListááÆ ¥
(áá¥ µ
)ááµ ∂
)áá∂ ∑
;áá∑ ∏
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
e
ãã 
;
ãã 
}
åå 
}
çç 	
public
èè 
List
èè 
<
èè .
 ReporteVentaDetalladoSinConcepto
èè 4
>
èè4 55
'ObtenerReporteVentaDetalladoSinConcepto
èè6 ]
(
èè] ^
int
èè^ a

idEmpleado
èèb l
,
èèl m
DateTime
èèn v

fechaDesdeèèw Å
,èèÅ Ç
DateTimeèèÉ ã

fechaHastaèèå ñ
)èèñ ó
{
êê 	
try
ëë 
{
íí 
int
ìì 
[
ìì 
]
ìì 

idsEstados
ìì  
=
ìì! "
{
ìì# $
MaestroSettings
ìì% 4
.
ìì4 5
Default
ìì5 <
.
ìì< =/
!IdDetalleMaestroEstadoTransmitido
ìì= ^
}
ìì_ `
;
ìì` a
return
ïï $
transaccionRepositorio
ïï -
.
ïï- .5
'ObtenerReporteVentaDetalladoSinConcepto
ïï. U
(
ïïU V
Diccionario
ïïV a
.
ïïa bR
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesïïb •
,ïï• ¶
Diccionarioïïß ≤
.ïï≤ ≥-
TiposDeComprobanteTributablesïï≥ –
,ïï– —

idsEstadosïï“ ‹
,ïï‹ ›

fechaDesdeïïﬁ Ë
,ïïË È

fechaHastaïïÍ Ù
)ïïÙ ı
.ïïı ˆ
ToListïïˆ ¸
(ïï¸ ˝
)ïï˝ ˛
;ïï˛ ˇ
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
e
óó 
)
óó 
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* p
)
ôôp q
;
ôôq r
}
öö 
}
õõ 	
public
üü 
List
üü 
<
üü 
OperacionDeVenta
üü $
>
üü$ %v
gObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasInvalidadasYTributablesIncluyendoConceptosüü& ç
(üüç é
intüüé ë

idEmpleadoüüí ú
,üüú ù
DateTimeüüû ¶

fechaDesdeüüß ±
,üü± ≤
DateTimeüü≥ ª

fechaHastaüüº ∆
)üü∆ «
{
†† 	
try
°° 
{
¢¢ 
int
££ 
[
££ 
]
££ 

idsEstados
££  
=
££! "
{
££# $
MaestroSettings
££% 4
.
££4 5
Default
££5 <
.
££< =/
!IdDetalleMaestroEstadoTransmitido
££= ^
}
££_ `
;
££` a
return
•• 
OperacionDeVenta
•• '
.
••' (
Convert_
••( 0
(
••0 1$
transaccionRepositorio
••1 G
.
••G HY
JObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoYConceptoNegocio••H í
(••í ì
Diccionario••ì û
.••û üS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones••ü ‚
,••‚ „
Diccionario••‰ Ô
.••Ô -
TiposDeComprobanteTributables•• ç
,••ç é

idsEstados••è ô
,••ô ö

fechaDesde••õ •
,••• ¶

fechaHasta••ß ±
)••± ≤
.••≤ ≥
ToList••≥ π
(••π ∫
)••∫ ª
)••ª º
;••º Ω
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
e
ßß 
)
ßß 
{
®® 
throw
©© 
e
©© 
;
©© 
}
™™ 
}
´´ 	
public
≠≠ 
List
≠≠ 
<
≠≠ 
OperacionDeVenta
≠≠ $
>
≠≠$ %V
HObtenerOrdenesConBoletaYFacturaYNotasDeCreditoYDebitoDeVentasTributables
≠≠& n
(
≠≠n o
int
≠≠o r

idEmpleado
≠≠s }
,
≠≠} ~
DateTime≠≠ á

fechaDesde≠≠à í
,≠≠í ì
DateTime≠≠î ú

fechaHasta≠≠ù ß
)≠≠ß ®
{
ÆÆ 	
try
ØØ 
{
∞∞ 
int
±± 
[
±± 
]
±± 

idsEstados
±±  
=
±±! "
{
±±# $
MaestroSettings
±±% 4
.
±±4 5
Default
±±5 <
.
±±< =/
!IdDetalleMaestroEstadoTransmitido
±±= ^
}
±±_ `
;
±±` a
return
≥≥ 
OperacionDeVenta
≥≥ '
.
≥≥' (
Convert_
≥≥( 0
(
≥≥0 1$
transaccionRepositorio
≥≥1 G
.
≥≥G HI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado≥≥H Ç
(≥≥Ç É
Diccionario≥≥É é
.≥≥é èS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones≥≥è “
,≥≥“ ”
Diccionario≥≥‘ ﬂ
.≥≥ﬂ ‡-
TiposDeComprobanteTributables≥≥‡ ˝
,≥≥˝ ˛

idsEstados≥≥ˇ â
,≥≥â ä

fechaDesde≥≥ã ï
,≥≥ï ñ

fechaHasta≥≥ó °
)≥≥° ¢
.≥≥¢ £
ToList≥≥£ ©
(≥≥© ™
)≥≥™ ´
)≥≥´ ¨
;≥≥¨ ≠
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
LogicaException
∑∑ )
(
∑∑) *
$str
∑∑* i
,
∑∑i j
e
∑∑k l
)
∑∑l m
;
∑∑m n
}
∏∏ 
}
ππ 	
public
ªª 
List
ªª 
<
ªª 
int
ªª 
>
ªª @
2ObtenerIdsDeSeriesDeComprobantesParaBoletasDeVenta
ªª K
(
ªªK L
)
ªªL M
{
ºº 	
return
ΩΩ $
transaccionRepositorio
ΩΩ )
.
ΩΩ) **
ObtenerIdsSeriesComprobantes
ΩΩ* F
(
ΩΩF G
new
ΩΩG J
int
ΩΩK N
[
ΩΩN O
]
ΩΩO P
{
ΩΩQ R
MaestroSettings
ΩΩS b
.
ΩΩb c
Default
ΩΩc j
.
ΩΩj k0
!IdDetalleMaestroComprobanteBoletaΩΩk å
}ΩΩç é
)ΩΩé è
.ΩΩè ê
ToListΩΩê ñ
(ΩΩñ ó
)ΩΩó ò
;ΩΩò ô
}
ææ 	
public
¿¿ 
List
¿¿ 
<
¿¿ 
OrdenDeVenta
¿¿  
>
¿¿  !#
ObtenerOrdenesDeVenta
¿¿" 7
(
¿¿7 8
int
¿¿8 ;

idEmpleado
¿¿< F
,
¿¿F G
int
¿¿H K
idCentroAtencion
¿¿L \
,
¿¿\ ]
DateTime
¿¿^ f

fechaDesde
¿¿g q
,
¿¿q r
DateTime
¿¿s {

fechaHasta¿¿| Ü
)¿¿Ü á
{
¡¡ 	
try
¬¬ 
{
√√ 
return
ƒƒ 
OrdenDeVenta
ƒƒ #
.
ƒƒ# $
Convert_
ƒƒ$ ,
(
ƒƒ, -$
transaccionRepositorio
ƒƒ- C
.
ƒƒC DI
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado_
ƒƒD 
(ƒƒ Ä#
TransaccionSettingsƒƒÄ ì
.ƒƒì î
Defaultƒƒî õ
.ƒƒõ ú-
IdTipoTransaccionOrdenDeVentaƒƒú π
,ƒƒπ ∫ 
idCentroAtencionƒƒª À
,ƒƒÀ Ã

fechaDesdeƒƒÕ ◊
,ƒƒ◊ ÿ

fechaHastaƒƒŸ „
)ƒƒ„ ‰
.ƒƒ‰ Â
ToListƒƒÂ Î
(ƒƒÎ Ï
)ƒƒÏ Ì
)ƒƒÌ Ó
;ƒƒÓ Ô
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* M
,
»»M N
e
»»O P
)
»»P Q
;
»»Q R
}
…… 
}
   	
public
ÃÃ 
List
ÃÃ 
<
ÃÃ 
OperacionDeVenta
ÃÃ $
>
ÃÃ$ %'
ObtenerOperacionesDeVenta
ÃÃ& ?
(
ÃÃ? @
int
ÃÃ@ C

idEmpleado
ÃÃD N
,
ÃÃN O
int
ÃÃP S
idCentroAtencion
ÃÃT d
,
ÃÃd e
DateTime
ÃÃf n

fechaDesde
ÃÃo y
,
ÃÃy z
DateTimeÃÃ{ É

fechaHastaÃÃÑ é
)ÃÃé è
{
ÕÕ 	
try
ŒŒ 
{
œœ 
return
—— 
OperacionDeVenta
—— '
.
——' (
Convert_
——( 0
(
——0 1$
transaccionRepositorio
——1 G
.
——G HI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado——H Ç
(——Ç É
Diccionario——É é
.——é è>
.TiposDeTransaccionOrdenesDeOperacionesDeVentas——è Ω
,——Ω æ
Diccionario——ø  
.——  À+
TiposDeComprobanteParaVenta——À Ê
,——Ê Á

fechaDesde——Ë Ú
,——Ú Û

fechaHasta——Ù ˛
)——˛ ˇ
.——ˇ Ä
ToList——Ä Ü
(——Ü á
)——á à
)——à â
;——â ä
}
““ 
catch
”” 
(
”” 
	Exception
”” 
e
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ 
LogicaException
’’ )
(
’’) *
$str
’’* Q
,
’’Q R
e
’’S T
)
’’T U
;
’’U V
}
÷÷ 
}
◊◊ 	
public
ŸŸ 
List
ŸŸ 
<
ŸŸ 
Resumen_Venta
ŸŸ !
>
ŸŸ! "$
ObtenerResumenesVentas
ŸŸ# 9
(
ŸŸ9 :
int
ŸŸ: =

idEmpleado
ŸŸ> H
,
ŸŸH I
int
ŸŸJ M
idCentroAtencion
ŸŸN ^
,
ŸŸ^ _
DateTime
ŸŸ` h

fechaDesde
ŸŸi s
,
ŸŸs t
DateTime
ŸŸu }

fechaHastaŸŸ~ à
,ŸŸà â
intŸŸä ç
?ŸŸç é
	idClienteŸŸè ò
,ŸŸò ô
stringŸŸö †
comprobanteŸŸ° ¨
)ŸŸ¨ ≠
{
⁄⁄ 	
try
€€ 
{
‹‹ 
permisos_Logica
›› 
.
››  
ValidarAccion
››  -
(
››- .

idEmpleado
››. 8
,
››8 9
MaestroSettings
››: I
.
››I J
Default
››J Q
.
››Q R'
IdDetalleMaestroAccionVer
››R k
,
››k l"
TransaccionSettings››m Ä
.››Ä Å
Default››Å à
.››à â-
IdTipoTransaccionOrdenDeVenta››â ¶
,››¶ ß
MaestroSettings››® ∑
.››∑ ∏
Default››∏ ø
.››ø ¿:
*IdDetalleMaestroUnidadDeNegocioTransversal››¿ Í
)››Í Î
;››Î Ï
List
ﬁﬁ 
<
ﬁﬁ 
Resumen_Venta
ﬁﬁ "
>
ﬁﬁ" #
	resumenes
ﬁﬁ$ -
=
ﬁﬁ. /
new
ﬁﬁ0 3
List
ﬁﬁ4 8
<
ﬁﬁ8 9
Resumen_Venta
ﬁﬁ9 F
>
ﬁﬁF G
(
ﬁﬁG H
)
ﬁﬁH I
;
ﬁﬁI J
if
ﬂﬂ 
(
ﬂﬂ 
string
ﬂﬂ 
.
ﬂﬂ 
IsNullOrEmpty
ﬂﬂ (
(
ﬂﬂ( )
comprobante
ﬂﬂ) 4
)
ﬂﬂ4 5
)
ﬂﬂ5 6
{
‡‡ 
if
‚‚ 
(
‚‚ 
permisos_Logica
‚‚ '
.
‚‚' (0
"ValidarActorNegocioTieneRolVigente
‚‚( J
(
‚‚J K

idEmpleado
‚‚K U
,
‚‚U V
ActorSettings
‚‚W d
.
‚‚d e
Default
‚‚e l
.
‚‚l m
idRolJefeDeVenta
‚‚m }
)
‚‚} ~
)
‚‚~ 
{
„„ 
if
‰‰ 
(
‰‰ 
	idCliente
‰‰ %
!=
‰‰& (
null
‰‰) -
)
‰‰- .
{
ÂÂ 
	resumenes
ÊÊ %
=
ÊÊ& '$
transaccionRepositorio
ÊÊ( >
.
ÊÊ> ?$
ObtenerResumenesVentas
ÊÊ? U
(
ÊÊU V
Diccionario
ÊÊV a
.
ÊÊa b=
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÊÊb ê
,ÊÊê ë
DiccionarioÊÊí ù
.ÊÊù ûB
2TiposDeComprobanteParaVentaExceptoNotaInvalidacionÊÊû –
,ÊÊ– —

fechaDesdeÊÊ“ ‹
,ÊÊ‹ ›

fechaHastaÊÊﬁ Ë
,ÊÊË È
(ÊÊÍ Î
intÊÊÎ Ó
)ÊÊÓ Ô
	idClienteÊÊÔ ¯
)ÊÊ¯ ˘
.ÊÊ˘ ˙
ToListÊÊ˙ Ä
(ÊÊÄ Å
)ÊÊÅ Ç
;ÊÊÇ É
}
ÁÁ 
else
ËË 
{
ÈÈ 
	resumenes
ÍÍ %
=
ÍÍ& '$
transaccionRepositorio
ÍÍ( >
.
ÍÍ> ?$
ObtenerResumenesVentas
ÍÍ? U
(
ÍÍU V
Diccionario
ÍÍV a
.
ÍÍa b=
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÍÍb ê
,ÍÍê ë
DiccionarioÍÍí ù
.ÍÍù ûB
2TiposDeComprobanteParaVentaExceptoNotaInvalidacionÍÍû –
,ÍÍ– —

fechaDesdeÍÍ“ ‹
,ÍÍ‹ ›

fechaHastaÍÍﬁ Ë
)ÍÍË È
.ÍÍÈ Í
ToListÍÍÍ 
(ÍÍ Ò
)ÍÍÒ Ú
;ÍÍÚ Û
}
ÎÎ 
}
ÏÏ 
else
ÓÓ 
{
ÔÔ 
if
 
(
 
	idCliente
 %
!=
& (
null
) -
)
- .
{
ÒÒ 
	resumenes
ÚÚ %
=
ÚÚ& '$
transaccionRepositorio
ÚÚ( >
.
ÚÚ> ?$
ObtenerResumenesVentas
ÚÚ? U
(
ÚÚU V
Diccionario
ÚÚV a
.
ÚÚa b=
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÚÚb ê
,ÚÚê ë
DiccionarioÚÚí ù
.ÚÚù ûB
2TiposDeComprobanteParaVentaExceptoNotaInvalidacionÚÚû –
,ÚÚ– —

idEmpleadoÚÚ“ ‹
,ÚÚ‹ › 
idCentroAtencionÚÚﬁ Ó
,ÚÚÓ Ô

fechaDesdeÚÚ ˙
,ÚÚ˙ ˚

fechaHastaÚÚ¸ Ü
,ÚÚÜ á
(ÚÚà â
intÚÚâ å
)ÚÚå ç
	idClienteÚÚç ñ
)ÚÚñ ó
.ÚÚó ò
ToListÚÚò û
(ÚÚû ü
)ÚÚü †
;ÚÚ† °
}
ÛÛ 
else
ÙÙ 
{
ıı 
	resumenes
ˆˆ %
=
ˆˆ& '$
transaccionRepositorio
ˆˆ( >
.
ˆˆ> ?$
ObtenerResumenesVentas
ˆˆ? U
(
ˆˆU V
Diccionario
ˆˆV a
.
ˆˆa b=
.TiposDeTransaccionOrdenesDeOperacionesDeVentasˆˆb ê
,ˆˆê ë
Diccionarioˆˆí ù
.ˆˆù ûB
2TiposDeComprobanteParaVentaExceptoNotaInvalidacionˆˆû –
,ˆˆ– —

idEmpleadoˆˆ“ ‹
,ˆˆ‹ › 
idCentroAtencionˆˆﬁ Ó
,ˆˆÓ Ô

fechaDesdeˆˆ ˙
,ˆˆ˙ ˚

fechaHastaˆˆ¸ Ü
)ˆˆÜ á
.ˆˆá à
ToListˆˆà é
(ˆˆé è
)ˆˆè ê
;ˆˆê ë
}
˜˜ 
}
¯¯ 
}
˘˘ 
else
˙˙ 
{
˚˚ 
	resumenes
¸¸ 
=
¸¸ $
transaccionRepositorio
¸¸  6
.
¸¸6 7$
ObtenerResumenesVentas
¸¸7 M
(
¸¸M N
Diccionario
¸¸N Y
.
¸¸Y Z=
.TiposDeTransaccionOrdenesDeOperacionesDeVentas¸¸Z à
,¸¸à â
Diccionario¸¸ä ï
.¸¸ï ñB
2TiposDeComprobanteParaVentaExceptoNotaInvalidacion¸¸ñ »
,¸¸» …
comprobante¸¸  ’
)¸¸’ ÷
.¸¸÷ ◊
ToList¸¸◊ ›
(¸¸› ﬁ
)¸¸ﬁ ﬂ
;¸¸ﬂ ‡
}
˝˝ 
return
˛˛ 
	resumenes
˛˛  
;
˛˛  !
}
ˇˇ 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* P
,
ÇÇP Q
e
ÇÇR S
)
ÇÇS T
;
ÇÇT U
}
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
List
ÜÜ 
<
ÜÜ 
OrdenDeVenta
ÜÜ  
>
ÜÜ  !.
 ObtenerOrdenesDeVentaConfirmadas
ÜÜ" B
(
ÜÜB C
int
ÜÜC F

idEmpleado
ÜÜG Q
,
ÜÜQ R
int
ÜÜS V
idCentroAtencion
ÜÜW g
,
ÜÜg h
DateTime
ÜÜi q

fechaDesde
ÜÜr |
,
ÜÜ| }
DateTimeÜÜ~ Ü

fechaHastaÜÜá ë
)ÜÜë í
{
áá 	
try
àà 
{
ââ 
return
ää 
OrdenDeVenta
ää #
.
ää# $
Convert_
ää$ ,
(
ää, -$
transaccionRepositorio
ää- C
.
ääC DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
ääD ~
(
ää~ "
TransaccionSettingsää í
.ääí ì
Defaultääì ö
.ääö õ-
IdTipoTransaccionOrdenDeVentaääõ ∏
,ää∏ π
MaestroSettingsää∫ …
.ää…  
Defaultää  —
.ää— “0
 IdDetalleMaestroEstadoConfirmadoää“ Ú
,ääÚ Û 
idCentroAtencionääÙ Ñ
,ääÑ Ö

fechaDesdeääÜ ê
,ääê ë

fechaHastaääí ú
)ääú ù
.ääù û
ToListääû §
(ää§ •
)ää• ¶
)ää¶ ß
;ääß ®
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* Y
,
èèY Z
e
èè[ \
)
èè\ ]
;
èè] ^
}
êê 
}
ëë 	
public
ìì 
List
ìì 
<
ìì 
OrdenDeVenta
ìì  
>
ìì  !.
 ObtenerOrdenesDeVentaInvalidadas
ìì" B
(
ììB C
int
ììC F
idCentroAtencion
ììG W
,
ììW X
DateTime
ììY a

fechaDesde
ììb l
,
ììl m
DateTime
ììn v

fechaHastaììw Å
)ììÅ Ç
{
îî 	
try
ññ 
{
óó 
return
òò 
OrdenDeVenta
òò #
.
òò# $
Convert_
òò$ ,
(
òò, -$
transaccionRepositorio
òò- C
.
òòC DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
òòD ~
(
òò~ 
idCentroAtencionòò è
,òòè ê#
TransaccionSettingsòòë §
.òò§ •
Defaultòò• ¨
.òò¨ ≠-
IdTipoTransaccionOrdenDeVentaòò≠  
,òò  À

fechaDesdeòòÃ ÷
,òò÷ ◊
MaestroSettingsòòÿ Á
.òòÁ Ë
DefaultòòË Ô
.òòÔ 0
 IdDetalleMaestroEstadoInvalidadoòò ê
,òòê ë

fechaHastaòòí ú
)òòú ù
.òòù û
ToListòòû §
(òò§ •
)òò• ¶
)òò¶ ß
;òòß ®
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* Y
,
ùùY Z
e
ùù[ \
)
ùù\ ]
;
ùù] ^
}
üü 
}
†† 	
public
¢¢ 
List
¢¢ 
<
¢¢ 
OrdenDeVenta
¢¢  
>
¢¢  !+
ObtenerOrdenesDeVentaAnuladas
¢¢" ?
(
¢¢? @
int
¢¢@ C
idCentroAtencion
¢¢D T
,
¢¢T U
DateTime
¢¢V ^

fechaDesde
¢¢_ i
,
¢¢i j
DateTime
¢¢k s

fechaHasta
¢¢t ~
)
¢¢~ 
{
££ 	
try
•• 
{
¶¶ 
return
ßß 
OrdenDeVenta
ßß #
.
ßß# $
Convert_
ßß$ ,
(
ßß, -$
transaccionRepositorio
ßß- C
.
ßßC DI
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado_
ßßD 
(ßß Ä 
idCentroAtencionßßÄ ê
,ßßê ë#
TransaccionSettingsßßí •
.ßß• ¶
Defaultßß¶ ≠
.ßß≠ Æ-
IdTipoTransaccionOrdenDeVentaßßÆ À
,ßßÀ Ã
MaestroSettingsßßÕ ‹
.ßß‹ ›
Defaultßß› ‰
.ßß‰ Â-
IdDetalleMaestroEstadoAnuladoßßÂ Ç
,ßßÇ É

fechaDesdeßßÑ é
,ßßé è

fechaHastaßßê ö
)ßßö õ
.ßßõ ú
ToListßßú ¢
(ßß¢ £
)ßß£ §
)ßß§ •
;ßß• ¶
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* V
,
¨¨V W
e
¨¨X Y
)
¨¨Y Z
;
¨¨Z [
}
≠≠ 
}
ÆÆ 	
public
±± 
List
±± 
<
±± 
OrdenDeVenta
±±  
>
±±  !;
-ObtenerOrdenesDeVentaConfirmadasYTransmitidas
±±" O
(
±±O P
int
±±P S
idCentroAtencion
±±T d
,
±±d e
DateTime
±±f n

fechaDesde
±±o y
,
±±y z
DateTime±±{ É

fechaHasta±±Ñ é
)±±é è
{
≤≤ 	
try
≥≥ 
{
¥¥ 
var
µµ 
	resultado
µµ 
=
µµ 
OrdenDeVenta
µµ  ,
.
µµ, -
Convert_
µµ- 5
(
µµ5 6$
transaccionRepositorio
µµ6 L
.
µµL MI
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoµµM á
(µµá à 
idCentroAtencionµµà ò
,µµò ô#
TransaccionSettingsµµö ≠
.µµ≠ Æ
DefaultµµÆ µ
.µµµ ∂-
IdTipoTransaccionOrdenDeVentaµµ∂ ”
,µµ” ‘

fechaDesdeµµ’ ﬂ
,µµﬂ ‡
MaestroSettingsµµ· 
.µµ Ò
DefaultµµÒ ¯
.µµ¯ ˘0
 IdDetalleMaestroEstadoConfirmadoµµ˘ ô
,µµô ö

fechaHastaµµõ •
)µµ• ¶
.µµ¶ ß
ToListµµß ≠
(µµ≠ Æ
)µµÆ Ø
)µµØ ∞
;µµ∞ ±
return
∑∑ 
	resultado
∑∑  
;
∑∑  !
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
ªª 
throw
ºº 
new
ºº 
LogicaException
ºº )
(
ºº) *
$str
ºº* h
,
ººh i
e
ººj k
)
ººk l
;
ººl m
}
ΩΩ 
}
ææ 	
public
¿¿ 
List
¿¿ 
<
¿¿ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
¿¿ S
>
¿¿S TW
HObtenerOrdenesDeVentaConfirmadasYTransmitidasPorConceptoBasicoYDeNegocio¿¿U ù
(¿¿ù û
int¿¿û ° 
idCentroAtencion¿¿¢ ≤
,¿¿≤ ≥
DateTime¿¿¥ º

fechaDesde¿¿Ω «
,¿¿« »
DateTime¿¿… —

fechaHasta¿¿“ ‹
)¿¿‹ ›
{
¡¡ 	
try
¬¬ 
{
√√ 
var
ƒƒ 
	resultado
ƒƒ 
=
ƒƒ $
transaccionRepositorio
ƒƒ  6
.
ƒƒ6 7I
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstados
ƒƒ7 r
(
ƒƒr s
new
ƒƒs v
int
ƒƒw z
[
ƒƒz {
]
ƒƒ{ |
{
ƒƒ} ~
idCentroAtencionƒƒ è
}ƒƒê ë
,ƒƒë í
Diccionarioƒƒì û
.ƒƒû üS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesƒƒü ‚
,ƒƒ‚ „

fechaDesdeƒƒ‰ Ó
,ƒƒÓ Ô

fechaHastaƒƒ ˙
,ƒƒ˙ ˚
MaestroSettingsƒƒ¸ ã
.ƒƒã å
Defaultƒƒå ì
.ƒƒì î0
 IdDetalleMaestroEstadoConfirmadoƒƒî ¥
)ƒƒ¥ µ
.ƒƒµ ∂
ToListƒƒ∂ º
(ƒƒº Ω
)ƒƒΩ æ
;ƒƒæ ø
return
≈≈ 
	resultado
≈≈  
;
≈≈  !
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
new
…… 
LogicaException
…… )
(
……) *
$str
……* h
,
……h i
e
……j k
)
……k l
;
……l m
}
   
}
ÀÀ 	
public
ÕÕ 
List
ÕÕ 
<
ÕÕ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
ÕÕ S
>
ÕÕS TJ
;ObtenerOrdenesDeVentaInvalidadasPorConceptoBasicoYDeNegocioÕÕU ê
(ÕÕê ë
intÕÕë î 
idCentroAtencionÕÕï •
,ÕÕ• ¶
DateTimeÕÕß Ø

fechaDesdeÕÕ∞ ∫
,ÕÕ∫ ª
DateTimeÕÕº ƒ

fechaHastaÕÕ≈ œ
)ÕÕœ –
{
ŒŒ 	
try
œœ 
{
–– 
var
—— 
	resultado
—— 
=
—— $
transaccionRepositorio
——  6
.
——6 7I
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstados
——7 r
(
——r s
new
——s v
int
——w z
[
——z {
]
——{ |
{
——} ~
idCentroAtencion—— è
}——ê ë
,——ë í
Diccionario——ì û
.——û üS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones——ü ‚
,——‚ „
MaestroSettings——‰ Û
.——Û Ù
Default——Ù ˚
.——˚ ¸0
 IdDetalleMaestroEstadoInvalidado——¸ ú
,——ú ù

fechaDesde——û ®
,——® ©

fechaHasta——™ ¥
)——¥ µ
.——µ ∂
ToList——∂ º
(——º Ω
)——Ω æ
;——æ ø
return
““ 
	resultado
““  
;
““  !
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
e
‘‘ 
)
‘‘ 
{
’’ 
throw
÷÷ 
new
÷÷ 
LogicaException
÷÷ )
(
÷÷) *
$str
÷÷* Y
,
÷÷Y Z
e
÷÷[ \
)
÷÷\ ]
;
÷÷] ^
}
◊◊ 
}
ÿÿ 	
public
⁄⁄ 
List
⁄⁄ 
<
⁄⁄ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
⁄⁄ S
>
⁄⁄S TG
8ObtenerOrdenesDeVentaAnuladasPorConceptoBasicoYDeNegocio⁄⁄U ç
(⁄⁄ç é
int⁄⁄é ë 
idCentroAtencion⁄⁄í ¢
,⁄⁄¢ £
DateTime⁄⁄§ ¨

fechaDesde⁄⁄≠ ∑
,⁄⁄∑ ∏
DateTime⁄⁄π ¡

fechaHasta⁄⁄¬ Ã
)⁄⁄Ã Õ
{
€€ 	
try
‹‹ 
{
›› 
var
ﬁﬁ 
	resultado
ﬁﬁ 
=
ﬁﬁ $
transaccionRepositorio
ﬁﬁ  6
.
ﬁﬁ6 7I
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstados
ﬁﬁ7 r
(
ﬁﬁr s
new
ﬁﬁs v
int
ﬁﬁw z
[
ﬁﬁz {
]
ﬁﬁ{ |
{
ﬁﬁ} ~
idCentroAtencionﬁﬁ è
}ﬁﬁê ë
,ﬁﬁë í
Diccionarioﬁﬁì û
.ﬁﬁû üS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesﬁﬁü ‚
,ﬁﬁ‚ „
MaestroSettingsﬁﬁ‰ Û
.ﬁﬁÛ Ù
DefaultﬁﬁÙ ˚
.ﬁﬁ˚ ¸-
IdDetalleMaestroEstadoAnuladoﬁﬁ¸ ô
,ﬁﬁô ö

fechaDesdeﬁﬁõ •
,ﬁﬁ• ¶

fechaHastaﬁﬁß ±
)ﬁﬁ± ≤
.ﬁﬁ≤ ≥
ToListﬁﬁ≥ π
(ﬁﬁπ ∫
)ﬁﬁ∫ ª
;ﬁﬁª º
return
ﬂﬂ 
	resultado
ﬂﬂ  
;
ﬂﬂ  !
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
e
·· 
)
·· 
{
‚‚ 
throw
„„ 
new
„„ 
LogicaException
„„ )
(
„„) *
$str
„„* V
,
„„V W
e
„„X Y
)
„„Y Z
;
„„Z [
}
‰‰ 
}
ÂÂ 	
public
ÁÁ 
List
ÁÁ 
<
ÁÁ 
OrdenDeVenta
ÁÁ  
>
ÁÁ  !.
 ObtenerOrdenesDeVentaConfirmadas
ÁÁ" B
(
ÁÁB C
int
ÁÁC F

idEmpleado
ÁÁG Q
,
ÁÁQ R
int
ÁÁS V
idCentroAtencion
ÁÁW g
,
ÁÁg h
DateTime
ÁÁi q

fechaDesde
ÁÁr |
,
ÁÁ| }
DateTimeÁÁ~ Ü

fechaHastaÁÁá ë
,ÁÁë í
intÁÁì ñ
idSerieÁÁó û
)ÁÁû ü
{
ËË 	
try
ÈÈ 
{
ÍÍ 
return
ÎÎ 
OrdenDeVenta
ÎÎ #
.
ÎÎ# $
Convert_
ÎÎ$ ,
(
ÎÎ, -$
transaccionRepositorio
ÎÎ- C
.
ÎÎC DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÎÎD ~
(
ÎÎ~ "
TransaccionSettingsÎÎ í
.ÎÎí ì
DefaultÎÎì ö
.ÎÎö õ-
IdTipoTransaccionOrdenDeVentaÎÎõ ∏
,ÎÎ∏ π
MaestroSettingsÎÎ∫ …
.ÎÎ…  
DefaultÎÎ  —
.ÎÎ— “0
 IdDetalleMaestroEstadoConfirmadoÎÎ“ Ú
,ÎÎÚ Û

fechaDesdeÎÎÙ ˛
,ÎÎ˛ ˇ

fechaHastaÎÎÄ ä
,ÎÎä ã
idSerieÎÎå ì
)ÎÎì î
.ÎÎî ï
ToListÎÎï õ
(ÎÎõ ú
)ÎÎú ù
)ÎÎù û
;ÎÎû ü
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* Y
,
ÔÔY Z
e
ÔÔ[ \
)
ÔÔ\ ]
;
ÔÔ] ^
}
 
}
ÒÒ 	
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
OrdenDeVenta
ÛÛ  
>
ÛÛ  !;
-ObtenerOrdenesDeVentaConfirmadasOTransmitidas
ÛÛ" O
(
ÛÛO P
int
ÛÛP S

idEmpleado
ÛÛT ^
,
ÛÛ^ _
int
ÛÛ` c
idCentroAtencion
ÛÛd t
,
ÛÛt u
DateTime
ÛÛv ~

fechaDesdeÛÛ â
,ÛÛâ ä
DateTimeÛÛã ì

fechaHastaÛÛî û
,ÛÛû ü
intÛÛ† £
idSerieÛÛ§ ´
)ÛÛ´ ¨
{
ÙÙ 	
try
ıı 
{
ˆˆ 
return
˜˜ 
OrdenDeVenta
˜˜ #
.
˜˜# $
Convert_
˜˜$ ,
(
˜˜, -$
transaccionRepositorio
˜˜- C
.
˜˜C DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
˜˜D ~
(
˜˜~ "
TransaccionSettings˜˜ í
.˜˜í ì
Default˜˜ì ö
.˜˜ö õ-
IdTipoTransaccionOrdenDeVenta˜˜õ ∏
,˜˜∏ π

fechaDesde˜˜∫ ƒ
,˜˜ƒ ≈

fechaHasta˜˜∆ –
,˜˜– —
MaestroSettings˜˜“ ·
.˜˜· ‚
Default˜˜‚ È
.˜˜È Í0
 IdDetalleMaestroEstadoConfirmado˜˜Í ä
,˜˜ä ã
idSerie˜˜å ì
)˜˜ì î
.˜˜î ï
ToList˜˜ï õ
(˜˜õ ú
)˜˜ú ù
)˜˜ù û
;˜˜û ü
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
e
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
new
˚˚ 
LogicaException
˚˚ )
(
˚˚) *
$str
˚˚* h
,
˚˚h i
e
˚˚j k
)
˚˚k l
;
˚˚l m
}
¸¸ 
}
˝˝ 	
public
˛˛ 
List
˛˛ 
<
˛˛ '
ResumenDeTransaccionVenta
˛˛ -
>
˛˛- .0
"ObtenerResumenDeOperacionesDeVenta
˛˛/ Q
(
˛˛Q R
DateTime
˛˛R Z

fechaDesde
˛˛[ e
,
˛˛e f
DateTime
˛˛g o

fechaHasta
˛˛p z
,
˛˛z {
int
˛˛| 
idSerie˛˛Ä á
)˛˛á à
{
ˇˇ 	
try
Ä	Ä	 
{
Å	Å	 
List
Ç	Ç	 
<
Ç	Ç	 '
ResumenDeTransaccionVenta
Ç	Ç	 .
>
Ç	Ç	. /
ordenes
Ç	Ç	0 7
=
Ç	Ç	8 9$
transaccionRepositorio
Ç	Ç	: P
.
Ç	Ç	P Q)
ObtenerResumenDeTransaccion
Ç	Ç	Q l
(
Ç	Ç	l m
idSerie
Ç	Ç	m t
,
Ç	Ç	t u
DiccionarioÇ	Ç	v Å
.Ç	Ç	Å Ç>
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÇ	Ç	Ç ∞
,Ç	Ç	∞ ±
DiccionarioÇ	Ç	≤ Ω
.Ç	Ç	Ω æ8
(EstadosDeOperacionesIgnorandoTransmitidoÇ	Ç	æ Ê
,Ç	Ç	Ê Á
MaestroSettingsÇ	Ç	Ë ˜
.Ç	Ç	˜ ¯
DefaultÇ	Ç	¯ ˇ
.Ç	Ç	ˇ Ä1
!IdDetalleMaestroEstadoTransmitidoÇ	Ç	Ä °
,Ç	Ç	° ¢

fechaDesdeÇ	Ç	£ ≠
,Ç	Ç	≠ Æ

fechaHastaÇ	Ç	Ø π
)Ç	Ç	π ∫
.Ç	Ç	∫ ª
OrderByÇ	Ç	ª ¬
(Ç	Ç	¬ √
rtÇ	Ç	√ ≈
=>Ç	Ç	∆ »
rtÇ	Ç	… À
.Ç	Ç	À Ã
FechaÇ	Ç	Ã —
)Ç	Ç	— “
.Ç	Ç	“ ”
ThenByÇ	Ç	” Ÿ
(Ç	Ç	Ÿ ⁄
rtÇ	Ç	⁄ ‹
=>Ç	Ç	› ﬂ
rtÇ	Ç	‡ ‚
.Ç	Ç	‚ „
NumeroÇ	Ç	„ È
)Ç	Ç	È Í
.Ç	Ç	Í Î
ToListÇ	Ç	Î Ò
(Ç	Ç	Ò Ú
)Ç	Ç	Ú Û
;Ç	Ç	Û Ù
return
É	É	 
ordenes
É	É	 
;
É	É	 
}
Ñ	Ñ	 
catch
Ö	Ö	 
(
Ö	Ö	 
	Exception
Ö	Ö	 
e
Ö	Ö	 
)
Ö	Ö	 
{
Ü	Ü	 
throw
á	á	 
new
á	á	 
LogicaException
á	á	 )
(
á	á	) *
$str
á	á	* \
,
á	á	\ ]
e
á	á	^ _
)
á	á	_ `
;
á	á	` a
}
à	à	 
}
â	â	 	
public
ã	ã	 
List
ã	ã	 
<
ã	ã	 
OrdenDeVenta
ã	ã	  
>
ã	ã	  !;
-ObtenerOrdenesDeVentaTransmitidasYConfirmadas
ã	ã	" O
(
ã	ã	O P
DateTime
ã	ã	P X

fechaDesde
ã	ã	Y c
,
ã	ã	c d
DateTime
ã	ã	e m

fechaHasta
ã	ã	n x
,
ã	ã	x y
int
ã	ã	z }
idSerieã	ã	~ Ö
)ã	ã	Ö Ü
{
å	å	 	
try
ç	ç	 
{
é	é	 
return
è	è	 
OrdenDeVenta
è	è	 #
.
è	è	# $
Convert_
è	è	$ ,
(
è	è	, -$
transaccionRepositorio
è	è	- C
.
è	è	C DQ
BObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoPorSerieè	è	D Ü
(è	è	Ü á
idSerieè	è	á é
,è	è	é è#
TransaccionSettingsè	è	ê £
.è	è	£ §
Defaultè	è	§ ´
.è	è	´ ¨-
IdTipoTransaccionOrdenDeVentaè	è	¨ …
,è	è	…  
MaestroSettingsè	è	À ⁄
.è	è	⁄ €
Defaultè	è	€ ‚
.è	è	‚ „0
 IdDetalleMaestroEstadoConfirmadoè	è	„ É
,è	è	É Ñ

fechaDesdeè	è	Ö è
,è	è	è ê

fechaHastaè	è	ë õ
)è	è	õ ú
.è	è	ú ù
ToListè	è	ù £
(è	è	£ §
)è	è	§ •
)è	è	• ¶
;è	è	¶ ß
}
ê	ê	 
catch
ë	ë	 
(
ë	ë	 
	Exception
ë	ë	 
e
ë	ë	 
)
ë	ë	 
{
í	í	 
throw
ì	ì	 
new
ì	ì	 
LogicaException
ì	ì	 )
(
ì	ì	) *
$str
ì	ì	* h
,
ì	ì	h i
e
ì	ì	j k
)
ì	ì	k l
;
ì	ì	l m
}
î	î	 
}
ï	ï	 	
public
¢	¢	 
List
¢	¢	 
<
¢	¢	 
OrdenDeVenta
¢	¢	  
>
¢	¢	  !.
 ObtenerOrdenesDeVentaInvalidadas
¢	¢	" B
(
¢	¢	B C
DateTime
¢	¢	C K

fechaDesde
¢	¢	L V
,
¢	¢	V W
DateTime
¢	¢	X `

fechaHasta
¢	¢	a k
,
¢	¢	k l
int
¢	¢	m p
idSerie
¢	¢	q x
)
¢	¢	x y
{
£	£	 	
try
§	§	 
{
•	•	 
return
¶	¶	 
OrdenDeVenta
¶	¶	 #
.
¶	¶	# $
Convert_
¶	¶	$ ,
(
¶	¶	, -$
transaccionRepositorio
¶	¶	- C
.
¶	¶	C DQ
BObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoPorSerie¶	¶	D Ü
(¶	¶	Ü á
idSerie¶	¶	á é
,¶	¶	é è#
TransaccionSettings¶	¶	ê £
.¶	¶	£ §
Default¶	¶	§ ´
.¶	¶	´ ¨-
IdTipoTransaccionOrdenDeVenta¶	¶	¨ …
,¶	¶	…  
MaestroSettings¶	¶	À ⁄
.¶	¶	⁄ €
Default¶	¶	€ ‚
.¶	¶	‚ „0
 IdDetalleMaestroEstadoInvalidado¶	¶	„ É
,¶	¶	É Ñ

fechaDesde¶	¶	Ö è
,¶	¶	è ê

fechaHasta¶	¶	ë õ
)¶	¶	õ ú
.¶	¶	ú ù
ToList¶	¶	ù £
(¶	¶	£ §
)¶	¶	§ •
)¶	¶	• ¶
;¶	¶	¶ ß
}
ß	ß	 
catch
®	®	 
(
®	®	 
	Exception
®	®	 
e
®	®	 
)
®	®	 
{
©	©	 
throw
™	™	 
new
™	™	 
LogicaException
™	™	 )
(
™	™	) *
$str
™	™	* Y
,
™	™	Y Z
e
™	™	[ \
)
™	™	\ ]
;
™	™	] ^
}
´	´	 
}
¨	¨	 	
public
Æ	Æ	 
List
Æ	Æ	 
<
Æ	Æ	 
OrdenDeVenta
Æ	Æ	  
>
Æ	Æ	  !+
ObtenerOrdenesDeVentaAnuladas
Æ	Æ	" ?
(
Æ	Æ	? @
DateTime
Æ	Æ	@ H

fechaDesde
Æ	Æ	I S
,
Æ	Æ	S T
DateTime
Æ	Æ	U ]

fechaHasta
Æ	Æ	^ h
,
Æ	Æ	h i
int
Æ	Æ	j m
idSerie
Æ	Æ	n u
)
Æ	Æ	u v
{
Ø	Ø	 	
try
∞	∞	 
{
±	±	 
int
≤	≤	 
[
≤	≤	 
]
≤	≤	 

idsEstados
≤	≤	  
=
≤	≤	! "
{
≤	≤	# $
MaestroSettings
≤	≤	% 4
.
≤	≤	4 5
Default
≤	≤	5 <
.
≤	≤	< =.
 IdDetalleMaestroEstadoConfirmado
≤	≤	= ]
,
≤	≤	] ^
MaestroSettings
≤	≤	_ n
.
≤	≤	n o
Default
≤	≤	o v
.
≤	≤	v w0
!IdDetalleMaestroEstadoTransmitido≤	≤	w ò
}≤	≤	ô ö
;≤	≤	ö õ
return
≥	≥	 
OrdenDeVenta
≥	≥	 #
.
≥	≥	# $
Convert_
≥	≥	$ ,
(
≥	≥	, -$
transaccionRepositorio
≥	≥	- C
.
≥	≥	C DQ
BObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoPorSerie≥	≥	D Ü
(≥	≥	Ü á
idSerie≥	≥	á é
,≥	≥	é è#
TransaccionSettings≥	≥	ê £
.≥	≥	£ §
Default≥	≥	§ ´
.≥	≥	´ ¨-
IdTipoTransaccionOrdenDeVenta≥	≥	¨ …
,≥	≥	…  
MaestroSettings≥	≥	À ⁄
.≥	≥	⁄ €
Default≥	≥	€ ‚
.≥	≥	‚ „-
IdDetalleMaestroEstadoAnulado≥	≥	„ Ä
,≥	≥	Ä Å

fechaDesde≥	≥	Ç å
,≥	≥	å ç

fechaHasta≥	≥	é ò
)≥	≥	ò ô
.≥	≥	ô ö
ToList≥	≥	ö †
(≥	≥	† °
)≥	≥	° ¢
)≥	≥	¢ £
;≥	≥	£ §
}
µ	µ	 
catch
∂	∂	 
(
∂	∂	 
	Exception
∂	∂	 
e
∂	∂	 
)
∂	∂	 
{
∑	∑	 
throw
∏	∏	 
new
∏	∏	 
LogicaException
∏	∏	 )
(
∏	∏	) *
$str
∏	∏	* V
,
∏	∏	V W
e
∏	∏	X Y
)
∏	∏	Y Z
;
∏	∏	Z [
}
π	π	 
}
∫	∫	 	
public
º	º	 
List
º	º	 
<
º	º	 >
0Resumen_Transaccion_Por_Serie_y_Concepto_Negocio
º	º	 D
>
º	º	D EJ
;ObtenerReporteVentasConSerieYConceptoConfirmadaOTransmitidaº	º	F Å
(º	º	Å Ç
intº	º	Ç Ö

idEmpleadoº	º	Ü ê
,º	º	ê ë
intº	º	í ï 
idCentroAtencionº	º	ñ ¶
,º	º	¶ ß
DateTimeº	º	® ∞

fechaDesdeº	º	± ª
,º	º	ª º
DateTimeº	º	Ω ≈

fechaHastaº	º	∆ –
)º	º	– —
{
Ω	Ω	 	
var
æ	æ	 
	resultado
æ	æ	 
=
æ	æ	 $
transaccionRepositorio
æ	æ	 2
.
æ	æ	2 37
)ObtenerResumenTransaccionesSerieYConcepto
æ	æ	3 \
(
æ	æ	\ ]!
TransaccionSettings
æ	æ	] p
.
æ	æ	p q
Default
æ	æ	q x
.
æ	æ	x y,
IdTipoTransaccionOrdenDeVentaæ	æ	y ñ
,æ	æ	ñ ó
MaestroSettingsæ	æ	ò ß
.æ	æ	ß ®
Defaultæ	æ	® Ø
.æ	æ	Ø ∞0
 IdDetalleMaestroEstadoConfirmadoæ	æ	∞ –
,æ	æ	– —

fechaDesdeæ	æ	“ ‹
,æ	æ	‹ ›

fechaHastaæ	æ	ﬁ Ë
)æ	æ	Ë È
.æ	æ	È Í
ToListæ	æ	Í 
(æ	æ	 Ò
)æ	æ	Ò Ú
;æ	æ	Ú Û
return
¿	¿	 
	resultado
¿	¿	 
;
¿	¿	 
}
¡	¡	 	
public
√	√	 
List
√	√	 
<
√	√	 <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
√	√	 B
>
√	√	B CQ
BObtenerReporteVentasConSerieYConceptoBasicoConfirmadaOTransmitida_√	√	D Ü
(√	√	Ü á
int√	√	á ä

idEmpleado√	√	ã ï
,√	√	ï ñ
int√	√	ó ö 
idCentroAtencion√	√	õ ´
,√	√	´ ¨
DateTime√	√	≠ µ

fechaDesde√	√	∂ ¿
,√	√	¿ ¡
DateTime√	√	¬  

fechaHasta√	√	À ’
)√	√	’ ÷
{
ƒ	ƒ	 	
var
≈	≈	 
	resultado
≈	≈	 
=
≈	≈	 $
transaccionRepositorio
≈	≈	 2
.
≈	≈	2 3?
1ObtenerResumenTransaccionesPorSerieYConeptoBasico
≈	≈	3 d
(
≈	≈	d e!
TransaccionSettings
≈	≈	e x
.
≈	≈	x y
Default≈	≈	y Ä
.≈	≈	Ä Å-
IdTipoTransaccionOrdenDeVenta≈	≈	Å û
,≈	≈	û ü
MaestroSettings≈	≈	† Ø
.≈	≈	Ø ∞
Default≈	≈	∞ ∑
.≈	≈	∑ ∏0
 IdDetalleMaestroEstadoConfirmado≈	≈	∏ ÿ
,≈	≈	ÿ Ÿ

fechaDesde≈	≈	⁄ ‰
,≈	≈	‰ Â

fechaHasta≈	≈	Ê 
)≈	≈	 Ò
.≈	≈	Ò Ú
ToList≈	≈	Ú ¯
(≈	≈	¯ ˘
)≈	≈	˘ ˙
;≈	≈	˙ ˚
return
«	«	 
	resultado
«	«	 
;
«	«	 
}
»	»	 	
public
Ã	Ã	 
List
Ã	Ã	 
<
Ã	Ã	 ?
1TransaccionAgrupadoPorSerieConNumeracionInicioFin
Ã	Ã	 E
>
Ã	Ã	E Fe
VObtenerResumenDeComprobantesConfirmadosDeOperacionesDeVentasPorSeriePorIntervaloDiarioÃ	Ã	G ù
(Ã	Ã	ù û
intÃ	Ã	û °
[Ã	Ã	° ¢
]Ã	Ã	¢ £!
idsPuntosDeVentasÃ	Ã	§ µ
,Ã	Ã	µ ∂
DateTimeÃ	Ã	∑ ø

fechaDesdeÃ	Ã	¿  
,Ã	Ã	  À
DateTimeÃ	Ã	Ã ‘

fechaHastaÃ	Ã	’ ﬂ
)Ã	Ã	ﬂ ‡
{
Õ	Õ	 	
try
Œ	Œ	 
{
œ	œ	 
var
–	–	 
	resultado
–	–	 
=
–	–	 $
transaccionRepositorio
–	–	  6
.
–	–	6 7E
7ObtenerTransaccionesAgrupadasPorSeriePorIntervaloDiario
–	–	7 n
(
–	–	n o 
idsPuntosDeVentas–	–	o Ä
,–	–	Ä Å
Diccionario–	–	Ç ç
.–	–	ç éS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones–	–	é —
,–	–	— “
MaestroSettings–	–	” ‚
.–	–	‚ „
Default–	–	„ Í
.–	–	Í Î0
 IdDetalleMaestroEstadoConfirmado–	–	Î ã
,–	–	ã å

fechaDesde–	–	ç ó
,–	–	ó ò

fechaHasta–	–	ô £
)–	–	£ §
.–	–	§ •
ToList–	–	• ´
(–	–	´ ¨
)–	–	¨ ≠
;–	–	≠ Æ
foreach
—	—	 
(
—	—	 
var
—	—	 
item
—	—	 !
in
—	—	" $
	resultado
—	—	% .
.
—	—	. /
Where
—	—	/ 4
(
—	—	4 5
r
—	—	5 6
=>
—	—	7 9
r
—	—	: ;
.
—	—	; <
IdTipoComprobante
—	—	< M
==
—	—	N P
MaestroSettings
—	—	Q `
.
—	—	` a
Default
—	—	a h
.
—	—	h i5
&IdDetalleMaestroComprobanteNotaCredito—	—	i è
)—	—	è ê
)—	—	ê ë
{
“	“	 
item
”	”	 
.
”	”	 
Importe
”	”	  
*=
”	”	! #
-
”	”	$ %
$num
”	”	% &
;
”	”	& '
var
‘	‘	 
icbper
‘	‘	 
=
‘	‘	  
item
‘	‘	! %
.
‘	‘	% &
Icbper
‘	‘	& ,
;
‘	‘	, -
item
’	’	 
.
’	’	 
Icbper
’	’	 
=
’	’	  !
Math
’	’	" &
.
’	’	& '
Abs
’	’	' *
(
’	’	* +
icbper
’	’	+ 1
)
’	’	1 2
*
’	’	3 4
(
’	’	5 6
-
’	’	6 7
$num
’	’	7 8
)
’	’	8 9
;
’	’	9 :
item
÷	÷	 
.
÷	÷	 

ValorVenta
÷	÷	 #
*=
÷	÷	$ &
-
÷	÷	' (
$num
÷	÷	( )
;
÷	÷	) *
item
◊	◊	 
.
◊	◊	 
Igv
◊	◊	 
*=
◊	◊	 
-
◊	◊	  !
$num
◊	◊	! "
;
◊	◊	" #
}
ÿ	ÿ	 
return
⁄	⁄	 
	resultado
⁄	⁄	  
;
⁄	⁄	  !
}
€	€	 
catch
‹	‹	 
(
‹	‹	 
LogicaException
‹	‹	 "
e
‹	‹	# $
)
‹	‹	$ %
{
›	›	 
throw
ﬂ	ﬂ	 
new
ﬂ	ﬂ	 
LogicaException
ﬂ	ﬂ	 )
(
ﬂ	ﬂ	) *
$str
ﬂ	ﬂ	* V
,
ﬂ	ﬂ	V W
e
ﬂ	ﬂ	X Y
)
ﬂ	ﬂ	Y Z
;
ﬂ	ﬂ	Z [
}
‡	‡	 
}
‚	‚	 	
public
‰	‰	 
List
‰	‰	 
<
‰	‰	 A
3TransaccionAgrupadoPorSerieConNumeracionConcatenada
‰	‰	 G
>
‰	‰	G He
VObtenerResumenDeComprobantesInvalidadosDeOperacionesDeVentasPorSeriePorIntervaloDiario‰	‰	I ü
(‰	‰	ü †
int‰	‰	† £
[‰	‰	£ §
]‰	‰	§ •!
idsPuntosDeVentas‰	‰	¶ ∑
,‰	‰	∑ ∏
DateTime‰	‰	π ¡

fechaDesde‰	‰	¬ Ã
,‰	‰	Ã Õ
DateTime‰	‰	Œ ÷

fechaHasta‰	‰	◊ ·
)‰	‰	· ‚
{
Â	Â	 	
var
Ê	Ê	 
	resultado
Ê	Ê	 
=
Ê	Ê	 $
transaccionRepositorio
Ê	Ê	 2
.
Ê	Ê	2 3F
8ObtenerTransaccionesAgrupadasPorSeriePorIntervaloDiario_
Ê	Ê	3 k
(
Ê	Ê	k l
idsPuntosDeVentas
Ê	Ê	l }
,
Ê	Ê	} ~
DiccionarioÊ	Ê	 ä
.Ê	Ê	ä ã>
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÊ	Ê	ã π
,Ê	Ê	π ∫
MaestroSettingsÊ	Ê	ª  
.Ê	Ê	  À
DefaultÊ	Ê	À “
.Ê	Ê	“ ”0
 IdDetalleMaestroEstadoInvalidadoÊ	Ê	” Û
,Ê	Ê	Û Ù

fechaDesdeÊ	Ê	ı ˇ
,Ê	Ê	ˇ Ä

fechaHastaÊ	Ê	Å ã
)Ê	Ê	ã å
.Ê	Ê	å ç
ToListÊ	Ê	ç ì
(Ê	Ê	ì î
)Ê	Ê	î ï
;Ê	Ê	ï ñ
return
Á	Á	 
	resultado
Á	Á	 
;
Á	Á	 
}
Ë	Ë	 	
public
Í	Í	 
List
Í	Í	 
<
Í	Í	 A
3TransaccionAgrupadoPorSerieConNumeracionConcatenada
Í	Í	 G
>
Í	Í	G H8
*ObtenerResumenDeComprobantePorSerieAnulada
Í	Í	I s
(
Í	Í	s t
int
Í	Í	t w
[
Í	Í	w x
]
Í	Í	x y 
idsPuntosDeVentasÍ	Í	z ã
,Í	Í	ã å
DateTimeÍ	Í	ç ï

fechaDesdeÍ	Í	ñ †
,Í	Í	† °
DateTimeÍ	Í	¢ ™

fechaHastaÍ	Í	´ µ
)Í	Í	µ ∂
{
Î	Î	 	
var
Ï	Ï	 
	resultado
Ï	Ï	 
=
Ï	Ï	 $
transaccionRepositorio
Ï	Ï	 2
.
Ï	Ï	2 33
%ObtenerTransaccionesAgrupadasPorSerie
Ï	Ï	3 X
(
Ï	Ï	X Y
idsPuntosDeVentas
Ï	Ï	Y j
,
Ï	Ï	j k!
TransaccionSettings
Ï	Ï	l 
.Ï	Ï	 Ä
DefaultÏ	Ï	Ä á
.Ï	Ï	á à-
IdTipoTransaccionOrdenDeVentaÏ	Ï	à •
,Ï	Ï	• ¶
MaestroSettingsÏ	Ï	ß ∂
.Ï	Ï	∂ ∑
DefaultÏ	Ï	∑ æ
.Ï	Ï	æ ø-
IdDetalleMaestroEstadoAnuladoÏ	Ï	ø ‹
,Ï	Ï	‹ ›

fechaDesdeÏ	Ï	ﬁ Ë
,Ï	Ï	Ë È

fechaHastaÏ	Ï	Í Ù
)Ï	Ï	Ù ı
.Ï	Ï	ı ˆ
ToListÏ	Ï	ˆ ¸
(Ï	Ï	¸ ˝
)Ï	Ï	˝ ˛
;Ï	Ï	˛ ˇ
return
Ì	Ì	 
	resultado
Ì	Ì	 
;
Ì	Ì	 
}
Ó	Ó	 	
public
Ú	Ú	 
List
Ú	Ú	 
<
Ú	Ú	 =
/TransaccionPorSerieDeComprobanteYConceptoBasico
Ú	Ú	 C
>
Ú	Ú	C DF
8ObtenerComprobanteVentaPorSerieYConceptoBasicoConfirmado
Ú	Ú	E }
(
Ú	Ú	} ~
intÚ	Ú	~ Å
[Ú	Ú	Å Ç
]Ú	Ú	Ç É!
idsPuntosDeVentasÚ	Ú	Ñ ï
,Ú	Ú	ï ñ
DateTimeÚ	Ú	ó ü

fechaDesdeÚ	Ú	† ™
,Ú	Ú	™ ´
DateTimeÚ	Ú	¨ ¥

fechaHastaÚ	Ú	µ ø
)Ú	Ú	ø ¿
{
Û	Û	 	
var
Ù	Ù	 
	resultado
Ù	Ù	 
=
Ù	Ù	 $
transaccionRepositorio
Ù	Ù	 2
.
Ù	Ù	2 3F
8ObtenerTransaccionesPorSerieDeComprobanteYConceptoBasico
Ù	Ù	3 k
(
Ù	Ù	k l
idsPuntosDeVentas
Ù	Ù	l }
,
Ù	Ù	} ~
DiccionarioÙ	Ù	 ä
.Ù	Ù	ä ãS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesÙ	Ù	ã Œ
,Ù	Ù	Œ œ
MaestroSettingsÙ	Ù	– ﬂ
.Ù	Ù	ﬂ ‡
DefaultÙ	Ù	‡ Á
.Ù	Ù	Á Ë0
 IdDetalleMaestroEstadoConfirmadoÙ	Ù	Ë à
,Ù	Ù	à â

fechaDesdeÙ	Ù	ä î
,Ù	Ù	î ï

fechaHastaÙ	Ù	ñ †
)Ù	Ù	† °
.Ù	Ù	° ¢
ToListÙ	Ù	¢ ®
(Ù	Ù	® ©
)Ù	Ù	© ™
;Ù	Ù	™ ´
foreach
ı	ı	 
(
ı	ı	 
var
ı	ı	 
item
ı	ı	 
in
ı	ı	  
	resultado
ı	ı	! *
.
ı	ı	* +
Where
ı	ı	+ 0
(
ı	ı	0 1
r
ı	ı	1 2
=>
ı	ı	3 5
r
ı	ı	6 7
.
ı	ı	7 8
IdTipoComprobante
ı	ı	8 I
==
ı	ı	J L
MaestroSettings
ı	ı	M \
.
ı	ı	\ ]
Default
ı	ı	] d
.
ı	ı	d e5
&IdDetalleMaestroComprobanteNotaCreditoı	ı	e ã
)ı	ı	ã å
)ı	ı	å ç
{
ˆ	ˆ	 
item
˜	˜	 
.
˜	˜	 
Cantidad
˜	˜	 
*=
˜	˜	  
-
˜	˜	! "
$num
˜	˜	" #
;
˜	˜	# $
item
¯	¯	 
.
¯	¯	 
Importe
¯	¯	 
*=
¯	¯	 
-
¯	¯	  !
$num
¯	¯	! "
;
¯	¯	" #
}
˘	˘	 
return
˚	˚	 
	resultado
˚	˚	 
;
˚	˚	 
}
¸	¸	 	
public
˛	˛	 
List
˛	˛	 
<
˛	˛	 =
/TransaccionPorSerieDeComprobanteYConceptoBasico
˛	˛	 C
>
˛	˛	C DA
3ObtenerComprobantePorSerieYConceptoBasicoInvalidado
˛	˛	E x
(
˛	˛	x y
int
˛	˛	y |
[
˛	˛	| }
]
˛	˛	} ~ 
idsPuntosDeVentas˛	˛	 ê
,˛	˛	ê ë
DateTime˛	˛	í ö

fechaDesde˛	˛	õ •
,˛	˛	• ¶
DateTime˛	˛	ß Ø

fechaHasta˛	˛	∞ ∫
)˛	˛	∫ ª
{
ˇ	ˇ	 	
var
Ä
Ä
 
	resultado
Ä
Ä
 
=
Ä
Ä
 $
transaccionRepositorio
Ä
Ä
 2
.
Ä
Ä
2 3F
8ObtenerTransaccionesPorSerieDeComprobanteYConceptoBasico
Ä
Ä
3 k
(
Ä
Ä
k l
idsPuntosDeVentas
Ä
Ä
l }
,
Ä
Ä
} ~
DiccionarioÄ
Ä
 ä
.Ä
Ä
ä ãS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesÄ
Ä
ã Œ
,Ä
Ä
Œ œ
MaestroSettingsÄ
Ä
– ﬂ
.Ä
Ä
ﬂ ‡
DefaultÄ
Ä
‡ Á
.Ä
Ä
Á Ë0
 IdDetalleMaestroEstadoInvalidadoÄ
Ä
Ë à
,Ä
Ä
à â

fechaDesdeÄ
Ä
ä î
,Ä
Ä
î ï

fechaHastaÄ
Ä
ñ †
)Ä
Ä
† °
.Ä
Ä
° ¢
ToListÄ
Ä
¢ ®
(Ä
Ä
® ©
)Ä
Ä
© ™
;Ä
Ä
™ ´
return
Å
Å
 
	resultado
Å
Å
 
;
Å
Å
 
}
Ç
Ç
 	
public
Ñ
Ñ
 
List
Ñ
Ñ
 
<
Ñ
Ñ
 =
/TransaccionPorSerieDeComprobanteYConceptoBasico
Ñ
Ñ
 C
>
Ñ
Ñ
C D>
0ObtenerComprobantePorSerieYConceptoBasicoAnulado
Ñ
Ñ
E u
(
Ñ
Ñ
u v
int
Ñ
Ñ
v y
[
Ñ
Ñ
y z
]
Ñ
Ñ
z { 
idsPuntosDeVentasÑ
Ñ
| ç
,Ñ
Ñ
ç é
DateTimeÑ
Ñ
è ó

fechaDesdeÑ
Ñ
ò ¢
,Ñ
Ñ
¢ £
DateTimeÑ
Ñ
§ ¨

fechaHastaÑ
Ñ
≠ ∑
)Ñ
Ñ
∑ ∏
{
Ö
Ö
 	
var
Ü
Ü
 
	resultado
Ü
Ü
 
=
Ü
Ü
 $
transaccionRepositorio
Ü
Ü
 2
.
Ü
Ü
2 3F
8ObtenerTransaccionesPorSerieDeComprobanteYConceptoBasico
Ü
Ü
3 k
(
Ü
Ü
k l
idsPuntosDeVentas
Ü
Ü
l }
,
Ü
Ü
} ~
DiccionarioÜ
Ü
 ä
.Ü
Ü
ä ãS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidacionesÜ
Ü
ã Œ
,Ü
Ü
Œ œ
MaestroSettingsÜ
Ü
– ﬂ
.Ü
Ü
ﬂ ‡
DefaultÜ
Ü
‡ Á
.Ü
Ü
Á Ë-
IdDetalleMaestroEstadoAnuladoÜ
Ü
Ë Ö
,Ü
Ü
Ö Ü

fechaDesdeÜ
Ü
á ë
,Ü
Ü
ë í

fechaHastaÜ
Ü
ì ù
)Ü
Ü
ù û
.Ü
Ü
û ü
ToListÜ
Ü
ü •
(Ü
Ü
• ¶
)Ü
Ü
¶ ß
;Ü
Ü
ß ®
return
á
á
 
	resultado
á
á
 
;
á
á
 
}
à
à
 	
public
ä
ä
 
List
ä
ä
 
<
ä
ä
 <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
ä
ä
 B
>
ä
ä
B CP
AObtenerReporteVentasConSerieYConceptoBasicoConfirmadaOTransmitidaä
ä
D Ö
(ä
ä
Ö Ü
intä
ä
Ü â

idEmpleadoä
ä
ä î
,ä
ä
î ï
intä
ä
ñ ô 
idCentroAtencionä
ä
ö ™
,ä
ä
™ ´
DateTimeä
ä
¨ ¥

fechaDesdeä
ä
µ ø
,ä
ä
ø ¿
DateTimeä
ä
¡ …

fechaHastaä
ä
  ‘
)ä
ä
‘ ’
{
ã
ã
 	
var
å
å
 
	resultado
å
å
 
=
å
å
 $
transaccionRepositorio
å
å
 2
.
å
å
2 3?
1ObtenerResumenTransaccionesPorSerieYConeptoBasico
å
å
3 d
(
å
å
d e!
TransaccionSettings
å
å
e x
.
å
å
x y
Defaultå
å
y Ä
.å
å
Ä Å-
IdTipoTransaccionOrdenDeVentaå
å
Å û
,å
å
û ü
MaestroSettingså
å
† Ø
.å
å
Ø ∞
Defaultå
å
∞ ∑
.å
å
∑ ∏0
 IdDetalleMaestroEstadoConfirmadoå
å
∏ ÿ
,å
å
ÿ Ÿ

fechaDesdeå
å
⁄ ‰
,å
å
‰ Â

fechaHastaå
å
Ê 
)å
å
 Ò
.å
å
Ò Ú
ToListå
å
Ú ¯
(å
å
¯ ˘
)å
å
˘ ˙
;å
å
˙ ˚
return
é
é
 
	resultado
é
é
 
;
é
é
 
}
è
è
 	
public
ë
ë
 
List
ë
ë
 
<
ë
ë
 <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
ë
ë
 B
>
ë
ë
B CR
CObtenerReporteVentasConSerieYConceptoBasicoConfirmadasYTransmitidasë
ë
D á
(ë
ë
á à
intë
ë
à ã 
idCentroAtencionë
ë
å ú
,ë
ë
ú ù
DateTimeë
ë
û ¶

fechaDesdeë
ë
ß ±
,ë
ë
± ≤
DateTimeë
ë
≥ ª

fechaHastaë
ë
º ∆
)ë
ë
∆ «
{
í
í
 	
var
ì
ì
 
	resultado
ì
ì
 
=
ì
ì
 $
transaccionRepositorio
ì
ì
 2
.
ì
ì
2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ì
ì
3 t
(
ì
ì
t u
idCentroAtencionì
ì
u Ö
,ì
ì
Ö Ü#
TransaccionSettingsì
ì
á ö
.ì
ì
ö õ
Defaultì
ì
õ ¢
.ì
ì
¢ £-
IdTipoTransaccionOrdenDeVentaì
ì
£ ¿
,ì
ì
¿ ¡

fechaDesdeì
ì
¬ Ã
,ì
ì
Ã Õ

fechaHastaì
ì
Œ ÿ
,ì
ì
ÿ Ÿ
MaestroSettingsì
ì
⁄ È
.ì
ì
È Í
Defaultì
ì
Í Ò
.ì
ì
Ò Ú0
 IdDetalleMaestroEstadoConfirmadoì
ì
Ú í
)ì
ì
í ì
.ì
ì
ì î
ToListì
ì
î ö
(ì
ì
ö õ
)ì
ì
õ ú
;ì
ì
ú ù
return
î
î
 
	resultado
î
î
 
;
î
î
 
}
ï
ï
 	
public
ñ
ñ
 
List
ñ
ñ
 
<
ñ
ñ
 <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
ñ
ñ
 B
>
ñ
ñ
B CD
6ObtenerReporteVentasConSerieYConceptoBasicoInvalidadas
ñ
ñ
D z
(
ñ
ñ
z {
int
ñ
ñ
{ ~
idCentroAtencionñ
ñ
 è
,ñ
ñ
è ê
DateTimeñ
ñ
ë ô

fechaDesdeñ
ñ
ö §
,ñ
ñ
§ •
DateTimeñ
ñ
¶ Æ

fechaHastañ
ñ
Ø π
)ñ
ñ
π ∫
{
ó
ó
 	
var
ò
ò
 
	resultado
ò
ò
 
=
ò
ò
 $
transaccionRepositorio
ò
ò
 2
.
ò
ò
2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ò
ò
3 t
(
ò
ò
t u
idCentroAtencionò
ò
u Ö
,ò
ò
Ö Ü#
TransaccionSettingsò
ò
á ö
.ò
ò
ö õ
Defaultò
ò
õ ¢
.ò
ò
¢ £-
IdTipoTransaccionOrdenDeVentaò
ò
£ ¿
,ò
ò
¿ ¡

fechaDesdeò
ò
¬ Ã
,ò
ò
Ã Õ

fechaHastaò
ò
Œ ÿ
,ò
ò
ÿ Ÿ
MaestroSettingsò
ò
⁄ È
.ò
ò
È Í
Defaultò
ò
Í Ò
.ò
ò
Ò Ú0
 IdDetalleMaestroEstadoInvalidadoò
ò
Ú í
)ò
ò
í ì
.ò
ò
ì î
ToListò
ò
î ö
(ò
ò
ö õ
)ò
ò
õ ú
;ò
ò
ú ù
return
ô
ô
 
	resultado
ô
ô
 
;
ô
ô
 
}
ö
ö
 	
public
õ
õ
 
List
õ
õ
 
<
õ
õ
 <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
õ
õ
 B
>
õ
õ
B CA
3ObtenerReporteVentasConSerieYConceptoBasicoAnuladas
õ
õ
D w
(
õ
õ
w x
int
õ
õ
x {
idCentroAtencionõ
õ
| å
,õ
õ
å ç
DateTimeõ
õ
é ñ

fechaDesdeõ
õ
ó °
,õ
õ
° ¢
DateTimeõ
õ
£ ´

fechaHastaõ
õ
¨ ∂
)õ
õ
∂ ∑
{
ú
ú
 	
var
ù
ù
 
	resultado
ù
ù
 
=
ù
ù
 $
transaccionRepositorio
ù
ù
 2
.
ù
ù
2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ù
ù
3 t
(
ù
ù
t u
idCentroAtencionù
ù
u Ö
,ù
ù
Ö Ü#
TransaccionSettingsù
ù
á ö
.ù
ù
ö õ
Defaultù
ù
õ ¢
.ù
ù
¢ £-
IdTipoTransaccionOrdenDeVentaù
ù
£ ¿
,ù
ù
¿ ¡
MaestroSettingsù
ù
¬ —
.ù
ù
— “
Defaultù
ù
“ Ÿ
.ù
ù
Ÿ ⁄-
IdDetalleMaestroEstadoAnuladoù
ù
⁄ ˜
,ù
ù
˜ ¯

fechaDesdeù
ù
˘ É
,ù
ù
É Ñ

fechaHastaù
ù
Ö è
)ù
ù
è ê
.ù
ù
ê ë
ToListù
ù
ë ó
(ù
ù
ó ò
)ù
ù
ò ô
;ù
ù
ô ö
return
û
û
 
	resultado
û
û
 
;
û
û
 
}
ü
ü
 	
public
°
°
 
List
°
°
 
<
°
°
 -
Resumen_Transaccion_Consolidado
°
°
 3
>
°
°
3 47
)ObtenerReporteVentaCompraPagoCobroYGastos
°
°
5 ^
(
°
°
^ _
DateTime
°
°
_ g

fechaDesde
°
°
h r
,
°
°
r s
DateTime
°
°
t |

fechaHasta°
°
} á
)°
°
á à
{
¢
¢
 	
int
£
£
 
[
£
£
 
]
£
£
 
idsTransaccion
£
£
  
=
£
£
! "
{
£
£
# $!
TransaccionSettings
§
§
 #
.
§
§
# $
Default
§
§
$ +
.
§
§
+ ,7
)IdTipoTransaccionCobranzaFacturasClientes
§
§
, U
,
§
§
U V!
TransaccionSettings
•
•
 #
.
•
•
# $
Default
•
•
$ +
.
•
•
+ ,6
(IdTipoTransaccionPagoFacturasProveedores
•
•
, T
,
•
•
T U!
TransaccionSettings
¶
¶
 #
.
¶
¶
# $
Default
¶
¶
$ +
.
¶
¶
+ ,/
!IdTipoTransaccionPagoDePagoVarios
¶
¶
, M
,
¶
¶
M N!
TransaccionSettings
ß
ß
 #
.
ß
ß
# $
Default
ß
ß
$ +
.
ß
ß
+ ,1
#IdTipoTransaccionCobroDeCobroVarios
ß
ß
, O
,
ß
ß
O P!
TransaccionSettings
®
®
 #
.
®
®
# $
Default
®
®
$ +
.
®
®
+ ,2
$IdTipoTransaccionPagoGastoFinanciero
®
®
, P
,
®
®
P Q!
TransaccionSettings
©
©
 #
.
©
©
# $
Default
©
©
$ +
.
©
©
+ ,3
%IdTipoTransaccionPagoGastoPorTributos
©
©
, Q
,
©
©
Q R!
TransaccionSettings
™
™
 #
.
™
™
# $
Default
™
™
$ +
.
™
™
+ ,9
+IdTipoTransaccionPagoGastoServiciosTerceros
™
™
, W
,
™
™
W X!
TransaccionSettings
´
´
 #
.
´
´
# $
Default
´
´
$ +
.
´
´
+ ,5
'IdTipoTransaccionPagoOtrosGastosGestion
´
´
, S
}
¨
¨
 
;
¨
¨
 
var
Æ
Æ
 
	resultado
Æ
Æ
 
=
Æ
Æ
 $
transaccionRepositorio
Æ
Æ
 2
.
Æ
Æ
2 3)
ObtenerResumenTransacciones
Æ
Æ
3 N
(
Æ
Æ
N O
idsTransaccion
Æ
Æ
O ]
,
Æ
Æ
] ^
MaestroSettings
Æ
Æ
_ n
.
Æ
Æ
n o
Default
Æ
Æ
o v
.
Æ
Æ
v w/
 IdDetalleMaestroEstadoConfirmadoÆ
Æ
w ó
,Æ
Æ
ó ò

fechaDesdeÆ
Æ
ô £
,Æ
Æ
£ §

fechaHastaÆ
Æ
• Ø
,Æ
Æ
Ø ∞#
TransaccionSettingsÆ
Æ
± ƒ
.Æ
Æ
ƒ ≈
DefaultÆ
Æ
≈ Ã
.Æ
Æ
Ã Õ1
!IdAccionDeNegocioMovimientoEnCajaÆ
Æ
Õ Ó
)Æ
Æ
Ó Ô
.Æ
Æ
Ô 
ToListÆ
Æ
 ˆ
(Æ
Æ
ˆ ˜
)Æ
Æ
˜ ¯
;Æ
Æ
¯ ˘
return
Ø
Ø
 
	resultado
Ø
Ø
 
;
Ø
Ø
 
}
∞
∞
 	
public
≤
≤
 
List
≤
≤
 
<
≤
≤
 
Cuota
≤
≤
 
>
≤
≤
 ,
ObtenerReporteDeudasAProveedor
≤
≤
 9
(
≤
≤
9 :
)
≤
≤
: ;
{
≥
≥
 	
var
¥
¥
 
porPagar
¥
¥
 
=
¥
¥
 $
transaccionRepositorio
¥
¥
 1
.
¥
¥
1 2#
ObtenerCuotasConSaldo
¥
¥
2 G
(
¥
¥
G H
false
¥
¥
H M
,
¥
¥
M N
Diccionario
¥
¥
O Z
.
¥
¥
Z [>
/TiposDeTransaccionOrdenesDeOperacionesDeCompras¥
¥
[ ä
)¥
¥
ä ã
.¥
¥
ã å
ToList¥
¥
å í
(¥
¥
í ì
)¥
¥
ì î
;¥
¥
î ï
var
∂
∂
 
	porCobrar
∂
∂
 
=
∂
∂
 $
transaccionRepositorio
∂
∂
 2
.
∂
∂
2 3#
ObtenerCuotasConSaldo
∂
∂
3 H
(
∂
∂
H I
true
∂
∂
I M
,
∂
∂
M N
Diccionario
∂
∂
O Z
.
∂
∂
Z [>
/TiposDeTransaccionOrdenesDeOperacionesDeCompras∂
∂
[ ä
)∂
∂
ä ã
.∂
∂
ã å
ToList∂
∂
å í
(∂
∂
í ì
)∂
∂
ì î
;∂
∂
î ï
return
∏
∏
 
porPagar
∏
∏
 
.
∏
∏
 
Union
∏
∏
 !
(
∏
∏
! "
	porCobrar
∏
∏
" +
)
∏
∏
+ ,
.
∏
∏
, -
ToList
∏
∏
- 3
(
∏
∏
3 4
)
∏
∏
4 5
;
∏
∏
5 6
}
π
π
 	
public
¡
¡
 
List
¡
¡
 
<
¡
¡
 
Cuota
¡
¡
 
>
¡
¡
 +
ObtenerReporteDeudasDeCliente
¡
¡
 8
(
¡
¡
8 9
)
¡
¡
9 :
{
¬
¬
 	
try
√
√
 
{
ƒ
ƒ
 
var
≈
≈
 
porPagar
≈
≈
 
=
≈
≈
 $
transaccionRepositorio
≈
≈
 5
.
≈
≈
5 6#
ObtenerCuotasConSaldo
≈
≈
6 K
(
≈
≈
K L
false
≈
≈
L Q
,
≈
≈
Q R
Diccionario
≈
≈
S ^
.
≈
≈
^ _=
.TiposDeTransaccionOrdenesDeOperacionesDeVentas≈
≈
_ ç
)≈
≈
ç é
.≈
≈
é è
ToList≈
≈
è ï
(≈
≈
ï ñ
)≈
≈
ñ ó
;≈
≈
ó ò
var
«
«
 
	porCobrar
«
«
 
=
«
«
 $
transaccionRepositorio
«
«
  6
.
«
«
6 7#
ObtenerCuotasConSaldo
«
«
7 L
(
«
«
L M
true
«
«
M Q
,
«
«
Q R
Diccionario
«
«
S ^
.
«
«
^ _=
.TiposDeTransaccionOrdenesDeOperacionesDeVentas«
«
_ ç
)«
«
ç é
.«
«
é è
ToList«
«
è ï
(«
«
ï ñ
)«
«
ñ ó
;«
«
ó ò
return
 
 
 
	porCobrar
 
 
  
.
 
 
  !
Union
 
 
! &
(
 
 
& '
porPagar
 
 
' /
)
 
 
/ 0
.
 
 
0 1
ToList
 
 
1 7
(
 
 
7 8
)
 
 
8 9
;
 
 
9 :
}
Ã
Ã
 
catch
Õ
Õ
 
(
Õ
Õ
 
	Exception
Õ
Õ
 
e
Õ
Õ
 
)
Õ
Õ
 
{
Œ
Œ
 
throw
œ
œ
 
new
œ
œ
 
LogicaException
œ
œ
 )
(
œ
œ
) *
$str
œ
œ
* N
,
œ
œ
N O
e
œ
œ
P Q
)
œ
œ
Q R
;
œ
œ
R S
}
–
–
 
}
“
“
 	
public
Ÿ
Ÿ
 
List
Ÿ
Ÿ
 
<
Ÿ
Ÿ
 
OrdenDeVenta
Ÿ
Ÿ
  
>
Ÿ
Ÿ
  !#
ObtenerOrdenesDeVenta
Ÿ
Ÿ
" 7
(
Ÿ
Ÿ
7 8
long
Ÿ
Ÿ
8 <
[
Ÿ
Ÿ
< =
]
Ÿ
Ÿ
= >$
idsOperacionesDeVentas
Ÿ
Ÿ
? U
)
Ÿ
Ÿ
U V
{
⁄
⁄
 	
try
€
€
 
{
‹
‹
 
int
›
›
 $
idTipoTransaccionVenta
›
›
 *
=
›
›
+ ,!
TransaccionSettings
›
›
- @
.
›
›
@ A
Default
›
›
A H
.
›
›
H I+
IdTipoTransaccionOrdenDeVenta
›
›
I f
;
›
›
f g
return
ﬁ
ﬁ
 
OrdenDeVenta
ﬁ
ﬁ
 #
.
ﬁ
ﬁ
# $
Convert_
ﬁ
ﬁ
$ ,
(
ﬁ
ﬁ
, -$
transaccionRepositorio
ﬁ
ﬁ
- C
.
ﬁ
ﬁ
C D"
ObtenerTransacciones
ﬁ
ﬁ
D X
(
ﬁ
ﬁ
X Y$
idsOperacionesDeVentas
ﬁ
ﬁ
Y o
,
ﬁ
ﬁ
o p%
idTipoTransaccionVentaﬁ
ﬁ
q á
)ﬁ
ﬁ
á à
.ﬁ
ﬁ
à â
ToListﬁ
ﬁ
â è
(ﬁ
ﬁ
è ê
)ﬁ
ﬁ
ê ë
)ﬁ
ﬁ
ë í
;ﬁ
ﬁ
í ì
}
ﬂ
ﬂ
 
catch
‡
‡
 
(
‡
‡
 
	Exception
‡
‡
 
e
‡
‡
 
)
‡
‡
 
{
·
·
 
throw
‚
‚
 
new
‚
‚
 
LogicaException
‚
‚
 )
(
‚
‚
) *
$str
‚
‚
* M
,
‚
‚
M N
e
‚
‚
O P
)
‚
‚
P Q
;
‚
‚
Q R
}
‰
‰
 
}
Â
Â
 	
public
Á
Á
 
OrdenDeVenta
Á
Á
 !
ObtenerOrdenDeVenta
Á
Á
 /
(
Á
Á
/ 0
long
Á
Á
0 4
idOrdenVenta
Á
Á
5 A
)
Á
Á
A B
{
Ë
Ë
 	
try
È
È
 
{
Í
Í
 
return
Î
Î
 
(
Î
Î
 
new
Î
Î
 
OrdenDeVenta
Î
Î
 (
(
Î
Î
( )$
transaccionRepositorio
Î
Î
) ?
.
Î
Î
? @Z
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccionÎ
Î
@ ã
(Î
Î
ã å
idOrdenVentaÎ
Î
å ò
)Î
Î
ò ô
)Î
Î
ô ö
)Î
Î
ö õ
;Î
Î
õ ú
}
Ï
Ï
 
catch
Ì
Ì
 
(
Ì
Ì
 
	Exception
Ì
Ì
 
e
Ì
Ì
 
)
Ì
Ì
 
{
Ó
Ó
 
throw
Ô
Ô
 
new
Ô
Ô
 
LogicaException
Ô
Ô
 )
(
Ô
Ô
) *
$str
Ô
Ô
* M
,
Ô
Ô
M N
e
Ô
Ô
O P
)
Ô
Ô
P Q
;
Ô
Ô
Q R
}


 
}
Ò
Ò
 	
public
Û
Û
 
OrdenDeVenta
Û
Û
 4
&ObtenerOrdenDeVentaConsultaComprobante
Û
Û
 B
(
Û
Û
B C*
ConsultaComprobanteParameter
Û
Û
C _!
consultaComprobante
Û
Û
` s
)
Û
Û
s t
{
Ù
Ù
 	
try
ı
ı
 
{
ˆ
ˆ
 
return
˜
˜
 
(
˜
˜
 
new
˜
˜
 
OrdenDeVenta
˜
˜
 (
(
˜
˜
( )$
transaccionRepositorio
˜
˜
) ?
.
˜
˜
? @m
^ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccionConsultaComprobante˜
˜
@ û
(˜
˜
û ü#
consultaComprobante˜
˜
ü ≤
)˜
˜
≤ ≥
)˜
˜
≥ ¥
)˜
˜
¥ µ
;˜
˜
µ ∂
}
¯
¯
 
catch
˘
˘
 
(
˘
˘
 
	Exception
˘
˘
 
e
˘
˘
 
)
˘
˘
 
{
˙
˙
 
throw
˚
˚
 
new
˚
˚
 
LogicaException
˚
˚
 )
(
˚
˚
) *
$str
˚
˚
* M
,
˚
˚
M N
e
˚
˚
O P
)
˚
˚
P Q
;
˚
˚
Q R
}
¸
¸
 
}
˝
˝
 	
public
ÑÑ 
OrdenDeVenta
ÑÑ -
ObtenerOrdenDeVentaParaImprimir
ÑÑ ;
(
ÑÑ; <
OrdenDeVenta
ÑÑ< H
ordenDeVenta
ÑÑI U
)
ÑÑU V
{
ÖÖ 	
try
ÜÜ 
{
áá 
int
çç 
[
çç 
]
çç 
idsActoresNegocio
çç '
=
çç( )
{
çç* +
ordenDeVenta
çç, 8
.
çç8 9
Transaccion
çç9 D
(
ççD E
)
ççE F
.
ççF G&
id_actor_negocio_interno
ççG _
}
çç` a
;
çça b
List
éé 
<
éé 
Actor_negocio
éé "
>
éé" #
actoresDeNegocio
éé$ 4
=
éé5 6
actorRepositorio
éé7 G
.
ééG H%
ObtenerActoresDeNegocio
ééH _
(
éé_ `
idsActoresNegocio
éé` q
)
ééq r
.
éér s
ToList
éés y
(
ééy z
)
ééz {
;
éé{ |
ordenDeVenta
ëë 
.
ëë 
Transaccion
ëë (
(
ëë( )
)
ëë) *
.
ëë* +
Actor_negocio2
ëë+ 9
=
ëë: ;
actoresDeNegocio
ëë< L
.
ëëL M
Single
ëëM S
(
ëëS T
an
ëëT V
=>
ëëW Y
an
ëëZ \
.
ëë\ ]
id
ëë] _
==
ëë` b
ordenDeVenta
ëëc o
.
ëëo p
Transaccion
ëëp {
(
ëë{ |
)
ëë| }
.
ëë} ~'
id_actor_negocio_internoëë~ ñ
)ëëñ ó
;ëëó ò
return
òò 
ordenDeVenta
òò #
;
òò# $
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
$str
úú* M
,
úúM N
e
úúO P
)
úúP Q
;
úúQ R
}
ùù 
}
ûû 	
public
†† 
List
†† 
<
†† !
MovimientoDeAlmacen
†† '
>
††' (.
 ObtenerSalidaDeMercaderiaDeVenta
††) I
(
††I J
long
††J N
idVenta
††O V
)
††V W
{
°° 	
try
¢¢ 
{
££ 
return
§§ !
MovimientoDeAlmacen
§§ *
.
§§* +
	Convertir
§§+ 4
(
§§4 5$
transaccionRepositorio
§§5 K
.
§§K L\
MObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccion§§L ô
(§§ô ö
idVenta§§ö °
,§§° ¢#
TransaccionSettings§§£ ∂
.§§∂ ∑
Default§§∑ æ
.§§æ ø5
%IdTipoTransaccionSalidaBienesPorVenta§§ø ‰
)§§‰ Â
.§§Â Ê
Where§§Ê Î
(§§Î Ï
t§§Ï Ì
=>§§Ó 
t§§Ò Ú
.§§Ú Û 
id_estado_actual§§Û É
==§§Ñ Ü
MaestroSettings§§á ñ
.§§ñ ó
Default§§ó û
.§§û ü0
 IdDetalleMaestroEstadoConfirmado§§ü ø
)§§ø ¿
.§§¿ ¡
ToList§§¡ «
(§§« »
)§§» …
)§§…  
;§§  À
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* M
,
®®M N
e
®®O P
)
®®P Q
;
®®Q R
}
©© 
}
™™ 	
public
¨¨ !
MovimientoDeAlmacen
¨¨ "+
ObtenerMovimientoDeMercaderia
¨¨# @
(
¨¨@ A
long
¨¨A E
idMovimiento
¨¨F R
)
¨¨R S
{
≠≠ 	
try
ÆÆ 
{
ØØ 
return
∞∞ 
(
∞∞ 
new
∞∞ !
MovimientoDeAlmacen
∞∞ /
(
∞∞/ 0$
transaccionRepositorio
∞∞0 F
.
∞∞F GZ
KObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccion∞∞G í
(∞∞í ì
idMovimiento∞∞ì ü
)∞∞ü †
)∞∞† °
)∞∞° ¢
;∞∞¢ £
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
e
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ 
LogicaException
¥¥ )
(
¥¥) *
$str
¥¥* Q
,
¥¥Q R
e
¥¥S T
)
¥¥T U
;
¥¥U V
}
µµ 
}
∂∂ 	
public
∏∏ 
List
∏∏ 
<
∏∏ 
long
∏∏ 
>
∏∏ 2
$ObtenerIdsGuiaRemisionPorEnviarSunat
∏∏ >
(
∏∏> ?
DateTime
∏∏? G

fechaDesde
∏∏H R
,
∏∏R S
DateTime
∏∏T \

fechaHasta
∏∏] g
)
∏∏g h
{
ππ 	
try
∫∫ 
{
ªª 
return
ºº $
transaccionRepositorio
ºº -
.
ºº- .-
ObtenerIdsGuiaRemisionPorEnviar
ºº. M
(
ººM N

fechaDesde
ººN X
,
ººX Y

fechaHasta
ººZ d
)
ººd e
.
ººe f
ToList
ººf l
(
ººl m
)
ººm n
;
ººn o
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
øø 
throw
¿¿ 
new
¿¿ 
LogicaException
¿¿ )
(
¿¿) *
$str
¿¿* b
,
¿¿b c
e
¿¿d e
)
¿¿e f
;
¿¿f g
}
¡¡ 
}
¬¬ 	
public
»» 
long
»» #
obtenerIdOrdenDeVenta
»» )
(
»») *
long
»»* .
idOperacionVenta
»»/ ?
)
»»? @
{
…… 	
try
   
{
ÀÀ 
long
ÃÃ (
idTipoTransaccionOperacion
ÃÃ /
=
ÃÃ0 1$
transaccionRepositorio
ÃÃ2 H
.
ÃÃH I&
ObtenerIdTipoTransaccion
ÃÃI a
(
ÃÃa b
idOperacionVenta
ÃÃb r
)
ÃÃr s
;
ÃÃs t
int
ÕÕ /
!idTipoTransaccionOrdenDeOperacion
ÕÕ 5
=
ÕÕ6 7(
idTipoTransaccionOperacion
ÕÕ8 R
==
ÕÕS U!
TransaccionSettings
ÕÕV i
.
ÕÕi j
Default
ÕÕj q
.
ÕÕq r%
IdTipoTransaccionVentaÕÕr à
?ÕÕâ ä!
TransaccionSettings
ŒŒ '
.
ŒŒ' (
Default
ŒŒ( /
.
ŒŒ/ 0+
IdTipoTransaccionOrdenDeVenta
ŒŒ0 M
:
ŒŒN O
(
œœ /
!idTipoTransaccionOrdenDeOperacion
œœ 6
=
œœ7 8(
idTipoTransaccionOperacion
œœ9 S
==
œœT V!
TransaccionSettings
œœW j
.
œœj k
Default
œœk r
.
œœr s0
!IdTipoTransaccionAnulacionDeVentaœœs î
?œœï ñ#
TransaccionSettingsœœó ™
.œœ™ ´
Defaultœœ´ ≤
.œœ≤ ≥8
(IdTipoTransaccionOrdenDeAnulacionDeVentaœœ≥ €
:œœ‹ ›
(
–– (
idTipoTransaccionOperacion
–– /
==
––0 2!
TransaccionSettings
––3 F
.
––F G
Default
––G N
.
––N O2
$IdTipoTransaccionInvalidacionDeVenta
––O s
?
––t u!
TransaccionSettings
—— '
.
——' (
Default
——( /
.
——/ 09
+IdTipoTransaccionOrdenDeInvalidacionDeVenta
——0 [
:
——\ ]
(
““ (
idTipoTransaccionOperacion
““ /
==
““0 2!
TransaccionSettings
““3 F
.
““F G
Default
““G N
.
““N O=
/IdTipoTransaccionInvalidacionDeAnulacionDeVenta
““O ~
?““ Ä!
TransaccionSettings
”” '
.
””' (
Default
””( /
.
””/ 0B
4IdTipoTransaccionOrdenInvalidacionDeAnulacionDeVenta
””0 d
:
””e f
$num
””g h
)
””h i
)
””i j
)
””j k
;
””k l
return
’’ $
transaccionRepositorio
’’ -
.
’’- .'
ObtenerUnicoIdTransaccion
’’. G
(
’’G H
idOperacionVenta
’’H X
,
’’X Y/
!idTipoTransaccionOrdenDeOperacion
’’Z {
)
’’{ |
;
’’| }
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
LogicaException
ŸŸ )
(
ŸŸ) *
$str
ŸŸ* Q
,
ŸŸQ R
e
ŸŸS T
)
ŸŸT U
;
ŸŸU V
}
⁄⁄ 
}
€€ 	
public
·· 
long
·· #
ObtenerIdOrdenDeVenta
·· )
(
··) *
long
··* .
idVenta
··/ 6
)
··6 7
{
‚‚ 	
try
„„ 
{
‰‰ 
return
ÂÂ $
transaccionRepositorio
ÂÂ -
.
ÂÂ- .'
ObtenerUnicoIdTransaccion
ÂÂ. G
(
ÂÂG H
idVenta
ÂÂH O
,
ÂÂO P!
TransaccionSettings
ÂÂQ d
.
ÂÂd e
Default
ÂÂe l
.
ÂÂl m,
IdTipoTransaccionOrdenDeVentaÂÂm ä
,ÂÂä ã
MaestroSettingsÂÂå õ
.ÂÂõ ú
DefaultÂÂú £
.ÂÂ£ §0
 IdDetalleMaestroEstadoConfirmadoÂÂ§ ƒ
)ÂÂƒ ≈
;ÂÂ≈ ∆
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
e
ÁÁ 
)
ÁÁ 
{
ËË 
throw
ÈÈ 
new
ÈÈ 
LogicaException
ÈÈ )
(
ÈÈ) *
$str
ÈÈ* Q
,
ÈÈQ R
e
ÈÈS T
)
ÈÈT U
;
ÈÈU V
}
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
OrdenDeVenta
ÌÌ +
ObtenerOrdenDeVentaConIdOrden
ÌÌ 9
(
ÌÌ9 :
long
ÌÌ: >
data
ÌÌ? C
)
ÌÌC D
{
ÓÓ 	
try
ÔÔ 
{
 
return
ÒÒ 
(
ÒÒ 
new
ÒÒ 
OrdenDeVenta
ÒÒ (
(
ÒÒ( )$
transaccionRepositorio
ÒÒ) ?
.
ÒÒ? @F
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado
ÒÒ@ x
(
ÒÒx y
data
ÒÒy }
)
ÒÒ} ~
)
ÒÒ~ 
)ÒÒ Ä
;ÒÒÄ Å
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* K
,
ııK L
e
ııM N
)
ııN O
;
ııO P
}
ˆˆ 
}
˜˜ 	
public
¯¯ 
async
¯¯ 
Task
¯¯ 
<
¯¯ 
List
¯¯ 
<
¯¯ 
Detalle_maestro
¯¯ .
>
¯¯. /
>
¯¯/ 0&
ObtenerMediosDePagoVenta
¯¯1 I
(
¯¯I J
)
¯¯J K
{
˘˘ 	
try
˙˙ 
{
˚˚ 
List
¸¸ 
<
¸¸ 
int
¸¸ 
>
¸¸ 
	idsMedios
¸¸ #
=
¸¸$ %
new
¸¸& )
List
¸¸* .
<
¸¸. /
int
¸¸/ 2
>
¸¸2 3
(
¸¸3 4
)
¸¸4 5
;
¸¸5 6
var
˝˝ 
mascara
˝˝ 
=
˝˝ 
VentasSettings
˝˝ ,
.
˝˝, -
Default
˝˝- 4
.
˝˝4 51
#MascaraMediosDePagoAMostrarEnVentas
˝˝5 X
.
˝˝X Y
ToCharArray
˝˝Y d
(
˝˝d e
)
˝˝e f
;
˝˝f g
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛  !
<
˛˛" #
mascara
˛˛$ +
.
˛˛+ ,
Count
˛˛, 1
(
˛˛1 2
)
˛˛2 3
;
˛˛3 4
i
˛˛5 6
++
˛˛6 8
)
˛˛8 9
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
mascara
ÄÄ 
[
ÄÄ  
i
ÄÄ  !
]
ÄÄ! "
==
ÄÄ# %
$char
ÄÄ& )
)
ÄÄ) *
{
ÅÅ 
	idsMedios
ÇÇ !
.
ÇÇ! "
Add
ÇÇ" %
(
ÇÇ% &
Diccionario
ÇÇ& 1
.
ÇÇ1 25
'ValoresMascaraMedioPagoAMostrarEnVentas
ÇÇ2 Y
.
ÇÇY Z
Single
ÇÇZ `
(
ÇÇ` a
v
ÇÇa b
=>
ÇÇc e
v
ÇÇf g
.
ÇÇg h
Key
ÇÇh k
==
ÇÇl n
i
ÇÇo p
)
ÇÇp q
.
ÇÇq r
Value
ÇÇr w
)
ÇÇw x
;
ÇÇx y
}
ÉÉ 
}
ÑÑ 
return
ÖÖ 
(
ÖÖ 
await
ÖÖ  
maestroRepositorio
ÖÖ 0
.
ÖÖ0 1(
ObtenerDetallesEspecificos
ÖÖ1 K
(
ÖÖK L
	idsMedios
ÖÖL U
.
ÖÖU V
ToArray
ÖÖV ]
(
ÖÖ] ^
)
ÖÖ^ _
)
ÖÖ_ `
)
ÖÖ` a
.
ÖÖa b
ToList
ÖÖb h
(
ÖÖh i
)
ÖÖi j
;
ÖÖj k
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
new
ââ 
LogicaException
ââ )
(
ââ) *
$str
ââ* V
,
ââV W
e
ââX Y
)
ââY Z
;
ââZ [
}
ää 
}
ãã 	
public
èè 
List
èè 
<
èè 
OrdenDeVenta
èè  
>
èè  !&
ObtenerOrdenesDeVentaHoy
èè" :
(
èè: ;
int
èè; >

IdEmpleado
èè? I
)
èèI J
{
êê 	
try
ëë 
{
íí 
DateTime
ìì 
fechaActual
ìì $
=
ìì% &
DateTimeUtil
ìì' 3
.
ìì3 4
FechaActual
ìì4 ?
(
ìì? @
)
ìì@ A
;
ììA B
return
îî 
OrdenDeVenta
îî #
.
îî# $
Convert_
îî$ ,
(
îî, -$
transaccionRepositorio
îî- C
.
îîC DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
îîD ~
(
îî~ "
TransaccionSettingsîî í
.îîí ì
Defaultîîì ö
.îîö õ-
IdTipoTransaccionOrdenDeVentaîîõ ∏
,îî∏ π
fechaActualîî∫ ≈
.îî≈ ∆
Dateîî∆  
,îî  À
fechaActualîîÃ ◊
.îî◊ ÿ
Dateîîÿ ‹
.îî‹ ›
AddDaysîî› ‰
(îî‰ Â
$numîîÂ Ê
)îîÊ Á
)îîÁ Ë
.îîË È
ToListîîÈ Ô
(îîÔ 
)îî Ò
)îîÒ Ú
;îîÚ Û
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* `
,
òò` a
e
òòb c
)
òòc d
;
òòd e
}
ôô 
}
öö 	
public
®® 
List
®® 
<
®® 
DateTime
®® 
>
®® ?
1ObtenerFechaIncioyFinParaReporteVentaPuntoDeVenta
®® O
(
®®O P
)
®®P Q
{
©© 	
DateTime
™™ 
fechaActual
™™  
=
™™! "
DateTimeUtil
™™# /
.
™™/ 0
FechaActual
™™0 ;
(
™™; <
)
™™< =
;
™™= >
DateTime
´´ 

fechaDesde
´´ 
=
´´  !
fechaActual
´´" -
;
´´- .
DateTime
¨¨ 

fechaHasta
¨¨ 
=
¨¨  !

fechaDesde
¨¨" ,
.
¨¨, -
Date
¨¨- 1
.
¨¨1 2
AddDays
¨¨2 9
(
¨¨9 :
$num
¨¨: ;
)
¨¨; <
.
¨¨< =
AddMilliseconds
¨¨= L
(
¨¨L M
-
¨¨M N
$num
¨¨N O
)
¨¨O P
;
¨¨P Q
if
ÆÆ 
(
ÆÆ  
AplicacionSettings
ÆÆ "
.
ÆÆ" #
Default
ÆÆ# *
.
ÆÆ* +:
,AplicarIntervaloAtencionEnReporteVentaDiario
ÆÆ+ W
)
ÆÆW X
{
ØØ 
string
∞∞ 
[
∞∞ 
]
∞∞ 
inicio
∞∞ 
=
∞∞  ! 
AplicacionSettings
∞∞" 4
.
∞∞4 5
Default
∞∞5 <
.
∞∞< =)
HoraInicioIntervaloAtencion
∞∞= X
.
∞∞X Y
Split
∞∞Y ^
(
∞∞^ _
$char
∞∞_ b
)
∞∞b c
;
∞∞c d
string
±± 
[
±± 
]
±± 
fin
±± 
=
±±  
AplicacionSettings
±± 1
.
±±1 2
Default
±±2 9
.
±±9 :&
HoraFinIntervaloAtencion
±±: R
.
±±R S
Split
±±S X
(
±±X Y
$char
±±Y \
)
±±\ ]
;
±±] ^
TimeSpan
≤≤ +
horaInicioIntervaloPorDefecto
≤≤ 6
=
≤≤7 8
new
≤≤9 <
TimeSpan
≤≤= E
(
≤≤E F
Convert
≤≤F M
.
≤≤M N
ToInt16
≤≤N U
(
≤≤U V
inicio
≤≤V \
[
≤≤\ ]
$num
≤≤] ^
]
≤≤^ _
)
≤≤_ `
,
≤≤` a
Convert
≤≤b i
.
≤≤i j
ToInt16
≤≤j q
(
≤≤q r
inicio
≤≤r x
[
≤≤x y
$num
≤≤y z
]
≤≤z {
)
≤≤{ |
,
≤≤| }
Convert≤≤~ Ö
.≤≤Ö Ü
ToInt16≤≤Ü ç
(≤≤ç é
inicio≤≤é î
[≤≤î ï
$num≤≤ï ñ
]≤≤ñ ó
)≤≤ó ò
)≤≤ò ô
;≤≤ô ö
TimeSpan
≥≥ *
horaHastaIntervaloPorDefecto
≥≥ 5
=
≥≥6 7
new
≥≥8 ;
TimeSpan
≥≥< D
(
≥≥D E
Convert
≥≥E L
.
≥≥L M
ToInt16
≥≥M T
(
≥≥T U
fin
≥≥U X
[
≥≥X Y
$num
≥≥Y Z
]
≥≥Z [
)
≥≥[ \
,
≥≥\ ]
Convert
≥≥^ e
.
≥≥e f
ToInt16
≥≥f m
(
≥≥m n
fin
≥≥n q
[
≥≥q r
$num
≥≥r s
]
≥≥s t
)
≥≥t u
,
≥≥u v
Convert
≥≥w ~
.
≥≥~ 
ToInt16≥≥ Ü
(≥≥Ü á
fin≥≥á ä
[≥≥ä ã
$num≥≥ã å
]≥≥å ç
)≥≥ç é
)≥≥é è
;≥≥è ê
TimeSpan
¥¥ 

horaActual
¥¥ #
=
¥¥$ %
fechaActual
¥¥& 1
.
¥¥1 2
	TimeOfDay
¥¥2 ;
;
¥¥; <

fechaDesde
∑∑ 
=
∑∑ 

horaActual
∑∑ '
<
∑∑( )+
horaInicioIntervaloPorDefecto
∑∑* G
?
∑∑H I
fechaActual
∏∏ 
.
∏∏  
Date
∏∏  $
.
∏∏$ %
AddDays
∏∏% ,
(
∏∏, -
-
∏∏- .
$num
∏∏. /
)
∏∏/ 0
.
∏∏0 1
AddTicks
∏∏1 9
(
∏∏9 :+
horaInicioIntervaloPorDefecto
∏∏: W
.
∏∏W X
Ticks
∏∏X ]
)
∏∏] ^
:
ππ 
fechaActual
ππ !
.
ππ! "
Date
ππ" &
.
ππ& '
AddTicks
ππ' /
(
ππ/ 0+
horaInicioIntervaloPorDefecto
ππ0 M
.
ππM N
Ticks
ππN S
)
ππS T
;
ππT U

fechaHasta
ΩΩ 
=
ΩΩ *
horaHastaIntervaloPorDefecto
ΩΩ 9
<
ΩΩ: ;+
horaInicioIntervaloPorDefecto
ΩΩ< Y
?
ΩΩZ [

fechaDesde
ææ 
.
ææ 
Date
ææ #
.
ææ# $
AddDays
ææ$ +
(
ææ+ ,
$num
ææ, -
)
ææ- .
.
ææ. /
AddTicks
ææ/ 7
(
ææ7 8*
horaHastaIntervaloPorDefecto
ææ8 T
.
ææT U
Ticks
ææU Z
)
ææZ [
:
øø 

fechaDesde
øø  
.
øø  !
Date
øø! %
.
øø% &
AddTicks
øø& .
(
øø. /*
horaHastaIntervaloPorDefecto
øø/ K
.
øøK L
Ticks
øøL Q
)
øøQ R
;
øøR S
}
¡¡ 
return
¬¬ 
new
¬¬ 
List
¬¬ 
<
¬¬ 
DateTime
¬¬ $
>
¬¬$ %
{
¬¬& '

fechaDesde
¬¬( 2
,
¬¬2 3

fechaHasta
¬¬4 >
}
¬¬? @
;
¬¬@ A
}
√√ 	
public
≈≈ 
List
≈≈ 
<
≈≈ 
DateTime
≈≈ 
>
≈≈ 6
(ObtenerFechaIncioyFinBasadoEnFechaActual
≈≈ F
(
≈≈F G
)
≈≈G H
{
∆∆ 	
DateTime
«« 
fechaActual
««  
=
««! "
DateTimeUtil
««# /
.
««/ 0
FechaActual
««0 ;
(
««; <
)
««< =
;
««= >
DateTime
»» 

fechaDesde
»» 
=
»»  !
fechaActual
»»" -
.
»»- .
Date
»». 2
;
»»2 3
DateTime
…… 

fechaHasta
…… 
=
……  !

fechaDesde
……" ,
.
……, -
Date
……- 1
.
……1 2
AddTicks
……2 :
(
……: ;
-
……; <
$num
……< =
)
……= >
.
……> ?
AddDays
……? F
(
……F G
$num
……G H
)
……H I
;
……I J
return
ÀÀ 
new
ÀÀ 
List
ÀÀ 
<
ÀÀ 
DateTime
ÀÀ $
>
ÀÀ$ %
{
ÀÀ& '

fechaDesde
ÀÀ( 2
,
ÀÀ2 3

fechaHasta
ÀÀ4 >
}
ÀÀ? @
;
ÀÀ@ A
}
ÃÃ 	
public
œœ 
List
œœ 
<
œœ 
OrdenDeVenta
œœ  
>
œœ  !1
#ObtenerOrdenesDeVentaHoyConfirmadas
œœ" E
(
œœE F
int
œœF I

IdEmpleado
œœJ T
,
œœT U
int
œœV Y
idCentroAtencion
œœZ j
)
œœj k
{
–– 	
try
—— 
{
““ 
var
”” 
fechas
”” 
=
”” ?
1ObtenerFechaIncioyFinParaReporteVentaPuntoDeVenta
”” N
(
””N O
)
””O P
;
””P Q
return
’’ 
OrdenDeVenta
’’ #
.
’’# $
Convert_
’’$ ,
(
’’, -$
transaccionRepositorio
’’- C
.
’’C DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
’’D ~
(
’’~ "
TransaccionSettings’’ í
.’’í ì
Default’’ì ö
.’’ö õ-
IdTipoTransaccionOrdenDeVenta’’õ ∏
,’’∏ π
MaestroSettings’’∫ …
.’’…  
Default’’  —
.’’— “0
 IdDetalleMaestroEstadoConfirmado’’“ Ú
,’’Ú Û 
idCentroAtencion’’Ù Ñ
,’’Ñ Ö
fechas’’Ü å
[’’å ç
$num’’ç é
]’’é è
,’’è ê
fechas’’ë ó
[’’ó ò
$num’’ò ô
]’’ô ö
)’’ö õ
.’’õ ú
ToList’’ú ¢
(’’¢ £
)’’£ §
)’’§ •
;’’• ¶
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
e
◊◊ 
)
◊◊ 
{
ÿÿ 
throw
ŸŸ 
e
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
}
€€ 	
public
›› 
List
›› 
<
›› 
long
›› 
>
›› M
?ObtenerIdOrdenesDeVentaConBoletaYFacturaConfirmadasEInvalidadas
›› Y
(
››Y Z
int
››Z ]

idEmpleado
››^ h
)
››h i
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
int
·· 
[
·· 
]
·· "
idsTiposComprobantes
·· *
=
··+ ,
{
··- .
MaestroSettings
··/ >
.
··> ?
Default
··? F
.
··F G/
!IdDetalleMaestroComprobanteBoleta
··G h
,
··h i
MaestroSettings
··j y
.
··y z
Default··z Å
.··Å Ç2
"IdDetalleMaestroComprobanteFactura··Ç §
}··• ¶
;··¶ ß
int
‚‚ 
[
‚‚ 
]
‚‚ 

idsEstados
‚‚  
=
‚‚! "
{
‚‚# $
MaestroSettings
‚‚% 4
.
‚‚4 5
Default
‚‚5 <
.
‚‚< =.
 IdDetalleMaestroEstadoConfirmado
‚‚= ]
,
‚‚] ^
MaestroSettings
‚‚_ n
.
‚‚n o
Default
‚‚o v
.
‚‚v w/
 IdDetalleMaestroEstadoInvalidado‚‚w ó
}‚‚ò ô
;‚‚ô ö
return
„„ $
transaccionRepositorio
„„ -
.
„„- .$
ObtenerIdTransacciones
„„. D
(
„„D E!
TransaccionSettings
„„E X
.
„„X Y
Default
„„Y `
.
„„` a+
IdTipoTransaccionOrdenDeVenta
„„a ~
,
„„~ $
idsTiposComprobantes„„Ä î
,„„î ï

idsEstados„„ñ †
)„„† °
.„„° ¢
ToList„„¢ ®
(„„® ©
)„„© ™
;„„™ ´
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
e
ÁÁ 
;
ÁÁ 
}
ËË 
}
ÈÈ 	
public
ÎÎ 
List
ÎÎ 
<
ÎÎ 
OrdenDeVenta
ÎÎ  
>
ÎÎ  !K
=ObtenerOrdenesDeVentaConBoletaYFacturaConfirmadasEInvalidadas
ÎÎ" _
(
ÎÎ_ `
int
ÎÎ` c

idEmpleado
ÎÎd n
)
ÎÎn o
{
ÏÏ 	
try
ÌÌ 
{
ÓÓ 
int
ÔÔ 
[
ÔÔ 
]
ÔÔ "
idsTiposComprobantes
ÔÔ *
=
ÔÔ+ ,
{
ÔÔ- .
MaestroSettings
ÔÔ/ >
.
ÔÔ> ?
Default
ÔÔ? F
.
ÔÔF G/
!IdDetalleMaestroComprobanteBoleta
ÔÔG h
,
ÔÔh i
MaestroSettings
ÔÔj y
.
ÔÔy z
DefaultÔÔz Å
.ÔÔÅ Ç2
"IdDetalleMaestroComprobanteFacturaÔÔÇ §
}ÔÔ• ¶
;ÔÔ¶ ß
int
 
[
 
]
 

idsEstados
  
=
! "
{
# $
MaestroSettings
% 4
.
4 5
Default
5 <
.
< =.
 IdDetalleMaestroEstadoConfirmado
= ]
,
] ^
MaestroSettings
_ n
.
n o
Default
o v
.
v w/
 IdDetalleMaestroEstadoInvalidadow ó
}ò ô
;ô ö
return
ÒÒ 
null
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
e
ıı 
;
ıı 
}
ˆˆ 
}
˜˜ 	
public
˘˘ 
List
˘˘ 
<
˘˘ 
OrdenDeVenta
˘˘  
>
˘˘  !C
5ObtenerOrdenesDeVentaConBoletaConfirmadasEInvalidadas
˘˘" W
(
˘˘W X
int
˘˘X [

idEmpleado
˘˘\ f
)
˘˘f g
{
˙˙ 	
try
˚˚ 
{
¸¸ 
int
˝˝ 
[
˝˝ 
]
˝˝ "
idsTiposComprobantes
˝˝ *
=
˝˝+ ,
{
˝˝- .
MaestroSettings
˝˝/ >
.
˝˝> ?
Default
˝˝? F
.
˝˝F G/
!IdDetalleMaestroComprobanteBoleta
˝˝G h
}
˝˝i j
;
˝˝j k
int
˛˛ 
[
˛˛ 
]
˛˛ 

idsEstados
˛˛  
=
˛˛! "
{
˛˛# $
MaestroSettings
˛˛% 4
.
˛˛4 5
Default
˛˛5 <
.
˛˛< =.
 IdDetalleMaestroEstadoConfirmado
˛˛= ]
,
˛˛] ^
MaestroSettings
˛˛_ n
.
˛˛n o
Default
˛˛o v
.
˛˛v w/
 IdDetalleMaestroEstadoInvalidado˛˛w ó
}˛˛ò ô
;˛˛ô ö
return
ˇˇ 
null
ˇˇ 
;
ˇˇ 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
e
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
e
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
ââ 
List
ââ 
<
ââ 
OrdenDeVenta
ââ  
>
ââ  !C
5ObtenerOrdenesDeVentaConBoletaConfirmadasEInvalidadas
ââ" W
(
ââW X
int
ââX [

idEmpleado
ââ\ f
,
ââf g
DateTime
ââh p
fechaActual
ââq |
,
ââ| }
intââ~ Å 
cantidadAObtenerââÇ í
)ââí ì
{
ää 	
try
ãã 
{
åå 
DateTime
çç 

fechaHasta
çç #
=
çç$ %
fechaActual
çç& 1
.
çç1 2
AddHours
çç2 :
(
çç: ;
-
çç; <,
FacturacionElectronicaSettings
çç< Z
.
ççZ [
Default
çç[ b
.
ççb c:
+NumeroDeHorasDeRetrazoAlTransmitirAEfacturaççc é
)ççé è
;ççè ê
int
éé 
idTipoTransaccion
éé %
=
éé& '!
TransaccionSettings
éé( ;
.
éé; <
Default
éé< C
.
ééC D+
IdTipoTransaccionOrdenDeVenta
ééD a
;
ééa b
int
èè 
idTipoComprobante
èè %
=
èè& '
MaestroSettings
èè( 7
.
èè7 8
Default
èè8 ?
.
èè? @/
!IdDetalleMaestroComprobanteBoleta
èè@ a
;
èèa b
int
êê 
idEventoAEvitar
êê #
=
êê$ %
MaestroSettings
êê& 5
.
êê5 6
Default
êê6 =
.
êê= >/
!IdDetalleMaestroEstadoTransmitido
êê> _
;
êê_ `
return
ëë 
OrdenDeVenta
ëë #
.
ëë# $
Convert_
ëë$ ,
(
ëë, -$
transaccionRepositorio
ëë- C
.
ëëC D"
ObtenerTransacciones
ëëD X
(
ëëX Y
idTipoTransaccion
ëëY j
,
ëëj k
idTipoComprobante
ëël }
,
ëë} ~
idEventoAEvitarëë é
,ëëé è

fechaHastaëëê ö
,ëëö õ 
cantidadAObtenerëëú ¨
)ëë¨ ≠
.ëë≠ Æ
ToListëëÆ ¥
(ëë¥ µ
)ëëµ ∂
)ëë∂ ∑
;ëë∑ ∏
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï )
(
ïï) *
$str
ïï* r
,
ïïr s
e
ïït u
)
ïïu v
;
ïïv w
}
ññ 
}
óó 	
public
ôô 
List
ôô 
<
ôô 
OrdenDeVenta
ôô  
>
ôô  !D
6ObtenerOrdenesDeVentaConFacturaConfirmadasEInvalidadas
ôô" X
(
ôôX Y
int
ôôY \

idEmpleado
ôô] g
,
ôôg h
DateTime
ôôi q
fechaActual
ôôr }
)
ôô} ~
{
öö 	
try
õõ 
{
úú 
DateTime
ùù 

fechaHasta
ùù #
=
ùù$ %
fechaActual
ùù& 1
.
ùù1 2
AddHours
ùù2 :
(
ùù: ;
-
ùù; <,
FacturacionElectronicaSettings
ùù< Z
.
ùùZ [
Default
ùù[ b
.
ùùb c:
+NumeroDeHorasDeRetrazoAlTransmitirAEfacturaùùc é
)ùùé è
;ùùè ê
int
ûû 
idTipoTransaccion
ûû %
=
ûû& '!
TransaccionSettings
ûû( ;
.
ûû; <
Default
ûû< C
.
ûûC D+
IdTipoTransaccionOrdenDeVenta
ûûD a
;
ûûa b
int
üü 
idTipoComprobante
üü %
=
üü& '
MaestroSettings
üü( 7
.
üü7 8
Default
üü8 ?
.
üü? @0
"IdDetalleMaestroComprobanteFactura
üü@ b
;
üüb c
int
†† 
idEventoAEvitar
†† #
=
††$ %
MaestroSettings
††& 5
.
††5 6
Default
††6 =
.
††= >/
!IdDetalleMaestroEstadoTransmitido
††> _
;
††_ `
return
°° 
OrdenDeVenta
°° #
.
°°# $
Convert_
°°$ ,
(
°°, -$
transaccionRepositorio
°°- C
.
°°C D"
ObtenerTransacciones
°°D X
(
°°X Y
idTipoTransaccion
°°Y j
,
°°j k
idTipoComprobante
°°l }
,
°°} ~
idEventoAEvitar°° é
,°°é è

fechaHasta°°ê ö
)°°ö õ
.°°õ ú
ToList°°ú ¢
(°°¢ £
)°°£ §
)°°§ •
;°°• ¶
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
new
•• 
LogicaException
•• )
(
••) *
$str
••* r
,
••r s
e
••t u
)
••u v
;
••v w
}
¶¶ 
}
ßß 	
public
©© 
List
©© 
<
©© 
OperacionDeVenta
©© $
>
©©$ %G
9ObtenerOperacionesConNotaDeCreditoConfirmadasEInvalidadas
©©& _
(
©©_ `
int
©©` c

idEmpleado
©©d n
,
©©n o
DateTime
©©p x
fechaActual©©y Ñ
,©©Ñ Ö
int©©Ü â+
idTipoComprobanteReferencia©©ä •
)©©• ¶
{
™™ 	
try
´´ 
{
¨¨ 
DateTime
≠≠ 

fechaHasta
≠≠ #
=
≠≠$ %
fechaActual
≠≠& 1
.
≠≠1 2
AddHours
≠≠2 :
(
≠≠: ;
-
≠≠; <,
FacturacionElectronicaSettings
≠≠< Z
.
≠≠Z [
Default
≠≠[ b
.
≠≠b c:
+NumeroDeHorasDeRetrazoAlTransmitirAEfactura≠≠c é
)≠≠é è
;≠≠è ê
int
ÆÆ 
[
ÆÆ 
]
ÆÆ #
idsTiposTransacciones
ÆÆ +
=
ÆÆ, -
{
ÆÆ. /!
TransaccionSettings
ÆÆ0 C
.
ÆÆC D
Default
ÆÆD K
.
ÆÆK L+
IdTipoTransaccionOrdenDeVenta
ÆÆL i
,
ÆÆi j!
TransaccionSettings
ÆÆk ~
.
ÆÆ~ 
DefaultÆÆ Ü
.ÆÆÜ á8
(IdTipoTransaccionOrdenDeAnulacionDeVentaÆÆá Ø
,ÆÆØ ∞#
TransaccionSettingsÆÆ± ƒ
.ÆÆƒ ≈
DefaultÆÆ≈ Ã
.ÆÆÃ ÕI
9IdTipoDeTransaccionOrdenDeAnulacionDeVentaPorErrorEnElRucÆÆÕ Ü
,ÆÆÜ á#
TransaccionSettingsÆÆà õ
.ÆÆõ ú
DefaultÆÆú £
.ÆÆ£ §R
BIdTipoDeTransaccionOrdenDeCorreccionDeVentaPorErrorEnLaDescripcionÆÆ§ Ê
,ÆÆÊ Á#
TransaccionSettingsÆÆË ˚
.ÆÆ˚ ¸
DefaultÆÆ¸ É
.ÆÆÉ Ñ@
0IdTipoDeTransaccionOrdenDeDescuentoGlobalEnVentaÆÆÑ ¥
,ÆÆ¥ µ#
TransaccionSettingsÆÆ∂ …
.ÆÆ…  
DefaultÆÆ  —
.ÆÆ— “A
1IdTipoDeTransaccionOrdenDeDescuentoPorItemEnVentaÆÆ“ É
,ÆÆÉ Ñ#
TransaccionSettingsÆÆÖ ò
.ÆÆò ô
DefaultÆÆô †
.ÆÆ† °@
0IdTipoDeTransaccionOrdenDeDevolucionTotalDeVentaÆÆ° —
,ÆÆ— “#
TransaccionSettingsÆÆ” Ê
.ÆÆÊ Á
DefaultÆÆÁ Ó
.ÆÆÓ ÔB
2IdTipoDeTransaccionOrdenDeDevolucionPorItemEnVentaÆÆÔ °
}ÆÆ¢ £
;ÆÆ£ §
int
ØØ 
idTipoComprobante
ØØ %
=
ØØ& '
MaestroSettings
ØØ( 7
.
ØØ7 8
Default
ØØ8 ?
.
ØØ? @4
&IdDetalleMaestroComprobanteNotaCredito
ØØ@ f
;
ØØf g
int
∞∞ 
idEventoAEvitar
∞∞ #
=
∞∞$ %
MaestroSettings
∞∞& 5
.
∞∞5 6
Default
∞∞6 =
.
∞∞= >/
!IdDetalleMaestroEstadoTransmitido
∞∞> _
;
∞∞_ `
return
±± 
OperacionDeVenta
±± '
.
±±' (
Convert_
±±( 0
(
±±0 1$
transaccionRepositorio
±±1 G
.
±±G H"
ObtenerTransacciones
±±H \
(
±±\ ]#
idsTiposTransacciones
±±] r
,
±±r s 
idTipoComprobante±±t Ö
,±±Ö Ü
idEventoAEvitar±±á ñ
,±±ñ ó

fechaHasta±±ò ¢
)±±¢ £
.±±£ §
Where±±§ ©
(±±© ™
t±±™ ´
=>±±¨ Æ
t±±Ø ∞
.±±∞ ±
Transaccion3±±± Ω
.±±Ω æ
Comprobante±±æ …
.±±…  
Detalle_maestro±±  Ÿ
.±±Ÿ ⁄
id±±⁄ ‹
==±±› ﬂ+
idTipoComprobanteReferencia±±‡ ˚
)±±˚ ¸
.±±¸ ˝
ToList±±˝ É
(±±É Ñ
)±±Ñ Ö
)±±Ö Ü
;±±Ü á
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
e
≥≥ 
)
≥≥ 
{
¥¥ 
throw
µµ 
new
µµ 
LogicaException
µµ )
(
µµ) *
$str
µµ* `
,
µµ` a
e
µµb c
)
µµc d
;
µµd e
}
∂∂ 
}
∑∑ 	
public
ππ 
List
ππ 
<
ππ 
OperacionDeVenta
ππ $
>
ππ$ %F
8ObtenerOperacionesConNotaDeDebitoConfirmadasEInvalidadas
ππ& ^
(
ππ^ _
int
ππ_ b

idEmpleado
ππc m
,
ππm n
DateTime
ππo w
fechaActualππx É
,ππÉ Ñ
intππÖ à+
idTipoComprobanteReferenciaππâ §
)ππ§ •
{
∫∫ 	
try
ªª 
{
ºº 
DateTime
ΩΩ 

fechaHasta
ΩΩ #
=
ΩΩ$ %
fechaActual
ΩΩ& 1
.
ΩΩ1 2
AddHours
ΩΩ2 :
(
ΩΩ: ;
-
ΩΩ; <,
FacturacionElectronicaSettings
ΩΩ< Z
.
ΩΩZ [
Default
ΩΩ[ b
.
ΩΩb c:
+NumeroDeHorasDeRetrazoAlTransmitirAEfacturaΩΩc é
)ΩΩé è
;ΩΩè ê
int
ææ 
[
ææ 
]
ææ #
idsTiposTransacciones
ææ +
=
ææ, -
{
ææ. /!
TransaccionSettings
ææ0 C
.
ææC D
Default
ææD K
.
ææK L?
1IdTipoDeTransaccionOrdenDeInteresesPorMoraEnVenta
ææL }
,
ææ} ~"
TransaccionSettingsææ í
.ææí ì
Defaultææì ö
.ææö õA
1IdTipoDeTransaccionOrdenDeAumentoEnElValorDeVentaææõ Ã
}ææÕ Œ
;ææŒ œ
int
øø 
idTipoComprobante
øø %
=
øø& '
MaestroSettings
øø( 7
.
øø7 8
Default
øø8 ?
.
øø? @5
'IdDetalleMaestroComprobanteNotaDeDebito
øø@ g
;
øøg h
int
¿¿ 
idEventoAEvitar
¿¿ #
=
¿¿$ %
MaestroSettings
¿¿& 5
.
¿¿5 6
Default
¿¿6 =
.
¿¿= >/
!IdDetalleMaestroEstadoTransmitido
¿¿> _
;
¿¿_ `
return
¡¡ 
OperacionDeVenta
¡¡ '
.
¡¡' (
Convert_
¡¡( 0
(
¡¡0 1$
transaccionRepositorio
¡¡1 G
.
¡¡G H"
ObtenerTransacciones
¡¡H \
(
¡¡\ ]#
idsTiposTransacciones
¡¡] r
,
¡¡r s 
idTipoComprobante¡¡t Ö
,¡¡Ö Ü
idEventoAEvitar¡¡á ñ
,¡¡ñ ó

fechaHasta¡¡ò ¢
)¡¡¢ £
.¡¡£ §
Where¡¡§ ©
(¡¡© ™
t¡¡™ ´
=>¡¡¨ Æ
t¡¡Ø ∞
.¡¡∞ ±
Transaccion3¡¡± Ω
.¡¡Ω æ
Comprobante¡¡æ …
.¡¡…  
Detalle_maestro¡¡  Ÿ
.¡¡Ÿ ⁄
id¡¡⁄ ‹
==¡¡› ﬂ+
idTipoComprobanteReferencia¡¡‡ ˚
)¡¡˚ ¸
.¡¡¸ ˝
ToList¡¡˝ É
(¡¡É Ñ
)¡¡Ñ Ö
)¡¡Ö Ü
;¡¡Ü á
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
ƒƒ 
throw
≈≈ 
new
≈≈ 
LogicaException
≈≈ )
(
≈≈) *
$str
≈≈* _
,
≈≈_ `
e
≈≈a b
)
≈≈b c
;
≈≈c d
}
∆∆ 
}
«« 	
public
…… 
List
…… 
<
…… !
MovimientoDeAlmacen
…… '
>
……' (;
-ObtenerGuiasDeRemisionConfirmadasEInvalidadas
……) V
(
……V W
int
……W Z

idEmpleado
……[ e
,
……e f
DateTime
……g o
fechaActual
……p {
)
……{ |
{
   	
try
ÀÀ 
{
ÃÃ 
DateTime
ÕÕ 

fechaHasta
ÕÕ #
=
ÕÕ$ %
fechaActual
ÕÕ& 1
.
ÕÕ1 2
AddHours
ÕÕ2 :
(
ÕÕ: ;
-
ÕÕ; <,
FacturacionElectronicaSettings
ÕÕ< Z
.
ÕÕZ [
Default
ÕÕ[ b
.
ÕÕb c:
+NumeroDeHorasDeRetrazoAlTransmitirAEfacturaÕÕc é
)ÕÕé è
;ÕÕè ê
List
ŒŒ 
<
ŒŒ 
int
ŒŒ 
>
ŒŒ #
idsTiposTransacciones
ŒŒ /
=
ŒŒ0 1
Diccionario
ŒŒ2 =
.
ŒŒ= >:
,TiposDeTransaccionMovimientoDeBienes_Salidas
ŒŒ> j
.
ŒŒj k
ToList
ŒŒk q
(
ŒŒq r
)
ŒŒr s
;
ŒŒs t#
idsTiposTransacciones
œœ %
.
œœ% &
AddRange
œœ& .
(
œœ. /
Diccionario
œœ/ :
.
œœ: ;;
-TiposDeTransaccionMovimientoDeBienes_Entradas
œœ; h
.
œœh i
ToList
œœi o
(
œœo p
)
œœp q
)
œœq r
;
œœr s#
idsTiposTransacciones
–– %
.
––% &
AddRange
––& .
(
––. /
Diccionario
––/ :
.
––: ;/
!TiposDeTransaccionGuiasDeRemision
––; \
.
––\ ]
ToList
––] c
(
––c d
)
––d e
)
––e f
;
––f g
int
—— 
idTipoComprobante
—— %
=
——& '
MaestroSettings
——( 7
.
——7 8
Default
——8 ?
.
——? @@
2IdDetalleMaestroComprobanteGuiaDeRemisionRemitente
——@ r
;
——r s
int
““ 
[
““ 
]
““ 

idsEstados
““  
=
““! "
{
““# $
MaestroSettings
““% 4
.
““4 5
Default
““5 <
.
““< =.
 IdDetalleMaestroEstadoConfirmado
““= ]
,
““] ^
MaestroSettings
““_ n
.
““n o
Default
““o v
.
““v w/
 IdDetalleMaestroEstadoInvalidado““w ó
}““ò ô
;““ô ö
int
”” 
idEventoAEvitar
”” #
=
””$ %
MaestroSettings
””& 5
.
””5 6
Default
””6 =
.
””= >/
!IdDetalleMaestroEstadoTransmitido
””> _
;
””_ `
return
‘‘ !
MovimientoDeAlmacen
‘‘ *
.
‘‘* +
	Convertir
‘‘+ 4
(
‘‘4 5$
transaccionRepositorio
‘‘5 K
.
‘‘K L"
ObtenerTransacciones
‘‘L `
(
‘‘` a#
idsTiposTransacciones
‘‘a v
.
‘‘v w
ToArray
‘‘w ~
(
‘‘~ 
)‘‘ Ä
,‘‘Ä Å!
idTipoComprobante‘‘Ç ì
,‘‘ì î
idEventoAEvitar‘‘ï §
,‘‘§ •

fechaHasta‘‘¶ ∞
)‘‘∞ ±
.‘‘± ≤
ToList‘‘≤ ∏
(‘‘∏ π
)‘‘π ∫
)‘‘∫ ª
;‘‘ª º
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
◊◊ 
throw
ÿÿ 
new
ÿÿ 
LogicaException
ÿÿ )
(
ÿÿ) *
$str
ÿÿ* _
,
ÿÿ_ `
e
ÿÿa b
)
ÿÿb c
;
ÿÿc d
}
ŸŸ 
}
⁄⁄ 	
public
ﬁﬁ 
List
ﬁﬁ 
<
ﬁﬁ 
OrdenDeVenta
ﬁﬁ  
>
ﬁﬁ  !@
2ObtenerOrdenesDeVentaConfirmadasEnIntervaloDeFecha
ﬁﬁ" T
(
ﬁﬁT U
int
ﬁﬁU X
[
ﬁﬁX Y
]
ﬁﬁY Z
idsPuntosDeVenta
ﬁﬁ[ k
,
ﬁﬁk l
DateTime
ﬁﬁm u

fechaDesdeﬁﬁv Ä
,ﬁﬁÄ Å
DateTimeﬁﬁÇ ä

fechaHastaﬁﬁã ï
)ﬁﬁï ñ
{
ﬂﬂ 	
try
‡‡ 
{
·· 
return
‚‚ 
OrdenDeVenta
‚‚ #
.
‚‚# $
Convert_
‚‚$ ,
(
‚‚, -$
transaccionRepositorio
‚‚- C
.
‚‚C DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
‚‚D ~
(
‚‚~ "
TransaccionSettings‚‚ í
.‚‚í ì
Default‚‚ì ö
.‚‚ö õ-
IdTipoTransaccionOrdenDeVenta‚‚õ ∏
,‚‚∏ π
MaestroSettings‚‚∫ …
.‚‚…  
Default‚‚  —
.‚‚— “0
 IdDetalleMaestroEstadoConfirmado‚‚“ Ú
,‚‚Ú Û 
idsPuntosDeVenta‚‚Ù Ñ
,‚‚Ñ Ö

fechaDesde‚‚Ü ê
,‚‚ê ë

fechaHasta‚‚í ú
)‚‚ú ù
.‚‚ù û
ToList‚‚û §
(‚‚§ •
)‚‚• ¶
)‚‚¶ ß
;‚‚ß ®
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
e
ÂÂ 
)
ÂÂ 
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
LogicaException
ÁÁ )
(
ÁÁ) *
$str
ÁÁ* Y
,
ÁÁY Z
e
ÁÁ[ \
)
ÁÁ\ ]
;
ÁÁ] ^
}
ËË 
}
ÈÈ 	
public
ÎÎ 
List
ÎÎ 
<
ÎÎ 
OrdenDeVenta
ÎÎ  
>
ÎÎ  !.
 ObtenerOrdenesDeVentaConfirmadas
ÎÎ" B
(
ÎÎB C
int
ÎÎC F
[
ÎÎF G
]
ÎÎG H
idsPuntosDeVenta
ÎÎI Y
,
ÎÎY Z
DateTime
ÎÎ[ c

fechaDesde
ÎÎd n
,
ÎÎn o
DateTime
ÎÎp x

fechaHastaÎÎy É
)ÎÎÉ Ñ
{
ÏÏ 	
try
ÓÓ 
{
ÔÔ 
return
 
OrdenDeVenta
 #
.
# $
Convert_
$ ,
(
, -$
transaccionRepositorio
- C
.
C DH
:ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstado
D ~
(
~ "
TransaccionSettings í
.í ì
Defaultì ö
.ö õ-
IdTipoTransaccionOrdenDeVentaõ ∏
,∏ π 
idsPuntosDeVenta∫  
,  À

fechaDesdeÃ ÷
,÷ ◊
MaestroSettingsÿ Á
.Á Ë
DefaultË Ô
.Ô 0
 IdDetalleMaestroEstadoConfirmado ê
,ê ë

fechaHastaí ú
)ú ù
.ù û
ToListû §
(§ •
)• ¶
)¶ ß
;ß ®
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
e
ıı 
;
ıı 
}
ˆˆ 
}
˜˜ 	
public
˚˚ 
List
˚˚ 
<
˚˚ 
OrdenDeVenta
˚˚  
>
˚˚  !R
DObtenerOrdenesDeVentaConfirmadasOTransferidasDeVendedorAdministrador
˚˚" f
(
˚˚f g
int
˚˚g j

idEmpleado
˚˚k u
,
˚˚u v
DateTime
˚˚w 

fechaDesde˚˚Ä ä
,˚˚ä ã
DateTime˚˚å î

fechaHasta˚˚ï ü
)˚˚ü †
{
¸¸ 	
int
˝˝ 
[
˝˝ 
]
˝˝ 

idsEstados
˝˝ 
=
˝˝ 
{
˝˝  
MaestroSettings
˝˝! 0
.
˝˝0 1
Default
˝˝1 8
.
˝˝8 9.
 IdDetalleMaestroEstadoConfirmado
˝˝9 Y
,
˝˝Y Z
MaestroSettings
˝˝[ j
.
˝˝j k
Default
˝˝k r
.
˝˝r s0
!IdDetalleMaestroEstadoTransmitido˝˝s î
}˝˝ï ñ
;˝˝ñ ó
try
˛˛ 
{
ˇˇ 
return
ÅÅ 
null
ÅÅ 
;
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ 
e
ÉÉ 
)
ÉÉ 
{
ÑÑ 
throw
ÖÖ 
e
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}
áá 	
public
ää 
void
ää (
ValidarInvalidacionDeVenta
ää .
(
ää. /
OrdenDeVenta
ää/ ;
orden
ää< A
)
ääA B
{
ãã 	
if
åå 
(
åå 
!
åå 
orden
åå 
.
åå &
EsAnulableConNotaInterna
åå /
(
åå/ 0
)
åå0 1
)
åå1 2
{
çç 
throw
éé 
new
éé 
LogicaException
éé )
(
éé) *
$str
éé* ~
)
éé~ 
;éé Ä
}
èè 
}
êê 	
OperationResult
   E
7AfectarExistenciasGuardarTransaccionyAgregarEstadoVenta
   O
(
  O P
Transaccion
  P [
OperacionDeVenta
  \ l
,
  l m
List
  n r
<
  r s"
Detalle_transaccion  s Ü
>  Ü á
detalles  à ê
,  ê ë
int  í ï
	idAlmacen  ñ ü
,  ü †"
Estado_transaccion  ° ≥
estado  ¥ ∫
,  ∫ ª
List  º ¿
<  ¿ ¡
Estado_cuota  ¡ Õ
>  Õ Œ
estadosCuota  œ €
)  € ‹
{
ÀÀ 	
OperationResult
ÃÃ 
result
ÃÃ "
;
ÃÃ" #
do
ÕÕ 
{
ŒŒ 
List
–– 
<
–– 

Existencia
–– 
>
––  
existencias
––! ,
=
––- .
new
––/ 2
List
––3 7
<
––7 8

Existencia
––8 B
>
––B C
(
––C D
)
––D E
;
––E F
existencias
—— 
=
—— $
transaccionRepositorio
—— 4
.
——4 5 
ObtenerExistencias
——5 G
(
——G H
detalles
——H P
.
——P Q
Select
——Q W
(
——W X
d
——X Y
=>
——Z \
d
——] ^
.
——^ _!
id_concepto_negocio
——_ r
)
——r s
.
——s t
ToArray
——t {
(
——{ |
)
——| }
,
——} ~
	idAlmacen—— à
)——à â
;——â ä
foreach
”” 
(
”” 
var
”” 
detalle
”” $
in
””% '
detalles
””( 0
)
””0 1
{
‘‘ 
var
’’ 

existencia
’’ "
=
’’# $
existencias
’’% 0
.
’’0 1
Single
’’1 7
(
’’7 8
e
’’8 9
=>
’’: <
e
’’= >
.
’’> ?
id_punto_atencion
’’? P
==
’’Q S
	idAlmacen
’’T ]
&&
’’^ `
e
’’a b
.
’’b c!
id_concepto_negocio
’’c v
==
’’w y
detalle’’z Å
.’’Å Ç#
id_concepto_negocio’’Ç ï
)’’ï ñ
;’’ñ ó
if
◊◊ 
(
◊◊ 
OperacionDeVenta
◊◊ (
.
◊◊( )!
id_tipo_transaccion
◊◊) <
==
◊◊= ?!
TransaccionSettings
◊◊@ S
.
◊◊S T
Default
◊◊T [
.
◊◊[ \>
/IdTipoTransaccionInvalidacionDeAnulacionDeVenta◊◊\ ã
)◊◊ã å
{
ÿÿ 

existencia
ŸŸ "
.
ŸŸ" #
existencia1
ŸŸ# .
-=
ŸŸ/ 1
detalle
ŸŸ2 9
.
ŸŸ9 :
cantidad
ŸŸ: B
;
ŸŸB C
}
⁄⁄ 
else
€€ 
{
‹‹ 

existencia
›› "
.
››" #
existencia1
››# .
+=
››/ 1
detalle
››2 9
.
››9 :
cantidad
››: B
;
››B C
}
ﬁﬁ 
}
ﬂﬂ 
result
‡‡ 
=
‡‡ $
transaccionRepositorio
‡‡ /
.
‡‡/ 0A
3CrearTransaccionAgregarEstadoYActualizarExistencias
‡‡0 c
(
‡‡c d
OperacionDeVenta
‡‡d t
,
‡‡t u
existencias‡‡v Å
,‡‡Å Ç
estado‡‡É â
,‡‡â ä
estadosCuota‡‡ã ó
)‡‡ó ò
;‡‡ò ô
}
·· 
while
‚‚ 
(
‚‚ 
result
‚‚ 
.
‚‚ 
code_result
‚‚ %
==
‚‚& (!
OperationResultEnum
‚‚) <
.
‚‚< =
Error
‚‚= B
&&
‚‚C E
result
‚‚F L
.
‚‚L M

exceptions
‚‚M W
.
‚‚W X
FirstOrDefault
‚‚X f
(
‚‚f g
)
‚‚g h
.
‚‚h i
GetType
‚‚i p
(
‚‚p q
)
‚‚q r
==
‚‚s u
typeof
‚‚v |
(
‚‚| }"
ExistenciaException‚‚} ê
)‚‚ê ë
)‚‚ë í
;‚‚í ì
return
‰‰ 
result
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ÁÁ 
OperationResult
ÁÁ 
AnularVenta
ÁÁ *
(
ÁÁ* +
long
ÁÁ+ /
idOrdenDeVenta
ÁÁ0 >
,
ÁÁ> ?
int
ÁÁ@ C

idEmpleado
ÁÁD N
,
ÁÁN O
int
ÁÁP S
idCentroAtencion
ÁÁT d
,
ÁÁd e
int
ÁÁf i 
idSerieComprobante
ÁÁj |
,
ÁÁ| }
stringÁÁ~ Ñ
observacionesÁÁÖ í
)ÁÁí ì
{
ËË 	
try
ÈÈ 
{
ÍÍ 
int
ÎÎ 
idMoneda
ÎÎ 
=
ÎÎ 
MaestroSettings
ÎÎ .
.
ÎÎ. /
Default
ÎÎ/ 6
.
ÎÎ6 7)
IdDetalleMaestroMonedaSoles
ÎÎ7 R
;
ÎÎR S
DateTime
ÏÏ 
fechaActual
ÏÏ $
=
ÏÏ% &
DateTimeUtil
ÏÏ' 3
.
ÏÏ3 4
FechaActual
ÏÏ4 ?
(
ÏÏ? @
)
ÏÏ@ A
;
ÏÏA B
	Operacion
ÔÔ 
operacionGenerica
ÔÔ +
=
ÔÔ, -
new
ÔÔ. 1
	Operacion
ÔÔ2 ;
(
ÔÔ; <$
transaccionRepositorio
ÔÔ< R
.
ÔÔR S&
ObtenerUltimaTransaccion
ÔÔS k
(
ÔÔk l!
TransaccionSettings
ÔÔl 
.ÔÔ Ä
DefaultÔÔÄ á
.ÔÔá à*
IdTipoTransaccionOperacionÔÔà ¢
)ÔÔ¢ £
)ÔÔ£ §
;ÔÔ§ •
int
ÒÒ 
idUnidadDeNegocio
ÒÒ %
=
ÒÒ& '
operacionGenerica
ÒÒ( 9
.
ÒÒ9 :
IdUnidadNegocio
ÒÒ: I
;
ÒÒI J
permisos_Logica
ıı 
.
ıı  
ValidarAccion
ıı  -
(
ıı- .

idEmpleado
ıı. 8
,
ıı8 9
MaestroSettings
ıı: I
.
ııI J
Default
ııJ Q
.
ııQ R*
IdDetalleMaestroAccionAnular
ııR n
,
ıın o"
TransaccionSettingsııp É
.ııÉ Ñ
DefaultııÑ ã
.ııã å-
IdTipoTransaccionOrdenDeVentaııå ©
,ıı© ™
idUnidadDeNegocio
ˆˆ %
)
ˆˆ% &
;
ˆˆ& '
OrdenDeVenta
˘˘ 
ordenDeVenta
˘˘ )
=
˘˘* +
new
˘˘, /
OrdenDeVenta
˘˘0 <
(
˘˘< =$
transaccionRepositorio
˘˘= S
.
˘˘S T0
"ObtenerTransaccionInclusiveEstados
˘˘T v
(
˘˘v w
idOrdenDeVenta˘˘w Ö
)˘˘Ö Ü
)˘˘Ü á
;˘˘á à
decimal
¸¸ 
tipoDeCambio
¸¸ $
=
¸¸% &
ordenDeVenta
¸¸' 3
.
¸¸3 4
TipoDeCambio
¸¸4 @
;
¸¸@ A
int
˝˝ 
	idCliente
˝˝ 
=
˝˝ 
ordenDeVenta
˝˝  ,
.
˝˝, -
Cliente
˝˝- 4
(
˝˝4 5
)
˝˝5 6
.
˝˝6 7
Id
˝˝7 9
;
˝˝9 :
long
˛˛ 
idVenta
˛˛ 
=
˛˛ 
ordenDeVenta
˛˛ +
.
˛˛+ ,
IdVenta
˛˛, 3
;
˛˛3 4
int
ˇˇ 
idMedioDePago
ˇˇ !
=
ˇˇ" #
ordenDeVenta
ˇˇ$ 0
.
ˇˇ0 1
Venta
ˇˇ1 6
(
ˇˇ6 7
)
ˇˇ7 8
.
ˇˇ8 9
ObtenerPagos
ˇˇ9 E
(
ˇˇE F
)
ˇˇF G
.
ˇˇG H
First
ˇˇH M
(
ˇˇM N
)
ˇˇN O
.
ˇˇO P
TrazaDePago
ˇˇP [
(
ˇˇ[ \
)
ˇˇ\ ]
.
ˇˇ] ^
MedioDePago
ˇˇ^ i
(
ˇˇi j
)
ˇˇj k
.
ˇˇk l
id
ˇˇl n
;
ˇˇn o
string
ÄÄ !
informacionBancaria
ÄÄ *
=
ÄÄ+ ,
ordenDeVenta
ÄÄ- 9
.
ÄÄ9 :
Venta
ÄÄ: ?
(
ÄÄ? @
)
ÄÄ@ A
.
ÄÄA B
ObtenerPagos
ÄÄB N
(
ÄÄN O
)
ÄÄO P
.
ÄÄP Q
First
ÄÄQ V
(
ÄÄV W
)
ÄÄW X
.
ÄÄX Y
TrazaDePago
ÄÄY d
(
ÄÄd e
)
ÄÄe f
.
ÄÄf g
Informacion
ÄÄg r
;
ÄÄr s
int
ÅÅ !
idEntidadFinanciera
ÅÅ '
=
ÅÅ( )
ordenDeVenta
ÅÅ* 6
.
ÅÅ6 7
Venta
ÅÅ7 <
(
ÅÅ< =
)
ÅÅ= >
.
ÅÅ> ?
ObtenerPagos
ÅÅ? K
(
ÅÅK L
)
ÅÅL M
.
ÅÅM N
First
ÅÅN S
(
ÅÅS T
)
ÅÅT U
.
ÅÅU V
TrazaDePago
ÅÅV a
(
ÅÅa b
)
ÅÅb c
.
ÅÅc d
EntidadBancaria
ÅÅd s
(
ÅÅs t
)
ÅÅt u
.
ÅÅu v
id
ÅÅv x
;
ÅÅx y
List
ÑÑ 
<
ÑÑ !
Detalle_transaccion
ÑÑ (
>
ÑÑ( )
detalles
ÑÑ* 2
=
ÑÑ3 4
new
ÑÑ5 8
List
ÑÑ9 =
<
ÑÑ= >!
Detalle_transaccion
ÑÑ> Q
>
ÑÑQ R
(
ÑÑR S
)
ÑÑS T
;
ÑÑT U
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
detalle
ÖÖ $
in
ÖÖ% '
ordenDeVenta
ÖÖ( 4
.
ÖÖ4 5
Detalles
ÖÖ5 =
(
ÖÖ= >
)
ÖÖ> ?
)
ÖÖ? @
{
ÜÜ 
detalles
áá 
.
áá 
Add
áá  
(
áá  !
new
áá! $!
Detalle_transaccion
áá% 8
(
áá8 9
detalle
áá9 @
.
áá@ A
Cantidad
ááA I
,
ááI J
detalle
ááK R
.
ááR S
Producto
ááS [
.
áá[ \
Id
áá\ ^
,
áá^ _
$str
áá` b
,
ááb c
detalle
áád k
.
áák l
PrecioUnitario
áál z
,
ááz {
detalleáá| É
.ááÉ Ñ
ImporteááÑ ã
,ááã å
nullááç ë
,ááë í
$numááì î
,ááî ï
null
àà 
,
àà 
null
àà "
,
àà" #
$num
àà$ %
,
àà% &
detalle
àà' .
.
àà. /
Igv
àà/ 2
,
àà2 3
detalle
àà4 ;
.
àà; <
	Descuento
àà< E
)
ààE F
)
ààF G
;
ààG H
}
ââ 
var
ää 
baseImponible
ää !
=
ää" #
detalles
ää$ ,
.
ää, -
Sum
ää- 0
(
ää0 1
d
ää1 2
=>
ää3 5
d
ää6 7
.
ää7 8
total
ää8 =
)
ää= >
;
ää> ?
Serie_comprobante
çç !'
serieComprobanteAnulacion
çç" ;
=
çç< =$
transaccionRepositorio
çç> T
.
ççT U'
ObtenerSerieDeComprobante
ççU n
(
ççn o!
idSerieComprobanteçço Å
)ççÅ Ç
;ççÇ É
if
èè 
(
èè 
ordenDeVenta
èè  
.
èè  !
IdTipoComprobante
èè! 2
==
èè3 5
MaestroSettings
èè6 E
.
èèE F
Default
èèF M
.
èèM N/
!IdDetalleMaestroComprobanteBoleta
èèN o
&&
èèp r(
serieComprobanteAnulacionèès å
.èèå ç
numeroèèç ì
.èèì î
	Substringèèî ù
(èèù û
$numèèû ü
,èèü †
$numèè° ¢
)èè¢ £
!=èè§ ¶
$strèèß ™
)èè™ ´
{
êê 
throw
ëë 
new
ëë 
LogicaException
ëë -
(
ëë- .
$strëë. ì
)ëëì î
;ëëî ï
}
íí 
if
ìì 
(
ìì 
ordenDeVenta
ìì  
.
ìì  !
IdTipoComprobante
ìì! 2
==
ìì3 5
MaestroSettings
ìì6 E
.
ììE F
Default
ììF M
.
ììM N0
"IdDetalleMaestroComprobanteFactura
ììN p
&&
ììq s(
serieComprobanteAnulacionììt ç
.ììç é
numeroììé î
.ììî ï
	Substringììï û
(ììû ü
$numììü †
,ìì† °
$numìì¢ £
)ìì£ §
!=ìì• ß
$strìì® ´
)ìì´ ¨
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï -
(
ïï- .
$strïï. ã
)ïïã å
;ïïå ç
}
ññ 
int
óó 
[
óó 
]
óó )
isdTipoDeComprobanteValidos
óó 1
=
óó2 3
{
óó4 5
MaestroSettings
óó6 E
.
óóE F
Default
óóF M
.
óóM N/
!IdDetalleMaestroComprobanteBoleta
óóN o
,
óóo p
MaestroSettingsóóq Ä
.óóÄ Å
DefaultóóÅ à
.óóà â2
"IdDetalleMaestroComprobanteFacturaóóâ ´
}óó¨ ≠
;óó≠ Æ
if
òò 
(
òò 
!
òò )
isdTipoDeComprobanteValidos
òò 0
.
òò0 1
Contains
òò1 9
(
òò9 :
ordenDeVenta
òò: F
.
òòF G
IdTipoComprobante
òòG X
)
òòX Y
)
òòY Z
{
ôô 
throw
öö 
new
öö 
LogicaException
öö -
(
öö- .
$ströö. í
)ööí ì
;ööì î
}
õõ 
Comprobante
ûû 
comprobante
ûû '
=
ûû( )
new
ûû* -
Comprobante
ûû. 9
(
ûû9 :'
serieComprobanteAnulacion
ûû: S
.
ûûS T!
id_tipo_comprobante
ûûT g
,
ûûg h(
serieComprobanteAnulacionûûi Ç
.ûûÇ É
idûûÉ Ö
,ûûÖ Ü)
serieComprobanteAnulacionûûá †
.ûû† °
proximo_numeroûû° Ø
,ûûØ ∞
trueûû± µ
,ûûµ ∂)
serieComprobanteAnulacionûû∑ –
.ûû– —
numeroûû— ◊
)ûû◊ ÿ
;ûûÿ Ÿ'
serieComprobanteAnulacion
†† )
.
††) *
proximo_numero
††* 8
++
††8 :
;
††: ;
string
¢¢ 
codigo
¢¢ 
=
¢¢ %
codigosOperacion_Logica
¢¢  7
.
¢¢7 83
%ObtenerSiguienteCodigoParaFacturacion
¢¢8 ]
(
¢¢] ^
$str
¢¢^ b
,
¢¢b c!
TransaccionSettings
¢¢d w
.
¢¢w x
Default
¢¢x 
.¢¢ Ä1
!IdTipoTransaccionAnulacionDeVenta¢¢Ä °
)¢¢° ¢
;¢¢¢ £
Transaccion
§§ 
anulacionDeVenta
§§ ,
=
§§- .
new
§§/ 2
Transaccion
§§3 >
(
§§> ?
codigo
§§? E
,
§§E F
operacionGenerica
§§G X
.
§§X Y
Id
§§Y [
,
§§[ \
fechaActual
§§] h
,
§§h i!
TransaccionSettings
§§j }
.
§§} ~
Default§§~ Ö
.§§Ö Ü1
!IdTipoTransaccionAnulacionDeVenta§§Ü ß
,§§ß ®
idUnidadDeNegocio
•• %
,
••% &
true
••' +
,
••+ ,
fechaActual
••- 8
,
••8 9
fechaActual
••: E
,
••E F
observaciones
••G T
,
••T U
fechaActual
••V a
,
••a b

idEmpleado
••c m
,
••m n
baseImponible
••o |
,
••| }
idCentroAtencion
¶¶ $
,
¶¶$ %
idMoneda
¶¶& .
,
¶¶. /
tipoDeCambio
¶¶0 <
,
¶¶< =
null
¶¶> B
,
¶¶B C
	idCliente
¶¶D M
)
¶¶M N
;
¶¶N O
anulacionDeVenta
®®  
.
®®  !
Comprobante
®®! ,
=
®®- .
comprobante
®®/ :
;
®®: ;
Transaccion
™™ #
ordenAnulacionDeVenta
™™ 1
=
™™2 3
new
™™4 7
Transaccion
™™8 C
(
™™C D%
codigosOperacion_Logica
™™D [
.
™™[ \4
%ObtenerSiguienteCodigoParaFacturacion™™\ Å
(™™Å Ç
codigo™™Ç à
+™™â ä
$str™™ã ë
,™™ë í!
TransaccionSettings
´´ '
.
´´' (
Default
´´( /
.
´´/ 06
(IdTipoTransaccionOrdenDeAnulacionDeVenta
´´0 X
)
´´X Y
,
´´Y Z
null
´´[ _
,
´´_ `
fechaActual
´´a l
,
´´l m"
TransaccionSettings´´n Å
.´´Å Ç
Default´´Ç â
.´´â ä8
(IdTipoTransaccionOrdenDeAnulacionDeVenta´´ä ≤
,´´≤ ≥
idUnidadDeNegocio
¨¨ %
,
¨¨% &
true
¨¨' +
,
¨¨+ ,
fechaActual
¨¨- 8
,
¨¨8 9
fechaActual
¨¨: E
,
¨¨E F
observaciones
¨¨G T
,
¨¨T U
fechaActual
¨¨V a
,
¨¨a b

idEmpleado
¨¨c m
,
¨¨m n
baseImponible
¨¨o |
,
¨¨| }
idCentroAtencion¨¨~ é
,¨¨é è
idMoneda
≠≠ 
,
≠≠ 
tipoDeCambio
≠≠ *
,
≠≠* +
null
≠≠, 0
,
≠≠0 1
	idCliente
≠≠2 ;
)
≠≠; <
;
≠≠< =#
ordenAnulacionDeVenta
ØØ %
.
ØØ% &
Comprobante
ØØ& 1
=
ØØ2 3
comprobante
ØØ4 ?
;
ØØ? @#
ordenAnulacionDeVenta
±± %
.
±±% &
Transaccion2
±±& 2
=
±±3 4
anulacionDeVenta
±±5 E
;
±±E F#
ordenAnulacionDeVenta
≥≥ %
.
≥≥% &
AgregarDetalles
≥≥& 5
(
≥≥5 6
detalles
≥≥6 >
)
≥≥> ?
;
≥≥? @ 
Estado_transaccion
µµ "-
estadoDeLaOrdenAnulacionDeVenta
µµ# B
=
µµC D
new
µµE H 
Estado_transaccion
µµI [
(
µµ[ \

idEmpleado
µµ\ f
,
µµf g
MaestroSettings
µµh w
.
µµw x
Default
µµx 
.µµ Ä0
 IdDetalleMaestroEstadoConfirmadoµµÄ †
,µµ† °
fechaActual
∂∂ 
,
∂∂  
$str
∂∂! d
)
∂∂d e
;
∂∂e f#
ordenAnulacionDeVenta
∑∑ %
.
∑∑% & 
Estado_transaccion
∑∑& 8
.
∑∑8 9
Add
∑∑9 <
(
∑∑< =-
estadoDeLaOrdenAnulacionDeVenta
∑∑= \
)
∑∑\ ]
;
∑∑] ^#
ordenAnulacionDeVenta
ππ %
.
ππ% &'
id_transaccion_referencia
ππ& ?
=
ππ@ A
idOrdenDeVenta
ππB P
;
ππP Q
anulacionDeVenta
ªª  
.
ªª  !
Transaccion1
ªª! -
.
ªª- .
Add
ªª. 1
(
ªª1 2#
ordenAnulacionDeVenta
ªª2 G
)
ªªG H
;
ªªH I
anulacionDeVenta
ΩΩ  
.
ΩΩ  !'
id_transaccion_referencia
ΩΩ! :
=
ΩΩ; <
idVenta
ΩΩ= D
;
ΩΩD E
Cuota
øø 
cuota
øø 
=
øø 
new
øø !
Cuota
øø" '
(
øø' (2
$ObtenerSiguienteCodigoParaNuevaCuota
øø( L
(
øøL M
false
øøM R
,
øøR S
fechaActual
øøT _
.
øø_ `
Year
øø` d
)
øød e
+
øøf g
$str
øøh k
+
øøl m
$num
øøn o
,
øøo p
fechaActual
øøq |
,
øø| }
fechaActualøø~ â
,øøâ ä%
ordenAnulacionDeVentaøøã †
.øø† °
importe_totaløø° Æ
,øøÆ Ø
$str
¿¿ [
,
¿¿[ \
false
¿¿] b
)
¿¿b c
;
¿¿c d#
ordenAnulacionDeVenta
¡¡ %
.
¡¡% &
Cuota
¡¡& +
.
¡¡+ ,
Add
¡¡, /
(
¡¡/ 0
cuota
¡¡0 5
)
¡¡5 6
;
¡¡6 7
string
√√ 

codigoPago
√√ !
=
√√" #
cuota
√√$ )
.
√√) *
codigo
√√* 0
+
√√1 2
$str
√√3 7
+
√√8 9
$num
√√: ;
.
√√; <
ToString
√√< D
(
√√D E
)
√√E F
;
√√F G
Transaccion
ƒƒ 
pago
ƒƒ  
=
ƒƒ! "
new
ƒƒ# &
Transaccion
ƒƒ' 2
(
ƒƒ2 3

codigoPago
ƒƒ3 =
,
ƒƒ= >
null
ƒƒ? C
,
ƒƒC D
fechaActual
ƒƒE P
,
ƒƒP Q!
TransaccionSettings
ƒƒR e
.
ƒƒe f
Default
ƒƒf m
.
ƒƒm nA
2IdTipoTransaccionSalidaDeDineroPorAnulacionDeVentaƒƒn †
,ƒƒ† °
idUnidadDeNegocio
≈≈ %
,
≈≈% &
true
≈≈' +
,
≈≈+ ,
fechaActual
≈≈- 8
,
≈≈8 9
fechaActual
≈≈: E
,
≈≈E F
$str
≈≈G I
,
≈≈I J
fechaActual
≈≈K V
,
≈≈V W

idEmpleado
≈≈X b
,
≈≈b c
baseImponible
≈≈d q
,
≈≈q r
idCentroAtencion≈≈s É
,≈≈É Ñ
idMoneda
∆∆ 
,
∆∆ 
tipoDeCambio
∆∆ *
,
∆∆* +
null
∆∆, 0
,
∆∆0 1
	idCliente
∆∆2 ;
)
∆∆; <
;
∆∆< =
pago
»» 
.
»» 
Comprobante
»»  
=
»»! "
comprobante
»»# .
;
»». /

Pago_cuota
   
	pagoCuota
   $
=
  % &
new
  ' *

Pago_cuota
  + 5
(
  5 6
)
  6 7
;
  7 8
	pagoCuota
ÀÀ 
.
ÀÀ 
Transaccion
ÀÀ %
=
ÀÀ& '
pago
ÀÀ( ,
;
ÀÀ, -
	pagoCuota
ÃÃ 
.
ÃÃ 
Cuota
ÃÃ 
=
ÃÃ  !
cuota
ÃÃ" '
;
ÃÃ' (
pago
ÕÕ 
.
ÕÕ 

Pago_cuota
ÕÕ 
.
ÕÕ  
Add
ÕÕ  #
(
ÕÕ# $
	pagoCuota
ÕÕ$ -
)
ÕÕ- .
;
ÕÕ. /
if
–– 
(
–– 
idMedioDePago
–– !
==
––" $
MaestroSettings
––% 4
.
––4 5
Default
––5 <
.
––< =1
#IdDetalleMaestroMedioDepagoEfectivo
––= `
)
––` a
{
—— 

Traza_pago
““ 
traza
““ $
=
““% &
new
““' *

Traza_pago
““+ 5
(
““5 6
idMedioDePago
““6 C
,
““C D!
informacionBancaria
““E X
,
““X Y
MaestroSettings
““Z i
.
““i j
Default
““j q
.
““q r8
)IdDetalleMaestroEntidadBancariaPorDefecto““r õ
)““õ ú
;““ú ù
pago
‘‘ 
.
‘‘ 

Traza_pago
‘‘ #
.
‘‘# $
Add
‘‘$ '
(
‘‘' (
traza
‘‘( -
)
‘‘- .
;
‘‘. /
}
’’ 
else
÷÷ 
{
◊◊ 

Traza_pago
ÿÿ 
traza
ÿÿ $
=
ÿÿ% &
new
ÿÿ' *

Traza_pago
ÿÿ+ 5
(
ÿÿ5 6
idMedioDePago
ÿÿ6 C
,
ÿÿC D!
informacionBancaria
ÿÿE X
,
ÿÿX Y!
idEntidadFinanciera
ÿÿZ m
)
ÿÿm n
;
ÿÿn o
pago
ŸŸ 
.
ŸŸ 

Traza_pago
ŸŸ #
.
ŸŸ# $
Add
ŸŸ$ '
(
ŸŸ' (
traza
ŸŸ( -
)
ŸŸ- .
;
ŸŸ. /
}
⁄⁄  
Estado_transaccion
‡‡ "
estadoDelPago
‡‡# 0
=
‡‡1 2
new
‡‡3 6 
Estado_transaccion
‡‡7 I
(
‡‡I J

idEmpleado
‡‡J T
,
‡‡T U
MaestroSettings
‡‡V e
.
‡‡e f
Default
‡‡f m
.
‡‡m n/
 IdDetalleMaestroEstadoConfirmado‡‡n é
,‡‡é è
fechaActual‡‡ê õ
,‡‡õ ú
$str‡‡ù ü
)‡‡ü †
;‡‡† °
pago
·· 
.
··  
Estado_transaccion
·· '
.
··' (
Add
··( +
(
··+ ,
estadoDelPago
··, 9
)
··9 :
;
··: ;
anulacionDeVenta
‰‰  
.
‰‰  !
Transaccion1
‰‰! -
.
‰‰- .
Add
‰‰. 1
(
‰‰1 2
pago
‰‰2 6
)
‰‰6 7
;
‰‰7 8
Transaccion
ÁÁ 0
"entradaMercaderiaPorAnulacionVenta
ÁÁ >
=
ÁÁ? @
new
ÁÁA D
Transaccion
ÁÁE P
(
ÁÁP Q%
codigosOperacion_Logica
ÁÁQ h
.
ÁÁh i4
%ObtenerSiguienteCodigoParaFacturacionÁÁi é
(ÁÁé è
codigoÁÁè ï
+ÁÁñ ó
$strÁÁò ü
,ÁÁü †!
TransaccionSettings
ËË '
.
ËË' (
Default
ËË( /
.
ËË/ 0F
8IdTipoTransaccionIngresoDeMercaderiaPorAnulaci√≥nDeVenta
ËË0 g
)
ËËg h
,
ËËh i
null
ËËj n
,
ËËn o
fechaActual
ËËp {
,
ËË{ |"
TransaccionSettingsËË} ê
.ËËê ë
DefaultËËë ò
.ËËò ôH
8IdTipoTransaccionIngresoDeMercaderiaPorAnulaci√≥nDeVentaËËô –
,ËË– —
idUnidadDeNegocio
ÈÈ %
,
ÈÈ% &
true
ÈÈ' +
,
ÈÈ+ ,
fechaActual
ÈÈ- 8
,
ÈÈ8 9
fechaActual
ÈÈ: E
,
ÈÈE F
observaciones
ÈÈG T
,
ÈÈT U
fechaActual
ÈÈV a
,
ÈÈa b

idEmpleado
ÈÈc m
,
ÈÈm n
baseImponible
ÈÈo |
,
ÈÈ| }
idCentroAtencionÈÈ~ é
,ÈÈé è
idMonedaÈÈê ò
,ÈÈò ô
tipoDeCambioÈÈö ¶
,ÈÈ¶ ß
nullÈÈ® ¨
,ÈÈ¨ ≠
	idClienteÈÈÆ ∑
)ÈÈ∑ ∏
;ÈÈ∏ π0
"entradaMercaderiaPorAnulacionVenta
ÏÏ 2
.
ÏÏ2 3
Comprobante
ÏÏ3 >
=
ÏÏ? @
comprobante
ÏÏA L
;
ÏÏL M0
"entradaMercaderiaPorAnulacionVenta
ÔÔ 2
.
ÔÔ2 3
AgregarDetalles
ÔÔ3 B
(
ÔÔB C!
Detalle_transaccion
ÔÔC V
.
ÔÔV W
Clone
ÔÔW \
(
ÔÔ\ ]
detalles
ÔÔ] e
)
ÔÔe f
)
ÔÔf g
;
ÔÔg h 
Estado_transaccion
ÚÚ "6
(estadoEntradaMercaderiaPorAnulacionVenta
ÚÚ# K
=
ÚÚL M
new
ÚÚN Q 
Estado_transaccion
ÚÚR d
(
ÚÚd e

idEmpleado
ÚÚe o
,
ÚÚo p
MaestroSettingsÚÚq Ä
.ÚÚÄ Å
DefaultÚÚÅ à
.ÚÚà â0
 IdDetalleMaestroEstadoConfirmadoÚÚâ ©
,ÚÚ© ™
fechaActualÚÚ´ ∂
,ÚÚ∂ ∑
$str
ÛÛ y
)
ÛÛy z
;
ÛÛz {0
"entradaMercaderiaPorAnulacionVenta
ˆˆ 2
.
ˆˆ2 3 
Estado_transaccion
ˆˆ3 E
.
ˆˆE F
Add
ˆˆF I
(
ˆˆI J6
(estadoEntradaMercaderiaPorAnulacionVenta
ˆˆJ r
)
ˆˆr s
;
ˆˆs t
anulacionDeVenta
˘˘  
.
˘˘  !
Transaccion1
˘˘! -
.
˘˘- .
Add
˘˘. 1
(
˘˘1 20
"entradaMercaderiaPorAnulacionVenta
˘˘2 T
)
˘˘T U
;
˘˘U V 
Estado_transaccion
¸¸ "$
estadoDeLaOrdenDeVenta
¸¸# 9
=
¸¸: ;
new
¸¸< ? 
Estado_transaccion
¸¸@ R
(
¸¸R S
idOrdenDeVenta
¸¸S a
,
¸¸a b

idEmpleado
¸¸c m
,
¸¸m n
MaestroSettings
¸¸o ~
.
¸¸~ 
Default¸¸ Ü
.¸¸Ü á-
IdDetalleMaestroEstadoAnulado¸¸á §
,¸¸§ •
fechaActual¸¸¶ ±
,¸¸± ≤
$str
˝˝ 9
)
˝˝9 :
;
˝˝: ;
return
ˇˇ F
8AfectarExistenciasGuardarTransaccionyAgregarEstadoCompra
ˇˇ O
(
ˇˇO P
anulacionDeVenta
ˇˇP `
,
ˇˇ` a
detalles
ˇˇb j
,
ˇˇj k
idCentroAtencion
ˇˇl |
,
ˇˇ| }%
estadoDeLaOrdenDeVentaˇˇ~ î
)ˇˇî ï
;ˇˇï ñ
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
e
ÇÇ 
)
ÇÇ 
{
ÉÉ 
return
ÑÑ 
new
ÑÑ 
OperationResult
ÑÑ *
(
ÑÑ* +
new
ÑÑ+ .
	Exception
ÑÑ/ 8
(
ÑÑ8 9
$str
ÑÑ9 c
,
ÑÑc d
e
ÑÑe f
)
ÑÑf g
)
ÑÑg h
;
ÑÑh i
}
ÖÖ 
}
áá 	
public
àà 
OperationResult
àà '
InvalidarAnulacionDeVenta
àà 8
(
àà8 9
long
àà9 =%
idOrdenAnulacionDeVenta
àà> U
,
ààU V
int
ààW Z

idEmpleado
àà[ e
,
ààe f
int
ààg j
idCentroAtencion
ààk {
,
àà{ |
stringàà} É
observacionesààÑ ë
)ààë í
{
ââ 	
try
ää 
{
ãã 
int
åå 
idMoneda
åå 
=
åå 
MaestroSettings
åå .
.
åå. /
Default
åå/ 6
.
åå6 7)
IdDetalleMaestroMonedaSoles
åå7 R
;
ååR S
DateTime
çç 
fechaActual
çç $
=
çç% &
DateTimeUtil
çç' 3
.
çç3 4
FechaActual
çç4 ?
(
çç? @
)
çç@ A
;
ççA B
	Operacion
êê 
operacionGenerica
êê +
=
êê, -
new
êê. 1
	Operacion
êê2 ;
(
êê; <$
transaccionRepositorio
êê< R
.
êêR S&
ObtenerUltimaTransaccion
êêS k
(
êêk l!
TransaccionSettings
êêl 
.êê Ä
DefaultêêÄ á
.êêá à*
IdTipoTransaccionOperacionêêà ¢
)êê¢ £
)êê£ §
;êê§ •
int
íí 
idUnidadDeNegocio
íí %
=
íí& '
operacionGenerica
íí( 9
.
íí9 :
IdUnidadNegocio
íí: I
;
ííI J
string
îî 
codigo
îî 
=
îî %
codigosOperacion_Logica
îî  7
.
îî7 83
%ObtenerSiguienteCodigoParaFacturacion
îî8 ]
(
îî] ^
$str
îî^ c
,
îîc d!
TransaccionSettings
îîe x
.
îîx y
Defaultîîy Ä
.îîÄ Å?
/IdTipoTransaccionInvalidacionDeAnulacionDeVentaîîÅ ∞
)îî∞ ±
;îî± ≤
permisos_Logica
óó 
.
óó  
ValidarAccion
óó  -
(
óó- .

idEmpleado
óó. 8
,
óó8 9
MaestroSettings
óó: I
.
óóI J
Default
óóJ Q
.
óóQ R-
IdDetalleMaestroAccionInvalidar
óóR q
,
óóq r"
TransaccionSettingsóós Ü
.óóÜ á
Defaultóóá é
.óóé è8
(IdTipoTransaccionOrdenDeAnulacionDeVentaóóè ∑
,óó∑ ∏
idUnidadDeNegocio
òò %
)
òò% &
;
òò& '%
OrdenDeAnulacionDeVenta
õõ '#
ordenAnulacionDeVenta
õõ( =
=
õõ> ?
new
õõ@ C%
OrdenDeAnulacionDeVenta
õõD [
(
õõ[ \$
transaccionRepositorio
õõ\ r
.
õõr s1
"ObtenerTransaccionInclusiveEstadosõõs ï
(õõï ñ'
idOrdenAnulacionDeVentaõõñ ≠
)õõ≠ Æ
)õõÆ Ø
;õõØ ∞
decimal
ûû 
tipoDeCambio
ûû $
=
ûû% &#
ordenAnulacionDeVenta
ûû' <
.
ûû< =
TipoDeCambio
ûû= I
;
ûûI J
int
üü 
	idCliente
üü 
=
üü #
ordenAnulacionDeVenta
üü  5
.
üü5 6
Cliente
üü6 =
(
üü= >
)
üü> ?
.
üü? @
Id
üü@ B
;
üüB C
long
†† 
idAnulacionVenta
†† %
=
††& '#
ordenAnulacionDeVenta
††( =
.
††= >
IdVenta
††> E
;
††E F
List
¢¢ 
<
¢¢ !
Detalle_transaccion
¢¢ (
>
¢¢( )
detalles
¢¢* 2
=
¢¢3 4
new
¢¢5 8
List
¢¢9 =
<
¢¢= >!
Detalle_transaccion
¢¢> Q
>
¢¢Q R
(
¢¢R S
)
¢¢S T
;
¢¢T U
foreach
££ 
(
££ 
var
££ 
detalle
££ $
in
££% '#
ordenAnulacionDeVenta
££( =
.
££= >
Detalles
££> F
(
££F G
)
££G H
)
££H I
{
§§ 
detalles
•• 
.
•• 
Add
••  
(
••  !
new
••! $!
Detalle_transaccion
••% 8
(
••8 9
detalle
••9 @
.
••@ A
Cantidad
••A I
,
••I J
detalle
••K R
.
••R S
Producto
••S [
.
••[ \
Id
••\ ^
,
••^ _
$str
••` b
,
••b c
detalle
••d k
.
••k l
PrecioUnitario
••l z
,
••z {
detalle••| É
.••É Ñ
Importe••Ñ ã
,••ã å
null••ç ë
,••ë í
$num••ì î
,••î ï
null
¶¶ 
,
¶¶ 
null
¶¶ "
,
¶¶" #
$num
¶¶$ %
,
¶¶% &
detalle
¶¶' .
.
¶¶. /
Igv
¶¶/ 2
,
¶¶2 3
detalle
¶¶4 ;
.
¶¶; <
	Descuento
¶¶< E
)
¶¶E F
)
¶¶F G
;
¶¶G H
}
ßß 
var
®® 
baseImponible
®® !
=
®®" #
detalles
®®$ ,
.
®®, -
Sum
®®- 0
(
®®0 1
d
®®1 2
=>
®®3 5
d
®®6 7
.
®®7 8
total
®®8 =
)
®®= >
;
®®> ?
Serie_comprobante
´´ !
serie
´´" '
=
´´( )$
transaccionRepositorio
´´* @
.
´´@ AN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante´´A Ä
(´´Ä Å
MaestroSettings´´Å ê
.´´ê ë
Default´´ë ò
.´´ò ôI
9IdDetalleMaestroComprobanteNotaInvalidacionAnulacionVenta´´ô “
,´´“ ” 
idCentroAtencion´´‘ ‰
)´´‰ Â
;´´Â Ê
Comprobante
≠≠ 
comprobante
≠≠ '
=
≠≠( )
new
≠≠* -
Comprobante
≠≠. 9
(
≠≠9 :
serie
≠≠: ?
.
≠≠? @!
id_tipo_comprobante
≠≠@ S
,
≠≠S T
serie
≠≠U Z
.
≠≠Z [
id
≠≠[ ]
,
≠≠] ^
serie
≠≠_ d
.
≠≠d e
proximo_numero
≠≠e s
,
≠≠s t
true
≠≠u y
,
≠≠y z
serie≠≠{ Ä
.≠≠Ä Å
numero≠≠Å á
)≠≠á à
;≠≠à â
serie
ØØ 
.
ØØ 
proximo_numero
ØØ $
++
ØØ$ &
;
ØØ& '
Transaccion
≤≤ ,
invalidacionDeAnulacionDeVenta
≤≤ :
=
≤≤; <
new
≤≤= @
Transaccion
≤≤A L
(
≤≤L M
codigo
≤≤M S
,
≤≤S T
operacionGenerica
≤≤U f
.
≤≤f g
Id
≤≤g i
,
≤≤i j
fechaActual
≤≤k v
,
≤≤v w"
TransaccionSettings≤≤x ã
.≤≤ã å
Default≤≤å ì
.≤≤ì î?
/IdTipoTransaccionInvalidacionDeAnulacionDeVenta≤≤î √
,≤≤√ ƒ
idUnidadDeNegocio
≥≥ %
,
≥≥% &
true
≥≥' +
,
≥≥+ ,
fechaActual
≥≥- 8
,
≥≥8 9
fechaActual
≥≥: E
,
≥≥E F
observaciones
≥≥G T
,
≥≥T U
fechaActual
≥≥V a
,
≥≥a b

idEmpleado
≥≥c m
,
≥≥m n
baseImponible
≥≥o |
,
≥≥| }
idCentroAtencion
¥¥ $
,
¥¥$ %
idMoneda
¥¥& .
,
¥¥. /
tipoDeCambio
¥¥0 <
,
¥¥< =
null
¥¥> B
,
¥¥B C
	idCliente
¥¥D M
)
¥¥M N
;
¥¥N O,
invalidacionDeAnulacionDeVenta
∂∂ .
.
∂∂. /
Comprobante
∂∂/ :
=
∂∂; <
comprobante
∂∂= H
;
∂∂H I
Transaccion
∏∏ 1
#ordenInvalidacionDeAnulacionDeVenta
∏∏ ?
=
∏∏@ A
new
∏∏B E
Transaccion
∏∏F Q
(
∏∏Q R%
codigosOperacion_Logica
∏∏R i
.
∏∏i j4
%ObtenerSiguienteCodigoParaFacturacion∏∏j è
(∏∏è ê
codigo∏∏ê ñ
+∏∏ó ò
$str∏∏ô †
,∏∏† °!
TransaccionSettings
ππ '
.
ππ' (
Default
ππ( /
.
ππ/ 09
+IdTipoTransaccionOrdenDeInvalidacionDeVenta
ππ0 [
)
ππ[ \
,
ππ\ ]
null
ππ^ b
,
ππb c
fechaActual
ππd o
,
ππo p"
TransaccionSettingsππq Ñ
.ππÑ Ö
DefaultππÖ å
.ππå ç;
+IdTipoTransaccionOrdenDeInvalidacionDeVentaππç ∏
,ππ∏ π
idUnidadDeNegocio
∫∫ %
,
∫∫% &
true
∫∫' +
,
∫∫+ ,
fechaActual
∫∫- 8
,
∫∫8 9
fechaActual
∫∫: E
,
∫∫E F
observaciones
∫∫G T
,
∫∫T U
fechaActual
∫∫V a
,
∫∫a b

idEmpleado
∫∫c m
,
∫∫m n
baseImponible
∫∫o |
,
∫∫| }
idCentroAtencion∫∫~ é
,∫∫é è
idMoneda
ªª 
,
ªª 
tipoDeCambio
ªª *
,
ªª* +
null
ªª, 0
,
ªª0 1
	idCliente
ªª2 ;
)
ªª; <
;
ªª< =1
#ordenInvalidacionDeAnulacionDeVenta
ΩΩ 3
.
ΩΩ3 4
Comprobante
ΩΩ4 ?
=
ΩΩ@ A
comprobante
ΩΩB M
;
ΩΩM N1
#ordenInvalidacionDeAnulacionDeVenta
øø 3
.
øø3 4
Transaccion2
øø4 @
=
øøA B,
invalidacionDeAnulacionDeVenta
øøC a
;
øøa b1
#ordenInvalidacionDeAnulacionDeVenta
¡¡ 3
.
¡¡3 4
AgregarDetalles
¡¡4 C
(
¡¡C D
detalles
¡¡D L
)
¡¡L M
;
¡¡M N 
Estado_transaccion
√√ ";
-estadoDeLaOrdenInvalidacionDeAnulacionDeVenta
√√# P
=
√√Q R
new
√√S V 
Estado_transaccion
√√W i
(
√√i j

idEmpleado
√√j t
,
√√t u
MaestroSettings√√v Ö
.√√Ö Ü
Default√√Ü ç
.√√ç é0
 IdDetalleMaestroEstadoConfirmado√√é Æ
,√√Æ Ø
fechaActual
ƒƒ 
,
ƒƒ  
$strƒƒ! Ä
)ƒƒÄ Å
;ƒƒÅ Ç1
#ordenInvalidacionDeAnulacionDeVenta
≈≈ 3
.
≈≈3 4 
Estado_transaccion
≈≈4 F
.
≈≈F G
Add
≈≈G J
(
≈≈J K;
-estadoDeLaOrdenInvalidacionDeAnulacionDeVenta
≈≈K x
)
≈≈x y
;
≈≈y z1
#ordenInvalidacionDeAnulacionDeVenta
»» 3
.
»»3 4'
id_transaccion_referencia
»»4 M
=
»»N O%
idOrdenAnulacionDeVenta
»»P g
;
»»g h,
invalidacionDeAnulacionDeVenta
ÀÀ .
.
ÀÀ. /
Transaccion1
ÀÀ/ ;
.
ÀÀ; <
Add
ÀÀ< ?
(
ÀÀ? @1
#ordenInvalidacionDeAnulacionDeVenta
ÀÀ@ c
)
ÀÀc d
;
ÀÀd e,
invalidacionDeAnulacionDeVenta
ŒŒ .
.
ŒŒ. /'
id_transaccion_referencia
ŒŒ/ H
=
ŒŒI J
idAnulacionVenta
ŒŒK [
;
ŒŒ[ \
Cuota
—— 
cuota
—— 
=
—— 
new
—— !
Cuota
——" '
(
——' (2
$ObtenerSiguienteCodigoParaNuevaCuota
——( L
(
——L M
true
——M Q
,
——Q R
fechaActual
——S ^
.
——^ _
Year
——_ c
)
——c d
+
——e f
$str
——g j
+
——k l
$num
——m n
,
——n o
fechaActual
——p {
,
——{ |
fechaActual——} à
,——à â3
#ordenInvalidacionDeAnulacionDeVenta——ä ≠
.——≠ Æ
importe_total——Æ ª
,——ª º
$str
““ `
,
““` a
true
““b f
)
““f g
;
““g h
cuota
”” 
.
”” 
Estado_cuota
”” "
.
””" #
Add
””# &
(
””& '
new
””' *
Estado_cuota
””+ 7
(
””7 8

idEmpleado
””8 B
,
””B C
MaestroSettings
””D S
.
””S T
Default
””T [
.
””[ \.
 IdDetalleMaestroEstadoConfirmado
””\ |
,
””| }
fechaActual””~ â
,””â ä
$str””ã ç
)””ç é
)””é è
;””è ê1
#ordenInvalidacionDeAnulacionDeVenta
‘‘ 3
.
‘‘3 4
Cuota
‘‘4 9
.
‘‘9 :
Add
‘‘: =
(
‘‘= >
cuota
‘‘> C
)
‘‘C D
;
‘‘D E
string
◊◊ 

codigoPago
◊◊ !
=
◊◊" #
cuota
◊◊$ )
.
◊◊) *
codigo
◊◊* 0
+
◊◊1 2
$str
◊◊3 7
+
◊◊8 9
$num
◊◊: ;
.
◊◊; <
ToString
◊◊< D
(
◊◊D E
)
◊◊E F
;
◊◊F G
Transaccion
ÿÿ 
pago
ÿÿ  
=
ÿÿ! "
new
ÿÿ# &
Transaccion
ÿÿ' 2
(
ÿÿ2 3

codigoPago
ÿÿ3 =
,
ÿÿ= >
null
ÿÿ? C
,
ÿÿC D
fechaActual
ÿÿE P
,
ÿÿP Q!
TransaccionSettings
ÿÿR e
.
ÿÿe f
Default
ÿÿf m
.
ÿÿm nI
:IdTipoTransaccionIngresoDineroInvalidacionDeAnulacionVentaÿÿn ®
,ÿÿ® ©
idUnidadDeNegocio
ŸŸ %
,
ŸŸ% &
true
ŸŸ' +
,
ŸŸ+ ,
fechaActual
ŸŸ- 8
,
ŸŸ8 9
fechaActual
ŸŸ: E
,
ŸŸE F
$str
ŸŸG I
,
ŸŸI J
fechaActual
ŸŸK V
,
ŸŸV W

idEmpleado
ŸŸX b
,
ŸŸb c
baseImponible
ŸŸd q
,
ŸŸq r
idCentroAtencionŸŸs É
,ŸŸÉ Ñ
idMoneda
⁄⁄ 
,
⁄⁄ 
tipoDeCambio
⁄⁄ *
,
⁄⁄* +
null
⁄⁄, 0
,
⁄⁄0 1
	idCliente
⁄⁄2 ;
)
⁄⁄; <
;
⁄⁄< =
pago
‹‹ 
.
‹‹ 
Comprobante
‹‹  
=
‹‹! "
comprobante
‹‹# .
;
‹‹. /

Pago_cuota
ﬁﬁ 
	pagoCuota
ﬁﬁ $
=
ﬁﬁ% &
new
ﬁﬁ' *

Pago_cuota
ﬁﬁ+ 5
(
ﬁﬁ5 6
)
ﬁﬁ6 7
;
ﬁﬁ7 8
	pagoCuota
ﬂﬂ 
.
ﬂﬂ 
Transaccion
ﬂﬂ %
=
ﬂﬂ& '
pago
ﬂﬂ( ,
;
ﬂﬂ, -
	pagoCuota
‡‡ 
.
‡‡ 
Cuota
‡‡ 
=
‡‡  !
cuota
‡‡" '
;
‡‡' (
pago
·· 
.
·· 

Pago_cuota
·· 
.
··  
Add
··  #
(
··# $
	pagoCuota
··$ -
)
··- .
;
··. /

Traza_pago
„„ 
traza
„„  
=
„„! "
new
„„# &

Traza_pago
„„' 1
(
„„1 2
MaestroSettings
„„2 A
.
„„A B
Default
„„B I
.
„„I J1
#IdDetalleMaestroMedioDepagoEfectivo
„„J m
,
„„m n
$str
„„o ~
,
„„~ 
MaestroSettings„„Ä è
.„„è ê
Default„„ê ó
.„„ó ò9
)IdDetalleMaestroEntidadBancariaPorDefecto„„ò ¡
)„„¡ ¬
;„„¬ √
pago
‰‰ 
.
‰‰ 

Traza_pago
‰‰ 
.
‰‰  
Add
‰‰  #
(
‰‰# $
traza
‰‰$ )
)
‰‰) *
;
‰‰* + 
Estado_transaccion
ÁÁ "
estadoDelPago
ÁÁ# 0
=
ÁÁ1 2
new
ÁÁ3 6 
Estado_transaccion
ÁÁ7 I
(
ÁÁI J

idEmpleado
ÁÁJ T
,
ÁÁT U
MaestroSettings
ÁÁV e
.
ÁÁe f
Default
ÁÁf m
.
ÁÁm n/
 IdDetalleMaestroEstadoConfirmadoÁÁn é
,ÁÁé è
fechaActualÁÁê õ
,ÁÁõ ú
$strÁÁù ü
)ÁÁü †
;ÁÁ† °
pago
ËË 
.
ËË  
Estado_transaccion
ËË '
.
ËË' (
Add
ËË( +
(
ËË+ ,
estadoDelPago
ËË, 9
)
ËË9 :
;
ËË: ;,
invalidacionDeAnulacionDeVenta
ÎÎ .
.
ÎÎ. /
Transaccion1
ÎÎ/ ;
.
ÎÎ; <
Add
ÎÎ< ?
(
ÎÎ? @
pago
ÎÎ@ D
)
ÎÎD E
;
ÎÎE F
Transaccion
ÓÓ B
4salidadDeMercaderiaPorInvalidacionDeAnulacionDeVenta
ÓÓ P
=
ÓÓQ R
new
ÓÓS V
Transaccion
ÓÓW b
(
ÓÓb c%
codigosOperacion_Logica
ÓÓc z
.
ÓÓz {4
%ObtenerSiguienteCodigoParaFacturacionÓÓ{ †
(ÓÓ† °
codigoÓÓ° ß
+ÓÓ® ©
$strÓÓ™ ≤
,ÓÓ≤ ≥!
TransaccionSettings
ÔÔ '
.
ÔÔ' (
Default
ÔÔ( /
.
ÔÔ/ 0G
9IdTipoTransaccionSalidaMercadInvalidacionDeAnulacionVenta
ÔÔ0 i
)
ÔÔi j
,
ÔÔj k
null
ÔÔl p
,
ÔÔp q
fechaActual
ÔÔr }
,
ÔÔ} ~"
TransaccionSettingsÔÔ í
.ÔÔí ì
DefaultÔÔì ö
.ÔÔö õI
9IdTipoTransaccionSalidaMercadInvalidacionDeAnulacionVentaÔÔõ ‘
,ÔÔ‘ ’
idUnidadDeNegocio
 %
,
% &
true
' +
,
+ ,
fechaActual
- 8
,
8 9
fechaActual
: E
,
E F
observaciones
G T
,
T U
fechaActual
V a
,
a b

idEmpleado
c m
,
m n
baseImponible
o |
,
| }
idCentroAtencion~ é
,é è
idMonedaê ò
,ò ô
tipoDeCambioö ¶
,¶ ß
null® ¨
,¨ ≠
	idClienteÆ ∑
)∑ ∏
;∏ πB
4salidadDeMercaderiaPorInvalidacionDeAnulacionDeVenta
ÛÛ D
.
ÛÛD E
Comprobante
ÛÛE P
=
ÛÛQ R
comprobante
ÛÛS ^
;
ÛÛ^ _B
4salidadDeMercaderiaPorInvalidacionDeAnulacionDeVenta
ˆˆ D
.
ˆˆD E
AgregarDetalles
ˆˆE T
(
ˆˆT U!
Detalle_transaccion
ˆˆU h
.
ˆˆh i
Clone
ˆˆi n
(
ˆˆn o
detalles
ˆˆo w
)
ˆˆw x
)
ˆˆx y
;
ˆˆy z 
Estado_transaccion
˘˘ "C
5estadoSalidaMercaderiaPorInvalidacionDeAnulacionVenta
˘˘# X
=
˘˘Y Z
new
˘˘[ ^ 
Estado_transaccion
˘˘_ q
(
˘˘q r

idEmpleado
˘˘r |
,
˘˘| }
MaestroSettings˘˘~ ç
.˘˘ç é
Default˘˘é ï
.˘˘ï ñ0
 IdDetalleMaestroEstadoConfirmado˘˘ñ ∂
,˘˘∂ ∑
fechaActual˘˘∏ √
,˘˘√ ƒ
$str˙˙ ä
)˙˙ä ã
;˙˙ã åB
4salidadDeMercaderiaPorInvalidacionDeAnulacionDeVenta
˝˝ D
.
˝˝D E 
Estado_transaccion
˝˝E W
.
˝˝W X
Add
˝˝X [
(
˝˝[ \D
5estadoSalidaMercaderiaPorInvalidacionDeAnulacionVenta˝˝\ ë
)˝˝ë í
;˝˝í ì,
invalidacionDeAnulacionDeVenta
ÄÄ .
.
ÄÄ. /
Transaccion1
ÄÄ/ ;
.
ÄÄ; <
Add
ÄÄ< ?
(
ÄÄ? @B
4salidadDeMercaderiaPorInvalidacionDeAnulacionDeVenta
ÄÄ@ t
)
ÄÄt u
;
ÄÄu v 
Estado_transaccion
ÉÉ "/
!estadoDeLaOrdenDeAnulacionDeVenta
ÉÉ# D
=
ÉÉE F
new
ÉÉG J 
Estado_transaccion
ÉÉK ]
(
ÉÉ] ^%
idOrdenAnulacionDeVenta
ÉÉ^ u
,
ÉÉu v

idEmpleadoÉÉw Å
,ÉÉÅ Ç
MaestroSettingsÉÉÉ í
.ÉÉí ì
DefaultÉÉì ö
.ÉÉö õ-
IdDetalleMaestroEstadoAnuladoÉÉõ ∏
,ÉÉ∏ π
fechaActualÉÉ∫ ≈
,ÉÉ≈ ∆
$str
ÑÑ I
)
ÑÑI J
;
ÑÑJ K
return
ÜÜ F
8AfectarExistenciasGuardarTransaccionyAgregarEstadoCompra
ÜÜ O
(
ÜÜO P,
invalidacionDeAnulacionDeVenta
ÜÜP n
,
ÜÜn o
detalles
ÜÜp x
,
ÜÜx y
idCentroAtencionÜÜz ä
,ÜÜä ã1
!estadoDeLaOrdenDeAnulacionDeVentaÜÜå ≠
)ÜÜ≠ Æ
;ÜÜÆ Ø
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
return
ãã 
new
ãã 
OperationResult
ãã *
(
ãã* +
new
ãã+ .
	Exception
ãã/ 8
(
ãã8 9
$str
ãã9 c
,
ããc d
e
ããe f
)
ããf g
)
ããg h
;
ããh i
}
åå 
}
éé 	
OperationResult
êê F
8AfectarExistenciasGuardarTransaccionyAgregarEstadoCompra
êê P
(
êêP Q
Transaccion
êêQ \
OperacionDeCompra
êê] n
,
êên o
List
êêp t
<
êêt u"
Detalle_transaccionêêu à
>êêà â
detallesêêä í
,êêí ì
intêêî ó 
idCentroAtencionêêò ®
,êê® ©"
Estado_transaccionêê™ º
estadoêêΩ √
)êê√ ƒ
{
ëë 	
OperationResult
íí 
result
íí "
;
íí" #
do
ìì 
{
îî 
List
ññ 
<
ññ 

Existencia
ññ 
>
ññ  
existencias
ññ! ,
=
ññ- .
new
ññ/ 2
List
ññ3 7
<
ññ7 8

Existencia
ññ8 B
>
ññB C
(
ññC D
)
ññD E
;
ññE F
int
óó 
	idAlmacen
óó 
=
óó  
AplicacionSettings
óó  2
.
óó2 3
Default
óó3 :
.
óó: ;
StockCentralizado
óó; L
?
óóM N
ActorSettings
óóO \
.
óó\ ]
Default
óó] d
.
óód e 
IdActorNegocioSede
óóe w
:
óóx y
idCentroAtencionóóz ä
;óóä ã
existencias
ôô 
=
ôô $
transaccionRepositorio
ôô 4
.
ôô4 5 
ObtenerExistencias
ôô5 G
(
ôôG H
detalles
ôôH P
.
ôôP Q
Select
ôôQ W
(
ôôW X
d
ôôX Y
=>
ôôZ \
d
ôô] ^
.
ôô^ _!
id_concepto_negocio
ôô_ r
)
ôôr s
.
ôôs t
ToArray
ôôt {
(
ôô{ |
)
ôô| }
,
ôô} ~
	idAlmacenôô à
)ôôà â
;ôôâ ä
foreach
õõ 
(
õõ 
var
õõ 
detalle
õõ $
in
õõ% '
detalles
õõ( 0
)
õõ0 1
{
úú 
var
ùù 

existencia
ùù "
=
ùù# $
existencias
ùù% 0
.
ùù0 1
Single
ùù1 7
(
ùù7 8
e
ùù8 9
=>
ùù: <
e
ùù= >
.
ùù> ?
id_punto_atencion
ùù? P
==
ùùQ S
	idAlmacen
ùùT ]
&&
ùù^ `
e
ùùa b
.
ùùb c!
id_concepto_negocio
ùùc v
==
ùùw y
detalleùùz Å
.ùùÅ Ç#
id_concepto_negocioùùÇ ï
)ùùï ñ
;ùùñ ó
if
üü 
(
üü 
OperacionDeCompra
üü )
.
üü) *!
id_tipo_transaccion
üü* =
==
üü> @!
TransaccionSettings
üüA T
.
üüT U
Default
üüU \
.
üü\ ]?
0IdTipoTransaccionInvalidacionDeAnulacionDeCompraüü] ç
)üüç é
{
†† 

existencia
°° "
.
°°" #
existencia1
°°# .
+=
°°/ 1
detalle
°°2 9
.
°°9 :
cantidad
°°: B
;
°°B C
}
¢¢ 
else
££ 
{
§§ 

existencia
•• "
.
••" #
existencia1
••# .
-=
••/ 1
detalle
••2 9
.
••9 :
cantidad
••: B
;
••B C
}
¶¶ 
}
ßß 
result
®® 
=
®® $
transaccionRepositorio
®® /
.
®®/ 0A
3CrearTransaccionAgregarEstadoYActualizarExistencias
®®0 c
(
®®c d
OperacionDeCompra
®®d u
,
®®u v
existencias®®w Ç
,®®Ç É
estado®®Ñ ä
)®®ä ã
;®®ã å
}
©© 
while
™™ 
(
™™ 
result
™™ 
.
™™ 
code_result
™™ %
==
™™& (!
OperationResultEnum
™™) <
.
™™< =
Error
™™= B
&&
™™C E
result
™™F L
.
™™L M

exceptions
™™M W
.
™™W X
FirstOrDefault
™™X f
(
™™f g
)
™™g h
.
™™h i
GetType
™™i p
(
™™p q
)
™™q r
==
™™s u
typeof
™™v |
(
™™| }"
ExistenciaException™™} ê
)™™ê ë
)™™ë í
;™™í ì
return
≠≠ 
result
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
≥≥ 
List
≥≥ 
<
≥≥ ?
1TransaccionAgrupadoPorSerieConNumeracionInicioFin
≥≥ E
>
≥≥E FS
DObtenerResumenDeComprobantesConfirmadosDeOperacionesDeVentasPorSerie≥≥G ã
(≥≥ã å
int≥≥å è
[≥≥è ê
]≥≥ê ë!
idsPuntosDeVentas≥≥í £
,≥≥£ §
DateTime≥≥• ≠

fechaDesde≥≥Æ ∏
,≥≥∏ π
DateTime≥≥∫ ¬

fechaHasta≥≥√ Õ
)≥≥Õ Œ
{
¥¥ 	
try
µµ 
{
∂∂ 
var
∑∑ 
	resultado
∑∑ 
=
∑∑ $
transaccionRepositorio
∑∑  6
.
∑∑6 73
%ObtenerTransaccionesAgrupadasPorSerie
∑∑7 \
(
∑∑\ ]
idsPuntosDeVentas
∑∑] n
,
∑∑n o
Diccionario
∑∑p {
.
∑∑{ |R
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones∑∑| ø
,∑∑ø ¿
MaestroSettings∑∑¡ –
.∑∑– —
Default∑∑— ÿ
.∑∑ÿ Ÿ0
 IdDetalleMaestroEstadoConfirmado∑∑Ÿ ˘
,∑∑˘ ˙

fechaDesde∑∑˚ Ö
,∑∑Ö Ü

fechaHasta∑∑á ë
)∑∑ë í
.∑∑í ì
ToList∑∑ì ô
(∑∑ô ö
)∑∑ö õ
;∑∑õ ú
return
ππ 
	resultado
ππ  
;
ππ  !
}
∫∫ 
catch
ªª 
(
ªª 
LogicaException
ªª "
e
ªª# $
)
ªª$ %
{
ºº 
throw
ΩΩ 
new
ΩΩ 
LogicaException
ΩΩ )
(
ΩΩ) *
$strΩΩ* Ö
,ΩΩÖ Ü
eΩΩá à
)ΩΩà â
;ΩΩâ ä
}
ææ 
}
øø 	
public
¡¡ 
List
¡¡ 
<
¡¡ A
3TransaccionAgrupadoPorSerieConNumeracionConcatenada
¡¡ G
>
¡¡G HS
DObtenerResumenDeComprobantesInvalidadosDeOperacionesDeVentasPorSerie¡¡I ç
(¡¡ç é
int¡¡é ë
[¡¡ë í
]¡¡í ì!
idsPuntosDeVentas¡¡î •
,¡¡• ¶
DateTime¡¡ß Ø

fechaDesde¡¡∞ ∫
,¡¡∫ ª
DateTime¡¡º ƒ

fechaHasta¡¡≈ œ
)¡¡œ –
{
¬¬ 	
try
√√ 
{
ƒƒ 
var
≈≈ 
	resultado
≈≈ 
=
≈≈ $
transaccionRepositorio
≈≈  6
.
≈≈6 74
&ObtenerTransaccionesAgrupadasPorSerie_
≈≈7 ]
(
≈≈] ^
idsPuntosDeVentas
≈≈^ o
,
≈≈o p
Diccionario
≈≈q |
.
≈≈| }=
.TiposDeTransaccionOrdenesDeOperacionesDeVentas≈≈} ´
,≈≈´ ¨
MaestroSettings≈≈≠ º
.≈≈º Ω
Default≈≈Ω ƒ
.≈≈ƒ ≈0
 IdDetalleMaestroEstadoInvalidado≈≈≈ Â
,≈≈Â Ê

fechaDesde≈≈Á Ò
,≈≈Ò Ú

fechaHasta≈≈Û ˝
)≈≈˝ ˛
.≈≈˛ ˇ
ToList≈≈ˇ Ö
(≈≈Ö Ü
)≈≈Ü á
;≈≈á à
return
∆∆ 
	resultado
∆∆  
;
∆∆  !
}
«« 
catch
»» 
(
»» 
	Exception
»» 
e
»» 
)
»» 
{
…… 
throw
   
new
   
LogicaException
   )
(
  ) *
$str  * Ö
,  Ö Ü
e  á à
)  à â
;  â ä
}
ÀÀ 
}
ÕÕ 	
public
‘‘ %
Transaccion_consolidada
‘‘ &Q
CObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConIdMayorA
‘‘' j
(
‘‘j k
int
‘‘k n

idEmpleado
‘‘o y
,
‘‘y z
int
‘‘{ ~
idSerie‘‘ Ü
,‘‘Ü á
DateTime‘‘à ê
fechaInicio‘‘ë ú
,‘‘ú ù
DateTime‘‘û ¶
fechaFin‘‘ß Ø
,‘‘Ø ∞
long‘‘± µ
idMinimo‘‘∂ æ
)‘‘æ ø
{
’’ 	
return
÷÷ $
transaccionRepositorio
÷÷ )
.
÷÷) *2
$ObtenerResumenTransaccionesDespuesDe
÷÷* N
(
÷÷N O!
TransaccionSettings
÷÷O b
.
÷÷b c
Default
÷÷c j
.
÷÷j k,
IdTipoTransaccionOrdenDeVenta÷÷k à
,÷÷à â
MaestroSettings÷÷ä ô
.÷÷ô ö
Default÷÷ö °
.÷÷° ¢0
 IdDetalleMaestroEstadoConfirmado÷÷¢ ¬
,÷÷¬ √
fechaInicio÷÷ƒ œ
,÷÷œ –
fechaFin÷÷— Ÿ
,÷÷Ÿ ⁄
idSerie÷÷€ ‚
,÷÷‚ „
idMinimo÷÷‰ Ï
)÷÷Ï Ì
;÷÷Ì Ó
}
◊◊ 	
public
ŸŸ %
Transaccion_consolidada
ŸŸ &X
JObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConIdMayorAYMenorA
ŸŸ' q
(
ŸŸq r
int
ŸŸr u

idEmpleadoŸŸv Ä
,ŸŸÄ Å
intŸŸÇ Ö
idSerieŸŸÜ ç
,ŸŸç é
DateTimeŸŸè ó
fechaInicioŸŸò £
,ŸŸ£ §
DateTimeŸŸ• ≠
fechaFinŸŸÆ ∂
,ŸŸ∂ ∑
longŸŸ∏ º
idMinimoŸŸΩ ≈
,ŸŸ≈ ∆
longŸŸ« À
idMaximoŸŸÃ ‘
)ŸŸ‘ ’
{
⁄⁄ 	
return
‹‹ $
transaccionRepositorio
‹‹ )
.
‹‹) *.
 ObtenerResumenTransaccionesEntre
‹‹* J
(
‹‹J K!
TransaccionSettings
‹‹K ^
.
‹‹^ _
Default
‹‹_ f
.
‹‹f g,
IdTipoTransaccionOrdenDeVenta‹‹g Ñ
,‹‹Ñ Ö
MaestroSettings‹‹Ü ï
.‹‹ï ñ
Default‹‹ñ ù
.‹‹ù û0
 IdDetalleMaestroEstadoConfirmado‹‹û æ
,‹‹æ ø
fechaInicio‹‹¿ À
,‹‹À Ã
fechaFin‹‹Õ ’
,‹‹’ ÷
idSerie‹‹◊ ﬁ
,‹‹ﬁ ﬂ
idMinimo‹‹‡ Ë
,‹‹Ë È
idMaximo‹‹Í Ú
)‹‹Ú Û
;‹‹Û Ù
}
›› 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ %
Transaccion_consolidada
ﬂﬂ +
>
ﬂﬂ+ ,X
JObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConIdMayorAYMenorA
ﬂﬂ- w
(
ﬂﬂw x
int
ﬂﬂx {

idEmpleadoﬂﬂ| Ü
,ﬂﬂÜ á
intﬂﬂà ã
idSerieﬂﬂå ì
,ﬂﬂì î
longﬂﬂï ô
idMinimoﬂﬂö ¢
,ﬂﬂ¢ £
longﬂﬂ§ ®
idMaximoﬂﬂ© ±
)ﬂﬂ± ≤
{
‡‡ 	
return
ÂÂ $
transaccionRepositorio
ÂÂ )
.
ÂÂ) *3
%ObtenerTransaccionesConsolidadasEntre
ÂÂ* O
(
ÂÂO P!
TransaccionSettings
ÂÂP c
.
ÂÂc d
Default
ÂÂd k
.
ÂÂk l,
IdTipoTransaccionOrdenDeVentaÂÂl â
,ÂÂâ ä
MaestroSettingsÂÂã ö
.ÂÂö õ
DefaultÂÂõ ¢
.ÂÂ¢ £0
 IdDetalleMaestroEstadoConfirmadoÂÂ£ √
,ÂÂ√ ƒ
idSerieÂÂ≈ Ã
,ÂÂÃ Õ
idMinimoÂÂŒ ÷
,ÂÂ÷ ◊
idMaximoÂÂÿ ‡
)ÂÂ‡ ·
.ÂÂ· ‚
ToListÂÂ‚ Ë
(ÂÂË È
)ÂÂÈ Í
;ÂÂÍ Î
}
ÊÊ 	
public
ËË %
Transaccion_consolidada
ËË &Q
CObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConIdMenorA
ËË' j
(
ËËj k
int
ËËk n

idEmpleado
ËËo y
,
ËËy z
int
ËË{ ~
idSerieËË Ü
,ËËÜ á
DateTimeËËà ê
fechaInicioËËë ú
,ËËú ù
DateTimeËËû ¶
fechaFinËËß Ø
,ËËØ ∞
longËË± µ
idMaximoËË∂ æ
)ËËæ ø
{
ÈÈ 	
return
ÍÍ $
transaccionRepositorio
ÍÍ )
.
ÍÍ) *0
"ObtenerResumenTransaccionesAntesDe
ÍÍ* L
(
ÍÍL M!
TransaccionSettings
ÍÍM `
.
ÍÍ` a
Default
ÍÍa h
.
ÍÍh i,
IdTipoTransaccionOrdenDeVentaÍÍi Ü
,ÍÍÜ á
MaestroSettingsÍÍà ó
.ÍÍó ò
DefaultÍÍò ü
.ÍÍü †0
 IdDetalleMaestroEstadoConfirmadoÍÍ† ¿
,ÍÍ¿ ¡
fechaInicioÍÍ¬ Õ
,ÍÍÕ Œ
fechaFinÍÍœ ◊
,ÍÍ◊ ÿ
idSerieÍÍŸ ‡
,ÍÍ‡ ·
idMaximoÍÍ‚ Í
)ÍÍÍ Î
;ÍÍÎ Ï
}
ÎÎ 	
public
ÌÌ %
Transaccion_consolidada
ÌÌ &F
8ObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadas
ÌÌ' _
(
ÌÌ_ `
int
ÌÌ` c

idEmpleado
ÌÌd n
,
ÌÌn o
int
ÌÌp s
idSerie
ÌÌt {
,
ÌÌ{ |
DateTimeÌÌ} Ö
fechaInicioÌÌÜ ë
,ÌÌë í
DateTimeÌÌì õ
fechaFinÌÌú §
)ÌÌ§ •
{
ÓÓ 	
return
ÔÔ $
transaccionRepositorio
ÔÔ )
.
ÔÔ) *)
ObtenerResumenTransacciones
ÔÔ* E
(
ÔÔE F!
TransaccionSettings
ÔÔF Y
.
ÔÔY Z
Default
ÔÔZ a
.
ÔÔa b+
IdTipoTransaccionOrdenDeVenta
ÔÔb 
,ÔÔ Ä
MaestroSettingsÔÔÅ ê
.ÔÔê ë
DefaultÔÔë ò
.ÔÔò ô0
 IdDetalleMaestroEstadoConfirmadoÔÔô π
,ÔÔπ ∫
fechaInicioÔÔª ∆
,ÔÔ∆ «
fechaFinÔÔ» –
,ÔÔ– —
idSerieÔÔ“ Ÿ
)ÔÔŸ ⁄
;ÔÔ⁄ €
}
 	
public
ˆˆ 
List
ˆˆ 
<
ˆˆ %
Transaccion_consolidada
ˆˆ +
>
ˆˆ+ ,j
[ObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorAˆˆ- à
(ˆˆà â
intˆˆâ å

idEmpleadoˆˆç ó
,ˆˆó ò
intˆˆô ú
idSerieˆˆù §
,ˆˆ§ •
longˆˆ¶ ™)
numeroDeComprobanteMinimoˆˆ´ ƒ
,ˆˆƒ ≈
longˆˆ∆  )
numeroDeComprobanteMaximoˆˆÀ ‰
)ˆˆ‰ Â
{
˜˜ 	
try
¯¯ 
{
˘˘ 
return
˙˙ $
transaccionRepositorio
˙˙ -
.
˙˙- .F
8ObtenerTransaccionesConsolidadasEntreNumeroDeComprobante
˙˙. f
(
˙˙f g!
TransaccionSettings
˙˙g z
.
˙˙z {
Default˙˙{ Ç
.˙˙Ç É-
IdTipoTransaccionOrdenDeVenta˙˙É †
,˙˙† °
MaestroSettings˙˙¢ ±
.˙˙± ≤
Default˙˙≤ π
.˙˙π ∫0
 IdDetalleMaestroEstadoConfirmado˙˙∫ ⁄
,˙˙⁄ €
idSerie˙˙‹ „
,˙˙„ ‰)
numeroDeComprobanteMinimo˙˙Â ˛
,˙˙˛ ˇ)
numeroDeComprobanteMaximo˙˙Ä ô
)˙˙ô ö
.˙˙ö õ
ToList˙˙õ °
(˙˙° ¢
)˙˙¢ £
;˙˙£ §
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
e
¸¸ 
)
¸¸ 
{
˝˝ 
throw
˛˛ 
new
˛˛ 
	Exception
˛˛ #
(
˛˛# $
$str
˛˛$ V
,
˛˛V W
e
˛˛X Y
)
˛˛Y Z
;
˛˛Z [
}
ˇˇ 
}
ÄÄ 	
public
ÉÉ 
List
ÉÉ 
<
ÉÉ %
Transaccion_consolidada
ÉÉ +
>
ÉÉ+ ,y
jObtenerOrdenesDeVentaConfirmadasYTributablesConsolidadasConNumeroDeComprobanteMayorAYMenorAFechaDesdeHastaÉÉ- ó
(ÉÉó ò
intÉÉò õ

idEmpleadoÉÉú ¶
,ÉÉ¶ ß
intÉÉ® ´
idSerieÉÉ¨ ≥
,ÉÉ≥ ¥
longÉÉµ π)
numeroDeComprobanteMinimoÉÉ∫ ”
,ÉÉ” ‘
longÉÉ’ Ÿ)
numeroDeComprobanteMaximoÉÉ⁄ Û
,ÉÉÛ Ù
DateTimeÉÉı ˝

fechaDesdeÉÉ˛ à
,ÉÉà â
DateTimeÉÉä í

fechaHastaÉÉì ù
)ÉÉù û
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
return
áá $
transaccionRepositorio
áá -
.
áá- .P
BObtenerTransaccionesConsolidadasEntreNumeroDeComprobantefechaHasta
áá. p
(
ááp q"
TransaccionSettingsááq Ñ
.ááÑ Ö
DefaultááÖ å
.ááå ç-
IdTipoTransaccionOrdenDeVentaááç ™
,áá™ ´
MaestroSettingsáá¨ ª
.ááª º
Defaultááº √
.áá√ ƒ0
 IdDetalleMaestroEstadoConfirmadoááƒ ‰
,áá‰ Â
idSerieááÊ Ì
,ááÌ Ó)
numeroDeComprobanteMinimoááÔ à
,ááà â)
numeroDeComprobanteMaximoááä £
,áá£ §

fechaDesdeáá• Ø
,ááØ ∞

fechaHastaáá± ª
)ááª º
.ááº Ω
ToListááΩ √
(áá√ ƒ
)ááƒ ≈
;áá≈ ∆
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 
throw
ãã 
new
ãã 
	Exception
ãã #
(
ãã# $
$str
ãã$ V
,
ããV W
e
ããX Y
)
ããY Z
;
ããZ [
}
åå 
}
çç 	
public
îî 
List
îî 
<
îî >
0Resumen_Transaccion_Por_Serie_y_Concepto_Negocio
îî D
>
îîD ED
6ObtenerResumenVentasConSerieYConceptoNegocioConfirmada
îîF |
(
îî| }
intîî} Ä 
idCentroAtencionîîÅ ë
,îîë í
DateTimeîîì õ

fechaDesdeîîú ¶
,îî¶ ß
DateTimeîî® ∞

fechaHastaîî± ª
)îîª º
{
ïï 	
var
ññ 
	resultado
ññ 
=
ññ $
transaccionRepositorio
ññ 2
.
ññ2 3i
ZObtenerResumenPorSerieYConceptoNegocioTransaccionesInclusiveActoresYDetalleMaestroYEstadosññ3 ç
(ññç é 
idCentroAtencionññé û
,ññû ü#
TransaccionSettingsññ† ≥
.ññ≥ ¥
Defaultññ¥ ª
.ññª º-
IdTipoTransaccionOrdenDeVentaññº Ÿ
,ññŸ ⁄
MaestroSettingsññ€ Í
.ññÍ Î
DefaultññÎ Ú
.ññÚ Û0
 IdDetalleMaestroEstadoConfirmadoññÛ ì
,ññì î

fechaDesdeññï ü
,ññü †

fechaHastaññ° ´
)ññ´ ¨
.ññ¨ ≠
ToListññ≠ ≥
(ññ≥ ¥
)ññ¥ µ
;ññµ ∂
return
óó 
	resultado
óó 
;
óó 
}
òò 	
public
öö 
List
öö 
<
öö <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
öö B
>
ööB CP
AObtenerResumenVentasConSerieYConceptoBasicoConfirmadaYTransmitidaööD Ö
(ööÖ Ü
intööÜ â 
idCentroAtencionööä ö
,ööö õ
DateTimeööú §

fechaDesdeöö• Ø
,ööØ ∞
DateTimeöö± π

fechaHastaöö∫ ƒ
)ööƒ ≈
{
õõ 	
var
úú 
	resultado
úú 
=
úú $
transaccionRepositorio
úú 2
.
úú2 3h
YObtenerResumenPorSerieYConceptoBasicoTransaccionesInclusiveActoresYDetalleMaestroYEstadosúú3 å
(úúå ç 
idCentroAtencionúúç ù
,úúù û#
TransaccionSettingsúúü ≤
.úú≤ ≥
Defaultúú≥ ∫
.úú∫ ª-
IdTipoTransaccionOrdenDeVentaúúª ÿ
,úúÿ Ÿ
MaestroSettingsúú⁄ È
.úúÈ Í
DefaultúúÍ Ò
.úúÒ Ú0
 IdDetalleMaestroEstadoConfirmadoúúÚ í
,úúí ì

fechaDesdeúúî û
,úúû ü

fechaHastaúú† ™
)úú™ ´
.úú´ ¨
ToListúú¨ ≤
(úú≤ ≥
)úú≥ ¥
;úú¥ µ
return
ùù 
	resultado
ùù 
;
ùù 
}
ûû 	
public
†† 
List
†† 
<
†† >
0Resumen_Transaccion_Por_Serie_y_Concepto_Negocio
†† D
>
††D EE
7ObtenerResumenVentasConSerieYConceptoNegocioInvalidadas
††F }
(
††} ~
int††~ Å 
idCentroAtencion††Ç í
,††í ì
DateTime††î ú

fechaDesde††ù ß
,††ß ®
DateTime††© ±

fechaHasta††≤ º
)††º Ω
{
°° 	
var
££ 
	resultado
££ 
=
££ $
transaccionRepositorio
££ 2
.
££2 3i
ZObtenerResumenPorSerieYConceptoNegocioTransaccionesInclusiveActoresYDetalleMaestroYEstados££3 ç
(££ç é 
idCentroAtencion££é û
,££û ü#
TransaccionSettings££† ≥
.££≥ ¥
Default££¥ ª
.££ª º-
IdTipoTransaccionOrdenDeVenta££º Ÿ
,££Ÿ ⁄
MaestroSettings££€ Í
.££Í Î
Default££Î Ú
.££Ú Û0
 IdDetalleMaestroEstadoInvalidado££Û ì
,££ì î

fechaDesde££ï ü
,££ü †

fechaHasta££° ´
)££´ ¨
.££¨ ≠
ToList££≠ ≥
(££≥ ¥
)££¥ µ
;££µ ∂
return
•• 
	resultado
•• 
;
•• 
}
¶¶ 	
public
®® 
List
®® 
<
®® <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
®® B
>
®®B CD
6ObtenerResumenVentasConSerieYConceptoBasicoInvalidadas
®®D z
(
®®z {
int
®®{ ~
idCentroAtencion®® è
,®®è ê
DateTime®®ë ô

fechaDesde®®ö §
,®®§ •
DateTime®®¶ Æ

fechaHasta®®Ø π
)®®π ∫
{
©© 	
var
™™ 
	resultado
™™ 
=
™™ $
transaccionRepositorio
™™ 2
.
™™2 3h
YObtenerResumenPorSerieYConceptoBasicoTransaccionesInclusiveActoresYDetalleMaestroYEstados™™3 å
(™™å ç 
idCentroAtencion™™ç ù
,™™ù û#
TransaccionSettings™™ü ≤
.™™≤ ≥
Default™™≥ ∫
.™™∫ ª-
IdTipoTransaccionOrdenDeVenta™™ª ÿ
,™™ÿ Ÿ
MaestroSettings™™⁄ È
.™™È Í
Default™™Í Ò
.™™Ò Ú0
 IdDetalleMaestroEstadoInvalidado™™Ú í
,™™í ì

fechaDesde™™î û
,™™û ü

fechaHasta™™† ™
)™™™ ´
.™™´ ¨
ToList™™¨ ≤
(™™≤ ≥
)™™≥ ¥
;™™¥ µ
return
´´ 
	resultado
´´ 
;
´´ 
}
¨¨ 	
public
ÆÆ 
List
ÆÆ 
<
ÆÆ >
0Resumen_Transaccion_Por_Serie_y_Concepto_Negocio
ÆÆ D
>
ÆÆD EB
4ObtenerResumenVentasConSerieYConceptoNegocioAnuladas
ÆÆF z
(
ÆÆz {
int
ÆÆ{ ~
idCentroAtencionÆÆ è
,ÆÆè ê
DateTimeÆÆë ô

fechaDesdeÆÆö §
,ÆÆ§ •
DateTimeÆÆ¶ Æ

fechaHastaÆÆØ π
)ÆÆπ ∫
{
ØØ 	
var
∞∞ 
	resultado
∞∞ 
=
∞∞ $
transaccionRepositorio
∞∞ 2
.
∞∞2 3h
YObtenerResumenPorSerieYConceptoNegocioTransaccionesInclusiveActoresYDetalleMaestroYEstado∞∞3 å
(∞∞å ç 
idCentroAtencion∞∞ç ù
,∞∞ù û#
TransaccionSettings∞∞ü ≤
.∞∞≤ ≥
Default∞∞≥ ∫
.∞∞∫ ª-
IdTipoTransaccionOrdenDeVenta∞∞ª ÿ
,∞∞ÿ Ÿ
MaestroSettings∞∞⁄ È
.∞∞È Í
Default∞∞Í Ò
.∞∞Ò Ú-
IdDetalleMaestroEstadoAnulado∞∞Ú è
,∞∞è ê

fechaDesde∞∞ë õ
,∞∞õ ú

fechaHasta∞∞ù ß
)∞∞ß ®
.∞∞® ©
ToList∞∞© Ø
(∞∞Ø ∞
)∞∞∞ ±
;∞∞± ≤
return
±± 
	resultado
±± 
;
±± 
}
≥≥ 	
public
µµ 
List
µµ 
<
µµ <
.Resumen_Transaccion_Por_Serie_y_ConceptoBasico
µµ B
>
µµB CA
3ObtenerResumenVentasConSerieYConceptoBasicoAnuladas
µµD w
(
µµw x
int
µµx {
idCentroAtencionµµ| å
,µµå ç
DateTimeµµé ñ

fechaDesdeµµó °
,µµ° ¢
DateTimeµµ£ ´

fechaHastaµµ¨ ∂
)µµ∂ ∑
{
∂∂ 	
var
∑∑ 
	resultado
∑∑ 
=
∑∑ $
transaccionRepositorio
∑∑ 2
.
∑∑2 3g
XObtenerResumenPorSerieYConceptoBasicoTransaccionesInclusiveActoresYDetalleMaestroYEstado∑∑3 ã
(∑∑ã å 
idCentroAtencion∑∑å ú
,∑∑ú ù#
TransaccionSettings∑∑û ±
.∑∑± ≤
Default∑∑≤ π
.∑∑π ∫-
IdTipoTransaccionOrdenDeVenta∑∑∫ ◊
,∑∑◊ ÿ
MaestroSettings∑∑Ÿ Ë
.∑∑Ë È
Default∑∑È 
.∑∑ Ò-
IdDetalleMaestroEstadoAnulado∑∑Ò é
,∑∑é è

fechaDesde∑∑ê ö
,∑∑ö õ

fechaHasta∑∑ú ¶
)∑∑¶ ß
.∑∑ß ®
ToList∑∑® Æ
(∑∑Æ Ø
)∑∑Ø ∞
;∑∑∞ ±
return
∏∏ 
	resultado
∏∏ 
;
∏∏ 
}
∫∫ 	
public
ºº 
List
ºº 
<
ºº 3
%Resumen_transaccion_Venta_PorConcepto
ºº 9
>
ºº9 :9
+ObtenerOrdenesDeVentaPorConceptoInvalidadas
ºº; f
(
ººf g
int
ººg j

idEmpleado
ººk u
,
ººu v
DateTime
ººw 

fechaDesdeººÄ ä
,ººä ã
DateTimeººå î

fechaHastaººï ü
)ººü †
{
ΩΩ 	
try
ææ 
{
øø 
var
¿¿ 
	resultado
¿¿ 
=
¿¿ $
transaccionRepositorio
¿¿  6
.
¿¿6 7R
DObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoDeVendedor
¿¿7 {
(
¿¿{ |

idEmpleado¿¿| Ü
,¿¿Ü á#
TransaccionSettings¿¿à õ
.¿¿õ ú
Default¿¿ú £
.¿¿£ §-
IdTipoTransaccionOrdenDeVenta¿¿§ ¡
,¿¿¡ ¬

fechaDesde¿¿√ Õ
,¿¿Õ Œ

fechaHasta¿¿œ Ÿ
,¿¿Ÿ ⁄
MaestroSettings¿¿€ Í
.¿¿Í Î
Default¿¿Î Ú
.¿¿Ú Û0
 IdDetalleMaestroEstadoInvalidado¿¿Û ì
)¿¿ì î
.¿¿î ï
ToList¿¿ï õ
(¿¿õ ú
)¿¿ú ù
;¿¿ù û
return
¡¡ 
	resultado
¡¡  
;
¡¡  !
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
e
√√ 
)
√√ 
{
ƒƒ 
throw
≈≈ 
e
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 	
public
…… 
List
…… 
<
…… 3
%Resumen_transaccion_Venta_PorConcepto
…… 9
>
……9 :6
(ObtenerOrdenesDeVentaPorConceptoAnuladas
……; c
(
……c d
int
……d g

idEmpleado
……h r
,
……r s
DateTime
……t |

fechaDesde……} á
,……á à
DateTime……â ë

fechaHasta……í ú
)……ú ù
{
   	
try
ÀÀ 
{
ÃÃ 
var
ÕÕ 
	resultado
ÕÕ 
=
ÕÕ $
transaccionRepositorio
ÕÕ  6
.
ÕÕ6 7R
DObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoDeVendedor
ÕÕ7 {
(
ÕÕ{ |

idEmpleadoÕÕ| Ü
,ÕÕÜ á#
TransaccionSettingsÕÕà õ
.ÕÕõ ú
DefaultÕÕú £
.ÕÕ£ §-
IdTipoTransaccionOrdenDeVentaÕÕ§ ¡
,ÕÕ¡ ¬
MaestroSettingsÕÕ√ “
.ÕÕ“ ”
DefaultÕÕ” ⁄
.ÕÕ⁄ €-
IdDetalleMaestroEstadoAnuladoÕÕ€ ¯
,ÕÕ¯ ˘

fechaDesdeÕÕ˙ Ñ
,ÕÕÑ Ö

fechaHastaÕÕÜ ê
)ÕÕê ë
.ÕÕë í
ToListÕÕí ò
(ÕÕò ô
)ÕÕô ö
;ÕÕö õ
return
ŒŒ 
	resultado
ŒŒ  
;
ŒŒ  !
}
œœ 
catch
–– 
(
–– 
	Exception
–– 
e
–– 
)
–– 
{
—— 
throw
““ 
e
““ 
;
““ 
}
”” 
}
‘‘ 	
public
◊◊ 
List
◊◊ 
<
◊◊ 3
%Resumen_transaccion_Venta_PorConcepto
◊◊ 9
>
◊◊9 :8
*ObtenerOrdenesDeVentaPorConceptConfirmadas
◊◊; e
(
◊◊e f
int
◊◊f i

idEmpleado
◊◊j t
,
◊◊t u
DateTime
◊◊v ~

fechaDesde◊◊ â
,◊◊â ä
DateTime◊◊ã ì

fechaHasta◊◊î û
)◊◊û ü
{
ÿÿ 	
try
ŸŸ 
{
⁄⁄ 
var
€€ 
	resultado
€€ 
=
€€ $
transaccionRepositorio
€€  6
.
€€6 7R
DObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadoDeVendedor
€€7 {
(
€€{ |

idEmpleado€€| Ü
,€€Ü á#
TransaccionSettings€€à õ
.€€õ ú
Default€€ú £
.€€£ §-
IdTipoTransaccionOrdenDeVenta€€§ ¡
,€€¡ ¬

fechaDesde€€√ Õ
,€€Õ Œ

fechaHasta€€œ Ÿ
,€€Ÿ ⁄
MaestroSettings€€€ Í
.€€Í Î
Default€€Î Ú
.€€Ú Û0
 IdDetalleMaestroEstadoConfirmado€€Û ì
)€€ì î
.€€î ï
ToList€€ï õ
(€€õ ú
)€€ú ù
;€€ù û
return
‹‹ 
	resultado
‹‹  
;
‹‹  !
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
	Exception
ﬁﬁ 
e
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
throw
‡‡ 
e
‡‡ 
;
‡‡ 
}
·· 
}
‚‚ 	
public
ÂÂ 
List
ÂÂ 
<
ÂÂ +
ResumenTransaccionPorVendedor
ÂÂ 1
>
ÂÂ1 2:
,ObtenerResumenDeVentasPorVendedorConfirmadas
ÂÂ3 _
(
ÂÂ_ `
int
ÂÂ` c
[
ÂÂc d
]
ÂÂd e
idsEmpleado
ÂÂf q
,
ÂÂq r
DateTime
ÂÂs {

fechaDesdeÂÂ| Ü
,ÂÂÜ á
DateTimeÂÂà ê

fechaHastaÂÂë õ
)ÂÂõ ú
{
ÊÊ 	
var
ÁÁ 
	resultado
ÁÁ 
=
ÁÁ $
transaccionRepositorio
ÁÁ 2
.
ÁÁ2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÁÁ3 t
(
ÁÁt u
idsEmpleadoÁÁu Ä
,ÁÁÄ Å#
TransaccionSettingsÁÁÇ ï
.ÁÁï ñ
DefaultÁÁñ ù
.ÁÁù û-
IdTipoTransaccionOrdenDeVentaÁÁû ª
,ÁÁª º

fechaDesdeÁÁΩ «
,ÁÁ« »

fechaHastaÁÁ… ”
,ÁÁ” ‘
MaestroSettingsÁÁ’ ‰
.ÁÁ‰ Â
DefaultÁÁÂ Ï
.ÁÁÏ Ì0
 IdDetalleMaestroEstadoConfirmadoÁÁÌ ç
)ÁÁç é
.ÁÁé è
ToListÁÁè ï
(ÁÁï ñ
)ÁÁñ ó
;ÁÁó ò
return
ËË 
	resultado
ËË 
;
ËË 
}
ÈÈ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ +
ResumenTransaccionPorVendedor
ÏÏ 1
>
ÏÏ1 2:
,ObtenerResumenDeVentasPorVendedorInvalidadas
ÏÏ3 _
(
ÏÏ_ `
int
ÏÏ` c
[
ÏÏc d
]
ÏÏd e
idsEmpleado
ÏÏf q
,
ÏÏq r
DateTime
ÏÏs {

fechaDesdeÏÏ| Ü
,ÏÏÜ á
DateTimeÏÏà ê

fechaHastaÏÏë õ
)ÏÏõ ú
{
ÌÌ 	
var
ÓÓ 
	resultado
ÓÓ 
=
ÓÓ $
transaccionRepositorio
ÓÓ 2
.
ÓÓ2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÓÓ3 t
(
ÓÓt u
idsEmpleadoÓÓu Ä
,ÓÓÄ Å#
TransaccionSettingsÓÓÇ ï
.ÓÓï ñ
DefaultÓÓñ ù
.ÓÓù û-
IdTipoTransaccionOrdenDeVentaÓÓû ª
,ÓÓª º

fechaDesdeÓÓΩ «
,ÓÓ« »

fechaHastaÓÓ… ”
,ÓÓ” ‘
MaestroSettingsÓÓ’ ‰
.ÓÓ‰ Â
DefaultÓÓÂ Ï
.ÓÓÏ Ì0
 IdDetalleMaestroEstadoInvalidadoÓÓÌ ç
)ÓÓç é
.ÓÓé è
ToListÓÓè ï
(ÓÓï ñ
)ÓÓñ ó
;ÓÓó ò
return
ÔÔ 
	resultado
ÔÔ 
;
ÔÔ 
}
 	
public
ÚÚ 
List
ÚÚ 
<
ÚÚ +
ResumenTransaccionPorVendedor
ÚÚ 1
>
ÚÚ1 27
)ObtenerResumenDeVentasPorVendedorAnuladas
ÚÚ3 \
(
ÚÚ\ ]
int
ÚÚ] `
[
ÚÚ` a
]
ÚÚa b
idsEmpleado
ÚÚc n
,
ÚÚn o
DateTime
ÚÚp x

fechaDesdeÚÚy É
,ÚÚÉ Ñ
DateTimeÚÚÖ ç

fechaHastaÚÚé ò
)ÚÚò ô
{
ÛÛ 	
var
ÙÙ 
	resultado
ÙÙ 
=
ÙÙ $
transaccionRepositorio
ÙÙ 2
.
ÙÙ2 3O
AObtenerResumenTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÙÙ3 t
(
ÙÙt u
idsEmpleadoÙÙu Ä
,ÙÙÄ Å#
TransaccionSettingsÙÙÇ ï
.ÙÙï ñ
DefaultÙÙñ ù
.ÙÙù û-
IdTipoTransaccionOrdenDeVentaÙÙû ª
,ÙÙª º
MaestroSettingsÙÙΩ Ã
.ÙÙÃ Õ
DefaultÙÙÕ ‘
.ÙÙ‘ ’-
IdDetalleMaestroEstadoAnuladoÙÙ’ Ú
,ÙÙÚ Û

fechaDesdeÙÙÙ ˛
,ÙÙ˛ ˇ

fechaHastaÙÙÄ ä
)ÙÙä ã
.ÙÙã å
ToListÙÙå í
(ÙÙí ì
)ÙÙì î
;ÙÙî ï
return
ıı 
	resultado
ıı 
;
ıı 
}
ˆˆ 	
public
˘˘ 
List
˘˘ 
<
˘˘ +
DetalleTransaccionPorVendedor
˘˘ 1
>
˘˘1 2:
,ObtenerDetalleDeVentasPorVendedorConfirmadas
˘˘3 _
(
˘˘_ `
int
˘˘` c
[
˘˘c d
]
˘˘d e
idsEmpleado
˘˘f q
,
˘˘q r
DateTime
˘˘s {

fechaDesde˘˘| Ü
,˘˘Ü á
DateTime˘˘à ê

fechaHasta˘˘ë õ
)˘˘õ ú
{
˙˙ 	
var
˚˚ 
	resultado
˚˚ 
=
˚˚ $
transaccionRepositorio
˚˚ 2
.
˚˚2 3O
AObtenerDetalleTransaccionesInclusiveActoresYDetalleMaestroYEstado
˚˚3 t
(
˚˚t u
idsEmpleado˚˚u Ä
,˚˚Ä Å#
TransaccionSettings˚˚Ç ï
.˚˚ï ñ
Default˚˚ñ ù
.˚˚ù û-
IdTipoTransaccionOrdenDeVenta˚˚û ª
,˚˚ª º

fechaDesde˚˚Ω «
,˚˚« »

fechaHasta˚˚… ”
,˚˚” ‘
MaestroSettings˚˚’ ‰
.˚˚‰ Â
Default˚˚Â Ï
.˚˚Ï Ì0
 IdDetalleMaestroEstadoConfirmado˚˚Ì ç
)˚˚ç é
.˚˚é è
ToList˚˚è ï
(˚˚ï ñ
)˚˚ñ ó
;˚˚ó ò
return
¸¸ 
	resultado
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ÄÄ 
List
ÄÄ 
<
ÄÄ +
DetalleTransaccionPorVendedor
ÄÄ 1
>
ÄÄ1 2:
,ObtenerDetallaDeVentasPorVendedorInvalidadas
ÄÄ3 _
(
ÄÄ_ `
int
ÄÄ` c
[
ÄÄc d
]
ÄÄd e
idsEmpleado
ÄÄf q
,
ÄÄq r
DateTime
ÄÄs {

fechaDesdeÄÄ| Ü
,ÄÄÜ á
DateTimeÄÄà ê

fechaHastaÄÄë õ
)ÄÄõ ú
{
ÅÅ 	
var
ÇÇ 
	resultado
ÇÇ 
=
ÇÇ $
transaccionRepositorio
ÇÇ 2
.
ÇÇ2 3O
AObtenerDetalleTransaccionesInclusiveActoresYDetalleMaestroYEstado
ÇÇ3 t
(
ÇÇt u
idsEmpleadoÇÇu Ä
,ÇÇÄ Å#
TransaccionSettingsÇÇÇ ï
.ÇÇï ñ
DefaultÇÇñ ù
.ÇÇù û-
IdTipoTransaccionOrdenDeVentaÇÇû ª
,ÇÇª º
MaestroSettingsÇÇΩ Ã
.ÇÇÃ Õ
DefaultÇÇÕ ‘
.ÇÇ‘ ’0
 IdDetalleMaestroEstadoInvalidadoÇÇ’ ı
,ÇÇı ˆ

fechaDesdeÇÇ˜ Å
,ÇÇÅ Ç

fechaHastaÇÇÉ ç
)ÇÇç é
.ÇÇé è
ToListÇÇè ï
(ÇÇï ñ
)ÇÇñ ó
;ÇÇó ò
return
ÉÉ 
	resultado
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
áá 
List
áá 
<
áá +
DetalleTransaccionPorVendedor
áá 1
>
áá1 27
)ObtenerDetallaDeVentasPorVendedorAnuladas
áá3 \
(
áá\ ]
int
áá] `
[
áá` a
]
ááa b
idsEmpleado
áác n
,
áán o
DateTime
ááp x

fechaDesdeááy É
,ááÉ Ñ
DateTimeááÖ ç

fechaHastaááé ò
)ááò ô
{
àà 	
var
ââ 
	resultado
ââ 
=
ââ $
transaccionRepositorio
ââ 2
.
ââ2 3O
AObtenerDetalleTransaccionesInclusiveActoresYDetalleMaestroYEstado
ââ3 t
(
âât u
idsEmpleadoââu Ä
,ââÄ Å#
TransaccionSettingsââÇ ï
.ââï ñ
Defaultââñ ù
.ââù û-
IdTipoTransaccionOrdenDeVentaââû ª
,ââª º
MaestroSettingsââΩ Ã
.ââÃ Õ
DefaultââÕ ‘
.ââ‘ ’-
IdDetalleMaestroEstadoAnuladoââ’ Ú
,ââÚ Û

fechaDesdeââÙ ˛
,ââ˛ ˇ

fechaHastaââÄ ä
)ââä ã
.ââã å
ToListââå í
(ââí ì
)ââì î
;ââî ï
return
ää 
	resultado
ää 
;
ää 
}
ãã 	
public
íí 
List
íí 
<
íí /
!Resumen_Transaccion_Por_Modalidad
íí 5
>
íí5 6I
;ObtenerResumenesDeVentasPorModalidadYPorVendedorConfirmadas
íí7 r
(
íír s
string
íís y
[
ííy z
]
ííz {
modalidadesíí| á
,ííá à
intííâ å

idEmpleadoííç ó
,ííó ò
DateTimeííô °

fechaDesdeíí¢ ¨
,íí¨ ≠
DateTimeííÆ ∂

fechaHastaíí∑ ¡
)íí¡ ¬
{
ìì 	
var
îî 
	resultado
îî 
=
îî $
transaccionRepositorio
îî 2
.
îî2 3d
UObtenerResumenTransaccionesInclusiveParametroTransaccionActoresYDetalleMaestroYEstadoîî3 à
(îîà â

idEmpleadoîîâ ì
,îîì î
newîîï ò
intîîô ú
[îîú ù
]îîù û
{îîü †#
TransaccionSettingsîî° ¥
.îî¥ µ
Defaultîîµ º
.îîº Ω-
IdTipoTransaccionOrdenDeVentaîîΩ ⁄
}îî€ ‹
,îî‹ ›
MaestroSettingsîîﬁ Ì
.îîÌ Ó
DefaultîîÓ ı
.îîı ˆ0
 IdDetalleMaestroEstadoConfirmadoîîˆ ñ
,îîñ ó

fechaDesdeîîò ¢
,îî¢ £

fechaHastaîî§ Æ
,îîÆ Ø
MaestroSettingsîî∞ ø
.îîø ¿
Defaultîî¿ «
.îî« »2
"IdDetalleMaestroParametroTipoVentaîî» Í
,îîÍ Î
modalidadesîîÏ ˜
)îî˜ ¯
.îî¯ ˘
ToListîî˘ ˇ
(îîˇ Ä
)îîÄ Å
;îîÅ Ç
return
ïï 
	resultado
ïï 
;
ïï 
}
ññ 	
public
òò 
List
òò 
<
òò /
!Resumen_Transaccion_Por_Modalidad
òò 5
>
òò5 6I
;ObtenerResumenesDeVentasPorModalidadYPorVendedorInvalidadas
òò7 r
(
òòr s
string
òòs y
[
òòy z
]
òòz {
modalidadesòò| á
,òòá à
intòòâ å

idEmpleadoòòç ó
,òòó ò
DateTimeòòô °

fechaDesdeòò¢ ¨
,òò¨ ≠
DateTimeòòÆ ∂

fechaHastaòò∑ ¡
)òò¡ ¬
{
ôô 	
var
öö 
	resultado
öö 
=
öö $
transaccionRepositorio
öö 2
.
öö2 3d
UObtenerResumenTransaccionesInclusiveParametroTransaccionActoresYDetalleMaestroYEstadoöö3 à
(ööà â

idEmpleadoööâ ì
,ööì î
newööï ò
intööô ú
[ööú ù
]ööù û
{ööü †#
TransaccionSettingsöö° ¥
.öö¥ µ
Defaultööµ º
.ööº Ω-
IdTipoTransaccionOrdenDeVentaööΩ ⁄
}öö€ ‹
,öö‹ ›
MaestroSettingsööﬁ Ì
.ööÌ Ó
DefaultööÓ ı
.ööı ˆ0
 IdDetalleMaestroEstadoInvalidadoööˆ ñ
,ööñ ó

fechaDesdeööò ¢
,öö¢ £

fechaHastaöö§ Æ
,ööÆ Ø
MaestroSettingsöö∞ ø
.ööø ¿
Defaultöö¿ «
.öö« »2
"IdDetalleMaestroParametroTipoVentaöö» Í
,ööÍ Î
modalidadesööÏ ˜
)öö˜ ¯
.öö¯ ˘
ToListöö˘ ˇ
(ööˇ Ä
)ööÄ Å
;ööÅ Ç
return
õõ 
	resultado
õõ 
;
õõ 
}
úú 	
public
ûû 
List
ûû 
<
ûû /
!Detalle_Transaccion_Por_Modalidad
ûû 5
>
ûû5 6]
NObtenerDetallesDeVentasPorModalidadPorVendedorAgrupadoPorMercaderiaConfirmadasûû7 Ö
(ûûÖ Ü
stringûûÜ å
[ûûå ç
]ûûç é
modalidadesûûè ö
,ûûö õ
intûûú ü

idEmpleadoûû† ™
,ûû™ ´
DateTimeûû¨ ¥

fechaDesdeûûµ ø
,ûûø ¿
DateTimeûû¡ …

fechaHastaûû  ‘
)ûû‘ ’
{
üü 	
var
†† 
	resultado
†† 
=
†† $
transaccionRepositorio
†† 2
.
††2 3Ñ
uObtenerDetalleTransaccionesInclusiveParametroTransaccionActorDeNegocioDetalleMaestroYEstadoAgrupadoPorConceptoNegocio††3 ®
(††® ©

idEmpleado††© ≥
,††≥ ¥
new††µ ∏
int††π º
[††º Ω
]††Ω æ
{††ø ¿#
TransaccionSettings††¡ ‘
.††‘ ’
Default††’ ‹
.††‹ ›-
IdTipoTransaccionOrdenDeVenta††› ˙
}††˚ ¸
,††¸ ˝
MaestroSettings††˛ ç
.††ç é
Default††é ï
.††ï ñ0
 IdDetalleMaestroEstadoConfirmado††ñ ∂
,††∂ ∑

fechaDesde††∏ ¬
,††¬ √

fechaHasta††ƒ Œ
,††Œ œ
MaestroSettings††– ﬂ
.††ﬂ ‡
Default††‡ Á
.††Á Ë2
"IdDetalleMaestroParametroTipoVenta††Ë ä
,††ä ã
modalidades††å ó
)††ó ò
.††ò ô
ToList††ô ü
(††ü †
)††† °
;††° ¢
return
°° 
	resultado
°° 
;
°° 
}
¢¢ 	
public
§§ 
List
§§ 
<
§§ /
!Detalle_Transaccion_Por_Modalidad
§§ 5
>
§§5 6]
NObtenerDetallesDeVentasPorModalidadPorVendedorAgrupadoPorMercaderiaInvalidadas§§7 Ö
(§§Ö Ü
string§§Ü å
[§§å ç
]§§ç é
modalidades§§è ö
,§§ö õ
int§§ú ü

idEmpleado§§† ™
,§§™ ´
DateTime§§¨ ¥

fechaDesde§§µ ø
,§§ø ¿
DateTime§§¡ …

fechaHasta§§  ‘
)§§‘ ’
{
•• 	
var
¶¶ 
	resultado
¶¶ 
=
¶¶ $
transaccionRepositorio
¶¶ 2
.
¶¶2 3Ñ
uObtenerDetalleTransaccionesInclusiveParametroTransaccionActorDeNegocioDetalleMaestroYEstadoAgrupadoPorConceptoNegocio¶¶3 ®
(¶¶® ©

idEmpleado¶¶© ≥
,¶¶≥ ¥
new¶¶µ ∏
int¶¶π º
[¶¶º Ω
]¶¶Ω æ
{¶¶ø ¿#
TransaccionSettings¶¶¡ ‘
.¶¶‘ ’
Default¶¶’ ‹
.¶¶‹ ›-
IdTipoTransaccionOrdenDeVenta¶¶› ˙
}¶¶˚ ¸
,¶¶¸ ˝
MaestroSettings¶¶˛ ç
.¶¶ç é
Default¶¶é ï
.¶¶ï ñ0
 IdDetalleMaestroEstadoInvalidado¶¶ñ ∂
,¶¶∂ ∑

fechaDesde¶¶∏ ¬
,¶¶¬ √

fechaHasta¶¶ƒ Œ
,¶¶Œ œ
MaestroSettings¶¶– ﬂ
.¶¶ﬂ ‡
Default¶¶‡ Á
.¶¶Á Ë2
"IdDetalleMaestroParametroTipoVenta¶¶Ë ä
,¶¶ä ã
modalidades¶¶å ó
)¶¶ó ò
.¶¶ò ô
ToList¶¶ô ü
(¶¶ü †
)¶¶† °
;¶¶° ¢
return
ßß 
	resultado
ßß 
;
ßß 
}
®® 	
public
™™ 
List
™™ 
<
™™ /
!Detalle_Transaccion_Por_Modalidad
™™ 5
>
™™5 6l
]ObtenerDetallesDeVentasPorModalidadPorVendedorAgrupadoPorMercaderiaYPrecioUnitarioConfirmadas™™7 î
(™™î ï
string™™ï õ
[™™õ ú
]™™ú ù
modalidades™™û ©
,™™© ™
int™™´ Æ

idEmpleado™™Ø π
,™™π ∫
DateTime™™ª √

fechaDesde™™ƒ Œ
,™™Œ œ
DateTime™™– ÿ

fechaHasta™™Ÿ „
)™™„ ‰
{
´´ 	
var
¨¨ 
	resultado
¨¨ 
=
¨¨ $
transaccionRepositorio
¨¨ 2
.
¨¨2 3î
ÑObtenerDetalleTransaccionesInclusiveParametroTransaccionActorDeNegocioDetalleMaestroYEstadoAgrupadoPorConceptoNegocioYPrecioUnitario¨¨3 ∑
(¨¨∑ ∏

idEmpleado¨¨∏ ¬
,¨¨¬ √
new¨¨ƒ «
int¨¨» À
[¨¨À Ã
]¨¨Ã Õ
{¨¨Œ œ#
TransaccionSettings¨¨– „
.¨¨„ ‰
Default¨¨‰ Î
.¨¨Î Ï-
IdTipoTransaccionOrdenDeVenta¨¨Ï â
}¨¨ä ã
,¨¨ã å
MaestroSettings¨¨ç ú
.¨¨ú ù
Default¨¨ù §
.¨¨§ •0
 IdDetalleMaestroEstadoConfirmado¨¨• ≈
,¨¨≈ ∆

fechaDesde¨¨« —
,¨¨— “

fechaHasta¨¨” ›
,¨¨› ﬁ
MaestroSettings¨¨ﬂ Ó
.¨¨Ó Ô
Default¨¨Ô ˆ
.¨¨ˆ ˜2
"IdDetalleMaestroParametroTipoVenta¨¨˜ ô
,¨¨ô ö
modalidades¨¨õ ¶
)¨¨¶ ß
.¨¨ß ®
ToList¨¨® Æ
(¨¨Æ Ø
)¨¨Ø ∞
;¨¨∞ ±
return
≠≠ 
	resultado
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ 
List
∞∞ 
<
∞∞ /
!Detalle_Transaccion_Por_Modalidad
∞∞ 5
>
∞∞5 6l
]ObtenerDetallesDeVentasPorModalidadPorVendedorAgrupadoPorMercaderiaYPrecioUnitarioInvalidadas∞∞7 î
(∞∞î ï
string∞∞ï õ
[∞∞õ ú
]∞∞ú ù
modalidades∞∞û ©
,∞∞© ™
int∞∞´ Æ

idEmpleado∞∞Ø π
,∞∞π ∫
DateTime∞∞ª √

fechaDesde∞∞ƒ Œ
,∞∞Œ œ
DateTime∞∞– ÿ

fechaHasta∞∞Ÿ „
)∞∞„ ‰
{
±± 	
var
≤≤ 
	resultado
≤≤ 
=
≤≤ $
transaccionRepositorio
≤≤ 2
.
≤≤2 3î
ÑObtenerDetalleTransaccionesInclusiveParametroTransaccionActorDeNegocioDetalleMaestroYEstadoAgrupadoPorConceptoNegocioYPrecioUnitario≤≤3 ∑
(≤≤∑ ∏

idEmpleado≤≤∏ ¬
,≤≤¬ √
new≤≤ƒ «
int≤≤» À
[≤≤À Ã
]≤≤Ã Õ
{≤≤Œ œ#
TransaccionSettings≤≤– „
.≤≤„ ‰
Default≤≤‰ Î
.≤≤Î Ï-
IdTipoTransaccionOrdenDeVenta≤≤Ï â
}≤≤ä ã
,≤≤ã å
MaestroSettings≤≤ç ú
.≤≤ú ù
Default≤≤ù §
.≤≤§ •0
 IdDetalleMaestroEstadoInvalidado≤≤• ≈
,≤≤≈ ∆

fechaDesde≤≤« —
,≤≤— “

fechaHasta≤≤” ›
,≤≤› ﬁ
MaestroSettings≤≤ﬂ Ó
.≤≤Ó Ô
Default≤≤Ô ˆ
.≤≤ˆ ˜2
"IdDetalleMaestroParametroTipoVenta≤≤˜ ô
,≤≤ô ö
modalidades≤≤õ ¶
)≤≤¶ ß
.≤≤ß ®
ToList≤≤® Æ
(≤≤Æ Ø
)≤≤Ø ∞
;≤≤∞ ±
return
≥≥ 
	resultado
≥≥ 
;
≥≥ 
}
¥¥ 	
public
∏∏ 
List
∏∏ 
<
∏∏ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
∏∏ S
>
∏∏S TG
8ObtenerOrdenesDeVentaPorConceptoTransferidasYConfirmadas∏∏U ç
(∏∏ç é
int∏∏é ë
[∏∏ë í
]∏∏í ì 
idsPuntosDeVenta∏∏î §
,∏∏§ •
DateTime∏∏¶ Æ

fechaDesde∏∏Ø π
,∏∏π ∫
DateTime∏∏ª √

fechaHasta∏∏ƒ Œ
)∏∏Œ œ
{
ππ 	
var
∫∫ 
	resultado
∫∫ 
=
∫∫ 
new
∫∫ 
List
∫∫  $
<
∫∫$ %M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
∫∫% d
>
∫∫d e
(
∫∫e f
)
∫∫f g
;
∫∫g h
var
ºº =
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
ºº ?
=
ºº@ A$
transaccionRepositorio
ººB X
.
ººX YJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadosººY î
(ººî ï 
idsPuntosDeVentaººï •
,ºº• ¶
Diccionarioººß ≤
.ºº≤ ≥\
LTiposDeTransaccionOrdenesDeOperacionesDeVentasDondeIngresaDineroYSalenBienesºº≥ ˇ
,ººˇ Ä

fechaDesdeººÅ ã
,ººã å

fechaHastaººç ó
,ººó ò
MaestroSettingsººô ®
.ºº® ©
Defaultºº© ∞
.ºº∞ ±0
 IdDetalleMaestroEstadoConfirmadoºº± —
)ºº— “
.ºº“ ”
ToListºº” Ÿ
(ººŸ ⁄
)ºº⁄ €
;ºº€ ‹
var
ææ =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
ææ ?
=
ææ@ A$
transaccionRepositorio
ææB X
.
ææX YJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadosææY î
(ææî ï 
idsPuntosDeVentaææï •
,ææ• ¶
Diccionarioææß ≤
.ææ≤ ≥q
aTiposDeTransaccionOrdenesDeOperacionesDeVentasDondeSaleDineroEIngresanBienesExceptoInvalidacionesææ≥ î
,ææî ï
MaestroSettingsææñ •
.ææ• ¶
Defaultææ¶ ≠
.ææ≠ Æ0
 IdDetalleMaestroEstadoInvalidadoææÆ Œ
,ææŒ œ

fechaDesdeææ– ⁄
,ææ⁄ €

fechaHastaææ‹ Ê
)ææÊ Á
.ææÁ Ë
ToListææË Ó
(ææÓ Ô
)ææÔ 
;ææ Ò
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
item
¡¡ 
in
¡¡  =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
¡¡! P
)
¡¡P Q
{
¬¬ 
item
√√ 
.
√√ 
Cantidad
√√ 
*=
√√  
-
√√! "
$num
√√" #
;
√√# $
item
ƒƒ 
.
ƒƒ 
Importe
ƒƒ 
*=
ƒƒ 
-
ƒƒ  !
$num
ƒƒ! "
;
ƒƒ" #
}
≈≈ 
int
»» 
[
»» 
]
»» *
idsConceptosDeNegocioComunes
»» .
=
»»/ 0=
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
»»1 `
.
»»` a
Select
»»a g
(
»»g h
o
»»h i
=>
»»j l
o
»»m n
.
»»n o 
IdConceptoNegocio»»o Ä
)»»Ä Å
.»»Å Ç
	Intersect»»Ç ã
(»»ã å?
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes»»å ª
.»»ª º
Select»»º ¬
(»»¬ √
o»»√ ƒ
=>»»≈ «
o»»» …
.»»…  !
IdConceptoNegocio»»  €
)»»€ ‹
)»»‹ ›
.»»› ﬁ
Distinct»»ﬁ Ê
(»»Ê Á
)»»Á Ë
.»»Ë È
ToArray»»È 
(»» Ò
)»»Ò Ú
;»»Ú Û
	resultado
   
.
   
AddRange
   
(
   =
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
   N
.
  N O
Where
  O T
(
  T U
o
  U V
=>
  W Y
!
  Z [*
idsConceptosDeNegocioComunes
  [ w
.
  w x
Contains  x Ä
(  Ä Å
o  Å Ç
.  Ç É!
IdConceptoNegocio  É î
)  î ï
)  ï ñ
)  ñ ó
;  ó ò
	resultado
ÃÃ 
.
ÃÃ 
AddRange
ÃÃ 
(
ÃÃ =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
ÃÃ N
.
ÃÃN O
Where
ÃÃO T
(
ÃÃT U
o
ÃÃU V
=>
ÃÃW Y
!
ÃÃZ [*
idsConceptosDeNegocioComunes
ÃÃ[ w
.
ÃÃw x
ContainsÃÃx Ä
(ÃÃÄ Å
oÃÃÅ Ç
.ÃÃÇ É!
IdConceptoNegocioÃÃÉ î
)ÃÃî ï
)ÃÃï ñ
)ÃÃñ ó
;ÃÃó ò
foreach
œœ 
(
œœ 
var
œœ 
idConceptoNegocio
œœ *
in
œœ+ -*
idsConceptosDeNegocioComunes
œœ. J
)
œœJ K
{
–– 
var
—— 
itemPositivo
——  
=
——! "=
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
——# R
.
——R S
SingleOrDefault
——S b
(
——b c
o
——c d
=>
——e g
o
——h i
.
——i j
IdConceptoNegocio
——j {
==
——| ~ 
idConceptoNegocio—— ê
)——ê ë
;——ë í
var
““ 
itemNegativo
““  
=
““! "=
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
““# R
.
““R S
SingleOrDefault
““S b
(
““b c
o
““c d
=>
““e g
o
““h i
.
““i j
IdConceptoNegocio
““j {
==
““| ~ 
idConceptoNegocio““ ê
)““ê ë
;““ë í
	resultado
‘‘ 
.
‘‘ 
Add
‘‘ 
(
‘‘ 
new
‘‘ !M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
‘‘" a
(
‘‘a b
)
‘‘b c
{
‘‘d e
IdConceptoNegocio
‘‘f w
=
‘‘x y 
idConceptoNegocio‘‘z ã
,‘‘ã å
CodigoBarra‘‘ç ò
=‘‘ô ö
itemPositivo‘‘õ ß
.‘‘ß ®
CodigoBarra‘‘® ≥
,‘‘≥ ¥
ConceptoNegocio‘‘µ ƒ
=‘‘≈ ∆
itemPositivo‘‘« ”
.‘‘” ‘
ConceptoNegocio‘‘‘ „
,‘‘„ ‰
NombreBasico‘‘Â Ò
=‘‘Ú Û
itemPositivo‘‘Ù Ä
.‘‘Ä Å
NombreBasico‘‘Å ç
,‘‘ç é
Cantidad‘‘è ó
=‘‘ò ô
itemPositivo‘‘ö ¶
.‘‘¶ ß
Cantidad‘‘ß Ø
+‘‘∞ ±
itemNegativo‘‘≤ æ
.‘‘æ ø
Cantidad‘‘ø «
,‘‘« »
Importe‘‘… –
=‘‘— “
itemPositivo‘‘” ﬂ
.‘‘ﬂ ‡
Importe‘‘‡ Á
+‘‘Ë È
itemNegativo‘‘Í ˆ
.‘‘ˆ ˜
Importe‘‘˜ ˛
}‘‘ˇ Ä
)‘‘Ä Å
;‘‘Å Ç
}
’’ 
return
÷÷ 
	resultado
÷÷ 
.
÷÷ 
OrderBy
÷÷ $
(
÷÷$ %
r
÷÷% &
=>
÷÷' )
r
÷÷* +
.
÷÷+ ,
CodigoBarra
÷÷, 7
??
÷÷8 :
r
÷÷; <
.
÷÷< =
ConceptoNegocio
÷÷= L
)
÷÷L M
.
÷÷M N
ToList
÷÷N T
(
÷÷T U
)
÷÷U V
;
÷÷V W
}
◊◊ 	
public
ÿÿ 
List
ÿÿ 
<
ÿÿ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
ÿÿ S
>
ÿÿS T:
+ObtenerOrdenesDeVentaPorConceptoInvalidadasÿÿU Ä
(ÿÿÄ Å
intÿÿÅ Ñ
[ÿÿÑ Ö
]ÿÿÖ Ü 
idsPuntosDeVentaÿÿá ó
,ÿÿó ò
DateTimeÿÿô °

fechaDesdeÿÿ¢ ¨
,ÿÿ¨ ≠
DateTimeÿÿÆ ∂

fechaHastaÿÿ∑ ¡
)ÿÿ¡ ¬
{
ŸŸ 	
var
⁄⁄ 
	resultado
⁄⁄ 
=
⁄⁄ $
transaccionRepositorio
⁄⁄ 2
.
⁄⁄2 3I
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstados
⁄⁄3 n
(
⁄⁄n o
idsPuntosDeVenta
⁄⁄o 
,⁄⁄ Ä
Diccionario⁄⁄Å å
.⁄⁄å ç\
LTiposDeTransaccionOrdenesDeOperacionesDeVentasDondeIngresaDineroYSalenBienes⁄⁄ç Ÿ
,⁄⁄Ÿ ⁄
MaestroSettings⁄⁄€ Í
.⁄⁄Í Î
Default⁄⁄Î Ú
.⁄⁄Ú Û0
 IdDetalleMaestroEstadoInvalidado⁄⁄Û ì
,⁄⁄ì î

fechaDesde⁄⁄ï ü
,⁄⁄ü †

fechaHasta⁄⁄° ´
)⁄⁄´ ¨
.⁄⁄¨ ≠
ToList⁄⁄≠ ≥
(⁄⁄≥ ¥
)⁄⁄¥ µ
;⁄⁄µ ∂
return
€€ 
	resultado
€€ 
;
€€ 
}
‹‹ 	
public
ﬁﬁ 
List
ﬁﬁ 
<
ﬁﬁ M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
ﬁﬁ S
>
ﬁﬁS T6
(ObtenerOrdenesDeVentaPorConceptoAnuldada
ﬁﬁU }
(
ﬁﬁ} ~
intﬁﬁ~ Å
[ﬁﬁÅ Ç
]ﬁﬁÇ É 
idsPuntosDeVentaﬁﬁÑ î
,ﬁﬁî ï
DateTimeﬁﬁñ û

fechaDesdeﬁﬁü ©
,ﬁﬁ© ™
DateTimeﬁﬁ´ ≥

fechaHastaﬁﬁ¥ æ
)ﬁﬁæ ø
{
ﬂﬂ 	
var
‡‡ 
	resultado
‡‡ 
=
‡‡ $
transaccionRepositorio
‡‡ 2
.
‡‡2 3I
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstados
‡‡3 n
(
‡‡n o
idsPuntosDeVenta
‡‡o 
,‡‡ Ä
Diccionario‡‡Å å
.‡‡å çS
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones‡‡ç –
,‡‡– —
MaestroSettings‡‡“ ·
.‡‡· ‚
Default‡‡‚ È
.‡‡È Í-
IdDetalleMaestroEstadoAnulado‡‡Í á
,‡‡á à

fechaDesde‡‡â ì
,‡‡ì î

fechaHasta‡‡ï ü
)‡‡ü †
.‡‡† °
ToList‡‡° ß
(‡‡ß ®
)‡‡® ©
;‡‡© ™
return
·· 
	resultado
·· 
;
·· 
}
‚‚ 	
public
ÂÂ 
List
ÂÂ 
<
ÂÂ 7
)Resumen_Detalles_Consolidado_Por_Vendedor
ÂÂ =
>
ÂÂ= >^
OObtenerResumenDetallesConsolidadoPorConceptoNegocioPorPrecioUnitarioPorVendedorÂÂ? é
(ÂÂé è
intÂÂè í

idEmpleadoÂÂì ù
,ÂÂù û
DateTimeÂÂü ß

fechaDesdeÂÂ® ≤
,ÂÂ≤ ≥
DateTimeÂÂ¥ º

fechaHastaÂÂΩ «
)ÂÂ« »
{
ÊÊ 	
int
ÁÁ 
[
ÁÁ 
]
ÁÁ  
idsTipoTransaccion
ÁÁ $
=
ÁÁ% &
Diccionario
ÁÁ' 2
.
ÁÁ2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
ÁÁ3 v
;
ÁÁv w
var
ËË 
	resultado
ËË 
=
ËË $
transaccionRepositorio
ËË 2
.
ËË2 3:
,ObtenerResumenDetallesConsolidadoPorVendedor
ËË3 _
(
ËË_ ` 
idsTipoTransaccion
ËË` r
,
ËËr s
MaestroSettingsËËt É
.ËËÉ Ñ
DefaultËËÑ ã
.ËËã å0
 IdDetalleMaestroEstadoConfirmadoËËå ¨
,ËË¨ ≠

idEmpleadoËËÆ ∏
,ËË∏ π

fechaDesdeËË∫ ƒ
,ËËƒ ≈

fechaHastaËË∆ –
)ËË– —
.ËË— “
ToListËË“ ÿ
(ËËÿ Ÿ
)ËËŸ ⁄
;ËË⁄ €
var
ÈÈ 
resumen
ÈÈ 
=
ÈÈ 
	resultado
ÈÈ #
.
ÈÈ# $
GroupBy
ÈÈ$ +
(
ÈÈ+ ,
r
ÈÈ, -
=>
ÈÈ. 0
new
ÈÈ1 4
{
ÍÍ 
r
ÎÎ 
.
ÎÎ 
IdConceptoNegocio
ÎÎ #
,
ÎÎ# $
r
ÏÏ 
.
ÏÏ 
PrecioUnitario
ÏÏ  
}
ÌÌ 
)
ÌÌ 
.
ÌÌ 
Select
ÌÌ 
(
ÌÌ 
r
ÌÌ 
=>
ÌÌ 
new
ÌÌ 7
)Resumen_Detalles_Consolidado_Por_Vendedor
ÌÌ H
(
ÌÌH I
)
ÌÌI J
{
ÓÓ 
IdConceptoNegocio
ÔÔ !
=
ÔÔ" #
r
ÔÔ$ %
.
ÔÔ% &
FirstOrDefault
ÔÔ& 4
(
ÔÔ4 5
)
ÔÔ5 6
.
ÔÔ6 7
IdConceptoNegocio
ÔÔ7 H
,
ÔÔH I
CodigoBarra
 
=
 
r
 
.
  
FirstOrDefault
  .
(
. /
)
/ 0
.
0 1
CodigoBarra
1 <
,
< =
ConceptoNegocio
ÒÒ 
=
ÒÒ  !
r
ÒÒ" #
.
ÒÒ# $
FirstOrDefault
ÒÒ$ 2
(
ÒÒ2 3
)
ÒÒ3 4
.
ÒÒ4 5
ConceptoNegocio
ÒÒ5 D
,
ÒÒD E
Cantidad
ÚÚ 
=
ÚÚ 
r
ÚÚ 
.
ÚÚ 
Sum
ÚÚ  
(
ÚÚ  !
c
ÚÚ! "
=>
ÚÚ# %
c
ÚÚ& '
.
ÚÚ' (
CantidadTotal
ÚÚ( 5
)
ÚÚ5 6
,
ÚÚ6 7
Importe
ÛÛ 
=
ÛÛ 
r
ÛÛ 
.
ÛÛ 
Sum
ÛÛ 
(
ÛÛ  
i
ÛÛ  !
=>
ÛÛ" $
i
ÛÛ% &
.
ÛÛ& '
ImporteTotal
ÛÛ' 3
)
ÛÛ3 4
}
ÙÙ 
)
ÙÙ 
.
ÙÙ 
ToList
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
resumen
ıı 
=
ıı 
resumen
ıı 
.
ıı 
Where
ıı #
(
ıı# $
r
ıı$ %
=>
ıı& (
r
ıı) *
.
ıı* +
Cantidad
ıı+ 3
!=
ıı4 6
$num
ıı7 8
)
ıı8 9
.
ıı9 :
ToList
ıı: @
(
ıı@ A
)
ııA B
;
ııB C
return
ˆˆ 
resumen
ˆˆ 
;
ˆˆ 
}
˜˜ 	
public
¯¯ 
List
¯¯ 
<
¯¯ 7
)Resumen_Detalles_Consolidado_Por_Vendedor
¯¯ =
>
¯¯= >L
>ObtenerResumenDetallesConsolidadoPorConceptoNegocioPorVendedor
¯¯? }
(
¯¯} ~
int¯¯~ Å

idEmpleado¯¯Ç å
,¯¯å ç
DateTime¯¯é ñ

fechaDesde¯¯ó °
,¯¯° ¢
DateTime¯¯£ ´

fechaHasta¯¯¨ ∂
)¯¯∂ ∑
{
˘˘ 	
int
˙˙ 
[
˙˙ 
]
˙˙  
idsTipoTransaccion
˙˙ $
=
˙˙% &
Diccionario
˙˙' 2
.
˙˙2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
˙˙3 v
;
˙˙v w
var
˚˚ 
	resultado
˚˚ 
=
˚˚ $
transaccionRepositorio
˚˚ 2
.
˚˚2 3:
,ObtenerResumenDetallesConsolidadoPorVendedor
˚˚3 _
(
˚˚_ ` 
idsTipoTransaccion
˚˚` r
,
˚˚r s
MaestroSettings˚˚t É
.˚˚É Ñ
Default˚˚Ñ ã
.˚˚ã å0
 IdDetalleMaestroEstadoConfirmado˚˚å ¨
,˚˚¨ ≠

idEmpleado˚˚Æ ∏
,˚˚∏ π

fechaDesde˚˚∫ ƒ
,˚˚ƒ ≈

fechaHasta˚˚∆ –
)˚˚– —
.˚˚— “
ToList˚˚“ ÿ
(˚˚ÿ Ÿ
)˚˚Ÿ ⁄
;˚˚⁄ €
var
¸¸ 
resumen
¸¸ 
=
¸¸ 
	resultado
¸¸ #
.
¸¸# $
GroupBy
¸¸$ +
(
¸¸+ ,
r
¸¸, -
=>
¸¸. 0
r
¸¸1 2
.
¸¸2 3
IdConceptoNegocio
¸¸3 D
)
¸¸D E
.
˝˝ 
Select
˝˝ 
(
˝˝ 
r
˝˝ 
=>
˝˝ 
new
˝˝  7
)Resumen_Detalles_Consolidado_Por_Vendedor
˝˝! J
(
˝˝J K
)
˝˝K L
{
˛˛ 
IdConceptoNegocio
ˇˇ %
=
ˇˇ& '
r
ˇˇ( )
.
ˇˇ) *
FirstOrDefault
ˇˇ* 8
(
ˇˇ8 9
)
ˇˇ9 :
.
ˇˇ: ;
IdConceptoNegocio
ˇˇ; L
,
ˇˇL M
CodigoBarra
ÄÄ 
=
ÄÄ  !
r
ÄÄ" #
.
ÄÄ# $
FirstOrDefault
ÄÄ$ 2
(
ÄÄ2 3
)
ÄÄ3 4
.
ÄÄ4 5
CodigoBarra
ÄÄ5 @
,
ÄÄ@ A
ConceptoNegocio
ÅÅ #
=
ÅÅ$ %
r
ÅÅ& '
.
ÅÅ' (
FirstOrDefault
ÅÅ( 6
(
ÅÅ6 7
)
ÅÅ7 8
.
ÅÅ8 9
ConceptoNegocio
ÅÅ9 H
,
ÅÅH I
Cantidad
ÇÇ 
=
ÇÇ 
r
ÇÇ  
.
ÇÇ  !
Sum
ÇÇ! $
(
ÇÇ$ %
c
ÇÇ% &
=>
ÇÇ' )
c
ÇÇ* +
.
ÇÇ+ ,
CantidadTotal
ÇÇ, 9
)
ÇÇ9 :
,
ÇÇ: ;
Importe
ÉÉ 
=
ÉÉ 
r
ÉÉ 
.
ÉÉ  
Sum
ÉÉ  #
(
ÉÉ# $
i
ÉÉ$ %
=>
ÉÉ& (
i
ÉÉ) *
.
ÉÉ* +
ImporteTotal
ÉÉ+ 7
)
ÉÉ7 8
}
ÑÑ 
)
ÑÑ 
.
ÑÑ 
ToList
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
resumen
ÖÖ 
=
ÖÖ 
resumen
ÖÖ 
.
ÖÖ 
Where
ÖÖ #
(
ÖÖ# $
r
ÖÖ$ %
=>
ÖÖ& (
r
ÖÖ) *
.
ÖÖ* +
Cantidad
ÖÖ+ 3
!=
ÖÖ4 6
$num
ÖÖ7 8
)
ÖÖ8 9
.
ÖÖ9 :
ToList
ÖÖ: @
(
ÖÖ@ A
)
ÖÖA B
;
ÖÖB C
return
áá 
resumen
áá 
;
áá 
}
àà 	
public
ââ 
List
ââ 
<
ââ 7
)Resumen_Detalles_Consolidado_Por_Vendedor
ââ =
>
ââ= >K
=ObtenerResumenDetallesConsolidadoPorConceptoBasicoPorVendedor
ââ? |
(
ââ| }
intââ} Ä

idEmpleadoââÅ ã
,ââã å
DateTimeââç ï

fechaDesdeââñ †
,ââ† °
DateTimeââ¢ ™

fechaHastaââ´ µ
)ââµ ∂
{
ää 	
int
ãã 
[
ãã 
]
ãã  
idsTipoTransaccion
ãã $
=
ãã% &
Diccionario
ãã' 2
.
ãã2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
ãã3 v
;
ããv w
var
åå 
	resultado
åå 
=
åå $
transaccionRepositorio
åå 2
.
åå2 3:
,ObtenerResumenDetallesConsolidadoPorVendedor
åå3 _
(
åå_ ` 
idsTipoTransaccion
åå` r
,
åår s
MaestroSettingsååt É
.ååÉ Ñ
DefaultååÑ ã
.ååã å0
 IdDetalleMaestroEstadoConfirmadoååå ¨
,åå¨ ≠

idEmpleadoååÆ ∏
,åå∏ π

fechaDesdeåå∫ ƒ
,ååƒ ≈

fechaHastaåå∆ –
)åå– —
.åå— “
ToListåå“ ÿ
(ååÿ Ÿ
)ååŸ ⁄
;åå⁄ €
var
çç 
resumen
çç 
=
çç 
	resultado
çç #
.
çç# $
GroupBy
çç$ +
(
çç+ ,
r
çç, -
=>
çç. 0
r
çç1 2
.
çç2 3
IdConceptoBasico
çç3 C
)
ççC D
.
éé 
Select
éé 
(
éé 
r
éé 
=>
éé 
new
éé  7
)Resumen_Detalles_Consolidado_Por_Vendedor
éé! J
(
ééJ K
)
ééK L
{
èè 
IdConceptoBasico
êê $
=
êê% &
r
êê' (
.
êê( )
FirstOrDefault
êê) 7
(
êê7 8
)
êê8 9
.
êê9 :
IdConceptoBasico
êê: J
,
êêJ K
ConceptoBasico
ëë "
=
ëë# $
r
ëë% &
.
ëë& '
FirstOrDefault
ëë' 5
(
ëë5 6
)
ëë6 7
.
ëë7 8
ConceptoBasico
ëë8 F
,
ëëF G
Cantidad
íí 
=
íí 
r
íí  
.
íí  !
Sum
íí! $
(
íí$ %
c
íí% &
=>
íí' )
c
íí* +
.
íí+ ,
CantidadTotal
íí, 9
)
íí9 :
,
íí: ;
Importe
ìì 
=
ìì 
r
ìì 
.
ìì  
Sum
ìì  #
(
ìì# $
i
ìì$ %
=>
ìì& (
i
ìì) *
.
ìì* +
ImporteTotal
ìì+ 7
)
ìì7 8
}
îî 
)
îî 
.
îî 
ToList
îî 
(
îî 
)
îî 
;
îî 
resumen
ïï 
=
ïï 
resumen
ïï 
.
ïï 
Where
ïï #
(
ïï# $
r
ïï$ %
=>
ïï& (
r
ïï) *
.
ïï* +
Cantidad
ïï+ 3
!=
ïï4 6
$num
ïï7 8
)
ïï8 9
.
ïï9 :
ToList
ïï: @
(
ïï@ A
)
ïïA B
;
ïïB C
return
óó 
resumen
óó 
;
óó 
}
òò 	
public
öö 
List
öö 
<
öö 7
)Resumen_Detalles_Consolidado_Por_Vendedor
öö =
>
öö= >7
)ObtenerResumenDeVentasAgrupadasPorFamilia
öö? h
(
ööh i
DateTime
ööi q

fechaDesde
öör |
,
öö| }
DateTimeöö~ Ü

fechaHastaööá ë
)ööë í
{
õõ 	
int
úú 
[
úú 
]
úú 
idsEmpleado
úú 
=
úú 
actorRepositorio
úú  0
.
úú0 1,
ObtenerActorDeNegocioPrincipal
úú1 O
(
úúO P
ActorSettings
úúP ]
.
úú] ^
Default
úú^ e
.
úúe f
IdRolEmpleado
úúf s
,
úús t
ActorSettingsúúu Ç
.úúÇ É
DefaultúúÉ ä
.úúä ã
IdRolVendedorúúã ò
,úúò ô
trueúúö û
)úúû ü
.úúü †
Selectúú† ¶
(úú¶ ß
anúúß ©
=>úú™ ¨
anúú≠ Ø
.úúØ ∞
idúú∞ ≤
)úú≤ ≥
.úú≥ ¥
ToArrayúú¥ ª
(úúª º
)úúº Ω
;úúΩ æ
int
ùù 
[
ùù 
]
ùù  
idsTipoTransaccion
ùù $
=
ùù% &
Diccionario
ùù' 2
.
ùù2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
ùù3 v
;
ùùv w
var
ûû 
	resultado
ûû 
=
ûû $
transaccionRepositorio
ûû 2
.
ûû2 3<
.ObtenerResumenDetallesConsolidadoPorVendedores
ûû3 a
(
ûûa b 
idsTipoTransaccion
ûûb t
,
ûût u
MaestroSettingsûûv Ö
.ûûÖ Ü
DefaultûûÜ ç
.ûûç é0
 IdDetalleMaestroEstadoConfirmadoûûé Æ
,ûûÆ Ø
idsEmpleadoûû∞ ª
,ûûª º

fechaDesdeûûΩ «
,ûû« »

fechaHastaûû… ”
)ûû” ‘
.ûû‘ ’
ToListûû’ €
(ûû€ ‹
)ûû‹ ›
;ûû› ﬁ
var
üü 
resumen
üü 
=
üü 
	resultado
üü #
.
üü# $
GroupBy
üü$ +
(
üü+ ,
r
üü, -
=>
üü. 0
r
üü1 2
.
üü2 3
IdConceptoBasico
üü3 C
)
üüC D
.
†† 
Select
†† 
(
†† 
r
†† 
=>
†† 
new
††  7
)Resumen_Detalles_Consolidado_Por_Vendedor
††! J
(
††J K
)
††K L
{
°° 
IdConceptoBasico
¢¢ $
=
¢¢% &
r
¢¢' (
.
¢¢( )
FirstOrDefault
¢¢) 7
(
¢¢7 8
)
¢¢8 9
.
¢¢9 :
IdConceptoBasico
¢¢: J
,
¢¢J K
ConceptoBasico
££ "
=
££# $
r
££% &
.
££& '
FirstOrDefault
££' 5
(
££5 6
)
££6 7
.
££7 8
ConceptoBasico
££8 F
,
££F G
Cantidad
§§ 
=
§§ 
r
§§  
.
§§  !
Sum
§§! $
(
§§$ %
c
§§% &
=>
§§' )
c
§§* +
.
§§+ ,
CantidadTotal
§§, 9
)
§§9 :
,
§§: ;
Importe
•• 
=
•• 
r
•• 
.
••  
Sum
••  #
(
••# $
i
••$ %
=>
••& (
i
••) *
.
••* +
ImporteTotal
••+ 7
)
••7 8
}
¶¶ 
)
¶¶ 
.
¶¶ 
ToList
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
resumen
ßß 
=
ßß 
resumen
ßß 
.
ßß 
Where
ßß #
(
ßß# $
r
ßß$ %
=>
ßß& (
r
ßß) *
.
ßß* +
Cantidad
ßß+ 3
!=
ßß4 6
$num
ßß7 8
)
ßß8 9
.
ßß9 :
ToList
ßß: @
(
ßß@ A
)
ßßA B
;
ßßB C
return
©© 
resumen
©© 
;
©© 
}
™™ 	
public
´´ 
List
´´ 
<
´´ 7
)Resumen_Detalles_Consolidado_Por_Vendedor
´´ =
>
´´= >@
2ObtenerResumenDeVentasAgrupadasPorFamiliaYVendedor
´´? q
(
´´q r
DateTime
´´r z

fechaDesde´´{ Ö
,´´Ö Ü
DateTime´´á è

fechaHasta´´ê ö
)´´ö õ
{
¨¨ 	
int
≠≠ 
[
≠≠ 
]
≠≠ 
idsEmpleado
≠≠ 
=
≠≠ 
actorRepositorio
≠≠  0
.
≠≠0 1,
ObtenerActorDeNegocioPrincipal
≠≠1 O
(
≠≠O P
ActorSettings
≠≠P ]
.
≠≠] ^
Default
≠≠^ e
.
≠≠e f
IdRolEmpleado
≠≠f s
,
≠≠s t
ActorSettings≠≠u Ç
.≠≠Ç É
Default≠≠É ä
.≠≠ä ã
IdRolVendedor≠≠ã ò
,≠≠ò ô
true≠≠ö û
)≠≠û ü
.≠≠ü †
Select≠≠† ¶
(≠≠¶ ß
an≠≠ß ©
=>≠≠™ ¨
an≠≠≠ Ø
.≠≠Ø ∞
id≠≠∞ ≤
)≠≠≤ ≥
.≠≠≥ ¥
ToArray≠≠¥ ª
(≠≠ª º
)≠≠º Ω
;≠≠Ω æ
int
ÆÆ 
[
ÆÆ 
]
ÆÆ  
idsTipoTransaccion
ÆÆ $
=
ÆÆ% &
Diccionario
ÆÆ' 2
.
ÆÆ2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
ÆÆ3 v
;
ÆÆv w
var
ØØ 
	resultado
ØØ 
=
ØØ $
transaccionRepositorio
ØØ 2
.
ØØ2 3<
.ObtenerResumenDetallesConsolidadoPorVendedores
ØØ3 a
(
ØØa b 
idsTipoTransaccion
ØØb t
,
ØØt u
MaestroSettingsØØv Ö
.ØØÖ Ü
DefaultØØÜ ç
.ØØç é0
 IdDetalleMaestroEstadoConfirmadoØØé Æ
,ØØÆ Ø
idsEmpleadoØØ∞ ª
,ØØª º

fechaDesdeØØΩ «
,ØØ« »

fechaHastaØØ… ”
)ØØ” ‘
.ØØ‘ ’
ToListØØ’ €
(ØØ€ ‹
)ØØ‹ ›
;ØØ› ﬁ
var
±± 
resumen
±± 
=
±± 
	resultado
±± #
.
±±# $
GroupBy
±±$ +
(
±±+ ,
r
±±, -
=>
±±. 0
new
±±1 4
{
±±5 6
r
±±7 8
.
±±8 9
IdConceptoNegocio
±±9 J
,
±±J K
r
±±L M
.
±±M N
ConceptoBasico
±±N \
}
±±] ^
)
±±^ _
.
≤≤ 
Select
≤≤ 
(
≤≤ 
r
≤≤ 
=>
≤≤ 
new
≤≤  7
)Resumen_Detalles_Consolidado_Por_Vendedor
≤≤! J
(
≤≤J K
)
≤≤K L
{
≥≥ 
Empleado
¥¥ 
=
¥¥ 
r
¥¥  
.
¥¥  !
FirstOrDefault
¥¥! /
(
¥¥/ 0
)
¥¥0 1
.
¥¥1 2
Empleado
¥¥2 :
,
¥¥: ;
ConceptoNegocio
µµ #
=
µµ$ %
r
µµ& '
.
µµ' (
FirstOrDefault
µµ( 6
(
µµ6 7
)
µµ7 8
.
µµ8 9
ConceptoNegocio
µµ9 H
,
µµH I
IdConceptoBasico
∂∂ $
=
∂∂% &
r
∂∂' (
.
∂∂( )
FirstOrDefault
∂∂) 7
(
∂∂7 8
)
∂∂8 9
.
∂∂9 :
IdConceptoBasico
∂∂: J
,
∂∂J K
ConceptoBasico
∑∑ "
=
∑∑# $
r
∑∑% &
.
∑∑& '
FirstOrDefault
∑∑' 5
(
∑∑5 6
)
∑∑6 7
.
∑∑7 8
ConceptoBasico
∑∑8 F
,
∑∑F G
Cantidad
∏∏ 
=
∏∏ 
r
∏∏  
.
∏∏  !
Sum
∏∏! $
(
∏∏$ %
c
∏∏% &
=>
∏∏' )
c
∏∏* +
.
∏∏+ ,
CantidadTotal
∏∏, 9
)
∏∏9 :
,
∏∏: ;
Importe
ππ 
=
ππ 
r
ππ 
.
ππ  
Sum
ππ  #
(
ππ# $
i
ππ$ %
=>
ππ& (
i
ππ) *
.
ππ* +
ImporteTotal
ππ+ 7
)
ππ7 8
}
∫∫ 
)
∫∫ 
.
∫∫ 
ToList
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
resumen
ªª 
=
ªª 
resumen
ªª 
.
ªª 
Where
ªª #
(
ªª# $
r
ªª$ %
=>
ªª& (
r
ªª) *
.
ªª* +
Cantidad
ªª+ 3
!=
ªª4 6
$num
ªª7 8
)
ªª8 9
.
ªª9 :
ToList
ªª: @
(
ªª@ A
)
ªªA B
;
ªªB C
return
ºº 
resumen
ºº 
;
ºº 
}
ΩΩ 	
public
øø 
List
øø 
<
øø ?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
øø E
>
øøE FF
8ObtenerResumenVentasPorConceptoPorVendedorContadoCredito
øøG 
(øø Ä
DateTimeøøÄ à

fechaDesdeøøâ ì
,øøì î
DateTimeøøï ù

fechaHastaøøû ®
)øø® ©
{
¿¿ 	
int
¡¡ 
[
¡¡ 
]
¡¡ 
idsEmpleado
¡¡ 
=
¡¡ 
actorRepositorio
¡¡  0
.
¡¡0 1,
ObtenerActorDeNegocioPrincipal
¡¡1 O
(
¡¡O P
ActorSettings
¡¡P ]
.
¡¡] ^
Default
¡¡^ e
.
¡¡e f
IdRolEmpleado
¡¡f s
,
¡¡s t
ActorSettings¡¡u Ç
.¡¡Ç É
Default¡¡É ä
.¡¡ä ã
IdRolVendedor¡¡ã ò
,¡¡ò ô
true¡¡ö û
)¡¡û ü
.¡¡ü †
Select¡¡† ¶
(¡¡¶ ß
an¡¡ß ©
=>¡¡™ ¨
an¡¡≠ Ø
.¡¡Ø ∞
id¡¡∞ ≤
)¡¡≤ ≥
.¡¡≥ ¥
ToArray¡¡¥ ª
(¡¡ª º
)¡¡º Ω
;¡¡Ω æ
int
¬¬ 
[
¬¬ 
]
¬¬  
idsTipoTransaccion
¬¬ $
=
¬¬% &
Diccionario
¬¬' 2
.
¬¬2 3Q
CTiposDeTransaccionOrdenesDeOperacionesDeVentasExceptoInvalidaciones
¬¬3 v
;
¬¬v w
var
√√ 
	resultado
√√ 
=
√√ $
transaccionRepositorio
√√ 2
.
√√2 3C
5ObtenerConsolidadoPorVendedoresPorModoPagoPorConcepto
√√3 h
(
√√h i 
idsTipoTransaccion
√√i {
,
√√{ |
MaestroSettings√√} å
.√√å ç
Default√√ç î
.√√î ï0
 IdDetalleMaestroEstadoConfirmado√√ï µ
,√√µ ∂
idsEmpleado√√∑ ¬
,√√¬ √
MaestroSettings√√ƒ ”
.√√” ‘
Default√√‘ €
.√√€ ‹3
#IdDetalleMaestroParametroModoDePago√√‹ ˇ
,√√ˇ Ä
(√√Å Ç
(√√Ç É
int√√É Ü
)√√Ü á
ModoPago√√á è
.√√è ê
Contado√√ê ó
)√√ó ò
.√√ò ô
ToString√√ô °
(√√° ¢
)√√¢ £
,√√£ §

fechaDesde√√• Ø
,√√Ø ∞

fechaHasta√√± ª
)√√ª º
.√√º Ω
ToList√√Ω √
(√√√ ƒ
)√√ƒ ≈
;√√≈ ∆
List
ƒƒ 
<
ƒƒ ?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
ƒƒ B
>
ƒƒB C
resumen
ƒƒD K
=
ƒƒL M
new
ƒƒN Q
List
ƒƒR V
<
ƒƒV W@
1Resumen_Por_Concepto_Por_Vendedor_Contado_CreditoƒƒW à
>ƒƒà â
(ƒƒâ ä
)ƒƒä ã
;ƒƒã å
List
≈≈ 
<
≈≈ ?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
≈≈ B
>
≈≈B C 
resumenPorEmpleado
≈≈D V
;
≈≈V W
foreach
∆∆ 
(
∆∆ 
var
∆∆ 

idEmpleado
∆∆ #
in
∆∆$ &
idsEmpleado
∆∆' 2
)
∆∆2 3
{
««  
resumenPorEmpleado
…… "
=
……# $
new
……% (
List
……) -
<
……- .?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
……. _
>
……_ `
(
……` a
)
……a b
;
……b c
bool
   #
empleadoTieneRegistro
   *
=
  + ,
false
  - 2
;
  2 3
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ 

idConcepto
ÀÀ '
in
ÀÀ( *
	resultado
ÀÀ+ 4
.
ÀÀ4 5
Select
ÀÀ5 ;
(
ÀÀ; <
r
ÀÀ< =
=>
ÀÀ> @
r
ÀÀA B
.
ÀÀB C
IdConceptoNegocio
ÀÀC T
)
ÀÀT U
.
ÀÀU V
Distinct
ÀÀV ^
(
ÀÀ^ _
)
ÀÀ_ `
)
ÀÀ` a
{
ÃÃ 
var
ÕÕ 
contado
ÕÕ 
=
ÕÕ  !
	resultado
ÕÕ" +
.
ÕÕ+ ,
Where
ÕÕ, 1
(
ÕÕ1 2
r
ÕÕ2 3
=>
ÕÕ4 6
r
ÕÕ7 8
.
ÕÕ8 9

IdEmpleado
ÕÕ9 C
==
ÕÕD F

idEmpleado
ÕÕG Q
&&
ÕÕR T
r
ÕÕU V
.
ÕÕV W
IdConceptoNegocio
ÕÕW h
==
ÕÕi k

idConcepto
ÕÕl v
&&
ÕÕw y
r
ÕÕz {
.
ÕÕ{ |
	EsContadoÕÕ| Ö
)ÕÕÖ Ü
.ÕÕÜ á
ToListÕÕá ç
(ÕÕç é
)ÕÕé è
;ÕÕè ê
var
ŒŒ 
credito
ŒŒ 
=
ŒŒ  !
	resultado
ŒŒ" +
.
ŒŒ+ ,
Where
ŒŒ, 1
(
ŒŒ1 2
r
ŒŒ2 3
=>
ŒŒ4 6
r
ŒŒ7 8
.
ŒŒ8 9

IdEmpleado
ŒŒ9 C
==
ŒŒD F

idEmpleado
ŒŒG Q
&&
ŒŒR T
r
ŒŒU V
.
ŒŒV W
IdConceptoNegocio
ŒŒW h
==
ŒŒi k

idConcepto
ŒŒl v
&&
ŒŒw y
!
ŒŒz {
r
ŒŒ{ |
.
ŒŒ| }
	EsContadoŒŒ} Ü
)ŒŒÜ á
.ŒŒá à
ToListŒŒà é
(ŒŒé è
)ŒŒè ê
;ŒŒê ë
var
œœ 
objeto
œœ 
=
œœ  
(
œœ! "
contado
œœ" )
.
œœ) *
Count
œœ* /
(
œœ/ 0
)
œœ0 1
>
œœ2 3
$num
œœ4 5
)
œœ5 6
?
œœ7 8
contado
œœ9 @
:
œœA B
(
œœC D
credito
œœD K
.
œœK L
Count
œœL Q
(
œœQ R
)
œœR S
>
œœT U
$num
œœV W
)
œœW X
?
œœY Z
credito
œœ[ b
:
œœc d
null
œœe i
;
œœi j
if
–– 
(
–– 
objeto
–– 
!=
–– !
null
––" &
)
––& '
{
——  
resumenPorEmpleado
““ *
.
““* +
Add
““+ .
(
““. /
new
““/ 2?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
““3 d
(
““d e
)
““e f
{
”” 
IdConceptoNegocio
‘‘ -
=
‘‘. /

idConcepto
‘‘0 :
,
‘‘: ;
CodigoBarra
’’ '
=
’’( )
objeto
’’* 0
.
’’0 1
First
’’1 6
(
’’6 7
)
’’7 8
.
’’8 9
CodigoBarra
’’9 D
,
’’D E
ConceptoNegocio
÷÷ +
=
÷÷, -
objeto
÷÷. 4
.
÷÷4 5
First
÷÷5 :
(
÷÷: ;
)
÷÷; <
.
÷÷< =
ConceptoNegocio
÷÷= L
,
÷÷L M

IdEmpleado
◊◊ &
=
◊◊' (

idEmpleado
◊◊) 3
,
◊◊3 4
Empleado
ÿÿ $
=
ÿÿ% &
objeto
ÿÿ' -
.
ÿÿ- .
First
ÿÿ. 3
(
ÿÿ3 4
)
ÿÿ4 5
.
ÿÿ5 6
Empleado
ÿÿ6 >
,
ÿÿ> ?
CantidadContado
ŸŸ +
=
ŸŸ, -
contado
ŸŸ. 5
==
ŸŸ6 8
null
ŸŸ9 =
?
ŸŸ> ?
$num
ŸŸ@ A
:
ŸŸB C
contado
ŸŸD K
.
ŸŸK L
Sum
ŸŸL O
(
ŸŸO P
c
ŸŸP Q
=>
ŸŸR T
c
ŸŸU V
.
ŸŸV W
CantidadConSigno
ŸŸW g
)
ŸŸg h
,
ŸŸh i
ImporteContado
⁄⁄ *
=
⁄⁄+ ,
contado
⁄⁄- 4
==
⁄⁄5 7
null
⁄⁄8 <
?
⁄⁄= >
$num
⁄⁄? @
:
⁄⁄A B
contado
⁄⁄C J
.
⁄⁄J K
Sum
⁄⁄K N
(
⁄⁄N O
c
⁄⁄O P
=>
⁄⁄Q S
c
⁄⁄T U
.
⁄⁄U V
ImporteConSigno
⁄⁄V e
)
⁄⁄e f
,
⁄⁄f g
CantidadCredito
€€ +
=
€€, -
credito
€€. 5
==
€€6 8
null
€€9 =
?
€€> ?
$num
€€@ A
:
€€B C
credito
€€D K
.
€€K L
Sum
€€L O
(
€€O P
c
€€P Q
=>
€€R T
c
€€U V
.
€€V W
CantidadConSigno
€€W g
)
€€g h
,
€€h i
ImporteCredito
‹‹ *
=
‹‹+ ,
credito
‹‹- 4
==
‹‹5 7
null
‹‹8 <
?
‹‹= >
$num
‹‹? @
:
‹‹A B
credito
‹‹C J
.
‹‹J K
Sum
‹‹K N
(
‹‹N O
c
‹‹O P
=>
‹‹Q S
c
‹‹T U
.
‹‹U V
ImporteConSigno
‹‹V e
)
‹‹e f
,
‹‹f g
}
›› 
)
›› 
;
›› #
empleadoTieneRegistro
ﬁﬁ -
=
ﬁﬁ. /#
empleadoTieneRegistro
ﬁﬁ0 E
||
ﬁﬁF H
true
ﬁﬁI M
;
ﬁﬁM N
}
ﬂﬂ 
else
‡‡ 
{
··  
resumenPorEmpleado
‚‚ *
.
‚‚* +
Add
‚‚+ .
(
‚‚. /
new
‚‚/ 2?
1Resumen_Por_Concepto_Por_Vendedor_Contado_Credito
‚‚3 d
(
‚‚d e
)
‚‚e f
{
„„ 
IdConceptoNegocio
‰‰ -
=
‰‰. /

idConcepto
‰‰0 :
,
‰‰: ;
CodigoBarra
ÂÂ '
=
ÂÂ( )
	resultado
ÂÂ* 3
.
ÂÂ3 4
Where
ÂÂ4 9
(
ÂÂ9 :
r
ÂÂ: ;
=>
ÂÂ< >
r
ÂÂ? @
.
ÂÂ@ A
IdConceptoNegocio
ÂÂA R
==
ÂÂS U

idConcepto
ÂÂV `
)
ÂÂ` a
.
ÂÂa b
First
ÂÂb g
(
ÂÂg h
)
ÂÂh i
.
ÂÂi j
CodigoBarra
ÂÂj u
,
ÂÂu v
ConceptoNegocio
ÊÊ +
=
ÊÊ, -
	resultado
ÊÊ. 7
.
ÊÊ7 8
Where
ÊÊ8 =
(
ÊÊ= >
r
ÊÊ> ?
=>
ÊÊ@ B
r
ÊÊC D
.
ÊÊD E
IdConceptoNegocio
ÊÊE V
==
ÊÊW Y

idConcepto
ÊÊZ d
)
ÊÊd e
.
ÊÊe f
First
ÊÊf k
(
ÊÊk l
)
ÊÊl m
.
ÊÊm n
ConceptoNegocio
ÊÊn }
,
ÊÊ} ~

IdEmpleado
ÁÁ &
=
ÁÁ' (

idEmpleado
ÁÁ) 3
,
ÁÁ3 4
CantidadContado
ËË +
=
ËË, -
$num
ËË. /
,
ËË/ 0
ImporteContado
ÈÈ *
=
ÈÈ+ ,
$num
ÈÈ- .
,
ÈÈ. /
CantidadCredito
ÍÍ +
=
ÍÍ, -
$num
ÍÍ. /
,
ÍÍ/ 0
ImporteCredito
ÎÎ *
=
ÎÎ+ ,
$num
ÎÎ- .
,
ÎÎ. /
}
ÏÏ 
)
ÏÏ 
;
ÏÏ #
empleadoTieneRegistro
ÌÌ -
=
ÌÌ. /#
empleadoTieneRegistro
ÌÌ0 E
||
ÌÌF H
false
ÌÌI N
;
ÌÌN O
}
ÓÓ 
}
ÔÔ 
if
 
(
 #
empleadoTieneRegistro
 )
)
) *
{
ÒÒ  
resumenPorEmpleado
ÚÚ &
.
ÚÚ& '
ForEach
ÚÚ' .
(
ÚÚ. /
r
ÚÚ/ 0
=>
ÚÚ1 3
r
ÚÚ4 5
.
ÚÚ5 6
Empleado
ÚÚ6 >
=
ÚÚ? @ 
resumenPorEmpleado
ÚÚA S
.
ÚÚS T
Where
ÚÚT Y
(
ÚÚY Z
rr
ÚÚZ \
=>
ÚÚ] _
rr
ÚÚ` b
.
ÚÚb c
Empleado
ÚÚc k
!=
ÚÚl n
null
ÚÚo s
)
ÚÚs t
.
ÚÚt u
FirstOrDefaultÚÚu É
(ÚÚÉ Ñ
)ÚÚÑ Ö
.ÚÚÖ Ü
EmpleadoÚÚÜ é
)ÚÚé è
;ÚÚè ê 
resumenPorEmpleado
ÛÛ &
=
ÛÛ' ( 
resumenPorEmpleado
ÛÛ) ;
.
ÛÛ; <
Where
ÛÛ< A
(
ÛÛA B
re
ÛÛB D
=>
ÛÛE G
re
ÛÛH J
.
ÛÛJ K
CantidadContado
ÛÛK Z
!=
ÛÛ[ ]
$num
ÛÛ^ _
||
ÛÛ` b
re
ÛÛc e
.
ÛÛe f
CantidadCredito
ÛÛf u
!=
ÛÛv x
$num
ÛÛy z
)
ÛÛz {
.
ÛÛ{ |
ToListÛÛ| Ç
(ÛÛÇ É
)ÛÛÉ Ñ
;ÛÛÑ Ö
resumen
ÙÙ 
.
ÙÙ 
AddRange
ÙÙ $
(
ÙÙ$ % 
resumenPorEmpleado
ÙÙ% 7
)
ÙÙ7 8
;
ÙÙ8 9
}
ıı 
}
ˆˆ 
return
˘˘ 
resumen
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÅÅ 
List
ÅÅ 
<
ÅÅ 
OperacionDeVenta
ÅÅ $
>
ÅÅ$ %<
.ObtenerOperacionesDeVentaConfirmadasPorCliente
ÅÅ& T
(
ÅÅT U
int
ÅÅU X
	idCliente
ÅÅY b
,
ÅÅb c
DateTime
ÅÅd l

fechaDesde
ÅÅm w
,
ÅÅw x
DateTimeÅÅy Å

fechaHastaÅÅÇ å
)ÅÅå ç
{
ÇÇ 	
try
ÑÑ 
{
ÖÖ 
return
ÜÜ 
OperacionDeVenta
ÜÜ '
.
ÜÜ' (
Convert_
ÜÜ( 0
(
ÜÜ0 1$
transaccionRepositorio
ÜÜ1 G
.
ÜÜG HO
@ObtenerTransaccionesInclusiveDetalleTransaccionPorActorDeNegocioÜÜH à
(ÜÜà â#
TransaccionSettingsÜÜâ ú
.ÜÜú ù
DefaultÜÜù §
.ÜÜ§ •-
IdTipoTransaccionOrdenDeVentaÜÜ• ¬
,ÜÜ¬ √
MaestroSettingsÜÜƒ ”
.ÜÜ” ‘
DefaultÜÜ‘ €
.ÜÜ€ ‹0
 IdDetalleMaestroEstadoConfirmadoÜÜ‹ ¸
,ÜÜ¸ ˝
	idClienteÜÜ˛ á
,ÜÜá à

fechaDesdeÜÜâ ì
,ÜÜì î

fechaHastaÜÜï ü
)ÜÜü †
.ÜÜ† °
ToListÜÜ° ß
(ÜÜß ®
)ÜÜ® ©
)ÜÜ© ™
;ÜÜ™ ´
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
e
ää 
;
ää 
}
ãã 
}
åå 	
public
éé 
List
éé 
<
éé 
OperacionDeVenta
éé $
>
éé$ %<
.ObtenerOperacionesDeVentaInvalidadasPorCliente
éé& T
(
ééT U
int
ééU X
	idCliente
ééY b
,
ééb c
DateTime
ééd l

fechaDesde
éém w
,
ééw x
DateTimeééy Å

fechaHastaééÇ å
)ééå ç
{
èè 	
try
êê 
{
ëë 
return
íí 
OperacionDeVenta
íí '
.
íí' (
Convert_
íí( 0
(
íí0 1$
transaccionRepositorio
íí1 G
.
ííG HO
@ObtenerTransaccionesInclusiveDetalleTransaccionPorActorDeNegocioííH à
(ííà â#
TransaccionSettingsííâ ú
.ííú ù
Defaultííù §
.íí§ •-
IdTipoTransaccionOrdenDeVentaíí• ¬
,íí¬ √
MaestroSettingsííƒ ”
.íí” ‘
Defaultíí‘ €
.íí€ ‹0
 IdDetalleMaestroEstadoInvalidadoíí‹ ¸
,íí¸ ˝
	idClienteíí˛ á
,ííá à

fechaDesdeííâ ì
,ííì î

fechaHastaííï ü
)ííü †
.íí† °
ToListíí° ß
(ííß ®
)íí® ©
)íí© ™
;íí™ ´
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
e
ïï 
)
ïï 
{
ññ 
throw
óó 
e
óó 
;
óó 
}
òò 
}
ôô 	
public
õõ 
List
õõ 
<
õõ 
OperacionDeVenta
õõ $
>
õõ$ %9
+ObtenerOperacionesDeVentaAnuladasPorCliente
õõ& Q
(
õõQ R
int
õõR U
	idCliente
õõV _
,
õõ_ `
DateTime
õõa i

fechaDesde
õõj t
,
õõt u
DateTime
õõv ~

fechaHastaõõ â
)õõâ ä
{
úú 	
try
ûû 
{
üü 
return
†† 
OperacionDeVenta
†† '
.
††' (
Convert_
††( 0
(
††0 1$
transaccionRepositorio
††1 G
.
††G HO
@ObtenerTransaccionesInclusiveDetalleTransaccionPorActorDeNegocio††H à
(††à â#
TransaccionSettings††â ú
.††ú ù
Default††ù §
.††§ •-
IdTipoTransaccionOrdenDeVenta††• ¬
,††¬ √
MaestroSettings††ƒ ”
.††” ‘
Default††‘ €
.††€ ‹-
IdDetalleMaestroEstadoAnulado††‹ ˘
,††˘ ˙
	idCliente††˚ Ñ
,††Ñ Ö

fechaDesde††Ü ê
,††ê ë

fechaHasta††í ú
)††ú ù
.††ù û
ToList††û §
(††§ •
)††• ¶
)††¶ ß
;††ß ®
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
e
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
©© 
List
©© 
<
©© !
MovimientoEconomico
©© '
>
©©' ((
ObtenerCobranzasPorCliente
©©) C
(
©©C D
int
©©D G
	idCliente
©©H Q
,
©©Q R
DateTime
©©S [

fechaDesde
©©\ f
,
©©f g
DateTime
©©h p

fechaHasta
©©q {
)
©©{ |
{
™™ 	
try
´´ 
{
¨¨ 
int
ÆÆ 
[
ÆÆ 
]
ÆÆ %
idsEstadosDeTransaccion
ÆÆ -
=
ÆÆ. /
{
ÆÆ0 1
MaestroSettings
ÆÆ2 A
.
ÆÆA B
Default
ÆÆB I
.
ÆÆI J/
!IdDetalleMaestroEstadoTransmitido
ÆÆJ k
,
ÆÆk l
MaestroSettings
ÆÆm |
.
ÆÆ| }
DefaultÆÆ} Ñ
.ÆÆÑ Ö0
 IdDetalleMaestroEstadoConfirmadoÆÆÖ •
,ÆÆ• ¶
}
ØØ0 1
;
ØØ1 2
var
∞∞ 
	resultado
∞∞ 
=
∞∞ $
transaccionRepositorio
∞∞  6
.
∞∞6 73
%ObtenerTransaccionesPorActorDeNegocio
∞∞7 \
(
∞∞\ ]!
TransaccionSettings
∞∞] p
.
∞∞p q
Default
∞∞q x
.
∞∞x y8
)IdTipoTransaccionCobranzaFacturasClientes∞∞y ¢
,
±± 
	idCliente
±± 
,
±± 

fechaDesde
±± )
,
±±) *

fechaHasta
±±+ 5
)
±±5 6
.
±±6 7
ToList
±±7 =
(
±±= >
)
±±> ?
;
±±? @
return
≥≥ !
MovimientoEconomico
≥≥ *
.
≥≥* +
Convert
≥≥+ 2
(
≥≥2 3
	resultado
≥≥3 <
)
≥≥< =
;
≥≥= >
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
LogicaException
∑∑ )
(
∑∑) *
$str
∑∑* L
,
∑∑L M
e
∑∑N O
)
∑∑O P
;
∑∑P Q
}
∏∏ 
}
ππ 	
public
ªª 
EstadoDeCuenta
ªª *
ObtenerEstadoDeCuentaCliente
ªª :
(
ªª: ;
int
ªª; >
	idCliente
ªª? H
,
ªªH I
DateTime
ªªJ R

fechaDesde
ªªS ]
,
ªª] ^
DateTime
ªª_ g

fechaHasta
ªªh r
)
ªªr s
{
ºº 	
decimal
øø 
saldoAnterior
øø !
=
øø" #%
ObtenerDeudasPorCliente
øø$ ;
(
øø; <
	idCliente
øø< E
,
øøE F

fechaDesde
øøG Q
)
øøQ R
.
øøR S
Deuda
øøS X
(
øøX Y
)
øøY Z
;
øøZ [
decimal
¬¬ 
totalEntregas
¬¬ !
=
¬¬" #
$num
¬¬$ %
,
¬¬% &

totalPagos
¬¬' 1
=
¬¬2 3
$num
¬¬4 5
;
¬¬5 6
decimal
√√ 
saldo
√√ 
=
√√ 
saldoAnterior
√√ )
;
√√) *
EstadoDeCuenta
≈≈ 
estadoDeCuenta
≈≈ )
=
≈≈* +
new
≈≈, /
EstadoDeCuenta
≈≈0 >
(
≈≈> ?
)
≈≈? @
;
≈≈@ A
List
∆∆ 
<
∆∆ 
EstadoDeCuenta
∆∆ 
.
∆∆  #
DetalleEstadoDeCuenta
∆∆  5
>
∆∆5 6#
detalleEstadoDeCuenta
∆∆7 L
=
∆∆M N
new
∆∆O R
List
∆∆S W
<
∆∆W X
EstadoDeCuenta
∆∆X f
.
∆∆f g#
DetalleEstadoDeCuenta
∆∆g |
>
∆∆| }
(
∆∆} ~
)
∆∆~ 
;∆∆ Ä
List
…… 
<
…… 
OperacionDeVenta
…… !
>
……! "
confirmadas
……# .
=
……/ 0<
.ObtenerOperacionesDeVentaConfirmadasPorCliente
……1 _
(
……_ `
	idCliente
……` i
,
……i j

fechaDesde
……k u
,
……u v

fechaHasta……w Å
)……Å Ç
.……Ç É
ToList……É â
(……â ä
)……ä ã
;……ã å
List
ÃÃ 
<
ÃÃ !
MovimientoEconomico
ÃÃ $
>
ÃÃ$ %
	cobranzas
ÃÃ& /
=
ÃÃ0 1(
ObtenerCobranzasPorCliente
ÃÃ2 L
(
ÃÃL M
	idCliente
ÃÃM V
,
ÃÃV W

fechaDesde
ÃÃX b
,
ÃÃb c

fechaHasta
ÃÃd n
)
ÃÃn o
.
ÃÃo p
ToList
ÃÃp v
(
ÃÃv w
)
ÃÃw x
;
ÃÃx y
List
œœ 
<
œœ %
OperacionGenericaNivel3
œœ (
>
œœ( )
operaciones
œœ* 5
=
œœ6 7
(
œœ8 9%
OperacionGenericaNivel3
œœ9 P
.
œœP Q
	Convertir
œœQ Z
(
œœZ [
confirmadas
œœ[ f
)
œœf g
.
œœg h
Union
œœh m
(
œœm n&
OperacionGenericaNivel3œœn Ö
.œœÖ Ü
	ConvertirœœÜ è
(œœè ê
	cobranzasœœê ô
)œœô ö
)œœö õ
)œœõ ú
.œœú ù
OrderByœœù §
(œœ§ •
oœœ• ¶
=>œœß ©
oœœ™ ´
.œœ´ ¨
FechaEmisionœœ¨ ∏
)œœ∏ π
.œœπ ∫
ToListœœ∫ ¿
(œœ¿ ¡
)œœ¡ ¬
;œœ¬ √
List
—— 
<
—— "
OperacionClasificada
—— %
>
——% &%
operacionesClasificadas
——' >
=
——? @"
OperacionClasificada
——A U
.
——U V

Clasificar
——V `
(
——` a
operaciones
——a l
)
——l m
.
——m n
ToList
——n t
(
——t u
)
——u v
;
——v w
foreach
‘‘ 
(
‘‘ 
var
‘‘ "
operacionClasificada
‘‘ -
in
‘‘. 0%
operacionesClasificadas
‘‘1 H
)
‘‘H I
{
’’ 
int
÷÷ 
clasificador
÷÷  
=
÷÷! ""
operacionClasificada
÷÷# 7
.
÷÷7 8
Clasificador
÷÷8 D
;
÷÷D E
string
◊◊ 
nombreOperacion
◊◊ &
=
◊◊' (
clasificador
◊◊) 5
==
◊◊6 8
$num
◊◊9 :
?
◊◊; <
$str
◊◊= A
:
◊◊B C
$str
◊◊D H
;
◊◊H I
if
ÿÿ 
(
ÿÿ 
nombreOperacion
ÿÿ #
==
ÿÿ$ &
$str
ÿÿ' +
)
ÿÿ+ ,
{
ŸŸ 
foreach
⁄⁄ 
(
⁄⁄ 
var
⁄⁄  
item
⁄⁄! %
in
⁄⁄& ("
operacionClasificada
⁄⁄) =
.
⁄⁄= >
	Operacion
⁄⁄> G
.
⁄⁄G H 
DetalleTransaccion
⁄⁄H Z
(
⁄⁄Z [
)
⁄⁄[ \
)
⁄⁄\ ]
{
€€ 
saldo
‹‹ 
=
‹‹ 
saldo
‹‹  %
+
‹‹& '
item
‹‹( ,
.
‹‹, -
total
‹‹- 2
;
‹‹2 3#
detalleEstadoDeCuenta
›› -
.
››- .
Add
››. 1
(
››1 2
new
››2 5
EstadoDeCuenta
››6 D
.
››D E#
DetalleEstadoDeCuenta
››E Z
(
››Z ["
operacionClasificada
››[ o
.
››o p
	Operacion
››p y
.
››y z
FechaEmision››z Ü
,››Ü á
nombreOperacion››à ó
,››ó ò
item››ô ù
.››ù û
cantidad››û ¶
,››¶ ß
item››® ¨
.››¨ ≠ 
Concepto_negocio››≠ Ω
.››Ω æ
nombre››æ ƒ
,››ƒ ≈
item››∆  
.››  À
precio_unitario››À ⁄
,››⁄ €
item››‹ ‡
.››‡ ·
total››· Ê
,››Ê Á
saldo››Ë Ì
)››Ì Ó
)››Ó Ô
;››Ô 
totalEntregas
ﬁﬁ %
=
ﬁﬁ& '
totalEntregas
ﬁﬁ( 5
+
ﬁﬁ6 7
item
ﬁﬁ8 <
.
ﬁﬁ< =
total
ﬁﬁ= B
;
ﬁﬁB C
}
ﬂﬂ 
}
‡‡ 
else
·· 
{
‚‚ 
decimal
„„ 
total
„„ !
=
„„" #"
operacionClasificada
„„$ 8
.
„„8 9
	Operacion
„„9 B
.
„„B C
Total
„„C H
;
„„H I
saldo
‰‰ 
=
‰‰ 
saldo
‰‰ !
-
‰‰" #
total
‰‰$ )
;
‰‰) *#
detalleEstadoDeCuenta
ÂÂ )
.
ÂÂ) *
Add
ÂÂ* -
(
ÂÂ- .
new
ÂÂ. 1
EstadoDeCuenta
ÂÂ2 @
.
ÂÂ@ A#
DetalleEstadoDeCuenta
ÂÂA V
(
ÂÂV W"
operacionClasificada
ÂÂW k
.
ÂÂk l
	Operacion
ÂÂl u
.
ÂÂu v
FechaEmisionÂÂv Ç
,ÂÂÇ É
nombreOperacionÂÂÑ ì
,ÂÂì î
$numÂÂï ñ
,ÂÂñ ó
$strÂÂò ö
,ÂÂö õ
$numÂÂú ù
,ÂÂù û
-ÂÂü †
totalÂÂ† •
,ÂÂ• ¶
saldoÂÂß ¨
)ÂÂ¨ ≠
)ÂÂ≠ Æ
;ÂÂÆ Ø

totalPagos
ÊÊ 
=
ÊÊ  

totalPagos
ÊÊ! +
+
ÊÊ, -
total
ÊÊ. 3
;
ÊÊ3 4
}
ÁÁ 
}
ËË 
estadoDeCuenta
ÍÍ 
.
ÍÍ 
SaldoAnterior
ÍÍ (
=
ÍÍ) *
saldoAnterior
ÍÍ+ 8
;
ÍÍ8 9
estadoDeCuenta
ÎÎ 
.
ÎÎ 
Entregas
ÎÎ #
=
ÎÎ$ %
totalEntregas
ÎÎ& 3
;
ÎÎ3 4
estadoDeCuenta
ÏÏ 
.
ÏÏ 
Pagos
ÏÏ  
=
ÏÏ! "

totalPagos
ÏÏ# -
;
ÏÏ- .
estadoDeCuenta
ÌÌ 
.
ÌÌ 

SaldoFinal
ÌÌ %
=
ÌÌ& '
(
ÌÌ( )
totalEntregas
ÌÌ) 6
-
ÌÌ7 8

totalPagos
ÌÌ9 C
)
ÌÌC D
+
ÌÌE F
saldoAnterior
ÌÌG T
;
ÌÌT U
estadoDeCuenta
ÓÓ 
.
ÓÓ 
Detalle
ÓÓ "
=
ÓÓ# $#
detalleEstadoDeCuenta
ÓÓ% :
.
ÓÓ: ;
OrderBy
ÓÓ; B
(
ÓÓB C
dec
ÓÓC F
=>
ÓÓG I
dec
ÓÓJ M
.
ÓÓM N
Fecha
ÓÓN S
.
ÓÓS T
Date
ÓÓT X
)
ÓÓX Y
.
ÓÓY Z
ThenBy
ÓÓZ `
(
ÓÓ` a
dec
ÓÓa d
=>
ÓÓe g
dec
ÓÓh k
.
ÓÓk l
Fecha
ÓÓl q
.
ÓÓq r
	TimeOfDay
ÓÓr {
)
ÓÓ{ |
.
ÓÓ| }
ToListÓÓ} É
(ÓÓÉ Ñ
)ÓÓÑ Ö
;ÓÓÖ Ü
return
ÒÒ 
estadoDeCuenta
ÒÒ !
;
ÒÒ! "
}
ÚÚ 	
public
ÙÙ 
EstadoDeCuenta
ÙÙ G
9ObtenerEstadoDeCuentaConVentasAnuladasEInvalidadasCliente
ÙÙ W
(
ÙÙW X
int
ÙÙX [
	idCliente
ÙÙ\ e
,
ÙÙe f
DateTime
ÙÙg o

fechaDesde
ÙÙp z
,
ÙÙz {
DateTimeÙÙ| Ñ

fechaHastaÙÙÖ è
)ÙÙè ê
{
ıı 	
List
ˆˆ 
<
ˆˆ 
OperacionDeVenta
ˆˆ !
>
ˆˆ! "
confirmadas
ˆˆ# .
=
ˆˆ/ 0<
.ObtenerOperacionesDeVentaConfirmadasPorCliente
ˆˆ1 _
(
ˆˆ_ `
	idCliente
ˆˆ` i
,
ˆˆi j

fechaDesde
ˆˆk u
,
ˆˆu v

fechaHastaˆˆw Å
)ˆˆÅ Ç
.ˆˆÇ É
ToListˆˆÉ â
(ˆˆâ ä
)ˆˆä ã
;ˆˆã å
List
˜˜ 
<
˜˜ 
OperacionDeVenta
˜˜ !
>
˜˜! "
	invalidas
˜˜# ,
=
˜˜- .<
.ObtenerOperacionesDeVentaInvalidadasPorCliente
˜˜/ ]
(
˜˜] ^
	idCliente
˜˜^ g
,
˜˜g h

fechaDesde
˜˜i s
,
˜˜s t

fechaHasta
˜˜u 
)˜˜ Ä
.˜˜Ä Å
ToList˜˜Å á
(˜˜á à
)˜˜à â
;˜˜â ä
List
¯¯ 
<
¯¯ 
OperacionDeVenta
¯¯ !
>
¯¯! "
anuladas
¯¯# +
=
¯¯, -9
+ObtenerOperacionesDeVentaAnuladasPorCliente
¯¯. Y
(
¯¯Y Z
	idCliente
¯¯Z c
,
¯¯c d

fechaDesde
¯¯e o
,
¯¯o p

fechaHasta
¯¯q {
)
¯¯{ |
.
¯¯| }
ToList¯¯} É
(¯¯É Ñ
)¯¯Ñ Ö
;¯¯Ö Ü
List
˘˘ 
<
˘˘ !
MovimientoEconomico
˘˘ $
>
˘˘$ %
	cobranzas
˘˘& /
=
˘˘0 1(
ObtenerCobranzasPorCliente
˘˘2 L
(
˘˘L M
	idCliente
˘˘M V
,
˘˘V W

fechaDesde
˘˘X b
,
˘˘b c

fechaHasta
˘˘d n
)
˘˘n o
.
˘˘o p
ToList
˘˘p v
(
˘˘v w
)
˘˘w x
;
˘˘x y
List
˙˙ 
<
˙˙ %
OperacionGenericaNivel3
˙˙ (
>
˙˙( )
operaciones
˙˙* 5
=
˙˙6 7
(
˙˙8 9%
OperacionGenericaNivel3
˙˙9 P
.
˙˙P Q
	Convertir
˙˙Q Z
(
˙˙Z [
confirmadas
˙˙[ f
)
˙˙f g
.
˙˙g h
Union
˙˙h m
(
˙˙m n&
OperacionGenericaNivel3˙˙n Ö
.˙˙Ö Ü
	Convertir˙˙Ü è
(˙˙è ê
	invalidas˙˙ê ô
)˙˙ô ö
)˙˙ö õ
.
˚˚g h
Union
˚˚h m
(
˚˚m n&
OperacionGenericaNivel3˚˚n Ö
.˚˚Ö Ü
	Convertir˚˚Ü è
(˚˚è ê
anuladas˚˚ê ò
)˚˚ò ô
)˚˚ô ö
.
¸¸g h
Union
¸¸h m
(
¸¸m n&
OperacionGenericaNivel3¸¸n Ö
.¸¸Ö Ü
	Convertir¸¸Ü è
(¸¸è ê
	cobranzas¸¸ê ô
)¸¸ô ö
)¸¸ö õ
)¸¸õ ú
.
˝˝g h
OrderBy
˝˝h o
(
˝˝o p
o
˝˝p q
=>
˝˝r t
o
˝˝u v
.
˝˝v w
FechaEmision˝˝w É
)˝˝É Ñ
.˝˝Ñ Ö
ToList˝˝Ö ã
(˝˝ã å
)˝˝å ç
;˝˝ç é
List
ÄÄ 
<
ÄÄ "
OperacionClasificada
ÄÄ %
>
ÄÄ% &%
operacionesClasificadas
ÄÄ' >
=
ÄÄ? @"
OperacionClasificada
ÄÄA U
.
ÄÄU V

Clasificar
ÄÄV `
(
ÄÄ` a
operaciones
ÄÄa l
)
ÄÄl m
.
ÄÄm n
OrderBy
ÄÄn u
(
ÄÄu v
oc
ÄÄv x
=>
ÄÄy {
oc
ÄÄ| ~
.
ÄÄ~ 
ClasificadorÄÄ ã
)ÄÄã å
.ÄÄå ç
ToListÄÄç ì
(ÄÄì î
)ÄÄî ï
;ÄÄï ñ
EstadoDeCuenta
ÅÅ 
estadoDeCuenta
ÅÅ )
=
ÅÅ* +
new
ÅÅ, /
EstadoDeCuenta
ÅÅ0 >
(
ÅÅ> ?
)
ÅÅ? @
;
ÅÅ@ A
List
ÇÇ 
<
ÇÇ 
EstadoDeCuenta
ÇÇ 
.
ÇÇ  #
DetalleEstadoDeCuenta
ÇÇ  5
>
ÇÇ5 6#
detalleEstadoDeCuenta
ÇÇ7 L
=
ÇÇM N
new
ÇÇO R
List
ÇÇS W
<
ÇÇW X
EstadoDeCuenta
ÇÇX f
.
ÇÇf g#
DetalleEstadoDeCuenta
ÇÇg |
>
ÇÇ| }
(
ÇÇ} ~
)
ÇÇ~ 
;ÇÇ Ä
decimal
ÉÉ 
saldoAnterior
ÉÉ !
=
ÉÉ" #%
ObtenerDeudasPorCliente
ÉÉ$ ;
(
ÉÉ; <
	idCliente
ÉÉ< E
,
ÉÉE F

fechaDesde
ÉÉG Q
)
ÉÉQ R
.
ÉÉR S
Deuda
ÉÉS X
(
ÉÉX Y
)
ÉÉY Z
;
ÉÉZ [
decimal
ÑÑ 
totalEntregas
ÑÑ !
=
ÑÑ" #
$num
ÑÑ$ %
,
ÑÑ% &

totalPagos
ÑÑ' 1
=
ÑÑ2 3
$num
ÑÑ4 5
;
ÑÑ5 6
decimal
ÖÖ 
saldo
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
saldo
ÜÜ 
=
ÜÜ 
saldoAnterior
ÜÜ !
;
ÜÜ! "
foreach
àà 
(
àà 
var
àà "
operacionClasificada
àà -
in
àà. 0%
operacionesClasificadas
àà1 H
)
ààH I
{
ââ 
int
ää 
clasificador
ää  
=
ää! ""
operacionClasificada
ää# 7
.
ää7 8
Clasificador
ää8 D
;
ääD E
string
ãã 
nombreOperacion
ãã &
=
ãã' (
clasificador
ãã) 5
==
ãã6 8
$num
ãã9 :
?
ãã; <
$str
ãã= A
:
ããB C
clasificador
ããD P
==
ããQ S
$num
ããT U
?
ããV W
$str
ããX \
:
ãã] ^
clasificador
ãã_ k
==
ããl n
$num
ãão p
?
ããq r
$str
ããs w
:
ããx y
$str
ããz ~
;
ãã~ 
if
åå 
(
åå 
nombreOperacion
åå #
==
åå$ &
$str
åå' +
)
åå+ ,
{
çç 
foreach
èè 
(
èè 
var
èè  
item
èè! %
in
èè& ("
operacionClasificada
èè) =
.
èè= >
	Operacion
èè> G
.
èèG H 
DetalleTransaccion
èèH Z
(
èèZ [
)
èè[ \
)
èè\ ]
{
êê 
saldo
ëë 
=
ëë 
saldo
ëë  %
+
ëë& '
item
ëë( ,
.
ëë, -
total
ëë- 2
;
ëë2 3#
detalleEstadoDeCuenta
íí -
.
íí- .
Add
íí. 1
(
íí1 2
new
íí2 5
EstadoDeCuenta
íí6 D
.
ííD E#
DetalleEstadoDeCuenta
ííE Z
(
ííZ ["
operacionClasificada
íí[ o
.
íío p
	Operacion
ííp y
.
ííy z
FechaEmisionííz Ü
,ííÜ á
nombreOperacionííà ó
,ííó ò
itemííô ù
.ííù û
cantidadííû ¶
,íí¶ ß
itemíí® ¨
.íí¨ ≠ 
Concepto_negocioíí≠ Ω
.ííΩ æ
nombreííæ ƒ
,ííƒ ≈
itemíí∆  
.íí  À
precio_unitarioííÀ ⁄
,íí⁄ €
itemíí‹ ‡
.íí‡ ·
totalíí· Ê
,ííÊ Á
saldoííË Ì
)ííÌ Ó
)ííÓ Ô
;ííÔ 
totalEntregas
ìì %
=
ìì& '
totalEntregas
ìì( 5
+
ìì6 7
item
ìì8 <
.
ìì< =
total
ìì= B
;
ììB C
}
ïï 
}
ññ 
else
óó 
{
òò 
if
ôô 
(
ôô 
nombreOperacion
ôô '
==
ôô( *
$str
ôô+ /
||
ôô0 2
nombreOperacion
ôô3 B
==
ôôC E
$str
ôôF J
)
ôôJ K
{
öö 
foreach
úú 
(
úú  !
var
úú! $
item
úú% )
in
úú* ,"
operacionClasificada
úú- A
.
úúA B
	Operacion
úúB K
.
úúK L 
DetalleTransaccion
úúL ^
(
úú^ _
)
úú_ `
)
úú` a
{
ùù 
saldo
ûû !
=
ûû" #
saldo
ûû$ )
-
ûû* +
item
ûû, 0
.
ûû0 1
total
ûû1 6
;
ûû6 7#
detalleEstadoDeCuenta
üü 1
.
üü1 2
Add
üü2 5
(
üü5 6
new
üü6 9
EstadoDeCuenta
üü: H
.
üüH I#
DetalleEstadoDeCuenta
üüI ^
(
üü^ _"
operacionClasificada
üü_ s
.
üüs t
	Operacion
üüt }
.
üü} ~
FechaEmisionüü~ ä
,üüä ã
nombreOperacionüüå õ
,üüõ ú
itemüüù °
.üü° ¢
cantidadüü¢ ™
,üü™ ´
itemüü¨ ∞
.üü∞ ± 
Concepto_negocioüü± ¡
.üü¡ ¬
nombreüü¬ »
,üü» …
itemüü  Œ
.üüŒ œ
precio_unitarioüüœ ﬁ
,üüﬁ ﬂ
itemüü‡ ‰
.üü‰ Â
totalüüÂ Í
,üüÍ Î
-üüÏ Ì
saldoüüÌ Ú
)üüÚ Û
)üüÛ Ù
;üüÙ ı
}
°° 
}
¢¢ 
else
££ 
{
§§ 
decimal
•• 
total
••  %
=
••& '"
operacionClasificada
••( <
.
••< =
	Operacion
••= F
.
••F G
Total
••G L
;
••L M
saldo
¶¶ 
=
¶¶ 
saldo
¶¶  %
-
¶¶& '
total
¶¶( -
;
¶¶- .#
detalleEstadoDeCuenta
ßß -
.
ßß- .
Add
ßß. 1
(
ßß1 2
new
ßß2 5
EstadoDeCuenta
ßß6 D
.
ßßD E#
DetalleEstadoDeCuenta
ßßE Z
(
ßßZ ["
operacionClasificada
ßß[ o
.
ßßo p
	Operacion
ßßp y
.
ßßy z
FechaEmisionßßz Ü
,ßßÜ á
nombreOperacionßßà ó
,ßßó ò
$numßßô ö
,ßßö õ
$strßßú û
,ßßû ü
$numßß† °
,ßß° ¢
-ßß£ §
totalßß§ ©
,ßß© ™
saldoßß´ ∞
)ßß∞ ±
)ßß± ≤
;ßß≤ ≥

totalPagos
®® "
=
®®# $

totalPagos
®®% /
+
®®0 1
total
®®2 7
;
®®7 8
}
©© 
}
´´ 
}
¨¨ 
estadoDeCuenta
≠≠ 
.
≠≠ 
SaldoAnterior
≠≠ (
=
≠≠) *
saldoAnterior
≠≠+ 8
;
≠≠8 9
estadoDeCuenta
ÆÆ 
.
ÆÆ 
Entregas
ÆÆ #
=
ÆÆ$ %
totalEntregas
ÆÆ& 3
;
ÆÆ3 4
estadoDeCuenta
ØØ 
.
ØØ 
Pagos
ØØ  
=
ØØ! "

totalPagos
ØØ# -
;
ØØ- .
estadoDeCuenta
∞∞ 
.
∞∞ 

SaldoFinal
∞∞ %
=
∞∞& '
(
∞∞( )
totalEntregas
∞∞) 6
-
∞∞7 8

totalPagos
∞∞9 C
)
∞∞C D
+
∞∞E F
saldoAnterior
∞∞G T
;
∞∞T U
estadoDeCuenta
±± 
.
±± 
Detalle
±± "
=
±±# $#
detalleEstadoDeCuenta
±±% :
;
±±: ;
return
≤≤ 
estadoDeCuenta
≤≤ !
;
≤≤! "
}
≥≥ 	
public
µµ !
Deuda_Actor_Negocio
µµ "%
ObtenerDeudasPorCliente
µµ# :
(
µµ: ;
int
µµ; >
	idCliente
µµ? H
,
µµH I
DateTime
µµJ R
fecha
µµS X
)
µµX Y
{
∂∂ 	
return
»» $
transaccionRepositorio
»» )
.
»») *&
ObtenerDeudaActorNegocio
»»* B
(
»»B C
	idCliente
»»C L
,
»»L M
fecha
»»N S
)
»»S T
;
»»T U
}
…… 	
public
œœ 
DateTime
œœ 
FechaActual
œœ #
(
œœ# $
)
œœ$ %
{
–– 	
return
—— 
DateTimeUtil
—— 
.
——  
FechaActual
——  +
(
——+ ,
)
——, -
;
——- .
}
““ 	
public
‘‘ 
string
‘‘ .
 ObtenerAsuntoDeCorreoElectronico
‘‘ 6
(
‘‘6 7&
EstablecimientoComercial
‘‘7 O
sede
‘‘P T
,
‘‘T U
OrdenDeVenta
‘‘V b
ordenDeVenta
‘‘c o
)
‘‘o p
{
’’ 	
string
÷÷ 
asunto
÷÷ 
=
÷÷ 
ordenDeVenta
÷÷ (
.
÷÷( )
Comprobante
÷÷) 4
(
÷÷4 5
)
÷÷5 6
.
÷÷6 7

NombreTipo
÷÷7 A
+
÷÷B C
$str
÷÷D G
+
÷÷H I
ordenDeVenta
÷÷J V
.
÷÷V W
Comprobante
÷÷W b
(
÷÷b c
)
÷÷c d
.
÷÷d e
NumeroDeSerie
÷÷e r
+
÷÷s t
$str
÷÷u z
+
÷÷{ |
ordenDeVenta÷÷} â
.÷÷â ä
Comprobante÷÷ä ï
(÷÷ï ñ
)÷÷ñ ó
.÷÷ó ò#
NumeroDeComprobante÷÷ò ´
+÷÷¨ ≠
$str÷÷Æ ±
+÷÷≤ ≥
sede÷÷¥ ∏
.÷÷∏ π
Nombre÷÷π ø
;÷÷ø ¿
return
◊◊ 
asunto
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
⁄⁄ 
string
⁄⁄ .
 ObtenerCuerpoDeCorreoElectronico
⁄⁄ 6
(
⁄⁄6 7&
EstablecimientoComercial
⁄⁄7 O
sede
⁄⁄P T
,
⁄⁄T U
OrdenDeVenta
⁄⁄V b
ordenDeVenta
⁄⁄c o
,
⁄⁄o p
string
⁄⁄q w
host
⁄⁄x |
,
⁄⁄| }
List⁄⁄~ Ç
<⁄⁄Ç É
LinkedResource⁄⁄É ë
>⁄⁄ë í
	resources⁄⁄ì ú
)⁄⁄ú ù
{
€€ 	
string
‹‹ 
cuerpo
‹‹ 
=
‹‹ 
$str
‹ﬁ -
+
ﬁﬁ. /
ordenDeVenta
ﬁﬁ0 <
.
ﬁﬁ< =
Cliente
ﬁﬁ= D
(
ﬁﬁD E
)
ﬁﬁE F
.
ﬁﬁF G
RazonSocial
ﬁﬁG R
+
ﬁﬁS T
$str
ﬁﬂU )
+
ﬂﬂ* +
ordenDeVenta
ﬂﬂ, 8
.
ﬂﬂ8 9
Comprobante
ﬂﬂ9 D
(
ﬂﬂD E
)
ﬂﬂE F
.
ﬂﬂF G

NombreTipo
ﬂﬂG Q
+
ﬂﬂR S
$str
ﬂﬂT W
+
ﬂﬂX Y
ordenDeVenta
ﬂﬂZ f
.
ﬂﬂf g
Comprobante
ﬂﬂg r
(
ﬂﬂr s
)
ﬂﬂs t
.
ﬂﬂt u
NumeroDeSerieﬂﬂu Ç
+ﬂﬂÉ Ñ
$strﬂﬂÖ ä
+ﬂﬂã å
ordenDeVentaﬂﬂç ô
.ﬂﬂô ö
Comprobanteﬂﬂö •
(ﬂﬂ• ¶
)ﬂﬂ¶ ß
.ﬂﬂß ®#
NumeroDeComprobanteﬂﬂ® ª
+ﬂﬂº Ω
$strﬂﬂæ Œ
+ﬂﬂœ –
sedeﬂﬂ— ’
.ﬂﬂ’ ÷
Nombreﬂﬂ÷ ‹
+ﬂﬂ› ﬁ
$strﬂﬂﬂ Â
+ﬂﬂÊ Á
ordenDeVentaﬂﬂË Ù
.ﬂﬂÙ ı
FechaEmisionﬂﬂı Å
.ﬂﬂÅ Ç
ToStringﬂﬂÇ ä
(ﬂﬂä ã
$strﬂﬂã ó
)ﬂﬂó ò
+ﬂﬂô ö
$strﬂ‚õ 
+
‚‚  1
#ObtenerPieDePaginaCorreoElectronico
„„ 9
(
„„9 :
host
„„: >
,
„„> ?
	resources
„„@ I
)
„„I J
+
„„K L
$str
‰‰ 
;
‰‰  
return
ÂÂ 
cuerpo
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ËË 
string
ËË .
 ObtenerAsuntoDeCorreoElectronico
ËË 6
(
ËË6 7&
EstablecimientoComercial
ËË7 O
sede
ËËP T
,
ËËT U!
MovimientoDeAlmacen
ËËV i!
movimientoDeAlmacen
ËËj }
)
ËË} ~
{
ÈÈ 	
string
ÍÍ 
asunto
ÍÍ 
=
ÍÍ 
sede
ÍÍ  
.
ÍÍ  !
Nombre
ÍÍ! '
+
ÍÍ( )
$str
ÍÍ* :
+
ÍÍ; <!
movimientoDeAlmacen
ÍÍ= P
.
ÍÍP Q
Comprobante
ÍÍQ \
(
ÍÍ\ ]
)
ÍÍ] ^
.
ÍÍ^ _
NumeroDeSerie
ÍÍ_ l
+
ÍÍm n
$str
ÍÍo t
+
ÍÍu v"
movimientoDeAlmacenÍÍw ä
.ÍÍä ã
ComprobanteÍÍã ñ
(ÍÍñ ó
)ÍÍó ò
.ÍÍò ô#
NumeroDeComprobanteÍÍô ¨
;ÍÍ¨ ≠
return
ÎÎ 
asunto
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
string
ÓÓ .
 ObtenerCuerpoDeCorreoElectronico
ÓÓ 6
(
ÓÓ6 7&
EstablecimientoComercial
ÓÓ7 O
sede
ÓÓP T
,
ÓÓT U!
MovimientoDeAlmacen
ÓÓV i!
movimientoDeAlmacen
ÓÓj }
)
ÓÓ} ~
{
ÔÔ 	
string
 
cuerpo
 
=
 
$str
Ú 
+
ÚÚ 
sede
ÚÚ !
.
ÚÚ! "
Nombre
ÚÚ" (
+
ÚÚ) *
$str
ÚÛ+ &
+
ÛÛ' (!
movimientoDeAlmacen
ÛÛ) <
.
ÛÛ< =
Comprobante
ÛÛ= H
(
ÛÛH I
)
ÛÛI J
.
ÛÛJ K
NumeroDeSerie
ÛÛK X
+
ÛÛY Z
$str
ÛÛ[ `
+
ÛÛa b!
movimientoDeAlmacen
ÛÛc v
.
ÛÛv w
ComprobanteÛÛw Ç
(ÛÛÇ É
)ÛÛÉ Ñ
.ÛÛÑ Ö#
NumeroDeComprobanteÛÛÖ ò
+ÛÛô ö
$strÛ˜õ 
;
˜˜ 
return
¯¯ 
cuerpo
¯¯ 
;
¯¯ 
}
˘˘ 	
public
˚˚ 
string
˚˚ .
 ObtenerAsuntoDeCorreoElectronico
˚˚ 6
(
˚˚6 7&
EstablecimientoComercial
˚˚7 O
sede
˚˚P T
,
˚˚T U(
OrdenDeMovimientoDeAlmacen
˚˚V p
ordenDeAlmacen
˚˚q 
)˚˚ Ä
{
¸¸ 	
string
˝˝ 
asunto
˝˝ 
=
˝˝ 
sede
˝˝  
.
˝˝  !
Nombre
˝˝! '
+
˝˝( )
$str
˝˝* :
+
˝˝; <
ordenDeAlmacen
˝˝= K
.
˝˝K L
Comprobante
˝˝L W
(
˝˝W X
)
˝˝X Y
.
˝˝Y Z
NumeroDeSerie
˝˝Z g
+
˝˝h i
$str
˝˝j o
+
˝˝p q
ordenDeAlmacen˝˝r Ä
.˝˝Ä Å
Comprobante˝˝Å å
(˝˝å ç
)˝˝ç é
.˝˝é è#
NumeroDeComprobante˝˝è ¢
;˝˝¢ £
return
˛˛ 
asunto
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ÅÅ 
string
ÅÅ .
 ObtenerCuerpoDeCorreoElectronico
ÅÅ 6
(
ÅÅ6 7&
EstablecimientoComercial
ÅÅ7 O
sede
ÅÅP T
,
ÅÅT U(
OrdenDeMovimientoDeAlmacen
ÅÅV p
ordenDeAlmacen
ÅÅq 
)ÅÅ Ä
{
ÇÇ 	
string
ÉÉ 
cuerpo
ÉÉ 
=
ÉÉ 
$str
ÉÖ 
+
ÖÖ 
sede
ÖÖ !
.
ÖÖ! "
Nombre
ÖÖ" (
+
ÖÖ) *
$str
ÖÜ+ &
+
ÜÜ' (
ordenDeAlmacen
ÜÜ) 7
.
ÜÜ7 8
Comprobante
ÜÜ8 C
(
ÜÜC D
)
ÜÜD E
.
ÜÜE F
NumeroDeSerie
ÜÜF S
+
ÜÜT U
$str
ÜÜV [
+
ÜÜ\ ]
ordenDeAlmacen
ÜÜ^ l
.
ÜÜl m
Comprobante
ÜÜm x
(
ÜÜx y
)
ÜÜy z
.
ÜÜz {"
NumeroDeComprobanteÜÜ{ é
+ÜÜè ê
$strÜäë 
;
ää 
return
ãã 
cuerpo
ãã 
;
ãã 
}
åå 	
public
éé 
string
éé .
 ObtenerAsuntoDeCorreoElectronico
éé 6
(
éé6 7&
EstablecimientoComercial
éé7 O
sede
ééP T
,
ééT U!
MovimientoEconomico
ééV i

movimiento
ééj t
)
éét u
{
èè 	
string
êê 
asunto
êê 
=
êê 
sede
êê  
.
êê  !
Nombre
êê! '
+
êê( )
$str
êê* :
+
êê; <

movimiento
êê= G
.
êêG H
Comprobante
êêH S
(
êêS T
)
êêT U
.
êêU V
NumeroDeSerie
êêV c
+
êêd e
$str
êêf k
+
êêl m

movimiento
êên x
.
êêx y
Comprobanteêêy Ñ
(êêÑ Ö
)êêÖ Ü
.êêÜ á#
NumeroDeComprobanteêêá ö
;êêö õ
return
ëë 
asunto
ëë 
;
ëë 
}
íí 	
public
îî 
string
îî .
 ObtenerCuerpoDeCorreoElectronico
îî 6
(
îî6 7&
EstablecimientoComercial
îî7 O
sede
îîP T
,
îîT U!
MovimientoEconomico
îîV i

movimiento
îîj t
)
îît u
{
ïï 	
string
ññ 
cuerpo
ññ 
=
ññ 
$str
ñò 
+
òò 
sede
òò !
.
òò! "
Nombre
òò" (
+
òò) *
$str
òô+ &
+
ôô' (

movimiento
ôô) 3
.
ôô3 4
Comprobante
ôô4 ?
(
ôô? @
)
ôô@ A
.
ôôA B
NumeroDeSerie
ôôB O
+
ôôP Q
$str
ôôR W
+
ôôX Y

movimiento
ôôZ d
.
ôôd e
Comprobante
ôôe p
(
ôôp q
)
ôôq r
.
ôôr s"
NumeroDeComprobanteôôs Ü
+ôôá à
$strôùâ 
;
ùù 
return
ûû 
cuerpo
ûû 
;
ûû 
}
üü 	
public
°° 
string
°° .
 ObtenerAsuntoDeCorreoElectronico
°° 6
(
°°6 7&
EstablecimientoComercial
°°7 O
sede
°°P T
,
°°T U5
'OperacionTipoTransaccionTipoComprobante
°°V }
	operacion°°~ á
)°°á à
{
¢¢ 	
string
££ 
asunto
££ 
=
££ 
	operacion
££ %
.
££% &
TipoComprobante
££& 5
+
££6 7
$str
££8 ;
+
££< =
	operacion
££> G
.
££G H
Comprobante
££H S
+
££T U
$str
££V Y
+
££Z [
sede
££\ `
.
££` a
Nombre
££a g
;
££g h
return
§§ 
asunto
§§ 
;
§§ 
}
•• 	
public
ßß 
string
ßß .
 ObtenerCuerpoDeCorreoElectronico
ßß 6
(
ßß6 7&
EstablecimientoComercial
ßß7 O
sede
ßßP T
,
ßßT U5
'OperacionTipoTransaccionTipoComprobante
ßßV }
	operacionßß~ á
,ßßá à
stringßßâ è
hostßßê î
,ßßî ï
Listßßñ ö
<ßßö õ
LinkedResourceßßõ ©
>ßß© ™
	resourcesßß´ ¥
)ßß¥ µ
{
®® 	
string
©© 
cuerpo
©© 
=
©© 
$str
©´ -
+
´´. /
	operacion
´´0 9
.
´´9 :
Tercero
´´: A
+
´´B C
$str
´¨D )
+
¨¨* +
	operacion
¨¨, 5
.
¨¨5 6
TipoComprobante
¨¨6 E
+
¨¨F G
$str
¨¨H K
+
¨¨L M
	operacion
¨¨N W
.
¨¨W X
Comprobante
¨¨X c
+
¨¨d e
$str
¨¨f v
+
¨¨w x
sede
¨¨y }
.
¨¨} ~
Nombre¨¨~ Ñ
+¨¨Ö Ü
$str¨¨á ç
+¨¨é è
	operacion¨¨ê ô
.¨¨ô ö
FechaEmision¨¨ö ¶
+¨¨ß ®
$str¨Ø© 
+
ØØ  1
#ObtenerPieDePaginaCorreoElectronico
∞∞ 9
(
∞∞9 :
host
∞∞: >
,
∞∞> ?
	resources
∞∞@ I
)
∞∞I J
+
∞∞K L
$str
±± 
;
±±  
return
≤≤ 
cuerpo
≤≤ 
;
≤≤ 
}
≥≥ 	
public
µµ 
string
µµ 1
#ObtenerPieDePaginaCorreoElectronico
µµ 9
(
µµ9 :
string
µµ: @
host
µµA E
,
µµE F
List
µµG K
<
µµK L
LinkedResource
µµL Z
>
µµZ [
	resources
µµ\ e
)
µµe f
{
∂∂ 	
string
∑∑ 
	mediaType
∑∑ 
=
∑∑ 
MediaTypeNames
∑∑ -
.
∑∑- .
Image
∑∑. 3
.
∑∑3 4
Jpeg
∑∑4 8
;
∑∑8 9
LinkedResource
∏∏ 
	logoSiges
∏∏ $
=
∏∏% &
new
∏∏' *
LinkedResource
∏∏+ 9
(
∏∏9 :
host
∏∏: >
+
∏∏? @
$str
∏∏A b
,
∏∏b c
	mediaType
∏∏d m
)
∏∏m n
;
∏∏n o
LinkedResource
ππ 
logoTsp
ππ "
=
ππ# $
new
ππ% (
LinkedResource
ππ) 7
(
ππ7 8
host
ππ8 <
+
ππ= >
$str
ππ? ^
,
ππ^ _
	mediaType
ππ` i
)
ππi j
;
ππj k
	logoSiges
ªª 
.
ªª 
	ContentId
ªª 
=
ªª  !
$str
ªª" -
;
ªª- .
logoTsp
ºº 
.
ºº 
	ContentId
ºº 
=
ºº 
$str
ºº  )
;
ºº) *
	logoSiges
ΩΩ 
.
ΩΩ 
ContentType
ΩΩ !
.
ΩΩ! "
	MediaType
ΩΩ" +
=
ΩΩ, -
logoTsp
ΩΩ. 5
.
ΩΩ5 6
ContentType
ΩΩ6 A
.
ΩΩA B
	MediaType
ΩΩB K
=
ΩΩL M
	mediaType
ΩΩN W
;
ΩΩW X
	logoSiges
ææ 
.
ææ 
TransferEncoding
ææ &
=
ææ' (
logoTsp
ææ) 0
.
ææ0 1
TransferEncoding
ææ1 A
=
ææB C
TransferEncoding
ææD T
.
ææT U
Base64
ææU [
;
ææ[ \
	logoSiges
øø 
.
øø 
ContentType
øø !
.
øø! "
Name
øø" &
=
øø' (
logoTsp
øø) 0
.
øø0 1
ContentType
øø1 <
.
øø< =
Name
øø= A
=
øøB C
	logoSiges
øøD M
.
øøM N
	ContentId
øøN W
;
øøW X
	logoSiges
¿¿ 
.
¿¿ 
ContentLink
¿¿ !
=
¿¿" #
new
¿¿$ '
Uri
¿¿( +
(
¿¿+ ,
$str
¿¿, 2
+
¿¿3 4
	logoSiges
¿¿5 >
.
¿¿> ?
	ContentId
¿¿? H
)
¿¿H I
;
¿¿I J
logoTsp
¡¡ 
.
¡¡ 
ContentLink
¡¡ 
=
¡¡  !
new
¡¡" %
Uri
¡¡& )
(
¡¡) *
$str
¡¡* 0
+
¡¡1 2
logoTsp
¡¡3 :
.
¡¡: ;
	ContentId
¡¡; D
)
¡¡D E
;
¡¡E F
	resources
√√ 
.
√√ 
Add
√√ 
(
√√ 
	logoSiges
√√ #
)
√√# $
;
√√$ %
	resources
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
logoTsp
ƒƒ !
)
ƒƒ! "
;
ƒƒ" #
string
«« 
cuerpo
«« 
=
«« 
$str
«” \
+
””] ^
	logoSiges
””_ h
.
””h i
ContentLink
””i t
+
””u v
$str
”Ÿw [
+
ŸŸ\ ]
logoTsp
ŸŸ^ e
.
ŸŸe f
ContentLink
ŸŸf q
+
ŸŸr s
$str
Ÿ¸t 
;
¸¸ 
return
˝˝ 
cuerpo
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
OperationResult
ÄÄ )
CrearEstadosDeTransacciones
ÄÄ :
(
ÄÄ: ;
List
ÄÄ; ?
<
ÄÄ? @ 
Estado_transaccion
ÄÄ@ R
>
ÄÄR S$
estadosDeTransacciones
ÄÄT j
)
ÄÄj k
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
return
ÑÑ $
transaccionRepositorio
ÑÑ -
.
ÑÑ- .0
"CrearEstadosMasivosDeTransacciones
ÑÑ. P
(
ÑÑP Q$
estadosDeTransacciones
ÑÑQ g
)
ÑÑg h
;
ÑÑh i
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
e
ÜÜ 
)
ÜÜ 
{
áá 
throw
àà 
new
àà 
LogicaException
àà )
(
àà) *
$str
àà* d
,
ààd e
e
ààf g
)
ààg h
;
ààh i
}
ââ 
}
ää 	
public
åå 
OperationResult
åå )
CrearEventosDeTransacciones
åå :
(
åå: ;
List
åå; ?
<
åå? @ 
Evento_transaccion
åå@ R
>
ååR S$
eventosDeTransacciones
ååT j
)
ååj k
{
çç 	
try
éé 
{
èè 
return
êê $
transaccionRepositorio
êê -
.
êê- .0
"CrearEventosMasivosDeTransacciones
êê. P
(
êêP Q$
eventosDeTransacciones
êêQ g
)
êêg h
;
êêh i
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
e
íí 
)
íí 
{
ìì 
throw
îî 
new
îî 
LogicaException
îî )
(
îî) *
$str
îî* d
,
îîd e
e
îîf g
)
îîg h
;
îîh i
}
ïï 
}
ññ 	
public
òò 
OperationResult
òò $
CrearEventoTransaccion
òò 5
(
òò5 6 
Evento_transaccion
òò6 H
eventoTransaccion
òòI Z
)
òòZ [
{
ôô 	
try
öö 
{
õõ 
return
úú $
transaccionRepositorio
úú -
.
úú- .$
CrearEventoTransaccion
úú. D
(
úúD E
eventoTransaccion
úúE V
)
úúV W
;
úúW X
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
e
ûû 
)
ûû 
{
üü 
throw
†† 
new
†† 
LogicaException
†† )
(
††) *
$str
††* d
,
††d e
e
††f g
)
††g h
;
††h i
}
°° 
}
¢¢ 	
public
§§ 
OperationResult
§§ :
,CrearEventoTransaccionInformacionTransaccion
§§ K
(
§§K L 
Evento_transaccion
§§L ^
eventoTransaccion
§§_ p
,
§§p q
string
§§r x%
informacionTransaccion§§y è
)§§è ê
{
•• 	
try
¶¶ 
{
ßß 
return
®® $
transaccionRepositorio
®® -
.
®®- .:
,CrearEventoTransaccionInformacionTransaccion
®®. Z
(
®®Z [
eventoTransaccion
®®[ l
,
®®l m%
informacionTransaccion®®n Ñ
)®®Ñ Ö
;®®Ö Ü
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* d
,
¨¨d e
e
¨¨f g
)
¨¨g h
;
¨¨h i
}
≠≠ 
}
ÆÆ 	
public
≥≥ 
OperationResult
≥≥ (
GuardarNotaDeDebitoDeVenta
≥≥ 9
(
≥≥9 :
long
≥≥: >
idOrdenDeVenta
≥≥? M
,
≥≥M N
int
≥≥O R

idTipoNota
≥≥S ]
,
≥≥] ^
string
≥≥_ e
motivo
≥≥f l
,
≥≥l m
int
≥≥n q 
idTipoComprobante≥≥r É
,≥≥É Ñ
int≥≥Ö à"
idSerieComprobante≥≥â õ
,≥≥õ ú
bool≥≥ù °
esPropio≥≥¢ ™
,≥≥™ ´
string≥≥¨ ≤(
numeroSerieDeComprobante≥≥≥ À
,≥≥À Ã
int≥≥Õ –#
numeroDeComprobante≥≥— ‰
,≥≥‰ Â
string≥≥Ê Ï
valorDeNota≥≥Ì ¯
,≥≥¯ ˘
List≥≥˙ ˛
<≥≥˛ ˇ"
DetalleOrdenDeNota≥≥ˇ ë
>≥≥ë í
detalles≥≥ì õ
,≥≥õ ú&
UserProfileSessionData≥≥ù ≥
sesionUsuario≥≥¥ ¡
)≥≥¡ ¬
{
¥¥ 	
try
µµ 
{
∂∂ 
OrdenDeVenta
∏∏ 
ordenDeVenta
∏∏ )
=
∏∏* +
new
∏∏, /
OrdenDeVenta
∏∏0 <
(
∏∏< =$
transaccionRepositorio
∏∏= S
.
∏∏S T0
"ObtenerTransaccionInclusiveEstados
∏∏T v
(
∏∏v w
idOrdenDeVenta∏∏w Ö
)∏∏Ö Ü
)∏∏Ü á
;∏∏á à
int
∫∫ 
idUnidadNegocio
∫∫ #
=
∫∫$ %
MaestroSettings
∫∫& 5
.
∫∫5 6
Default
∫∫6 =
.
∫∫= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
∫∫> h
;
∫∫h i
DateTime
ºº 
fechaActual
ºº $
=
ºº% &
DateTimeUtil
ºº' 3
.
ºº3 4
FechaActual
ºº4 ?
(
ºº? @
)
ºº@ A
;
ººA B
permisos_Logica
ææ 
.
ææ  
ValidarAccion
ææ  -
(
ææ- .
sesionUsuario
ææ. ;
.
ææ; <
Empleado
ææ< D
.
ææD E
Id
ææE G
,
ææG H
MaestroSettings
ææI X
.
ææX Y
Default
ææY `
.
ææ` a.
IdDetalleMaestroAccionConfirmarææa Ä
,ææÄ Å
DiccionarioææÇ ç
.ææç é"
MapeoWraperVsOrdenææé †
.ææ† °
Singleææ° ß
(ææß ®
mææ® ©
=>ææ™ ¨
mææ≠ Æ
.ææÆ Ø
KeyææØ ≤
==ææ≥ µ
Diccionarioææ∂ ¡
.ææ¡ ¬=
-MapeoDetalleMaestroVsTipoTransaccionParaVentaææ¬ Ô
.ææÔ 
Singleææ ˆ
(ææˆ ˜
nææ˜ ¯
=>ææ˘ ˚
nææ¸ ˝
.ææ˝ ˛
Keyææ˛ Å
==ææÇ Ñ

idTipoNotaææÖ è
)ææè ê
.ææê ë
Valueææë ñ
)ææñ ó
.ææó ò
Valueææò ù
,ææù û
idUnidadNegocioææü Æ
)ææÆ Ø
;ææØ ∞
List
¿¿ 
<
¿¿ !
Detalle_transaccion
¿¿ (
>
¿¿( )
detallesDeNota
¿¿* 8
=
¿¿9 :.
 CalcularDetalleNotaDebitoCredito
¿¿; [
(
¿¿[ \
detalles
¿¿\ d
,
¿¿d e
ordenDeVenta
¿¿f r
.
¿¿r s!
DetalleTransaccion¿¿s Ö
(¿¿Ö Ü
)¿¿Ü á
,¿¿á à

idTipoNota¿¿â ì
,¿¿ì î
valorDeNota¿¿ï †
,¿¿† °
motivo¿¿¢ ®
,¿¿® ©
ordenDeVenta¿¿™ ∂
.¿¿∂ ∑
Igv¿¿∑ ∫
(¿¿∫ ª
)¿¿ª º
>¿¿Ω æ
$num¿¿ø ¿
)¿¿¿ ¡
;¿¿¡ ¬
Transaccion
¬¬ 
notaDeDebito
¬¬ (
=
¬¬) *(
GenerarNotaDeCreditoDebito
¬¬+ E
(
¬¬E F
sesionUsuario
¬¬F S
.
¬¬S T
Empleado
¬¬T \
.
¬¬\ ]
Id
¬¬] _
,
¬¬_ `
idUnidadNegocio
¬¬a p
,
¬¬p q
esPropio
¬¬r z
,
¬¬z {!
idSerieComprobante¬¬| é
,¬¬é è!
idTipoComprobante¬¬ê °
,¬¬° ¢#
numeroDeComprobante¬¬£ ∂
,¬¬∂ ∑(
numeroSerieDeComprobante¬¬∏ –
,¬¬– —
fechaActual¬¬“ ›
,¬¬› ﬁ
$str¬¬ﬂ „
,¬¬„ ‰
Diccionario¬¬Â 
.¬¬ Ò=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta¬¬Ò û
.¬¬û ü
Single¬¬ü •
(¬¬• ¶
m¬¬¶ ß
=>¬¬® ™
m¬¬´ ¨
.¬¬¨ ≠
Key¬¬≠ ∞
==¬¬± ≥

idTipoNota¬¬¥ æ
)¬¬æ ø
.¬¬ø ¿
Value¬¬¿ ≈
,¬¬≈ ∆
detallesDeNota¬¬« ’
.¬¬’ ÷
Sum¬¬÷ Ÿ
(¬¬Ÿ ⁄
d¬¬⁄ €
=>¬¬‹ ﬁ
d¬¬ﬂ ‡
.¬¬‡ ·
total¬¬· Ê
)¬¬Ê Á
,¬¬Á Ë
motivo¬¬È Ô
,¬¬Ô 
ordenDeVenta¬¬Ò ˝
.¬¬˝ ˛
Cliente¬¬˛ Ö
(¬¬Ö Ü
)¬¬Ü á
.¬¬á à
Id¬¬à ä
,¬¬ä ã
sesionUsuario¬¬å ô
.¬¬ô ö.
IdCentroDeAtencionSeleccionado¬¬ö ∏
,¬¬∏ π
sesionUsuario¬¬∫ «
)¬¬« »
;¬¬» …
ModoPago
ƒƒ 
modoPago
ƒƒ !
=
ƒƒ" #
ordenDeVenta
ƒƒ$ 0
.
ƒƒ0 1

ModoDePago
ƒƒ1 ;
(
ƒƒ; <
)
ƒƒ< =
;
ƒƒ= >
Transaccion
∆∆ !
ordenDeNotaDeDebito
∆∆ /
=
∆∆0 1-
GenerarOrdenNotaDeCreditoDebito
∆∆2 Q
(
∆∆Q R
notaDeDebito
∆∆R ^
,
∆∆^ _
sesionUsuario
∆∆` m
.
∆∆m n
Empleado
∆∆n v
.
∆∆v w
Id
∆∆w y
,
∆∆y z
idUnidadNegocio∆∆{ ä
,∆∆ä ã

idTipoNota∆∆å ñ
,∆∆ñ ó
fechaActual∆∆ò £
,∆∆£ §
(∆∆• ¶
(∆∆¶ ß
int∆∆ß ™
)∆∆™ ´
modoPago∆∆´ ≥
)∆∆≥ ¥
.∆∆¥ µ
ToString∆∆µ Ω
(∆∆Ω æ
)∆∆æ ø
,∆∆ø ¿
$str∆∆¡ ≈
,∆∆≈ ∆
Diccionario∆∆« “
.∆∆“ ”"
MapeoWraperVsOrden∆∆” Â
.∆∆Â Ê
Single∆∆Ê Ï
(∆∆Ï Ì
m∆∆Ì Ó
=>∆∆Ô Ò
m∆∆Ú Û
.∆∆Û Ù
Key∆∆Ù ˜
==∆∆¯ ˙
Diccionario∆∆˚ Ü
.∆∆Ü á=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta∆∆á ¥
.∆∆¥ µ
Single∆∆µ ª
(∆∆ª º
n∆∆º Ω
=>∆∆æ ¿
n∆∆¡ ¬
.∆∆¬ √
Key∆∆√ ∆
==∆∆« …

idTipoNota∆∆  ‘
)∆∆‘ ’
.∆∆’ ÷
Value∆∆÷ €
)∆∆€ ‹
.∆∆‹ ›
Value∆∆› ‚
,∆∆‚ „
motivo∆∆‰ Í
,∆∆Í Î
ordenDeVenta∆∆Ï ¯
.∆∆¯ ˘
Cliente∆∆˘ Ä
(∆∆Ä Å
)∆∆Å Ç
.∆∆Ç É
Id∆∆É Ö
,∆∆Ö Ü
ordenDeVenta∆∆á ì
.∆∆ì î
AliasCliente∆∆î †
(∆∆† °
)∆∆° ¢
,∆∆¢ £
sesionUsuario∆∆§ ±
.∆∆± ≤.
IdCentroDeAtencionSeleccionado∆∆≤ –
,∆∆– —
detallesDeNota∆∆“ ‡
,∆∆‡ ·
MaestroSettings∆∆‚ Ò
.∆∆Ò Ú
Default∆∆Ú ˘
.∆∆˘ ˙0
 IdDetalleMaestroEstadoConfirmado∆∆˙ ö
,∆∆ö õ
$str∆∆ú —
,∆∆— “
true∆∆” ◊
,∆∆◊ ÿ
Diccionario∆∆Ÿ ‰
.∆∆‰ Â/
MapeoOrdenVsMovimientoDeAlmacen∆∆Â Ñ
.∆∆Ñ Ö
SingleOrDefault∆∆Ö î
(∆∆î ï
l∆∆ï ñ
=>∆∆ó ô
l∆∆ö õ
.∆∆õ ú
Key∆∆ú ü
==∆∆† ¢
Diccionario∆∆£ Æ
.∆∆Æ Ø"
MapeoWraperVsOrden∆∆Ø ¡
.∆∆¡ ¬
Single∆∆¬ »
(∆∆» …
m∆∆…  
=>∆∆À Õ
m∆∆Œ œ
.∆∆œ –
Key∆∆– ”
==∆∆‘ ÷
Diccionario∆∆◊ ‚
.∆∆‚ „=
-MapeoDetalleMaestroVsTipoTransaccionParaVenta∆∆„ ê
.∆∆ê ë
Single∆∆ë ó
(∆∆ó ò
n∆∆ò ô
=>∆∆ö ú
n∆∆ù û
.∆∆û ü
Key∆∆ü ¢
==∆∆£ •

idTipoNota∆∆¶ ∞
)∆∆∞ ±
.∆∆± ≤
Value∆∆≤ ∑
)∆∆∑ ∏
.∆∆∏ π
Value∆∆π æ
)∆∆æ ø
.∆∆ø ¿
Value∆∆¿ ≈
!=∆∆∆ »
$num∆∆…  
)∆∆  À
;∆∆À Ã!
ordenDeNotaDeDebito
»» #
.
»»# $'
id_transaccion_referencia
»»$ =
=
»»> ?
ordenDeVenta
»»@ L
.
»»L M
Id
»»M O
;
»»O P
notaDeDebito
   
.
   
Transaccion1
   )
.
  ) *
Add
  * -
(
  - .!
ordenDeNotaDeDebito
  . A
)
  A B
;
  B C
Cuota
ÃÃ 
cuota
ÃÃ 
=
ÃÃ 
new
ÃÃ !
Cuota
ÃÃ" '
(
ÃÃ' (2
$ObtenerSiguienteCodigoParaNuevaCuota
ÃÃ( L
(
ÃÃL M
true
ÃÃM Q
,
ÃÃQ R
fechaActual
ÃÃS ^
.
ÃÃ^ _
Year
ÃÃ_ c
)
ÃÃc d
+
ÃÃe f
$str
ÃÃg j
+
ÃÃk l
$num
ÃÃm n
,
ÃÃn o
fechaActual
ÃÃp {
,
ÃÃ{ |
fechaActualÃÃ} à
,ÃÃà â
detallesDeNotaÃÃä ò
.ÃÃò ô
SumÃÃô ú
(ÃÃú ù
dÃÃù û
=>ÃÃü °
dÃÃ¢ £
.ÃÃ£ §
totalÃÃ§ ©
)ÃÃ© ™
,ÃÃ™ ´
$strÃÃ¨ ÷
,ÃÃ÷ ◊
trueÃÃÿ ‹
)ÃÃ‹ ›
;ÃÃ› ﬁ!
ordenDeNotaDeDebito
ŒŒ #
.
ŒŒ# $
Cuota
ŒŒ$ )
.
ŒŒ) *
Add
ŒŒ* -
(
ŒŒ- .
cuota
ŒŒ. 3
)
ŒŒ3 4
;
ŒŒ4 5
if
œœ 
(
œœ 
modoPago
œœ 
==
œœ 
ModoPago
œœ  (
.
œœ( )
Contado
œœ) 0
)
œœ0 1
{
–– "
ValidarImporteAPagar
““ (
(
““( )
$num
““) *
,
““* +
cuota
““, 1
.
““1 2
total
““2 7
,
““7 8!
ordenDeNotaDeDebito
““9 L
.
““L M
importe_total
““M Z
)
““Z [
;
““[ \
Transaccion
‘‘ 
pago
‘‘  $
=
‘‘% &.
 GenerarPagoPorNotaCreditoODebito
‘‘' G
(
‘‘G H!
ordenDeNotaDeDebito
‘‘H [
,
‘‘[ \

CodigoPago
‘‘] g
(
‘‘g h
cuota
‘‘h m
)
‘‘m n
,
‘‘n o
cuota
‘‘p u
.
‘‘u v
total
‘‘v {
,
‘‘{ |
sesionUsuario‘‘} ä
.‘‘ä ã
Empleado‘‘ã ì
.‘‘ì î
Id‘‘î ñ
,‘‘ñ ó
fechaActual‘‘ò £
,‘‘£ §
$str‘‘• ß
,‘‘ß ®
sesionUsuario‘‘© ∂
.‘‘∂ ∑.
IdCentroDeAtencionSeleccionado‘‘∑ ’
,‘‘’ ÷
MaestroSettings‘‘◊ Ê
.‘‘Ê Á
Default‘‘Á Ó
.‘‘Ó Ô0
 IdDetalleMaestroEstadoConfirmado‘‘Ô è
,‘‘è ê
$str‘‘ë œ
)‘‘œ –
;‘‘– —
cuota
’’ 
.
’’ 
SetPagoACuenta
’’ (
(
’’( )!
ordenDeNotaDeDebito
’’) <
.
’’< =
importe_total
’’= J
)
’’J K
;
’’K L$
VincularPagoConLaCuota
◊◊ *
(
◊◊* +
pago
◊◊+ /
,
◊◊/ 0
cuota
◊◊1 6
,
◊◊6 7!
ordenDeNotaDeDebito
◊◊8 K
.
◊◊K L
importe_total
◊◊L Y
)
◊◊Y Z
;
◊◊Z [
notaDeDebito
⁄⁄  
.
⁄⁄  !
Transaccion1
⁄⁄! -
.
⁄⁄- .
Add
⁄⁄. 1
(
⁄⁄1 2
pago
⁄⁄2 6
)
⁄⁄6 7
;
⁄⁄7 8
}
€€ 
var
‹‹ 
result
‹‹ 
=
‹‹ $
transaccionRepositorio
‹‹ 3
.
‹‹3 4
CrearTransaccion
‹‹4 D
(
‹‹D E
notaDeDebito
‹‹E Q
)
‹‹Q R
;
‹‹R S
result
›› 
.
›› 
information
›› "
=
››# $
new
››% (
	Operacion
››) 2
(
››2 3!
ordenDeNotaDeDebito
››3 F
)
››F G
.
››G H
Id
››H J
;
››J K
result
ﬁﬁ 
.
ﬁﬁ 
objeto
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ  #
OrdenDeVenta
ﬁﬁ$ 0
(
ﬁﬁ0 1!
ordenDeNotaDeDebito
ﬁﬁ1 D
)
ﬁﬁD E
;
ﬁﬁE F
return
ﬂﬂ 
result
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
e
·· 
)
·· 
{
‚‚ 
throw
„„ 
new
„„ 
LogicaException
„„ )
(
„„) *
$str
„„* h
,
„„h i
e
„„j k
)
„„k l
;
„„l m
}
‰‰ 
}
ÂÂ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ 
Venta_Cliente
ÏÏ !
>
ÏÏ! "C
5ObtenerVentasClienteQueNoSeanConNotasDeCreditoYDebito
ÏÏ# X
(
ÏÏX Y
int
ÏÏY \

idEmpleado
ÏÏ] g
,
ÏÏg h
DateTime
ÏÏi q

fechaDesde
ÏÏr |
,
ÏÏ| }
DateTimeÏÏ~ Ü

fechaHastaÏÏá ë
)ÏÏë í
{
ÌÌ 	
try
ÓÓ 
{
ÔÔ 
var
ÒÒ 
	resultado
ÒÒ 
=
ÒÒ $
transaccionRepositorio
ÒÒ  6
.
ÒÒ6 7"
ObtenerVentasCliente
ÒÒ7 K
(
ÒÒK L
Diccionario
ÒÒL W
.
ÒÒW XH
9TiposDeComprobanteTributablesExceptoNotasDeCreditoYDebitoÒÒX ë
,ÒÒë í
newÒÒì ñ
intÒÒó ö
[ÒÒö õ
]ÒÒõ ú
{ÒÒù û#
TransaccionSettingsÒÒü ≤
.ÒÒ≤ ≥
DefaultÒÒ≥ ∫
.ÒÒ∫ ª-
IdTipoTransaccionOrdenDeVentaÒÒª ÿ
}ÒÒŸ ⁄
,ÒÒ⁄ €

fechaDesdeÒÒ‹ Ê
,ÒÒÊ Á

fechaHastaÒÒË Ú
)ÒÒÚ Û
.ÒÒÛ Ù
ToListÒÒÙ ˙
(ÒÒ˙ ˚
)ÒÒ˚ ¸
;ÒÒ¸ ˝
return
ÛÛ 
	resultado
ÛÛ  
;
ÛÛ  !
}
ÙÙ 
catch
ıı 
(
ıı 
	Exception
ıı 
e
ıı 
)
ıı 
{
ˆˆ 
throw
˜˜ 
new
˜˜ 
LogicaException
˜˜ )
(
˜˜) *
$str
˜˜* I
,
˜˜I J
e
˜˜K L
)
˜˜L M
;
˜˜M N
}
¯¯ 
}
˘˘ 	
public
˚˚ 
List
˚˚ 
<
˚˚ 
Venta_Cliente
˚˚ !
>
˚˚! "A
3ObtenerVentasClienteQueSeanConNotasDeCreditoYDebito
˚˚# V
(
˚˚V W
int
˚˚W Z

idEmpleado
˚˚[ e
,
˚˚e f
DateTime
˚˚g o

fechaDesde
˚˚p z
,
˚˚z {
DateTime˚˚| Ñ

fechaHasta˚˚Ö è
)˚˚è ê
{
¸¸ 	
try
˝˝ 
{
˛˛ 
var
ÄÄ 
	resultado
ÄÄ 
=
ÄÄ $
transaccionRepositorio
ÄÄ  6
.
ÄÄ6 7S
EObtenerVentasClienteConOperacionDeReferenciaSegunElEstadoQueDebeTener
ÄÄ7 |
(
ÄÄ| }
DiccionarioÄÄ} à
.ÄÄà âF
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebitoÄÄâ ø
,ÄÄø ¿
DiccionarioÄÄ¡ Ã
.ÄÄÃ ÕW
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebitoÄÄÕ î
,ÄÄî ï

fechaDesdeÄÄñ †
,ÄÄ† °

fechaHastaÄÄ¢ ¨
)ÄÄ¨ ≠
.ÄÄ≠ Æ
ToListÄÄÆ ¥
(ÄÄ¥ µ
)ÄÄµ ∂
;ÄÄ∂ ∑
return
ÇÇ 
	resultado
ÇÇ  
;
ÇÇ  !
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
LogicaException
ÜÜ )
(
ÜÜ) *
$str
ÜÜ* I
,
ÜÜI J
e
ÜÜK L
)
ÜÜL M
;
ÜÜM N
}
áá 
}
àà 	
public
ää 
List
ää 
<
ää 
Venta_Cliente
ää !
>
ää! "(
ConsolidarRegistroDeVentas
ää# =
(
ää= >
Periodo
ää> E
periodo
ääF M
,
ääM N
int
ääO R

idEmpleado
ääS ]
)
ää] ^
{
ãã 	
try
åå 
{
çç 
List
èè 
<
èè 
Venta_Cliente
èè "
>
èè" #
	registros
èè$ -
=
èè. /
new
èè0 3
List
èè4 8
<
èè8 9
Venta_Cliente
èè9 F
>
èèF G
(
èèG H
)
èèH I
;
èèI J
DateTime
êê 

fechaDesde
êê #
=
êê$ %
periodo
êê& -
.
êê- .

FechaDesde
êê. 8
,
êê8 9

fechaHasta
êê: D
=
êêE F
periodo
êêG N
.
êêN O

FechaHasta
êêO Y
;
êêY Z
List
ìì 
<
ìì 
Venta_Cliente
ìì "
>
ìì" #
ventasDelPeriodo
ìì$ 4
=
ìì5 6C
5ObtenerVentasClienteQueNoSeanConNotasDeCreditoYDebito
ìì7 l
(
ììl m

idEmpleado
ììm w
,
ììw x

fechaDesdeììy É
,ììÉ Ñ

fechaHastaììÖ è
)ììè ê
.
îî> ?
OrderBy
îî? F
(
îîF G
vp
îîG I
=>
îîJ L
vp
îîM O
.
îîO P
FechaEmision
îîP \
)
îî\ ]
.
ïï> ?
ThenBy
ïï? E
(
ïïE F
vp
ïïF H
=>
ïïI K
vp
ïïL N
.
ïïN O
NumeroSerie
ïïO Z
)
ïïZ [
.
ññ> ?
ThenBy
ññ? E
(
ññE F
vp
ññF H
=>
ññI K
vp
ññL N
.
ññN O
NumeroComprobante
ññO `
)
ññ` a
.
óó> ?
ToList
óó? E
(
óóE F
)
óóF G
;
óóG H
List
öö 
<
öö 
Venta_Cliente
öö "
>
öö" #'
ventasDelPeriodoConBoleta
öö$ =
=
öö> ?
ventasDelPeriodo
öö@ P
.
õõ2 3
Where
õõ3 8
(
õõ8 9
vp
õõ9 ;
=>
õõ< >
vp
õõ? A
.
õõA B
IdTipoComprobante
õõB S
==
õõT V
MaestroSettings
õõW f
.
õõf g
Default
õõg n
.
õõn o0
!IdDetalleMaestroComprobanteBoletaõõo ê
)
úú3 4
.
ùù2 3
OrderBy
ùù3 :
(
ùù: ;
vp
ùù; =
=>
ùù> @
vp
ùùA C
.
ùùC D
FechaEmision
ùùD P
)
ùùP Q
.
ûû2 3
ThenBy
ûû3 9
(
ûû9 :
vp
ûû: <
=>
ûû= ?
vp
ûû@ B
.
ûûB C
NumeroSerie
ûûC N
)
ûûN O
.
üü2 3
ThenBy
üü3 9
(
üü9 :
vp
üü: <
=>
üü= ?
vp
üü@ B
.
üüB C
NumeroComprobante
üüC T
)
üüT U
.
††2 3
ToList
††3 9
(
††9 :
)
††: ;
;
††; <
List
££ 
<
££ 
int
££ 
>
££ 
	idsSeries
££ #
=
££$ %@
2ObtenerIdsDeSeriesDeComprobantesParaBoletasDeVenta
££& X
(
££X Y
)
££Y Z
;
££Z [
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
idSerie
¶¶ $
in
¶¶% '
	idsSeries
¶¶( 1
)
¶¶1 2
{
ßß 
List
©© 
<
©© 
Venta_Cliente
©© &
>
©©& '
ventasDeLaSerie
©©( 7
=
©©8 9'
ventasDelPeriodoConBoleta
©©: S
.
™™J K
Where
™™K P
(
™™P Q
vi
™™Q S
=>
™™T V
vi
™™W Y
.
™™Y Z
IdSerie
™™Z a
==
™™b d
idSerie
™™e l
)
™™l m
.
´´J K
OrderBy
´´K R
(
´´R S
vp
´´S U
=>
´´V X
vp
´´Y [
.
´´[ \
FechaEmision
´´\ h
)
´´h i
.
¨¨J K
ThenBy
¨¨K Q
(
¨¨Q R
vp
¨¨R T
=>
¨¨U W
vp
¨¨X Z
.
¨¨Z [
NumeroSerie
¨¨[ f
)
¨¨f g
.
≠≠J K
ThenBy
≠≠K Q
(
≠≠Q R
vp
≠≠R T
=>
≠≠U W
vp
≠≠X Z
.
≠≠Z [
NumeroComprobante
≠≠[ l
)
≠≠l m
.
ÆÆJ K
ToList
ÆÆK Q
(
ÆÆQ R
)
ÆÆR S
;
ÆÆS T
if
∞∞ 
(
∞∞ 
ventasDeLaSerie
∞∞ '
.
∞∞' (
Count
∞∞( -
(
∞∞- .
)
∞∞. /
>
∞∞0 1
$num
∞∞2 3
)
∞∞3 4
{
±± 
int
≥≥ !
contVentasDeLaSerie
≥≥ /
=
≥≥0 1
$num
≥≥2 3
;
≥≥3 4
int
µµ '
cantidadDeVentasDeLaSerie
µµ 5
=
µµ6 7
ventasDeLaSerie
µµ8 G
.
µµG H
Count
µµH M
(
µµM N
)
µµN O
;
µµO P
bool
∑∑ ?
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha
∑∑ N
=
∑∑O P
false
∑∑Q V
;
∑∑V W
int
ππ >
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFecha
ππ L
=
ππM N
$num
ππO P
;
ππP Q
do
ªª 
{
ºº 
List
ææ  
<
ææ  !
Venta_Cliente
ææ! .
>
ææ. /0
"ventasAgrupadasPorTipoAgrupamiento
ææ0 R
=
ææS T
new
ææU X
List
ææY ]
<
ææ] ^
Venta_Cliente
ææ^ k
>
ææk l
(
ææl m
)
ææm n
;
ææn o
List
øø  
<
øø  !
Venta_Cliente
øø! .
>
øø. /!
itemVentasDeLaSerie
øø0 C
=
øøD E
null
øøF J
;
øøJ K!
itemVentasDeLaSerie
¡¡ /
=
¡¡0 1
ventasDeLaSerie
¡¡2 A
.
¡¡A B
Skip
¡¡B F
(
¡¡F G!
contVentasDeLaSerie
¡¡G Z
)
¡¡Z [
.
¡¡[ \
Take
¡¡\ `
(
¡¡` a
$num
¡¡a b
)
¡¡b c
.
¡¡c d
ToList
¡¡d j
(
¡¡j k
)
¡¡k l
;
¡¡l m
List
√√  
<
√√  !
Venta_Cliente
√√! .
>
√√. /%
ventasDeLaSeriePorFecha
√√0 G
=
√√H I
ventasDeLaSerie
√√J Y
.
≈≈6 7
Where
≈≈7 <
(
≈≈< =
vsf
≈≈= @
=>
≈≈A C
vsf
≈≈D G
.
≈≈G H
FechaEmision
≈≈H T
==
≈≈U W!
itemVentasDeLaSerie
≈≈X k
.
≈≈k l
First
≈≈l q
(
≈≈q r
)
≈≈r s
.
≈≈s t
FechaEmision≈≈t Ä
)≈≈Ä Å
.
∆∆6 7
ToList
∆∆7 =
(
∆∆= >
)
∆∆> ?
;
∆∆? @
int
…… /
!cantidadDeVentasDeLaSeriePorFecha
……  A
=
……B C%
ventasDeLaSeriePorFecha
……D [
.
……[ \
Count
……\ a
(
……a b
)
……b c
;
……c d
int
ÀÀ )
contVentasDeLaSeriePorFecha
ÀÀ  ;
=
ÀÀ< =?
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha
ÀÀ> o
?
ÀÀp q
$num
ÀÀr s
:
ÀÀt u?
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFechaÀÀv ¶
;ÀÀ¶ ß0
"ventasAgrupadasPorTipoAgrupamiento
ÕÕ >
.
ÕÕ> ?
Add
ÕÕ? B
(
ÕÕB C!
itemVentasDeLaSerie
ÕÕC V
.
ÕÕV W
First
ÕÕW \
(
ÕÕ\ ]
)
ÕÕ] ^
)
ÕÕ^ _
;
ÕÕ_ `
List
œœ  
<
œœ  !
Venta_Cliente
œœ! .
>
œœ. /
element
œœ0 7
=
œœ8 9%
ventasDeLaSeriePorFecha
œœ: Q
.
œœQ R
Where
œœR W
(
œœW X
vs
œœX Z
=>
œœ[ ]
vs
œœ^ `
.
œœ` a
NumeroComprobante
œœa r
==
œœs u
$num
œœv y
)
œœy z
.
œœz {
ToListœœ{ Å
(œœÅ Ç
)œœÇ É
;œœÉ Ñ
bool
””  
	consolido
””! *
=
””+ ,
false
””- 2
;
””2 3
while
’’ !
(
’’" #)
contVentasDeLaSeriePorFecha
’’# >
<
’’? @/
!cantidadDeVentasDeLaSeriePorFecha
’’A b
-
’’c d
$num
’’e f
)
’’f g
{
÷÷ 
var
ÿÿ  #
item
ÿÿ$ (
=
ÿÿ) *%
ventasDeLaSeriePorFecha
ÿÿ+ B
.
ÿÿB C
Skip
ÿÿC G
(
ÿÿG H)
contVentasDeLaSeriePorFecha
ÿÿH c
+
ÿÿd e
$num
ÿÿf g
)
ÿÿg h
.
ÿÿh i
Take
ÿÿi m
(
ÿÿm n
$num
ÿÿn o
)
ÿÿo p
.
ÿÿp q
ToList
ÿÿq w
(
ÿÿw x
)
ÿÿx y
;
ÿÿy z
if
⁄⁄  "
(
⁄⁄# $!
itemVentasDeLaSerie
⁄⁄$ 7
.
⁄⁄7 8
First
⁄⁄8 =
(
⁄⁄= >
)
⁄⁄> ?
.
⁄⁄? @#
IdActorNegocioExterno
⁄⁄@ U
==
⁄⁄V X
item
⁄⁄Y ]
.
⁄⁄] ^
First
⁄⁄^ c
(
⁄⁄c d
)
⁄⁄d e
.
⁄⁄e f#
IdActorNegocioExterno
⁄⁄f {
&&
⁄⁄| ~"
itemVentasDeLaSerie⁄⁄ í
.⁄⁄í ì
First⁄⁄ì ò
(⁄⁄ò ô
)⁄⁄ô ö
.⁄⁄ö õ 
TipoAgrupamiento⁄⁄õ ´
==⁄⁄¨ Æ
item⁄⁄Ø ≥
.⁄⁄≥ ¥
First⁄⁄¥ π
(⁄⁄π ∫
)⁄⁄∫ ª
.⁄⁄ª º 
TipoAgrupamiento⁄⁄º Ã
)⁄⁄Ã Õ
{
€€  !0
"ventasAgrupadasPorTipoAgrupamiento
‹‹$ F
.
‹‹F G
Add
‹‹G J
(
‹‹J K
item
‹‹K O
.
‹‹O P
First
‹‹P U
(
‹‹U V
)
‹‹V W
)
‹‹W X
;
‹‹X Y)
contVentasDeLaSeriePorFecha
ﬁﬁ$ ?
++
ﬁﬁ? A
;
ﬁﬁA B!
contVentasDeLaSerie
ﬂﬂ$ 7
++
ﬂﬂ7 9
;
ﬂﬂ9 :
}
‡‡  !
else
··  $
{
‚‚  !?
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha
‰‰$ U
=
ÂÂ( ))
contVentasDeLaSeriePorFecha
ÂÂ* E
==
ÂÂF H/
!cantidadDeVentasDeLaSeriePorFecha
ÂÂI j
-
ÂÂk l
$num
ÂÂm n
;
ÂÂn o)
contVentasDeLaSeriePorFecha
ÁÁ$ ?
++
ÁÁ? A
;
ÁÁA B!
contVentasDeLaSerie
ËË$ 7
++
ËË7 9
;
ËË9 :
List
ÍÍ$ (
<
ÍÍ( )
Venta_Cliente
ÍÍ) 6
>
ÍÍ6 7)
ventasAgrupadasConsolidadas
ÍÍ8 S
=
ÍÍT U'
ConsolidadarVentasCliente
ÍÍV o
(
ÍÍo p1
"ventasAgrupadasPorTipoAgrupamientoÍÍp í
)ÍÍí ì
;ÍÍì î
	consolido
ÎÎ$ -
=
ÎÎ. /
true
ÎÎ0 4
;
ÎÎ4 5
	registros
ÌÌ$ -
.
ÌÌ- .
AddRange
ÌÌ. 6
(
ÌÌ6 7)
ventasAgrupadasConsolidadas
ÌÌ7 R
)
ÌÌR S
;
ÌÌS T
break
ÔÔ$ )
;
ÔÔ) *
}
  !
}
ÒÒ 
if
ÛÛ 
(
ÛÛ  )
contVentasDeLaSeriePorFecha
ÛÛ  ;
==
ÛÛ< >/
!cantidadDeVentasDeLaSeriePorFecha
ÛÛ? `
-
ÛÛa b
$num
ÛÛc d
)
ÛÛd e
{
ÙÙ ?
1terminoTodoElRecorridoDeLaVentasDeLaSeriePorFecha
ıı  Q
=
ııR S
true
ııT X
;
ııX Y!
contVentasDeLaSerie
˜˜  3
++
˜˜3 5
;
˜˜5 6>
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFecha
˘˘  P
=
˘˘Q R)
contVentasDeLaSeriePorFecha
˘˘S n
;
˘˘n o
List
˚˚  $
<
˚˚$ %
Venta_Cliente
˚˚% 2
>
˚˚2 3)
ventasAgrupadasConsolidadas
˚˚4 O
;
˚˚O P
if
¸¸  "
(
¸¸# $
	consolido
¸¸$ -
)
¸¸- .
{
˝˝  !
var
˛˛$ '
item
˛˛( ,
=
˛˛- .%
ventasDeLaSeriePorFecha
˛˛/ F
.
˛˛F G
Skip
˛˛G K
(
˛˛K L)
contVentasDeLaSeriePorFecha
˛˛L g
)
˛˛g h
.
˛˛h i
Take
˛˛i m
(
˛˛m n
$num
˛˛n o
)
˛˛o p
.
˛˛p q
ToList
˛˛q w
(
˛˛w x
)
˛˛x y
;
˛˛y z)
ventasAgrupadasConsolidadas
ˇˇ$ ?
=
ˇˇ@ A'
ConsolidadarVentasCliente
ˇˇB [
(
ˇˇ[ \
item
ˇˇ\ `
)
ˇˇ` a
;
ˇˇa b
}
ÄÄ  !
else
ÅÅ  $
{
ÇÇ  !)
ventasAgrupadasConsolidadas
ÉÉ$ ?
=
ÉÉ@ A'
ConsolidadarVentasCliente
ÉÉB [
(
ÉÉ[ \0
"ventasAgrupadasPorTipoAgrupamiento
ÉÉ\ ~
)
ÉÉ~ 
;ÉÉ Ä
}
ÑÑ  !
	registros
ÜÜ  )
.
ÜÜ) *
AddRange
ÜÜ* 2
(
ÜÜ2 3)
ventasAgrupadasConsolidadas
ÜÜ3 N
)
ÜÜN O
;
ÜÜO P
}
áá 
else
àà  
{
ââ >
0cantidadDondeSeQuedoDeLasVentasDeLaSeriePorFecha
ää  P
=
ääQ R)
contVentasDeLaSeriePorFecha
ääS n
;
ään o
}
ãã 
}
çç 
while
çç 
(
çç  !!
contVentasDeLaSerie
çç! 4
<
çç5 6'
cantidadDeVentasDeLaSerie
çç7 P
)
ççP Q
;
ççQ R
}
éé 
}
èè 
List
íí 
<
íí 
Venta_Cliente
íí "
>
íí" #
ventasConFactura
íí$ 4
=
íí5 6
ventasDelPeriodo
íí7 G
.
ííG H
Where
ííH M
(
ííM N
v
ííN O
=>
ííP R
!
ííS T
v
ííT U
.
ííU V
EsInvalidada
ííV b
&&
ííc e
v
ííf g
.
ííg h
IdTipoComprobante
ííh y
==
ííz |
MaestroSettingsíí} å
.ííå ç
Defaultííç î
.ííî ï2
"IdDetalleMaestroComprobanteFacturaííï ∑
)íí∑ ∏
.íí∏ π
ToListííπ ø
(ííø ¿
)íí¿ ¡
;íí¡ ¬
	registros
îî 
.
îî 
AddRange
îî "
(
îî" #
ventasConFactura
îî# 3
)
îî3 4
;
îî4 5
List
ññ 
<
ññ 
Venta_Cliente
ññ "
>
ññ" #)
ventasInvalidadasConFactura
ññ$ ?
=
ññ@ A
ventasDelPeriodo
ññB R
.
ññR S
Where
ññS X
(
ññX Y
v
ññY Z
=>
ññ[ ]
v
ññ^ _
.
ññ_ `
EsInvalidada
ññ` l
&&
ññm o
v
ññp q
.
ññq r 
IdTipoComprobanteññr É
==ññÑ Ü
MaestroSettingsññá ñ
.ñññ ó
Defaultññó û
.ññû ü2
"IdDetalleMaestroComprobanteFacturaññü ¡
)ññ¡ ¬
.ññ¬ √
ToListññ√ …
(ññ…  
)ññ  À
;ññÀ Ã
	registros
óó 
.
óó 
AddRange
óó "
(
óó" #)
ventasInvalidadasConFactura
óó# >
)
óó> ?
;
óó? @
List
ôô 
<
ôô 
Venta_Cliente
ôô "
>
ôô" #,
ventasConNotasDeCreditoYDebito
ôô$ B
=
ôôC DN
?ObtenerVentasClientesQueSeanConNotasDeCreditoYDebitoConfirmadasôôE Ñ
(ôôÑ Ö

idEmpleadoôôÖ è
,ôôè ê

fechaDesdeôôë õ
,ôôõ ú

fechaHastaôôù ß
)ôôß ®
;ôô® ©
	registros
öö 
.
öö 
AddRange
öö "
(
öö" #,
ventasConNotasDeCreditoYDebito
öö# A
)
ööA B
;
ööB C
	registros
úú 
=
úú 
	registros
úú %
.
úú% &
OrderBy
úú& -
(
úú- .
r
úú. /
=>
úú0 2
r
úú3 4
.
úú4 5
NumeroSerie
úú5 @
)
úú@ A
.
úúA B
ThenBy
úúB H
(
úúH I
r
úúI J
=>
úúK M
r
úúN O
.
úúO P
NumeroComprobante
úúP a
)
úúa b
.
úúb c
ThenBy
úúc i
(
úúi j
r
úúj k
=>
úúl n
r
úúo p
.
úúp q
FechaEmision
úúq }
)
úú} ~
.
úú~ 
ThenByúú Ö
(úúÖ Ü
rúúÜ á
=>úúà ä
rúúã å
.úúå ç!
IdTipoComprobanteúúç û
)úúû ü
.úúü †
ToListúú† ¶
(úú¶ ß
)úúß ®
;úú® ©
return
ûû 
	registros
ûû  
;
ûû  !
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ )
(
¢¢) *
$str
¢¢* T
,
¢¢T U
e
¢¢V W
)
¢¢W X
;
¢¢X Y
}
££ 
}
§§ 	
public
¶¶ 
List
¶¶ 
<
¶¶ 
Venta_Cliente
¶¶ !
>
¶¶! "'
ConsolidadarVentasCliente
¶¶# <
(
¶¶< =
List
¶¶= A
<
¶¶A B
Venta_Cliente
¶¶B O
>
¶¶O P
ventasAgrupadas
¶¶Q `
)
¶¶` a
{
ßß 	
List
©© 
<
©© 
Venta_Cliente
©© 
>
©©  
ventasConsolidadas
©©  2
=
©©3 4
ventasAgrupadas
©©5 D
.
™™) *
GroupBy
™™* 1
(
™™1 2
vcs
™™2 5
=>
™™6 8
new
™™9 <
{
´´) *
Fecha
≠≠- 2
=
≠≠3 4
new
≠≠5 8
{
≠≠9 :
y
≠≠; <
=
≠≠= >
vcs
≠≠? B
.
≠≠B C
FechaEmision
≠≠C O
.
≠≠O P
Year
≠≠P T
,
≠≠T U
m
≠≠V W
=
≠≠X Y
vcs
≠≠Z ]
.
≠≠] ^
FechaEmision
≠≠^ j
.
≠≠j k
Month
≠≠k p
,
≠≠p q
d
≠≠r s
=
≠≠t u
vcs
≠≠v y
.
≠≠y z
FechaEmision≠≠z Ü
.≠≠Ü á
Day≠≠á ä
}≠≠ã å
,≠≠å ç
vcs
ÆÆ- 0
.
ÆÆ0 1
IdSerie
ÆÆ1 8
,
ÆÆ8 9
vcs
ØØ- 0
.
ØØ0 1
NumeroSerie
ØØ1 <
,
ØØ< =
vcs
∞∞- 0
.
∞∞0 1
CodigoComprobante
∞∞1 B
,
∞∞B C
vcs
±±- 0
.
±±0 1
IdTipoComprobante
±±1 B
,
±±B C
vcs
≤≤- 0
.
≤≤0 1
CodigoMoneda
≤≤1 =
,
≤≤= >
}
≥≥) *
)
≥≥* +
.
≥≥+ ,
Select
≥≥, 2
(
≥≥2 3
vcc
≥≥3 6
=>
≥≥7 9
new
≥≥: =
Venta_Cliente
≥≥> K
(
≥≥K L
)
≥≥L M
{
¥¥) *
Anyo
µµ- 1
=
µµ2 3
vcc
µµ4 7
.
µµ7 8
Key
µµ8 ;
.
µµ; <
Fecha
µµ< A
.
µµA B
y
µµB C
,
µµC D
Mes
∂∂- 0
=
∂∂1 2
vcc
∂∂3 6
.
∂∂6 7
Key
∂∂7 :
.
∂∂: ;
Fecha
∂∂; @
.
∂∂@ A
m
∂∂A B
,
∂∂B C
Dia
∑∑- 0
=
∑∑1 2
vcc
∑∑3 6
.
∑∑6 7
Key
∑∑7 :
.
∑∑: ;
Fecha
∑∑; @
.
∑∑@ A
d
∑∑A B
,
∑∑B C
IdTipoComprobante
∏∏- >
=
∏∏? @
vcc
∏∏A D
.
∏∏D E
Key
∏∏E H
.
∏∏H I
IdTipoComprobante
∏∏I Z
,
∏∏Z [
CodigoComprobante
ππ- >
=
ππ? @
vcc
ππA D
.
ππD E
Key
ππE H
.
ππH I
CodigoComprobante
ππI Z
,
ππZ [
IdSerie
∫∫- 4
=
∫∫5 6
vcc
∫∫7 :
.
∫∫: ;
Key
∫∫; >
.
∫∫> ?
IdSerie
∫∫? F
,
∫∫F G
NumeroSerie
ªª- 8
=
ªª9 :
vcc
ªª; >
.
ªª> ?
Key
ªª? B
.
ªªB C
NumeroSerie
ªªC N
,
ªªN O
NumeroComprobante
ºº- >
=
ºº? @
(
ººA B
int
ººB E
)
ººE F
vcc
ººF I
.
ººI J
Min
ººJ M
(
ººM N
vc
ººN P
=>
ººQ S
vc
ººT V
.
ººV W
NumeroComprobante
ººW h
)
ººh i
,
ººi j
NumeroInicial
ΩΩ- :
=
ΩΩ; <
(
ΩΩ= >
int
ΩΩ> A
)
ΩΩA B
vcc
ΩΩB E
.
ΩΩE F
Min
ΩΩF I
(
ΩΩI J
vc
ΩΩJ L
=>
ΩΩM O
vc
ΩΩP R
.
ΩΩR S
NumeroComprobante
ΩΩS d
)
ΩΩd e
,
ΩΩe f
NumeroFinal
ææ- 8
=
ææ9 :
(
ææ; <
int
ææ< ?
)
ææ? @
vcc
ææ@ C
.
ææC D
Max
ææD G
(
ææG H
vc
ææH J
=>
ææK M
vc
ææN P
.
ææP Q
NumeroComprobante
ææQ b
)
ææb c
,
ææc d
Igv
øø- 0
=
øø1 2
vcc
øø3 6
.
øø6 7
Sum
øø7 :
(
øø: ;
vc
øø; =
=>
øø> @
(
øøA B
decimal
øøB I
)
øøI J
vc
øøJ L
.
øøL M
Igv
øøM P
)
øøP Q
,
øøQ R
ValorDeVenta
¿¿- 9
=
¿¿: ;
vcc
¿¿< ?
.
¿¿? @
Sum
¿¿@ C
(
¿¿C D
vc
¿¿D F
=>
¿¿G I
vc
¿¿J L
.
¿¿L M
ValorDeVenta
¿¿M Y
)
¿¿Y Z
,
¿¿Z [
ImporteTotal
¡¡- 9
=
¡¡: ;
vcc
¡¡< ?
.
¡¡? @
Sum
¡¡@ C
(
¡¡C D
vc
¡¡D F
=>
¡¡G I
vc
¡¡J L
.
¡¡L M
ImporteTotal
¡¡M Y
)
¡¡Y Z
,
¡¡Z [
ValorIcbper
¬¬- 8
=
¬¬9 :
vcc
¬¬; >
.
¬¬> ?
Sum
¬¬? B
(
¬¬B C
vc
¬¬C E
=>
¬¬F H
vc
¬¬I K
.
¬¬K L
ValorIcbper
¬¬L W
)
¬¬W X
,
¬¬X Y
PrimerNombre
√√- 9
=
√√: ;
vcc
√√< ?
.
√√? @
FirstOrDefault
√√@ N
(
√√N O
)
√√O P
.
√√P Q
PrimerNombre
√√Q ]
,
√√] ^
IdTipoDocumento
ƒƒ- <
=
ƒƒ= >
vcc
ƒƒ? B
.
ƒƒB C
FirstOrDefault
ƒƒC Q
(
ƒƒQ R
)
ƒƒR S
.
ƒƒS T
IdTipoDocumento
ƒƒT c
,
ƒƒc d
NumeroDocumento
≈≈- <
=
≈≈= >
vcc
≈≈? B
.
≈≈B C
FirstOrDefault
≈≈C Q
(
≈≈Q R
)
≈≈R S
.
≈≈S T
NumeroDocumento
≈≈T c
,
≈≈c d
CodigoMoneda
∆∆- 9
=
∆∆: ;
vcc
∆∆< ?
.
∆∆? @
Key
∆∆@ C
.
∆∆C D
CodigoMoneda
∆∆D P
,
∆∆P Q
IdEstadoActual
««- ;
=
««< =
vcc
««> A
.
««A B
FirstOrDefault
««B P
(
««P Q
)
««Q R
.
««R S
IdEstadoActual
««S a
,
««a b&
IdEstadoAnteriorAlActual
»»- E
=
»»F G
vcc
»»H K
.
»»K L
FirstOrDefault
»»L Z
(
»»Z [
)
»»[ \
.
»»\ ]&
IdEstadoAnteriorAlActual
»»] u
}
  ) *
)
  * +
.
ÀÀ& '
OrderBy
ÀÀ' .
(
ÀÀ. /
t
ÀÀ/ 0
=>
ÀÀ1 3
t
ÀÀ4 5
.
ÀÀ5 6
FechaEmision
ÀÀ6 B
)
ÀÀB C
.
ÀÀC D
ThenBy
ÀÀD J
(
ÀÀJ K
t
ÀÀK L
=>
ÀÀM O
t
ÀÀP Q
.
ÀÀQ R
NumeroSerie
ÀÀR ]
)
ÀÀ] ^
.
ÀÀ^ _
ThenBy
ÀÀ_ e
(
ÀÀe f
t
ÀÀf g
=>
ÀÀh j
t
ÀÀk l
.
ÀÀl m
NumeroComprobante
ÀÀm ~
)
ÀÀ~ 
.ÀÀ Ä
ToListÀÀÄ Ü
(ÀÀÜ á
)ÀÀá à
;ÀÀà â
return
ÃÃ  
ventasConsolidadas
ÃÃ %
;
ÃÃ% &
}
ÕÕ 	
public
œœ 
List
œœ 
<
œœ 
Venta_Cliente
œœ !
>
œœ! "M
?ObtenerVentasClientesQueSeanConNotasDeCreditoYDebitoConfirmadas
œœ# b
(
œœb c
int
œœc f

idEmpleado
œœg q
,
œœq r
DateTime
œœs {

fechaDesdeœœ| Ü
,œœÜ á
DateTimeœœà ê

fechaHastaœœë õ
)œœõ ú
{
–– 	
try
—— 
{
““ 
return
‘‘ $
transaccionRepositorio
‘‘ -
.
‘‘- .S
EObtenerVentasClienteConOperacionDeReferenciaSegunElEstadoQueDebeTener
‘‘. s
(
‘‘s t
Diccionario
‘‘t 
.‘‘ ÄF
6TiposDeComprobanteTributablesParaNotasDeCreditoYDebito‘‘Ä ∂
,‘‘∂ ∑
Diccionario‘‘∏ √
.‘‘√ ƒW
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebito‘‘ƒ ã
,‘‘ã å

fechaDesde‘‘ç ó
,‘‘ó ò

fechaHasta‘‘ô £
)‘‘£ §
.
’’ 
OrderBy
’’ 
(
’’ 
t
’’ 
=>
’’ 
t
’’  !
.
’’! "
FechaEmision
’’" .
)
’’. /
.
’’/ 0
ThenBy
’’0 6
(
’’6 7
t
’’7 8
=>
’’9 ;
t
’’< =
.
’’= >
NumeroSerie
’’> I
)
’’I J
.
’’J K
ThenBy
’’K Q
(
’’Q R
t
’’R S
=>
’’T V
t
’’W X
.
’’X Y
Id
’’Y [
)
’’[ \
.
’’\ ]
ToList
’’] c
(
’’c d
)
’’d e
;
’’e f
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* w
,
⁄⁄w x
e
⁄⁄y z
)
⁄⁄z {
;
⁄⁄{ |
}
€€ 
}
‹‹ 	
public
‚‚ 
List
‚‚ 
<
‚‚ 
Venta_Cliente
‚‚ !
>
‚‚! "O
AObtenerVentasClientesQueSeanConComprobantesTributablesConfirmadas
‚‚# d
(
‚‚d e
int
‚‚e h
[
‚‚h i
]
‚‚i j
idsPuntosDeVentas
‚‚k |
,
‚‚| }
DateTime‚‚~ Ü

fechaDesde‚‚á ë
,‚‚ë í
DateTime‚‚ì õ

fechaHasta‚‚ú ¶
)‚‚¶ ß
{
„„ 	
try
‰‰ 
{
ÂÂ 
var
ÁÁ 
	resultado
ÁÁ 
=
ÁÁ $
transaccionRepositorio
ÁÁ  6
.
ÁÁ6 7M
?ObtenerVentasClienteConOperacionDeReferenciaSegunElUltimoEstado
ÁÁ7 v
(
ÁÁv w
DiccionarioÁÁw Ç
.ÁÁÇ É-
TiposDeComprobanteTributablesÁÁÉ †
,ÁÁ† °
DiccionarioÁÁ¢ ≠
.ÁÁ≠ Æ>
.TiposDeTransaccionOrdenesDeOperacionesDeVentasÁÁÆ ‹
,ÁÁ‹ ›
MaestroSettingsÁÁﬁ Ì
.ÁÁÌ Ó
DefaultÁÁÓ ı
.ÁÁı ˆ0
 IdDetalleMaestroEstadoConfirmadoÁÁˆ ñ
,ÁÁñ ó

fechaDesdeÁÁò ¢
,ÁÁ¢ £

fechaHastaÁÁ§ Æ
)ÁÁÆ Ø
.ÁÁØ ∞
ToListÁÁ∞ ∂
(ÁÁ∂ ∑
)ÁÁ∑ ∏
;ÁÁ∏ π
return
ËË 
	resultado
ËË  
;
ËË  !
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* U
,
ÏÏU V
e
ÏÏW X
)
ÏÏX Y
;
ÏÏY Z
}
ÌÌ 
}
ÓÓ 	
public
 
List
 
<
 
Venta_Cliente
 !
>
! "O
AObtenerVentasClientesQueSeanConComprobantesTributablesInvalidadas
# d
(
d e
int
e h
[
h i
]
i j
idsPuntosDeVentas
k |
,
| }
DateTime~ Ü

fechaDesdeá ë
,ë í
DateTimeì õ

fechaHastaú ¶
)¶ ß
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
var
ıı 
	resultado
ıı 
=
ıı $
transaccionRepositorio
ıı  6
.
ıı6 7;
-ObtenerVentasClienteSegunElEstadoQueDebeTener
ıı7 d
(
ııd e
Diccionario
ııe p
.
ııp q*
TiposDeComprobanteParaVentaııq å
,ııå ç
Diccionarioııé ô
.ııô ö>
.TiposDeTransaccionOrdenesDeOperacionesDeVentasııö »
,ıı» …
MaestroSettingsıı  Ÿ
.ııŸ ⁄
Defaultıı⁄ ·
.ıı· ‚0
 IdDetalleMaestroEstadoInvalidadoıı‚ Ç
,ııÇ É

fechaDesdeııÑ é
,ııé è

fechaHastaııê ö
)ııö õ
.ııõ ú
ToListııú ¢
(ıı¢ £
)ıı£ §
;ıı§ •
return
˜˜ 
	resultado
˜˜  
;
˜˜  !
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
e
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
new
˚˚ 
LogicaException
˚˚ )
(
˚˚) *
$str
˚˚* U
,
˚˚U V
e
˚˚W X
)
˚˚X Y
;
˚˚Y Z
}
¸¸ 
}
˝˝ 	
public
ˇˇ 
List
ˇˇ 
<
ˇˇ 
Venta_Cliente
ˇˇ !
>
ˇˇ! "7
)ObtenerVentasClientesConfirmadasConIcbper
ˇˇ# L
(
ˇˇL M
int
ˇˇM P
[
ˇˇP Q
]
ˇˇQ R
idsPuntosDeVentas
ˇˇS d
,
ˇˇd e
DateTime
ˇˇf n

fechaDesde
ˇˇo y
,
ˇˇy z
DateTimeˇˇ{ É

fechaHastaˇˇÑ é
)ˇˇé è
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
var
ÉÉ 

resultados
ÉÉ 
=
ÉÉ  O
AObtenerVentasClientesQueSeanConComprobantesTributablesConfirmadas
ÉÉ! b
(
ÉÉb c
idsPuntosDeVentas
ÉÉc t
,
ÉÉt u

fechaDesdeÉÉv Ä
,ÉÉÄ Å

fechaHastaÉÉÇ å
)ÉÉå ç
;ÉÉç é

resultados
ÑÑ 
=
ÑÑ 

resultados
ÑÑ '
.
ÑÑ' (
Where
ÑÑ( -
(
ÑÑ- .
r
ÑÑ. /
=>
ÑÑ0 2
r
ÑÑ3 4
.
ÑÑ4 5
Icbper
ÑÑ5 ;
!=
ÑÑ< >
$num
ÑÑ? @
)
ÑÑ@ A
.
ÑÑA B
ToList
ÑÑB H
(
ÑÑH I
)
ÑÑI J
;
ÑÑJ K
return
ÜÜ 

resultados
ÜÜ !
;
ÜÜ! "
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
new
ää 
LogicaException
ää )
(
ää) *
$str
ää* `
,
ää` a
e
ääb c
)
ääc d
;
ääd e
}
ãã 
}
åå 	
public
éé 
List
éé 
<
éé 
Venta_Cliente
éé !
>
éé! "7
)ObtenerVentasClientesInvalidadasConIcbper
éé# L
(
ééL M
int
ééM P
[
ééP Q
]
ééQ R
idsPuntosDeVentas
ééS d
,
ééd e
DateTime
ééf n

fechaDesde
ééo y
,
ééy z
DateTimeéé{ É

fechaHastaééÑ é
)ééé è
{
èè 	
try
êê 
{
ëë 
var
ìì 

resultados
ìì 
=
ìì  O
AObtenerVentasClientesQueSeanConComprobantesTributablesInvalidadas
ìì! b
(
ììb c
idsPuntosDeVentas
ììc t
,
ììt u

fechaDesdeììv Ä
,ììÄ Å

fechaHastaììÇ å
)ììå ç
;ììç é

resultados
ïï 
=
ïï 

resultados
ïï '
.
ïï' (
Where
ïï( -
(
ïï- .
r
ïï. /
=>
ïï0 2
r
ïï3 4
.
ïï4 5
Icbper
ïï5 ;
!=
ïï< >
$num
ïï? @
)
ïï@ A
.
ïïA B
ToList
ïïB H
(
ïïH I
)
ïïI J
;
ïïJ K
return
óó 

resultados
óó !
;
óó! "
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
e
ôô 
)
ôô 
{
öö 
throw
õõ 
new
õõ 
LogicaException
õõ )
(
õõ) *
$str
õõ* `
,
õõ` a
e
õõb c
)
õõc d
;
õõd e
}
úú 
}
ùù 	
public
££ 
List
££ 
<
££ 
Reporte_Deuda
££ !
>
££! "'
ObtenerDeudasAProveedores
££# <
(
££< =
bool
££= A!
todosLosProveedores
££B U
,
££U V
int
££W Z
[
££Z [
]
££[ \
idsProveedores
££] k
)
££k l
{
§§ 	
try
¶¶ 
{
ßß 
var
®® 
deudas
®® 
=
®® 
new
®®  
List
®®! %
<
®®% &
Reporte_Deuda
®®& 3
>
®®3 4
(
®®4 5
)
®®5 6
;
®®6 7
if
©© 
(
©© !
todosLosProveedores
©© '
)
©©' (
{
™™ 
deudas
´´ 
=
´´ $
transaccionRepositorio
´´ 3
.
´´3 4
ObtenerDeudas
´´4 A
(
´´A B
false
´´B G
,
´´G H
Diccionario
´´I T
.
´´T U>
/TiposDeTransaccionOrdenesDeOperacionesDeCompras´´U Ñ
)´´Ñ Ö
.´´Ö Ü
ToList´´Ü å
(´´å ç
)´´ç é
;´´é è
}
¨¨ 
else
≠≠ 
{
ÆÆ 
deudas
ØØ 
=
ØØ $
transaccionRepositorio
ØØ 3
.
ØØ3 4
ObtenerDeudas
ØØ4 A
(
ØØA B
false
ØØB G
,
ØØG H
Diccionario
ØØI T
.
ØØT U>
/TiposDeTransaccionOrdenesDeOperacionesDeComprasØØU Ñ
,ØØÑ Ö
idsProveedoresØØÜ î
)ØØî ï
.ØØï ñ
ToListØØñ ú
(ØØú ù
)ØØù û
;ØØû ü
}
∞∞ 
return
±± 
deudas
±± 
.
±± 
OrderBy
±± %
(
±±% &
d
±±& '
=>
±±( *
d
±±+ ,
.
±±, -
PrimerNombre
±±- 9
)
±±9 :
.
±±: ;
ToList
±±; A
(
±±A B
)
±±B C
;
±±C D
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
e
≥≥ 
)
≥≥ 
{
¥¥ 
throw
µµ 
new
µµ 
LogicaException
µµ )
(
µµ) *
$str
µµ* Q
,
µµQ R
e
µµS T
)
µµT U
;
µµU V
}
∂∂ 
}
∑∑ 	
public
ππ 
List
ππ 
<
ππ 
Reporte_Deuda
ππ !
>
ππ! "%
ObtenerDeudasDeClientes
ππ# :
(
ππ: ;
bool
ππ; ?
todosLosClientes
ππ@ P
,
ππP Q
int
ππR U
[
ππU V
]
ππV W
idsClientes
ππX c
)
ππc d
{
∫∫ 	
try
ªª 
{
ºº 
var
ΩΩ 
deudas
ΩΩ 
=
ΩΩ 
new
ΩΩ  
List
ΩΩ! %
<
ΩΩ% &
Reporte_Deuda
ΩΩ& 3
>
ΩΩ3 4
(
ΩΩ4 5
)
ΩΩ5 6
;
ΩΩ6 7
if
ææ 
(
ææ 
todosLosClientes
ææ $
)
ææ$ %
{
øø 
deudas
¿¿ 
=
¿¿ $
transaccionRepositorio
¿¿ 3
.
¿¿3 4
ObtenerDeudas
¿¿4 A
(
¿¿A B
true
¿¿B F
,
¿¿F G
Diccionario
¿¿H S
.
¿¿S T=
.TiposDeTransaccionOrdenesDeOperacionesDeVentas¿¿T Ç
)¿¿Ç É
.¿¿É Ñ
ToList¿¿Ñ ä
(¿¿ä ã
)¿¿ã å
;¿¿å ç
}
¡¡ 
else
¬¬ 
{
√√ 
deudas
ƒƒ 
=
ƒƒ $
transaccionRepositorio
ƒƒ 3
.
ƒƒ3 4
ObtenerDeudas
ƒƒ4 A
(
ƒƒA B
true
ƒƒB F
,
ƒƒF G
Diccionario
ƒƒH S
.
ƒƒS T=
.TiposDeTransaccionOrdenesDeOperacionesDeVentasƒƒT Ç
,ƒƒÇ É
idsClientesƒƒÑ è
)ƒƒè ê
.ƒƒê ë
ToListƒƒë ó
(ƒƒó ò
)ƒƒò ô
;ƒƒô ö
}
≈≈ 
return
∆∆ 
deudas
∆∆ 
.
∆∆ 
OrderBy
∆∆ %
(
∆∆% &
d
∆∆& '
=>
∆∆( *
d
∆∆+ ,
.
∆∆, -
PrimerNombre
∆∆- 9
)
∆∆9 :
.
∆∆: ;
ToList
∆∆; A
(
∆∆A B
)
∆∆B C
;
∆∆C D
}
«« 
catch
»» 
(
»» 
	Exception
»» 
e
»» 
)
»» 
{
…… 
throw
ÀÀ 
new
ÀÀ 
LogicaException
ÀÀ )
(
ÀÀ) *
$str
ÀÀ* O
,
ÀÀO P
e
ÀÀQ R
)
ÀÀR S
;
ÀÀS T
}
ÃÃ 
}
ÕÕ 	
public
œœ 
List
œœ 
<
œœ 
Reporte_Pago
œœ  
>
œœ  !&
ObtenerPagosAProveedores
œœ" :
(
œœ: ;
DateTime
œœ; C

fechaDesde
œœD N
,
œœN O
DateTime
œœP X

fechaHasta
œœY c
,
œœc d
bool
œœe i
todasLasCajas
œœj w
,
œœw x
int
œœy |
[
œœ| }
]
œœ} ~
idsCajasœœ á
,œœá à
boolœœâ ç#
todosLosProveedoresœœé °
,œœ° ¢
intœœ£ ¶
[œœ¶ ß
]œœß ®
idsProveedoresœœ© ∑
)œœ∑ ∏
{
–– 	
try
—— 
{
““ 
var
”” 
ingresoDeDinero
”” #
=
””$ %
new
””& )
List
””* .
<
””. /
Reporte_Pago
””/ ;
>
””; <
(
””< =
)
””= >
;
””> ?
var
‘‘ 
salidaDeDinero
‘‘ "
=
‘‘# $
new
‘‘% (
List
‘‘) -
<
‘‘- .
Reporte_Pago
‘‘. :
>
‘‘: ;
(
‘‘; <
)
‘‘< =
;
‘‘= >
if
’’ 
(
’’ 
todasLasCajas
’’ !
)
’’! "
{
÷÷ 
if
◊◊ 
(
◊◊ !
todosLosProveedores
◊◊ +
)
◊◊+ ,
{
ÿÿ 
ingresoDeDinero
ŸŸ '
=
ŸŸ( )$
transaccionRepositorio
ŸŸ* @
.
ŸŸ@ A
ObtenerPagos
ŸŸA M
(
ŸŸM N

fechaDesde
ŸŸN X
,
ŸŸX Y

fechaHasta
ŸŸZ d
,
ŸŸd e
Diccionario
ŸŸf q
.
ŸŸq rM
>TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosProveedoresŸŸr ∞
)ŸŸ∞ ±
.ŸŸ± ≤
ToListŸŸ≤ ∏
(ŸŸ∏ π
)ŸŸπ ∫
;ŸŸ∫ ª
salidaDeDinero
⁄⁄ &
=
⁄⁄' ($
transaccionRepositorio
⁄⁄) ?
.
⁄⁄? @
ObtenerPagos
⁄⁄@ L
(
⁄⁄L M

fechaDesde
⁄⁄M W
,
⁄⁄W X

fechaHasta
⁄⁄Y c
,
⁄⁄c d
Diccionario
⁄⁄e p
.
⁄⁄p qD
5TiposDeTransaccionDeSalidaDeDineroHaciaLosProveedores⁄⁄q ¶
)⁄⁄¶ ß
.⁄⁄ß ®
ToList⁄⁄® Æ
(⁄⁄Æ Ø
)⁄⁄Ø ∞
;⁄⁄∞ ±
}
€€ 
else
‹‹ 
{
›› 
ingresoDeDinero
ﬁﬁ '
=
ﬁﬁ( )$
transaccionRepositorio
ﬁﬁ* @
.
ﬁﬁ@ A!
ObtenerPagosExterno
ﬁﬁA T
(
ﬁﬁT U

fechaDesde
ﬁﬁU _
,
ﬁﬁ_ `

fechaHasta
ﬁﬁa k
,
ﬁﬁk l
Diccionario
ﬁﬁm x
.
ﬁﬁx yM
>TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosProveedoresﬁﬁy ∑
,ﬁﬁ∑ ∏
idsProveedoresﬁﬁπ «
)ﬁﬁ« »
.ﬁﬁ» …
ToListﬁﬁ… œ
(ﬁﬁœ –
)ﬁﬁ– —
;ﬁﬁ— “
salidaDeDinero
ﬂﬂ &
=
ﬂﬂ' ($
transaccionRepositorio
ﬂﬂ) ?
.
ﬂﬂ? @!
ObtenerPagosExterno
ﬂﬂ@ S
(
ﬂﬂS T

fechaDesde
ﬂﬂT ^
,
ﬂﬂ^ _

fechaHasta
ﬂﬂ` j
,
ﬂﬂj k
Diccionario
ﬂﬂl w
.
ﬂﬂw xD
5TiposDeTransaccionDeSalidaDeDineroHaciaLosProveedoresﬂﬂx ≠
,ﬂﬂ≠ Æ
idsProveedoresﬂﬂØ Ω
)ﬂﬂΩ æ
.ﬂﬂæ ø
ToListﬂﬂø ≈
(ﬂﬂ≈ ∆
)ﬂﬂ∆ «
;ﬂﬂ« »
}
‡‡ 
}
·· 
else
‚‚ 
{
„„ 
if
‰‰ 
(
‰‰ !
todosLosProveedores
‰‰ +
)
‰‰+ ,
{
ÂÂ 
ingresoDeDinero
ÊÊ '
=
ÊÊ( )$
transaccionRepositorio
ÊÊ* @
.
ÊÊ@ A!
ObtenerPagosInterno
ÊÊA T
(
ÊÊT U

fechaDesde
ÊÊU _
,
ÊÊ_ `

fechaHasta
ÊÊa k
,
ÊÊk l
Diccionario
ÊÊm x
.
ÊÊx yM
>TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosProveedoresÊÊy ∑
,ÊÊ∑ ∏
idsCajasÊÊπ ¡
)ÊÊ¡ ¬
.ÊÊ¬ √
ToListÊÊ√ …
(ÊÊ…  
)ÊÊ  À
;ÊÊÀ Ã
salidaDeDinero
ÁÁ &
=
ÁÁ' ($
transaccionRepositorio
ÁÁ) ?
.
ÁÁ? @!
ObtenerPagosInterno
ÁÁ@ S
(
ÁÁS T

fechaDesde
ÁÁT ^
,
ÁÁ^ _

fechaHasta
ÁÁ` j
,
ÁÁj k
Diccionario
ÁÁl w
.
ÁÁw xD
5TiposDeTransaccionDeSalidaDeDineroHaciaLosProveedoresÁÁx ≠
,ÁÁ≠ Æ
idsCajasÁÁØ ∑
)ÁÁ∑ ∏
.ÁÁ∏ π
ToListÁÁπ ø
(ÁÁø ¿
)ÁÁ¿ ¡
;ÁÁ¡ ¬
}
ËË 
else
ÈÈ 
{
ÍÍ 
ingresoDeDinero
ÎÎ '
=
ÎÎ( )$
transaccionRepositorio
ÎÎ* @
.
ÎÎ@ A
ObtenerPagos
ÎÎA M
(
ÎÎM N

fechaDesde
ÎÎN X
,
ÎÎX Y

fechaHasta
ÎÎZ d
,
ÎÎd e
Diccionario
ÎÎf q
.
ÎÎq rM
>TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosProveedoresÎÎr ∞
,ÎÎ∞ ±
idsCajasÎÎ≤ ∫
,ÎÎ∫ ª
idsProveedoresÎÎº  
)ÎÎ  À
.ÎÎÀ Ã
ToListÎÎÃ “
(ÎÎ“ ”
)ÎÎ” ‘
;ÎÎ‘ ’
salidaDeDinero
ÏÏ &
=
ÏÏ' ($
transaccionRepositorio
ÏÏ) ?
.
ÏÏ? @
ObtenerPagos
ÏÏ@ L
(
ÏÏL M

fechaDesde
ÏÏM W
,
ÏÏW X

fechaHasta
ÏÏY c
,
ÏÏc d
Diccionario
ÏÏe p
.
ÏÏp qD
5TiposDeTransaccionDeSalidaDeDineroHaciaLosProveedoresÏÏq ¶
,ÏÏ¶ ß
idsCajasÏÏ® ∞
,ÏÏ∞ ±
idsProveedoresÏÏ≤ ¿
)ÏÏ¿ ¡
.ÏÏ¡ ¬
ToListÏÏ¬ »
(ÏÏ» …
)ÏÏ…  
;ÏÏ  À
}
ÌÌ 
}
ÓÓ 
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ 
item
ÔÔ !
in
ÔÔ" $
ingresoDeDinero
ÔÔ% 4
)
ÔÔ4 5
{
 
item
ÒÒ 
.
ÒÒ 
PagoACuenta
ÒÒ $
=
ÒÒ% &
item
ÒÒ' +
.
ÒÒ+ ,
PagoACuenta
ÒÒ, 7
*
ÒÒ8 9
-
ÒÒ: ;
$num
ÒÒ; <
;
ÒÒ< =
}
ÚÚ 
return
ÛÛ 
ingresoDeDinero
ÛÛ &
.
ÛÛ& '
Union
ÛÛ' ,
(
ÛÛ, -
salidaDeDinero
ÛÛ- ;
)
ÛÛ; <
.
ÛÛ< =
OrderBy
ÛÛ= D
(
ÛÛD E
d
ÛÛE F
=>
ÛÛG I
d
ÛÛJ K
.
ÛÛK L
PrimerNombre
ÛÛL X
)
ÛÛX Y
.
ÛÛY Z
ToList
ÛÛZ `
(
ÛÛ` a
)
ÛÛa b
;
ÛÛb c
}
ÙÙ 
catch
ıı 
(
ıı 
	Exception
ıı 
e
ıı 
)
ıı 
{
ˆˆ 
throw
˜˜ 
new
˜˜ 
LogicaException
˜˜ )
(
˜˜) *
$str
˜˜* P
,
˜˜P Q
e
˜˜R S
)
˜˜S T
;
˜˜T U
}
¯¯ 
}
˘˘ 	
public
˚˚ 
List
˚˚ 
<
˚˚ 
Reporte_Pago
˚˚  
>
˚˚  !$
ObtenerPagosDeClientes
˚˚" 8
(
˚˚8 9
DateTime
˚˚9 A

fechaDesde
˚˚B L
,
˚˚L M
DateTime
˚˚N V

fechaHasta
˚˚W a
,
˚˚a b
bool
˚˚c g
todasLasCajas
˚˚h u
,
˚˚u v
int
˚˚w z
[
˚˚z {
]
˚˚{ |
idsCajas˚˚} Ö
,˚˚Ö Ü
bool˚˚á ã 
todosLosClientes˚˚å ú
,˚˚ú ù
int˚˚û °
[˚˚° ¢
]˚˚¢ £
idsClientes˚˚§ Ø
)˚˚Ø ∞
{
¸¸ 	
try
˝˝ 
{
˛˛ 
var
ˇˇ 
ingresoDeDinero
ˇˇ #
=
ˇˇ$ %
new
ˇˇ& )
List
ˇˇ* .
<
ˇˇ. /
Reporte_Pago
ˇˇ/ ;
>
ˇˇ; <
(
ˇˇ< =
)
ˇˇ= >
;
ˇˇ> ?
var
ÄÄ 
salidaDeDinero
ÄÄ "
=
ÄÄ# $
new
ÄÄ% (
List
ÄÄ) -
<
ÄÄ- .
Reporte_Pago
ÄÄ. :
>
ÄÄ: ;
(
ÄÄ; <
)
ÄÄ< =
;
ÄÄ= >
if
ÅÅ 
(
ÅÅ 
todasLasCajas
ÅÅ !
)
ÅÅ! "
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
todosLosClientes
ÉÉ (
)
ÉÉ( )
{
ÑÑ 
ingresoDeDinero
ÖÖ '
=
ÖÖ( )$
transaccionRepositorio
ÖÖ* @
.
ÖÖ@ A
ObtenerPagos
ÖÖA M
(
ÖÖM N

fechaDesde
ÖÖN X
,
ÖÖX Y

fechaHasta
ÖÖZ d
,
ÖÖd e
Diccionario
ÖÖf q
.
ÖÖq rJ
;TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosClientesÖÖr ≠
)ÖÖ≠ Æ
.ÖÖÆ Ø
ToListÖÖØ µ
(ÖÖµ ∂
)ÖÖ∂ ∑
;ÖÖ∑ ∏
salidaDeDinero
ÜÜ &
=
ÜÜ' ($
transaccionRepositorio
ÜÜ) ?
.
ÜÜ? @
ObtenerPagos
ÜÜ@ L
(
ÜÜL M

fechaDesde
ÜÜM W
,
ÜÜW X

fechaHasta
ÜÜY c
,
ÜÜc d
Diccionario
ÜÜe p
.
ÜÜp qA
2TiposDeTransaccionDeSalidaDeDineroHaciaLosClientesÜÜq £
)ÜÜ£ §
.ÜÜ§ •
ToListÜÜ• ´
(ÜÜ´ ¨
)ÜÜ¨ ≠
;ÜÜ≠ Æ
}
áá 
else
àà 
{
ââ 
ingresoDeDinero
ää '
=
ää( )$
transaccionRepositorio
ää* @
.
ää@ A!
ObtenerPagosExterno
ääA T
(
ääT U

fechaDesde
ääU _
,
ää_ `

fechaHasta
ääa k
,
ääk l
Diccionario
ääm x
.
ääx yJ
;TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosClientesääy ¥
,ää¥ µ
idsClientesää∂ ¡
)ää¡ ¬
.ää¬ √
ToListää√ …
(ää…  
)ää  À
;ääÀ Ã
salidaDeDinero
ãã &
=
ãã' ($
transaccionRepositorio
ãã) ?
.
ãã? @!
ObtenerPagosExterno
ãã@ S
(
ããS T

fechaDesde
ããT ^
,
ãã^ _

fechaHasta
ãã` j
,
ããj k
Diccionario
ããl w
.
ããw xA
2TiposDeTransaccionDeSalidaDeDineroHaciaLosClientesããx ™
,ãã™ ´
idsClientesãã¨ ∑
)ãã∑ ∏
.ãã∏ π
ToListããπ ø
(ããø ¿
)ãã¿ ¡
;ãã¡ ¬
}
åå 
}
çç 
else
éé 
{
èè 
if
êê 
(
êê 
todosLosClientes
êê (
)
êê( )
{
ëë 
ingresoDeDinero
íí '
=
íí( )$
transaccionRepositorio
íí* @
.
íí@ A!
ObtenerPagosInterno
ííA T
(
ííT U

fechaDesde
ííU _
,
íí_ `

fechaHasta
íía k
,
íík l
Diccionario
íím x
.
ííx yJ
;TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosClientesííy ¥
,íí¥ µ
idsCajasíí∂ æ
)ííæ ø
.ííø ¿
ToListíí¿ ∆
(íí∆ «
)íí« »
;íí» …
salidaDeDinero
ìì &
=
ìì' ($
transaccionRepositorio
ìì) ?
.
ìì? @!
ObtenerPagosInterno
ìì@ S
(
ììS T

fechaDesde
ììT ^
,
ìì^ _

fechaHasta
ìì` j
,
ììj k
Diccionario
ììl w
.
ììw xA
2TiposDeTransaccionDeSalidaDeDineroHaciaLosClientesììx ™
,ìì™ ´
idsCajasìì¨ ¥
)ìì¥ µ
.ììµ ∂
ToListìì∂ º
(ììº Ω
)ììΩ æ
;ììæ ø
}
îî 
else
ïï 
{
ññ 
ingresoDeDinero
óó '
=
óó( )$
transaccionRepositorio
óó* @
.
óó@ A
ObtenerPagos
óóA M
(
óóM N

fechaDesde
óóN X
,
óóX Y

fechaHasta
óóZ d
,
óód e
Diccionario
óóf q
.
óóq rJ
;TiposDeTransaccionDeIngresoDeDineroProvenienteDeLosClientesóór ≠
,óó≠ Æ
idsCajasóóØ ∑
,óó∑ ∏
idsClientesóóπ ƒ
)óóƒ ≈
.óó≈ ∆
ToListóó∆ Ã
(óóÃ Õ
)óóÕ Œ
;óóŒ œ
salidaDeDinero
òò &
=
òò' ($
transaccionRepositorio
òò) ?
.
òò? @
ObtenerPagos
òò@ L
(
òòL M

fechaDesde
òòM W
,
òòW X

fechaHasta
òòY c
,
òòc d
Diccionario
òòe p
.
òòp qA
2TiposDeTransaccionDeSalidaDeDineroHaciaLosClientesòòq £
,òò£ §
idsCajasòò• ≠
,òò≠ Æ
idsClientesòòØ ∫
)òò∫ ª
.òòª º
ToListòòº ¬
(òò¬ √
)òò√ ƒ
;òòƒ ≈
}
ôô 
}
öö 
foreach
úú 
(
úú 
var
úú 
item
úú !
in
úú" $
salidaDeDinero
úú% 3
)
úú3 4
{
ùù 
item
ûû 
.
ûû 
PagoACuenta
ûû $
=
ûû% &
item
ûû' +
.
ûû+ ,
PagoACuenta
ûû, 7
*
ûû8 9
-
ûû: ;
$num
ûû; <
;
ûû< =
}
üü 
return
†† 
ingresoDeDinero
†† &
.
††& '
Union
††' ,
(
††, -
salidaDeDinero
††- ;
)
††; <
.
††< =
OrderBy
††= D
(
††D E
d
††E F
=>
††G I
d
††J K
.
††K L
PrimerNombre
††L X
)
††X Y
.
††Y Z
ToList
††Z `
(
††` a
)
††a b
;
††b c
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
e
¢¢ 
)
¢¢ 
{
££ 
throw
§§ 
new
§§ 
LogicaException
§§ )
(
§§) *
$str
§§* N
,
§§N O
e
§§P Q
)
§§Q R
;
§§R S
}
•• 
}
¶¶ 	
public
™™ 
List
™™ 
<
™™ 
string
™™ 
>
™™ Y
KObtenerFechaIncioyFinConPrecisionDeMilisegundosParaReporteVentaPuntoDeVenta
™™ g
(
™™g h
)
™™h i
{
´´ 	
DateTime
≠≠ 

fechaDesde
≠≠ 
=
≠≠  !
DateTimeUtil
≠≠" .
.
≠≠. /
FechaActual
≠≠/ :
(
≠≠: ;
)
≠≠; <
;
≠≠< =
;
≠≠> ?

fechaDesde
ÆÆ 
=
ÆÆ 

fechaDesde
ÆÆ #
.
ÆÆ# $
AddMilliseconds
ÆÆ$ 3
(
ÆÆ3 4
-
ÆÆ4 5

fechaDesde
ÆÆ5 ?
.
ÆÆ? @
Millisecond
ÆÆ@ K
)
ÆÆK L
;
ÆÆL M
DateTime
∞∞ 

fechaHasta
∞∞ 
=
∞∞  !

fechaDesde
∞∞" ,
.
∞∞, -
Date
∞∞- 1
.
∞∞1 2
AddDays
∞∞2 9
(
∞∞9 :
$num
∞∞: ;
)
∞∞; <
.
∞∞< =
AddMilliseconds
∞∞= L
(
∞∞L M
-
∞∞M N
$num
∞∞N O
)
∞∞O P
;
∞∞P Q

fechaHasta
±± 
.
±± 
AddMilliseconds
±± &
(
±±& '
$num
±±' *
)
±±* +
;
±±+ ,
return
≥≥ 
new
≥≥ 
List
≥≥ 
<
≥≥ 
string
≥≥ "
>
≥≥" #
{
≥≥$ %

fechaDesde
≥≥& 0
.
≥≥0 1
ToString
≥≥1 9
(
≥≥9 :
$str
≥≥: S
)
≥≥S T
,
≥≥T U

fechaHasta
≥≥V `
.
≥≥` a
ToString
≥≥a i
(
≥≥i j
$str≥≥j É
)≥≥É Ñ
}≥≥Ö Ü
;≥≥Ü á
}
¥¥ 	
public
ºº 
OperationResult
ºº )
RegistrarCanjeDeComprobante
ºº :
(
ºº: ;
int
ºº; >

idEmpleado
ºº? I
,
ººI J
int
ººK N
idCentroAtencion
ººO _
,
ºº_ `
List
ººa e
<
ººe f
long
ººf j
>
ººj k

idsOrdenes
ººl v
,
ººv w
int
ººx { 
idTipoComprobanteºº| ç
,ººç é
intººè í"
idSerieComprobanteººì •
,ºº• ¶
intººß ™#
numeroDeComprobanteºº´ æ
)ººæ ø
{
ΩΩ 	
try
ææ 
{
øø 
DateTime
¿¿ 
fechaEmision
¿¿ %
=
¿¿& '
DateTimeUtil
¿¿( 4
.
¿¿4 5
FechaActual
¿¿5 @
(
¿¿@ A
)
¿¿A B
;
¿¿B C
List
¬¬ 
<
¬¬ 
OrdenDeVenta
¬¬ !
>
¬¬! "
ordenesDeVenta
¬¬# 1
=
¬¬2 3
OrdenDeVenta
¬¬4 @
.
¬¬@ A
Convert_
¬¬A I
(
¬¬I J$
transaccionRepositorio
¬¬J `
.
¬¬` a"
ObtenerTransacciones
¬¬a u
(
¬¬u v

idsOrdenes¬¬v Ä
.¬¬Ä Å
ToArray¬¬Å à
(¬¬à â
)¬¬â ä
)¬¬ä ã
.¬¬ã å
ToList¬¬å í
(¬¬í ì
)¬¬ì î
)¬¬î ï
;¬¬ï ñ+
VerificarComprobanteParaCanje
ƒƒ -
(
ƒƒ- .
ordenesDeVenta
ƒƒ. <
)
ƒƒ< =
;
ƒƒ= >
Comprobante
∆∆ 
comprobante
∆∆ '
=
∆∆( )&
GenerarComprobantePropio
∆∆* B
(
∆∆B C 
idSerieComprobante
∆∆C U
,
∆∆U V!
numeroDeComprobante
∆∆W j
)
∆∆j k
;
∆∆k l
Transaccion
»» 
venta
»» !
=
»»" #2
$GenerarOperacionDeCanjeDeComprobante
»»$ H
(
»»H I
ordenesDeVenta
»»I W
,
»»W X!
TransaccionSettings
»»Y l
.
»»l m
Default
»»m t
.
»»t u%
IdTipoTransaccionVenta»»u ã
,»»ã å
fechaEmision»»ç ô
,»»ô ö
$str»»õ €
)»»€ ‹
;»»‹ ›
Transaccion
   
ordenDeVenta
   (
=
  ) *2
$GenerarOperacionDeCanjeDeComprobante
  + O
(
  O P
ordenesDeVenta
  P ^
,
  ^ _!
TransaccionSettings
  ` s
.
  s t
Default
  t {
.
  { |,
IdTipoTransaccionOrdenDeVenta  | ô
,  ô ö
fechaEmision  õ ß
,  ß ®
$str  © Ú
)  Ú Û
;  Û Ù
ordenDeVenta
ÃÃ 
.
ÃÃ 
codigo
ÃÃ #
=
ÃÃ$ %
venta
ÃÃ& +
.
ÃÃ+ ,
codigo
ÃÃ, 2
+
ÃÃ3 4
$str
ÃÃ5 8
+
ÃÃ9 :
ordenDeVenta
ÃÃ; G
.
ÃÃG H
codigo
ÃÃH N
;
ÃÃN O 
Estado_transaccion
ŒŒ "$
estadoDeLaOrdenDeVenta
ŒŒ# 9
=
ŒŒ: ;
new
ŒŒ< ? 
Estado_transaccion
ŒŒ@ R
(
ŒŒR S

idEmpleado
ŒŒS ]
,
ŒŒ] ^
MaestroSettings
ŒŒ_ n
.
ŒŒn o
Default
ŒŒo v
.
ŒŒv w/
 IdDetalleMaestroEstadoConfirmadoŒŒw ó
,ŒŒó ò
fechaEmisionŒŒô •
,ŒŒ• ¶
$strŒŒß ﬁ
)ŒŒﬁ ﬂ
;ŒŒﬂ ‡
ordenDeVenta
œœ 
.
œœ  
Estado_transaccion
œœ /
.
œœ/ 0
Add
œœ0 3
(
œœ3 4$
estadoDeLaOrdenDeVenta
œœ4 J
)
œœJ K
;
œœK L
ordenDeVenta
—— 
.
—— #
Parametro_transaccion
—— 2
.
——2 3
Add
——3 6
(
——6 7
new
——7 :#
Parametro_transaccion
——; P
(
——P Q
MaestroSettings
——Q `
.
——` a
Default
——a h
.
——h i1
"IdDetalleMaestroParametroTipoVenta——i ã
,——ã å
(——ç é
(——é è
int——è í
)——í ì
ordenesDeVenta——ì °
.——° ¢
First——¢ ß
(——ß ®
)——® ©
.——© ™
TipoDeVenta——™ µ
(——µ ∂
)——∂ ∑
)——∑ ∏
.——∏ π
ToString——π ¡
(——¡ ¬
)——¬ √
)——√ ƒ
)——ƒ ≈
;——≈ ∆
ordenDeVenta
”” 
.
”” #
Parametro_transaccion
”” 2
.
””2 3
Add
””3 6
(
””6 7
new
””7 :#
Parametro_transaccion
””; P
(
””P Q
MaestroSettings
””Q `
.
””` a
Default
””a h
.
””h i2
#IdDetalleMaestroParametroModoDePago””i å
,””å ç
(””é è
(””è ê
int””ê ì
)””ì î
ordenesDeVenta””î ¢
.””¢ £
First””£ ®
(””® ©
)””© ™
.””™ ´

ModoDePago””´ µ
(””µ ∂
)””∂ ∑
)””∑ ∏
.””∏ π
ToString””π ¡
(””¡ ¬
)””¬ √
)””√ ƒ
)””ƒ ≈
;””≈ ∆
List
’’ 
<
’’ !
Detalle_transaccion
’’ (
>
’’( )%
detallesDeTransasaccion
’’* A
=
’’B C0
"GenerarDetalleDeCanjeDeComprobante
’’D f
(
’’f g
ordenesDeVenta
’’g u
,
’’u v 
idTipoComprobante’’w à
)’’à â
;’’â ä
ordenDeVenta
◊◊ 
.
◊◊ 
AgregarDetalles
◊◊ ,
(
◊◊, -%
detallesDeTransasaccion
◊◊- D
)
◊◊D E
;
◊◊E F=
/ResolverCuotaDeOrdenDeVentaDeCanjeDeComprobante
ŸŸ ?
(
ŸŸ? @
ordenesDeVenta
ŸŸ@ N
,
ŸŸN O
ordenDeVenta
ŸŸP \
)
ŸŸ\ ]
;
ŸŸ] ^
venta
€€ 
.
€€ 
Transaccion1
€€ "
.
€€" #
Add
€€# &
(
€€& '
ordenDeVenta
€€' 3
)
€€3 4
;
€€4 5/
!ResolverCobroDeCanjeDeComprobante
›› 1
(
››1 2
ordenesDeVenta
››2 @
,
››@ A
venta
››B G
)
››G H
;
››H I<
.ResolverSalidaDeMercaderiaDeCanjeDeComprobante
ﬂﬂ >
(
ﬂﬂ> ?
ordenesDeVenta
ﬂﬂ? M
,
ﬂﬂM N
venta
ﬂﬂO T
,
ﬂﬂT U
ordenDeVenta
ﬂﬂV b
)
ﬂﬂb c
;
ﬂﬂc d
venta
·· 
.
·· 
Comprobante
·· !
=
··" #
comprobante
··$ /
;
··/ 0
ordenDeVenta
‚‚ 
.
‚‚ 
Comprobante
‚‚ (
=
‚‚) *
comprobante
‚‚+ 6
;
‚‚6 7
List
‰‰ 
<
‰‰  
Estado_transaccion
‰‰ '
>
‰‰' ($
estadosOrdenesCajeados
‰‰) ?
=
‰‰@ A
new
‰‰B E
List
‰‰F J
<
‰‰J K 
Estado_transaccion
‰‰K ]
>
‰‰] ^
(
‰‰^ _
)
‰‰_ `
;
‰‰` a
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
idOrden
ÂÂ $
in
ÂÂ% '

idsOrdenes
ÂÂ( 2
)
ÂÂ2 3
{
ÊÊ 
var
ÁÁ 
transaccionOrden
ÁÁ (
=
ÁÁ) *$
transaccionRepositorio
ÁÁ+ A
.
ÁÁA B 
ObtenerTransaccion
ÁÁB T
(
ÁÁT U
idOrden
ÁÁU \
)
ÁÁ\ ]
;
ÁÁ] ^
ordenDeVenta
ËË  
.
ËË  !
Transaccion11
ËË! .
.
ËË. /
Add
ËË/ 2
(
ËË2 3
transaccionOrden
ËË3 C
)
ËËC D
;
ËËD E$
estadosOrdenesCajeados
ÈÈ *
.
ÈÈ* +
Add
ÈÈ+ .
(
ÈÈ. /
new
ÈÈ/ 2 
Estado_transaccion
ÈÈ3 E
(
ÈÈE F
idOrden
ÈÈF M
,
ÈÈM N

idEmpleado
ÈÈO Y
,
ÈÈY Z
MaestroSettings
ÈÈ[ j
.
ÈÈj k
Default
ÈÈk r
.
ÈÈr s-
IdDetalleMaestroEstadoCanjeadoÈÈs ë
,ÈÈë í
fechaEmisionÈÈì ü
,ÈÈü †
$strÈÈ° ◊
)ÈÈ◊ ÿ
)ÈÈÿ Ÿ
;ÈÈŸ ⁄
}
ÍÍ 
List
ÎÎ 
<
ÎÎ 
Transaccion
ÎÎ  
>
ÎÎ  !!
transaccionesACrear
ÎÎ" 5
=
ÎÎ6 7
new
ÎÎ8 ;
List
ÎÎ< @
<
ÎÎ@ A
Transaccion
ÎÎA L
>
ÎÎL M
(
ÎÎM N
)
ÎÎN O
{
ÎÎP Q
venta
ÎÎR W
,
ÎÎW X
ordenDeVenta
ÎÎY e
}
ÎÎf g
;
ÎÎg h
return
ÌÌ $
transaccionRepositorio
ÌÌ -
.
ÌÌ- .'
CrearTransacionesYEstados
ÌÌ. G
(
ÌÌG H!
transaccionesACrear
ÌÌH [
,
ÌÌ[ \$
estadosOrdenesCajeados
ÌÌ] s
,
ÌÌs t
null
ÌÌu y
)
ÌÌy z
;
ÌÌz {
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
e
ÔÔ 
)
ÔÔ 
{
 
throw
ÒÒ 
new
ÒÒ 
LogicaException
ÒÒ )
(
ÒÒ) *
$str
ÒÒ* Y
,
ÒÒY Z
e
ÒÒ[ \
)
ÒÒ\ ]
;
ÒÒ] ^
}
ÚÚ 
}
ÛÛ 	
public
ıı 
void
ıı +
VerificarComprobanteParaCanje
ıı 1
(
ıı1 2
List
ıı2 6
<
ıı6 7
OrdenDeVenta
ıı7 C
>
ııC D
ordenesDeVenta
ııE S
)
ııS T
{
ˆˆ 	
try
˜˜ 
{
¯¯ 
var
˘˘ 
	idCliente
˘˘ 
=
˘˘ 
ordenesDeVenta
˘˘  .
.
˘˘. /
First
˘˘/ 4
(
˘˘4 5
)
˘˘5 6
.
˘˘6 7
	IdCliente
˘˘7 @
;
˘˘@ A
var
˙˙ 
idComprobante
˙˙ !
=
˙˙" #
MaestroSettings
˙˙$ 3
.
˙˙3 4
Default
˙˙4 ;
.
˙˙; <9
+IdDetalleMaestroComprobanteNotaVentaInterna
˙˙< g
;
˙˙g h
var
˚˚  
idEstadoConfirmado
˚˚ &
=
˚˚' (
MaestroSettings
˚˚) 8
.
˚˚8 9
Default
˚˚9 @
.
˚˚@ A.
 IdDetalleMaestroEstadoConfirmado
˚˚A a
;
˚˚a b
foreach
¸¸ 
(
¸¸ 
var
¸¸ 
ordenDeVenta
¸¸ )
in
¸¸* ,
ordenesDeVenta
¸¸- ;
)
¸¸; <
{
˝˝ 
if
˛˛ 
(
˛˛ 
	idCliente
˛˛ !
!=
˛˛" $
ordenDeVenta
˛˛% 1
.
˛˛1 2
	IdCliente
˛˛2 ;
)
˛˛; <
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ !
LogicaException
ÄÄ" 1
(
ÄÄ1 2
$str
ÄÄ2 }
)
ÄÄ} ~
;
ÄÄ~ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
idComprobante
ÇÇ %
!=
ÇÇ& (
ordenDeVenta
ÇÇ) 5
.
ÇÇ5 6
IdTipoComprobante
ÇÇ6 G
)
ÇÇG H
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ !
LogicaException
ÑÑ" 1
(
ÑÑ1 2
$strÑÑ2 ó
)ÑÑó ò
;ÑÑò ô
}
ÖÖ 
if
ÜÜ 
(
ÜÜ  
idEstadoConfirmado
ÜÜ *
!=
ÜÜ+ -
ordenDeVenta
ÜÜ. :
.
ÜÜ: ;
IdEstadoActual
ÜÜ; I
)
ÜÜI J
{
áá 
throw
àà 
new
àà !
LogicaException
àà" 1
(
àà1 2
$stràà2 à
)ààà â
;ààâ ä
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
LogicaException
éé )
(
éé) *
$str
éé* c
,
ééc d
e
éée f
)
ééf g
;
éég h
}
èè 
}
êê 	
public
íí 
Transaccion
íí 2
$GenerarOperacionDeCanjeDeComprobante
íí ?
(
íí? @
List
íí@ D
<
ííD E
OrdenDeVenta
ííE Q
>
ííQ R
ordenesDeVenta
ííS a
,
íía b
int
ííc f
idTipoTransaccion
ííg x
,
ííx y
DateTimeííz Ç
fechaEmisionííÉ è
,ííè ê
stringííë ó
observacionííò £
)íí£ §
{
ìì 	
try
îî 
{
ïï 
int
óó 
idUnidadNegocio
óó #
=
óó$ %
MaestroSettings
óó& 5
.
óó5 6
Default
óó6 =
.
óó= >8
*IdDetalleMaestroUnidadDeNegocioTransversal
óó> h
;
óóh i
int
òò 
idMoneda
òò 
=
òò 
ordenesDeVenta
òò -
.
òò- .
First
òò. 3
(
òò3 4
)
òò4 5
.
òò5 6
IdMoneda
òò6 >
;
òò> ?
decimal
ôô 
tipoDeCambio
ôô $
=
ôô% &
ordenesDeVenta
ôô' 5
.
ôô5 6
First
ôô6 ;
(
ôô; <
)
ôô< =
.
ôô= >
TipoDeCambio
ôô> J
;
ôôJ K
int
öö 
	idCliente
öö 
=
öö 
ordenesDeVenta
öö  .
.
öö. /
First
öö/ 4
(
öö4 5
)
öö5 6
.
öö6 7
	IdCliente
öö7 @
;
öö@ A
int
õõ 

idVendedor
õõ 
=
õõ  
ordenesDeVenta
õõ! /
.
õõ/ 0
First
õõ0 5
(
õõ5 6
)
õõ6 7
.
õõ7 8

IdVendedor
õõ8 B
;
õõB C
int
úú 
idPuntoDeVenta
úú "
=
úú# $
ordenesDeVenta
úú% 3
.
úú3 4
First
úú4 9
(
úú9 :
)
úú: ;
.
úú; <
IdPuntoDeVenta
úú< J
;
úúJ K
decimal
ùù 
importeTotal
ùù $
=
ùù% &
ordenesDeVenta
ùù' 5
.
ùù5 6
Sum
ùù6 9
(
ùù9 :
o
ùù: ;
=>
ùù< >
o
ùù? @
.
ùù@ A
Total
ùùA F
)
ùùF G
;
ùùG H
	Operacion
üü 
operacionGenerica
üü +
=
üü, -
new
üü. 1
	Operacion
üü2 ;
(
üü; <$
transaccionRepositorio
üü< R
.
üüR S&
ObtenerUltimaTransaccion
üüS k
(
üük l!
TransaccionSettings
üül 
.üü Ä
DefaultüüÄ á
.üüá à*
IdTipoTransaccionOperacionüüà ¢
)üü¢ £
)üü£ §
;üü§ •
string
°° 
codigo
°° 
=
°° %
codigosOperacion_Logica
°°  7
.
°°7 83
%ObtenerSiguienteCodigoParaFacturacion
°°8 ]
(
°°] ^
Diccionario
°°^ i
.
°°i j6
'MapeoTipoTransaccionVsCodigoDeOperacion°°j ë
.°°ë í
Single°°í ò
(°°ò ô
n°°ô ö
=>°°õ ù
n°°û ü
.°°ü †
Key°°† £
==°°§ ¶!
idTipoTransaccion°°ß ∏
)°°∏ π
.°°π ∫
Value°°∫ ø
,°°ø ¿!
idTipoTransaccion°°¡ “
)°°“ ”
;°°” ‘
Transaccion
££ 
	operacion
££ %
=
££& '
new
££( +
Transaccion
££, 7
(
££7 8
codigo
££8 >
,
££> ?
operacionGenerica
££@ Q
.
££Q R
Id
££R T
,
££T U
fechaEmision
££V b
,
££b c
idTipoTransaccion
££d u
,
££u v
idUnidadNegocio££w Ü
,££Ü á
true££à å
,££å ç
fechaEmision££é ö
,££ö õ
fechaEmision££ú ®
,££® ©
observacion££™ µ
,££µ ∂
fechaEmision££∑ √
,££√ ƒ

idVendedor££≈ œ
,££œ –
importeTotal££— ›
,££› ﬁ
idPuntoDeVenta££ﬂ Ì
,££Ì Ó
idMoneda££Ô ˜
,££˜ ¯
tipoDeCambio££˘ Ö
,££Ö Ü
null££á ã
,££ã å
	idCliente££ç ñ
)££ñ ó
;££ó ò
return
§§ 
	operacion
§§  
;
§§  !
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* c
,
®®c d
e
®®e f
)
®®f g
;
®®g h
}
©© 
}
™™ 	
public
¨¨ 
List
¨¨ 
<
¨¨ !
Detalle_transaccion
¨¨ '
>
¨¨' (0
"GenerarDetalleDeCanjeDeComprobante
¨¨) K
(
¨¨K L
List
¨¨L P
<
¨¨P Q
OrdenDeVenta
¨¨Q ]
>
¨¨] ^
ordenesDeVenta
¨¨_ m
,
¨¨m n
int
¨¨o r 
idTipoComprobante¨¨s Ñ
)¨¨Ñ Ö
{
≠≠ 	
try
ÆÆ 
{
ØØ ,
VerificarPlacaDeOrdenesDeVenta
∞∞ .
(
∞∞. /
ordenesDeVenta
∞∞/ =
)
∞∞= >
;
∞∞> ?
List
±± 
<
±±  
DetalleDeOperacion
±± '
>
±±' (#
detallesDeOperaciones
±±) >
=
±±? @
ordenesDeVenta
±±A O
.
±±O P

SelectMany
±±P Z
(
±±Z [
o
±±[ \
=>
±±] _
o
±±` a
.
±±a b 
DetalleTransaccion
±±b t
(
±±t u
)
±±u v
)
±±v w
.
±±w x
GroupBy
±±x 
(±± Ä
d±±Ä Å
=>±±Ç Ñ
new±±Ö à
{
≤≤ 

idConcepto
≥≥ 
=
≥≥  
d
≥≥! "
.
≥≥" #!
id_concepto_negocio
≥≥# 6
,
≥≥6 7
d
¥¥ 
.
¥¥ 
lote
¥¥ 
}
µµ 
)
µµ 
.
µµ 
Select
µµ 
(
µµ 
c
µµ 
=>
µµ 
new
µµ " 
DetalleDeOperacion
µµ# 5
(
µµ5 6
)
µµ6 7
{
∂∂ 
Producto
∑∑ 
=
∑∑ 
new
∑∑ "(
Concepto_Negocio_Comercial
∑∑# =
(
∑∑= >
)
∑∑> ?
{
∑∑@ A
Id
∑∑B D
=
∑∑E F
c
∑∑G H
.
∑∑H I
Key
∑∑I L
.
∑∑L M

idConcepto
∑∑M W
}
∑∑X Y
,
∑∑Y Z
Cantidad
∏∏ 
=
∏∏ 
c
∏∏  
.
∏∏  !
Sum
∏∏! $
(
∏∏$ %
i
∏∏% &
=>
∏∏' )
i
∏∏* +
.
∏∏+ ,
cantidad
∏∏, 4
)
∏∏4 5
,
∏∏5 6
Importe
ππ 
=
ππ 
c
ππ 
.
ππ  
Sum
ππ  #
(
ππ# $
i
ππ$ %
=>
ππ& (
i
ππ) *
.
ππ* +
total
ππ+ 0
)
ππ0 1
,
ππ1 2
PrecioUnitario
∫∫ "
=
∫∫# $
c
∫∫% &
.
∫∫& '
Sum
∫∫' *
(
∫∫* +
i
∫∫+ ,
=>
∫∫- /
i
∫∫0 1
.
∫∫1 2
total
∫∫2 7
)
∫∫7 8
/
∫∫9 :
c
∫∫; <
.
∫∫< =
Sum
∫∫= @
(
∫∫@ A
i
∫∫A B
=>
∫∫C E
i
∫∫F G
.
∫∫G H
cantidad
∫∫H P
)
∫∫P Q
,
∫∫Q R
Lote
ªª 
=
ªª 
c
ªª 
.
ªª 
Key
ªª  
.
ªª  !
lote
ªª! %
,
ªª% &
MascaraDeCalculo
ºº $
=
ºº% &
VentasSettings
ºº' 5
.
ºº5 6
Default
ºº6 =
.
ºº= >5
'MascaraDeCalculoPrecioUnitarioCalculado
ºº> e
}
ΩΩ 
)
ΩΩ 
.
ΩΩ 
ToList
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
ResolverDetalles
ææ  
(
ææ  !#
detallesDeOperaciones
ææ! 6
,
ææ6 7
new
ææ8 ;!
DatosVentaIntegrada
ææ< O
(
ææO P
)
ææP Q
{
ææR S
Orden
ææT Y
=
ææZ [
new
ææ\ _
DatosOrdenVenta
ææ` o
(
ææo p
)
ææp q
{
æær s
Comprobante
ææt 
=ææÄ Å
newææÇ Ö%
ComprobanteDeNegocio_ææÜ õ
(ææõ ú
)ææú ù
{ææû ü
Tipoææ† §
=ææ• ¶
newææß ™
ItemGenericoææ´ ∑
(ææ∑ ∏!
idTipoComprobanteææ∏ …
)ææ…  
}ææÀ Ã
,ææÃ Õ
PlacaææŒ ”
=ææ‘ ’
ordenesDeVentaææ÷ ‰
.ææ‰ Â
FirstææÂ Í
(ææÍ Î
)ææÎ Ï
.ææÏ Ì
DetallesææÌ ı
(ææı ˆ
)ææˆ ˜
.ææ˜ ¯
Firstææ¯ ˝
(ææ˝ ˛
)ææ˛ ˇ
.ææˇ Ä
RegistroææÄ à
}ææâ ä
}ææã å
)ææå ç
;ææç é
var
øø #
detallesTransacciones
øø )
=
øø* +#
detallesDeOperaciones
øø, A
.
øøA B
Select
øøB H
(
øøH I
d
øøI J
=>
øøK M
d
øøN O
.
øøO P 
DetalleTransaccion
øøP b
(
øøb c
)
øøc d
)
øød e
.
øøe f
ToList
øøf l
(
øøl m
)
øøm n
;
øøn o
return
¿¿ #
detallesTransacciones
¿¿ ,
;
¿¿, -
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ 
LogicaException
ƒƒ )
(
ƒƒ) *
$str
ƒƒ* c
,
ƒƒc d
e
ƒƒe f
)
ƒƒf g
;
ƒƒg h
}
≈≈ 
}
∆∆ 	
public
«« 
void
«« ,
VerificarPlacaDeOrdenesDeVenta
«« 2
(
««2 3
List
««3 7
<
««7 8
OrdenDeVenta
««8 D
>
««D E
ordenesDeVenta
««F T
)
««T U
{
»» 	
if
…… 
(
…… 
VentasSettings
…… 
.
…… 
Default
…… &
.
……& ',
PermitirRegistroDePlacaEnVenta
……' E
)
……E F
{
   
string
ÀÀ 
placa
ÀÀ 
=
ÀÀ 
ordenesDeVenta
ÀÀ -
.
ÀÀ- .
First
ÀÀ. 3
(
ÀÀ3 4
)
ÀÀ4 5
.
ÀÀ5 6
Detalles
ÀÀ6 >
(
ÀÀ> ?
)
ÀÀ? @
.
ÀÀ@ A
First
ÀÀA F
(
ÀÀF G
)
ÀÀG H
.
ÀÀH I
Registro
ÀÀI Q
;
ÀÀQ R
foreach
ÃÃ 
(
ÃÃ 
var
ÃÃ 
ordenDeVenta
ÃÃ )
in
ÃÃ* ,
ordenesDeVenta
ÃÃ- ;
)
ÃÃ; <
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
placa
ŒŒ 
!=
ŒŒ  
ordenDeVenta
ŒŒ! -
.
ŒŒ- .
Detalles
ŒŒ. 6
(
ŒŒ6 7
)
ŒŒ7 8
.
ŒŒ8 9
First
ŒŒ9 >
(
ŒŒ> ?
)
ŒŒ? @
.
ŒŒ@ A
Registro
ŒŒA I
)
ŒŒI J
{
œœ 
throw
–– 
new
–– !
LogicaException
––" 1
(
––1 2
$str––2 ï
)––ï ñ
;––ñ ó
}
—— 
placa
““ 
=
““ 
ordenDeVenta
““ (
.
““( )
Detalles
““) 1
(
““1 2
)
““2 3
.
““3 4
First
““4 9
(
““9 :
)
““: ;
.
““; <
Registro
““< D
;
““D E
}
”” 
}
‘‘ 
}
’’ 	
public
ÿÿ 
void
ÿÿ =
/ResolverCuotaDeOrdenDeVentaDeCanjeDeComprobante
ÿÿ C
(
ÿÿC D
List
ÿÿD H
<
ÿÿH I
OrdenDeVenta
ÿÿI U
>
ÿÿU V
ordenesDeVenta
ÿÿW e
,
ÿÿe f
Transaccion
ÿÿg r
orden
ÿÿs x
)
ÿÿx y
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
foreach
‹‹ 
(
‹‹ 
var
‹‹ 
ordenDeVenta
‹‹ )
in
‹‹* ,
ordenesDeVenta
‹‹- ;
)
‹‹; <
{
›› 
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ  
cuota
ﬁﬁ! &
in
ﬁﬁ' )
ordenDeVenta
ﬁﬁ* 6
.
ﬁﬁ6 7
Cuotas
ﬁﬁ7 =
(
ﬁﬁ= >
)
ﬁﬁ> ?
)
ﬁﬁ? @
{
ﬂﬂ 
orden
‡‡ 
.
‡‡ 
Cuota
‡‡ #
.
‡‡# $
Add
‡‡$ '
(
‡‡' (
cuota
‡‡( -
)
‡‡- .
;
‡‡. /
}
·· 
}
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
e
‰‰ 
)
‰‰ 
{
ÂÂ 
throw
ÊÊ 
new
ÊÊ 
LogicaException
ÊÊ )
(
ÊÊ) *
$str
ÊÊ* k
,
ÊÊk l
e
ÊÊm n
)
ÊÊn o
;
ÊÊo p
}
ÁÁ 
}
ËË 	
public
ÎÎ 
void
ÎÎ /
!ResolverCobroDeCanjeDeComprobante
ÎÎ 5
(
ÎÎ5 6
List
ÎÎ6 :
<
ÎÎ: ;
OrdenDeVenta
ÎÎ; G
>
ÎÎG H
ordenesDeVenta
ÎÎI W
,
ÎÎW X
Transaccion
ÎÎY d
venta
ÎÎe j
)
ÎÎj k
{
ÏÏ 	
try
ÌÌ 
{
ÓÓ 
var
ÔÔ #
idsTransaccionesPadre
ÔÔ )
=
ÔÔ* +
ordenesDeVenta
ÔÔ, :
.
ÔÔ: ;
Select
ÔÔ; A
(
ÔÔA B
ov
ÔÔB D
=>
ÔÔE G
(
ÔÔH I
long
ÔÔI M
)
ÔÔM N
ov
ÔÔN P
.
ÔÔP Q
Transaccion
ÔÔQ \
(
ÔÔ\ ]
)
ÔÔ] ^
.
ÔÔ^ _"
id_transaccion_padre
ÔÔ_ s
)
ÔÔs t
.
ÔÔt u
ToArray
ÔÔu |
(
ÔÔ| }
)
ÔÔ} ~
;
ÔÔ~ 
List
 
<
 
Transaccion
  
>
  !
cobros
" (
=
) *$
transaccionRepositorio
+ A
.
A BE
7ObtenerTransaccionesPorTipoYContenganIdTransaccionPadre
B y
(
y z$
idsTransaccionesPadrez è
,è ê#
TransaccionSettingsë §
.§ •
Default• ¨
.¨ ≠9
)IdTipoTransaccionCobranzaFacturasClientes≠ ÷
)÷ ◊
.◊ ÿ
ToListÿ ﬁ
(ﬁ ﬂ
)ﬂ ‡
;‡ ·
foreach
ÒÒ 
(
ÒÒ 
var
ÒÒ 
cobro
ÒÒ "
in
ÒÒ# %
cobros
ÒÒ& ,
)
ÒÒ, -
{
ÚÚ 
venta
ÛÛ 
.
ÛÛ 
Transaccion1
ÛÛ &
.
ÛÛ& '
Add
ÛÛ' *
(
ÛÛ* +
cobro
ÛÛ+ 0
)
ÛÛ0 1
;
ÛÛ1 2
}
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
new
¯¯ 
LogicaException
¯¯ )
(
¯¯) *
$str
¯¯* j
,
¯¯j k
e
¯¯l m
)
¯¯m n
;
¯¯n o
}
˘˘ 
}
˙˙ 	
public
˝˝ 
void
˝˝ <
.ResolverSalidaDeMercaderiaDeCanjeDeComprobante
˝˝ B
(
˝˝B C
List
˝˝C G
<
˝˝G H
OrdenDeVenta
˝˝H T
>
˝˝T U
ordenesDeVenta
˝˝V d
,
˝˝d e
Transaccion
˝˝f q
venta
˝˝r w
,
˝˝w x
Transaccion˝˝y Ñ
ordenDeVenta˝˝Ö ë
)˝˝ë í
{
˛˛ 	
try
ˇˇ 
{
ÄÄ 
var
ÅÅ #
idsTransaccionesPadre
ÅÅ )
=
ÅÅ* +
ordenesDeVenta
ÅÅ, :
.
ÅÅ: ;
Select
ÅÅ; A
(
ÅÅA B
ov
ÅÅB D
=>
ÅÅE G
(
ÅÅH I
long
ÅÅI M
)
ÅÅM N
ov
ÅÅN P
.
ÅÅP Q
Transaccion
ÅÅQ \
(
ÅÅ\ ]
)
ÅÅ] ^
.
ÅÅ^ _"
id_transaccion_padre
ÅÅ_ s
)
ÅÅs t
.
ÅÅt u
ToArray
ÅÅu |
(
ÅÅ| }
)
ÅÅ} ~
;
ÅÅ~ 
List
ÇÇ 
<
ÇÇ 
Transaccion
ÇÇ  
>
ÇÇ  !!
salidasDeMercaderia
ÇÇ" 5
=
ÇÇ6 7$
transaccionRepositorio
ÇÇ8 N
.
ÇÇN OF
7ObtenerTransaccionesPorTipoYContenganIdTransaccionPadreÇÇO Ü
(ÇÇÜ á%
idsTransaccionesPadreÇÇá ú
,ÇÇú ù#
TransaccionSettingsÇÇû ±
.ÇÇ± ≤
DefaultÇÇ≤ π
.ÇÇπ ∫5
%IdTipoTransaccionSalidaBienesPorVentaÇÇ∫ ﬂ
)ÇÇﬂ ‡
.ÇÇ‡ ·
WhereÇÇ· Ê
(ÇÇÊ Á
tÇÇÁ Ë
=>ÇÇÈ Î
tÇÇÏ Ì
.ÇÇÌ Ó 
id_estado_actualÇÇÓ ˛
==ÇÇˇ Å
MaestroSettingsÇÇÇ ë
.ÇÇë í
DefaultÇÇí ô
.ÇÇô ö0
 IdDetalleMaestroEstadoConfirmadoÇÇö ∫
)ÇÇ∫ ª
.ÇÇª º
ToListÇÇº ¬
(ÇÇ¬ √
)ÇÇ√ ƒ
;ÇÇƒ ≈
ordenDeVenta
ÉÉ 
.
ÉÉ 
Transaccion11
ÉÉ *
=
ÉÉ+ ,
new
ÉÉ- 0
List
ÉÉ1 5
<
ÉÉ5 6
Transaccion
ÉÉ6 A
>
ÉÉA B
(
ÉÉB C
)
ÉÉC D
;
ÉÉD E
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
salida
ÑÑ #
in
ÑÑ$ &!
salidasDeMercaderia
ÑÑ' :
)
ÑÑ: ;
{
ÖÖ 
venta
ÜÜ 
.
ÜÜ 
Transaccion1
ÜÜ &
.
ÜÜ& '
Add
ÜÜ' *
(
ÜÜ* +
salida
ÜÜ+ 1
)
ÜÜ1 2
;
ÜÜ2 3
ordenDeVenta
áá  
.
áá  !
Transaccion11
áá! .
.
áá. /
Add
áá/ 2
(
áá2 3
salida
áá3 9
)
áá9 :
;
áá: ;
}
àà 
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
new
åå 
LogicaException
åå )
(
åå) *
$str
åå* z
,
ååz {
e
åå| }
)
åå} ~
;
åå~ 
}
çç 
}
éé 	
public
ïï 
List
ïï 
<
ïï &
CostoUtilidadPorConcepto
ïï ,
>
ïï, -8
*ObtenerReporteDeUtilidadDeVentasPorFamilia
ïï. X
(
ïïX Y
DateTime
ïïY a

fechaDesde
ïïb l
,
ïïl m
DateTime
ïïn v

fechaHastaïïw Å
,ïïÅ Ç
boolïïÉ á
reporteGlobalïïà ï
,ïïï ñ
intïïó ö
[ïïö õ
]ïïõ ú"
idsCentrosAtencionïïù Ø
)ïïØ ∞
{
ññ 	
try
óó 
{
òò 
List
ôô 
<
ôô &
CostoUtilidadPorConcepto
ôô -
>
ôô- .
	resultado
ôô/ 8
;
ôô8 9
if
öö 
(
öö 
reporteGlobal
öö !
)
öö! "
{
õõ 
	resultado
úú 
=
úú $
transaccionRepositorio
úú  6
.
úú6 78
*ObtenerReporteDeUtilidadDeVentasPorFamilia
úú7 a
(
úúa b!
TransaccionSettings
úúb u
.
úúu v
Default
úúv }
.
úú} ~,
IdTipoTransaccionOrdenDeVentaúú~ õ
,úúõ ú#
TransaccionSettingsúúù ∞
.úú∞ ±
Defaultúú± ∏
.úú∏ π5
%IdTipoTransaccionSalidaBienesPorVentaúúπ ﬁ
,úúﬁ ﬂ
MaestroSettingsúú‡ Ô
.úúÔ 
Defaultúú ˜
.úú˜ ¯0
 IdDetalleMaestroEstadoConfirmadoúú¯ ò
,úúò ô

fechaDesdeúúö §
,úú§ •

fechaHastaúú¶ ∞
)úú∞ ±
.úú± ≤
ToListúú≤ ∏
(úú∏ π
)úúπ ∫
;úú∫ ª
}
ùù 
else
ûû 
{
üü 
	resultado
†† 
=
†† $
transaccionRepositorio
††  6
.
††6 78
*ObtenerReporteDeUtilidadDeVentasPorFamilia
††7 a
(
††a b!
TransaccionSettings
††b u
.
††u v
Default
††v }
.
††} ~,
IdTipoTransaccionOrdenDeVenta††~ õ
,††õ ú#
TransaccionSettings††ù ∞
.††∞ ±
Default††± ∏
.††∏ π5
%IdTipoTransaccionSalidaBienesPorVenta††π ﬁ
,††ﬁ ﬂ
MaestroSettings††‡ Ô
.††Ô 
Default†† ˜
.††˜ ¯0
 IdDetalleMaestroEstadoConfirmado††¯ ò
,††ò ô"
idsCentrosAtencion††ö ¨
,††¨ ≠

fechaDesde††Æ ∏
,††∏ π

fechaHasta††∫ ƒ
)††ƒ ≈
.††≈ ∆
ToList††∆ Ã
(††Ã Õ
)††Õ Œ
;††Œ œ
}
°° 
return
¢¢ 
	resultado
¢¢  
;
¢¢  !
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ )
(
¶¶) *
$str
¶¶* f
,
¶¶f g
e
¶¶h i
)
¶¶i j
;
¶¶j k
}
ßß 
}
©© 	
public
™™ 
List
™™ 
<
™™ &
CostoUtilidadPorConcepto
™™ ,
>
™™, -9
+ObtenerReporteDeUtilidadDeVentasPorConcepto
™™. Y
(
™™Y Z
DateTime
™™Z b

fechaDesde
™™c m
,
™™m n
DateTime
™™o w

fechaHasta™™x Ç
,™™Ç É
bool™™Ñ à
reporteGlobal™™â ñ
,™™ñ ó
int™™ò õ
[™™õ ú
]™™ú ù"
idsCentrosAtencion™™û ∞
,™™∞ ±
int™™≤ µ
[™™µ ∂
]™™∂ ∑#
idsConceptosBasicos™™∏ À
)™™À Ã
{
´´ 	
try
¨¨ 
{
≠≠ 
List
ÆÆ 
<
ÆÆ &
CostoUtilidadPorConcepto
ÆÆ -
>
ÆÆ- .
	resultado
ÆÆ/ 8
;
ÆÆ8 9
if
ØØ 
(
ØØ 
reporteGlobal
ØØ !
)
ØØ! "
{
∞∞ 
	resultado
±± 
=
±± $
transaccionRepositorio
±±  6
.
±±6 79
+ObtenerReporteDeUtilidadDeVentasPorConcepto
±±7 b
(
±±b c!
TransaccionSettings
±±c v
.
±±v w
Default
±±w ~
.
±±~ ,
IdTipoTransaccionOrdenDeVenta±± ú
,±±ú ù#
TransaccionSettings±±û ±
.±±± ≤
Default±±≤ π
.±±π ∫5
%IdTipoTransaccionSalidaBienesPorVenta±±∫ ﬂ
,±±ﬂ ‡
MaestroSettings±±· 
.±± Ò
Default±±Ò ¯
.±±¯ ˘0
 IdDetalleMaestroEstadoConfirmado±±˘ ô
,±±ô ö#
idsConceptosBasicos±±õ Æ
,±±Æ Ø

fechaDesde±±∞ ∫
,±±∫ ª

fechaHasta±±º ∆
)±±∆ «
.±±« »
ToList±±» Œ
(±±Œ œ
)±±œ –
;±±– —
}
≤≤ 
else
≥≥ 
{
¥¥ 
	resultado
µµ 
=
µµ $
transaccionRepositorio
µµ  6
.
µµ6 79
+ObtenerReporteDeUtilidadDeVentasPorConcepto
µµ7 b
(
µµb c!
TransaccionSettings
µµc v
.
µµv w
Default
µµw ~
.
µµ~ ,
IdTipoTransaccionOrdenDeVentaµµ ú
,µµú ù#
TransaccionSettingsµµû ±
.µµ± ≤
Defaultµµ≤ π
.µµπ ∫5
%IdTipoTransaccionSalidaBienesPorVentaµµ∫ ﬂ
,µµﬂ ‡
MaestroSettingsµµ· 
.µµ Ò
DefaultµµÒ ¯
.µµ¯ ˘0
 IdDetalleMaestroEstadoConfirmadoµµ˘ ô
,µµô ö"
idsCentrosAtencionµµõ ≠
,µµ≠ Æ#
idsConceptosBasicosµµØ ¬
,µµ¬ √

fechaDesdeµµƒ Œ
,µµŒ œ

fechaHastaµµ– ⁄
)µµ⁄ €
.µµ€ ‹
ToListµµ‹ ‚
(µµ‚ „
)µµ„ ‰
;µµ‰ Â
}
∂∂ 
return
∑∑ 
	resultado
∑∑  
;
∑∑  !
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* f
,
ªªf g
e
ªªh i
)
ªªi j
;
ªªj k
}
ºº 
}
ææ 	
public
¬¬ 
List
¬¬ 
<
¬¬ &
Reporte_Puntos_Canjeados
¬¬ ,
>
¬¬, --
ObtenerReporteDePuntosCanjeados
¬¬. M
(
¬¬M N
DateTime
¬¬N V

fechaDesde
¬¬W a
,
¬¬a b
DateTime
¬¬c k

fechaHasta
¬¬l v
,
¬¬v w
int
¬¬x {
[
¬¬{ |
]
¬¬| }!
idsCentrosAtencion¬¬~ ê
)¬¬ê ë
{
√√ 	
try
ƒƒ 
{
≈≈ 
var
∆∆ 
	resultado
∆∆ 
=
∆∆ $
transaccionRepositorio
∆∆  6
.
∆∆6 7+
ObtenerReportePuntosCanjeados
∆∆7 T
(
∆∆T U!
TransaccionSettings
∆∆U h
.
∆∆h i
Default
∆∆i p
.
∆∆p q0
!IdAccionDeNegocioMovimientoEnCaja∆∆q í
,∆∆í ì

fechaDesde∆∆î û
,∆∆û ü

fechaHasta∆∆† ™
,∆∆™ ´"
idsCentrosAtencion∆∆¨ æ
)∆∆æ ø
.∆∆ø ¿
ToList∆∆¿ ∆
(∆∆∆ «
)∆∆« »
;∆∆» …
return
«« 
	resultado
««  
;
««  !
}
»» 
catch
…… 
(
…… 
	Exception
…… 
e
…… 
)
…… 
{
   
throw
ÀÀ 
new
ÀÀ 
LogicaException
ÀÀ )
(
ÀÀ) *
$str
ÀÀ* d
,
ÀÀd e
e
ÀÀf g
)
ÀÀg h
;
ÀÀh i
}
ÃÃ 
}
ŒŒ 	
public
œœ 
List
œœ 
<
œœ '
Reporte_Puntos_Pendientes
œœ -
>
œœ- ..
 ObtenerReporteDePuntosPendientes
œœ/ O
(
œœO P
)
œœP Q
{
–– 	
try
—— 
{
““ 
DateTime
”” 
fechaActual
”” $
=
””% &
DateTimeUtil
””' 3
.
””3 4
FechaActual
””4 ?
(
””? @
)
””@ A
;
””A B
DateTime
‘‘ +
fechaDesdeParaObtencionPuntos
‘‘ 6
=
‘‘7 8
fechaActual
‘‘9 D
.
‘‘D E
AddDays
‘‘E L
(
‘‘L M
-
‘‘M N
VentasSettings
‘‘N \
.
‘‘\ ]
Default
‘‘] d
.
‘‘d e$
VigenciaEnDiasDePuntos
‘‘e {
)
‘‘{ |
;
‘‘| }
var
’’ 
	resultado
’’ 
=
’’ $
transaccionRepositorio
’’  6
.
’’6 7,
ObtenerReportePuntosPendientes
’’7 U
(
’’U V+
fechaDesdeParaObtencionPuntos
’’V s
)
’’s t
.
’’t u
ToList
’’u {
(
’’{ |
)
’’| }
;
’’} ~
return
÷÷ 
	resultado
÷÷  
;
÷÷  !
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* e
,
⁄⁄e f
e
⁄⁄g h
)
⁄⁄h i
;
⁄⁄i j
}
€€ 
}
‹‹ 	
public
·· 
List
·· 
<
·· ,
ItemConGrupoOperacionComercial
·· 2
>
··2 3@
2ObtenerVentasConfirmadasPorCaracteristicaYConcepto
··4 f
(
··f g
DateTime
··g o

fechaDesde
··p z
,
··z {
DateTime··| Ñ

fechaHasta··Ö è
,··è ê
int··ë î
[··î ï
]··ï ñ"
idsCentrosAtencion··ó ©
,··© ™
int··´ Æ 
idCaracteristica··Ø ø
)··ø ¿
{
‚‚ 	
try
„„ 
{
‰‰ 
var
ÂÂ 
	resultado
ÂÂ 
=
ÂÂ $
transaccionRepositorio
ÂÂ  6
.
ÂÂ6 73
%ObtenerItemOperacionPorCaracteristica
ÂÂ7 \
(
ÂÂ\ ]!
TransaccionSettings
ÂÂ] p
.
ÂÂp q
Default
ÂÂq x
.
ÂÂx y,
IdTipoTransaccionOrdenDeVentaÂÂy ñ
,ÂÂñ ó
MaestroSettingsÂÂò ß
.ÂÂß ®
DefaultÂÂ® Ø
.ÂÂØ ∞0
 IdDetalleMaestroEstadoConfirmadoÂÂ∞ –
,ÂÂ– —

fechaDesdeÂÂ“ ‹
,ÂÂ‹ ›

fechaHastaÂÂﬁ Ë
,ÂÂË È"
idsCentrosAtencionÂÂÍ ¸
,ÂÂ¸ ˝ 
idCaracteristicaÂÂ˛ é
)ÂÂé è
.ÂÂè ê
ToListÂÂê ñ
(ÂÂñ ó
)ÂÂó ò
;ÂÂò ô
return
ÊÊ 
	resultado
ÊÊ  
;
ÊÊ  !
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ 
LogicaException
ÍÍ )
(
ÍÍ) *
$str
ÍÍ* v
,
ÍÍv w
e
ÍÍx y
)
ÍÍy z
;
ÍÍz {
}
ÎÎ 
}
ÏÏ 	
public
ıı 
List
ıı 
<
ıı -
ItemDetalladoOperacionComercial
ıı 3
>
ıı3 4G
9ObtenerVentasDetalladasPorConceptoCaracteristicasModoPago
ıı5 n
(
ıın o
DateTime
ııo w

fechaDesdeııx Ç
,ııÇ É
DateTimeııÑ å

fechaHastaııç ó
,ııó ò
intııô ú
idPuntoVentaııù ©
,ıı© ™
intıı´ Æ
[ııÆ Ø
]ııØ ∞"
idsCaracteristicasıı± √
)ıı√ ƒ
{
ˆˆ 	
try
˜˜ 
{
¯¯ 
List
˘˘ 
<
˘˘ -
ItemDetalladoOperacionComercial
˘˘ 4
>
˘˘4 5
	resultado
˘˘6 ?
=
˘˘@ A$
transaccionRepositorio
˘˘B X
.
˘˘X Y7
(ObtenerItemsDetalladoDeVentaConMedioPago˘˘Y Å
(˘˘Å Ç#
TransaccionSettings˘˘Ç ï
.˘˘ï ñ
Default˘˘ñ ù
.˘˘ù û-
IdTipoTransaccionOrdenDeVenta˘˘û ª
,˘˘ª º
MaestroSettings˘˘Ω Ã
.˘˘Ã Õ
Default˘˘Õ ‘
.˘˘‘ ’0
 IdDetalleMaestroEstadoConfirmado˘˘’ ı
,˘˘ı ˆ

fechaDesde˘˘˜ Å
,˘˘Å Ç

fechaHasta˘˘É ç
,˘˘ç é"
idsCaracteristicas˘˘è °
,˘˘° ¢
idPuntoVenta˘˘£ Ø
)˘˘Ø ∞
.˘˘∞ ±
ToList˘˘± ∑
(˘˘∑ ∏
)˘˘∏ π
;˘˘π ∫
return
˚˚ 
	resultado
˚˚  
;
˚˚  !
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
e
˝˝ 
)
˝˝ 
{
˛˛ 
throw
ˇˇ 
new
ˇˇ 
LogicaException
ˇˇ )
(
ˇˇ) *
$str
ˇˇ* c
,
ˇˇc d
e
ˇˇe f
)
ˇˇf g
;
ˇˇg h
}
Ä Ä  
}
Ç Ç  	
public
á á  
List
á á  
<
á á  "
VentaConceptoCliente
á á  (
>
á á ( )3
%ObtenerVentasPorFamiliaCaracteristica
á á * O
(
á á O P
DateTime
á á P X

fechaDesde
á á Y c
,
á á c d
DateTime
á á e m

fechaHasta
á á n x
,
á á x y
int
á á z }
[
á á } ~
]
á á ~ "
idsCentrosAtencioná á Ä í
,á á í ì
intá á î ó
	idFamiliaá á ò °
,á á ° ¢
intá á £ ¶ 
idCaracteristicaá á ß ∑
,á á ∑ ∏
intá á π º%
idValorCaracteristicaá á Ω “
)á á “ ”
{
à à  	
try
â â  
{
ä ä  
var
ã ã  
	resultado
ã ã  
=
ã ã  $
transaccionRepositorio
ã ã   6
.
ã ã 6 76
(ObtenerItemVentaPorFamiliaCaracteristica
ã ã 7 _
(
ã ã _ `!
TransaccionSettings
ã ã ` s
.
ã ã s t
Default
ã ã t {
.
ã ã { |,
IdTipoTransaccionOrdenDeVentaã ã | ô
,ã ã ô ö
MaestroSettingsã ã õ ™
.ã ã ™ ´
Defaultã ã ´ ≤
.ã ã ≤ ≥0
 IdDetalleMaestroEstadoConfirmadoã ã ≥ ”
,ã ã ” ‘

fechaDesdeã ã ’ ﬂ
,ã ã ﬂ ‡

fechaHastaã ã · Î
,ã ã Î Ï"
idsCentrosAtencionã ã Ì ˇ
,ã ã ˇ Ä
	idFamiliaã ã Å ä
,ã ã ä ã 
idCaracteristicaã ã å ú
,ã ã ú ù%
idValorCaracteristicaã ã û ≥
)ã ã ≥ ¥
.ã ã ¥ µ
ToListã ã µ ª
(ã ã ª º
)ã ã º Ω
;ã ã Ω æ
return
å å  
	resultado
å å   
;
å å   !
}
ç ç  
catch
é é  
(
é é  
	Exception
é é  
e
é é  
)
é é  
{
è è  
throw
ê ê  
new
ê ê  
LogicaException
ê ê  )
(
ê ê ) *
$str
ê ê * v
,
ê ê v w
e
ê ê x y
)
ê ê y z
;
ê ê z {
}
ë ë  
}
í í  	
public
ì ì  
List
ì ì  
<
ì ì  "
VentaConceptoCliente
ì ì  (
>
ì ì ( ),
ObtenerVentasPorCaracteristica
ì ì * H
(
ì ì H I
DateTime
ì ì I Q

fechaDesde
ì ì R \
,
ì ì \ ]
DateTime
ì ì ^ f

fechaHasta
ì ì g q
,
ì ì q r
int
ì ì s v
[
ì ì v w
]
ì ì w x!
idsCentrosAtencionì ì y ã
,ì ì ã å
intì ì ç ê 
idCaracteristicaì ì ë °
,ì ì ° ¢
intì ì £ ¶%
idValorCaracteristicaì ì ß º
)ì ì º Ω
{
î î  	
try
ï ï  
{
ñ ñ  
var
ó ó  
	resultado
ó ó  
=
ó ó  $
transaccionRepositorio
ó ó   6
.
ó ó 6 7/
!ObtenerItemVentaPorCaracteristica
ó ó 7 X
(
ó ó X Y!
TransaccionSettings
ó ó Y l
.
ó ó l m
Default
ó ó m t
.
ó ó t u,
IdTipoTransaccionOrdenDeVentaó ó u í
,ó ó í ì
MaestroSettingsó ó î £
.ó ó £ §
Defaultó ó § ´
.ó ó ´ ¨0
 IdDetalleMaestroEstadoConfirmadoó ó ¨ Ã
,ó ó Ã Õ

fechaDesdeó ó Œ ÿ
,ó ó ÿ Ÿ

fechaHastaó ó ⁄ ‰
,ó ó ‰ Â"
idsCentrosAtencionó ó Ê ¯
,ó ó ¯ ˘ 
idCaracteristicaó ó ˙ ä
,ó ó ä ã%
idValorCaracteristicaó ó å °
)ó ó ° ¢
.ó ó ¢ £
ToListó ó £ ©
(ó ó © ™
)ó ó ™ ´
;ó ó ´ ¨
return
ò ò  
	resultado
ò ò   
;
ò ò   !
}
ô ô  
catch
ö ö  
(
ö ö  
	Exception
ö ö  
e
ö ö  
)
ö ö  
{
õ õ  
throw
ú ú  
new
ú ú  
LogicaException
ú ú  )
(
ú ú ) *
$str
ú ú * v
,
ú ú v w
e
ú ú x y
)
ú ú y z
;
ú ú z {
}
ù ù  
}
û û  	
public
ü ü  
List
ü ü  
<
ü ü  "
VentaConceptoCliente
ü ü  (
>
ü ü ( )&
ObtenerVentasPorConcepto
ü ü * B
(
ü ü B C
DateTime
ü ü C K

fechaDesde
ü ü L V
,
ü ü V W
DateTime
ü ü X `

fechaHasta
ü ü a k
,
ü ü k l
int
ü ü m p
[
ü ü p q
]
ü ü q r!
idsCentrosAtencionü ü s Ö
,ü ü Ö Ü
intü ü á ä

idConceptoü ü ã ï
)ü ü ï ñ
{
† †  	
try
° °  
{
¢ ¢  
var
£ £  
	resultado
£ £  
=
£ £  $
transaccionRepositorio
£ £   6
.
£ £ 6 7)
ObtenerItemVentaPorConcepto
£ £ 7 R
(
£ £ R S!
TransaccionSettings
£ £ S f
.
£ £ f g
Default
£ £ g n
.
£ £ n o,
IdTipoTransaccionOrdenDeVenta£ £ o å
,£ £ å ç
MaestroSettings£ £ é ù
.£ £ ù û
Default£ £ û •
.£ £ • ¶0
 IdDetalleMaestroEstadoConfirmado£ £ ¶ ∆
,£ £ ∆ «

fechaDesde£ £ » “
,£ £ “ ”

fechaHasta£ £ ‘ ﬁ
,£ £ ﬁ ﬂ"
idsCentrosAtencion£ £ ‡ Ú
,£ £ Ú Û

idConcepto£ £ Ù ˛
)£ £ ˛ ˇ
.£ £ ˇ Ä
ToList£ £ Ä Ü
(£ £ Ü á
)£ £ á à
;£ £ à â
return
§ §  
	resultado
§ §   
;
§ §   !
}
• •  
catch
¶ ¶  
(
¶ ¶  
	Exception
¶ ¶  
e
¶ ¶  
)
¶ ¶  
{
ß ß  
throw
® ®  
new
® ®  
LogicaException
® ®  )
(
® ® ) *
$str
® ® * v
,
® ® v w
e
® ® x y
)
® ® y z
;
® ® z {
}
© ©  
}
™ ™  	
public
Ø Ø  
List
Ø Ø  
<
Ø Ø  )
ResumenDeTransaccionGeneral
Ø Ø  /
>
Ø Ø / 07
)ObtenerInvalidacionesDeOperacionesDeVenta
Ø Ø 1 Z
(
Ø Ø Z [
DateTime
Ø Ø [ c

fechaDesde
Ø Ø d n
,
Ø Ø n o
DateTime
Ø Ø p x

fechaHastaØ Ø y É
,Ø Ø É Ñ
intØ Ø Ö à
idPuntoVentaØ Ø â ï
)Ø Ø ï ñ
{
∞ ∞  	
try
± ±  
{
≤ ≤  
var
≥ ≥  
	resultado
≥ ≥  
=
≥ ≥  $
transaccionRepositorio
≥ ≥   6
.
≥ ≥ 6 7+
ObtenerResumenDeTransacciones
≥ ≥ 7 T
(
≥ ≥ T U
Diccionario
≥ ≥ U `
.
≥ ≥ ` a7
(TiposdeTransaccionInvalidacionesDeVentas≥ ≥ a â
,≥ ≥ â ä
MaestroSettings≥ ≥ ã ö
.≥ ≥ ö õ
Default≥ ≥ õ ¢
.≥ ≥ ¢ £0
 IdDetalleMaestroEstadoConfirmado≥ ≥ £ √
,≥ ≥ √ ƒ

fechaDesde≥ ≥ ≈ œ
,≥ ≥ œ –

fechaHasta≥ ≥ — €
,≥ ≥ € ‹
idPuntoVenta≥ ≥ › È
)≥ ≥ È Í
.≥ ≥ Í Î
ToList≥ ≥ Î Ò
(≥ ≥ Ò Ú
)≥ ≥ Ú Û
;≥ ≥ Û Ù
return
¥ ¥  
	resultado
¥ ¥   
;
¥ ¥   !
}
µ µ  
catch
∂ ∂  
(
∂ ∂  
	Exception
∂ ∂  
e
∂ ∂  
)
∂ ∂  
{
∑ ∑  
throw
∏ ∏  
new
∏ ∏  
LogicaException
∏ ∏  )
(
∏ ∏ ) *
$str
∏ ∏ * l
,
∏ ∏ l m
e
∏ ∏ n o
)
∏ ∏ o p
;
∏ ∏ p q
}
π π  
}
∫ ∫  	
public
º º  
List
º º  
<
º º  )
ResumenDeTransaccionGeneral
º º  /
>
º º / 05
'ObtenerNotasCreditoDeOperacionesDeVenta
º º 1 X
(
º º X Y
DateTime
º º Y a

fechaDesde
º º b l
,
º º l m
DateTime
º º n v

fechaHastaº º w Å
,º º Å Ç
intº º É Ü
idPuntoVentaº º á ì
)º º ì î
{
Ω Ω  	
try
æ æ  
{
ø ø  
var
¿ ¿  
	resultado
¿ ¿  
=
¿ ¿  $
transaccionRepositorio
¿ ¿   6
.
¿ ¿ 6 7+
ObtenerResumenDeTransacciones
¿ ¿ 7 T
(
¿ ¿ T U
Diccionario
¿ ¿ U `
.
¿ ¿ ` aO
@TiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCredito¿ ¿ a °
,¿ ¿ ° ¢
MaestroSettings¿ ¿ £ ≤
.¿ ¿ ≤ ≥
Default¿ ¿ ≥ ∫
.¿ ¿ ∫ ª0
 IdDetalleMaestroEstadoConfirmado¿ ¿ ª €
,¿ ¿ € ‹

fechaDesde¿ ¿ › Á
,¿ ¿ Á Ë

fechaHasta¿ ¿ È Û
,¿ ¿ Û Ù
idPuntoVenta¿ ¿ ı Å
,¿ ¿ Å Ç
MaestroSettings¿ ¿ É í
.¿ ¿ í ì
Default¿ ¿ ì ö
.¿ ¿ ö õ?
/IdDetalleMaestroParametroCodigoTransaccionSunat¿ ¿ õ  
)¿ ¿   À
.¿ ¿ À Ã
OrderBy¿ ¿ Ã ”
(¿ ¿ ” ‘
nd¿ ¿ ‘ ÷
=>¿ ¿ ◊ Ÿ
nd¿ ¿ ⁄ ‹
.¿ ¿ ‹ ›
Fecha¿ ¿ › ‚
)¿ ¿ ‚ „
.¿ ¿ „ ‰
ToList¿ ¿ ‰ Í
(¿ ¿ Í Î
)¿ ¿ Î Ï
;¿ ¿ Ï Ì
var
√ √  #
nombresTiposOperacion
√ √  )
=
√ √ * + 
maestroRepositorio
√ √ , >
.
√ √ > ?
ObtenerDetalles
√ √ ? N
(
√ √ N O
MaestroSettings
√ √ O ^
.
√ √ ^ _
Default
√ √ _ f
.
√ √ f g6
'IdMaestroTipoDeNotaDeCreditoElectronica√ √ g é
)√ √ é è
;√ √ è ê
	resultado
≈ ≈  
.
≈ ≈  
ForEach
≈ ≈  !
(
≈ ≈ ! "
r
≈ ≈ " #
=>
≈ ≈ $ &
r
≈ ≈ ' (
.
≈ ≈ ( )&
NombreTipoOperacionSunat
≈ ≈ ) A
=
≈ ≈ B C#
nombresTiposOperacion
≈ ≈ D Y
.
≈ ≈ Y Z
Single
≈ ≈ Z `
(
≈ ≈ ` a
nto
≈ ≈ a d
=>
≈ ≈ e g
nto
≈ ≈ h k
.
≈ ≈ k l
codigo
≈ ≈ l r
==
≈ ≈ s u
r
≈ ≈ v w
.
≈ ≈ w x'
CodigoTipoOperacionSunat≈ ≈ x ê
)≈ ≈ ê ë
.≈ ≈ ë í
nombre≈ ≈ í ò
)≈ ≈ ò ô
;≈ ≈ ô ö
return
∆ ∆  
	resultado
∆ ∆   
;
∆ ∆   !
}
« «  
catch
» »  
(
» »  
	Exception
» »  
e
» »  
)
» »  
{
… …  
throw
     
new
     
LogicaException
     )
(
    ) *
$str
    * n
,
    n o
e
    p q
)
    q r
;
    r s
}
À À  
}
Ã Ã  	
public
Œ Œ  
List
Œ Œ  
<
Œ Œ  )
ResumenDeTransaccionGeneral
Œ Œ  /
>
Œ Œ / 04
&ObtenerNotasDebitoDeOperacionesDeVenta
Œ Œ 1 W
(
Œ Œ W X
DateTime
Œ Œ X `

fechaDesde
Œ Œ a k
,
Œ Œ k l
DateTime
Œ Œ m u

fechaHastaŒ Œ v Ä
,Œ Œ Ä Å
intŒ Œ Ç Ö
idPuntoVentaŒ Œ Ü í
)Œ Œ í ì
{
œ œ  	
try
– –  
{
— —  
var
“ “  
	resultado
“ “  
=
“ “  $
transaccionRepositorio
“ “   6
.
“ “ 6 7+
ObtenerResumenDeTransacciones
“ “ 7 T
(
“ “ T U
Diccionario
“ “ U `
.
“ “ ` aN
?TiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeDebito“ “ a †
,“ “ † °
MaestroSettings“ “ ¢ ±
.“ “ ± ≤
Default“ “ ≤ π
.“ “ π ∫0
 IdDetalleMaestroEstadoConfirmado“ “ ∫ ⁄
,“ “ ⁄ €

fechaDesde“ “ ‹ Ê
,“ “ Ê Á

fechaHasta“ “ Ë Ú
,“ “ Ú Û
idPuntoVenta“ “ Ù Ä
,“ “ Ä Å
MaestroSettings“ “ Ç ë
.“ “ ë í
Default“ “ í ô
.“ “ ô ö?
/IdDetalleMaestroParametroCodigoTransaccionSunat“ “ ö …
)“ “ …  
.“ “   À
OrderBy“ “ À “
(“ “ “ ”
nd“ “ ” ’
=>“ “ ÷ ÿ
nd“ “ Ÿ €
.“ “ € ‹
Fecha“ “ ‹ ·
)“ “ · ‚
.“ “ ‚ „
ToList“ “ „ È
(“ “ È Í
)“ “ Í Î
;“ “ Î Ï
var
” ”  #
nombresTiposOperacion
” ”  )
=
” ” * + 
maestroRepositorio
” ” , >
.
” ” > ?
ObtenerDetalles
” ” ? N
(
” ” N O
MaestroSettings
” ” O ^
.
” ” ^ _
Default
” ” _ f
.
” ” f g5
&IdMaestroTipoDeNotaDeDebitoElectronica” ” g ç
)” ” ç é
.” ” é è
ToList” ” è ï
(” ” ï ñ
)” ” ñ ó
;” ” ó ò
	resultado
’ ’  
.
’ ’  
ForEach
’ ’  !
(
’ ’ ! "
r
’ ’ " #
=>
’ ’ $ &
r
’ ’ ' (
.
’ ’ ( )&
NombreTipoOperacionSunat
’ ’ ) A
=
’ ’ B C#
nombresTiposOperacion
’ ’ D Y
.
’ ’ Y Z
Single
’ ’ Z `
(
’ ’ ` a
nto
’ ’ a d
=>
’ ’ e g
nto
’ ’ h k
.
’ ’ k l
codigo
’ ’ l r
==
’ ’ s u
r
’ ’ v w
.
’ ’ w x'
CodigoTipoOperacionSunat’ ’ x ê
)’ ’ ê ë
.’ ’ ë í
nombre’ ’ í ò
)’ ’ ò ô
;’ ’ ô ö
return
÷ ÷  
	resultado
÷ ÷   
;
÷ ÷   !
}
◊ ◊  
catch
ÿ ÿ  
(
ÿ ÿ  
	Exception
ÿ ÿ  
e
ÿ ÿ  
)
ÿ ÿ  
{
Ÿ Ÿ  
throw
⁄ ⁄  
new
⁄ ⁄  
LogicaException
⁄ ⁄  )
(
⁄ ⁄ ) *
$str
⁄ ⁄ * m
,
⁄ ⁄ m n
e
⁄ ⁄ o p
)
⁄ ⁄ p q
;
⁄ ⁄ q r
}
€ €  
}
‹ ‹  	
}
› ›  
}ﬂ ﬂ  øt
OD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_Venta2Pasos.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica )
{ 
public 
OperationResult !
RegistrarOrdenDeVenta 4
(4 5
ModoOperacionEnum5 F
tipoDeVentaG R
,R S"
UserProfileSessionDataT j
sesionDeUsuariok z
,z { 
DatosVentaIntegrada	| è

datosVenta
ê ö
)
ö õ
{ 	
var 
venta 
= !
GenerarVentaSoloOrden -
(- .
tipoDeVenta. 9
,9 :
sesionDeUsuario; J
,J K

datosVentaL V
)V W
;W X
OperationResult 
result "
=# $"
transaccionRepositorio% ;
.; <"
RegistrarTransacciones< R
(R S
newS V!
RegistroTransaccionesW l
(l m
)m n
{o p 
Transacciones_Crear	q Ñ
=
Ö Ü
new
á ä
List
ã è
<
è ê
Transaccion
ê õ
>
õ ú
(
ú ù
)
ù û
{
ü †
venta
° ¶
.
¶ ß
	Operacion
ß ∞
}
± ≤
}
≥ ¥
)
¥ µ
;
µ ∂
return 
result 
; 
} 	
public 
OperacionSoloOrden !!
GenerarVentaSoloOrden" 7
(7 8
ModoOperacionEnum8 I
tipoDeVentaJ U
,U V"
UserProfileSessionDataW m
sesionDeUsuarion }
,} ~ 
DatosVentaIntegrada	 í

datosVenta
ì ù
)
ù û
{   	
ValidarVenta!! 
(!! 

datosVenta!! #
,!!# $
ConfiguracionAccion!!% 8
.!!8 9
RegistroOrdenVenta!!9 K
)!!K L
;!!L M
Comprobante"" 
comprobante"" #
=""$ %&
ObtenerComprobanteTemporal""& @
(""@ A

datosVenta""A K
.""K L
Orden""L Q
.""Q R
Comprobante""R ]
.""] ^
Tipo""^ b
.""b c
Id""c e
)""e f
;""f g
Transaccion## 
venta## 
=## 
GenerarVenta##  ,
(##, -

datosVenta##- 7
,##7 8
comprobante##9 D
,##D E
ConfiguracionAccion##F Y
.##Y Z"
ConfirmacionOrdenVenta##Z p
,##p q
sesionDeUsuario	##r Å
)
##Å Ç
;
##Ç É
Transaccion$$ 
ordenDeVenta$$ $
=$$% &
GenerarOrdenDeVenta$$' :
($$: ;
venta$$; @
,$$@ A
tipoDeVenta$$B M
,$$M N

datosVenta$$O Y
,$$Y Z
ConfiguracionAccion$$[ n
.$$n o
RegistroOrdenVenta	$$o Å
)
$$Å Ç
;
$$Ç É
return%% 
new%% 
OperacionSoloOrden%% )
(%%) *
venta%%* /
,%%/ 0
ordenDeVenta%%1 =
,%%= >

datosVenta%%? I
.%%I J
TransaccionOrigen%%J [
)%%[ \
;%%\ ]
}&& 	
public(( 
Comprobante(( &
ObtenerComprobanteTemporal(( 5
(((5 6
int((6 9
idTipoComprobante((: K
)((K L
{)) 	
return** 
new** 
Comprobante** "
(**" #
)**# $
{**% &
id**' )
=*** +
Diccionario**, 7
.**7 8'
TiposDeComprobanteParaVenta**8 S
.**S T
Single**T Z
(**Z [
tc**[ ]
=>**^ `
tc**a c
==**d f
idTipoComprobante**g x
)**x y
}**z {
;**{ |
}++ 	
public44 
OperationResult44 #
RegistrarOrdenesDeVenta44 6
(446 7
ModoOperacionEnum447 H
tipoDeVenta44I T
,44T U"
UserProfileSessionData44V l
sesionUsuario44m z
,44z {
List	44| Ä
<
44Ä Å!
DatosVentaIntegrada
44Å î
>
44î ï
datosVentas
44ñ °
)
44° ¢
{55 	
List66 
<66 
Transaccion66 
>66 
transaccionesVentas66 1
=662 3
new664 7
List668 <
<66< =
Transaccion66= H
>66H I
(66I J
)66J K
;66K L
foreach77 
(77 
var77 

datosVenta77 #
in77$ &
datosVentas77' 2
)772 3
{88 
transaccionesVentas99 #
.99# $
Add99$ '
(99' (!
GenerarVentaSoloOrden99( =
(99= >
tipoDeVenta99> I
,99I J
sesionUsuario99K X
,99X Y

datosVenta99Z d
)99d e
.99e f
	Operacion99f o
)99o p
;99p q
}:: 
OperationResult;; 
result;; "
=;;# $"
transaccionRepositorio;;% ;
.;;; <"
RegistrarTransacciones;;< R
(;;R S
new;;S V!
RegistroTransacciones;;W l
(;;l m
);;m n
{;;o p 
Transacciones_Crear	;;q Ñ
=
;;Ö Ü!
transaccionesVentas
;;á ö
}
;;õ ú
)
;;ú ù
;
;;ù û
;
;;û ü
return<< 
result<< 
;<< 
}== 	
publicGG 
OperationResultGG %
ConfirmarVentasIntegradasGG 8
(GG8 9
ModoOperacionEnumGG9 J
tipoDeVentaGGK V
,GGV W"
UserProfileSessionDataGGX n
sesionDeUsuarioGGo ~
,GG~ 
List
GGÄ Ñ
<
GGÑ Ö!
DatosVentaIntegrada
GGÖ ò
>
GGò ô#
datosVentasIntegradas
GGö Ø
)
GGØ ∞
{HH 	
tryII 
{JJ 
ListKK 
<KK 
OperacionIntegradaKK '
>KK' ($
ventasIntegradasAGuardarKK) A
=KKB C
newKKD G
ListKKH L
<KKL M
OperacionIntegradaKKM _
>KK_ `
(KK` a
)KKa b
;KKb c
intMM 
codigoMaximoVentaMM %
=MM& '#
codigosOperacion_LogicaMM( ?
.MM? @.
"ObtenerMaximoCodigoParaTransaccionMM@ b
(MMb c
DiccionarioMMc n
.MMn o4
'MapeoTipoTransaccionVsCodigoDeOperacion	MMo ñ
.
MMñ ó
Single
MMó ù
(
MMù û
ttcp
MMû ¢
=>
MM£ •
ttcp
MM¶ ™
.
MM™ ´
Key
MM´ Æ
==
MMØ ±!
TransaccionSettings
MM≤ ≈
.
MM≈ ∆
Default
MM∆ Õ
.
MMÕ Œ$
IdTipoTransaccionVenta
MMŒ ‰
)
MM‰ Â
.
MMÂ Ê
Value
MMÊ Î
,
MMÎ Ï!
TransaccionSettings
MMÌ Ä
.
MMÄ Å
Default
MMÅ à
.
MMà â$
IdTipoTransaccionVenta
MMâ ü
)
MMü †
;
MM† °
intNN "
codigoMaximoOrdenVentaNN *
=NN+ ,#
codigosOperacion_LogicaNN- D
.NND E.
"ObtenerMaximoCodigoParaTransaccionNNE g
(NNg h
DiccionarioNNh s
.NNs t4
'MapeoTipoTransaccionVsCodigoDeOperacion	NNt õ
.
NNõ ú
Single
NNú ¢
(
NN¢ £
ttcp
NN£ ß
=>
NN® ™
ttcp
NN´ Ø
.
NNØ ∞
Key
NN∞ ≥
==
NN¥ ∂!
TransaccionSettings
NN∑  
.
NN  À
Default
NNÀ “
.
NN“ ”+
IdTipoTransaccionOrdenDeVenta
NN” 
)
NN Ò
.
NNÒ Ú
Value
NNÚ ˜
,
NN˜ ¯!
TransaccionSettings
NN˘ å
.
NNå ç
Default
NNç î
.
NNî ï+
IdTipoTransaccionOrdenDeVenta
NNï ≤
)
NN≤ ≥
;
NN≥ ¥
intOO 
codigoMaximoCuotaOO %
=OO& '"
transaccionRepositorioOO( >
.OO> ?$
ObtenerMaximoCodigoCuotaOO? W
(OOW X
$strOOX [
+OO\ ]
DateTimeUtilOO^ j
.OOj k
FechaActualOOk v
(OOv w
)OOw x
.OOx y
YearOOy }
)OO} ~
;OO~ 
intPP (
codigoMaximoSalidaMercaderiaPP 0
=PP1 2#
codigosOperacion_LogicaPP3 J
.PPJ K.
"ObtenerMaximoCodigoParaTransaccionPPK m
(PPm n
DiccionarioPPn y
.PPy z4
'MapeoTipoTransaccionVsCodigoDeOperacion	PPz °
.
PP° ¢
Single
PP¢ ®
(
PP® ©
ttcp
PP© ≠
=>
PPÆ ∞
ttcp
PP± µ
.
PPµ ∂
Key
PP∂ π
==
PP∫ º!
TransaccionSettings
PPΩ –
.
PP– —
Default
PP— ÿ
.
PPÿ Ÿ3
%IdTipoTransaccionSalidaBienesPorVenta
PPŸ ˛
)
PP˛ ˇ
.
PPˇ Ä
Value
PPÄ Ö
,
PPÖ Ü!
TransaccionSettings
PPá ö
.
PPö õ
Default
PPõ ¢
.
PP¢ £3
%IdTipoTransaccionSalidaBienesPorVenta
PP£ »
)
PP» …
;
PP…  
intQQ 
codigoMaximoCobroQQ %
=QQ& '#
codigosOperacion_LogicaQQ( ?
.QQ? @.
"ObtenerMaximoCodigoParaTransaccionQQ@ b
(QQb c
$strQQc g
+QQh i
DateTimeUtilQQj v
.QQv w
FechaActual	QQw Ç
(
QQÇ É
)
QQÉ Ñ
.
QQÑ Ö
ToString
QQÖ ç
(
QQç é
$str
QQé î
)
QQî ï
,
QQï ñ!
TransaccionSettings
QQó ™
.
QQ™ ´
Default
QQ´ ≤
.
QQ≤ ≥7
)IdTipoTransaccionCobranzaFacturasClientes
QQ≥ ‹
)
QQ‹ ›
;
QQ› ﬁ
CodigoRR 
codigosMaximosRR %
;RR% &
foreachSS 
(SS 
varSS 
datosVentaIntegradaSS 0
inSS1 3!
datosVentasIntegradasSS4 I
)SSI J
{TT 
OperacionIntegradaUU &
ventaIntegradaUU' 5
=UU6 7!
GenerarVentaIntegradaUU8 M
(UUM N
tipoDeVentaUUN Y
,UUY Z
sesionDeUsuarioUU[ j
,UUj k
datosVentaIntegradaUUl 
,	UU Ä
true
UUÅ Ö
)
UUÖ Ü
;
UUÜ á
ventaIntegradaVV "
.VV" #
IdVV# %
=VV& '
datosVentaIntegradaVV( ;
.VV; <
IdVV< >
;VV> ?
codigosMaximosXX "
=XX# $
newXX% (
CodigoXX) /
(XX/ 0
datosVentaIntegradaXX0 C
.XXC D
FechaRegistroXXD Q
,XXQ R
codigoMaximoVentaXXS d
,XXd e"
codigoMaximoOrdenVentaXXf |
,XX| }
codigoMaximoCuota	XX~ è
,
XXè ê
codigoMaximoCobro
XXë ¢
,
XX¢ £*
codigoMaximoSalidaMercaderia
XX§ ¿
)
XX¿ ¡
;
XX¡ ¬:
.ModificarCodigoDeTransaccionesParaVentaMasivasZZ B
(ZZB C
ventaIntegradaZZC Q
,ZZQ R
codigosMaximosZZS a
)ZZa b
;ZZb c$
ventasIntegradasAGuardar\\ ,
.\\, -
Add\\- 0
(\\0 1
ventaIntegrada\\1 ?
)\\? @
;\\@ A
codigoMaximoVenta]] %
++]]% '
;]]' ("
codigoMaximoOrdenVenta]]) ?
++]]? A
;]]A B
codigoMaximoCuota]]C T
++]]T V
;]]V W
codigoMaximoCobro]]X i
++]]i k
;]]k l)
codigoMaximoSalidaMercaderia	]]m â
++
]]â ã
;
]]ã å
}^^  
ResolverComprobantes__ $
(__$ %$
ventasIntegradasAGuardar__% =
)__= >
;__> ?
var`` 
result`` 
=`` 6
*AfectarInventarioFisicoYGuardarOperaciones`` G
(``G H$
ventasIntegradasAGuardar``H `
,``` a
sesionDeUsuario``b q
)``q r
;``r s

Dictionaryaa 
<aa 
longaa 
,aa  
longaa! %
>aa% &1
%mapeoIdsDatosVentasIntegradasIdsOrdenaa' L
=aaM N
newaaO R

DictionaryaaS ]
<aa] ^
longaa^ b
,aab c
longaad h
>aah i
(aai j
)aaj k
;aak l
foreachbb 
(bb 
varbb 
ventabb "
inbb# %$
ventasIntegradasAGuardarbb& >
)bb> ?
{cc 1
%mapeoIdsDatosVentasIntegradasIdsOrdendd 9
.dd9 :
Adddd: =
(dd= >
ventadd> C
.ddC D
IdddD F
,ddF G
ventaddH M
.ddM N
OrdenDeOperacionddN ^
.dd^ _
iddd_ a
)dda b
;ddb c
}ee 
resultff 
.ff 
objetoff 
=ff 1
%mapeoIdsDatosVentasIntegradasIdsOrdenff  E
;ffE F
returngg 
resultgg 
;gg 
}hh 
catchii 
(ii 
	Exceptionii 
eii 
)ii 
{jj 
throwkk 
newkk 
LogicaExceptionkk )
(kk) *
$strkk* Z
,kkZ [
ekk\ ]
)kk] ^
;kk^ _
}ll 
}mm 	
publictt 
Listtt 
<tt 
DatosVentaIntegradatt '
>tt' (6
*ObtenerOrdenesDeVenta_SegunOperacionOrigentt) S
(ttS T
longttT X
idOperacionOrigenttY j
)ttj k
{uu 	
tryvv 
{ww 
Listxx 
<xx 
DatosVentaIntegradaxx (
>xx( )
datosVentasxx* 5
=xx5 6
nullxx6 :
;xx: ;
varyy 
ordenesyy 
=yy "
transaccionRepositorioyy 4
.yy4 5f
YObtenerTransaccionesSegunOrigen_InclusiveActoresYDetalleMaestroYEstadoYDetalleTransaccion	yy5 é
(
yyé è
idOperacionOrigen
yyè †
,
yy† °!
TransaccionSettings
yy¢ µ
.
yyµ ∂
Default
yy∂ Ω
.
yyΩ æ+
IdTipoTransaccionOrdenDeVenta
yyæ €
)
yy€ ‹
;
yy‹ ›
ordeneszz 
.zz 
ForEachzz 
(zz  
ozz  !
=>zz! #
datosVentaszz# .
.zz. /
Addzz/ 2
(zz2 3
DatosVentaIntegradazz3 F
.zzF G
ConvertzzG N
(zzN O
ozzO P
)zzP Q
)zzQ R
)zzR S
;zzS T
return{{ 
datosVentas{{ "
;{{" #
}|| 
catch}} 
(}} 
	Exception}} 
e}} 
)}} 
{~~ 
throw 
new 
LogicaException )
() *
$str* e
+e f
idOperacionOrigeng x
+x y
$stry }
,} ~
e~ 
)	 Ä
;
Ä Å
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ÉÉ ˙¨
OD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\OperacionLogica_VentaMasiva.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
{ 
public 

partial 
class 
OperacionLogica (
{ 
public 
OperationResult  
ConfirmarVentaMasiva 3
(3 4"
UserProfileSessionData4 J
sesionDeUsuarioK Z
,Z [
VentaMasiva\ g
ventaMasivah s
)s t
{ 	
try 
{ 
List 
< 
OperacionIntegrada '
>' ($
ventasIntegradasAGuardar) A
=B C
newD G
ListH L
<L M
OperacionIntegradaM _
>_ `
(` a
)a b
;b c
var 
ventasValidas !
=" #
ventaMasiva$ /
./ 0
Detalles0 8
.8 9
Where9 >
(> ?
d? @
=>A C
dD E
.E F
CantidadF N
>O P
$numQ R
)R S
;S T
int   
codigoMaximoVenta   %
=  & '#
codigosOperacion_Logica  ( ?
.  ? @.
"ObtenerMaximoCodigoParaTransaccion  @ b
(  b c
Diccionario  c n
.  n o4
'MapeoTipoTransaccionVsCodigoDeOperacion	  o ñ
.
  ñ ó
Single
  ó ù
(
  ù û
ttcp
  û ¢
=>
  £ •
ttcp
  ¶ ™
.
  ™ ´
Key
  ´ Æ
==
  Ø ±!
TransaccionSettings
  ≤ ≈
.
  ≈ ∆
Default
  ∆ Õ
.
  Õ Œ$
IdTipoTransaccionVenta
  Œ ‰
)
  ‰ Â
.
  Â Ê
Value
  Ê Î
,
  Î Ï!
TransaccionSettings
  Ì Ä
.
  Ä Å
Default
  Å à
.
  à â$
IdTipoTransaccionVenta
  â ü
)
  ü †
;
  † °
int!! "
codigoMaximoOrdenVenta!! *
=!!+ ,#
codigosOperacion_Logica!!- D
.!!D E.
"ObtenerMaximoCodigoParaTransaccion!!E g
(!!g h
Diccionario!!h s
.!!s t4
'MapeoTipoTransaccionVsCodigoDeOperacion	!!t õ
.
!!õ ú
Single
!!ú ¢
(
!!¢ £
ttcp
!!£ ß
=>
!!® ™
ttcp
!!´ Ø
.
!!Ø ∞
Key
!!∞ ≥
==
!!¥ ∂!
TransaccionSettings
!!∑  
.
!!  À
Default
!!À “
.
!!“ ”+
IdTipoTransaccionOrdenDeVenta
!!” 
)
!! Ò
.
!!Ò Ú
Value
!!Ú ˜
,
!!˜ ¯!
TransaccionSettings
!!˘ å
.
!!å ç
Default
!!ç î
.
!!î ï+
IdTipoTransaccionOrdenDeVenta
!!ï ≤
)
!!≤ ≥
;
!!≥ ¥
int"" 
codigoMaximoCuota"" %
=""& '"
transaccionRepositorio""( >
.""> ?$
ObtenerMaximoCodigoCuota""? W
(""W X
$str""X [
+""\ ]
ventaMasiva""^ i
.""i j
FechaEmision""j v
.""v w
Year""w {
)""{ |
;""| }
int## (
codigoMaximoSalidaMercaderia## 0
=##1 2#
codigosOperacion_Logica##3 J
.##J K.
"ObtenerMaximoCodigoParaTransaccion##K m
(##m n
Diccionario##n y
.##y z4
'MapeoTipoTransaccionVsCodigoDeOperacion	##z °
.
##° ¢
Single
##¢ ®
(
##® ©
ttcp
##© ≠
=>
##Æ ∞
ttcp
##± µ
.
##µ ∂
Key
##∂ π
==
##∫ º!
TransaccionSettings
##Ω –
.
##– —
Default
##— ÿ
.
##ÿ Ÿ3
%IdTipoTransaccionSalidaBienesPorVenta
##Ÿ ˛
)
##˛ ˇ
.
##ˇ Ä
Value
##Ä Ö
,
##Ö Ü!
TransaccionSettings
##á ö
.
##ö õ
Default
##õ ¢
.
##¢ £3
%IdTipoTransaccionSalidaBienesPorVenta
##£ »
)
##» …
;
##…  
int$$ 
codigoMaximoCobro$$ %
=$$& '#
codigosOperacion_Logica$$( ?
.$$? @.
"ObtenerMaximoCodigoParaTransaccion$$@ b
($$b c
$str$$c g
+$$h i
ventaMasiva$$j u
.$$u v
FechaEmision	$$v Ç
.
$$Ç É
ToString
$$É ã
(
$$ã å
$str
$$å í
)
$$í ì
,
$$ì î!
TransaccionSettings
$$ï ®
.
$$® ©
Default
$$© ∞
.
$$∞ ±7
)IdTipoTransaccionCobranzaFacturasClientes
$$± ⁄
)
$$⁄ €
;
$$€ ‹
Codigo%% 
codigosMaximos%% %
;%%% &
foreach&& 
(&& 
var&& 
ventaValida&& (
in&&) +
ventasValidas&&, 9
)&&9 :
{'' 
ventaValida)) 
.))  
	IdCliente))  )
=))* +
ActorSettings)), 9
.))9 :
Default)): A
.))A B
IdClienteGenerico))B S
;))S T
ventaMasiva++ 
.++  
IdTipoDeComprobante++  3
=++4 5$
ObtenerIdTipoComprobante++6 N
(++N O
ventaMasiva++O Z
.++Z [ 
IdSerieDeComprobante++[ o
)++o p
;++p q
codigosMaximos-- "
=--# $
new--% (
Codigo--) /
(--/ 0
ventaMasiva--0 ;
.--; <
FechaEmision--< H
,--H I
codigoMaximoVenta--J [
,--[ \"
codigoMaximoOrdenVenta--] s
,--s t
codigoMaximoCuota	--u Ü
,
--Ü á
codigoMaximoCobro
--à ô
,
--ô ö*
codigoMaximoSalidaMercaderia
--õ ∑
)
--∑ ∏
;
--∏ π
RegistroDeVenta// #
registroDeVenta//$ 3
=//4 5
RegistroDeVenta//6 E
.//E F
ConvertVentaMasiva//F X
(//X Y
ventaMasiva//Y d
,//d e
ventaValida//f q
)//q r
;//r s
DatosVentaIntegrada00 '
datosVentaIntegrada00( ;
=00< =
new00> A
DatosVentaIntegrada00B U
(00U V
registroDeVenta00V e
)00e f
;00f g
OperacionIntegrada22 &
ventaIntegrada22' 5
=226 7!
GenerarVentaIntegrada228 M
(22M N
ModoOperacionEnum22N _
.22_ `(
VentaIntegradaMasivaDigitada22` |
,22| }
sesionDeUsuario	22~ ç
,
22ç é!
datosVentaIntegrada
22è ¢
,
22¢ £
true
22§ ®
)
22® ©
;
22© ™:
.ModificarCodigoDeTransaccionesParaVentaMasivas44 B
(44B C
ventaIntegrada44C Q
,44Q R
codigosMaximos44S a
)44a b
;44b c$
ventasIntegradasAGuardar66 ,
.66, -
Add66- 0
(660 1
ventaIntegrada661 ?
)66? @
;66@ A
codigoMaximoVenta77 %
++77% '
;77' ("
codigoMaximoOrdenVenta77) ?
++77? A
;77A B
codigoMaximoCuota77C T
++77T V
;77V W
codigoMaximoCobro77X i
++77i k
;77k l)
codigoMaximoSalidaMercaderia	77m â
++
77â ã
;
77ã å
}88  
ResolverComprobantes99 $
(99$ %$
ventasIntegradasAGuardar99% =
)99= >
;99> ?
return:: 6
*AfectarInventarioFisicoYGuardarOperaciones:: A
(::A B$
ventasIntegradasAGuardar::B Z
,::Z [
sesionDeUsuario::\ k
)::k l
;::l m
};; 
catch<< 
(<< 
	Exception<< 
e<< 
)<< 
{== 
throw>> 
new>> 
LogicaException>> )
(>>) *
$str>>* T
,>>T U
e>>V W
)>>W X
;>>X Y
}?? 
}@@ 	
publicBB 
intBB $
ObtenerIdTipoComprobanteBB +
(BB+ ,
intBB, /
idSerieComprobanteBB0 B
)BBB C
{CC 	
varDD 
serieDD 
=DD "
transaccionRepositorioDD .
.DD. /%
ObtenerSerieDeComprobanteDD/ H
(DDH I
idSerieComprobanteDDI [
)DD[ \
;DD\ ]
returnEE 
serieEE 
.EE 
id_tipo_comprobanteEE ,
;EE, -
}FF 	
publicHH 
voidHH :
.ModificarCodigoDeTransaccionesParaVentaMasivasHH B
(HHB C
OperacionIntegradaHHC U
ventaIntegradaHHV d
,HHd e
CodigoHHf l
codigosMaximosHHm {
)HH{ |
{II 	
tryJJ 
{KK 
ventaIntegradaMM 
.MM 
	OperacionMM (
.MM( )
codigoMM) /
=MM0 1
codigosMaximosMM2 @
.MM@ A 
SiguienteCodigoVentaMMA U
;MMU V
ventaIntegradaOO 
.OO 
OrdenDeOperacionOO /
.OO/ 0
codigoOO0 6
=OO7 8
codigosMaximosOO9 G
.OOG H%
SiguienteCodigoOrdenVentaOOH a
;OOa b
ventaIntegradaQQ 
.QQ 
OrdenDeOperacionQQ /
.QQ/ 0
CuotaQQ0 5
.QQ5 6
FirstQQ6 ;
(QQ; <
)QQ< =
.QQ= >
codigoQQ> D
=QQE F
codigosMaximosQQG U
.QQU V&
SiguienteCodigoCodigoCuotaQQV p
;QQp q
ifSS 
(SS 
ventaIntegradaSS "
.SS" #
MovimientoEconomicoSS# 6
!=SS7 9
nullSS: >
)SS> ?
{TT 
ventaIntegradaVV "
.VV" #
MovimientoEconomicoVV# 6
.VV6 7
codigoVV7 =
=VV> ?
codigosMaximosVV@ N
.VVN O
SiguienteCodigoPagoVVO b
;VVb c
}WW 
ifYY 
(YY 
ventaIntegradaYY "
.YY" #
MovimientosBienesYY# 4
!=YY5 7
nullYY8 <
&&YY= ?
ventaIntegradaYY@ N
.YYN O
MovimientosBienesYYO `
.YY` a
CountYYa f
(YYf g
)YYg h
>YYi j
$numYYk l
)YYl m
{ZZ 
ventaIntegrada\\ "
.\\" #
MovimientosBienes\\# 4
.\\4 5
First\\5 :
(\\: ;
)\\; <
.\\< =
codigo\\= C
=\\D E
codigosMaximos\\F T
.\\T U+
SiguienteCodigoSalidaMercaderia\\U t
;\\t u
}]] 
}^^ 
catch__ 
(__ 
	Exception__ 
e__ 
)__ 
{`` 
throwaa 
newaa 
LogicaExceptionaa )
(aa) *
$straa* Y
,aaY Z
eaa[ \
)aa\ ]
;aa] ^
}bb 
}cc 	
privategg 
Transacciongg &
GenerarVentaYCobroEnBloquegg 6
(gg6 7
intgg7 :

idEmpleadogg; E
,ggE F
intggG J
idCentroDeAtencionggK ]
,gg] ^
DateTimegg_ g
fechaRegistroggh u
,ggu v
decimalggw ~
tipoDeCambio	gg ã
,
ggã å
string
ggç ì
sufijoCodigo
ggî †
,
gg† °
int
gg¢ •
idTipoTransaccion
gg¶ ∑
,
gg∑ ∏
int
ggπ º
accionARealizar
ggΩ Ã
,
ggÃ Õ
int
ggŒ —&
idTipoTransaccionValidar
gg“ Í
,
ggÍ Î
string
ggÏ Ú
observacion
ggÛ ˛
)
gg˛ ˇ
{hh 	
tryii 
{jj 
intkk 
idMonedakk 
=kk 
MaestroSettingskk .
.kk. /
Defaultkk/ 6
.kk6 7'
IdDetalleMaestroMonedaSoleskk7 R
;kkR S
intll 
idUnidadNegocioll #
=ll$ %
MaestroSettingsll& 5
.ll5 6
Defaultll6 =
.ll= >6
*IdDetalleMaestroUnidadDeNegocioTransversalll> h
;llh i
permisos_Logicann 
.nn  
ValidarAccionnn  -
(nn- .

idEmpleadonn. 8
,nn8 9
accionARealizarnn: I
,nnI J$
idTipoTransaccionValidarnnK c
,nnc d
idUnidadNegocionne t
)nnt u
;nnu v
stringpp 
codigopp 
=pp #
codigosOperacion_Logicapp  7
.pp7 81
%ObtenerSiguienteCodigoParaFacturacionpp8 ]
(pp] ^
sufijoCodigopp^ j
,ppj k
idTipoTransaccionppl }
)pp} ~
;pp~ 
	Operacionrr 
operacionGenericarr +
=rr, -
newrr. 1
	Operacionrr2 ;
(rr; <"
transaccionRepositoriorr< R
.rrR S$
ObtenerUltimaTransaccionrrS k
(rrk l
TransaccionSettingsrrl 
.	rr Ä
Default
rrÄ á
.
rrá à(
IdTipoTransaccionOperacion
rrà ¢
)
rr¢ £
)
rr£ §
;
rr§ •
Transacciontt 
ventaYCobroEnbloquett /
=tt0 1
newtt2 5
Transacciontt6 A
(ttA B
codigottB H
,ttH I
operacionGenericattJ [
.tt[ \
Idtt\ ^
,tt^ _
fechaRegistrott` m
,ttm n
idTipoTransaccion	tto Ä
,
ttÄ Å
idUnidadNegocio
ttÇ ë
,
ttë í
true
ttì ó
,
ttó ò
fechaRegistro
ttô ¶
,
tt¶ ß
fechaRegistro
tt® µ
,
ttµ ∂
observacion
tt∑ ¬
,
tt¬ √
fechaRegistro
ttƒ —
,
tt— “

idEmpleado
tt” ›
,
tt› ﬁ
$num
ttﬂ ‡
,
tt‡ · 
idCentroDeAtencion
tt‚ Ù
,
ttÙ ı
idMoneda
ttˆ ˛
,
tt˛ ˇ
tipoDeCambio
ttÄ å
,
ttå ç
null
tté í
,
ttí ì 
idCentroDeAtencion
ttî ¶
)
tt¶ ß
{uu 
id_comprobantevv "
=vv# $
operacionGenericavv% 6
.vv6 7
IdComprobantevv7 D
}ww 
;ww 
returnxx 
ventaYCobroEnbloquexx *
;xx* +
}yy 
catchzz 
(zz 
	Exceptionzz 
ezz 
)zz 
{{{ 
throw|| 
new|| 
LogicaException|| )
(||) *
$str||* U
,||U V
e||W X
)||X Y
;||Y Z
}}} 
}~~ 	
public
ÅÅ 
OperationResult
ÅÅ >
0ConfirmarVentasAlCreditoYCobranzasCarteraCliente
ÅÅ O
(
ÅÅO P$
UserProfileSessionData
ÅÅP f
sesionDeUsuario
ÅÅg v
,
ÅÅv w.
VentaYCobranzaCarteraDeClientesÅÅx ó%
ventasCobranzasMasivaÅÅò ≠
)ÅÅ≠ Æ
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
Transaccion
ÜÜ  
ventaCobroEnBloque
ÜÜ .
=
ÜÜ/ 0(
GenerarVentaYCobroEnBloque
ÜÜ1 K
(
ÜÜK L
sesionDeUsuario
ÜÜL [
.
ÜÜ[ \
Empleado
ÜÜ\ d
.
ÜÜd e
Id
ÜÜe g
,
ÜÜg h#
ventasCobranzasMasiva
ÜÜi ~
.
ÜÜ~ 
IdCentroAtencionÜÜ è
,ÜÜè ê%
ventasCobranzasMasivaÜÜë ¶
.ÜÜ¶ ß
FechaEmisionÜÜß ≥
,ÜÜ≥ ¥
sesionDeUsuarioÜÜµ ƒ
.ÜÜƒ ≈
TipoDeCambioÜÜ≈ —
.ÜÜ— “

ValorVentaÜÜ“ ‹
,ÜÜ‹ ›
DiccionarioÜÜﬁ È
.ÜÜÈ Í7
'MapeoTipoTransaccionVsCodigoDeOperacionÜÜÍ ë
.ÜÜë í
SingleÜÜí ò
(ÜÜò ô
ttcpÜÜô ù
=>ÜÜû †
ttcpÜÜ° •
.ÜÜ• ¶
KeyÜÜ¶ ©
==ÜÜ™ ¨#
TransaccionSettingsÜÜ≠ ¿
.ÜÜ¿ ¡
DefaultÜÜ¡ »
.ÜÜ» …4
$IdTipoTransaccionVentaYCobroEnBloqueÜÜ… Ì
)ÜÜÌ Ó
.ÜÜÓ Ô
ValueÜÜÔ Ù
,ÜÜÙ ı#
TransaccionSettingsÜÜˆ â
.ÜÜâ ä
DefaultÜÜä ë
.ÜÜë í4
$IdTipoTransaccionVentaYCobroEnBloqueÜÜí ∂
,ÜÜ∂ ∑
MaestroSettingsÜÜ∏ «
.ÜÜ« »
DefaultÜÜ» œ
.ÜÜœ –/
IdDetalleMaestroAccionConfirmarÜÜ– Ô
,ÜÜÔ #
TransaccionSettingsÜÜÒ Ñ
.ÜÜÑ Ö
DefaultÜÜÖ å
.ÜÜå ç4
$IdTipoTransaccionVentaYCobroEnBloqueÜÜç ±
,ÜÜ± ≤
$strÜÜ≥ ˇ
)ÜÜˇ Ä
;ÜÜÄ Å
List
àà 
<
àà  
OperacionIntegrada
àà '
>
àà' (
ventasIntegradas
àà) 9
=
àà: ;3
%ResolverVentasDeVentasCobranzasMasiva
àà< a
(
ààa b#
ventasCobranzasMasiva
ààb w
,
ààw x!
ventaCobroEnBloqueàày ã
,ààã å
sesionDeUsuarioààç ú
)ààú ù
;ààù û
List
ää 
<
ää 
Transaccion
ää  
>
ää  !'
transaccionesVentasCobros
ää" ;
=
ää< =
ventasIntegradas
ää> N
.
ääN O
Select
ääO U
(
ääU V
v
ääV W
=>
ääX Z
v
ää[ \
.
ää\ ]
	Operacion
ää] f
)
ääf g
.
ääg h
ToList
ääh n
(
ään o
)
ääo p
;
ääp q
List
åå 
<
åå 
Transaccion
åå  
>
åå  !!
transaccionesCobros
åå" 5
=
åå6 73
%ResolverCobrosDeVentasCobranzasMasiva
åå8 ]
(
åå] ^#
ventasCobranzasMasiva
åå^ s
,
åås t!
ventaCobroEnBloqueååu á
,ååá à 
ventasIntegradasååâ ô
.ååô ö
Selectååö †
(åå† °
våå° ¢
=>åå£ •
våå¶ ß
.ååß ®
	Operacionåå® ±
)åå± ≤
.åå≤ ≥
ToListåå≥ π
(ååπ ∫
)åå∫ ª
)ååª º
;ååº Ω'
transaccionesVentasCobros
éé )
.
éé) *
AddRange
éé* 2
(
éé2 3!
transaccionesCobros
éé3 F
)
ééF G
;
ééG H 
ventaCobroEnBloque
êê "
.
êê" #
Transaccion1
êê# /
=
êê0 1'
transaccionesVentasCobros
êê2 K
;
êêK L
var
ëë 
movimientoBienes
ëë $
=
ëë% &
ventasIntegradas
ëë' 7
.
ëë7 8

SelectMany
ëë8 B
(
ëëB C
t
ëëC D
=>
ëëE G
t
ëëH I
.
ëëI J
MovimientosBienes
ëëJ [
)
ëë[ \
.
ëë\ ]
ToList
ëë] c
(
ëëc d
)
ëëd e
;
ëëe f
var
ìì 
result
ìì 
=
ìì 6
(AfectarInventarioFisicoYGuardarOperacion
ìì E
(
ììE F
new
ììF I/
!OperacionVentaCobroCarteraCliente
ììJ k
{
ììl m
OperacionWrapper
ììn ~
=ìì Ä"
ventaCobroEnBloqueììÅ ì
,ììì î
Ventasììï õ
=ììú ù 
ventasIntegradasììû Æ
,ììÆ Ø
Cobrosìì∞ ∂
=ìì∑ ∏#
transaccionesCobrosììπ Ã
}ììÕ Œ
,ììŒ œ
sesionDeUsuarioìì– ﬂ
)ììﬂ ‡
;ìì‡ ·
return
ïï 
result
ïï 
;
ïï 
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
e
óó 
)
óó 
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* _
,
ôô_ `
e
ôôa b
)
ôôb c
;
ôôc d
}
öö 
}
õõ 	
public
ùù 
List
ùù 
<
ùù  
OperacionIntegrada
ùù &
>
ùù& '3
%ResolverVentasDeVentasCobranzasMasiva
ùù( M
(
ùùM N-
VentaYCobranzaCarteraDeClientes
ùùN m$
ventasCobranzasMasivaùùn É
,ùùÉ Ñ
TransaccionùùÖ ê#
ventaYCobroEnBloqueùùë §
,ùù§ •&
UserProfileSessionDataùù¶ º
sesionDeUsuarioùùΩ Ã
)ùùÃ Õ
{
ûû 	
try
üü 
{
†† 
List
°° 
<
°° %
OperacionIntegradaSerie
°° ,
>
°°, -#
ventasIntegradasSerie
°°. C
=
°°D E
new
°°F I
List
°°J N
<
°°N O%
OperacionIntegradaSerie
°°O f
>
°°f g
(
°°g h
)
°°h i
;
°°i j
var
££ 
ventaMasiva
££ 
=
££  !#
ventasCobranzasMasiva
££" 7
.
££7 8
Venta
££8 =
;
££= >
var
•• 
ventasValidas
•• !
=
••" #
ventaMasiva
••$ /
.
••/ 0
Detalles
••0 8
.
••8 9
Where
••9 >
(
••> ?
d
••? @
=>
••A C
d
••D E
.
••E F
Cantidad
••F N
>
••O P
$num
••Q R
)
••R S
.
••S T
ToList
••T Z
(
••Z [
)
••[ \
;
••\ ]
int
ßß 
codigoMaximoVenta
ßß %
=
ßß& '%
codigosOperacion_Logica
ßß( ?
.
ßß? @0
"ObtenerMaximoCodigoParaTransaccion
ßß@ b
(
ßßb c
Diccionario
ßßc n
.
ßßn o6
'MapeoTipoTransaccionVsCodigoDeOperacionßßo ñ
.ßßñ ó
Singleßßó ù
(ßßù û
ttcpßßû ¢
=>ßß£ •
ttcpßß¶ ™
.ßß™ ´
Keyßß´ Æ
==ßßØ ±#
TransaccionSettingsßß≤ ≈
.ßß≈ ∆
Defaultßß∆ Õ
.ßßÕ Œ&
IdTipoTransaccionVentaßßŒ ‰
)ßß‰ Â
.ßßÂ Ê
ValueßßÊ Î
,ßßÎ Ï#
TransaccionSettingsßßÌ Ä
.ßßÄ Å
DefaultßßÅ à
.ßßà â&
IdTipoTransaccionVentaßßâ ü
)ßßü †
;ßß† °
int
®® $
codigoMaximoOrdenVenta
®® *
=
®®+ ,%
codigosOperacion_Logica
®®- D
.
®®D E0
"ObtenerMaximoCodigoParaTransaccion
®®E g
(
®®g h
Diccionario
®®h s
.
®®s t6
'MapeoTipoTransaccionVsCodigoDeOperacion®®t õ
.®®õ ú
Single®®ú ¢
(®®¢ £
ttcp®®£ ß
=>®®® ™
ttcp®®´ Ø
.®®Ø ∞
Key®®∞ ≥
==®®¥ ∂#
TransaccionSettings®®∑  
.®®  À
Default®®À “
.®®“ ”-
IdTipoTransaccionOrdenDeVenta®®” 
)®® Ò
.®®Ò Ú
Value®®Ú ˜
,®®˜ ¯#
TransaccionSettings®®˘ å
.®®å ç
Default®®ç î
.®®î ï-
IdTipoTransaccionOrdenDeVenta®®ï ≤
)®®≤ ≥
;®®≥ ¥
int
©© 
codigoMaximoCuota
©© %
=
©©& '$
transaccionRepositorio
©©( >
.
©©> ?&
ObtenerMaximoCodigoCuota
©©? W
(
©©W X
$str
©©X [
+
©©\ ]#
ventasCobranzasMasiva
©©^ s
.
©©s t
Cobranza
©©t |
.
©©| }
FechaEmision©©} â
.©©â ä
Year©©ä é
)©©é è
;©©è ê
int
™™ *
codigoMaximoSalidaMercaderia
™™ 0
=
™™1 2%
codigosOperacion_Logica
™™3 J
.
™™J K0
"ObtenerMaximoCodigoParaTransaccion
™™K m
(
™™m n
Diccionario
™™n y
.
™™y z6
'MapeoTipoTransaccionVsCodigoDeOperacion™™z °
.™™° ¢
Single™™¢ ®
(™™® ©
ttcp™™© ≠
=>™™Æ ∞
ttcp™™± µ
.™™µ ∂
Key™™∂ π
==™™∫ º#
TransaccionSettings™™Ω –
.™™– —
Default™™— ÿ
.™™ÿ Ÿ5
%IdTipoTransaccionSalidaBienesPorVenta™™Ÿ ˛
)™™˛ ˇ
.™™ˇ Ä
Value™™Ä Ö
,™™Ö Ü#
TransaccionSettings™™á ö
.™™ö õ
Default™™õ ¢
.™™¢ £5
%IdTipoTransaccionSalidaBienesPorVenta™™£ »
)™™» …
;™™…  
var
¨¨ .
 ventasValidasAgrupadasPorCliente
¨¨ 4
=
¨¨5 6
ventasValidas
¨¨7 D
.
¨¨D E
GroupBy
¨¨E L
(
¨¨L M
vv
¨¨M O
=>
¨¨P R
vv
¨¨S U
.
¨¨U V
	IdCliente
¨¨V _
)
¨¨_ `
;
¨¨` a
Codigo
≠≠ 
codigosMaximos
≠≠ %
;
≠≠% &
foreach
ÆÆ 
(
ÆÆ 
var
ÆÆ 
ventasPorCliente
ÆÆ -
in
ÆÆ. 0.
 ventasValidasAgrupadasPorCliente
ÆÆ1 Q
)
ÆÆQ R
{
ØØ 
Serie_comprobante
±± %%
serieComprobanteDeVenta
±±& =
=
±±> ?
ventasPorCliente
±±@ P
.
±±P Q
FirstOrDefault
±±Q _
(
±±_ `
)
±±` a
.
±±a b)
IdComprobantePredeterminado
±±b }
!=±±~ Ä
$num±±Å Ç
?±±É Ñ&
transaccionRepositorio±±Ö õ
.±±õ ú=
-ObtenerPrimeraSerieDeComprobanteAutonumerable±±ú …
(±±…   
ventasPorCliente±±  ⁄
.±±⁄ €
FirstOrDefault±±€ È
(±±È Í
)±±Í Î
.±±Î Ï+
IdComprobantePredeterminado±±Ï á
,±±á à
ventaMasiva±±â î
.±±î ï
IdPuntoDeVenta±±ï £
)±±£ §
:±±• ¶&
transaccionRepositorio±±ß Ω
.±±Ω æ=
-ObtenerPrimeraSerieDeComprobanteAutonumerable±±æ Î
(±±Î Ï
VentasSettings±±Ï ˙
.±±˙ ˚
Default±±˚ Ç
.±±Ç ÉE
5IdTipoComprobantePorDefectoEnVentasYCobrosPorVendedor±±É ∏
,±±∏ π
ventaMasiva±±∫ ≈
.±±≈ ∆
IdPuntoDeVenta±±∆ ‘
)±±‘ ’
;±±’ ÷
if
≥≥ 
(
≥≥ %
serieComprobanteDeVenta
≥≥ /
==
≥≥0 2
null
≥≥3 7
)
≥≥7 8
{
¥¥ 
throw
µµ 
new
µµ !
LogicaException
µµ" 1
(
µµ1 2
$strµµ2 £
)µµ£ §
;µµ§ •
}
∂∂ 
ventaMasiva
∑∑ 
.
∑∑  "
IdSerieDeComprobante
∑∑  4
=
∑∑5 6%
serieComprobanteDeVenta
∑∑7 N
.
∑∑N O
id
∑∑O Q
;
∑∑Q R
ventaMasiva
∏∏ 
.
∏∏  !
IdTipoDeComprobante
∏∏  3
=
∏∏4 5%
serieComprobanteDeVenta
∏∏6 M
.
∏∏M N!
id_tipo_comprobante
∏∏N a
;
∏∏a b
codigosMaximos
∫∫ "
=
∫∫# $
new
∫∫% (
Codigo
∫∫) /
(
∫∫/ 0
ventaMasiva
∫∫0 ;
.
∫∫; <
FechaEmision
∫∫< H
,
∫∫H I
codigoMaximoVenta
∫∫J [
,
∫∫[ \
codigoMaximoCuota
∫∫] n
)
∫∫n o
;
∫∫o p
RegistroDeVenta
ºº #
registroDeVenta
ºº$ 3
=
ºº4 5
RegistroDeVenta
ºº6 E
.
ººE F*
ConvertVentaCobroPorVendedor
ººF b
(
ººb c
ventaMasiva
ººc n
,
ººn o
ventasPorClienteººp Ä
.ººÄ Å
ToListººÅ á
(ººá à
)ººà â
)ººâ ä
;ººä ã!
DatosVentaIntegrada
ΩΩ '!
datosVentaIntegrada
ΩΩ( ;
=
ΩΩ< =
new
ΩΩ> A!
DatosVentaIntegrada
ΩΩB U
(
ΩΩU V
registroDeVenta
ΩΩV e
)
ΩΩe f
;
ΩΩf g 
OperacionIntegrada
øø &
ventaIntegrada
øø' 5
=
øø6 7#
GenerarVentaIntegrada
øø8 M
(
øøM N
ModoOperacionEnum
øøN _
.
øø_ `3
$VentaCobranzaCarteraClientesDigitadaøø` Ñ
,øøÑ Ö
sesionDeUsuarioøøÜ ï
,øøï ñ#
datosVentaIntegradaøøó ™
,øø™ ´
falseøø¨ ±
)øø± ≤
;øø≤ ≥<
.ModificarCodigoDeTransaccionesParaVentaMasivas
¬¬ B
(
¬¬B C
ventaIntegrada
¬¬C Q
,
¬¬Q R
codigosMaximos
¬¬S a
)
¬¬a b
;
¬¬b c%
OperacionIntegradaSerie
√√ +!
ventaIntegradaSerie
√√, ?
=
√√@ A
new
√√B E%
OperacionIntegradaSerie
√√F ]
(
√√] ^
ventaIntegrada
√√^ l
,
√√l m
ventaMasiva
√√n y
.
√√y z#
IdSerieDeComprobante√√z é
)√√é è
;√√è ê#
ventasIntegradasSerie
ƒƒ )
.
ƒƒ) *
Add
ƒƒ* -
(
ƒƒ- .!
ventaIntegradaSerie
ƒƒ. A
)
ƒƒA B
;
ƒƒB C
codigoMaximoVenta
≈≈ %
++
≈≈% '
;
≈≈' ($
codigoMaximoOrdenVenta
∆∆ *
++
∆∆* ,
;
∆∆, -
codigoMaximoCuota
«« %
++
««% '
;
««' (*
codigoMaximoSalidaMercaderia
»» 0
++
»»0 2
;
»»2 3
}
…… "
ResolverComprobantes
   $
(
  $ %#
ventasIntegradasSerie
  % :
)
  : ;
;
  ; <
return
ÀÀ #
ventasIntegradasSerie
ÀÀ ,
.
ÀÀ, -
Select
ÀÀ- 3
(
ÀÀ3 4
vis
ÀÀ4 7
=>
ÀÀ8 :
vis
ÀÀ; >
.
ÀÀ> ? 
OperacionIntegrada
ÀÀ? Q
)
ÀÀQ R
.
ÀÀR S
ToList
ÀÀS Y
(
ÀÀY Z
)
ÀÀZ [
;
ÀÀ[ \
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
e
ÕÕ 
)
ÕÕ 
{
ŒŒ 
throw
œœ 
new
œœ 
LogicaException
œœ )
(
œœ) *
$str
œœ* l
,
œœl m
e
œœn o
)
œœo p
;
œœp q
}
–– 
}
—— 	
public
”” 
List
”” 
<
”” 
Transaccion
”” 
>
””  3
%ResolverCobrosDeVentasCobranzasMasiva
””! F
(
””F G-
VentaYCobranzaCarteraDeClientes
””G f#
ventasCobranzasMasiva
””g |
,
””| }
Transaccion””~ â#
ventaYCobroEnBloque””ä ù
,””ù û
List””ü £
<””£ §
Transaccion””§ Ø
>””Ø ∞
ventasAGuardar””± ø
)””ø ¿
{
‘‘ 	
try
’’ 
{
÷÷ 
DateTime
◊◊ 
fechaActual
◊◊ $
=
◊◊% &
DateTimeUtil
◊◊' 3
.
◊◊3 4
FechaActual
◊◊4 ?
(
◊◊? @
)
◊◊@ A
;
◊◊A B
List
ÿÿ 
<
ÿÿ 
Transaccion
ÿÿ  
>
ÿÿ  !
cobrosAGuardar
ÿÿ" 0
=
ÿÿ1 2
new
ÿÿ3 6
List
ÿÿ7 ;
<
ÿÿ; <
Transaccion
ÿÿ< G
>
ÿÿG H
(
ÿÿH I
)
ÿÿI J
;
ÿÿJ K
var
⁄⁄ 
cobranzaMasiva
⁄⁄ "
=
⁄⁄# $#
ventasCobranzasMasiva
⁄⁄% :
.
⁄⁄: ;
Cobranza
⁄⁄; C
;
⁄⁄C D
var
‹‹ 
cobrosValidos
‹‹ !
=
‹‹" #
cobranzaMasiva
‹‹$ 2
.
‹‹2 3
Detalles
‹‹3 ;
.
‹‹; <
Where
‹‹< A
(
‹‹A B
d
‹‹B C
=>
‹‹D F
d
‹‹G H
.
‹‹H I
Importe
‹‹I P
>
‹‹Q R
$num
‹‹S T
)
‹‹T U
;
‹‹U V
Serie_comprobante
ﬁﬁ !(
serieComprobanteDeCobranza
ﬁﬁ" <
=
ﬁﬁ= >$
transaccionRepositorio
ﬁﬁ? U
.
ﬁﬁU V<
-ObtenerPrimeraSerieDeComprobanteAutonumerableﬁﬁV É
(ﬁﬁÉ Ñ
MaestroSettingsﬁﬁÑ ì
.ﬁﬁì î
Defaultﬁﬁî õ
.ﬁﬁõ ú6
&IdDetalleMaestroComprobanteNotaIngresoﬁﬁú ¬
,ﬁﬁ¬ √%
ventasCobranzasMasivaﬁﬁƒ Ÿ
.ﬁﬁŸ ⁄
Cobranzaﬁﬁ⁄ ‚
.ﬁﬁ‚ „
IdCajaﬁﬁ„ È
)ﬁﬁÈ Í
;ﬁﬁÍ Î
if
‡‡ 
(
‡‡ (
serieComprobanteDeCobranza
‡‡ .
==
‡‡/ 1
null
‡‡2 6
)
‡‡6 7
{
·· 
throw
‚‚ 
new
‚‚ 
LogicaException
‚‚ -
(
‚‚- .
$str‚‚. Ø
)‚‚Ø ∞
;‚‚∞ ±
}
„„ 
var
ÂÂ 6
(todasLasCuotasDeClientesConCobrosValidos
ÂÂ <
=
ÂÂ= >$
transaccionRepositorio
ÂÂ? U
.
ÂÂU V#
ObtenerCuotasConSaldo
ÂÂV k
(
ÂÂk l
true
ÂÂl p
,
ÂÂp q
MaestroSettingsÂÂr Å
.ÂÂÅ Ç
DefaultÂÂÇ â
.ÂÂâ ä0
 IdDetalleMaestroEstadoConfirmadoÂÂä ™
,ÂÂ™ ´
cobrosValidosÂÂ¨ π
.ÂÂπ ∫
SelectÂÂ∫ ¿
(ÂÂ¿ ¡
cvÂÂ¡ √
=>ÂÂƒ ∆
cvÂÂ« …
.ÂÂ…  
	IdClienteÂÂ  ”
)ÂÂ” ‘
.ÂÂ‘ ’
ToArrayÂÂ’ ‹
(ÂÂ‹ ›
)ÂÂ› ﬁ
,ÂÂﬁ ﬂ#
TransaccionSettingsÂÂ‡ Û
.ÂÂÛ Ù
DefaultÂÂÙ ˚
.ÂÂ˚ ¸-
IdTipoTransaccionOrdenDeVentaÂÂ¸ ô
)ÂÂô ö
.ÂÂö õ
ToListÂÂõ °
(ÂÂ° ¢
)ÂÂ¢ £
;ÂÂ£ §
int
ÁÁ 
maximoCodigoPago
ÁÁ $
=
ÁÁ% &%
codigosOperacion_Logica
ÁÁ' >
.
ÁÁ> ?0
"ObtenerMaximoCodigoParaTransaccion
ÁÁ? a
(
ÁÁa b
$str
ÁÁb f
+
ÁÁg h#
ventasCobranzasMasiva
ÁÁi ~
.
ÁÁ~ 
CobranzaÁÁ á
.ÁÁá à
FechaEmisionÁÁà î
.ÁÁî ï
ToStringÁÁï ù
(ÁÁù û
$strÁÁû §
)ÁÁ§ •
,ÁÁ• ¶
DiccionarioÁÁß ≤
.ÁÁ≤ ≥/
MapeoOrdenVsMovimientoEconomicoÁÁ≥ “
.ÁÁ“ ”
SingleÁÁ” Ÿ
(ÁÁŸ ⁄
mÁÁ⁄ €
=>ÁÁ‹ ﬁ
mÁÁﬂ ‡
.ÁÁ‡ ·
KeyÁÁ· ‰
==ÁÁÂ Á#
TransaccionSettingsÁÁË ˚
.ÁÁ˚ ¸
DefaultÁÁ¸ É
.ÁÁÉ Ñ-
IdTipoTransaccionOrdenDeVentaÁÁÑ °
)ÁÁ° ¢
.ÁÁ¢ £
ValueÁÁ£ ®
)ÁÁ® ©
;ÁÁ© ™
Codigo
ËË 
maximosCodigos
ËË %
;
ËË% &
foreach
ÈÈ 
(
ÈÈ 
var
ÈÈ 
cobro
ÈÈ "
in
ÈÈ# %
cobrosValidos
ÈÈ& 3
)
ÈÈ3 4
{
ÍÍ 
Comprobante
ÏÏ 
comprobantePago
ÏÏ  /
=
ÏÏ0 13
%GenerarComprobantePropioAutonumerable
ÏÏ2 W
(
ÏÏW X(
serieComprobanteDeCobranza
ÏÏX r
)
ÏÏr s
;
ÏÏs t
var
ÌÌ 
deudas
ÌÌ 
=
ÌÌ  6
(todasLasCuotasDeClientesConCobrosValidos
ÌÌ! I
.
ÌÌI J
Where
ÌÌJ O
(
ÌÌO P
c
ÌÌP Q
=>
ÌÌR T
c
ÌÌU V
.
ÌÌV W
Transaccion
ÌÌW b
.
ÌÌb c&
id_actor_negocio_externo
ÌÌc {
==
ÌÌ| ~
cobroÌÌ Ñ
.ÌÌÑ Ö
	IdClienteÌÌÖ é
)ÌÌé è
.ÌÌè ê
ToListÌÌê ñ
(ÌÌñ ó
)ÌÌó ò
;ÌÌò ô
if
ÔÔ 
(
ÔÔ 
ventasAGuardar
ÔÔ &
.
ÔÔ& '
Any
ÔÔ' *
(
ÔÔ* +
v
ÔÔ+ ,
=>
ÔÔ- /
v
ÔÔ0 1
.
ÔÔ1 2&
id_actor_negocio_externo
ÔÔ2 J
==
ÔÔK M
cobro
ÔÔN S
.
ÔÔS T
	IdCliente
ÔÔT ]
)
ÔÔ] ^
)
ÔÔ^ _
{
 
List
ÚÚ 
<
ÚÚ 
Transaccion
ÚÚ (
>
ÚÚ( )!
transaccionesVentas
ÚÚ* =
=
ÚÚ> ?
ventasAGuardar
ÚÚ@ N
.
ÚÚN O
Select
ÚÚO U
(
ÚÚU V
v
ÚÚV W
=>
ÚÚX Z
v
ÚÚ[ \
)
ÚÚ\ ]
.
ÚÚ] ^
Where
ÚÚ^ c
(
ÚÚc d
v
ÚÚd e
=>
ÚÚf h
v
ÚÚi j
.
ÚÚj k'
id_actor_negocio_externoÚÚk É
==ÚÚÑ Ü
cobroÚÚá å
.ÚÚå ç
	IdClienteÚÚç ñ
)ÚÚñ ó
.ÚÚó ò
ToListÚÚò û
(ÚÚû ü
)ÚÚü †
;ÚÚ† °
foreach
ÛÛ 
(
ÛÛ  !
var
ÛÛ! $
transaccionVenta
ÛÛ% 5
in
ÛÛ6 8!
transaccionesVentas
ÛÛ9 L
)
ÛÛL M
{
ÙÙ 
Venta
ıı !
venta
ıı" '
=
ıı( )
new
ıı* -
Venta
ıı. 3
(
ıı3 4
transaccionVenta
ıı4 D
)
ııD E
;
ııE F
deudas
ˆˆ "
.
ˆˆ" #
OrderBy
ˆˆ# *
(
ˆˆ* +
c
ˆˆ+ ,
=>
ˆˆ- /
c
ˆˆ0 1
.
ˆˆ1 2
fecha_emision
ˆˆ2 ?
)
ˆˆ? @
.
ˆˆ@ A
ThenBy
ˆˆA G
(
ˆˆG H
c
ˆˆH I
=>
ˆˆJ L
c
ˆˆM N
.
ˆˆN O
id
ˆˆO Q
)
ˆˆQ R
.
ˆˆR S
ToList
ˆˆS Y
(
ˆˆY Z
)
ˆˆZ [
;
ˆˆ[ \
deudas
˜˜ "
.
˜˜" #
AddRange
˜˜# +
(
˜˜+ ,
venta
˜˜, 1
.
˜˜1 2
OrdenDeVenta
˜˜2 >
(
˜˜> ?
)
˜˜? @
.
˜˜@ A
Cuotas
˜˜A G
(
˜˜G H
)
˜˜H I
)
˜˜I J
;
˜˜J K
}
¯¯ 
}
˘˘ "
ValidarImporteAPagar
˙˙ (
(
˙˙( )
deudas
˙˙) /
.
˙˙/ 0
Count
˙˙0 5
(
˙˙5 6
)
˙˙6 7
,
˙˙7 8
cobro
˙˙9 >
.
˙˙> ?
Importe
˙˙? F
,
˙˙F G
deudas
˙˙H N
.
˙˙N O
Sum
˙˙O R
(
˙˙R S
d
˙˙S T
=>
˙˙U W
d
˙˙X Y
.
˙˙Y Z
saldo
˙˙Z _
)
˙˙_ `
)
˙˙` a
;
˙˙a b
maximosCodigos
˚˚ "
=
˚˚# $
new
˚˚% (
Codigo
˚˚) /
(
˚˚/ 0
cobranzaMasiva
˚˚0 >
.
˚˚> ?
FechaEmision
˚˚? K
,
˚˚K L
maximoCodigoPago
˚˚M ]
)
˚˚] ^
;
˚˚^ _
var
¸¸ 

nuevoCobro
¸¸ "
=
¸¸# $!
GenerarCobroDeVenta
¸¸% 8
(
¸¸8 9
ModoOperacionEnum
¸¸9 J
.
¸¸J K2
$VentaCobranzaCarteraClientesDigitada
¸¸K o
,
¸¸o p
cobranzaMasiva
¸¸q 
.¸¸ Ä
IdCajero¸¸Ä à
,¸¸à â
cobranzaMasiva¸¸ä ò
.¸¸ò ô
IdCaja¸¸ô ü
,¸¸ü †
cobro¸¸° ¶
.¸¸¶ ß
	IdCliente¸¸ß ∞
,¸¸∞ ±
maximosCodigos¸¸≤ ¿
.¸¸¿ ¡#
SiguienteCodigoPago¸¸¡ ‘
,¸¸‘ ’
comprobantePago¸¸÷ Â
,¸¸Â Ê
$num¸¸Á Ë
,¸¸Ë È#
ventaYCobroEnBloque¸¸Í ˝
.¸¸˝ ˛!
id_unidad_negocio¸¸˛ è
,¸¸è ê#
ventaYCobroEnBloque¸¸ë §
.¸¸§ •
	id_moneda¸¸• Æ
,¸¸Æ Ø
cobro¸¸∞ µ
.¸¸µ ∂
Importe¸¸∂ Ω
,¸¸Ω æ
cobranzaMasiva¸¸ø Õ
.¸¸Õ Œ
FechaEmision¸¸Œ ⁄
,¸¸⁄ €
fechaActual¸¸‹ Á
,¸¸Á Ë
$str¸¸È ë
,¸¸ë í
MaestroSettings¸¸ì ¢
.¸¸¢ £
Default¸¸£ ™
.¸¸™ ´3
#IdDetalleMaestroMedioDepagoEfectivo¸¸´ Œ
,¸¸Œ œ
MaestroSettings¸¸– ﬂ
.¸¸ﬂ ‡
Default¸¸‡ Á
.¸¸Á Ë9
)IdDetalleMaestroEntidadBancariaPorDefecto¸¸Ë ë
,¸¸ë í
$str¸¸ì ó
)¸¸ó ò
;¸¸ò ô!
ResolverPagosCuotas
˝˝ '
(
˝˝' (

nuevoCobro
˝˝( 2
,
˝˝2 3
deudas
˝˝4 :
,
˝˝: ;
cobro
˝˝< A
.
˝˝A B
Importe
˝˝B I
)
˝˝I J
;
˝˝J K
cobrosAGuardar
˛˛ "
.
˛˛" #
Add
˛˛# &
(
˛˛& '

nuevoCobro
˛˛' 1
)
˛˛1 2
;
˛˛2 3
maximoCodigoPago
ˇˇ $
++
ˇˇ$ &
;
ˇˇ& '
}
ÄÄ 
return
ÅÅ 
cobrosAGuardar
ÅÅ %
;
ÅÅ% &
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ 
e
ÉÉ 
)
ÉÉ 
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
LogicaException
ÖÖ )
(
ÖÖ) *
$str
ÖÖ* l
,
ÖÖl m
e
ÖÖn o
)
ÖÖo p
;
ÖÖp q
}
ÜÜ 
}
áá 	
public
ãã 
List
ãã 
<
ãã !
Deuda_Actor_Negocio
ãã '
>
ãã' (5
'ObtenerDeudasMasivasDeCarteraDeClientes
ãã) P
(
ããP Q
int
ããQ T
idPuntoDeVenta
ããU c
,
ããc d
DateTime
ããe m
fecha
ããn s
)
ããs t
{
åå 	
DateTime
êê 
?
êê $
fechaUltimaVentaMasiva
êê ,
=
êê- .$
transaccionRepositorio
êê/ E
.
êêE F1
#ObtenerFechaInicioUltimaTransaccion
êêF i
(
êêi j
idPuntoDeVenta
ëë0 >
,
ëë> ?!
TransaccionSettings
íí0 C
.
ííC D
Default
ííD K
.
ííK L+
IdTipoTransaccionOrdenDeVenta
ííL i
,
ííi j
MaestroSettings
ìì0 ?
.
ìì? @
Default
ìì@ G
.
ììG H.
 IdDetalleMaestroEstadoConfirmado
ììH h
,
ììh i
fecha
îî0 5
.
îî5 6
Date
îî6 :
.
îî: ;
AddDays
îî; B
(
îîB C
$num
îîC D
)
îîD E
.
îîE F
AddMilliseconds
îîF U
(
îîU V
-
îîV W
$num
îîW X
)
îîX Y
,
îîY Z
MaestroSettings
ïï0 ?
.
ïï? @
Default
ïï@ G
.
ïïG H0
"IdDetalleMaestroParametroTipoVenta
ïïH j
,
ïïj k
(
ññ0 1
(
ññ1 2
int
ññ2 5
)
ññ5 6
ModoOperacionEnum
ññ6 G
.
ññG H2
$VentaCobranzaCarteraClientesDigitada
ññH l
)
ññl m
.
ññm n
ToString
ññn v
(
ññv w
)
ññw x
)
óó/ 0
;
óó0 1
DateTime
öö 
?
öö !
fechaUltimaCobranza
öö )
=
öö* +$
transaccionRepositorio
öö, B
.
ööB C[
LObtenerFechaUltimaTransaccionDeAlgunoDeLosActoresVinculadosSegunTransaccion1ööC è
(ööè ê
idPuntoDeVenta
õõ. <
,
õõ< =!
TransaccionSettings
úú. A
.
úúA B
Default
úúB I
.
úúI J7
)IdTipoTransaccionCobranzaFacturasClientes
úúJ s
,
úús t
fecha
ùù. 3
.
ùù3 4
Date
ùù4 8
.
ùù8 9
AddDays
ùù9 @
(
ùù@ A
$num
ùùA B
)
ùùB C
.
ùùC D
AddMilliseconds
ùùD S
(
ùùS T
-
ùùT U
$num
ùùU V
)
ùùV W
)
ûû, -
;
ûû- .
var
°° 

fechaDeuda
°° 
=
°° 
(
°° $
fechaUltimaVentaMasiva
°° 4
==
°°5 7
null
°°8 <
&&
°°= ?!
fechaUltimaCobranza
°°@ S
==
°°T V
null
°°W [
)
°°[ \
?
°°] ^
fecha
¢¢ #
:
¢¢$ %
(
¢¢& '$
fechaUltimaVentaMasiva
¢¢' =
!=
¢¢> @
null
¢¢A E
&&
¢¢F H!
fechaUltimaCobranza
¢¢I \
!=
¢¢] _
null
¢¢` d
)
¢¢d e
?
¢¢f g
(
££( )
(
§§) *
DateTime
§§* 2
)
§§2 3
(
§§3 4
DateTime
§§4 <
.
§§< =
Compare
§§= D
(
§§D E
(
§§E F
DateTime
§§F N
)
§§N O$
fechaUltimaVentaMasiva
§§O e
,
§§e f
(
§§g h
DateTime
§§h p
)
§§p q"
fechaUltimaCobranza§§q Ñ
)§§Ñ Ö
>§§Ü á
$num§§à â
?§§ä ã$
fechaUltimaVentaMasiva
••) ?
:
••@ A!
fechaUltimaCobranza
••B U
)
••U V
)
¶¶( )
.
¶¶) *
AddMilliseconds
¶¶* 9
(
¶¶9 :
$num
¶¶: ;
)
¶¶; <
:
ßß& '
(
ßß( )
(
ßß) *
DateTime
ßß* 2
)
ßß2 3
(
ßß3 4$
fechaUltimaVentaMasiva
ßß4 J
!=
ßßK M
null
ßßN R
?
ßßS T$
fechaUltimaVentaMasiva
®®) ?
:
®®@ A!
fechaUltimaCobranza
®®B U
)
®®U V
)
®®V W
.
®®W X
AddMilliseconds
®®X g
(
®®g h
$num
®®h i
)
®®i j
;
®®j k
return
™™ $
transaccionRepositorio
™™ )
.
™™) *=
/ObtenerDeudasActorNegocioPorVinculoActorNegocio
™™* Y
(
™™Y Z!
TransaccionSettings
™™Z m
.
™™m n
Default
™™n u
.
™™u v,
IdTipoTransaccionOrdenDeVenta™™v ì
,™™ì î
idPuntoDeVenta™™ï £
,™™£ §
(™™• ¶
int™™¶ ©
)™™© ™
TipoVinculo™™™ µ
.™™µ ∂ 
CarteraDeCliente™™∂ ∆
,™™∆ «

fechaDeuda™™» “
,™™“ ”
MaestroSettings™™‘ „
.™™„ ‰
Default™™‰ Î
.™™Î ÏK
;IdDetalleMaestroParametroComprobanteDeClientePredeterminado™™Ï ß
)™™ß ®
.™™® ©
ToList™™© Ø
(™™Ø ∞
)™™∞ ±
;™™± ≤
}
´´ 	
public
≠≠ 
List
≠≠ 
<
≠≠ -
VentaYCobranzaCarteraDeClientes
≠≠ 3
>
≠≠3 4,
ObtenerVentasYCobranzasMasivas
≠≠5 S
(
≠≠S T
DateTime
≠≠T \

fechaDesde
≠≠] g
,
≠≠g h
DateTime
≠≠i q

fechaHasta
≠≠r |
)
≠≠| }
{
ÆÆ 	
try
ØØ 
{
∞∞ 
int
≥≥ 
[
≥≥ 
]
≥≥ %
idsEstadosDeTransaccion
≥≥ -
=
≥≥. /
{
≥≥0 1
MaestroSettings
≥≥2 A
.
≥≥A B
Default
≥≥B I
.
≥≥I J.
 IdDetalleMaestroEstadoConfirmado
≥≥J j
,
≥≥j k
MaestroSettings
≥≥l {
.
≥≥{ |
Default≥≥| É
.≥≥É Ñ1
!IdDetalleMaestroEstadoTransmitido≥≥Ñ •
}≥≥¶ ß
;≥≥ß ®
List
µµ 
<
µµ 
OrdenDeVenta
µµ !
>
µµ! "
ordenesDeVenta
µµ# 1
=
µµ2 3
OrdenDeVenta
µµ4 @
.
µµ@ A
Convert_
µµA I
(
µµI J$
transaccionRepositorio
µµJ `
.
µµ` aX
IObtenerTransaccionesInclusiveDetalleTransaccionComprobanteYActoresNegocioµµa ™
(µµ™ ´!
TransaccionSettings
∂∂ '
.
∂∂' (
Default
∂∂( /
.
∂∂/ 0+
IdTipoTransaccionOrdenDeVenta
∂∂0 M
,
∂∂M N%
idsEstadosDeTransaccion
∂∂O f
,
∂∂f g
MaestroSettings
∂∂h w
.
∂∂w x
Default
∂∂x 
.∂∂ Ä2
"IdDetalleMaestroParametroTipoVenta∂∂Ä ¢
,∂∂¢ £
(∂∂§ •
(∂∂• ¶
int∂∂¶ ©
)∂∂© ™!
ModoOperacionEnum∂∂™ ª
.∂∂ª º4
$VentaCobranzaCarteraClientesDigitada∂∂º ‡
)∂∂‡ ·
.∂∂· ‚
ToString∂∂‚ Í
(∂∂Í Î
)∂∂Î Ï
,∂∂Ï Ì

fechaDesde∂∂Ó ¯
,∂∂¯ ˘

fechaHasta∂∂˙ Ñ
)∂∂Ñ Ö
.∂∂Ö Ü
ToList∂∂Ü å
(∂∂å ç
)∂∂ç é
)∂∂é è
;∂∂è ê
List
∏∏ 
<
∏∏ !
MovimientoEconomico
∏∏ (
>
∏∏( )
cobros
∏∏* 0
=
∏∏1 2!
MovimientoEconomico
∏∏3 F
.
∏∏F G
Convert
∏∏G N
(
∏∏N O$
transaccionRepositorio
∏∏O e
.
∏∏e fD
5ObtenerTransaccionesInclusiveActoresNegocioYPagoCuota∏∏f õ
(∏∏õ ú#
TransaccionSettings∏∏ú Ø
.∏∏Ø ∞
Default∏∏∞ ∑
.∏∏∑ ∏9
)IdTipoTransaccionCobranzaFacturasClientes∏∏∏ ·
,∏∏· ‚
MaestroSettings∏∏„ Ú
.∏∏Ú Û
Default∏∏Û ˙
.∏∏˙ ˚2
"IdDetalleMaestroParametroTipoVenta∏∏˚ ù
,∏∏ù û
(∏∏ü †
(∏∏† °
int∏∏° §
)∏∏§ •!
ModoOperacionEnum∏∏• ∂
.∏∏∂ ∑4
$VentaCobranzaCarteraClientesDigitada∏∏∑ €
)∏∏€ ‹
.∏∏‹ ›
ToString∏∏› Â
(∏∏Â Ê
)∏∏Ê Á
,∏∏Á Ë

fechaDesde∏∏È Û
,∏∏Û Ù

fechaHasta∏∏ı ˇ
)∏∏ˇ Ä
.∏∏Ä Å
ToList∏∏Å á
(∏∏á à
)∏∏à â
)∏∏â ä
;∏∏ä ã
List
∫∫ 
<
∫∫ 
VentaMasiva
∫∫  
>
∫∫  !
ventasMasivas
∫∫" /
=
∫∫0 1"
GenerarVentasMasivas
∫∫2 F
(
∫∫F G
ordenesDeVenta
∫∫G U
)
∫∫U V
;
∫∫V W
List
ªª 
<
ªª 
CobranzaMasiva
ªª #
>
ªª# $
cobranzasMasivas
ªª% 5
=
ªª6 7%
GenerarCobranzasMasivas
ªª8 O
(
ªªO P
cobros
ªªP V
)
ªªV W
;
ªªW X
List
ºº 
<
ºº -
VentaYCobranzaCarteraDeClientes
ºº 4
>
ºº4 5#
ventaYCobranzaMasivas
ºº6 K
=
ººL M<
.GenerarVentaYCobranzaMasivaDeCarteraDeClientes
ººN |
(
ºº| }
ventasMasivasºº} ä
,ººä ã 
cobranzasMasivasººå ú
)ººú ù
;ººù û
return
ΩΩ #
ventaYCobranzaMasivas
ΩΩ ,
.
ΩΩ, -
OrderByDescending
ΩΩ- >
(
ΩΩ> ?
vcm
ΩΩ? B
=>
ΩΩC E
vcm
ΩΩF I
.
ΩΩI J
FechaEmision
ΩΩJ V
)
ΩΩV W
.
ΩΩW X
ThenByDescending
ΩΩX h
(
ΩΩh i
vcm
ΩΩi l
=>
ΩΩm o
vcm
ΩΩp s
.
ΩΩs t
IdTransaccionΩΩt Å
)ΩΩÅ Ç
.ΩΩÇ É
ToListΩΩÉ â
(ΩΩâ ä
)ΩΩä ã
;ΩΩã å
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
e
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ 
LogicaException
¡¡ )
(
¡¡) *
$str
¡¡* ]
,
¡¡] ^
e
¡¡_ `
)
¡¡` a
;
¡¡a b
}
¬¬ 
}
√√ 	
public
ƒƒ 
List
ƒƒ 
<
ƒƒ 
VentaMasiva
ƒƒ 
>
ƒƒ  "
GenerarVentasMasivas
ƒƒ! 5
(
ƒƒ5 6
List
ƒƒ6 :
<
ƒƒ: ;
OrdenDeVenta
ƒƒ; G
>
ƒƒG H
ordenesDeVenta
ƒƒI W
)
ƒƒW X
{
≈≈ 	
try
∆∆ 
{
«« 
List
»» 
<
»» 
VentaMasiva
»»  
>
»»  !
ventasMasivas
»»" /
=
»»0 1
new
»»2 5
List
»»6 :
<
»»: ;
VentaMasiva
»»; F
>
»»F G
(
»»G H
)
»»H I
;
»»I J
List
…… 
<
…… 
VentaMonoDetalle
…… %
>
……% &!
detallesVentaMasiva
……' :
;
……: ;
VentaMasiva
   
ventaMasiva
   '
=
  ( )
null
  * .
;
  . /
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ 
ordenDeVenta
ÀÀ )
in
ÀÀ* ,
ordenesDeVenta
ÀÀ- ;
)
ÀÀ; <
{
ÃÃ !
detallesVentaMasiva
ÕÕ '
=
ÕÕ( )
new
ÕÕ* -
List
ÕÕ. 2
<
ÕÕ2 3
VentaMonoDetalle
ÕÕ3 C
>
ÕÕC D
(
ÕÕD E
)
ÕÕE F
;
ÕÕF G
foreach
ŒŒ 
(
ŒŒ 
var
ŒŒ  
detalle
ŒŒ! (
in
ŒŒ) +
ordenDeVenta
ŒŒ, 8
.
ŒŒ8 9 
DetalleTransaccion
ŒŒ9 K
(
ŒŒK L
)
ŒŒL M
)
ŒŒM N
{
œœ !
detallesVentaMasiva
–– +
.
––+ ,
Add
––, /
(
––/ 0
new
––0 3
VentaMonoDetalle
––4 D
(
––D E
ordenDeVenta
––E Q
.
––Q R
	IdCliente
––R [
,
––[ \
ordenDeVenta
––] i
.
––i j
ApellidosYNombres
––j {
,
––{ |
detalle––} Ñ
.––Ñ Ö 
Concepto_negocio––Ö ï
.––ï ñ
nombre––ñ ú
,––ú ù
detalle––û •
.––• ¶
cantidad––¶ Æ
,––Æ Ø
detalle––∞ ∑
.––∑ ∏
precio_unitario––∏ «
)––« »
)––» …
;––…  
}
—— 
ventaMasiva
““ 
=
““  !
new
““" %
VentaMasiva
““& 1
(
““1 2
ordenDeVenta
““2 >
.
““> ?
CentroDeAtencion
““? O
(
““O P
)
““P Q
.
““Q R
Id
““R T
,
““T U
ordenDeVenta
““V b
.
““b c
CentroDeAtencion
““c s
(
““s t
)
““t u
.
““u v
Nombre
““v |
,
““| }
ordenDeVenta““~ ä
.““ä ã
Empleado““ã ì
(““ì î
)““î ï
.““ï ñ
Id““ñ ò
,““ò ô
ordenDeVenta““ö ¶
.““¶ ß
Empleado““ß Ø
(““Ø ∞
)““∞ ±
.““± ≤
NombreCompleto““≤ ¿
,““¿ ¡
ordenDeVenta““¬ Œ
.““Œ œ
FechaEmision““œ €
,““€ ‹#
detallesVentaMasiva““› 
)““ Ò
{
”” "
IdVentaCobroEnBloque
‘‘ ,
=
‘‘- .
(
‘‘/ 0
long
‘‘0 4
)
‘‘4 5
ordenDeVenta
‘‘5 A
.
‘‘A B
Transaccion
‘‘B M
(
‘‘M N
)
‘‘N O
.
‘‘O P
Transaccion2
‘‘P \
.
‘‘\ ]"
id_transaccion_padre
‘‘] q
}
’’ 
;
’’ 
ventasMasivas
÷÷ !
.
÷÷! "
Add
÷÷" %
(
÷÷% &
ventaMasiva
÷÷& 1
)
÷÷1 2
;
÷÷2 3
}
◊◊ 
return
ÿÿ 
ventasMasivas
ÿÿ $
;
ÿÿ$ %
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
e
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
new
‹‹ 
LogicaException
‹‹ )
(
‹‹) *
$str
‹‹* j
,
‹‹j k
e
‹‹l m
)
‹‹m n
;
‹‹n o
}
›› 
}
ﬁﬁ 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
CobranzaMasiva
ﬂﬂ "
>
ﬂﬂ" #%
GenerarCobranzasMasivas
ﬂﬂ$ ;
(
ﬂﬂ; <
List
ﬂﬂ< @
<
ﬂﬂ@ A!
MovimientoEconomico
ﬂﬂA T
>
ﬂﬂT U
cobros
ﬂﬂV \
)
ﬂﬂ\ ]
{
‡‡ 	
try
·· 
{
‚‚ 
List
„„ 
<
„„ 
CobranzaMasiva
„„ #
>
„„# $
cobranzasMasivas
„„% 5
=
„„6 7
new
„„8 ;
List
„„< @
<
„„@ A
CobranzaMasiva
„„A O
>
„„O P
(
„„P Q
)
„„Q R
;
„„R S
List
‰‰ 
<
‰‰ #
DetalleCobranzaMasiva
‰‰ *
>
‰‰* +$
detallesCobranzaMasiva
‰‰, B
;
‰‰B C
CobranzaMasiva
ÂÂ 
cobranzaMasiva
ÂÂ -
=
ÂÂ. /
null
ÂÂ0 4
;
ÂÂ4 5
foreach
ÊÊ 
(
ÊÊ 
var
ÊÊ 
cobro
ÊÊ "
in
ÊÊ# %
cobros
ÊÊ& ,
)
ÊÊ, -
{
ÁÁ $
detallesCobranzaMasiva
ËË *
=
ËË+ ,
new
ËË- 0
List
ËË1 5
<
ËË5 6#
DetalleCobranzaMasiva
ËË6 K
>
ËËK L
{
ÈÈ 
new
ÍÍ #
DetalleCobranzaMasiva
ÍÍ 1
(
ÍÍ1 2
cobro
ÍÍ2 7
.
ÍÍ7 8
Tercero
ÍÍ8 ?
(
ÍÍ? @
)
ÍÍ@ A
.
ÍÍA B
Id
ÍÍB D
,
ÍÍD E
cobro
ÍÍF K
.
ÍÍK L
Tercero
ÍÍL S
(
ÍÍS T
)
ÍÍT U
.
ÍÍU V
RazonSocial
ÍÍV a
,
ÍÍa b
cobro
ÍÍc h
.
ÍÍh i
Total
ÍÍi n
)
ÍÍn o
}
ÎÎ 
;
ÎÎ 
if
ÏÏ 
(
ÏÏ 
cobros
ÏÏ 
.
ÏÏ 
Count
ÏÏ $
>
ÏÏ% &
$num
ÏÏ' (
)
ÏÏ( )
{
ÌÌ 
cobranzaMasiva
ÓÓ &
=
ÓÓ' (
new
ÓÓ) ,
CobranzaMasiva
ÓÓ- ;
(
ÓÓ; <
cobro
ÓÓ< A
.
ÓÓA B
CentroDeAtencion
ÓÓB R
(
ÓÓR S
)
ÓÓS T
.
ÓÓT U
Id
ÓÓU W
,
ÓÓW X
cobro
ÓÓY ^
.
ÓÓ^ _
Cajero
ÓÓ_ e
(
ÓÓe f
)
ÓÓf g
.
ÓÓg h
NombreCompleto
ÓÓh v
,
ÓÓv w
cobro
ÓÓx }
.
ÓÓ} ~
EmpleadoÓÓ~ Ü
(ÓÓÜ á
)ÓÓá à
.ÓÓà â
IdÓÓâ ã
,ÓÓã å
cobroÓÓç í
.ÓÓí ì
EmpleadoÓÓì õ
(ÓÓõ ú
)ÓÓú ù
.ÓÓù û
NombreCompletoÓÓû ¨
,ÓÓ¨ ≠
cobroÓÓÆ ≥
.ÓÓ≥ ¥
FechaEmisionÓÓ¥ ¿
,ÓÓ¿ ¡
cobroÓÓ¬ «
.ÓÓ« »
FechaDeRegistroÓÓ» ◊
,ÓÓ◊ ÿ&
detallesCobranzaMasivaÓÓŸ Ô
)ÓÓÔ 
{
ÔÔ "
IdVentaCobroEnBloque
 0
=
1 2
(
3 4
long
4 8
)
8 9
cobro
9 >
.
> ?
Transaccion
? J
(
J K
)
K L
.
L M"
id_transaccion_padre
M a
}
ÒÒ 
;
ÒÒ 
cobranzasMasivas
ÚÚ (
.
ÚÚ( )
Add
ÚÚ) ,
(
ÚÚ, -
cobranzaMasiva
ÚÚ- ;
)
ÚÚ; <
;
ÚÚ< =
}
ÛÛ 
}
ÙÙ 
return
ıı 
cobranzasMasivas
ıı '
;
ıı' (
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
new
˘˘ 
LogicaException
˘˘ )
(
˘˘) *
$str
˘˘* j
,
˘˘j k
e
˘˘l m
)
˘˘m n
;
˘˘n o
}
˙˙ 
}
˚˚ 	
public
˛˛ 
List
˛˛ 
<
˛˛ -
VentaYCobranzaCarteraDeClientes
˛˛ 3
>
˛˛3 4<
.GenerarVentaYCobranzaMasivaDeCarteraDeClientes
˛˛5 c
(
˛˛c d
List
˛˛d h
<
˛˛h i
VentaMasiva
˛˛i t
>
˛˛t u
ventasMasivas˛˛v É
,˛˛É Ñ
List˛˛Ö â
<˛˛â ä
CobranzaMasiva˛˛ä ò
>˛˛ò ô 
cobranzasMasivas˛˛ö ™
)˛˛™ ´
{
ˇˇ 	
try
ÄÄ 
{
ÅÅ 
List
ÇÇ 
<
ÇÇ -
VentaYCobranzaCarteraDeClientes
ÇÇ 4
>
ÇÇ4 5/
!ventasYCobranzasCarteraDeClientes
ÇÇ6 W
=
ÇÇX Y
new
ÇÇZ ]
List
ÇÇ^ b
<
ÇÇb c.
VentaYCobranzaCarteraDeClientesÇÇc Ç
>ÇÇÇ É
(ÇÇÉ Ñ
)ÇÇÑ Ö
;ÇÇÖ Ü-
VentaYCobranzaCarteraDeClientes
ÉÉ /-
ventaYCobranzaCarteraDeClientes
ÉÉ0 O
=
ÉÉP Q
null
ÉÉR V
;
ÉÉV W
var
ÑÑ #
IdsVentaCobroEnBloque
ÑÑ )
=
ÑÑ* +
ventasMasivas
ÑÑ, 9
.
ÑÑ9 :
Select
ÑÑ: @
(
ÑÑ@ A
vm
ÑÑA C
=>
ÑÑD F
vm
ÑÑG I
.
ÑÑI J"
IdVentaCobroEnBloque
ÑÑJ ^
)
ÑÑ^ _
.
ÑÑ_ `
ToList
ÑÑ` f
(
ÑÑf g
)
ÑÑg h
;
ÑÑh i#
IdsVentaCobroEnBloque
ÖÖ %
.
ÖÖ% &
AddRange
ÖÖ& .
(
ÖÖ. /
cobranzasMasivas
ÖÖ/ ?
.
ÖÖ? @
Select
ÖÖ@ F
(
ÖÖF G
cm
ÖÖG I
=>
ÖÖJ L
cm
ÖÖM O
.
ÖÖO P"
IdVentaCobroEnBloque
ÖÖP d
)
ÖÖd e
.
ÖÖe f
ToList
ÖÖf l
(
ÖÖl m
)
ÖÖm n
)
ÖÖn o
;
ÖÖo p
foreach
áá 
(
áá 
var
áá "
idVentaCobroEnBloque
áá 1
in
áá2 4#
IdsVentaCobroEnBloque
áá5 J
.
ááJ K
Distinct
ááK S
(
ááS T
)
ááT U
)
ááU V
{
àà 
var
ââ 
ventas
ââ 
=
ââ  
ventasMasivas
ââ! .
.
ââ. /
Where
ââ/ 4
(
ââ4 5
vm
ââ5 7
=>
ââ8 :
vm
ââ; =
.
ââ= >"
IdVentaCobroEnBloque
ââ> R
==
ââS U"
idVentaCobroEnBloque
ââV j
)
ââj k
.
ââk l
ToList
ââl r
(
ââr s
)
ââs t
;
âât u
var
ää 
	cobranzas
ää !
=
ää" #
cobranzasMasivas
ää$ 4
.
ää4 5
Where
ää5 :
(
ää: ;
cm
ää; =
=>
ää> @
cm
ääA C
.
ääC D"
IdVentaCobroEnBloque
ääD X
==
ääY ["
idVentaCobroEnBloque
ää\ p
)
ääp q
.
ääq r
ToList
äär x
(
ääx y
)
ääy z
;
ääz {
var
ãã 
ventaMasiva
ãã #
=
ãã$ %
(
ãã& '
ventas
ãã' -
.
ãã- .
Count
ãã. 3
>
ãã4 5
$num
ãã6 7
)
ãã7 8
?
ãã9 :
ventas
ãã; A
.
ããA B
First
ããB G
(
ããG H
)
ããH I
:
ããJ K
null
ããL P
;
ããP Q
var
åå 
cobranzaMasiva
åå &
=
åå' (
(
åå) *
	cobranzas
åå* 3
.
åå3 4
Count
åå4 9
>
åå: ;
$num
åå< =
)
åå= >
?
åå? @
	cobranzas
ååA J
.
ååJ K
First
ååK P
(
ååP Q
)
ååQ R
:
ååS T
null
ååU Y
;
ååY Z
if
çç 
(
çç 
ventaMasiva
çç #
!=
çç$ &
null
çç' +
)
çç+ ,
ventaMasiva
çç- 8
.
çç8 9
Detalles
çç9 A
=
ççB C
ventas
ççD J
.
ççJ K

SelectMany
ççK U
(
ççU V
v
ççV W
=>
ççX Z
v
çç[ \
.
çç\ ]
Detalles
çç] e
)
ççe f
.
ççf g
ToList
ççg m
(
ççm n
)
ççn o
;
çço p
if
éé 
(
éé 
cobranzaMasiva
éé &
!=
éé' )
null
éé* .
)
éé. /
cobranzaMasiva
éé0 >
.
éé> ?
Detalles
éé? G
=
ééH I
	cobranzas
ééJ S
.
ééS T

SelectMany
ééT ^
(
éé^ _
c
éé_ `
=>
ééa c
c
ééd e
.
éée f
Detalles
ééf n
)
één o
.
ééo p
ToList
éép v
(
éév w
)
ééw x
;
ééx y
var
èè 
idCentroAtencion
èè (
=
èè) *
ventas
èè+ 1
==
èè2 4
null
èè5 9
?
èè: ;
cobranzaMasiva
èè< J
.
èèJ K
IdCaja
èèK Q
:
èèR S
ventaMasiva
èèT _
.
èè_ `
IdPuntoDeVenta
èè` n
;
èèn o
var
êê "
nombreCentroAtencion
êê ,
=
êê- .
ventaMasiva
êê/ :
==
êê; =
null
êê> B
?
êêC D
cobranzaMasiva
êêE S
.
êêS T

NombreCaja
êêT ^
:
êê_ `
ventaMasiva
êêa l
.
êêl m 
NombrePuntoDeVenta
êêm 
;êê Ä-
ventaYCobranzaCarteraDeClientes
ëë 3
=
ëë4 5
new
ëë6 9-
VentaYCobranzaCarteraDeClientes
ëë: Y
(
ëëY Z"
idVentaCobroEnBloque
ëëZ n
,
ëën o
idCentroAtencionëëp Ä
,ëëÄ Å$
nombreCentroAtencionëëÇ ñ
,ëëñ ó
ventaMasivaëëò £
,ëë£ §
cobranzaMasivaëë• ≥
)ëë≥ ¥
;ëë¥ µ/
!ventasYCobranzasCarteraDeClientes
íí 5
.
íí5 6
Add
íí6 9
(
íí9 :-
ventaYCobranzaCarteraDeClientes
íí: Y
)
ííY Z
;
ííZ [
}
ìì 
return
îî /
!ventasYCobranzasCarteraDeClientes
îî 8
;
îî8 9
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
e
ññ 
)
ññ 
{
óó 
throw
òò 
new
òò 
LogicaException
òò )
(
òò) *
$str
òò* j
,
òòj k
e
òòl m
)
òòm n
;
òòn o
}
ôô 
}
öö 	
public
õõ -
VentaYCobranzaCarteraDeClientes
õõ .<
.GenerarVentaYCobranzaMasivaDeCarteraDeClientes
õõ/ ]
(
õõ] ^
List
õõ^ b
<
õõb c
OrdenDeVenta
õõc o
>
õõo p
ordenesDeVenta
õõq 
,õõ Ä
ListõõÅ Ö
<õõÖ Ü#
MovimientoEconomicoõõÜ ô
>õõô ö
cobrosõõõ °
)õõ° ¢
{
úú 	
try
ùù 
{
ûû '
CentroDeAtencionExtendido
†† )
centroDeAtencion
††* :
=
††; <
ordenesDeVenta
††= K
!=
††L N
null
††O S
&&
††T V
ordenesDeVenta
††W e
.
††e f
Any
††f i
(
††i j
)
††j k
?
††l m
ordenesDeVenta
††n |
.
††| }
First††} Ç
(††Ç É
)††É Ñ
.††Ñ Ö 
CentroDeAtencion††Ö ï
(††ï ñ
)††ñ ó
:
°° 
(
°° 
cobros
°° 
!=
°° 
null
°° !
&&
°°" $
cobros
°°% +
.
°°+ ,
Any
°°, /
(
°°/ 0
)
°°0 1
?
°°2 3
new
°°4 7'
CentroDeAtencionExtendido
°°8 Q
(
°°Q R
cobros
°°R X
.
°°X Y
First
°°Y ^
(
°°^ _
)
°°_ `
.
°°` a
Tercero
°°a h
(
°°h i
)
°°i j
.
°°j k
ActorDeNegocio
°°k y
.
°°y z%
Vinculo_Actor_Negocio1°°z ê
.°°ê ë
FirstOrDefault°°ë ü
(°°ü †
van°°† £
=>°°§ ¶
van°°ß ™
.°°™ ´

es_vigente°°´ µ
&&°°∂ ∏
van°°π º
.°°º Ω
tipo_vinculo°°Ω …
==°°  Ã
(°°Õ Œ
int°°Œ —
)°°— “
TipoVinculo°°“ ›
.°°› ﬁ 
CarteraDeCliente°°ﬁ Ó
)°°Ó Ô
.°°Ô 
Actor_negocio°° ˝
)°°˝ ˛
:°°ˇ Ä
null°°Å Ö
)°°Ö Ü
;°°Ü á
VentaMasiva
¢¢ 
ventaMasiva
¢¢ '
=
¢¢( )
null
¢¢* .
;
¢¢. /
CobranzaMasiva
££ 
cobranzaMasivo
££ -
=
££. /
null
££0 4
;
££4 5
List
§§ 
<
§§ 
VentaMonoDetalle
§§ %
>
§§% &!
detallesVentaMasiva
§§' :
=
§§; <
new
§§= @
List
§§A E
<
§§E F
VentaMonoDetalle
§§F V
>
§§V W
(
§§W X
)
§§X Y
;
§§Y Z
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
orden
¶¶ "
in
¶¶# %
ordenesDeVenta
¶¶& 4
)
¶¶4 5
{
ßß 
foreach
®® 
(
®® 
var
®®  
detalle
®®! (
in
®®) +
orden
®®, 1
.
®®1 2 
DetalleTransaccion
®®2 D
(
®®D E
)
®®E F
)
®®F G
{
©© !
detallesVentaMasiva
™™ +
.
™™+ ,
Add
™™, /
(
™™/ 0
new
™™0 3
VentaMonoDetalle
™™4 D
(
™™D E
orden
™™E J
.
™™J K
	IdCliente
™™K T
,
™™T U
orden
™™V [
.
™™[ \
ApellidosYNombres
™™\ m
,
™™m n
detalle
™™o v
.
™™v w
Concepto_negocio™™w á
.™™á à
nombre™™à é
,™™é è
detalle™™ê ó
.™™ó ò
cantidad™™ò †
,™™† °
detalle™™¢ ©
.™™© ™
precio_unitario™™™ π
)™™π ∫
)™™∫ ª
;™™ª º
}
´´ 
}
¨¨ 
if
µµ 
(
µµ 
ordenesDeVenta
µµ "
.
µµ" #
Count
µµ# (
>
µµ) *
$num
µµ+ ,
)
µµ, -
{
∂∂ 
ventaMasiva
∏∏ 
=
∏∏  !
new
∏∏" %
VentaMasiva
∏∏& 1
(
∏∏1 2
ordenesDeVenta
∏∏2 @
.
∏∏@ A
First
∏∏A F
(
∏∏F G
)
∏∏G H
.
∏∏H I
CentroDeAtencion
∏∏I Y
(
∏∏Y Z
)
∏∏Z [
.
∏∏[ \
Id
∏∏\ ^
,
∏∏^ _
ordenesDeVenta
∏∏` n
.
∏∏n o
First
∏∏o t
(
∏∏t u
)
∏∏u v
.
∏∏v w
CentroDeAtencion∏∏w á
(∏∏á à
)∏∏à â
.∏∏â ä
Nombre∏∏ä ê
,∏∏ê ë
ordenesDeVenta
ππ "
.
ππ" #
First
ππ# (
(
ππ( )
)
ππ) *
.
ππ* +
Empleado
ππ+ 3
(
ππ3 4
)
ππ4 5
.
ππ5 6
Id
ππ6 8
,
ππ8 9
ordenesDeVenta
ππ: H
.
ππH I
First
ππI N
(
ππN O
)
ππO P
.
ππP Q
Empleado
ππQ Y
(
ππY Z
)
ππZ [
.
ππ[ \
NombreCompleto
ππ\ j
,
ππj k
ordenesDeVenta
ππl z
.
ππz {
Firstππ{ Ä
(ππÄ Å
)ππÅ Ç
.ππÇ É
FechaEmisionππÉ è
,ππè ê#
detallesVentaMasivaππë §
)ππ§ •
{
∫∫ 
NombreAlmacenero
ªª (
=
ªª) *
ordenesDeVenta
ªª+ 9
.
ªª9 :
First
ªª: ?
(
ªª? @
)
ªª@ A
.
ªªA B 
OperacionDeAlmacen
ªªB T
(
ªªT U
)
ªªU V
.
ªªV W
Empleado
ªªW _
(
ªª_ `
)
ªª` a
.
ªªa b
NombreCompleto
ªªb p
,
ªªp q
NombreAlmacen
ºº %
=
ºº& '
ordenesDeVenta
ºº( 6
.
ºº6 7
First
ºº7 <
(
ºº< =
)
ºº= >
.
ºº> ? 
OperacionDeAlmacen
ºº? Q
(
ººQ R
)
ººR S
.
ººS T
CentroDeAtencion
ººT d
(
ººd e
)
ººe f
.
ººf g
Nombre
ººg m
,
ººm n
}
ΩΩ 
;
ΩΩ 
}
ææ 
List
¡¡ 
<
¡¡ #
DetalleCobranzaMasiva
¡¡ *
>
¡¡* +$
detallesCobranzaMasiva
¡¡, B
=
¡¡C D
new
¡¡E H
List
¡¡I M
<
¡¡M N#
DetalleCobranzaMasiva
¡¡N c
>
¡¡c d
(
¡¡d e
)
¡¡e f
;
¡¡f g
foreach
¬¬ 
(
¬¬ 
var
¬¬ 
cobro
¬¬ "
in
¬¬# %
cobros
¬¬& ,
)
¬¬, -
{
√√ $
detallesCobranzaMasiva
ƒƒ *
.
ƒƒ* +
Add
ƒƒ+ .
(
ƒƒ. /
new
ƒƒ/ 2#
DetalleCobranzaMasiva
ƒƒ3 H
(
ƒƒH I
cobro
ƒƒI N
.
ƒƒN O
Tercero
ƒƒO V
(
ƒƒV W
)
ƒƒW X
.
ƒƒX Y
Id
ƒƒY [
,
ƒƒ[ \
cobro
ƒƒ] b
.
ƒƒb c
Tercero
ƒƒc j
(
ƒƒj k
)
ƒƒk l
.
ƒƒl m
RazonSocial
ƒƒm x
,
ƒƒx y
cobro
ƒƒz 
.ƒƒ Ä
TotalƒƒÄ Ö
)ƒƒÖ Ü
)ƒƒÜ á
;ƒƒá à
}
≈≈ 
if
∆∆ 
(
∆∆ 
cobros
∆∆ 
.
∆∆ 
Count
∆∆  
>
∆∆! "
$num
∆∆# $
)
∆∆$ %
{
«« 
cobranzaMasivo
…… "
=
……# $
new
……% (
CobranzaMasiva
……) 7
(
……7 8
cobros
……8 >
.
……> ?
First
……? D
(
……D E
)
……E F
.
……F G
CentroDeAtencion
……G W
(
……W X
)
……X Y
.
……Y Z
Id
……Z \
,
……\ ]
cobros
……^ d
.
……d e
First
……e j
(
……j k
)
……k l
.
……l m
CentroDeAtencion
……m }
(
……} ~
)
……~ 
.…… Ä
Nombre……Ä Ü
,……Ü á
cobros……à é
.……é è
First……è î
(……î ï
)……ï ñ
.……ñ ó
Empleado……ó ü
(……ü †
)……† °
.……° ¢
Id……¢ §
,……§ •
cobros
   
.
   
First
   $
(
  $ %
)
  % &
.
  & '
Empleado
  ' /
(
  / 0
)
  0 1
.
  1 2
NombreCompleto
  2 @
,
  @ A
cobros
  B H
.
  H I
First
  I N
(
  N O
)
  O P
.
  P Q
FechaEmision
  Q ]
,
  ] ^
cobros
  _ e
.
  e f
First
  f k
(
  k l
)
  l m
.
  m n
FechaDeRegistro
  n }
,
  } ~%
detallesCobranzaMasiva   ï
)  ï ñ
;  ñ ó
}
ÀÀ 
long
—— 
idTransaccion
—— "
=
——# $
ordenesDeVenta
——% 3
.
——3 4
Select
——4 :
(
——: ;
ov
——; =
=>
——> @
ov
——A C
.
——C D
Transaccion
——D O
(
——O P
)
——P Q
.
——Q R
Transaccion2
——R ^
.
——^ _"
id_transaccion_padre
——_ s
)
——s t
.
——t u
FirstOrDefault——u É
(——É Ñ
)——Ñ Ö
!=——Ü à
null——â ç
?——é è
(——ê ë
long——ë ï
)——ï ñ
ordenesDeVenta——ñ §
.——§ •
FirstOrDefault——• ≥
(——≥ ¥
)——¥ µ
.——µ ∂
Transaccion——∂ ¡
(——¡ ¬
)——¬ √
.——√ ƒ
Transaccion2——ƒ –
.——– —$
id_transaccion_padre——— Â
:——Ê Á
cobros——Ë Ó
.——Ó Ô
Select——Ô ı
(——ı ˆ
ov——ˆ ¯
=>——˘ ˚
ov——¸ ˛
.——˛ ˇ
Transaccion——ˇ ä
(——ä ã
)——ã å
.——å ç$
id_transaccion_padre——ç °
)——° ¢
.——¢ £
FirstOrDefault——£ ±
(——± ≤
)——≤ ≥
!=——¥ ∂
null——∑ ª
?——º Ω
(——æ ø
long——ø √
)——√ ƒ
cobros——ƒ  
.——  À
FirstOrDefault——À Ÿ
(——Ÿ ⁄
)——⁄ €
.——€ ‹
Transaccion——‹ Á
(——Á Ë
)——Ë È
.——È Í$
id_transaccion_padre——Í ˛
:——ˇ Ä
$num——Å Ç
;——Ç É
return
‘‘ 
new
‘‘ -
VentaYCobranzaCarteraDeClientes
‘‘ :
(
‘‘: ;
idTransaccion
‘‘; H
,
‘‘H I
centroDeAtencion
‘‘J Z
.
‘‘Z [
Id
‘‘[ ]
,
‘‘] ^
centroDeAtencion
‘‘_ o
.
‘‘o p
Nombre
‘‘p v
,
‘‘v w
ventaMasiva‘‘x É
,
’’ 
cobranzaMasivo
’’  
)
’’  !
;
’’! "
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* j
,
⁄⁄j k
e
⁄⁄l m
)
⁄⁄m n
;
⁄⁄n o
}
€€ 
}
‹‹ 	
public
ÒÒ -
VentaYCobranzaCarteraDeClientes
ÒÒ .+
ObtenerVentasYCobranzasMasiva
ÒÒ/ L
(
ÒÒL M
int
ÒÒM P
idTransaccion
ÒÒQ ^
)
ÒÒ^ _
{
ÚÚ 	
try
ÛÛ 
{
ÙÙ 
int
ıı 
[
ıı 
]
ıı %
idsEstadosDeTransaccion
ıı -
=
ıı. /
{
ıı0 1
MaestroSettings
ıı2 A
.
ııA B
Default
ııB I
.
ııI J.
 IdDetalleMaestroEstadoConfirmado
ııJ j
,
ııj k
MaestroSettings
ııl {
.
ıı{ |
Defaultıı| É
.ııÉ Ñ1
!IdDetalleMaestroEstadoTransmitidoııÑ •
}ıı¶ ß
;ııß ®
List
˜˜ 
<
˜˜ 
OrdenDeVenta
˜˜ !
>
˜˜! "
ordenesDeVenta
˜˜# 1
=
˜˜2 3
OrdenDeVenta
˜˜4 @
.
˜˜@ A
Convert_
˜˜A I
(
˜˜I J$
transaccionRepositorio
˜˜J `
.
˜˜` aX
IObtenerTransaccionesInclusiveDetalleTransaccionComprobanteYActoresNegocio˜˜a ™
(˜˜™ ´!
TransaccionSettings
¯¯ '
.
¯¯' (
Default
¯¯( /
.
¯¯/ 0+
IdTipoTransaccionOrdenDeVenta
¯¯0 M
,
¯¯M N%
idsEstadosDeTransaccion
¯¯O f
,
¯¯f g
MaestroSettings
¯¯h w
.
¯¯w x
Default
¯¯x 
.¯¯ Ä2
"IdDetalleMaestroParametroTipoVenta¯¯Ä ¢
,¯¯¢ £
(¯¯§ •
(¯¯• ¶
int¯¯¶ ©
)¯¯© ™!
ModoOperacionEnum¯¯™ ª
.¯¯ª º4
$VentaCobranzaCarteraClientesDigitada¯¯º ‡
)¯¯‡ ·
.¯¯· ‚
ToString¯¯‚ Í
(¯¯Í Î
)¯¯Î Ï
,¯¯Ï Ì
idTransaccion¯¯Ó ˚
)¯¯˚ ¸
.¯¯¸ ˝
ToList¯¯˝ É
(¯¯É Ñ
)¯¯Ñ Ö
)¯¯Ö Ü
;¯¯Ü á
List
˙˙ 
<
˙˙ !
MovimientoEconomico
˙˙ (
>
˙˙( )
cobros
˙˙* 0
=
˙˙1 2!
MovimientoEconomico
˙˙3 F
.
˙˙F G
Convert
˙˙G N
(
˙˙N O$
transaccionRepositorio
˙˙O e
.
˙˙e fD
5ObtenerTransaccionesInclusiveActoresNegocioYPagoCuota˙˙f õ
(˙˙õ ú#
TransaccionSettings˙˙ú Ø
.˙˙Ø ∞
Default˙˙∞ ∑
.˙˙∑ ∏9
)IdTipoTransaccionCobranzaFacturasClientes˙˙∏ ·
,˙˙· ‚
MaestroSettings˙˙„ Ú
.˙˙Ú Û
Default˙˙Û ˙
.˙˙˙ ˚2
"IdDetalleMaestroParametroTipoVenta˙˙˚ ù
,˙˙ù û
(˙˙ü †
(˙˙† °
int˙˙° §
)˙˙§ •!
ModoOperacionEnum˙˙• ∂
.˙˙∂ ∑4
$VentaCobranzaCarteraClientesDigitada˙˙∑ €
)˙˙€ ‹
.˙˙‹ ›
ToString˙˙› Â
(˙˙Â Ê
)˙˙Ê Á
,˙˙Á Ë
idTransaccion˙˙È ˆ
)˙˙ˆ ˜
.˙˙˜ ¯
ToList˙˙¯ ˛
(˙˙˛ ˇ
)˙˙ˇ Ä
)˙˙Ä Å
;˙˙Å Ç
return
¸¸ <
.GenerarVentaYCobranzaMasivaDeCarteraDeClientes
¸¸ E
(
¸¸E F
ordenesDeVenta
¸¸F T
,
¸¸T U
cobros
¸¸V \
)
¸¸\ ]
;
¸¸] ^
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
String
ÄÄ* 0
.
ÄÄ0 1
Format
ÄÄ1 7
(
ÄÄ7 8
$str
ÄÄ8 v
,
ÄÄv w
idTransaccionÄÄx Ö
)ÄÄÖ Ü
,ÄÄÜ á
eÄÄà â
)ÄÄâ ä
;ÄÄä ã
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
List
ÑÑ 
<
ÑÑ 
OrdenDeVenta
ÑÑ  
>
ÑÑ  !*
ObtenerVentasMasivasPorFecha
ÑÑ" >
(
ÑÑ> ?
DateTime
ÑÑ? G
fecha
ÑÑH M
)
ÑÑM N
{
ÖÖ 	
try
ÜÜ 
{
áá 
DateTime
ââ 
desde
ââ 
=
ââ  
new
ââ! $
DateTime
ââ% -
(
ââ- .
)
ââ. /
;
ââ/ 0
desde
ää 
=
ää 
fecha
ää 
;
ää 
DateTime
ãã 
hasta
ãã 
=
ãã  
new
ãã! $
DateTime
ãã% -
(
ãã- .
)
ãã. /
;
ãã/ 0
hasta
åå 
=
åå 
desde
åå 
.
åå 
AddDays
åå %
(
åå% &
$num
åå& '
)
åå' (
.
åå( )
AddMilliseconds
åå) 8
(
åå8 9
-
åå9 :
$num
åå: ;
)
åå; <
;
åå< =
int
çç 
[
çç 
]
çç %
idsEstadosDeTransaccion
çç -
=
çç. /
{
çç0 1
MaestroSettings
çç2 A
.
ççA B
Default
ççB I
.
ççI J.
 IdDetalleMaestroEstadoConfirmado
ççJ j
,
ççj k
MaestroSettings
ççl {
.
çç{ |
Defaultçç| É
.ççÉ Ñ1
!IdDetalleMaestroEstadoTransmitidoççÑ •
}çç¶ ß
;ççß ®
return
éé 
OrdenDeVenta
éé #
.
éé# $
Convert_
éé$ ,
(
éé, -$
transaccionRepositorio
éé- C
.
ééC DX
IObtenerTransaccionesInclusiveDetalleTransaccionComprobanteYActoresNegocioééD ç
(ééç é#
TransaccionSettingsééé °
.éé° ¢
Defaultéé¢ ©
.éé© ™-
IdTipoTransaccionOrdenDeVentaéé™ «
,éé« »%
idsEstadosDeTransaccion
èè +
,
èè+ , 
AplicacionSettings
èè- ?
.
èè? @
Default
èè@ G
.
èèG H
	TipoVenta
èèH Q
,
èèQ R
ModoOperacionEnum
èèS d
.
èèd e3
$VentaCobranzaCarteraClientesDigitadaèèe â
.èèâ ä
ToStringèèä í
(èèí ì
)èèì î
,èèî ï
desdeèèñ õ
,èèõ ú
hastaèèù ¢
)èè¢ £
.èè£ §
ToListèè§ ™
(èè™ ´
)èè´ ¨
)èè¨ ≠
;èè≠ Æ
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì )
(
ìì) *
String
ìì* 0
.
ìì0 1
Format
ìì1 7
(
ìì7 8
$str
ìì8 j
,
ììj k
fecha
ììl q
)
ììq r
,
ììr s
e
ììt u
)
ììu v
;
ììv w
}
ïï 
}
ññ 	
public
òò 
List
òò 
<
òò !
MovimientoEconomico
òò '
>
òò' (*
ObtenerCobrosMasivosPorFecha
òò) E
(
òòE F
DateTime
òòF N
fecha
òòO T
)
òòT U
{
ôô 	
try
öö 
{
õõ 
DateTime
úú 
desde
úú 
=
úú  
new
úú! $
DateTime
úú% -
(
úú- .
)
úú. /
;
úú/ 0
desde
ùù 
=
ùù 
fecha
ùù 
;
ùù 
DateTime
ûû 
hasta
ûû 
=
ûû  
new
ûû! $
DateTime
ûû% -
(
ûû- .
)
ûû. /
;
ûû/ 0
hasta
üü 
=
üü 
desde
üü 
.
üü 
AddDays
üü %
(
üü% &
$num
üü& '
)
üü' (
.
üü( )
AddMilliseconds
üü) 8
(
üü8 9
-
üü9 :
$num
üü: ;
)
üü; <
;
üü< =
return
°° !
MovimientoEconomico
°° *
.
°°* +
Convert
°°+ 2
(
°°2 3$
transaccionRepositorio
°°3 I
.
°°I JC
5ObtenerTransaccionesInclusiveActoresNegocioYPagoCuota
°°J 
(°° Ä#
TransaccionSettings°°Ä ì
.°°ì î
Default°°î õ
.°°õ ú9
)IdTipoTransaccionCobranzaFacturasClientes°°ú ≈
,°°≈ ∆"
AplicacionSettings°°« Ÿ
.°°Ÿ ⁄
Default°°⁄ ·
.°°· ‚
	TipoVenta°°‚ Î
,°°Î Ï!
ModoOperacionEnum°°Ì ˛
.°°˛ ˇ4
$VentaCobranzaCarteraClientesDigitada°°ˇ £
.°°£ §
ToString°°§ ¨
(°°¨ ≠
)°°≠ Æ
,°°Æ Ø
desde°°∞ µ
,°°µ ∂
hasta°°∑ º
)°°º Ω
.°°Ω æ
ToList°°æ ƒ
(°°ƒ ≈
)°°≈ ∆
)°°∆ «
;°°« »
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
e
££ 
)
££ 
{
§§ 
throw
•• 
new
•• 
LogicaException
•• )
(
••) *
String
••* 0
.
••0 1
Format
••1 7
(
••7 8
$str
••8 j
,
••j k
fecha
••l q
)
••q r
,
••r s
e
••t u
)
••u v
;
••v w
}
ßß 
}
®® 	
public
™™ 
List
™™ 
<
™™ #
ReciboDeIngresoEgreso
™™ )
>
™™) *2
$ObtenerRecibosDeCobranzaVentaMasivas
™™+ O
(
™™O P
DateTime
™™P X
fecha
™™Y ^
)
™™^ _
{
´´ 	
return
¨¨ 
null
¨¨ 
;
¨¨ 
}
ÆÆ 	
public
¥¥ ,
EstadoCuentaCliente_VentaCobro
¥¥ -5
'ObtenerDeudasMasivasDeCarteraDeClientes
¥¥. U
(
¥¥U V
int
¥¥V Y
idPuntoDeVenta
¥¥Z h
,
¥¥h i
int
¥¥j m
	idCliente
¥¥n w
,
¥¥w x
DateTime¥¥y Å

fechaDesde¥¥Ç å
,¥¥å ç
DateTime¥¥é ñ

fechaHasta¥¥ó °
)¥¥° ¢
{
µµ 	
DateTime
∂∂ 
?
∂∂ $
fechaUltimaVentaMasiva
∂∂ ,
=
∂∂- .$
transaccionRepositorio
∂∂/ E
.
∂∂E F1
#ObtenerFechaInicioUltimaTransaccion
∂∂F i
(
∂∂i j
idPuntoDeVenta
∂∂j x
,
∂∂x y"
TransaccionSettings∂∂z ç
.∂∂ç é
Default∂∂é ï
.∂∂ï ñ-
IdTipoTransaccionOrdenDeVenta∂∂ñ ≥
,∂∂≥ ¥
MaestroSettings∂∂µ ƒ
.∂∂ƒ ≈
Default∂∂≈ Ã
.∂∂Ã Õ0
 IdDetalleMaestroEstadoConfirmado∂∂Õ Ì
,∂∂Ì Ó

fechaDesde∂∂Ô ˘
.∂∂˘ ˙
Date∂∂˙ ˛
.∂∂˛ ˇ
AddDays∂∂ˇ Ü
(∂∂Ü á
$num∂∂á à
)∂∂à â
.∂∂â ä
AddMilliseconds∂∂ä ô
(∂∂ô ö
-∂∂ö õ
$num∂∂õ ú
)∂∂ú ù
,∂∂ù û
MaestroSettings∂∂ü Æ
.∂∂Æ Ø
Default∂∂Ø ∂
.∂∂∂ ∑2
"IdDetalleMaestroParametroTipoVenta∂∂∑ Ÿ
,∂∂Ÿ ⁄
(∂∂€ ‹
(∂∂‹ ›
int∂∂› ‡
)∂∂‡ ·!
ModoOperacionEnum∂∂· Ú
.∂∂Ú Û4
$VentaCobranzaCarteraClientesDigitada∂∂Û ó
)∂∂ó ò
.∂∂ò ô
ToString∂∂ô °
(∂∂° ¢
)∂∂¢ £
)∂∂£ §
;∂∂§ •
DateTime
∑∑ 
?
∑∑ !
fechaUltimaCobranza
∑∑ )
=
∑∑* +$
transaccionRepositorio
∑∑, B
.
∑∑B C[
LObtenerFechaUltimaTransaccionDeAlgunoDeLosActoresVinculadosSegunTransaccion1∑∑C è
(∑∑è ê
idPuntoDeVenta∑∑ê û
,∑∑û ü#
TransaccionSettings∑∑† ≥
.∑∑≥ ¥
Default∑∑¥ ª
.∑∑ª º9
)IdTipoTransaccionCobranzaFacturasClientes∑∑º Â
,∑∑Â Ê

fechaDesde∑∑Á Ò
.∑∑Ò Ú
Date∑∑Ú ˆ
.∑∑ˆ ˜
AddDays∑∑˜ ˛
(∑∑˛ ˇ
$num∑∑ˇ Ä
)∑∑Ä Å
.∑∑Å Ç
AddMilliseconds∑∑Ç ë
(∑∑ë í
-∑∑í ì
$num∑∑ì î
)∑∑î ï
)∑∑ï ñ
;∑∑ñ ó
var
∏∏ 

fechaDeuda
∏∏ 
=
∏∏ 
(
∏∏ $
fechaUltimaVentaMasiva
∏∏ 4
==
∏∏5 7
null
∏∏8 <
&&
∏∏= ?!
fechaUltimaCobranza
∏∏@ S
==
∏∏T V
null
∏∏W [
)
∏∏[ \
?
∏∏] ^

fechaDesde
∏∏_ i
:
∏∏j k
(
∏∏l m%
fechaUltimaVentaMasiva∏∏m É
!=∏∏Ñ Ü
null∏∏á ã
&&∏∏å é#
fechaUltimaCobranza∏∏è ¢
!=∏∏£ •
null∏∏¶ ™
)∏∏™ ´
?∏∏¨ ≠
(∏∏Æ Ø
(∏∏Ø ∞
DateTime∏∏∞ ∏
)∏∏∏ π
(∏∏π ∫
DateTime∏∏∫ ¬
.∏∏¬ √
Compare∏∏√  
(∏∏  À
(∏∏À Ã
DateTime∏∏Ã ‘
)∏∏‘ ’&
fechaUltimaVentaMasiva∏∏’ Î
,∏∏Î Ï
(∏∏Ì Ó
DateTime∏∏Ó ˆ
)∏∏ˆ ˜#
fechaUltimaCobranza∏∏˜ ä
)∏∏ä ã
>∏∏å ç
$num∏∏é è
?∏∏ê ë&
fechaUltimaVentaMasiva∏∏í ®
:∏∏© ™#
fechaUltimaCobranza∏∏´ æ
)∏∏æ ø
)∏∏ø ¿
.∏∏¿ ¡
AddMilliseconds∏∏¡ –
(∏∏– —
$num∏∏— “
)∏∏“ ”
:∏∏‘ ’
(∏∏÷ ◊
(∏∏◊ ÿ
DateTime∏∏ÿ ‡
)∏∏‡ ·
(∏∏· ‚&
fechaUltimaVentaMasiva∏∏‚ ¯
!=∏∏˘ ˚
null∏∏¸ Ä
?∏∏Å Ç&
fechaUltimaVentaMasiva∏∏É ô
:∏∏ö õ#
fechaUltimaCobranza∏∏ú Ø
)∏∏Ø ∞
)∏∏∞ ±
.∏∏± ≤
AddMilliseconds∏∏≤ ¡
(∏∏¡ ¬
$num∏∏¬ √
)∏∏√ ƒ
;∏∏ƒ ≈
var
∫∫ 
deudaDeCliente
∫∫ 
=
∫∫  $
transaccionRepositorio
∫∫! 7
.
∫∫7 8&
ObtenerDeudaActorNegocio
∫∫8 P
(
∫∫P Q
	idCliente
∫∫Q Z
,
∫∫Z [

fechaDesde
∫∫\ f
)
∫∫f g
;
∫∫g h
var
ªª 
deudaAnterior
ªª 
=
ªª 
deudaDeCliente
ªª  .
==
ªª/ 1
null
ªª2 6
?
ªª7 8
$num
ªª9 :
:
ªª; <
deudaDeCliente
ªª= K
.
ªªK L

TotalOrden
ªªL V
-
ªªW X
deudaDeCliente
ªªY g
.
ªªg h
TotalPagoCuota
ªªh v
;
ªªv w
var
øø .
 detallesDeEstadoDeCuentaDeVentas
øø 0
=
øø1 2$
transaccionRepositorio
øø3 I
.
øøI J5
'ObtenerDetallesEstadoCuentaClienteVenta
øøJ q
(
øøq r!
TransaccionSettings
¿¿ #
.
¿¿# $
Default
¿¿$ +
.
¿¿+ ,+
IdTipoTransaccionOrdenDeVenta
¿¿, I
,
¿¿I J
MaestroSettings
¿¿K Z
.
¿¿Z [
Default
¿¿[ b
.
¿¿b c/
 IdDetalleMaestroEstadoConfirmado¿¿c É
,¿¿É Ñ
	idCliente¿¿Ö é
,¿¿é è
MaestroSettings¿¿ê ü
.¿¿ü †
Default¿¿† ß
.¿¿ß ®2
"IdDetalleMaestroParametroTipoVenta¿¿®  
,¿¿  À
(¿¿Ã Õ
(¿¿Õ Œ
int¿¿Œ —
)¿¿— “!
ModoOperacionEnum¿¿“ „
.¿¿„ ‰4
$VentaCobranzaCarteraClientesDigitada¿¿‰ à
)¿¿à â
.¿¿â ä
ToString¿¿ä í
(¿¿í ì
)¿¿ì î
,¿¿î ï

fechaDesde¿¿ñ †
,¿¿† °

fechaHasta¿¿¢ ¨
)¿¿¨ ≠
.¿¿≠ Æ
ToList¿¿Æ ¥
(¿¿¥ µ
)¿¿µ ∂
;¿¿∂ ∑
var
¡¡ .
 detallesDeEstadoDeCuentaDeCobros
¡¡ 0
=
¡¡1 2$
transaccionRepositorio
¡¡3 I
.
¡¡I J5
'ObtenerDetallesEstadoCuentaClienteCobro
¡¡J q
(
¡¡q r!
TransaccionSettings
¬¬ #
.
¬¬# $
Default
¬¬$ +
.
¬¬+ ,7
)IdTipoTransaccionCobranzaFacturasClientes
¬¬, U
,
¬¬U V
	idCliente
¬¬W `
,
¬¬` a
MaestroSettings
¬¬b q
.
¬¬q r
Default
¬¬r y
.
¬¬y z1
"IdDetalleMaestroParametroTipoVenta¬¬z ú
,¬¬ú ù
(¬¬û ü
(¬¬ü †
int¬¬† £
)¬¬£ §!
ModoOperacionEnum¬¬§ µ
.¬¬µ ∂4
$VentaCobranzaCarteraClientesDigitada¬¬∂ ⁄
)¬¬⁄ €
.¬¬€ ‹
ToString¬¬‹ ‰
(¬¬‰ Â
)¬¬Â Ê
,¬¬Ê Á

fechaDesde¬¬Ë Ú
,¬¬Ú Û

fechaHasta¬¬Ù ˛
)¬¬˛ ˇ
.¬¬ˇ Ä
ToList¬¬Ä Ü
(¬¬Ü á
)¬¬á à
;¬¬à â
var
ƒƒ "
detallesEstadoCuenta
ƒƒ $
=
ƒƒ% &6
(ResolverDetallesEstadoDeCuentaVentaCobro
ƒƒ' O
(
ƒƒO P
deudaAnterior
ƒƒP ]
,
ƒƒ] ^.
 detallesDeEstadoDeCuentaDeVentas
ƒƒ_ 
,ƒƒ Ä0
 detallesDeEstadoDeCuentaDeCobrosƒƒÅ °
)ƒƒ° ¢
;ƒƒ¢ £
var
≈≈ 
resumen
≈≈ 
=
≈≈ 
new
≈≈ 3
%ResumenEstadoCuentaCliente_VentaCobro
≈≈ C
{
∆∆ 
SaldoAnterior
«« 
=
«« 
deudaAnterior
««  -
??
««. 0
$num
««1 2
,
««2 3
EntregaTotal
»» 
=
»» .
 detallesDeEstadoDeCuentaDeVentas
»» ?
==
»»@ B
null
»»C G
?
»»H I
$num
»»J K
:
»»L M.
 detallesDeEstadoDeCuentaDeVentas
»»N n
.
»»n o
Sum
»»o r
(
»»r s
d
»»s t
=>
»»u w
d
»»x y
.
»»y z
Importe»»z Å
)»»Å Ç
,»»Ç É

CobroTotal
…… 
=
…… .
 detallesDeEstadoDeCuentaDeCobros
…… =
==
……> @
null
……A E
?
……F G
$num
……H I
:
……J K.
 detallesDeEstadoDeCuentaDeCobros
……L l
.
……l m
Sum
……m p
(
……p q
d
……q r
=>
……s u
d
……v w
.
……w x
Cobro
……x }
)
……} ~
}
   
;
   
resumen
ÀÀ 
.
ÀÀ 

SaldoFinal
ÀÀ 
=
ÀÀ  
resumen
ÀÀ! (
.
ÀÀ( )
EntregaTotal
ÀÀ) 5
-
ÀÀ6 7
resumen
ÀÀ8 ?
.
ÀÀ? @

CobroTotal
ÀÀ@ J
;
ÀÀJ K
var
ÃÃ !
estadoCuentaCliente
ÃÃ #
=
ÃÃ$ %
new
ÃÃ& ),
EstadoCuentaCliente_VentaCobro
ÃÃ* H
{
ÕÕ 
	IdCliente
ŒŒ 
=
ŒŒ 
	idCliente
ŒŒ %
,
ŒŒ% &
Resumen
œœ 
=
œœ 
resumen
œœ !
,
œœ! "
Detalles
–– 
=
–– "
detallesEstadoCuenta
–– /
}
—— 
;
—— 
return
““ !
estadoCuentaCliente
““ &
;
““& '
}
”” 	
public
÷÷ 
List
÷÷ 
<
÷÷ 3
%DetalleEstadoCuentaCliente_VentaCobro
÷÷ 9
>
÷÷9 :6
(ResolverDetallesEstadoDeCuentaVentaCobro
÷÷; c
(
÷÷c d
decimal
÷÷d k
?
÷÷k l
deudaAnterior
÷÷m z
,
÷÷z {
List÷÷| Ä
<÷÷Ä Å,
DetalleTransaccionVentaCobro÷÷Å ù
>÷÷ù û0
 detallesDeEstadoDeCuentaDeVentas÷÷ü ø
,÷÷ø ¿
List÷÷¡ ≈
<÷÷≈ ∆,
DetalleTransaccionVentaCobro÷÷∆ ‚
>÷÷‚ „0
 detallesDeEstadoDeCuentaDeCobros÷÷‰ Ñ
)÷÷Ñ Ö
{
◊◊ 	
var
ÿÿ 
idsOperacion
ÿÿ 
=
ÿÿ .
 detallesDeEstadoDeCuentaDeVentas
ÿÿ ?
.
ÿÿ? @
Select
ÿÿ@ F
(
ÿÿF G
d
ÿÿG H
=>
ÿÿI K
d
ÿÿL M
.
ÿÿM N
IdOperacion
ÿÿN Y
)
ÿÿY Z
.
ÿÿZ [
ToList
ÿÿ[ a
(
ÿÿa b
)
ÿÿb c
;
ÿÿc d
idsOperacion
ŸŸ 
.
ŸŸ 
AddRange
ŸŸ !
(
ŸŸ! ".
 detallesDeEstadoDeCuentaDeCobros
ŸŸ" B
.
ŸŸB C
Select
ŸŸC I
(
ŸŸI J
d
ŸŸJ K
=>
ŸŸL N
d
ŸŸO P
.
ŸŸP Q
IdOperacion
ŸŸQ \
)
ŸŸ\ ]
.
ŸŸ] ^
ToList
ŸŸ^ d
(
ŸŸd e
)
ŸŸe f
)
ŸŸf g
;
ŸŸg h
idsOperacion
⁄⁄ 
=
⁄⁄ 
idsOperacion
⁄⁄ '
.
⁄⁄' (
Distinct
⁄⁄( 0
(
⁄⁄0 1
)
⁄⁄1 2
.
⁄⁄2 3
ToList
⁄⁄3 9
(
⁄⁄9 :
)
⁄⁄: ;
;
⁄⁄; <
List
€€ 
<
€€ 3
%DetalleEstadoCuentaCliente_VentaCobro
€€ 6
>
€€6 7"
detallesEstadoCuenta
€€8 L
=
€€M N
new
€€O R
List
€€S W
<
€€W X3
%DetalleEstadoCuentaCliente_VentaCobro
€€X }
>
€€} ~
(
€€~ 
)€€ Ä
;€€Ä Å
foreach
‹‹ 
(
‹‹ 
var
‹‹ 
idOperacion
‹‹ $
in
‹‹% '
idsOperacion
‹‹( 4
)
‹‹4 5
{
›› 
var
ﬁﬁ 
detallesVenta
ﬁﬁ !
=
ﬁﬁ" #.
 detallesDeEstadoDeCuentaDeVentas
ﬁﬁ$ D
.
ﬁﬁD E
Where
ﬁﬁE J
(
ﬁﬁJ K
d
ﬁﬁK L
=>
ﬁﬁM O
d
ﬁﬁP Q
.
ﬁﬁQ R
IdOperacion
ﬁﬁR ]
==
ﬁﬁ^ `
idOperacion
ﬁﬁa l
)
ﬁﬁl m
.
ﬁﬁm n
ToList
ﬁﬁn t
(
ﬁﬁt u
)
ﬁﬁu v
;
ﬁﬁv w
var
ﬂﬂ 
detalleCobro
ﬂﬂ  
=
ﬂﬂ! ".
 detallesDeEstadoDeCuentaDeCobros
ﬂﬂ# C
.
ﬂﬂC D
SingleOrDefault
ﬂﬂD S
(
ﬂﬂS T
d
ﬂﬂT U
=>
ﬂﬂV X
d
ﬂﬂY Z
.
ﬂﬂZ [
IdOperacion
ﬂﬂ[ f
==
ﬂﬂg i
idOperacion
ﬂﬂj u
)
ﬂﬂu v
;
ﬂﬂv w
var
‡‡ 
saldoAnterior
‡‡ !
=
‡‡" #"
detallesEstadoCuenta
‡‡$ 8
.
‡‡8 9
Count
‡‡9 >
(
‡‡> ?
)
‡‡? @
==
‡‡A C
$num
‡‡D E
?
‡‡F G
deudaAnterior
‡‡H U
??
‡‡V X
$num
‡‡Y Z
:
‡‡[ \"
detallesEstadoCuenta
‡‡] q
.
‡‡q r
Last
‡‡r v
(
‡‡v w
)
‡‡w x
.
‡‡x y
Saldo
‡‡y ~
;
‡‡~ 
if
·· 
(
·· 
detallesVenta
·· !
!=
··" $
null
··% )
&&
··* ,
detallesVenta
··- :
.
··: ;
Count
··; @
(
··@ A
)
··A B
>
··C D
$num
··E F
)
··F G
{
‚‚ 
List
„„ 
<
„„ 
DetalleDeVenta
„„ '
>
„„' (
detalleDeVentas
„„) 8
=
„„9 :
new
„„; >
List
„„? C
<
„„C D
DetalleDeVenta
„„D R
>
„„R S
(
„„S T
)
„„T U
;
„„U V
foreach
‰‰ 
(
‰‰ 
var
‰‰  
item
‰‰! %
in
‰‰& (
detallesVenta
‰‰) 6
)
‰‰6 7
{
ÂÂ 
detalleDeVentas
ÊÊ '
.
ÊÊ' (
Add
ÊÊ( +
(
ÊÊ+ ,
new
ÊÊ, /
DetalleDeVenta
ÊÊ0 >
(
ÊÊ> ?
)
ÊÊ? @
{
ÁÁ 
Codigo
ËË "
=
ËË# $
item
ËË% )
.
ËË) *
Codigo
ËË* 0
,
ËË0 1
Concepto
ÈÈ $
=
ÈÈ% &
item
ÈÈ' +
.
ÈÈ+ ,
Concepto
ÈÈ, 4
,
ÈÈ4 5
Cantidad
ÍÍ $
=
ÍÍ% &
item
ÍÍ' +
.
ÍÍ+ ,
Cantidad
ÍÍ, 4
,
ÍÍ4 5
Importe
ÎÎ #
=
ÎÎ$ %
item
ÎÎ& *
.
ÎÎ* +
Importe
ÎÎ+ 2
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 3
%DetalleEstadoCuentaCliente_VentaCobro
ÓÓ 9(
detalleEstadoCuentaCliente
ÓÓ: T
=
ÓÓU V
new
ÓÓW Z4
%DetalleEstadoCuentaCliente_VentaCobroÓÓ[ Ä
{
ÔÔ 
IdOperacion
 #
=
$ %
idOperacion
& 1
,
1 2
Fecha
ÒÒ 
=
ÒÒ 
detallesVenta
ÒÒ  -
.
ÒÒ- .
First
ÒÒ. 3
(
ÒÒ3 4
)
ÒÒ4 5
.
ÒÒ5 6
Fecha
ÒÒ6 ;
,
ÒÒ; <
SaldoAnterior
ÚÚ %
=
ÚÚ& '
saldoAnterior
ÚÚ( 5
,
ÚÚ5 6
DetallesDeVenta
ÛÛ '
=
ÛÛ( )
detalleDeVentas
ÛÛ* 9
,
ÛÛ9 :
Total
ÙÙ 
=
ÙÙ 
detalleDeVentas
ÙÙ  /
.
ÙÙ/ 0
Sum
ÙÙ0 3
(
ÙÙ3 4
d
ÙÙ4 5
=>
ÙÙ6 8
d
ÙÙ9 :
.
ÙÙ: ;
Importe
ÙÙ; B
)
ÙÙB C
,
ÙÙC D
Cobro
ıı 
=
ıı 
detalleCobro
ıı  ,
==
ıı- /
null
ıı0 4
?
ıı5 6
$num
ıı7 8
:
ıı9 :
detalleCobro
ıı; G
.
ııG H
Cobro
ııH M
,
ııM N
Saldo
ˆˆ 
=
ˆˆ 
saldoAnterior
ˆˆ  -
+
ˆˆ. /
detalleDeVentas
ˆˆ0 ?
.
ˆˆ? @
Sum
ˆˆ@ C
(
ˆˆC D
d
ˆˆD E
=>
ˆˆF H
d
ˆˆI J
.
ˆˆJ K
Importe
ˆˆK R
)
ˆˆR S
-
ˆˆT U
(
ˆˆV W
detalleCobro
ˆˆW c
==
ˆˆd f
null
ˆˆg k
?
ˆˆl m
$num
ˆˆn o
:
ˆˆp q
detalleCobro
ˆˆr ~
.
ˆˆ~ 
Cobroˆˆ Ñ
)ˆˆÑ Ö
}
˜˜ 
;
˜˜ "
detallesEstadoCuenta
¯¯ (
.
¯¯( )
Add
¯¯) ,
(
¯¯, -(
detalleEstadoCuentaCliente
¯¯- G
)
¯¯G H
;
¯¯H I
}
˘˘ 
else
˙˙ 
{
˚˚ 
List
¸¸ 
<
¸¸ 
DetalleDeVenta
¸¸ '
>
¸¸' (
detalleDeVentas
¸¸) 8
=
¸¸9 :
new
¸¸; >
List
¸¸? C
<
¸¸C D
DetalleDeVenta
¸¸D R
>
¸¸R S
(
¸¸S T
)
¸¸T U
{
¸¸U V
new
˝˝ 
DetalleDeVenta
˝˝ *
(
˝˝* +
)
˝˝+ ,
{
˛˛ 
Codigo
ˇˇ "
=
ˇˇ# $
$str
ˇˇ% (
,
ˇˇ( )
Concepto
ÄÄ $
=
ÄÄ% &
$str
ÄÄ' *
,
ÄÄ* +
Cantidad
ÅÅ $
=
ÅÅ% &
$num
ÅÅ' (
,
ÅÅ( )
Importe
ÇÇ #
=
ÇÇ$ %
$num
ÇÇ& '
}
ÉÉ 
}
ÑÑ 
;
ÑÑ 3
%DetalleEstadoCuentaCliente_VentaCobro
ÜÜ 9(
detalleEstadoCuentaCliente
ÜÜ: T
=
ÜÜU V
new
ÜÜW Z4
%DetalleEstadoCuentaCliente_VentaCobroÜÜ[ Ä
{
áá 
IdOperacion
àà #
=
àà$ %
idOperacion
àà& 1
,
àà1 2
Fecha
ââ 
=
ââ 
detalleCobro
ââ  ,
.
ââ, -
Fecha
ââ- 2
,
ââ2 3
SaldoAnterior
ää %
=
ää& '
saldoAnterior
ää( 5
,
ää5 6
DetallesDeVenta
ãã '
=
ãã( )
detalleDeVentas
ãã* 9
,
ãã9 :
Cobro
åå 
=
åå 
detalleCobro
åå  ,
==
åå- /
null
åå0 4
?
åå5 6
$num
åå7 8
:
åå9 :
detalleCobro
åå; G
.
ååG H
Cobro
ååH M
,
ååM N
Saldo
çç 
=
çç 
saldoAnterior
çç  -
-
çç. /
(
çç0 1
detalleCobro
çç1 =
==
çç> @
null
ççA E
?
ççF G
$num
ççH I
:
ççJ K
detalleCobro
ççL X
.
ççX Y
Cobro
ççY ^
)
çç^ _
}
éé 
;
éé "
detallesEstadoCuenta
èè (
.
èè( )
Add
èè) ,
(
èè, -(
detalleEstadoCuentaCliente
èè- G
)
èèG H
;
èèH I
}
êê 
}
ëë 
return
íí "
detallesEstadoCuenta
íí '
;
íí' (
}
ìì 	
}
•• 
}¶¶ €
ID:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Core\VentaUtilitarioLogica.cs
	namespace		 	
Tsp		
 
.		 
Sigescom		 
.		 
Logica		 
.		 
Sigescom		 &
{

 
public 

class !
VentaUtilitarioLogica &
:' ("
IVentaUtilitarioLogica) ?
{ 
public 
bool *
ObtenerCamposEditablesEnVentas 2
(2 3
string3 9#
mascaraDeFormaDeCalculo: Q
,Q R)
ElementoDeCalculoEnVentasEnumS p
ordenq v
)v w
{ 	
List 
< 
int 
> 
mascaraCamposInt &
=' (#
mascaraDeFormaDeCalculo) @
.@ A
SelectA G
(G H
digitoH N
=>O Q
intR U
.U V
ParseV [
([ \
digito\ b
.b c
ToStringc k
(k l
)l m
)m n
)n o
.o p
ToListp v
(v w
)w x
;x y
return 
Convert 
. 
	ToBoolean $
($ %
mascaraCamposInt% 5
[5 6
(6 7
int7 :
): ;
orden; @
]@ A
)A B
;B C
} 	
public 
bool +
ObtenerFormasDeCalculosEnVentas 3
(3 4
string4 :#
mascaraDeFormaDeCalculo; R
,R S)
ElementoDeCalculoEnVentasEnumT q
ordenr w
,w x*
ElementoDeCalculoEnVentasEnum	y ñ
valor
ó ú
)
ú ù
{ 	
List 
< 
int 
> 
mascaraFormasInt &
=' (#
mascaraDeFormaDeCalculo) @
.@ A
SelectA G
(G H
digitoH N
=>O Q
intR U
.U V
ParseV [
([ \
digito\ b
.b c
ToStringc k
(k l
)l m
)m n
)n o
.o p
ToListp v
(v w
)w x
;x y
return 
mascaraFormasInt #
[# $
($ %
int% (
)( )
orden) .
]. /
==0 2
(3 4
int4 7
)7 8
valor8 =
;= >
} 	
} 
} P
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\EFactura\IEstablecimiento_Datos.cs¬Ü
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelExtranet_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
List 
< 
RoomType 
> 
ObtenerRoomType -
(- .
). /
{ 	
try 
{ 
return 
_hotelRepositorio (
.( )
ObtenerRoomType) 8
(8 9
)9 :
.: ;
ToList; A
(A B
)B C
;C D
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* `
,` a
eb c
)c d
;d e
} 
} 	
public   
List   
<   
RoomType   
>   '
ObtenerRoomTypesDisponibles   9
(  9 :
DateBooking  : E
dateBooking  F Q
)  Q R
{!! 	
List"" 
<"" 
RoomType"" 
>"" 
	roomTypes"" $
=""% &
new""' *
List""+ /
<""/ 0
RoomType""0 8
>""8 9
(""9 :
)"": ;
;""; <
try## 
{$$ 
List%% 
<%% 
ItemGenerico%% !
>%%! "&
tipoDeHabitacionesVigentes%%# =
=%%> ?6
*ObtenerTiposHabitacionVigentesSimplificado%%@ j
(%%j k
)%%k l
;%%l m
foreach&& 
(&& 
var&& 
tipoDeHabitacion&& -
in&&. 0&
tipoDeHabitacionesVigentes&&1 K
)&&K L
{'' 
List(( 
<(( 

Habitacion(( #
>((# $"
habitacionesDisponible((% ;
=((< =)
BuscarHabitacionesDisponibles((> [
((([ \
tipoDeHabitacion((\ l
.((l m
Id((m o
,((o p
dateBooking((q |
.((| }
	EntryDate	((} Ü
,
((Ü á
dateBooking
((à ì
.
((ì î
DepartureDate
((î °
,
((° ¢
dateBooking
((£ Æ
.
((Æ Ø
IdEstablishment
((Ø æ
)
((æ ø
;
((ø ¿
if)) 
()) "
habitacionesDisponible)) .
!=))/ 1
null))2 6
)))6 7
{** 
	roomTypes++ !
.++! "
Add++" %
(++% &
new++& )
RoomType++* 2
{++3 4
Id++5 7
=++8 9
tipoDeHabitacion++: J
.++J K
Id++K M
,++M N
Name++O S
=++T U
tipoDeHabitacion++V f
.++f g
Nombre++g m
,++m n
AvailabilityAmount	++o Å
=
++Ç É$
habitacionesDisponible
++Ñ ö
.
++ö õ
Count
++õ †
}
++° ¢
)
++¢ £
;
++£ §
},, 
}-- 
return.. 
	roomTypes..  
;..  !
}// 
catch00 
(00 
	Exception00 
e00 
)00 
{11 
throw22 
new22 
LogicaException22 )
(22) *
$str22* `
,22` a
e22b c
)22c d
;22d e
}33 
}44 	
public55 
OperationResult55 
RegistrarBooking55 /
(55/ 0
Booking550 7
booking558 ?
,55? @"
UserProfileSessionData55A W
sesion55X ^
)55^ _
{66 	
try77 
{88 
OperationResult99 
	resultado99  )
=99* +
new99, /
OperationResult990 ?
(99? @
)99@ A
;99A B
var;; 
idClienteReserva;; $
=;;% &
_logicaActorNegocio;;' :
.;;: ;*
ResolverYObtenerActorComercial;;; Y
(;;Y Z
ActorSettings;;Z g
.;;g h
Default;;h o
.;;o p
IdRolCliente;;p |
,;;| }9
,ConvertirPersonalDataARegistroActorComercial	;;~ ™
(
;;™ ´
booking
;;´ ≤
.
;;≤ ≥
PersonalData
;;≥ ø
)
;;ø ¿
)
;;¿ ¡
.
;;¡ ¬
Id
;;¬ ƒ
;
;;ƒ ≈
AtencionMacroHotel== "
atencionMacroHotel==# 5
===6 7*
ConvertirBookingAAtencionHotel==8 V
(==V W
booking==W ^
,==^ _
idClienteReserva==` p
)==p q
;==q r
List>> 
<>> 
AtencionHotel>> "
>>>" #
atencionesHotel>>$ 3
=>>4 5
new>>6 9
List>>: >
<>>> ?
AtencionHotel>>? L
>>>L M
(>>M N
)>>N O
;>>O P
var@@ #
grupoDeTipoHabitaciones@@ +
=@@, -
booking@@. 5
.@@5 6
	RoomTypes@@6 ?
.@@? @
GroupBy@@@ G
(@@G H
t@@H I
=>@@J L
t@@M N
.@@N O
Id@@O Q
)@@Q R
.@@R S
Select@@S Y
(@@Y Z
id@@Z \
=>@@] _
id@@` b
.@@b c
ToList@@c i
(@@i j
)@@j k
)@@k l
.@@l m
ToList@@m s
(@@s t
)@@t u
;@@u v
foreachAA 
(AA 
varAA 
tipoHabitacionAA +
inAA, .#
grupoDeTipoHabitacionesAA/ F
)AAF G
{BB 
ListCC 
<CC 

HabitacionCC #
>CC# $"
habitacionesDisponibleCC% ;
=CC< =)
BuscarHabitacionesDisponiblesCC> [
(CC[ \
tipoHabitacionCC\ j
[CCj k
$numCCk l
]CCl m
.CCm n
IdCCn p
,CCp q
bookingCCr y
.CCy z
DateBooking	CCz Ö
.
CCÖ Ü
	EntryDate
CCÜ è
,
CCè ê
booking
CCë ò
.
CCò ô
DateBooking
CCô §
.
CC§ •
DepartureDate
CC• ≤
,
CC≤ ≥
booking
CC¥ ª
.
CCª º
IdFilial
CCº ƒ
)
CCƒ ≈
;
CC≈ ∆
ifEE 
(EE "
habitacionesDisponibleEE .
.EE. /
CountEE/ 4
>=EE5 7
tipoHabitacionEE8 F
.EEF G
CountEEG L
)EEL M
{FF 
forHH 
(HH 
intHH  
iHH! "
=HH# $
$numHH% &
;HH& '
iHH( )
<HH* +
tipoHabitacionHH, :
.HH: ;
CountHH; @
;HH@ A
iHHB C
++HHC E
)HHE F
{II 
atencionesHotelJJ +
.JJ+ ,
AddJJ, /
(JJ/ 0
newJJ0 3
AtencionHotelJJ4 A
{KK 
FechaIngresoLL  ,
=LL- .
bookingLL/ 6
.LL6 7
DateBookingLL7 B
.LLB C
	EntryDateLLC L
,LLL M
FechaSalidaMM  +
=MM, -
bookingMM. 5
.MM5 6
DateBookingMM6 A
.MMA B
DepartureDateMMB O
,MMO P
NochesNN  &
=NN' (
bookingNN) 0
.NN0 1
DateBookingNN1 <
.NN< =
DepartureDateNN= J
.NNJ K
DayNNK N
-NNO P
bookingNNQ X
.NNX Y
DateBookingNNY d
.NNd e
	EntryDateNNe n
.NNn o
DayNNo r
,NNr s
PrecioUnitarioOO  .
=OO/ 0
tipoHabitacionOO1 ?
[OO? @
iOO@ A
]OOA B
.OOB C

PriceValueOOC M
,OOM N
ImportePP  '
=PP( )
(PP* +
bookingPP+ 2
.PP2 3
DateBookingPP3 >
.PP> ?
DepartureDatePP? L
.PPL M
DayPPM P
-PPQ R
bookingPPS Z
.PPZ [
DateBookingPP[ f
.PPf g
	EntryDatePPg p
.PPp q
DayPPq t
)PPt u
*PPv w
tipoHabitacion	PPx Ü
[
PPÜ á
i
PPá à
]
PPà â
.
PPâ ä

PriceValue
PPä î
,
PPî ï

HabitacionQQ  *
=QQ+ ,"
habitacionesDisponibleQQ- C
[QQC D
iQQD E
]QQE F
,QQF G
}RR 
)RR 
;RR 
}SS 
}TT 
elseUU 
{VV 
throwWW 
newWW !
LogicaExceptionWW" 1
(WW1 2
$str	WW2 Ñ
)
WWÑ Ö
;
WWÖ Ü
}XX 
}YY 
atencionMacroHotelZZ "
.ZZ" #

AtencionesZZ# -
=ZZ. /
atencionesHotelZZ0 ?
;ZZ? @
return[[ "
RegistrarAtencionMacro[[ -
([[- .
atencionMacroHotel[[. @
,[[@ A
sesion[[B H
)[[H I
;[[I J
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* I
,__I J
e__K L
)__L M
;__M N
}`` 
}aa 	
publicbb "
RegistroActorComercialbb %8
,ConvertirPersonalDataARegistroActorComercialbb& R
(bbR S
PersonalDatabbS _
personalDatabb` l
)bbl m
{cc 	
vardd 
Responsabledd 
=dd 
newdd !"
RegistroActorComercialdd" 8
{ee "
TipoDocumentoIdentidadff &
=ff' (
newff) ,
ItemGenericoff- 9
(ff9 :
personalDataff: F
.ffF G
IdTypeDocumentffG U
)ffU V
,ffV W$
NumeroDocumentoIdentidadgg (
=gg) *
personalDatagg+ 7
.gg7 8
DocumentNumbergg8 F
,ggF G
ApellidoPaternohh 
=hh  !
personalDatahh" .
.hh. /
NameCompletehh/ ;
,hh; <
ApellidoMaternoii 
=ii  !
personalDataii" .
.ii. /
NameCompleteii/ ;
,ii; <
Nombresjj 
=jj 
personalDatajj &
.jj& '
NameCompletejj' 3
,jj3 4
NombreComercialkk 
=kk  !
personalDatakk" .
.kk. /
NameCompletekk/ ;
+kk< =
$strkk> A
+kkB C
personalDatakkD P
.kkP Q
NameCompletekkQ ]
+kk^ _
$strkk` c
+kkd e
personalDatakkf r
.kkr s
NameCompletekks 
,	kk Ä
Correoll 
=ll 
personalDatall %
.ll% &
Emailll& +
,ll+ ,
Telefonomm 
=mm 
personalDatamm '
.mm' (
Phonemm( -
,mm- .
Nacionalidadnn 
=nn 
newnn "
ItemGenericonn# /
(nn/ 0
personalDatann0 <
.nn< =
	IdCountrynn= F
)nnF G
,nnG H
DomicilioFiscaloo 
=oo  !
newoo" %

Direccion_oo& 0
(oo0 1
)oo1 2
{pp 
Paisqq 
=qq 
newqq 
ItemGenericoqq +
(qq+ ,
personalDataqq, 8
.qq8 9
	IdCountryqq9 B
)qqB C
,qqC D
Ubigeorr 
=rr 
newrr  
ItemGenericorr! -
(rr- .
personalDatarr. :
.rr: ;

IdDistrictrr; E
)rrE F
,rrF G
Detalless 
=ss 
personalDatass *
.ss* +
HomeAddressss+ 6
}tt 
}uu 
;uu 
returnvv 
Responsablevv 
;vv 
}ww 	
publicxx 
AtencionMacroHotelxx !*
ConvertirBookingAAtencionHotelxx" @
(xx@ A
BookingxxA H
bookingxxI P
,xxP Q
intxxR U
idClienteReservaxxV f
)xxf g
{yy 	
AtencionMacroHotelzz 
atencionMacroHotelzz 1
=zz2 3
newzz4 7
AtencionMacroHotelzz8 J
{{{ 
Responsable|| 
=|| 
new|| !
ActorComercial_||" 1
{}} 
Id~~ 
=~~ 
idClienteReserva~~ )
,~~) *
} 
, 
FechaRegistro
ÄÄ 
=
ÄÄ 
booking
ÄÄ  '
.
ÄÄ' (
RegistrationDate
ÄÄ( 8
,
ÄÄ8 9
Total
ÅÅ 
=
ÅÅ 
booking
ÅÅ 
.
ÅÅ  

TotalPrice
ÅÅ  *
,
ÅÅ* +!
IdMedioPagoExtranet
ÇÇ #
=
ÇÇ$ %
booking
ÇÇ& -
.
ÇÇ- .
PaymentTrace
ÇÇ. :
.
ÇÇ: ;
IdPaymentMethod
ÇÇ; J
}
ÉÉ 
;
ÉÉ 
if
ÑÑ 
(
ÑÑ 
DiccionarioHotel
ÑÑ  
.
ÑÑ  !B
4IdsMediosDePagoParaGeneracionAutomaticaDeComprobante
ÑÑ! U
.
ÑÑU V
Contains
ÑÑV ^
(
ÑÑ^ _
booking
ÑÑ_ f
.
ÑÑf g
PaymentTrace
ÑÑg s
.
ÑÑs t
IdPaymentMethodÑÑt É
)ÑÑÉ Ñ
)ÑÑÑ Ö
{
ÖÖ  
atencionMacroHotel
ÜÜ "
.
ÜÜ" #
FacturadoGlobal
ÜÜ# 2
=
ÜÜ3 4
true
ÜÜ5 9
;
ÜÜ9 :
var
áá )
seriesComprobantePorDefecto
áá /
=
áá0 1%
_transaccionRepositorio
áá2 I
.
ááI J*
ObtenerIdsSeriesComprobantes
ááJ f
(
ááf g
new
áág j
int
áák n
[
áán o
]
ááo p
{
ááq r
HotelSettingsáás Ä
.ááÄ Å
DefaultááÅ à
.ááà âC
3IdComprobantePorDefectoParaFacturacionDesdeExtranetááâ º
}ááΩ æ
,ááæ ø
trueáá¿ ƒ
)ááƒ ≈
.áá≈ ∆
ToListáá∆ Ã
(ááÃ Õ
)ááÕ Œ
;ááŒ œ
if
àà 
(
àà )
seriesComprobantePorDefecto
àà /
==
àà0 2
null
àà3 7
||
àà8 :)
seriesComprobantePorDefecto
àà; V
.
ààV W
Count
ààW \
==
àà] _
$num
àà` a
)
ààa b
{
ââ 
throw
ää 
new
ää 
LogicaException
ää -
(
ää- .
$str
ää. e
)
ääe f
;
ääf g
}
ãã  
atencionMacroHotel
åå "
.
åå" #
Comprobante
åå# .
=
åå/ 0*
ConvertirBookingAComprobante
åå1 M
(
ååM N
booking
ååN U
,
ååU V
idClienteReserva
ååW g
,
ååg h*
seriesComprobantePorDefectoååi Ñ
[ååÑ Ö
$numååÖ Ü
]ååÜ á
)ååá à
;ååà â
}
çç 
if
éé 
(
éé 
booking
éé 
.
éé 
PaymentTrace
éé $
.
éé$ %
ImageVoucher
éé% 1
!=
éé2 4
null
éé5 9
)
éé9 :
{
èè  
atencionMacroHotel
êê "
.
êê" #&
HayImagenVoucherExtranet
êê# ;
=
êê< =
true
êê> B
;
êêB C 
atencionMacroHotel
ëë "
.
ëë" ##
ImagenVoucherExtranet
ëë# 8
=
ëë9 :
booking
ëë; B
.
ëëB C
PaymentTrace
ëëC O
.
ëëO P
ImageVoucher
ëëP \
;
ëë\ ]
}
íí 
return
ìì  
atencionMacroHotel
ìì %
;
ìì% &
}
îî 	
public
ïï !
DatosVentaIntegrada
ïï "*
ConvertirBookingAComprobante
ïï# ?
(
ïï? @
Booking
ïï@ G
booking
ïïH O
,
ïïO P
int
ïïQ T
idClienteReserva
ïïU e
,
ïïe f
int
ïïg j 
idSerieComprobante
ïïk }
)
ïï} ~
{
ññ 	
var
óó 
comprobante
óó 
=
óó 
new
óó !!
DatosVentaIntegrada
óó" 5
(
óó5 6
)
óó6 7
{
òò 
FechaRegistro
ôô 
=
ôô 
booking
ôô  '
.
ôô' (
RegistrationDate
ôô( 8
,
ôô8 9
EsVentaModoCaja
öö 
=
öö  !
false
öö" '
,
öö' (
MovimientoAlmacen
õõ !
=
õõ" #
new
õõ$ '&
DatosMovimientoDeAlmacen
õõ( @
(
õõ@ A
)
õõA B
{
õõC D0
"HayComprobanteDeSalidaDeMercaderia
õõE g
=
õõh i
false
õõj o
}
õõp q
,
õõq r
Orden
úú 
=
úú 
new
úú 
DatosOrdenVenta
úú +
(
úú+ ,
)
úú, -
{
ùù (
AplicarIGVCuandoEsAmazonia
ûû .
=
ûû/ 0
false
ûû1 6
,
ûû6 7
Cliente
üü 
=
üü 
new
üü !
ActorComercial_
üü" 1
(
üü1 2
)
üü2 3
{
†† 
Id
°° 
=
°° 
idClienteReserva
°° -
}
¢¢ 
,
¢¢ 
Comprobante
££ 
=
££  !
new
££" %#
ComprobanteDeNegocio_
££& ;
(
££; <
)
££< =
{
§§ 
Tipo
•• 
=
•• 
new
•• "
ItemGenerico
••# /
(
••/ 0
)
••0 1
{
••2 3
Id
••4 6
=
••7 8
HotelSettings
••9 F
.
••F G
Default
••G N
.
••N OB
3IdComprobantePorDefectoParaFacturacionDesdeExtranet••O Ç
}••É Ñ
,••Ñ Ö
Serie
¶¶ 
=
¶¶ 
new
¶¶  #
SerieComprobante_
¶¶$ 5
(
¶¶5 6
)
¶¶6 7
{
¶¶8 9
Id
¶¶: <
=
¶¶= > 
idSerieComprobante
¶¶? Q
}
¶¶R S
,
¶¶S T
}
ßß 
,
ßß 
Detalles
®® 
=
®® 
new
®® "
List
®®# '
<
®®' ( 
DetalleDeOperacion
®®( :
>
®®: ;
(
®®; <
)
®®< =
,
®®= >
EsVentaPasada
©© !
=
©©" #
false
©©$ )
,
©©) *
FechaEmision
™™  
=
™™! "
booking
™™# *
.
™™* +
RegistrationDate
™™+ ;
,
™™; <
DescuentoGlobal
´´ #
=
´´$ %
$num
´´& '
,
´´' (
Flete
¨¨ 
=
¨¨ 
$num
¨¨ 
,
¨¨ 
Icbper
≠≠ 
=
≠≠ 
$num
≠≠ 
,
≠≠ $
NumeroBolsasDePlastico
ÆÆ *
=
ÆÆ+ ,
$num
ÆÆ- .
,
ÆÆ. /
Observacion
ØØ 
=
ØØ  !
$str
ØØ" +
,
ØØ+ ,
Placa
∞∞ 
=
∞∞ 
$str
∞∞ 
,
∞∞ 
UnificarDetalles
±± $
=
±±% &
false
±±' ,
,
±±, -
}
≤≤ 
,
≤≤ 
Pago
≥≥ 
=
≥≥ 
new
≥≥ 
	DatosPago
≥≥ $
(
≥≥$ %
)
≥≥% &
{
¥¥ 

ModoDePago
µµ 
=
µµ  
ModoPago
µµ! )
.
µµ) *
Contado
µµ* 1
,
µµ1 2
Inicial
∂∂ 
=
∂∂ 
$num
∂∂ 
,
∂∂  
Traza
∑∑ 
=
∑∑ 
new
∑∑ 
TrazaDePago_
∑∑  ,
(
∑∑, -
)
∑∑- .
{
∏∏ 
MedioDePago
ππ #
=
ππ$ %
new
ππ& )
ItemGenerico
ππ* 6
{
ππ7 8
Id
ππ9 ;
=
ππ< =
booking
ππ> E
.
ππE F
PaymentTrace
ππF R
.
ππR S
IdPaymentMethod
ππS b
}
ππc d
,
ππd e
Info
∫∫ 
=
∫∫ 
new
∫∫ "
InfoPago
∫∫# +
{
∫∫, -
InformacionJson
∫∫. =
=
∫∫> ?
booking
∫∫@ G
.
∫∫G H
PaymentTrace
∫∫H T
.
∫∫T U$
JsonPaymentInformation
∫∫U k
}
∫∫l m
}
ªª 
}
ºº 
}
ΩΩ 
;
ΩΩ 
return
ææ 
comprobante
ææ 
;
ææ 
}
øø 	
public
¿¿ 
OperationResult
¿¿ $
RegistrarAtencionMacro
¿¿ 5
(
¿¿5 6 
AtencionMacroHotel
¿¿6 H
atencionMacro
¿¿I V
,
¿¿V W$
UserProfileSessionData
¿¿X n
sesionUsuario
¿¿o |
)
¿¿| }
{
¡¡ 	
try
¬¬ 
{
√√ 
OperationResult
ƒƒ 
	resultado
ƒƒ  )
=
ƒƒ* +
new
ƒƒ, /
OperationResult
ƒƒ0 ?
(
ƒƒ? @
)
ƒƒ@ A
;
ƒƒA B
int
≈≈ 
idEstado
≈≈ 
=
≈≈ 
DiccionarioHotel
≈≈ /
.
≈≈/ 0B
4IdsMediosDePagoParaGeneracionAutomaticaDeComprobante
≈≈0 d
.
≈≈d e
Contains
≈≈e m
(
≈≈m n
atencionMacro
≈≈n {
.
≈≈{ |"
IdMedioPagoExtranet≈≈| è
)≈≈è ê
?≈≈ë í
MaestroSettings≈≈ì ¢
.≈≈¢ £
Default≈≈£ ™
.≈≈™ ´0
 IdDetalleMaestroEstadoConfirmado≈≈´ À
:≈≈Ã Õ
MaestroSettings≈≈Œ ›
.≈≈› ﬁ
Default≈≈ﬁ Â
.≈≈Â Ê0
 IdDetalleMaestroEstadoRegistrado≈≈Ê Ü
;≈≈Ü á
Transaccion
∆∆ 
atencionDeHotel
∆∆ +
=
∆∆, -
atencionMacro
∆∆. ;
.
∆∆; <

Atenciones
∆∆< F
.
∆∆F G
Count
∆∆G L
(
∆∆L M
)
∆∆M N
>
∆∆O P
$num
∆∆Q R
?
∆∆S T-
GenerarTransaccionAtencionMacro
∆∆U t
(
∆∆t u
atencionMacro∆∆u Ç
,∆∆Ç É
sesionUsuario∆∆Ñ ë
,∆∆ë í
idEstado∆∆ì õ
,∆∆õ ú
$str∆∆ù —
)∆∆— “
:∆∆” ‘*
GenerarTransaccionAtencion∆∆’ Ô
(∆∆Ô 
atencionMacro∆∆ ˝
,∆∆˝ ˛
sesionUsuario∆∆ˇ å
,∆∆å ç
idEstado∆∆é ñ
,∆∆ñ ó
$str∆∆ò Ã
)∆∆Ã Õ
;∆∆Õ Œ
if
«« 
(
«« 
atencionMacro
«« !
.
««! "&
HayImagenVoucherExtranet
««" :
)
««: ;
{
»» $
SubirImagenExtranetFtp
…… *
(
……* +
atencionMacro
……+ 8
.
……8 9#
ImagenVoucherExtranet
……9 N
,
……N O
sesionUsuario
……P ]
,
……] ^
atencionDeHotel
……_ n
)
……n o
;
……o p
}
   
if
ÀÀ 
(
ÀÀ 
atencionMacro
ÀÀ !
.
ÀÀ! "
FacturadoGlobal
ÀÀ" 1
)
ÀÀ1 2
{
ÃÃ 
atencionMacro
ÕÕ !
.
ÕÕ! "
Comprobante
ÕÕ" -
.
ÕÕ- .
TransaccionOrigen
ÕÕ. ?
=
ÕÕ@ A
atencionDeHotel
ÕÕB Q
;
ÕÕQ R,
CompletarDatosGeneralesDeVenta
ŒŒ 2
(
ŒŒ2 3
atencionMacro
ŒŒ3 @
.
ŒŒ@ A
Comprobante
ŒŒA L
,
ŒŒL M
sesionUsuario
ŒŒN [
)
ŒŒ[ \
;
ŒŒ\ ]
atencionMacro
œœ !
.
œœ! "
Comprobante
œœ" -
.
œœ- .
Orden
œœ. 3
.
œœ3 4
Detalles
œœ4 <
=
œœ= >,
GenerarDetallesDeVentaAtencion
œœ? ]
(
œœ] ^
atencionMacro
œœ^ k
)
œœk l
;
œœl m
	resultado
–– 
=
–– 
_logicaOperacion
––  0
.
––0 1%
ConfirmarVentaIntegrada
––1 H
(
––H I
ModoOperacionEnum
––I Z
.
––Z [
PorMostrador
––[ g
,
––g h
sesionUsuario
––i v
,
––v w
atencionMacro––x Ö
.––Ö Ü
Comprobante––Ü ë
)––ë í
;––í ì
}
—— 
else
““ 
{
”” 
	resultado
‘‘ 
=
‘‘ %
_transaccionRepositorio
‘‘  7
.
‘‘7 8
CrearTransaccion
‘‘8 H
(
‘‘H I
atencionDeHotel
‘‘I X
)
‘‘X Y
;
‘‘Y Z
}
’’ 
return
÷÷ 
	resultado
÷÷  
;
÷÷  !
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
LogicaException
⁄⁄ )
(
⁄⁄) *
$str
⁄⁄* Z
,
⁄⁄Z [
e
⁄⁄\ ]
)
⁄⁄] ^
;
⁄⁄^ _
}
€€ 
}
‹‹ 	
public
›› 
void
›› $
SubirImagenExtranetFtp
›› *
(
››* +
string
››+ 1

fotoString
››2 <
,
››< =$
UserProfileSessionData
››> T
sesionUsuario
››U b
,
››b c
Transaccion
››d o
atencionDeHotel
››p 
)›› Ä
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
string
·· 
urlFtpImages
·· #
=
··$ %
HotelSettings
··& 3
.
··3 4
Default
··4 ;
.
··; <0
"ServidorFptComprobantePagoExtranet
··< ^
.
··^ _
Split
··_ d
(
··d e
$char
··e h
)
··h i
[
··i j
$num
··j k
]
··k l
;
··l m
string
‚‚ 
usuario
‚‚ 
=
‚‚  
HotelSettings
‚‚! .
.
‚‚. /
Default
‚‚/ 6
.
‚‚6 70
"ServidorFptComprobantePagoExtranet
‚‚7 Y
.
‚‚Y Z
Split
‚‚Z _
(
‚‚_ `
$char
‚‚` c
)
‚‚c d
[
‚‚d e
$num
‚‚e f
]
‚‚f g
;
‚‚g h
string
„„ 
password
„„ 
=
„„  !
HotelSettings
„„" /
.
„„/ 0
Default
„„0 7
.
„„7 80
"ServidorFptComprobantePagoExtranet
„„8 Z
.
„„Z [
Split
„„[ `
(
„„` a
$char
„„a d
)
„„d e
[
„„e f
$num
„„f g
]
„„g h
;
„„h i
string
‰‰ 
fileName
‰‰ 
=
‰‰  !
atencionDeHotel
‰‰" 1
.
‰‰1 2
codigo
‰‰2 8
+
‰‰9 :
$str
‰‰; A
;
‰‰A B
FtpWebRequest
ÂÂ 
request
ÂÂ %
=
ÂÂ& '
(
ÂÂ( )
FtpWebRequest
ÂÂ) 6
)
ÂÂ6 7

WebRequest
ÂÂ7 A
.
ÂÂA B
Create
ÂÂB H
(
ÂÂH I
urlFtpImages
ÂÂI U
+
ÂÂV W
$str
ÂÂX [
+
ÂÂ\ ]
sesionUsuario
ÂÂ^ k
.
ÂÂk l
Sede
ÂÂl p
.
ÂÂp q!
DocumentoIdentidadÂÂq É
+ÂÂÑ Ö
$strÂÂÜ â
+ÂÂä ã
fileNameÂÂå î
)ÂÂî ï
;ÂÂï ñ
request
ÊÊ 
.
ÊÊ 
Credentials
ÊÊ #
=
ÊÊ$ %
new
ÊÊ& )
NetworkCredential
ÊÊ* ;
(
ÊÊ; <
usuario
ÊÊ< C
,
ÊÊC D
password
ÊÊE M
)
ÊÊM N
;
ÊÊN O
request
ÁÁ 
.
ÁÁ 
Method
ÁÁ 
=
ÁÁ  
WebRequestMethods
ÁÁ! 2
.
ÁÁ2 3
Ftp
ÁÁ3 6
.
ÁÁ6 7

UploadFile
ÁÁ7 A
;
ÁÁA B
byte
ÈÈ 
[
ÈÈ 
]
ÈÈ 
	fileBytes
ÈÈ  
=
ÈÈ! "
Convert
ÈÈ# *
.
ÈÈ* +
FromBase64String
ÈÈ+ ;
(
ÈÈ; <

fotoString
ÈÈ< F
)
ÈÈF G
;
ÈÈG H
using
ÎÎ 
(
ÎÎ 
Stream
ÎÎ 

fileStream
ÎÎ (
=
ÎÎ) *
new
ÎÎ+ .
MemoryStream
ÎÎ/ ;
(
ÎÎ; <
	fileBytes
ÎÎ< E
)
ÎÎE F
)
ÎÎF G
using
ÏÏ 
(
ÏÏ 
Stream
ÏÏ 
	ftpStream
ÏÏ '
=
ÏÏ( )
request
ÏÏ* 1
.
ÏÏ1 2
GetRequestStream
ÏÏ2 B
(
ÏÏB C
)
ÏÏC D
)
ÏÏD E
{
ÌÌ 

fileStream
ÓÓ 
.
ÓÓ 
CopyTo
ÓÓ %
(
ÓÓ% &
	ftpStream
ÓÓ& /
)
ÓÓ/ 0
;
ÓÓ0 1
}
ÔÔ 
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
e
ÒÒ 
)
ÒÒ 
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ 
LogicaException
ÛÛ )
(
ÛÛ) *
$str
ÛÛ* m
,
ÛÛm n
e
ÛÛo p
)
ÛÛp q
;
ÛÛq r
}
ÙÙ 
}
ıı 	
private
ˆˆ 
void
ˆˆ *
ObtenerImagenVoucherExtranet
ˆˆ 1
(
ˆˆ1 2 
AtencionMacroHotel
ˆˆ2 D
atencionMacro
ˆˆE R
,
ˆˆR S$
UserProfileSessionData
ˆˆT j
sesionUsuario
ˆˆk x
)
ˆˆx y
{
˜˜ 	
try
¯¯ 
{
˘˘ 
string
˙˙ 
downloadUrl
˙˙ "
=
˙˙# $
HotelSettings
˙˙% 2
.
˙˙2 3
Default
˙˙3 :
.
˙˙: ;0
"ServidorFptComprobantePagoExtranet
˙˙; ]
.
˙˙] ^
Split
˙˙^ c
(
˙˙c d
$char
˙˙d g
)
˙˙g h
[
˙˙h i
$num
˙˙i j
]
˙˙j k
;
˙˙k l
string
˚˚ 
usuario
˚˚ 
=
˚˚  
HotelSettings
˚˚! .
.
˚˚. /
Default
˚˚/ 6
.
˚˚6 70
"ServidorFptComprobantePagoExtranet
˚˚7 Y
.
˚˚Y Z
Split
˚˚Z _
(
˚˚_ `
$char
˚˚` c
)
˚˚c d
[
˚˚d e
$num
˚˚e f
]
˚˚f g
;
˚˚g h
string
¸¸ 
password
¸¸ 
=
¸¸  !
HotelSettings
¸¸" /
.
¸¸/ 0
Default
¸¸0 7
.
¸¸7 80
"ServidorFptComprobantePagoExtranet
¸¸8 Z
.
¸¸Z [
Split
¸¸[ `
(
¸¸` a
$char
¸¸a d
)
¸¸d e
[
¸¸e f
$num
¸¸f g
]
¸¸g h
;
¸¸h i
var
˛˛ 
nombreArchivo
˛˛ !
=
˛˛" #
atencionMacro
˛˛$ 1
.
˛˛1 2
Codigo
˛˛2 8
+
˛˛9 :
$str
˛˛; A
;
˛˛A B
FtpWebRequest
ˇˇ 
request
ˇˇ %
=
ˇˇ& '
(
ˇˇ( )
FtpWebRequest
ˇˇ) 6
)
ˇˇ6 7

WebRequest
ˇˇ7 A
.
ˇˇA B
Create
ˇˇB H
(
ˇˇH I
downloadUrl
ˇˇI T
+
ˇˇU V
$str
ˇˇW Z
+
ˇˇ[ \
sesionUsuario
ˇˇ] j
.
ˇˇj k
Sede
ˇˇk o
.
ˇˇo p!
DocumentoIdentidadˇˇp Ç
+ˇˇÉ Ñ
$strˇˇÖ à
+ˇˇâ ä
nombreArchivoˇˇã ò
)ˇˇò ô
;ˇˇô ö
request
ÄÄ 
.
ÄÄ 
Credentials
ÄÄ #
=
ÄÄ$ %
new
ÄÄ& )
NetworkCredential
ÄÄ* ;
(
ÄÄ; <
usuario
ÄÄ< C
,
ÄÄC D
password
ÄÄE M
)
ÄÄM N
;
ÄÄN O
request
ÅÅ 
.
ÅÅ 
Method
ÅÅ 
=
ÅÅ  
WebRequestMethods
ÅÅ! 2
.
ÅÅ2 3
Ftp
ÅÅ3 6
.
ÅÅ6 7
DownloadFile
ÅÅ7 C
;
ÅÅC D
request
ÇÇ 
.
ÇÇ 
	UseBinary
ÇÇ !
=
ÇÇ" #
true
ÇÇ$ (
;
ÇÇ( )
request
ÉÉ 
.
ÉÉ 
Proxy
ÉÉ 
=
ÉÉ 
null
ÉÉ  $
;
ÉÉ$ %
FtpWebResponse
ÖÖ 
response
ÖÖ '
=
ÖÖ( )
(
ÖÖ* +
FtpWebResponse
ÖÖ+ 9
)
ÖÖ9 :
request
ÖÖ: A
.
ÖÖA B
GetResponse
ÖÖB M
(
ÖÖM N
)
ÖÖN O
;
ÖÖO P
Stream
ÜÜ 
stream
ÜÜ 
=
ÜÜ 
response
ÜÜ  (
.
ÜÜ( )
GetResponseStream
ÜÜ) :
(
ÜÜ: ;
)
ÜÜ; <
;
ÜÜ< =
MemoryStream
áá 
memoryStream
áá )
=
áá* +
new
áá, /
MemoryStream
áá0 <
(
áá< =
)
áá= >
;
áá> ?
byte
àà 
[
àà 
]
àà 
chunk
àà 
=
àà 
new
àà "
byte
àà# '
[
àà' (
$num
àà( ,
]
àà, -
;
àà- .
int
ââ 
	bytesRead
ââ 
;
ââ 
while
ää 
(
ää 
(
ää 
	bytesRead
ää !
=
ää" #
stream
ää$ *
.
ää* +
Read
ää+ /
(
ää/ 0
chunk
ää0 5
,
ää5 6
$num
ää7 8
,
ää8 9
chunk
ää: ?
.
ää? @
Length
ää@ F
)
ääF G
)
ääG H
>
ääI J
$num
ääK L
)
ääL M
{
ãã 
memoryStream
åå  
.
åå  !
Write
åå! &
(
åå& '
chunk
åå' ,
,
åå, -
$num
åå. /
,
åå/ 0
	bytesRead
åå1 :
)
åå: ;
;
åå; <
}
çç 
response
éé 
.
éé 
Close
éé 
(
éé 
)
éé  
;
éé  !
stream
èè 
.
èè 
Close
èè 
(
èè 
)
èè 
;
èè 
atencionMacro
êê 
.
êê #
ImagenVoucherExtranet
êê 3
=
êê4 5
Convert
êê6 =
.
êê= >
ToBase64String
êê> L
(
êêL M
memoryStream
êêM Y
.
êêY Z
ToArray
êêZ a
(
êêa b
)
êêb c
)
êêc d
;
êêd e
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
e
íí 
)
íí 
{
ìì 
throw
îî 
new
îî 
LogicaException
îî )
(
îî) *
$str
îî* ^
,
îî^ _
e
îî` a
)
îîa b
;
îîb c
}
ïï 
}
ññ 	
}
óó 
}òò Øá
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelConsumo_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
List 
< 
Consumo 
> 
ObtenerConsumos ,
(, -
int- 0
idEstablecimiento1 B
,B C
DateTimeD L

fechaDesdeM W
,W X
DateTimeY a

fechaHastab l
)l m
{ 	
try 
{ 
List 
< 
Consumo 
> 
consumos &
=' (
_hotelRepositorio) :
.: ;
ObtenerConsumos; J
(J K
idEstablecimientoK \
,\ ]

fechaDesde^ h
,h i

fechaHastaj t
)t u
.u v
ToListv |
(| }
)} ~
.~ 
OrderBy	 Ü
(
Ü á
c
á à
=>
â ã
c
å ç
.
ç é
Fecha
é ì
)
ì î
.
î ï
ToList
ï õ
(
õ ú
)
ú ù
;
ù û
return 
consumos 
;  
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* R
,R S
eT U
)U V
;V W
} 
} 	
public 
ConsumoHabitacion  $
ObtenerConsumoHabitacion! 9
(9 :
int: =

idAtencion> H
)H I
{   	
try!! 
{"" 
ConsumoHabitacion## !
consumoHabitacion##" 3
=##4 5
_hotelRepositorio##6 G
.##G H$
ObtenerConsumoHabitacion##H `
(##` a

idAtencion##a k
)##k l
;##l m
consumoHabitacion$$ !
.$$! "
	Huespedes$$" +
.$$+ ,
ForEach$$, 3
($$3 4
h$$4 5
=>$$6 8
h$$9 :
.$$: ;
Valor$$; @
=$$A B
($$C D
h$$D E
.$$E F
Valor$$F K
!=$$L N
null$$O S
&&$$T V
JsonConvert$$W b
.$$b c
DeserializeObject$$c t
<$$t u
JsonHuesped	$$u Ä
>
$$Ä Å
(
$$Å Ç
h
$$Ç É
.
$$É Ñ
Valor
$$Ñ â
)
$$â ä
.
$$ä ã
	estitular
$$ã î
)
$$î ï
.
$$ï ñ
ToString
$$ñ û
(
$$û ü
)
$$ü †
.
$$† °
ToLower
$$° ®
(
$$® ©
)
$$© ™
)
$$™ ´
;
$$´ ¨
consumoHabitacion%% !
.%%! "
Titular%%" )
=%%* +
consumoHabitacion%%, =
.%%= >
	Huespedes%%> G
.%%G H
Where%%H M
(%%M N
h%%N O
=>%%P R
h%%S T
.%%T U
Valor%%U Z
==%%[ ]
$str%%^ d
)%%d e
.%%e f
FirstOrDefault%%f t
(%%t u
)%%u v
.%%v w
Nombre%%w }
;%%} ~
return&& 
consumoHabitacion&& (
;&&( )
}'' 
catch(( 
((( 
	Exception(( 
e(( 
)(( 
{)) 
throw** 
new** 
LogicaException** )
(**) *
$str*** R
,**R S
e**T U
)**U V
;**V W
}++ 
},, 	
public-- 
OperationResult-- 
ConfirmarConsumo-- /
(--/ 0
ConsumoHabitacion--0 A
consumoHabitacion--B S
,--S T"
UserProfileSessionData--U k
sesionUsuario--l y
)--y z
{.. 	
try// 
{00 
DateTime11 
fechaActual11 $
=11% &
DateTimeUtil11' 3
.113 4
FechaActual114 ?
(11? @
)11@ A
;11A B
var22 
atencionHabitacion22 &
=22' (#
_transaccionRepositorio22) @
.22@ A
ObtenerTransaccion22A S
(22S T
consumoHabitacion22T e
.22e f

IdAtencion22f p
)22p q
;22q r
atencionHabitacion33 "
.33" #

indicador133# -
=33. /
false330 5
;335 6
ResolverDetalles44  
(44  !
consumoHabitacion44! 2
.442 3
Detalles443 ;
)44; <
;44< =
Transaccion55 
consumoTransaccion55 .
=55/ 0'
ConvertirConsumoTransaccion551 L
(55L M
consumoHabitacion55M ^
,55^ _
sesionUsuario55` m
,55m n
fechaActual55o z
,55z { 
TransaccionSettings	55| è
.
55è ê
Default
55ê ó
.
55ó ò0
"IdTipoTransaccionConsumoHabitacion
55ò ∫
,
55∫ ª&
_codigosOperacion_Logica
55º ‘
.
55‘ ’3
%ObtenerSiguienteCodigoParaFacturacion
55’ ˙
(
55˙ ˚
Diccionario
55˚ Ü
.
55Ü á5
'MapeoTipoTransaccionVsCodigoDeOperacion
55á Æ
.
55Æ Ø
Single
55Ø µ
(
55µ ∂
n
55∂ ∑
=>
55∏ ∫
n
55ª º
.
55º Ω
Key
55Ω ¿
==
55¡ √!
TransaccionSettings
55ƒ ◊
.
55◊ ÿ
Default
55ÿ ﬂ
.
55ﬂ ‡0
"IdTipoTransaccionConsumoHabitacion
55‡ Ç
)
55Ç É
.
55É Ñ
Value
55Ñ â
,
55â ä!
TransaccionSettings
55ã û
.
55û ü
Default
55ü ¶
.
55¶ ß0
"IdTipoTransaccionConsumoHabitacion
55ß …
)
55…  
)
55  À
;
55À Ã
Transaccion66 #
ordenConsumoTransaccion66 3
=664 5'
ConvertirConsumoTransaccion666 Q
(66Q R
consumoHabitacion66R c
,66c d
sesionUsuario66e r
,66r s
fechaActual66t 
,	66 Ä!
TransaccionSettings
66Å î
.
66î ï
Default
66ï ú
.
66ú ù5
'IdTipoTransaccionOrdenConsumoHabitacion
66ù ƒ
,
66ƒ ≈&
_codigosOperacion_Logica
66∆ ﬁ
.
66ﬁ ﬂ3
%ObtenerSiguienteCodigoParaFacturacion
66ﬂ Ñ
(
66Ñ Ö
Diccionario
66Ö ê
.
66ê ë5
'MapeoTipoTransaccionVsCodigoDeOperacion
66ë ∏
.
66∏ π
Single
66π ø
(
66ø ¿
n
66¿ ¡
=>
66¬ ƒ
n
66≈ ∆
.
66∆ «
Key
66«  
==
66À Õ!
TransaccionSettings
66Œ ·
.
66· ‚
Default
66‚ È
.
66È Í5
'IdTipoTransaccionOrdenConsumoHabitacion
66Í ë
)
66ë í
.
66í ì
Value
66ì ò
,
66ò ô!
TransaccionSettings
66ö ≠
.
66≠ Æ
Default
66Æ µ
.
66µ ∂5
'IdTipoTransaccionOrdenConsumoHabitacion
66∂ ›
)
66› ﬁ
)
66ﬁ ﬂ
;
66ﬂ ‡#
ordenConsumoTransaccion77 '
.77' (%
id_transaccion_referencia77( A
=77B C
consumoHabitacion77D U
.77U V

IdAtencion77V `
;77` a#
ordenConsumoTransaccion88 '
.88' (
AgregarDetalles88( 7
(887 8
DetalleDeOperacion888 J
.88J K
Convert88K R
(88R S
consumoHabitacion88S d
.88d e
Detalles88e m
)88m n
)88n o
;88o p#
ordenConsumoTransaccion99 '
.99' (
Estado_transaccion99( :
.99: ;
Add99; >
(99> ?
new99? B
Estado_transaccion99C U
(99U V
sesionUsuario99V c
.99c d
Empleado99d l
.99l m
Id99m o
,99o p
MaestroSettings	99q Ä
.
99Ä Å
Default
99Å à
.
99à â.
 IdDetalleMaestroEstadoConfirmado
99â ©
,
99© ™
fechaActual
99´ ∂
,
99∂ ∑
$str
99∏ Ó
)
99Ó Ô
)
99Ô 
;
99 Ò
bool:: 
haySalidaBienes:: $
=::% &
consumoHabitacion::' 8
.::8 9
Detalles::9 A
.::A B
Where::B G
(::G H
d::H I
=>::J L
d::M N
.::N O
Producto::O W
.::W X
EsBien::X ^
)::^ _
.::_ `
Count::` e
(::e f
)::f g
>::h i
$num::j k
;::k l
Transaccion;; .
"salidaMercaderiaConsumoTransaccion;; >
=;;? @
new;;B E
Transaccion;;F Q
(;;Q R
);;R S
;;;S T
if<< 
(<< 
haySalidaBienes<< #
)<<# $
{== .
"salidaMercaderiaConsumoTransaccion>> 6
=>>7 8'
ConvertirConsumoTransaccion>>9 T
(>>T U
consumoHabitacion>>U f
,>>f g
sesionUsuario>>h u
,>>u v
fechaActual	>>w Ç
,
>>Ç É!
TransaccionSettings
>>Ñ ó
.
>>ó ò
Default
>>ò ü
.
>>ü †@
2IdTipoTransaccionSalidaMercaderiaConsumoHabitacion
>>† “
,
>>“ ”&
_codigosOperacion_Logica
>>‘ Ï
.
>>Ï Ì3
%ObtenerSiguienteCodigoParaFacturacion
>>Ì í
(
>>í ì
Diccionario
>>ì û
.
>>û ü5
'MapeoTipoTransaccionVsCodigoDeOperacion
>>ü ∆
.
>>∆ «
Single
>>« Õ
(
>>Õ Œ
n
>>Œ œ
=>
>>– “
n
>>” ‘
.
>>‘ ’
Key
>>’ ÿ
==
>>Ÿ €!
TransaccionSettings
>>‹ Ô
.
>>Ô 
Default
>> ˜
.
>>˜ ¯@
2IdTipoTransaccionSalidaMercaderiaConsumoHabitacion
>>¯ ™
)
>>™ ´
.
>>´ ¨
Value
>>¨ ±
,
>>± ≤!
TransaccionSettings
>>≥ ∆
.
>>∆ «
Default
>>« Œ
.
>>Œ œ@
2IdTipoTransaccionSalidaMercaderiaConsumoHabitacion
>>œ Å
)
>>Å Ç
)
>>Ç É
;
>>É Ñ.
"salidaMercaderiaConsumoTransaccion?? 6
.??6 7
AgregarDetalles??7 F
(??F G
DetalleDeOperacion??G Y
.??Y Z
Convert??Z a
(??a b
consumoHabitacion??b s
.??s t
Detalles??t |
.??| }
Where	??} Ç
(
??Ç É
d
??É Ñ
=>
??Ö á
d
??à â
.
??â ä
Producto
??ä í
.
??í ì
EsBien
??ì ô
)
??ô ö
.
??ö õ
ToList
??õ °
(
??° ¢
)
??¢ £
)
??£ §
)
??§ •
;
??• ¶
}@@ 
varBB 
operacionIntegradaBB &
=BB' (
newBB) ,
OperacionIntegradaBB- ?
(BB? @
consumoTransaccionBB@ R
,BBR S#
ordenConsumoTransaccionBBT k
,BBk l
nullBBm q
,BBq r
haySalidaBienes	BBs Ç
?
BBÉ Ñ
new
BBÖ à
List
BBâ ç
<
BBç é
Transaccion
BBé ô
>
BBô ö
{
BBõ ú0
"salidaMercaderiaConsumoTransaccion
BBù ø
}
BB¿ ¡
:
BB¬ √
new
BBƒ «
List
BB» Ã
<
BBÃ Õ
Transaccion
BBÕ ÿ
>
BBÿ Ÿ
(
BBŸ ⁄
)
BB⁄ €
,
BB€ ‹ 
atencionHabitacion
BB› Ô
,
BBÔ 
null
BBÒ ı
)
BBı ˆ
;
BBˆ ˜
operacionIntegradaCC "
.CC" # 
EnlazarTransaccionesCC# 7
(CC7 8
)CC8 9
;CC9 :
OperationResultEE 
	resultadoEE  )
=EE* +
_logicaOperacionEE, <
.EE< =4
(AfectarInventarioFisicoYGuardarOperacionEE= e
(EEe f
operacionIntegradaEEf x
,EEx y
sesionUsuario	EEz á
)
EEá à
;
EEà â
returnFF 
	resultadoFF  
;FF  !
}GG 
catchHH 
(HH 
	ExceptionHH 
eHH 
)HH 
{II 
throwJJ 
newJJ 
LogicaExceptionJJ )
(JJ) *
$strJJ* R
,JJR S
eJJT U
)JJU V
;JJV W
}KK 
}LL 	
publicMM 
voidMM 
ResolverDetallesMM $
(MM$ %
ListMM% )
<MM) *
DetalleDeOperacionMM* <
>MM< =
detallesMM> F
)MMF G
{NN 	
foreachPP 
(PP 
varPP 
itemPP 
inPP  
detallesPP! )
)PP) *
{QQ 
ifRR 
(RR 
itemRR 
.RR 
CantidadRR !
<=RR" $
$numRR% &
)RR& '
{SS 
throwTT 
newTT 
LogicaExceptionTT -
(TT- .
$strTT. y
)TTy z
;TTz {
}UU 
ifVV 
(VV 
itemVV 
.VV 
ImporteVV  
<VV! "
$numVV# $
)VV$ %
{WW 
throwXX 
newXX 
LogicaExceptionXX -
(XX- .
$strXX. b
)XXb c
;XXc d
}YY 
ifZZ 
(ZZ .
"VerificarCalculadoMascaraDeCalculoZZ 6
(ZZ6 7
itemZZ7 ;
.ZZ; <
MascaraDeCalculoZZ< L
,ZZL M)
ElementoDeCalculoEnVentasEnumZZN k
.ZZk l
CantidadZZl t
)ZZt u
)ZZu v
{[[ 
item\\ 
.\\ 
Cantidad\\ !
=\\" #
item\\$ (
.\\( )
Importe\\) 0
/\\1 2
item\\3 7
.\\7 8
PrecioUnitario\\8 F
;\\F G
}]] 
if^^ 
(^^ .
"VerificarCalculadoMascaraDeCalculo^^ 6
(^^6 7
item^^7 ;
.^^; <
MascaraDeCalculo^^< L
,^^L M)
ElementoDeCalculoEnVentasEnum^^N k
.^^k l
PrecioUnitario^^l z
)^^z {
)^^{ |
{__ 
item`` 
.`` 
PrecioUnitario`` '
=``( )
item``* .
.``. /
Importe``/ 6
/``7 8
item``9 =
.``= >
Cantidad``> F
;``F G
}aa 
ifbb 
(bb .
"VerificarCalculadoMascaraDeCalculobb 6
(bb6 7
itembb7 ;
.bb; <
MascaraDeCalculobb< L
,bbL M)
ElementoDeCalculoEnVentasEnumbbN k
.bbk l
Importebbl s
)bbs t
)bbt u
{cc 
itemdd 
.dd 
Importedd  
=dd! "
itemdd# '
.dd' (
Cantidaddd( 0
*dd1 2
itemdd3 7
.dd7 8
PrecioUnitariodd8 F
;ddF G
}ee 
}ff 
}gg 	
privatehh 
boolhh .
"VerificarCalculadoMascaraDeCalculohh 7
(hh7 8
stringhh8 >
mascaraDeCalculohh? O
,hhO P)
ElementoDeCalculoEnVentasEnumhhQ n
ordenhho t
)hht u
{ii 	
Listjj 
<jj 
intjj 
>jj !
mascaraDeCalculoArrayjj +
=jj, -
mascaraDeCalculojj. >
.jj> ?
Selectjj? E
(jjE F
digitojjF L
=>jjM O
intjjP S
.jjS T
ParsejjT Y
(jjY Z
digitojjZ `
.jj` a
ToStringjja i
(jji j
)jjj k
)jjk l
)jjl m
.jjm n
ToListjjn t
(jjt u
)jju v
;jjv w
returnll 
!ll 
Convertll 
.ll 
	ToBooleanll %
(ll% &!
mascaraDeCalculoArrayll& ;
[ll; <
(ll< =
intll= @
)ll@ A
ordenllA F
]llF G
)llG H
;llH I
}mm 	
publicnn 
Transaccionnn '
ConvertirConsumoTransaccionnn 6
(nn6 7
ConsumoHabitacionnn7 H
consumoHabitacionnnI Z
,nnZ ["
UserProfileSessionDatann\ r
sesionUsuario	nns Ä
,
nnÄ Å
DateTime
nnÇ ä
fechaActual
nnã ñ
,
nnñ ó
int
nnò õ
idTipoTransaccion
nnú ≠
,
nn≠ Æ
string
nnØ µ
codigo
nn∂ º
)
nnº Ω
{oo 	
Transaccionpp 
transaccionpp #
=pp$ %
newpp& )
Transaccionpp* 5
(pp5 6
)pp6 7
{qq 
codigorr 
=rr 
codigorr 
,rr  
id_comprobantess 
=ss  
TransaccionSettingsss! 4
.ss4 5
Defaultss5 <
.ss< =!
IdComprobanteGenericoss= R
,ssR S
tipo_cambiott 
=tt 
sesionUsuariott +
.tt+ ,
TipoDeCambiott, 8
.tt8 9

ValorVentatt9 C
,ttC D
importe_totaluu 
=uu 
consumoHabitacionuu  1
.uu1 2
Importeuu2 9
,uu9 :$
id_actor_negocio_internovv (
=vv) *
sesionUsuariovv+ 8
.vv8 9(
CentroDeAtencionSeleccionadovv9 U
.vvU V
IdvvV X
,vvX Y$
id_actor_negocio_externoww (
=ww) *
consumoHabitacionww+ <
.ww< =
HuespedConsumoww= K
.wwK L
IdwwL N
,wwN O%
id_actor_negocio_interno1xx )
=xx* +
consumoHabitacionxx, =
.xx= >
IdHabitacionxx> J
,xxJ K
	id_monedayy 
=yy 
MaestroSettingsyy +
.yy+ ,
Defaultyy, 3
.yy3 4'
IdDetalleMaestroMonedaSolesyy4 O
,yyO P
id_empleadozz 
=zz 
sesionUsuariozz +
.zz+ ,
Empleadozz, 4
.zz4 5
Idzz5 7
,zz7 8
id_tipo_transaccion{{ #
={{$ %
idTipoTransaccion{{& 7
,{{7 8

comentario|| 
=|| 
$str|| &
,||& '
id_unidad_negocio}} !
=}}" #
MaestroSettings}}$ 3
.}}3 4
Default}}4 ;
.}}; <6
*IdDetalleMaestroUnidadDeNegocioTransversal}}< f
,}}f g
es_concreta~~ 
=~~ 
true~~ "
,~~" #
fecha_inicio 
= 
fechaActual *
,* +
	fecha_fin
ÄÄ 
=
ÄÄ 
fechaActual
ÄÄ '
,
ÄÄ' ($
fecha_registro_sistema
ÅÅ &
=
ÅÅ' (
fechaActual
ÅÅ) 4
,
ÅÅ4 5%
fecha_registro_contable
ÇÇ '
=
ÇÇ( )
fechaActual
ÇÇ* 5
,
ÇÇ5 6
}
ÉÉ 
;
ÉÉ 
return
ÑÑ 
transaccion
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
ÜÜ 
OperationResult
ÜÜ 
InvalidarConsumo
ÜÜ /
(
ÜÜ/ 0
long
ÜÜ0 4
	idConsumo
ÜÜ5 >
,
ÜÜ> ?$
UserProfileSessionData
ÜÜ@ V
sesionUsuario
ÜÜW d
)
ÜÜd e
{
áá 	
try
àà 
{
ââ 
DateTime
ää 
fechaActual
ää $
=
ää% &
DateTimeUtil
ää' 3
.
ää3 4
FechaActual
ää4 ?
(
ää? @
)
ää@ A
;
ääA B
var
ãã %
transaccionOrdenConsumo
ãã +
=
ãã, -%
_transaccionRepositorio
ãã. E
.
ããE F 
ObtenerTransaccion
ããF X
(
ããX Y
	idConsumo
ããY b
)
ããb c
;
ããc d
Transaccion
çç ,
invalidacionConsumoTransaccion
çç :
=
çç; <5
'ConvertirTransaccionInvalidacionConsumo
çç= d
(
ççd e%
transaccionOrdenConsumo
ççe |
,
çç| }
sesionUsuarioçç~ ã
,ççã å
fechaActualççç ò
,ççò ô#
TransaccionSettingsççö ≠
.çç≠ Æ
DefaultççÆ µ
.ççµ ∂>
.IdTipoTransaccionInvalidacionConsumoHabitacionçç∂ ‰
,çç‰ Â(
_codigosOperacion_LogicaççÊ ˛
.çç˛ ˇ5
%ObtenerSiguienteCodigoParaFacturacionççˇ §
(çç§ •
Diccionarioçç• ∞
.çç∞ ±7
'MapeoTipoTransaccionVsCodigoDeOperacionçç± ÿ
.ççÿ Ÿ
SingleççŸ ﬂ
(ççﬂ ‡
nçç‡ ·
=>çç‚ ‰
nççÂ Ê
.ççÊ Á
KeyççÁ Í
==ççÎ Ì#
TransaccionSettingsççÓ Å
.ççÅ Ç
DefaultççÇ â
.ççâ ä>
.IdTipoTransaccionInvalidacionConsumoHabitacionççä ∏
)çç∏ π
.ççπ ∫
Valueçç∫ ø
,ççø ¿#
TransaccionSettingsçç¡ ‘
.çç‘ ’
Defaultçç’ ‹
.çç‹ ›>
.IdTipoTransaccionInvalidacionConsumoHabitacionçç› ã
)ççã å
)ççå ç
;ççç é,
invalidacionConsumoTransaccion
éé .
.
éé. /'
id_transaccion_referencia
éé/ H
=
ééI J%
transaccionOrdenConsumo
ééK b
.
ééb c"
id_transaccion_padre
ééc w
;
ééw x
Transaccion
èè 1
#ordenInvalidacionConsumoTransaccion
èè ?
=
èè@ A5
'ConvertirTransaccionInvalidacionConsumo
èèB i
(
èèi j&
transaccionOrdenConsumoèèj Å
,èèÅ Ç
sesionUsuarioèèÉ ê
,èèê ë
fechaActualèèí ù
,èèù û#
TransaccionSettingsèèü ≤
.èè≤ ≥
Defaultèè≥ ∫
.èè∫ ªC
3IdTipoTransaccionOrdenInvalidacionConsumoHabitacionèèª Ó
,èèÓ Ô(
_codigosOperacion_Logicaèè à
.èèà â5
%ObtenerSiguienteCodigoParaFacturacionèèâ Æ
(èèÆ Ø
DiccionarioèèØ ∫
.èè∫ ª7
'MapeoTipoTransaccionVsCodigoDeOperacionèèª ‚
.èè‚ „
Singleèè„ È
(èèÈ Í
nèèÍ Î
=>èèÏ Ó
nèèÔ 
.èè Ò
KeyèèÒ Ù
==èèı ˜#
TransaccionSettingsèè¯ ã
.èèã å
Defaultèèå ì
.èèì îC
3IdTipoTransaccionOrdenInvalidacionConsumoHabitacionèèî «
)èè« »
.èè» …
Valueèè… Œ
,èèŒ œ#
TransaccionSettingsèè– „
.èè„ ‰
Defaultèè‰ Î
.èèÎ ÏC
3IdTipoTransaccionOrdenInvalidacionConsumoHabitacionèèÏ ü
)èèü †
)èè† °
;èè° ¢1
#ordenInvalidacionConsumoTransaccion
êê 3
.
êê3 4
AgregarDetalles
êê4 C
(
êêC D=
/ConvertirDetallesTransaccionInvalidacionConsumo
êêD s
(
êês t&
transaccionOrdenConsumoêêt ã
)êêã å
)êêå ç
;êêç é,
invalidacionConsumoTransaccion
ëë .
.
ëë. /'
id_transaccion_referencia
ëë/ H
=
ëëI J%
transaccionOrdenConsumo
ëëK b
.
ëëb c
id
ëëc e
;
ëëe f1
#ordenInvalidacionConsumoTransaccion
íí 3
.
íí3 4 
Estado_transaccion
íí4 F
.
ííF G
Add
ííG J
(
ííJ K
new
ííK N 
Estado_transaccion
ííO a
(
íía b
sesionUsuario
ííb o
.
íío p
Empleado
ííp x
.
ííx y
Id
ííy {
,
íí{ |
MaestroSettingsíí} å
.ííå ç
Defaultííç î
.ííî ï0
 IdDetalleMaestroEstadoConfirmadoííï µ
,ííµ ∂
fechaActualíí∑ ¬
,íí¬ √
$strííƒ ˙
)íí˙ ˚
)íí˚ ¸
;íí¸ ˝
Transaccion
ìì =
/entradaMercaderiaInvalidacionConsumoTransaccion
ìì K
=
ììL M5
'ConvertirTransaccionInvalidacionConsumo
ììN u
(
ììu v&
transaccionOrdenConsumoììv ç
,ììç é
sesionUsuarioììè ú
,ììú ù
fechaActualììû ©
,ìì© ™#
TransaccionSettingsìì´ æ
.ììæ ø
Defaultììø ∆
.ìì∆ «O
?IdTipoTransaccionEntradaMercaderiaInvalidacionConsumoHabitacionìì« Ü
,ììÜ á(
_codigosOperacion_Logicaììà †
.ìì† °5
%ObtenerSiguienteCodigoParaFacturacionìì° ∆
(ìì∆ «
Diccionarioìì« “
.ìì“ ”7
'MapeoTipoTransaccionVsCodigoDeOperacionìì” ˙
.ìì˙ ˚
Singleìì˚ Å
(ììÅ Ç
nììÇ É
=>ììÑ Ü
nììá à
.ììà â
Keyììâ å
==ììç è#
TransaccionSettingsììê £
.ìì£ §
Defaultìì§ ´
.ìì´ ¨O
?IdTipoTransaccionEntradaMercaderiaInvalidacionConsumoHabitacionìì¨ Î
)ììÎ Ï
.ììÏ Ì
ValueììÌ Ú
,ììÚ Û#
TransaccionSettingsììÙ á
.ììá à
Defaultììà è
.ììè êO
?IdTipoTransaccionEntradaMercaderiaInvalidacionConsumoHabitacionììê œ
)ììœ –
)ìì– —
;ìì— “=
/entradaMercaderiaInvalidacionConsumoTransaccion
îî ?
.
îî? @
AgregarDetalles
îî@ O
(
îîO P=
/ConvertirDetallesTransaccionInvalidacionConsumo
îîP 
(îî Ä'
transaccionOrdenConsumoîîÄ ó
)îîó ò
)îîò ô
;îîô ö 
Estado_transaccion
ññ "$
estadoDeOrdenDeConsumo
ññ# 9
=
ññ: ;
new
ññ< ? 
Estado_transaccion
ññ@ R
(
ññR S
	idConsumo
ññS \
,
ññ\ ]
sesionUsuario
ññ^ k
.
ññk l
Empleado
ññl t
.
ññt u
Id
ññu w
,
ññw x
MaestroSettingsññy à
.ññà â
Defaultññâ ê
.ññê ë0
 IdDetalleMaestroEstadoInvalidadoññë ±
,ññ± ≤
fechaActualññ≥ æ
,ññæ ø
$str
óó B
)
óóB C
;
óóC D
var
ôô $
operacionModificatoria
ôô *
=
ôô+ ,
new
ôô- 0$
OperacionModificatoria
ôô1 G
(
ôôG H
)
ôôH I
{
ôôJ K
	Operacion
ôôL U
=
ôôV W,
invalidacionConsumoTransaccion
ôôX v
,
ôôv w
OrdenDeOperacionôôx à
=ôôâ ä3
#ordenInvalidacionConsumoTransaccionôôã Æ
,ôôÆ Ø#
MovimientoEconomicoôô∞ √
=ôôƒ ≈
nullôô∆  
,ôô  À!
MovimientosBienesôôÃ ›
=ôôﬁ ﬂ
newôô‡ „
Listôô‰ Ë
<ôôË È
TransaccionôôÈ Ù
>ôôÙ ı
{ôôˆ ˜?
/entradaMercaderiaInvalidacionConsumoTransaccionôô¯ ß
}ôô® ©
,ôô© ™5
%NuevosEstadosTransaccionesModificadasôô´ –
=ôô— “
newôô” ÷
Listôô◊ €
<ôô€ ‹"
Estado_transaccionôô‹ Ó
>ôôÓ Ô
(ôôÔ 
)ôô Ò
{ôôÚ Û&
estadoDeOrdenDeConsumoôôÙ ä
}ôôã å
,ôôå ç?
/NuevosEstadosParaCuotasTransaccionesModificadasôôé Ω
=ôôæ ø
nullôô¿ ƒ
,ôôƒ ≈(
TransaccionesModificadasôô∆ ﬁ
=ôôﬂ ‡
nullôô· Â
}ôôÊ Á
;ôôÁ Ë$
operacionModificatoria
öö &
.
öö& '"
EnlazarTransacciones
öö' ;
(
öö; <
)
öö< =
;
öö= >
OperationResult
õõ 
	resultado
õõ  )
=
õõ* +
_logicaOperacion
õõ, <
.
õõ< =6
(AfectarInventarioFisicoYGuardarOperacion
õõ= e
(
õõe f$
operacionModificatoria
õõf |
,
õõ| }
sesionUsuarioõõ~ ã
)õõã å
;õõå ç
return
úú 
	resultado
úú  
;
úú  !
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
e
ûû 
)
ûû 
{
üü 
throw
†† 
new
†† 
LogicaException
†† )
(
††) *
$str
††* R
,
††R S
e
††T U
)
††U V
;
††V W
}
°° 
}
¢¢ 	
public
££ 
Transaccion
££ 5
'ConvertirTransaccionInvalidacionConsumo
££ B
(
££B C
Transaccion
££C N
ordenConsumo
££O [
,
££[ \$
UserProfileSessionData
££] s
sesionUsuario££t Å
,££Å Ç
DateTime££É ã
fechaActual££å ó
,££ó ò
int££ô ú!
idTipoTransaccion££ù Æ
,££Æ Ø
string££∞ ∂
codigo££∑ Ω
)££Ω æ
{
§§ 	
Transaccion
•• 
transaccion
•• #
=
••$ %
new
••& )
Transaccion
••* 5
(
••5 6
)
••6 7
{
¶¶ 
codigo
ßß 
=
ßß 
codigo
ßß 
,
ßß  
id_comprobante
®® 
=
®®  !
TransaccionSettings
®®! 4
.
®®4 5
Default
®®5 <
.
®®< =#
IdComprobanteGenerico
®®= R
,
®®R S
tipo_cambio
©© 
=
©© 
sesionUsuario
©© +
.
©©+ ,
TipoDeCambio
©©, 8
.
©©8 9

ValorVenta
©©9 C
,
©©C D
importe_total
™™ 
=
™™ 
ordenConsumo
™™  ,
.
™™, -
importe_total
™™- :
,
™™: ;&
id_actor_negocio_interno
´´ (
=
´´) *
sesionUsuario
´´+ 8
.
´´8 9*
CentroDeAtencionSeleccionado
´´9 U
.
´´U V
Id
´´V X
,
´´X Y&
id_actor_negocio_externo
¨¨ (
=
¨¨) *
ordenConsumo
¨¨+ 7
.
¨¨7 8&
id_actor_negocio_externo
¨¨8 P
,
¨¨P Q'
id_actor_negocio_interno1
≠≠ )
=
≠≠* +
ordenConsumo
≠≠, 8
.
≠≠8 9'
id_actor_negocio_interno1
≠≠9 R
,
≠≠R S
	id_moneda
ÆÆ 
=
ÆÆ 
MaestroSettings
ÆÆ +
.
ÆÆ+ ,
Default
ÆÆ, 3
.
ÆÆ3 4)
IdDetalleMaestroMonedaSoles
ÆÆ4 O
,
ÆÆO P
id_empleado
ØØ 
=
ØØ 
sesionUsuario
ØØ +
.
ØØ+ ,
Empleado
ØØ, 4
.
ØØ4 5
Id
ØØ5 7
,
ØØ7 8!
id_tipo_transaccion
∞∞ #
=
∞∞$ %
idTipoTransaccion
∞∞& 7
,
∞∞7 8

comentario
±± 
=
±± 
$str
±± &
,
±±& '
id_unidad_negocio
≤≤ !
=
≤≤" #
MaestroSettings
≤≤$ 3
.
≤≤3 4
Default
≤≤4 ;
.
≤≤; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
≤≤< f
,
≤≤f g
es_concreta
≥≥ 
=
≥≥ 
true
≥≥ "
,
≥≥" #
fecha_inicio
¥¥ 
=
¥¥ 
fechaActual
¥¥ *
,
¥¥* +
	fecha_fin
µµ 
=
µµ 
fechaActual
µµ '
,
µµ' ($
fecha_registro_sistema
∂∂ &
=
∂∂' (
fechaActual
∂∂) 4
,
∂∂4 5%
fecha_registro_contable
∑∑ '
=
∑∑( )
fechaActual
∑∑* 5
,
∑∑5 6
}
∏∏ 
;
∏∏ 
return
ππ 
transaccion
ππ 
;
ππ 
}
∫∫ 	
public
ªª 
List
ªª 
<
ªª !
Detalle_transaccion
ªª '
>
ªª' (=
/ConvertirDetallesTransaccionInvalidacionConsumo
ªª) X
(
ªªX Y
Transaccion
ªªY d
ordenConsumo
ªªe q
)
ªªq r
{
ºº 	
List
ΩΩ 
<
ΩΩ !
Detalle_transaccion
ΩΩ $
>
ΩΩ$ %!
detallesTransaccion
ΩΩ& 9
=
ΩΩ: ;
new
ΩΩ< ?
List
ΩΩ@ D
<
ΩΩD E!
Detalle_transaccion
ΩΩE X
>
ΩΩX Y
(
ΩΩY Z
)
ΩΩZ [
;
ΩΩ[ \
foreach
ææ 
(
ææ 
var
ææ 
detalle
ææ  
in
ææ! #
ordenConsumo
ææ$ 0
.
ææ0 1!
Detalle_transaccion
ææ1 D
)
ææD E
{
øø !
detallesTransaccion
¿¿ #
.
¿¿# $
Add
¿¿$ '
(
¿¿' (
detalle
¿¿( /
.
¿¿/ 0
Clone
¿¿0 5
(
¿¿5 6
)
¿¿6 7
)
¿¿7 8
;
¿¿8 9
}
¡¡ 
return
¬¬ !
detallesTransaccion
¬¬ &
;
¬¬& '
}
√√ 	
public
ƒƒ 
List
ƒƒ 
<
ƒƒ 
ItemGenerico
ƒƒ  
>
ƒƒ  !:
,ObtenerAtencionesEnCheckedInComoHabitaciones
ƒƒ" N
(
ƒƒN O
int
ƒƒO R
idEstablecimiento
ƒƒS d
)
ƒƒd e
{
≈≈ 	
try
∆∆ 
{
«« 
List
»» 
<
»» 
ItemGenerico
»» !
>
»»! "
habitaciones
»»# /
=
»»0 1
_hotelRepositorio
»»2 C
.
»»C D:
,ObtenerAtencionesEnCheckedInComoHabitaciones
»»D p
(
»»p q 
idEstablecimiento»»q Ç
)»»Ç É
.»»É Ñ
ToList»»Ñ ä
(»»ä ã
)»»ã å
;»»å ç
return
…… 
habitaciones
…… #
;
……# $
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
e
ÀÀ 
)
ÀÀ 
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ 
LogicaException
ÕÕ )
(
ÕÕ) *
$str
ÕÕ* b
,
ÕÕb c
e
ÕÕd e
)
ÕÕe f
;
ÕÕf g
}
ŒŒ 
}
œœ 	
}
–– 
}—— û≤
SD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelAtencionMacro_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
AtencionMacroHotel ! 
ObtenerAtencionMacro" 6
(6 7
long7 ;
idAtencionMacro< K
,K L"
UserProfileSessionDataM c
sesionUsuariod q
)q r
{ 	
try 
{ 
AtencionMacroHotel "
atencionMacro# 0
=1 2
_hotelRepositorio3 D
.D E 
ObtenerAtencionMacroE Y
(Y Z
idAtencionMacroZ i
)i j
;j k
atencionMacro 
. 
FacturadoGlobal -
=. /
atencionMacro0 =
.= >
TieneFacturacion> N
?O P
atencionMacroQ ^
.^ _
FacturadoGlobal_ n
:o p
(q r
atencionMacror 
.	 Ä

Atenciones
Ä ä
.
ä ã
Where
ã ê
(
ê ë
a
ë í
=>
ì ï
a
ñ ó
.
ó ò
Importe
ò ü
>
† °
$num
¢ £
)
£ §
.
§ •
Count
• ™
(
™ ´
)
´ ¨
>
≠ Æ
$num
Ø ∞
)
∞ ±
;
± ≤
atencionMacro 
. 

Atenciones (
.( )
ToList) /
(/ 0
)0 1
.1 2
ForEach2 9
(9 :
a: ;
=>< >
a? @
.@ A
FacturadoGlobalA P
=Q R
atencionMacroS `
.` a
FacturadoGlobala p
)p q
;q r
if 
( 
atencionMacro !
.! "
FacturadoGlobal" 1
)1 2
atencionMacro !
.! "

Atenciones" ,
., -
ToList- 3
(3 4
)4 5
.5 6
ForEach6 =
(= >
a> ?
=>@ B
aC D
.D E
EstadosE L
.L M
AddRangeM U
(U V
atencionMacroV c
.c d
Eventosd k
)k l
)l m
;m n
atencionMacro 
. 

Atenciones (
.( )
ToList) /
(/ 0
)0 1
.1 2
ForEach2 9
(9 :
a: ;
=>< >
a? @
.@ A
EstadosA H
=I J
aK L
.L M
EstadosM T
.T U
OrderByU \
(\ ]
e] ^
=>_ a
eb c
.c d
Fechad i
)i j
.j k
ToListk q
(q r
)r s
)s t
;t u
atencionMacro 
. 

Atenciones (
.( )

SelectMany) 3
(3 4
a4 5
=>6 8
a9 :
.: ;
	Huespedes; D
)D E
.E F
ToListF L
(L M
)M N
.N O
ForEachO V
(V W
hW X
=>Y [
h\ ]
.] ^
	EsTitular^ g
=h i
hj k
.k l
JsonHuesdepl w
!=x z
null{ 
&&
Ä Ç
JsonConvert
É é
.
é è
DeserializeObject
è †
<
† °
JsonHuesped
° ¨
>
¨ ≠
(
≠ Æ
h
Æ Ø
.
Ø ∞
JsonHuesdep
∞ ª
)
ª º
.
º Ω
	estitular
Ω ∆
)
∆ «
;
« »
atencionMacro 
. 

Atenciones (
.( )
ToList) /
(/ 0
)0 1
.1 2
ForEach2 9
(9 :
a: ;
=>< >
a? @
.@ A
AnotacionesA L
=M N
JsonConvertO Z
.Z [
DeserializeObject[ l
<l m
Listm q
<q r
	Anotacionr {
>{ |
>| }
(} ~
a~ 
.	 Ä
AnotacionesJson
Ä è
)
è ê
)
ê ë
;
ë í
if 
( 
atencionMacro !
.! "$
HayImagenVoucherExtranet" :
): ;(
ObtenerImagenVoucherExtranet   0
(  0 1
atencionMacro  1 >
,  > ?
sesionUsuario  @ M
)  M N
;  N O
return!! 
atencionMacro!! $
;!!$ %
}"" 
catch## 
(## 
	Exception## 
e## 
)## 
{$$ 
throw%% 
new%% 
LogicaException%% )
(%%) *
$str%%* `
,%%` a
e%%b c
)%%c d
;%%d e
}&& 
}'' 	
public(( 
OperationResult(( *
EditarResponsableAtencionMacro(( =
(((= >
long((> B
idAtencionMacro((C R
,((R S
int((T W
idResponsable((X e
)((e f
{)) 	
try** 
{++ 
OperationResult,, 
	resultado,,  )
=,,* +
new,,, /
OperationResult,,0 ?
(,,? @
),,@ A
;,,A B
var-- 

atenciones-- 
=--  #
_transaccionRepositorio--! 8
.--8 9W
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestro	--9 É
(
--É Ñ
idAtencionMacro
--Ñ ì
)
--ì î
;
--î ï
var.. 
idAtenciones..  
=..! "
new..# &
List..' +
<..+ ,
long.., 0
>..0 1
{..2 3
idAtencionMacro..4 C
}..D E
;..E F
idAtenciones// 
.// 
AddRange// %
(//% &

atenciones//& 0
.//0 1
Select//1 7
(//7 8
a//8 9
=>//: <
a//= >
.//> ?
id//? A
)//A B
.//B C
ToList//C I
(//I J
)//J K
)//K L
;//L M
	resultado00 
=00 
_hotelRepositorio00 -
.00- .9
-ActualizarActorNegocioExterno1DeTransacciones00. [
(00[ \
idAtenciones00\ h
,00h i
idResponsable00j w
)00w x
;00x y
return11 
	resultado11  
;11  !
}22 
catch33 
(33 
	Exception33 
e33 
)33 
{44 
throw55 
new55 
LogicaException55 )
(55) *
$str55* V
,55V W
e55X Y
)55Y Z
;55Z [
}66 
}77 	
public88 
OperationResult88 (
ResolverEstadosAtencionMacro88 ;
(88; <
long88< @
idAtencionMacro88A P
,88P Q
int88R U
idNuevoEstado88V c
,88c d
string88e k
observacion88l w
,88w x
int88y |
[88| }
]88} ~
idsEstadosValidos	88 ê
,
88ê ë$
UserProfileSessionData
88í ®
sesionUsuario
88© ∂
)
88∂ ∑
{99 	
try:: 
{;; 
OperationResult<< 
	resultado<<  )
=<<* +
new<<, /
OperationResult<<0 ?
(<<? @
)<<@ A
;<<A B
List== 
<== 
Estado_transaccion== '
>==' (
estadosTransaccion==) ;
===< =
new==> A
List==B F
<==F G
Estado_transaccion==G Y
>==Y Z
(==Z [
)==[ \
;==\ ]
DateTime>> 
fechaActual>> $
=>>% &
DateTimeUtil>>' 3
.>>3 4
FechaActual>>4 ?
(>>? @
)>>@ A
;>>A B
var?? 
estado?? 
=?? 
_maestroRepositorio?? 0
.??0 1
ObtenerDetalle??1 ?
(??? @
idNuevoEstado??@ M
)??M N
;??N O
var@@ 

atenciones@@ 
=@@  #
_transaccionRepositorio@@! 8
.@@8 9W
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestro	@@9 É
(
@@É Ñ
idAtencionMacro
@@Ñ ì
)
@@ì î
;
@@î ï
varAA &
numeroAtencionesPermitidasAA .
=AA/ 0

atencionesAA1 ;
.AA; <
WhereAA< A
(AAA B
aAAB C
=>AAD F
idsEstadosValidosAAG X
.AAX Y
ContainsAAY a
(AAa b
(AAb c
intAAc f
)AAf g
aAAg h
.AAh i
id_estado_actualAAi y
)AAy z
)AAz {
.AA{ |
Count	AA| Å
(
AAÅ Ç
)
AAÇ É
;
AAÉ Ñ
ifBB 
(BB 

atencionesBB 
.BB 
CountBB $
(BB$ %
)BB% &
!=BB' )&
numeroAtencionesPermitidasBB* D
)BBD E
{CC 
throwDD 
newDD 
LogicaExceptionDD -
(DD- .
$strDD. ^
)DD^ _
;DD_ `
}EE 
foreachFF 
(FF 
varFF 
atencionFF %
inFF& (

atencionesFF) 3
)FF3 4
{GG 
estadosTransaccionHH &
.HH& '
AddHH' *
(HH* +
newHH+ .
Estado_transaccionHH/ A
(HHA B
atencionHHB J
.HHJ K
idHHK M
,HHM N
sesionUsuarioHHO \
.HH\ ]
EmpleadoHH] e
.HHe f
IdHHf h
,HHh i
idNuevoEstadoHHj w
,HHw x
fechaActual	HHy Ñ
,
HHÑ Ö
observacion
HHÜ ë
)
HHë í
)
HHí ì
;
HHì î
}II 
	resultadoJJ 
=JJ #
_transaccionRepositorioJJ 3
.JJ3 4,
 CrearEstadosDeTransaccionesAhoraJJ4 T
(JJT U
estadosTransaccionJJU g
)JJg h
;JJh i
varKK 
estadoTransaccionKK %
=KK& '
estadosTransaccionKK( :
.KK: ;
FirstKK; @
(KK@ A
)KKA B
;KKB C
estadoTransaccionLL !
.LL! "
Detalle_maestroLL" 1
=LL2 3
estadoLL4 :
;LL: ;
	resultadoMM 
.MM 
informationMM %
=MM& '
newMM( +
EstadoAtencionHotelMM, ?
(MM? @
)MM@ A
{NN 
EstadosOO 
=OO 
newOO !
ListOO" &
<OO& '

ItemEstadoOO' 1
>OO1 2
(OO2 3
)OO3 4
{OO5 6
newOO7 :

ItemEstadoOO; E
(OOE F
estadoTransaccionOOF W
)OOW X
}OOY Z
,OOZ [
	FacturadoPP 
=PP 

atencionesPP  *
.PP* +
FirstPP+ 0
(PP0 1
)PP1 2
.PP2 3
Evento_transaccionPP3 E
.PPE F
SelectPPF L
(PPL M
evPPM O
=>PPP R
evPPS U
.PPU V
	id_eventoPPV _
)PP_ `
.PP` a
ContainsPPa i
(PPi j
MaestroSettingsPPj y
.PPy z
Default	PPz Å
.
PPÅ Ç-
IdDetalleMaestroEstadoFacturado
PPÇ °
)
PP° ¢
}QQ 
;QQ 
returnRR 
	resultadoRR  
;RR  !
}SS 
catchTT 
(TT 
	ExceptionTT 
eTT 
)TT 
{UU 
throwVV 
newVV 
LogicaExceptionVV )
(VV) *
$strVV* o
,VVo p
eVVq r
)VVr s
;VVs t
}WW 
}XX 	
publicYY 
OperationResultYY "
ConfirmarAtencionMacroYY 5
(YY5 6
longYY6 :
idAtencionMacroYY; J
,YYJ K
stringYYL R
observacionYYS ^
,YY^ _"
UserProfileSessionDataYY` v
sesionUsuario	YYw Ñ
)
YYÑ Ö
{ZZ 	
try[[ 
{\\ 
var]] 
idsEstadosValidos]] %
=]]& '
new]]( +
List]], 0
<]]0 1
int]]1 4
>]]4 5
(]]5 6
)]]6 7
{]]8 9
MaestroSettings]]: I
.]]I J
Default]]J Q
.]]Q R,
 IdDetalleMaestroEstadoRegistrado]]R r
}]]s t
;]]t u
var^^ 
idNuevoEstado^^ !
=^^" #
MaestroSettings^^$ 3
.^^3 4
Default^^4 ;
.^^; <,
 IdDetalleMaestroEstadoConfirmado^^< \
;^^\ ]
OperationResult__ 
	resultado__  )
=__* +(
ResolverEstadosAtencionMacro__, H
(__H I
idAtencionMacro__I X
,__X Y
idNuevoEstado__Z g
,__g h
observacion__i t
,__t u
idsEstadosValidos	__v á
.
__á à
ToArray
__à è
(
__è ê
)
__ê ë
,
__ë í
sesionUsuario
__ì †
)
__† °
;
__° ¢
return`` 
	resultado``  
;``  !
}aa 
catchbb 
(bb 
	Exceptionbb 
ebb 
)bb 
{cc 
throwdd 
newdd 
LogicaExceptiondd )
(dd) *
$strdd* Y
,ddY Z
edd[ \
)dd\ ]
;dd] ^
}ee 
}ff 	
publicgg 
OperationResultgg  
CheckInAtencionMacrogg 3
(gg3 4
longgg4 8
idAtencionMacrogg9 H
,ggH I
stringggJ P
observacionggQ \
,gg\ ]"
UserProfileSessionDatagg^ t
sesionUsuario	ggu Ç
)
ggÇ É
{hh 	
tryii 
{jj 
varkk 
idsEstadosValidoskk %
=kk& '
newkk( +
Listkk, 0
<kk0 1
intkk1 4
>kk4 5
(kk5 6
)kk6 7
{kk8 9
MaestroSettingskk: I
.kkI J
DefaultkkJ Q
.kkQ R,
 IdDetalleMaestroEstadoConfirmadokkR r
}kks t
;kkt u
varll 
idNuevoEstadoll !
=ll" #
MaestroSettingsll$ 3
.ll3 4
Defaultll4 ;
.ll; <+
IdDetalleMaestroEstadoCheckedInll< [
;ll[ \
OperationResultmm 
	resultadomm  )
=mm* +(
ResolverEstadosAtencionMacromm, H
(mmH I
idAtencionMacrommI X
,mmX Y
idNuevoEstadommZ g
,mmg h
observacionmmi t
,mmt u
idsEstadosValidos	mmv á
.
mmá à
ToArray
mmà è
(
mmè ê
)
mmê ë
,
mmë í
sesionUsuario
mmì †
)
mm† °
;
mm° ¢
returnnn 
	resultadonn  
;nn  !
}oo 
catchpp 
(pp 
	Exceptionpp 
epp 
)pp 
{qq 
throwrr 
newrr 
LogicaExceptionrr )
(rr) *
$strrr* W
,rrW X
errY Z
)rrZ [
;rr[ \
}ss 
}tt 	
publicuu 
OperationResultuu !
CheckOutAtencionMacrouu 4
(uu4 5
longuu5 9
idAtencionMacrouu: I
,uuI J
stringuuK Q
observacionuuR ]
,uu] ^"
UserProfileSessionDatauu_ u
sesionUsuario	uuv É
)
uuÉ Ñ
{vv 	
tryww 
{xx 
varyy  
atencionesHabitacionyy (
=yy) *#
_transaccionRepositorioyy+ B
.yyB CW
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestro	yyC ç
(
yyç é
idAtencionMacro
yyé ù
)
yyù û
.
yyû ü
ToList
yyü •
(
yy• ¶
)
yy¶ ß
;
yyß ®
varzz )
consumosPendientesFacturacionzz 1
=zz2 3#
_transaccionRepositoriozz4 K
.zzK L1
%ObtenerTransacciones11DeTransaccioneszzL q
(zzq r!
atencionesHabitacion	zzr Ü
.
zzÜ á
Select
zzá ç
(
zzç é
t
zzé è
=>
zzê í
t
zzì î
.
zzî ï
id
zzï ó
)
zzó ò
.
zzò ô
ToArray
zzô †
(
zz† °
)
zz° ¢
)
zz¢ £
.
zz£ §
Where
zz§ ©
(
zz© ™
c
zz™ ´
=>
zz¨ Æ
c
zzØ ∞
.
zz∞ ±!
id_tipo_transaccion
zz± ƒ
==
zz≈ «!
TransaccionSettings
zz» €
.
zz€ ‹
Default
zz‹ „
.
zz„ ‰5
'IdTipoTransaccionOrdenConsumoHabitacion
zz‰ ã
&&
zzå é
c
zzè ê
.
zzê ë
id_estado_actual
zzë °
==
zz¢ §
MaestroSettings
zz• ¥
.
zz¥ µ
Default
zzµ º
.
zzº Ω.
 IdDetalleMaestroEstadoConfirmado
zzΩ ›
)
zz› ﬁ
.
zzﬁ ﬂ
ToList
zzﬂ Â
(
zzÂ Ê
)
zzÊ Á
;
zzÁ Ë
if{{ 
({{  
atencionesHabitacion{{ (
.{{( )
Where{{) .
({{. /
ah{{/ 1
=>{{2 4
ah{{5 7
.{{7 8

indicador1{{8 B
){{B C
.{{C D
Count{{D I
({{I J
){{J K
!={{L N 
atencionesHabitacion{{O c
.{{c d
Count{{d i
||{{j l*
consumosPendientesFacturacion	{{m ä
.
{{ä ã
Where
{{ã ê
(
{{ê ë
ah
{{ë ì
=>
{{î ñ
ah
{{ó ô
.
{{ô ö

indicador1
{{ö §
)
{{§ •
.
{{• ¶
Count
{{¶ ´
(
{{´ ¨
)
{{¨ ≠
!=
{{Æ ∞+
consumosPendientesFacturacion
{{± Œ
.
{{Œ œ
Count
{{œ ‘
)
{{‘ ’
{|| 
throw}} 
new}} 
LogicaException}} -
(}}- .
$str	}}. †
)
}}† °
;
}}° ¢
}~~ 
var 
idsEstadosValidos %
=& '
new( +
List, 0
<0 1
int1 4
>4 5
(5 6
)6 7
{8 9
MaestroSettings: I
.I J
DefaultJ Q
.Q R+
IdDetalleMaestroEstadoCheckedInR q
,q r
MaestroSettings	s Ç
.
Ç É
Default
É ä
.
ä ã3
%IdDetalleMaestroEstadoEntradaCambiado
ã ∞
}
± ≤
;
≤ ≥
var
ÄÄ 
idNuevoEstado
ÄÄ !
=
ÄÄ" #
MaestroSettings
ÄÄ$ 3
.
ÄÄ3 4
Default
ÄÄ4 ;
.
ÄÄ; <.
 IdDetalleMaestroEstadoCheckedOut
ÄÄ< \
;
ÄÄ\ ]
OperationResult
ÅÅ 
	resultado
ÅÅ  )
=
ÅÅ* +*
ResolverEstadosAtencionMacro
ÅÅ, H
(
ÅÅH I
idAtencionMacro
ÅÅI X
,
ÅÅX Y
idNuevoEstado
ÅÅZ g
,
ÅÅg h
observacion
ÅÅi t
,
ÅÅt u 
idsEstadosValidosÅÅv á
.ÅÅá à
ToArrayÅÅà è
(ÅÅè ê
)ÅÅê ë
,ÅÅë í
sesionUsuarioÅÅì †
)ÅÅ† °
;ÅÅ° ¢
return
ÇÇ 
	resultado
ÇÇ  
;
ÇÇ  !
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
LogicaException
ÜÜ )
(
ÜÜ) *
$str
ÜÜ* X
,
ÜÜX Y
e
ÜÜZ [
)
ÜÜ[ \
;
ÜÜ\ ]
}
áá 
}
àà 	
public
ââ 
OperationResult
ââ !
AnularAtencionMacro
ââ 2
(
ââ2 3
long
ââ3 7
idAtencionMacro
ââ8 G
,
ââG H
List
ââI M
<
ââM N!
ComprobanteAtencion
ââN a
>
ââa b
comprobantes
ââc o
,
ââo p
string
ââq w
observacionââx É
,ââÉ Ñ&
UserProfileSessionDataââÖ õ
sesionUsuarioââú ©
)ââ© ™
{
ää 	
try
ãã 
{
åå 
var
çç 
idsEstadosValidos
çç %
=
çç& '
new
çç( +
List
çç, 0
<
çç0 1
int
çç1 4
>
çç4 5
(
çç5 6
)
çç6 7
{
çç8 9
MaestroSettings
çç: I
.
ççI J
Default
ççJ Q
.
ççQ R.
 IdDetalleMaestroEstadoRegistrado
ççR r
,
ççr s
MaestroSettingsççt É
.ççÉ Ñ
DefaultççÑ ã
.ççã å0
 IdDetalleMaestroEstadoConfirmadoççå ¨
}çç≠ Æ
;ççÆ Ø
var
éé 
idNuevoEstado
éé !
=
éé" #
MaestroSettings
éé$ 3
.
éé3 4
Default
éé4 ;
.
éé; <+
IdDetalleMaestroEstadoAnulado
éé< Y
;
ééY Z
List
èè 
<
èè  
Estado_transaccion
èè '
>
èè' ( 
estadosTransaccion
èè) ;
=
èè< =
new
èè> A
List
èèB F
<
èèF G 
Estado_transaccion
èèG Y
>
èèY Z
(
èèZ [
)
èè[ \
;
èè\ ]
DateTime
êê 
fechaActual
êê $
=
êê% &
DateTimeUtil
êê' 3
.
êê3 4
FechaActual
êê4 ?
(
êê? @
)
êê@ A
;
êêA B
var
ëë 
estado
ëë 
=
ëë !
_maestroRepositorio
ëë 0
.
ëë0 1
ObtenerDetalle
ëë1 ?
(
ëë? @
idNuevoEstado
ëë@ M
)
ëëM N
;
ëëN O
var
íí 
atencionMacro
íí !
=
íí" #%
_transaccionRepositorio
íí$ ;
.
íí; < 
ObtenerTransaccion
íí< N
(
ííN O
idAtencionMacro
ííO ^
)
íí^ _
;
íí_ `
var
ìì 

atenciones
ìì 
=
ìì  %
_transaccionRepositorio
ìì! 8
.
ìì8 9Y
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestroìì9 É
(ììÉ Ñ
idAtencionMacroììÑ ì
)ììì î
;ììî ï
var
îî (
numeroAtencionesPermitidas
îî .
=
îî/ 0

atenciones
îî1 ;
.
îî; <
Where
îî< A
(
îîA B
a
îîB C
=>
îîD F
idsEstadosValidos
îîG X
.
îîX Y
Contains
îîY a
(
îîa b
(
îîb c
int
îîc f
)
îîf g
a
îîg h
.
îîh i
id_estado_actual
îîi y
)
îîy z
)
îîz {
.
îî{ |
Countîî| Å
(îîÅ Ç
)îîÇ É
;îîÉ Ñ
if
ïï 
(
ïï 

atenciones
ïï 
.
ïï 
Count
ïï $
(
ïï$ %
)
ïï% &
!=
ïï' )(
numeroAtencionesPermitidas
ïï* D
)
ïïD E
{
ññ 
throw
óó 
new
óó 
LogicaException
óó -
(
óó- .
$str
óó. ^
)
óó^ _
;
óó_ `
}
òò 
foreach
ôô 
(
ôô 
var
ôô 
atencion
ôô %
in
ôô& (

atenciones
ôô) 3
)
ôô3 4
{
öö  
estadosTransaccion
õõ &
.
õõ& '
Add
õõ' *
(
õõ* +
new
õõ+ . 
Estado_transaccion
õõ/ A
(
õõA B
atencion
õõB J
.
õõJ K
id
õõK M
,
õõM N
sesionUsuario
õõO \
.
õõ\ ]
Empleado
õõ] e
.
õõe f
Id
õõf h
,
õõh i
idNuevoEstado
õõj w
,
õõw x
fechaActualõõy Ñ
,õõÑ Ö
observacionõõÜ ë
)õõë í
)õõí ì
;õõì î
}
úú 
atencionMacro
ùù 
.
ùù 
importe_total
ùù +
=
ùù, -
$num
ùù. /
;
ùù/ 0
var
ûû 
	resultado
ûû 
=
ûû %
_transaccionRepositorio
ûû  7
.
ûû7 8C
5CrearEstadosDeTransaccionesAhoraActualizarTransaccion
ûû8 m
(
ûûm n!
estadosTransaccionûûn Ä
,ûûÄ Å
atencionMacroûûÇ è
)ûûè ê
;ûûê ë
if
†† 
(
†† 
atencionMacro
†† !
.
††! "
enum1
††" '
!=
††( *
(
††+ ,
int
††, /
)
††/ 0"
ModoFacturacionHotel
††0 D
.
††D E
NoEspecificado
††E S
)
††S T
{
°° 5
'ResolverAnulacionOperacionAtencionMacro
¢¢ ;
(
¢¢; <
atencionMacro
¢¢< I
,
¢¢I J

atenciones
¢¢K U
.
¢¢U V
ToList
¢¢V \
(
¢¢\ ]
)
¢¢] ^
,
¢¢^ _
comprobantes
¢¢` l
,
¢¢l m
observacion
¢¢n y
,
¢¢y z
sesionUsuario¢¢{ à
)¢¢à â
;¢¢â ä
}
££ 
var
§§ 
estadoTransaccion
§§ %
=
§§& ' 
estadosTransaccion
§§( :
.
§§: ;
First
§§; @
(
§§@ A
)
§§A B
;
§§B C
estadoTransaccion
•• !
.
••! "
Detalle_maestro
••" 1
=
••2 3
estado
••4 :
;
••: ;
	resultado
¶¶ 
.
¶¶ 
information
¶¶ %
=
¶¶& '
new
¶¶( +!
EstadoAtencionHotel
¶¶, ?
(
¶¶? @
)
¶¶@ A
{
ßß 
Estados
®® 
=
®® 
new
®® !
List
®®" &
<
®®& '

ItemEstado
®®' 1
>
®®1 2
(
®®2 3
)
®®3 4
{
®®5 6
new
®®7 :

ItemEstado
®®; E
(
®®E F
estadoTransaccion
®®F W
)
®®W X
}
®®Y Z
,
®®Z [
	Facturado
©© 
=
©© 

atenciones
©©  *
.
©©* +
First
©©+ 0
(
©©0 1
)
©©1 2
.
©©2 3 
Evento_transaccion
©©3 E
.
©©E F
Select
©©F L
(
©©L M
ev
©©M O
=>
©©P R
ev
©©S U
.
©©U V
	id_evento
©©V _
)
©©_ `
.
©©` a
Contains
©©a i
(
©©i j
MaestroSettings
©©j y
.
©©y z
Default©©z Å
.©©Å Ç/
IdDetalleMaestroEstadoFacturado©©Ç °
)©©° ¢
}
™™ 
;
™™ 
return
´´ 
	resultado
´´  
;
´´  !
}
¨¨ 
catch
≠≠ 
(
≠≠ 
	Exception
≠≠ 
e
≠≠ 
)
≠≠ 
{
ÆÆ 
throw
ØØ 
new
ØØ 
LogicaException
ØØ )
(
ØØ) *
$str
ØØ* V
,
ØØV W
e
ØØX Y
)
ØØY Z
;
ØØZ [
}
∞∞ 
}
±± 	
public
≤≤ 
void
≤≤ 5
'ResolverAnulacionOperacionAtencionMacro
≤≤ ;
(
≤≤; <
Transaccion
≤≤< G
atencionMacro
≤≤H U
,
≤≤U V
List
≤≤W [
<
≤≤[ \
Transaccion
≤≤\ g
>
≤≤g h

atenciones
≤≤i s
,
≤≤s t
List
≤≤u y
<
≤≤y z"
ComprobanteAtencion≤≤z ç
>≤≤ç é
comprobantes≤≤è õ
,≤≤õ ú
string≤≤ù £
observacion≤≤§ Ø
,≤≤Ø ∞&
UserProfileSessionData≤≤± «
sesionUsuario≤≤» ’
)≤≤’ ÷
{
≥≥ 	
try
¥¥ 
{
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂  !
<
∂∂" #
comprobantes
∂∂$ 0
.
∂∂0 1
Count
∂∂1 6
;
∂∂6 7
i
∂∂8 9
++
∂∂9 ;
)
∂∂; <
{
∑∑ 
OperationResult
∏∏ #
	resultado
∏∏$ -
=
∏∏. /
atencionMacro
∏∏0 =
.
∏∏= >
enum1
∏∏> C
==
∏∏D F
(
∏∏G H
int
∏∏H K
)
∏∏K L"
ModoFacturacionHotel
∏∏L `
.
∏∏` a
Global
∏∏a g
?
∏∏h i
_logicaOperacion
∏∏j z
.
∏∏z {#
AnularOperacionVenta∏∏{ è
(∏∏è ê
comprobantes∏∏ê ú
[∏∏ú ù
i∏∏ù û
]∏∏û ü
.∏∏ü †
IdOrdenVenta∏∏† ¨
,∏∏¨ ≠
comprobantes∏∏Æ ∫
[∏∏∫ ª
i∏∏ª º
]∏∏º Ω
.∏∏Ω æ
	DarDeBaja∏∏æ «
,∏∏« »
observacion∏∏… ‘
,∏∏‘ ’
$num∏∏÷ ◊
,∏∏◊ ÿ
sesionUsuario∏∏Ÿ Ê
)∏∏Ê Á
:∏∏Ë È
(∏∏Í Î
comprobantes∏∏Î ˜
[∏∏˜ ¯
i∏∏¯ ˘
]∏∏˘ ˙
.∏∏˙ ˚
Importe∏∏˚ Ç
==∏∏É Ö
comprobantes∏∏Ü í
[∏∏í ì
i∏∏ì î
]∏∏î ï
.∏∏ï ñ

MontoSoles∏∏ñ †
?∏∏° ¢ 
_logicaOperacion∏∏£ ≥
.∏∏≥ ¥$
AnularOperacionVenta∏∏¥ »
(∏∏» …
comprobantes∏∏… ’
[∏∏’ ÷
i∏∏÷ ◊
]∏∏◊ ÿ
.∏∏ÿ Ÿ
IdOrdenVenta∏∏Ÿ Â
,∏∏Â Ê
comprobantes∏∏Á Û
[∏∏Û Ù
i∏∏Ù ı
]∏∏ı ˆ
.∏∏ˆ ˜
	DarDeBaja∏∏˜ Ä
,∏∏Ä Å
observacion∏∏Ç ç
,∏∏ç é
$num∏∏è ê
,∏∏ê ë
sesionUsuario∏∏í ü
)∏∏ü †
:∏∏° ¢ 
_logicaOperacion∏∏£ ≥
.∏∏≥ ¥-
DescuentoGlobalOperacionVenta∏∏¥ —
(∏∏— “
comprobantes∏∏“ ﬁ
[∏∏ﬁ ﬂ
i∏∏ﬂ ‡
]∏∏‡ ·
.∏∏· ‚
IdOrdenVenta∏∏‚ Ó
,∏∏Ó Ô
comprobantes∏∏ ¸
[∏∏¸ ˝
i∏∏˝ ˛
]∏∏˛ ˇ
.∏∏ˇ Ä

MontoSoles∏∏Ä ä
,∏∏ä ã
observacion∏∏å ó
,∏∏ó ò
$num∏∏ô ö
,∏∏ö õ
sesionUsuario∏∏ú ©
)∏∏© ™
)∏∏™ ´
;∏∏´ ¨
if
ππ 
(
ππ 
	resultado
ππ !
.
ππ! "
code_result
ππ" -
!=
ππ. 0!
OperationResultEnum
ππ1 D
.
ππD E
Success
ππE L
)
ππL M
{
∫∫ 
throw
ªª 
new
ªª !
LogicaException
ªª" 1
(
ªª1 2
$strªª2 Ê
)ªªÊ Á
;ªªÁ Ë
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
e
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ 
LogicaException
¡¡ )
(
¡¡) *
$str
¡¡* d
,
¡¡d e
e
¡¡f g
)
¡¡g h
;
¡¡h i
}
¬¬ 
}
√√ 	
public
≈≈ 
List
≈≈ 
<
≈≈ !
ComprobanteAtencion
≈≈ '
>
≈≈' (0
"ObtenerComprobantesDeAtencionMacro
≈≈) K
(
≈≈K L
long
≈≈L P
idAtencionMacro
≈≈Q `
)
≈≈` a
{
∆∆ 	
try
«« 
{
»» 
List
…… 
<
…… !
ComprobanteAtencion
…… (
>
……( )
comprobantes
……* 6
=
……7 8
new
……9 <
List
……= A
<
……A B!
ComprobanteAtencion
……B U
>
……U V
(
……V W
)
……W X
;
……X Y
var
   
atencionMacro
   !
=
  " #%
_transaccionRepositorio
  $ ;
.
  ; < 
ObtenerTransaccion
  < N
(
  N O
idAtencionMacro
  O ^
)
  ^ _
;
  _ `
if
ÀÀ 
(
ÀÀ 
atencionMacro
ÀÀ !
.
ÀÀ! "
enum1
ÀÀ" '
!=
ÀÀ( *
(
ÀÀ+ ,
int
ÀÀ, /
)
ÀÀ/ 0"
ModoFacturacionHotel
ÀÀ0 D
.
ÀÀD E
NoEspecificado
ÀÀE S
)
ÀÀS T
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
atencionMacro
ÕÕ %
.
ÕÕ% &
enum1
ÕÕ& +
==
ÕÕ, .
(
ÕÕ/ 0
int
ÕÕ0 3
)
ÕÕ3 4"
ModoFacturacionHotel
ÕÕ4 H
.
ÕÕH I
Global
ÕÕI O
)
ÕÕO P
{
ŒŒ 
var
œœ 
idsOrdenVenta
œœ )
=
œœ* +%
_transaccionRepositorio
œœ, C
.
œœC D1
#ObtenerTransacciones11DeTransaccion
œœD g
(
œœg h
idAtencionMacro
œœh w
)
œœw x
.
œœx y
Where
œœy ~
(
œœ~ 
tœœ Ä
=>œœÅ É
tœœÑ Ö
.œœÖ Ü#
id_tipo_transaccionœœÜ ô
==œœö ú#
TransaccionSettingsœœù ∞
.œœ∞ ±
Defaultœœ± ∏
.œœ∏ π-
IdTipoTransaccionOrdenDeVentaœœπ ÷
&&œœ◊ Ÿ
tœœ⁄ €
.œœ€ ‹ 
id_estado_actualœœ‹ Ï
==œœÌ Ô
MaestroSettingsœœ ˇ
.œœˇ Ä
DefaultœœÄ á
.œœá à0
 IdDetalleMaestroEstadoConfirmadoœœà ®
)œœ® ©
.œœ© ™
Selectœœ™ ∞
(œœ∞ ±
ovœœ± ≥
=>œœ¥ ∂
ovœœ∑ π
.œœπ ∫
idœœ∫ º
)œœº Ω
;œœΩ æ
foreach
–– 
(
––  !
var
––! $
idOrdenVenta
––% 1
in
––2 4
idsOrdenVenta
––5 B
)
––B C
{
—— 
OrdenDeVenta
““ (
ordenDeVenta
““) 5
=
““6 7
new
““8 ;
OrdenDeVenta
““< H
(
““H I%
_transaccionRepositorio
““I `
.
““` aG
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstado““a ô
(““ô ö
idOrdenVenta““ö ¶
)““¶ ß
)““ß ®
;““® ©
var
”” 
montoDescuento
””  .
=
””/ 0%
_transaccionRepositorio
””1 H
.
””H I1
#ObtenerTransacciones11DeTransaccion
””I l
(
””l m
idOrdenVenta
””m y
)
””y z
.
””z {
Where””{ Ä
(””Ä Å
t””Å Ç
=>””É Ö
Diccionario””Ü ë
.””ë íW
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebito””í Ÿ
.””Ÿ ⁄
Contains””⁄ ‚
(””‚ „
t””„ ‰
.””‰ Â#
id_tipo_transaccion””Â ¯
)””¯ ˘
)””˘ ˙
.””˙ ˚
Sum””˚ ˛
(””˛ ˇ
t””ˇ Ä
=>””Å É
t””Ñ Ö
.””Ö Ü
importe_total””Ü ì
)””ì î
;””î ï
var
‘‘ 
montoHospedaje
‘‘  .
=
‘‘/ 0
ordenDeVenta
‘‘1 =
.
‘‘= >
Detalles
‘‘> F
(
‘‘F G
)
‘‘G H
.
‘‘H I
Where
‘‘I N
(
‘‘N O
d
‘‘O P
=>
‘‘Q S
d
‘‘T U
.
‘‘U V
Producto
‘‘V ^
.
‘‘^ _
IdConceptoBasico
‘‘_ o
==
‘‘p r
HotelSettings‘‘s Ä
.‘‘Ä Å
Default‘‘Å à
.‘‘à â1
!IdDetalleMaestroFamiliaHabitacion‘‘â ™
)‘‘™ ´
.‘‘´ ¨
Sum‘‘¨ Ø
(‘‘Ø ∞
d‘‘∞ ±
=>‘‘≤ ¥
d‘‘µ ∂
.‘‘∂ ∑
Importe‘‘∑ æ
)‘‘æ ø
;‘‘ø ¿
comprobantes
’’ (
.
’’( )
Add
’’) ,
(
’’, -
new
’’- 0!
ComprobanteAtencion
’’1 D
{
÷÷ 
IdOrdenVenta
◊◊  ,
=
◊◊- .
ordenDeVenta
◊◊/ ;
.
◊◊; <
Id
◊◊< >
,
◊◊> ?%
SerieYNumeroComprobante
ÿÿ  7
=
ÿÿ8 9
ordenDeVenta
ÿÿ: F
.
ÿÿF G
Comprobante
ÿÿG R
(
ÿÿR S
)
ÿÿS T
.
ÿÿT U
SerieYNumero
ÿÿU a
(
ÿÿa b
)
ÿÿb c
,
ÿÿc d
Importe
ŸŸ  '
=
ŸŸ( )
ordenDeVenta
ŸŸ* 6
.
ŸŸ6 7
Total
ŸŸ7 <
,
ŸŸ< =
MontoHospedaje
⁄⁄  .
=
⁄⁄/ 0
montoHospedaje
⁄⁄1 ?
,
⁄⁄? @
	Descuento
€€  )
=
€€* +
montoDescuento
€€, :
,
€€: ;
PuedeDarDeBaja
‹‹  .
=
‹‹/ 0
ordenDeVenta
‹‹1 =
.
‹‹= >
FechaEmision
‹‹> J
.
‹‹J K
AddDays
‹‹K R
(
‹‹R S,
FacturacionElectronicaSettings
‹‹S q
.
‹‹q r
Default
‹‹r y
.
‹‹y z=
.PlazoEnDiasParaInvalidarComprobanteElectronico‹‹z ®
)‹‹® ©
>=‹‹™ ¨
DateTimeUtil‹‹≠ π
.‹‹π ∫
FechaActual‹‹∫ ≈
(‹‹≈ ∆
)‹‹∆ «
&&‹‹»  
montoDescuento‹‹À Ÿ
==‹‹⁄ ‹
$num‹‹› ﬁ
&&‹‹ﬂ ·
ordenDeVenta‹‹‚ Ó
.‹‹Ó Ô
Total‹‹Ô Ù
==‹‹ı ˜
montoHospedaje‹‹¯ Ü
,‹‹Ü á
IdTipoComprobante
››  1
=
››2 3
ordenDeVenta
››4 @
.
››@ A
IdTipoComprobante
››A R
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 
else
·· 
{
‚‚ 
var
„„ 

atenciones
„„ &
=
„„' (%
_transaccionRepositorio
„„) @
.
„„@ AY
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestro„„A ã
(„„ã å
idAtencionMacro„„å õ
)„„õ ú
.„„ú ù
ToList„„ù £
(„„£ §
)„„§ •
;„„• ¶
foreach
‰‰ 
(
‰‰  !
var
‰‰! $
atencion
‰‰% -
in
‰‰. 0

atenciones
‰‰1 ;
)
‰‰; <
{
ÂÂ 
var
ÊÊ 
idsOrdenVenta
ÊÊ  -
=
ÊÊ. /%
_transaccionRepositorio
ÊÊ0 G
.
ÊÊG H1
#ObtenerTransacciones11DeTransaccion
ÊÊH k
(
ÊÊk l
atencion
ÊÊl t
.
ÊÊt u
id
ÊÊu w
)
ÊÊw x
.
ÊÊx y
Where
ÊÊy ~
(
ÊÊ~ 
tÊÊ Ä
=>ÊÊÅ É
tÊÊÑ Ö
.ÊÊÖ Ü#
id_tipo_transaccionÊÊÜ ô
==ÊÊö ú#
TransaccionSettingsÊÊù ∞
.ÊÊ∞ ±
DefaultÊÊ± ∏
.ÊÊ∏ π-
IdTipoTransaccionOrdenDeVentaÊÊπ ÷
&&ÊÊ◊ Ÿ
tÊÊ⁄ €
.ÊÊ€ ‹ 
id_estado_actualÊÊ‹ Ï
==ÊÊÌ Ô
MaestroSettingsÊÊ ˇ
.ÊÊˇ Ä
DefaultÊÊÄ á
.ÊÊá à0
 IdDetalleMaestroEstadoConfirmadoÊÊà ®
)ÊÊ® ©
.ÊÊ© ™
SelectÊÊ™ ∞
(ÊÊ∞ ±
ovÊÊ± ≥
=>ÊÊ¥ ∂
ovÊÊ∑ π
.ÊÊπ ∫
idÊÊ∫ º
)ÊÊº Ω
;ÊÊΩ æ
foreach
ÁÁ #
(
ÁÁ$ %
var
ÁÁ% (
idOrdenVenta
ÁÁ) 5
in
ÁÁ6 8
idsOrdenVenta
ÁÁ9 F
)
ÁÁF G
{
ËË 
OrdenDeVenta
ÈÈ  ,
ordenDeVenta
ÈÈ- 9
=
ÈÈ: ;
new
ÈÈ< ?
OrdenDeVenta
ÈÈ@ L
(
ÈÈL M%
_transaccionRepositorio
ÈÈM d
.
ÈÈd eG
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoÈÈe ù
(ÈÈù û
idOrdenVentaÈÈû ™
)ÈÈ™ ´
)ÈÈ´ ¨
;ÈÈ¨ ≠
var
ÍÍ  #
montoDescuento
ÍÍ$ 2
=
ÍÍ3 4%
_transaccionRepositorio
ÍÍ5 L
.
ÍÍL M1
#ObtenerTransacciones11DeTransaccion
ÍÍM p
(
ÍÍp q
idOrdenVenta
ÍÍq }
)
ÍÍ} ~
.
ÍÍ~ 
WhereÍÍ Ñ
(ÍÍÑ Ö
tÍÍÖ Ü
=>ÍÍá â
DiccionarioÍÍä ï
.ÍÍï ñW
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebitoÍÍñ ›
.ÍÍ› ﬁ
ContainsÍÍﬁ Ê
(ÍÍÊ Á
tÍÍÁ Ë
.ÍÍË È#
id_tipo_transaccionÍÍÈ ¸
)ÍÍ¸ ˝
)ÍÍ˝ ˛
.ÍÍ˛ ˇ
SumÍÍˇ Ç
(ÍÍÇ É
tÍÍÉ Ñ
=>ÍÍÖ á
tÍÍà â
.ÍÍâ ä
importe_totalÍÍä ó
)ÍÍó ò
;ÍÍò ô
var
ÎÎ  #
montoHospedaje
ÎÎ$ 2
=
ÎÎ3 4
ordenDeVenta
ÎÎ5 A
.
ÎÎA B
Detalles
ÎÎB J
(
ÎÎJ K
)
ÎÎK L
.
ÎÎL M
Where
ÎÎM R
(
ÎÎR S
d
ÎÎS T
=>
ÎÎU W
d
ÎÎX Y
.
ÎÎY Z
Producto
ÎÎZ b
.
ÎÎb c
IdConceptoBasico
ÎÎc s
==
ÎÎt v
HotelSettingsÎÎw Ñ
.ÎÎÑ Ö
DefaultÎÎÖ å
.ÎÎå ç1
!IdDetalleMaestroFamiliaHabitacionÎÎç Æ
)ÎÎÆ Ø
.ÎÎØ ∞
SumÎÎ∞ ≥
(ÎÎ≥ ¥
dÎÎ¥ µ
=>ÎÎ∂ ∏
dÎÎπ ∫
.ÎÎ∫ ª
ImporteÎÎª ¬
)ÎÎ¬ √
;ÎÎ√ ƒ
comprobantes
ÏÏ  ,
.
ÏÏ, -
Add
ÏÏ- 0
(
ÏÏ0 1
new
ÏÏ1 4!
ComprobanteAtencion
ÏÏ5 H
{
ÌÌ  !

IdAtencion
ÓÓ$ .
=
ÓÓ/ 0
atencion
ÓÓ1 9
.
ÓÓ9 :
id
ÓÓ: <
,
ÓÓ< =
IdOrdenVenta
ÔÔ$ 0
=
ÔÔ1 2
ordenDeVenta
ÔÔ3 ?
.
ÔÔ? @
Id
ÔÔ@ B
,
ÔÔB C%
SerieYNumeroComprobante
$ ;
=
< =
ordenDeVenta
> J
.
J K
Comprobante
K V
(
V W
)
W X
.
X Y
SerieYNumero
Y e
(
e f
)
f g
,
g h
Importe
ÒÒ$ +
=
ÒÒ, -
ordenDeVenta
ÒÒ. :
.
ÒÒ: ;
Total
ÒÒ; @
,
ÒÒ@ A
MontoHospedaje
ÚÚ$ 2
=
ÚÚ3 4
montoHospedaje
ÚÚ5 C
,
ÚÚC D
	Descuento
ÛÛ$ -
=
ÛÛ. /
montoDescuento
ÛÛ0 >
,
ÛÛ> ?
PuedeDarDeBaja
ÙÙ$ 2
=
ÙÙ3 4
ordenDeVenta
ÙÙ5 A
.
ÙÙA B
FechaEmision
ÙÙB N
.
ÙÙN O
AddDays
ÙÙO V
(
ÙÙV W,
FacturacionElectronicaSettings
ÙÙW u
.
ÙÙu v
Default
ÙÙv }
.
ÙÙ} ~=
.PlazoEnDiasParaInvalidarComprobanteElectronicoÙÙ~ ¨
)ÙÙ¨ ≠
>=ÙÙÆ ∞
DateTimeUtilÙÙ± Ω
.ÙÙΩ æ
FechaActualÙÙæ …
(ÙÙ…  
)ÙÙ  À
&&ÙÙÃ Œ
montoDescuentoÙÙœ ›
==ÙÙﬁ ‡
$numÙÙ· ‚
&&ÙÙ„ Â
ordenDeVentaÙÙÊ Ú
.ÙÙÚ Û
TotalÙÙÛ ¯
==ÙÙ˘ ˚
montoHospedajeÙÙ¸ ä
,ÙÙä ã
IdTipoComprobante
ıı$ 5
=
ıı6 7
ordenDeVenta
ıı8 D
.
ııD E
IdTipoComprobante
ııE V
}
ˆˆ  !
)
ˆˆ! "
;
ˆˆ" #
}
˜˜ 
}
¯¯ 
}
˘˘ 
comprobantes
˙˙  
.
˙˙  !
	RemoveAll
˙˙! *
(
˙˙* +
c
˙˙+ ,
=>
˙˙- /
c
˙˙0 1
.
˙˙1 2

Diferencia
˙˙2 <
==
˙˙= ?
$num
˙˙@ A
)
˙˙A B
;
˙˙B C
comprobantes
˚˚  
.
˚˚  !
ForEach
˚˚! (
(
˚˚( )
c
˚˚) *
=>
˚˚+ -
c
˚˚. /
.
˚˚/ 0
	DarDeBaja
˚˚0 9
=
˚˚: ;
c
˚˚< =
.
˚˚= >
PuedeDarDeBaja
˚˚> L
)
˚˚L M
;
˚˚M N
}
¸¸ 
return
˝˝ 
comprobantes
˝˝ #
;
˝˝# $
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$strÅÅ* Ä
,ÅÅÄ Å
eÅÅÇ É
)ÅÅÉ Ñ
;ÅÅÑ Ö
}
ÇÇ 
}
ÉÉ 	
public
ÑÑ 
OperationResult
ÑÑ -
RegistrarIncidenteAtencionMacro
ÑÑ >
(
ÑÑ> ?
long
ÑÑ? C
idAtencionMacro
ÑÑD S
,
ÑÑS T
bool
ÑÑU Y
esDevolucion
ÑÑZ f
,
ÑÑf g
List
ÑÑh l
<
ÑÑl m"
ComprobanteAtencionÑÑm Ä
>ÑÑÄ Å
comprobantesÑÑÇ é
,ÑÑé è
stringÑÑê ñ
observacionÑÑó ¢
,ÑÑ¢ £&
UserProfileSessionDataÑÑ§ ∫
sesionUsuarioÑÑª »
)ÑÑ» …
{
ÖÖ 	
try
ÜÜ 
{
áá 
var
àà /
!estadosActualesAtencionHabitacion
àà 5
=
àà6 7
new
àà8 ;
List
àà< @
<
àà@ A!
EstadoAtencionHotel
ààA T
>
ààT U
(
ààU V
)
ààV W
;
ààW X
var
ââ 
idsEstadosValidos
ââ %
=
ââ& '
new
ââ( +
List
ââ, 0
<
ââ0 1
int
ââ1 4
>
ââ4 5
(
ââ5 6
)
ââ6 7
{
ââ8 9
MaestroSettings
ââ: I
.
ââI J
Default
ââJ Q
.
ââQ R-
IdDetalleMaestroEstadoCheckedIn
ââR q
,
ââq r
MaestroSettingsââs Ç
.ââÇ É
DefaultââÉ ä
.ââä ã5
%IdDetalleMaestroEstadoEntradaCambiadoââã ∞
}ââ± ≤
;ââ≤ ≥
var
ää 
idNuevoEvento
ää !
=
ää" #
MaestroSettings
ää$ 3
.
ää3 4
Default
ää4 ;
.
ää; <-
IdDetalleMaestroEstadoIncidente
ää< [
;
ää[ \
var
ãã  
eventosTransaccion
ãã &
=
ãã' (
new
ãã) ,
List
ãã- 1
<
ãã1 2 
Evento_transaccion
ãã2 D
>
ããD E
(
ããE F
)
ããF G
;
ããG H
var
åå 
fechaActual
åå 
=
åå  !
DateTimeUtil
åå" .
.
åå. /
FechaActual
åå/ :
(
åå: ;
)
åå; <
;
åå< =
var
çç 
eventoIncidente
çç #
=
çç$ %!
_maestroRepositorio
çç& 9
.
çç9 :
ObtenerDetalle
çç: H
(
ççH I
idNuevoEvento
ççI V
)
ççV W
;
ççW X
var
éé 
atencionMacro
éé !
=
éé" #%
_transaccionRepositorio
éé$ ;
.
éé; < 
ObtenerTransaccion
éé< N
(
ééN O
idAtencionMacro
ééO ^
)
éé^ _
;
éé_ `
var
èè 

atenciones
èè 
=
èè  %
_transaccionRepositorio
èè! 8
.
èè8 9Y
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestroèè9 É
(èèÉ Ñ
idAtencionMacroèèÑ ì
)èèì î
;èèî ï
var
êê (
numeroAtencionesPermitidas
êê .
=
êê/ 0

atenciones
êê1 ;
.
êê; <
Where
êê< A
(
êêA B
a
êêB C
=>
êêD F
idsEstadosValidos
êêG X
.
êêX Y
Contains
êêY a
(
êêa b
(
êêb c
int
êêc f
)
êêf g
a
êêg h
.
êêh i
id_estado_actual
êêi y
)
êêy z
)
êêz {
.
êê{ |
Countêê| Å
(êêÅ Ç
)êêÇ É
;êêÉ Ñ
if
ëë 
(
ëë 

atenciones
ëë 
.
ëë 
Count
ëë $
(
ëë$ %
)
ëë% &
!=
ëë' )(
numeroAtencionesPermitidas
ëë* D
)
ëëD E
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì -
(
ìì- .
$str
ìì. m
)
ììm n
;
ììn o
}
îî 
var
ïï 
eventoTransaccion
ïï %
=
ïï& '
new
ïï( + 
Evento_transaccion
ïï, >
(
ïï> ?
atencionMacro
ïï? L
.
ïïL M
id
ïïM O
,
ïïO P
sesionUsuario
ïïQ ^
.
ïï^ _
Empleado
ïï_ g
.
ïïg h
Id
ïïh j
,
ïïj k
idNuevoEvento
ïïl y
,
ïïy z
fechaActualïï{ Ü
,ïïÜ á
observacionïïà ì
)ïïì î
;ïïî ï
var
ññ 
	resultado
ññ 
=
ññ %
_transaccionRepositorio
ññ  7
.
ññ7 8$
CrearEventoTransaccion
ññ8 N
(
ññN O
eventoTransaccion
ññO `
)
ññ` a
;
ñña b
foreach
óó 
(
óó 
var
óó 
atencion
óó %
in
óó& (

atenciones
óó) 3
)
óó3 4
{
òò 
var
ôô ,
estadoActualAtencionHabitacion
ôô 6
=
ôô7 8
new
ôô9 <!
EstadoAtencionHotel
ôô= P
{
ôôQ R

IdAuxiliar
ôôS ]
=
ôô^ _
atencion
ôô` h
.
ôôh i
id
ôôi k
,
ôôk l
Estados
ôôm t
=
ôôu v
new
ôôw z
List
ôô{ 
<ôô Ä

ItemEstadoôôÄ ä
>ôôä ã
{ôôå ç
newôôé ë

ItemEstadoôôí ú
(ôôú ù
atencionôôù •
.ôô• ¶"
Estado_transaccionôô¶ ∏
.ôô∏ π
Lastôôπ Ω
(ôôΩ æ
)ôôæ ø
)ôôø ¿
}ôô¡ ¬
}ôô√ ƒ
;ôôƒ ≈,
estadoActualAtencionHabitacion
öö 2
.
öö2 3
Estados
öö3 :
.
öö: ;
Add
öö; >
(
öö> ?
new
öö? B

ItemEstado
ööC M
(
ööM N
new
ööN Q 
Evento_transaccion
ööR d
(
ööd e
atencion
ööe m
.
ööm n
id
öön p
,
ööp q
sesionUsuario
öör 
.öö Ä
EmpleadoööÄ à
.ööà â
Idööâ ã
,ööã å
MaestroSettingsööç ú
.ööú ù
Defaultööù §
.öö§ •/
IdDetalleMaestroEstadoIncidenteöö• ƒ
,ööƒ ≈
fechaActualöö∆ —
,öö— “
observacionöö” ﬁ
)ööﬁ ﬂ
{öö‡ ·
Detalle_maestroöö‚ Ò
=ööÚ Û
eventoIncidenteööÙ É
}ööÑ Ö
)ööÖ Ü
)ööÜ á
;ööá à/
!estadosActualesAtencionHabitacion
õõ 5
.
õõ5 6
Add
õõ6 9
(
õõ9 :,
estadoActualAtencionHabitacion
õõ: X
)
õõX Y
;
õõY Z
}
úú 
if
ùù 
(
ùù 
	resultado
ùù 
.
ùù 
code_result
ùù )
==
ùù* ,!
OperationResultEnum
ùù- @
.
ùù@ A
Success
ùùA H
)
ùùH I
{
ûû 4
&ResolverRegistroIncidenteAtencionMacro
üü :
(
üü: ;
(
üü; <
int
üü< ?
)
üü? @
	resultado
üü@ I
.
üüI J
information
üüJ U
,
üüU V
esDevolucion
üüW c
,
üüc d
comprobantes
üüe q
,
üüq r
sesionUsuarioüüs Ä
)üüÄ Å
;üüÅ Ç
}
†† 
	resultado
°° 
.
°° 
information
°° %
=
°°& '/
!estadosActualesAtencionHabitacion
°°( I
;
°°I J
return
¢¢ 
	resultado
¢¢  
;
¢¢  !
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ 
LogicaException
¶¶ )
(
¶¶) *
$str
¶¶* f
,
¶¶f g
e
¶¶h i
)
¶¶i j
;
¶¶j k
}
ßß 
}
®® 	
public
©© 
void
©© 4
&ResolverRegistroIncidenteAtencionMacro
©© :
(
©©: ;
int
©©; >!
idEventoTransaccion
©©? R
,
©©R S
bool
©©T X
esDevolucion
©©Y e
,
©©e f
List
©©g k
<
©©k l!
ComprobanteAtencion
©©l 
>©© Ä
comprobantes©©Å ç
,©©ç é&
UserProfileSessionData©©è •
sesionUsuario©©¶ ≥
)©©≥ ¥
{
™™ 	
try
´´ 
{
¨¨ 
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠  !
<
≠≠" #
comprobantes
≠≠$ 0
.
≠≠0 1
Count
≠≠1 6
;
≠≠6 7
i
≠≠8 9
++
≠≠9 ;
)
≠≠; <
{
ÆÆ 
var
ØØ 
	resultado
ØØ !
=
ØØ" #
esDevolucion
ØØ$ 0
?
ØØ1 2
(
ØØ3 4
comprobantes
ØØ4 @
[
ØØ@ A
i
ØØA B
]
ØØB C
.
ØØC D
	Descuento
ØØD M
==
ØØN P
$num
ØØQ R
?
ØØS T
_logicaOperacion
ØØU e
.
ØØe f"
AnularOperacionVenta
ØØf z
(
ØØz {
comprobantesØØ{ á
[ØØá à
iØØà â
]ØØâ ä
.ØØä ã
IdOrdenVentaØØã ó
,ØØó ò
comprobantesØØô •
[ØØ• ¶
iØØ¶ ß
]ØØß ®
.ØØ® ©
	DarDeBajaØØ© ≤
,ØØ≤ ≥
$strØØ¥ ∆
,ØØ∆ «#
idEventoTransaccionØØ» €
,ØØ€ ‹
sesionUsuarioØØ› Í
)ØØÍ Î
:ØØÏ Ì 
_logicaOperacionØØÓ ˛
.ØØ˛ ˇ-
DescuentoGlobalOperacionVentaØØˇ ú
(ØØú ù
comprobantesØØù ©
[ØØ© ™
iØØ™ ´
]ØØ´ ¨
.ØØ¨ ≠
IdOrdenVentaØØ≠ π
,ØØπ ∫
comprobantesØØª «
[ØØ« »
iØØ» …
]ØØ…  
.ØØ  À

DiferenciaØØÀ ’
,ØØ’ ÷
$strØØ◊ È
,ØØÈ Í#
idEventoTransaccionØØÎ ˛
,ØØ˛ ˇ
sesionUsuarioØØÄ ç
)ØØç é
)ØØé è
:ØØê ë 
_logicaOperacionØØí ¢
.ØØ¢ £-
DescuentoGlobalOperacionVentaØØ£ ¿
(ØØ¿ ¡
comprobantesØØ¡ Õ
[ØØÕ Œ
iØØŒ œ
]ØØœ –
.ØØ– —
IdOrdenVentaØØ— ›
,ØØ› ﬁ
comprobantesØØﬂ Î
[ØØÎ Ï
iØØÏ Ì
]ØØÌ Ó
.ØØÓ Ô

MontoSolesØØÔ ˘
,ØØ˘ ˙
$strØØ˚ Ü
,ØØÜ á#
idEventoTransaccionØØà õ
,ØØõ ú
sesionUsuarioØØù ™
)ØØ™ ´
;ØØ´ ¨
if
∞∞ 
(
∞∞ 
	resultado
∞∞ !
.
∞∞! "
code_result
∞∞" -
!=
∞∞. 0!
OperationResultEnum
∞∞1 D
.
∞∞D E
Success
∞∞E L
)
∞∞L M
{
±± 
throw
≤≤ 
new
≤≤ !
LogicaException
≤≤" 1
(
≤≤1 2
$str≤≤2 Ú
)≤≤Ú Û
;≤≤Û Ù
}
≥≥ 
}
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
new
∏∏ 
LogicaException
∏∏ )
(
∏∏) *
$str
∏∏* q
,
∏∏q r
e
∏∏s t
)
∏∏t u
;
∏∏u v
}
ππ 
}
∫∫ 	
}
ªª 
}ºº ïƒ
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelAtencion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
OperationResult 
GuardarAnotacion /
(/ 0
AtencionHotel0 =
atencion> F
)F G
{ 	
try 
{ 
OperationResult 
	resultado  )
=* +
new, /
OperationResult0 ?
(? @
)@ A
;A B
DateTime 
fechaActual $
=% &
DateTimeUtil' 3
.3 4
FechaActual4 ?
(? @
)@ A
;A B
atencion 
. 
Anotaciones $
.$ %
Add% (
(( )
new) ,
	Anotacion- 6
(6 7
fechaActual7 B
.B C
ToStringC K
(K L
$strL a
)a b
,b c
atenciond l
.l m
	Anotacionm v
)v w
)w x
;x y
var 

comentario 
=  
JsonConvert! ,
., -
SerializeObject- <
(< =
atencion= E
.E F
AnotacionesF Q
)Q R
;R S
if 
( 

comentario 
. 
Length $
>% &
$num' *
)* +
{ 
throw 
new 
LogicaException -
(- .
$str. S
)S T
;T U
} 
	resultado 
= 
_hotelRepositorio -
.- .+
ActualizarComentarioTransaccion. M
(M N
atencionN V
.V W
IdW Y
,Y Z

comentario[ e
)e f
;f g
	resultado   
.   
information   %
=  & '
atencion  ( 0
;  0 1
return!! 
	resultado!!  
;!!  !
}"" 
catch## 
(## 
	Exception## 
e## 
)## 
{$$ 
throw%% 
new%% 
LogicaException%% )
(%%) *
$str%%* R
,%%R S
e%%T U
)%%U V
;%%V W
}&& 
}'' 	
public(( 
OperationResult(( 
EditarFechaAtencion(( 2
(((2 3
AtencionHotel((3 @
atencion((A I
)((I J
{)) 	
try** 
{++ 
OperationResult,, 
	resultado,,  )
=,,* +
new,,, /
OperationResult,,0 ?
(,,? @
),,@ A
;,,A B
DateTime-- 
fechaIngreso-- %
=--& '
DateTime--( 0
.--0 1
Parse--1 6
(--6 7
atencion--7 ?
.--? @
FechaIngreso--@ L
.--L M
ToString--M U
(--U V
$str--V b
)--b c
)--c d
;--d e
DateTime.. 
fechaSalida.. $
=..% &
DateTime..' /
.../ 0
Parse..0 5
(..5 6
atencion..6 >
...> ?
FechaSalida..? J
...J K
ToString..K S
(..S T
$str..T `
)..` a
)..a b
;..b c
if// 
(// 
!// 
_hotelRepositorio// &
.//& '+
ObtenerDisponibilidadHabitacion//' F
(//F G
atencion//G O
.//O P
Id//P R
,//R S
atencion//T \
.//\ ]

Habitacion//] g
.//g h
Id//h j
,//j k
fechaIngreso//l x
,//x y
fechaSalida	//z Ö
)
//Ö Ü
)
//Ü á
{00 
throw11 
new11 
LogicaException11 -
(11- .
$str11. z
)11z {
;11{ |
}22 
atencion33 
.33 
Importe33  
=33! "
atencion33# +
.33+ ,
Noches33, 2
*333 4
atencion335 =
.33= >
PrecioUnitario33> L
;33L M
var44 
atencionMacroBD44 #
=44$ %#
_transaccionRepositorio44& =
.44= >#
ObtenerTransaccionPadre44> U
(44U V
atencion44V ^
.44^ _
Id44_ a
)44a b
;44b c
var55 

atencionBD55 
=55  #
_transaccionRepositorio55! 8
.558 9
ObtenerTransaccion559 K
(55K L
atencion55L T
.55T U
Id55U W
)55W X
;55X Y
atencionMacroBD66 
.66  
importe_total66  -
=66. /
atencionMacroBD660 ?
.66? @
importe_total66@ M
-66N O

atencionBD66P Z
.66Z [
importe_total66[ h
+66i j
atencion66k s
.66s t
Importe66t {
;66{ |

atencionBD77 
.77 
	cantidad177 $
=77% &
atencion77' /
.77/ 0
Noches770 6
;776 7

atencionBD88 
.88 
importe188 #
=88$ %
atencion88& .
.88. /
PrecioUnitario88/ =
;88= >

atencionBD99 
.99 
importe_total99 (
=99) *
atencion99+ 3
.993 4
Importe994 ;
;99; <

atencionBD:: 
.:: 
fecha_inicio:: '
=::( )
fechaIngreso::* 6
;::6 7

atencionBD;; 
.;; 
	fecha_fin;; $
=;;% &
fechaSalida;;' 2
;;;2 3
	resultado<< 
=<< #
_transaccionRepositorio<< 3
.<<3 4#
ActualizarTransacciones<<4 K
(<<K L
new<<L O
List<<P T
<<<T U
Transaccion<<U `
><<` a
(<<a b
)<<b c
{<<d e
atencionMacroBD<<f u
,<<u v

atencionBD	<<w Å
}
<<Ç É
)
<<É Ñ
;
<<Ñ Ö
return== 
	resultado==  
;==  !
}>> 
catch?? 
(?? 
	Exception?? 
e?? 
)?? 
{@@ 
throwAA 
newAA 
LogicaExceptionAA )
(AA) *
$strAA* V
,AAV W
eAAX Y
)AAY Z
;AAZ [
}BB 
}CC 	
publicDD 
OperationResultDD %
CambiarHabitacionAtencionDD 8
(DD8 9
AtencionHotelDD9 F
atencionDDG O
,DDO P"
UserProfileSessionDataDDQ g
sesionUsuarioDDh u
)DDu v
{EE 	
tryFF 
{GG 
OperationResultHH 
	resultadoHH  )
=HH* +
newHH, /
OperationResultHH0 ?
(HH? @
)HH@ A
;HHA B
varII 
fechaActualII 
=II  !
DateTimeUtilII" .
.II. /
FechaActualII/ :
(II: ;
)II; <
;II< =
varJJ 

atencionBDJJ 
=JJ  #
_transaccionRepositorioJJ! 8
.JJ8 9
ObtenerTransaccionJJ9 K
(JJK L
atencionJJL T
.JJT U
IdJJU W
)JJW X
;JJX Y
ifKK 
(KK 
atencionKK 
.KK 
EstadoActualKK )
.KK) *
IdKK* ,
==KK- /
MaestroSettingsKK0 ?
.KK? @
DefaultKK@ G
.KKG H+
IdDetalleMaestroEstadoCheckedInKKH g
)KKg h
{LL 
TransaccionMM "
atencionCambioAtencionMM  6
=MM7 8

atencionBDMM9 C
.MMC D
CloneTransaccionMMD T
(MMT U
)MMU V
;MMV W"
atencionCambioAtencionNN *
.NN* +
id_comprobanteNN+ 9
=NN: ;

atencionBDNN< F
.NNF G
id_comprobanteNNG U
;NNU V"
atencionCambioAtencionOO *
.OO* +$
id_actor_negocio_internoOO+ C
=OOD E
atencionOOF N
.OON O

HabitacionOOO Y
.OOY Z
IdOOZ \
;OO\ ]"
atencionCambioAtencionPP *
.PP* +"
fecha_registro_sistemaPP+ A
=PPB C
fechaActualPPD O
;PPO P"
atencionCambioAtencionQQ *
.QQ* +
fecha_inicioQQ+ 7
=QQ8 9
DateTimeQQ: B
.QQB C
ParseQQC H
(QQH I
atencionQQI Q
.QQQ R
FechaIngresoQQR ^
.QQ^ _
ToStringQQ_ g
(QQg h
$strQQh t
)QQt u
)QQu v
;QQv w"
atencionCambioAtencionRR *
.RR* +
	fecha_finRR+ 4
=RR5 6
DateTimeRR7 ?
.RR? @
ParseRR@ E
(RRE F
atencionRRF N
.RRN O
FechaSalidaRRO Z
.RRZ [
ToStringRR[ c
(RRc d
$strRRd p
)RRp q
)RRq r
;RRr s"
atencionCambioAtencionSS *
.SS* +
	cantidad1SS+ 4
=SS5 6
atencionSS7 ?
.SS? @
NochesSS@ F
;SSF G"
atencionCambioAtencionTT *
.TT* +
importe1TT+ 3
=TT4 5
atencionTT6 >
.TT> ?
PrecioUnitarioTT? M
;TTM N"
atencionCambioAtencionUU *
.UU* +
importe_totalUU+ 8
=UU9 :
atencionUU; C
.UUC D
ImporteUUD K
;UUK L"
atencionCambioAtencionVV *
.VV* +
enum1VV+ 0
=VV1 2

atencionBDVV3 =
.VV= >
enum1VV> C
;VVC D"
atencionCambioAtencionWW *
.WW* +

indicador1WW+ 5
=WW6 7

atencionBDWW8 B
.WWB C

indicador1WWC M
;WWM N"
atencionCambioAtencionXX *
.XX* +

indicador2XX+ 5
=XX6 7

atencionBDXX8 B
.XXB C

indicador2XXC M
;XXM N"
atencionCambioAtencionYY *
.YY* +%
id_transaccion_referenciaYY+ D
=YYE F
atencionYYG O
.YYO P
IdYYP R
;YYR S"
atencionCambioAtencionZZ *
.ZZ* +
Estado_transaccionZZ+ =
.ZZ= >
AddZZ> A
(ZZA B
newZZB E
Estado_transaccionZZF X
(ZZX Y
sesionUsuarioZZY f
.ZZf g
EmpleadoZZg o
.ZZo p
IdZZp r
,ZZr s
MaestroSettings	ZZt É
.
ZZÉ Ñ
Default
ZZÑ ã
.
ZZã å3
%IdDetalleMaestroEstadoEntradaCambiado
ZZå ±
,
ZZ± ≤
fechaActual
ZZ≥ æ
,
ZZæ ø
$str
ZZ¿ ‚
)
ZZ‚ „
)
ZZ„ ‰
;
ZZ‰ Â
foreach[[ 
([[ 
var[[  '
actorNegocioTipoTransaccion[[! <
in[[= ?

atencionBD[[@ J
.[[J K)
Actor_negocio_por_transaccion[[K h
)[[h i
{\\ "
atencionCambioAtencion]] .
.]]. /)
Actor_negocio_por_transaccion]]/ L
.]]L M
Add]]M P
(]]P Q
new]]Q T)
Actor_negocio_por_transaccion]]U r
{]]s t
id_actor_negocio	]]u Ö
=
]]Ü á)
actorNegocioTipoTransaccion
]]à £
.
]]£ §
id_actor_negocio
]]§ ¥
,
]]¥ µ 
id_detalle_maestro
]]∂ »
=
]]…  )
actorNegocioTipoTransaccion
]]À Ê
.
]]Ê Á 
id_detalle_maestro
]]Á ˘
,
]]˘ ˙
id_rol
]]˚ Å
=
]]Ç É)
actorNegocioTipoTransaccion
]]Ñ ü
.
]]ü †
id_rol
]]† ¶
,
]]¶ ß
extension_json
]]® ∂
=
]]∑ ∏)
actorNegocioTipoTransaccion
]]π ‘
.
]]‘ ’
extension_json
]]’ „
}
]]‰ Â
)
]]Â Ê
;
]]Ê Á
}^^ 

atencionBD`` 
.`` 
	fecha_fin`` (
=``) *
DateTime``+ 3
.``3 4
Parse``4 9
(``9 :
atencion``: B
.``B C
FechaIngreso``C O
.``O P
ToString``P X
(``X Y
$str``Y e
)``e f
)``f g
;``g h

atencionBDaa 
.aa 
	cantidad1aa (
-=aa) +"
atencionCambioAtencionaa, B
.aaB C
	cantidad1aaC L
;aaL M

atencionBDbb 
.bb 
importe_totalbb ,
-=bb- /"
atencionCambioAtencionbb0 F
.bbF G
importe_totalbbG T
;bbT U
Estado_transacciondd & 
estadoCambiadoSalidadd' ;
=dd< =
newdd> A
Estado_transaccionddB T
(ddT U

atencionBDddU _
.dd_ `
iddd` b
,ddb c
sesionUsuarioddd q
.ddq r
Empleadoddr z
.ddz {
Iddd{ }
,dd} ~
MaestroSettings	dd é
.
ddé è
Default
ddè ñ
.
ddñ ó2
$IdDetalleMaestroEstadoSalidaCambiado
ddó ª
,
ddª º
fechaActual
ddΩ »
,
dd» …
$str
dd  Î
)
ddÎ Ï
;
ddÏ Ì
varff )
consumosPendientesFacturacionff 5
=ff6 7#
_transaccionRepositorioff8 O
.ffO P/
#ObtenerTransacciones11DeTransaccionffP s
(ffs t
atencionfft |
.ff| }
Idff} 
)	ff Ä
.
ffÄ Å
Where
ffÅ Ü
(
ffÜ á
c
ffá à
=>
ffâ ã
c
ffå ç
.
ffç é!
id_tipo_transaccion
ffé °
==
ff¢ §!
TransaccionSettings
ff• ∏
.
ff∏ π
Default
ffπ ¿
.
ff¿ ¡5
'IdTipoTransaccionOrdenConsumoHabitacion
ff¡ Ë
&&
ffÈ Î
c
ffÏ Ì
.
ffÌ Ó
id_estado_actual
ffÓ ˛
==
ffˇ Å
MaestroSettings
ffÇ ë
.
ffë í
Default
ffí ô
.
ffô ö.
 IdDetalleMaestroEstadoConfirmado
ffö ∫
&&
ffª Ω
!
ffæ ø
c
ffø ¿
.
ff¿ ¡

indicador1
ff¡ À
)
ffÀ Ã
.
ffÃ Õ
ToList
ffÕ ”
(
ff” ‘
)
ff‘ ’
;
ff’ ÷"
atencionCambioAtenciongg *
.gg* +
Transaccion11gg+ 8
=gg9 :
newgg; >
Listgg? C
<ggC D
TransaccionggD O
>ggO P
(ggP Q
)ggQ R
;ggR S
foreachhh 
(hh 
varhh  
consumohh! (
inhh) +)
consumosPendientesFacturacionhh, I
)hhI J
{ii 
consumojj 
.jj  %
id_actor_negocio_interno1jj  9
=jj: ;
atencionjj< D
.jjD E

HabitacionjjE O
.jjO P
IdjjP R
;jjR S"
atencionCambioAtencionkk .
.kk. /
Transaccion11kk/ <
.kk< =
Addkk= @
(kk@ A
consumokkA H
)kkH I
;kkI J
}ll 
	resultadomm 
=mm #
_transaccionRepositoriomm  7
.mm7 8G
;CrearTransaccionActualizarTransaccionCrearEstadoTransaccionmm8 s
(mms t#
atencionCambioAtencion	mmt ä
,
mmä ã

atencionBD
mmå ñ
,
mmñ ó"
estadoCambiadoSalida
mmò ¨
)
mm¨ ≠
;
mm≠ Æ
}nn 
elseoo 
{pp 

atencionBDqq 
.qq $
id_actor_negocio_internoqq 7
=qq8 9
atencionqq: B
.qqB C

HabitacionqqC M
.qqM N
IdqqN P
;qqP Q
	resultadorr 
=rr #
_transaccionRepositoriorr  7
.rr7 8!
ActualizarTransaccionrr8 M
(rrM N

atencionBDrrN X
)rrX Y
;rrY Z
}ss 
returntt 
	resultadott  
;tt  !
}uu 
catchvv 
(vv 
	Exceptionvv 
evv 
)vv 
{ww 
throwxx 
newxx 
LogicaExceptionxx )
(xx) *
$strxx* _
,xx_ `
exxa b
)xxb c
;xxc d
}yy 
}zz 	
public{{ 
OperationResult{{ "
ResolverEstadoAtencion{{ 5
({{5 6
long{{6 :

idAtencion{{; E
,{{E F
int{{G J
idNuevoEstado{{K X
,{{X Y
string{{Z `
observacion{{a l
,{{l m
int{{n q
[{{q r
]{{r s
idsEstadosValidos	{{t Ö
,
{{Ö Ü$
UserProfileSessionData
{{á ù
sesionUsuario
{{û ´
)
{{´ ¨
{|| 	
try}} 
{~~ 
OperationResult 
	resultado  )
=* +
new, /
OperationResult0 ?
(? @
)@ A
;A B
DateTime
ÄÄ 
fechaActual
ÄÄ $
=
ÄÄ% &
DateTimeUtil
ÄÄ' 3
.
ÄÄ3 4
FechaActual
ÄÄ4 ?
(
ÄÄ? @
)
ÄÄ@ A
;
ÄÄA B
var
ÅÅ 
estado
ÅÅ 
=
ÅÅ !
_maestroRepositorio
ÅÅ 0
.
ÅÅ0 1
ObtenerDetalle
ÅÅ1 ?
(
ÅÅ? @
idNuevoEstado
ÅÅ@ M
)
ÅÅM N
;
ÅÅN O
var
ÇÇ 
atencion
ÇÇ 
=
ÇÇ %
_transaccionRepositorio
ÇÇ 6
.
ÇÇ6 7H
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
ÇÇ7 q
(
ÇÇq r

idAtencion
ÇÇr |
)
ÇÇ| }
;
ÇÇ} ~
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
idsEstadosValidos
ÉÉ &
.
ÉÉ& '
Contains
ÉÉ' /
(
ÉÉ/ 0
(
ÉÉ0 1
int
ÉÉ1 4
)
ÉÉ4 5
atencion
ÉÉ5 =
.
ÉÉ= >
id_estado_actual
ÉÉ> N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
LogicaException
ÖÖ -
(
ÖÖ- .
$str
ÖÖ. Y
)
ÖÖY Z
;
ÖÖZ [
}
ÜÜ  
Estado_transaccion
áá "
estadoTransaccion
áá# 4
=
áá5 6
new
áá7 : 
Estado_transaccion
áá; M
(
ááM N
atencion
ááN V
.
ááV W
id
ááW Y
,
ááY Z
sesionUsuario
áá[ h
.
ááh i
Empleado
áái q
.
ááq r
Id
áár t
,
áát u
idNuevoEstadoááv É
,ááÉ Ñ
fechaActualááÖ ê
,ááê ë
observacionááí ù
)ááù û
;ááû ü
	resultado
àà 
=
àà %
_transaccionRepositorio
àà 3
.
àà3 4+
CrearEstadoDeTransaccionAhora
àà4 Q
(
ààQ R
estadoTransaccion
ààR c
)
ààc d
;
ààd e
estadoTransaccion
ââ !
.
ââ! "
Detalle_maestro
ââ" 1
=
ââ2 3
estado
ââ4 :
;
ââ: ;
	resultado
ää 
.
ää 
information
ää %
=
ää& '
new
ää( +!
EstadoAtencionHotel
ää, ?
(
ää? @
)
ää@ A
{
ãã 
Estados
åå 
=
åå 
new
åå !
List
åå" &
<
åå& '

ItemEstado
åå' 1
>
åå1 2
(
åå2 3
)
åå3 4
{
åå5 6
new
åå7 :

ItemEstado
åå; E
(
ååE F
estadoTransaccion
ååF W
)
ååW X
}
ååY Z
,
ååZ [
	Facturado
çç 
=
çç 
atencion
çç  (
.
çç( ) 
Evento_transaccion
çç) ;
.
çç; <
Select
çç< B
(
ççB C
ev
ççC E
=>
ççF H
ev
ççI K
.
ççK L
	id_evento
ççL U
)
ççU V
.
ççV W
Contains
ççW _
(
çç_ `
MaestroSettings
çç` o
.
çço p
Default
ççp w
.
ççw x.
IdDetalleMaestroEstadoFacturadoççx ó
)ççó ò
}
éé 
;
éé 
return
èè 
	resultado
èè  
;
èè  !
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
e
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì 
LogicaException
ìì )
(
ìì) *
$str
ìì* h
,
ììh i
e
ììj k
)
ììk l
;
ììl m
}
îî 
}
ïï 	
public
ññ 
OperationResult
ññ 
ConfirmarAtencion
ññ 0
(
ññ0 1
long
ññ1 5

idAtencion
ññ6 @
,
ññ@ A
string
ññB H
observacion
ññI T
,
ññT U$
UserProfileSessionData
ññV l
sesionUsuario
ññm z
)
ññz {
{
óó 	
try
òò 
{
ôô 
var
öö 
idsEstadosValidos
öö %
=
öö& '
new
öö( +
List
öö, 0
<
öö0 1
int
öö1 4
>
öö4 5
(
öö5 6
)
öö6 7
{
öö8 9
MaestroSettings
öö: I
.
ööI J
Default
ööJ Q
.
ööQ R.
 IdDetalleMaestroEstadoRegistrado
ööR r
}
öös t
;
ööt u
var
õõ 
idNuevoEstado
õõ !
=
õõ" #
MaestroSettings
õõ$ 3
.
õõ3 4
Default
õõ4 ;
.
õõ; <.
 IdDetalleMaestroEstadoConfirmado
õõ< \
;
õõ\ ]
OperationResult
úú 
	resultado
úú  )
=
úú* +$
ResolverEstadoAtencion
úú, B
(
úúB C

idAtencion
úúC M
,
úúM N
idNuevoEstado
úúO \
,
úú\ ]
observacion
úú^ i
,
úúi j
idsEstadosValidos
úúk |
.
úú| }
ToArrayúú} Ñ
(úúÑ Ö
)úúÖ Ü
,úúÜ á
sesionUsuarioúúà ï
)úúï ñ
;úúñ ó
return
ùù 
	resultado
ùù  
;
ùù  !
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* S
,
°°S T
e
°°U V
)
°°V W
;
°°W X
}
¢¢ 
}
££ 	
public
§§ 
OperationResult
§§ 
CheckInAtencion
§§ .
(
§§. /
long
§§/ 3

idAtencion
§§4 >
,
§§> ?
string
§§@ F
observacion
§§G R
,
§§R S$
UserProfileSessionData
§§T j
sesionUsuario
§§k x
)
§§x y
{
•• 	
try
¶¶ 
{
ßß 
var
®® 
idsEstadosValidos
®® %
=
®®& '
new
®®( +
List
®®, 0
<
®®0 1
int
®®1 4
>
®®4 5
(
®®5 6
)
®®6 7
{
®®8 9
MaestroSettings
®®: I
.
®®I J
Default
®®J Q
.
®®Q R.
 IdDetalleMaestroEstadoConfirmado
®®R r
}
®®s t
;
®®t u
var
©© 
idNuevoEstado
©© !
=
©©" #
MaestroSettings
©©$ 3
.
©©3 4
Default
©©4 ;
.
©©; <-
IdDetalleMaestroEstadoCheckedIn
©©< [
;
©©[ \
OperationResult
™™ 
	resultado
™™  )
=
™™* +$
ResolverEstadoAtencion
™™, B
(
™™B C

idAtencion
™™C M
,
™™M N
idNuevoEstado
™™O \
,
™™\ ]
observacion
™™^ i
,
™™i j
idsEstadosValidos
™™k |
.
™™| }
ToArray™™} Ñ
(™™Ñ Ö
)™™Ö Ü
,™™Ü á
sesionUsuario™™à ï
)™™ï ñ
;™™ñ ó
return
´´ 
	resultado
´´  
;
´´  !
}
¨¨ 
catch
≠≠ 
(
≠≠ 
	Exception
≠≠ 
e
≠≠ 
)
≠≠ 
{
ÆÆ 
throw
ØØ 
new
ØØ 
LogicaException
ØØ )
(
ØØ) *
$str
ØØ* Q
,
ØØQ R
e
ØØS T
)
ØØT U
;
ØØU V
}
∞∞ 
}
±± 	
public
≤≤ 
OperationResult
≤≤ 
CheckOutAtencion
≤≤ /
(
≤≤/ 0
long
≤≤0 4

idAtencion
≤≤5 ?
,
≤≤? @
string
≤≤A G
observacion
≤≤H S
,
≤≤S T$
UserProfileSessionData
≤≤U k
sesionUsuario
≤≤l y
)
≤≤y z
{
≥≥ 	
try
¥¥ 
{
µµ 
var
∂∂  
atencionHabitacion
∂∂ &
=
∂∂' (%
_transaccionRepositorio
∂∂) @
.
∂∂@ AH
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
∂∂A {
(
∂∂{ |

idAtencion∂∂| Ü
)∂∂Ü á
;∂∂á à
var
∑∑ +
consumosPendientesFacturacion
∑∑ 1
=
∑∑2 3%
_transaccionRepositorio
∑∑4 K
.
∑∑K L1
#ObtenerTransacciones11DeTransaccion
∑∑L o
(
∑∑o p

idAtencion
∑∑p z
)
∑∑z {
.
∑∑{ |
Where∑∑| Å
(∑∑Å Ç
c∑∑Ç É
=>∑∑Ñ Ü
c∑∑á à
.∑∑à â#
id_tipo_transaccion∑∑â ú
==∑∑ù ü#
TransaccionSettings∑∑† ≥
.∑∑≥ ¥
Default∑∑¥ ª
.∑∑ª º7
'IdTipoTransaccionOrdenConsumoHabitacion∑∑º „
&&∑∑‰ Ê
c∑∑Á Ë
.∑∑Ë È 
id_estado_actual∑∑È ˘
==∑∑˙ ¸
MaestroSettings∑∑˝ å
.∑∑å ç
Default∑∑ç î
.∑∑î ï0
 IdDetalleMaestroEstadoConfirmado∑∑ï µ
)∑∑µ ∂
.∑∑∂ ∑
ToList∑∑∑ Ω
(∑∑Ω æ
)∑∑æ ø
;∑∑ø ¿
if
∏∏ 
(
∏∏ 
(
∏∏ 
!
∏∏  
atencionHabitacion
∏∏ (
.
∏∏( )

indicador1
∏∏) 3
)
∏∏3 4
||
∏∏5 7+
consumosPendientesFacturacion
∏∏8 U
.
∏∏U V
Where
∏∏V [
(
∏∏[ \
ah
∏∏\ ^
=>
∏∏_ a
ah
∏∏b d
.
∏∏d e

indicador1
∏∏e o
)
∏∏o p
.
∏∏p q
Count
∏∏q v
(
∏∏v w
)
∏∏w x
!=
∏∏y {,
consumosPendientesFacturacion∏∏| ô
.∏∏ô ö
Count∏∏ö ü
)∏∏ü †
{
ππ 
throw
∫∫ 
new
∫∫ 
LogicaException
∫∫ -
(
∫∫- .
$str∫∫. ö
)∫∫ö õ
;∫∫õ ú
}
ªª 
var
ºº 
idsEstadosValidos
ºº %
=
ºº& '
new
ºº( +
List
ºº, 0
<
ºº0 1
int
ºº1 4
>
ºº4 5
(
ºº5 6
)
ºº6 7
{
ºº8 9
MaestroSettings
ºº: I
.
ººI J
Default
ººJ Q
.
ººQ R-
IdDetalleMaestroEstadoCheckedIn
ººR q
,
ººq r
MaestroSettingsººs Ç
.ººÇ É
DefaultººÉ ä
.ººä ã5
%IdDetalleMaestroEstadoEntradaCambiadoººã ∞
}ºº± ≤
;ºº≤ ≥
var
ΩΩ 
idNuevoEstado
ΩΩ !
=
ΩΩ" #
MaestroSettings
ΩΩ$ 3
.
ΩΩ3 4
Default
ΩΩ4 ;
.
ΩΩ; <.
 IdDetalleMaestroEstadoCheckedOut
ΩΩ< \
;
ΩΩ\ ]
OperationResult
ææ 
	resultado
ææ  )
=
ææ* +$
ResolverEstadoAtencion
ææ, B
(
ææB C

idAtencion
ææC M
,
ææM N
idNuevoEstado
ææO \
,
ææ\ ]
observacion
ææ^ i
,
ææi j
idsEstadosValidos
ææk |
.
ææ| }
ToArrayææ} Ñ
(ææÑ Ö
)ææÖ Ü
,ææÜ á
sesionUsuarioææà ï
)ææï ñ
;ææñ ó
return
øø 
	resultado
øø  
;
øø  !
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* R
,
√√R S
e
√√T U
)
√√U V
;
√√V W
}
ƒƒ 
}
≈≈ 	
public
∆∆ 
OperationResult
∆∆ 
AnularAtencion
∆∆ -
(
∆∆- .
long
∆∆. 2

idAtencion
∆∆3 =
,
∆∆= >
long
∆∆? C
idAtencionMacro
∆∆D S
,
∆∆S T
List
∆∆U Y
<
∆∆Y Z!
ComprobanteAtencion
∆∆Z m
>
∆∆m n
comprobantes
∆∆o {
,
∆∆{ |
string∆∆} É
observacion∆∆Ñ è
,∆∆è ê&
UserProfileSessionData∆∆ë ß
sesionUsuario∆∆® µ
)∆∆µ ∂
{
«« 	
try
»» 
{
…… 
var
   
idsEstadosValidos
   %
=
  & '
new
  ( +
List
  , 0
<
  0 1
int
  1 4
>
  4 5
(
  5 6
)
  6 7
{
  8 9
MaestroSettings
  : I
.
  I J
Default
  J Q
.
  Q R.
 IdDetalleMaestroEstadoRegistrado
  R r
,
  r s
MaestroSettings  t É
.  É Ñ
Default  Ñ ã
.  ã å0
 IdDetalleMaestroEstadoConfirmado  å ¨
}  ≠ Æ
;  Æ Ø
var
ÀÀ 
idNuevoEstado
ÀÀ !
=
ÀÀ" #
MaestroSettings
ÀÀ$ 3
.
ÀÀ3 4
Default
ÀÀ4 ;
.
ÀÀ; <+
IdDetalleMaestroEstadoAnulado
ÀÀ< Y
;
ÀÀY Z
DateTime
ÃÃ 
fechaActual
ÃÃ $
=
ÃÃ% &
DateTimeUtil
ÃÃ' 3
.
ÃÃ3 4
FechaActual
ÃÃ4 ?
(
ÃÃ? @
)
ÃÃ@ A
;
ÃÃA B
var
ÕÕ 
estado
ÕÕ 
=
ÕÕ !
_maestroRepositorio
ÕÕ 0
.
ÕÕ0 1
ObtenerDetalle
ÕÕ1 ?
(
ÕÕ? @
idNuevoEstado
ÕÕ@ M
)
ÕÕM N
;
ÕÕN O
var
ŒŒ 
atencionMacro
ŒŒ !
=
ŒŒ" #%
_transaccionRepositorio
ŒŒ$ ;
.
ŒŒ; < 
ObtenerTransaccion
ŒŒ< N
(
ŒŒN O
idAtencionMacro
ŒŒO ^
)
ŒŒ^ _
;
ŒŒ_ `
var
œœ 
atencion
œœ 
=
œœ %
_transaccionRepositorio
œœ 6
.
œœ6 7H
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
œœ7 q
(
œœq r

idAtencion
œœr |
)
œœ| }
;
œœ} ~
if
–– 
(
–– 
!
–– 
idsEstadosValidos
–– &
.
––& '
Contains
––' /
(
––/ 0
(
––0 1
int
––1 4
)
––4 5
atencion
––5 =
.
––= >
id_estado_actual
––> N
)
––N O
)
––O P
{
—— 
throw
““ 
new
““ 
LogicaException
““ -
(
““- .
$str
““. Y
)
““Y Z
;
““Z [
}
””  
Estado_transaccion
‘‘ "
estadoTransaccion
‘‘# 4
=
‘‘5 6
new
‘‘7 : 
Estado_transaccion
‘‘; M
(
‘‘M N
atencion
‘‘N V
.
‘‘V W
id
‘‘W Y
,
‘‘Y Z
sesionUsuario
‘‘[ h
.
‘‘h i
Empleado
‘‘i q
.
‘‘q r
Id
‘‘r t
,
‘‘t u
idNuevoEstado‘‘v É
,‘‘É Ñ
fechaActual‘‘Ö ê
,‘‘ê ë
observacion‘‘í ù
)‘‘ù û
;‘‘û ü
atencionMacro
’’ 
.
’’ 
importe_total
’’ +
-=
’’, .
atencion
’’/ 7
.
’’7 8
importe_total
’’8 E
;
’’E F
var
÷÷ 
	resultado
÷÷ 
=
÷÷ %
_transaccionRepositorio
÷÷  7
.
÷÷7 8@
2CrearEstadoDeTransaccionAhoraActualizarTransaccion
÷÷8 j
(
÷÷j k
estadoTransaccion
÷÷k |
,
÷÷| }
atencionMacro÷÷~ ã
)÷÷ã å
;÷÷å ç
if
ÿÿ 
(
ÿÿ 
atencion
ÿÿ 
.
ÿÿ 
enum1
ÿÿ "
!=
ÿÿ# %
(
ÿÿ& '
int
ÿÿ' *
)
ÿÿ* +"
ModoFacturacionHotel
ÿÿ+ ?
.
ÿÿ? @
NoEspecificado
ÿÿ@ N
)
ÿÿN O
{
ŸŸ 0
"ResolverAnulacionOperacionAtencion
⁄⁄ 6
(
⁄⁄6 7
atencionMacro
⁄⁄7 D
,
⁄⁄D E
atencion
⁄⁄F N
,
⁄⁄N O
comprobantes
⁄⁄P \
,
⁄⁄\ ]
observacion
⁄⁄^ i
,
⁄⁄i j
sesionUsuario
⁄⁄k x
)
⁄⁄x y
;
⁄⁄y z
}
€€ 
estadoTransaccion
‹‹ !
.
‹‹! "
Detalle_maestro
‹‹" 1
=
‹‹2 3
estado
‹‹4 :
;
‹‹: ;
	resultado
›› 
.
›› 
information
›› %
=
››& '
new
››( +!
EstadoAtencionHotel
››, ?
(
››? @
)
››@ A
{
ﬁﬁ 
Estados
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ !
List
ﬂﬂ" &
<
ﬂﬂ& '

ItemEstado
ﬂﬂ' 1
>
ﬂﬂ1 2
(
ﬂﬂ2 3
)
ﬂﬂ3 4
{
ﬂﬂ5 6
new
ﬂﬂ7 :

ItemEstado
ﬂﬂ; E
(
ﬂﬂE F
estadoTransaccion
ﬂﬂF W
)
ﬂﬂW X
}
ﬂﬂY Z
,
ﬂﬂZ [
	Facturado
‡‡ 
=
‡‡ 
atencion
‡‡  (
.
‡‡( ) 
Evento_transaccion
‡‡) ;
.
‡‡; <
Select
‡‡< B
(
‡‡B C
ev
‡‡C E
=>
‡‡F H
ev
‡‡I K
.
‡‡K L
	id_evento
‡‡L U
)
‡‡U V
.
‡‡V W
Contains
‡‡W _
(
‡‡_ `
MaestroSettings
‡‡` o
.
‡‡o p
Default
‡‡p w
.
‡‡w x.
IdDetalleMaestroEstadoFacturado‡‡x ó
)‡‡ó ò
}
·· 
;
·· 
return
‚‚ 
	resultado
‚‚  
;
‚‚  !
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
e
‰‰ 
)
‰‰ 
{
ÂÂ 
throw
ÊÊ 
new
ÊÊ 
LogicaException
ÊÊ )
(
ÊÊ) *
$str
ÊÊ* P
,
ÊÊP Q
e
ÊÊR S
)
ÊÊS T
;
ÊÊT U
}
ÁÁ 
}
ËË 	
public
ÈÈ 
OperationResult
ÈÈ 0
"ResolverAnulacionOperacionAtencion
ÈÈ A
(
ÈÈA B
Transaccion
ÈÈB M
atencionMacro
ÈÈN [
,
ÈÈ[ \
Transaccion
ÈÈ] h
atencion
ÈÈi q
,
ÈÈq r
List
ÈÈs w
<
ÈÈw x"
ComprobanteAtencionÈÈx ã
>ÈÈã å
comprobantesÈÈç ô
,ÈÈô ö
stringÈÈõ °
observacionÈÈ¢ ≠
,ÈÈ≠ Æ&
UserProfileSessionDataÈÈØ ≈
sesionUsuarioÈÈ∆ ”
)ÈÈ” ‘
{
ÍÍ 	
try
ÎÎ 
{
ÏÏ 
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
i
ÌÌ  !
<
ÌÌ" #
comprobantes
ÌÌ$ 0
.
ÌÌ0 1
Count
ÌÌ1 6
;
ÌÌ6 7
i
ÌÌ8 9
++
ÌÌ9 ;
)
ÌÌ; <
{
ÓÓ 
OperationResult
ÔÔ #
	resultado
ÔÔ$ -
=
ÔÔ. /
atencion
ÔÔ0 8
.
ÔÔ8 9
enum1
ÔÔ9 >
==
ÔÔ? A
(
ÔÔB C
int
ÔÔC F
)
ÔÔF G"
ModoFacturacionHotel
ÔÔG [
.
ÔÔ[ \

Individual
ÔÔ\ f
?
ÔÔg h
_logicaOperacion
ÔÔi y
.
ÔÔy z#
AnularOperacionVentaÔÔz é
(ÔÔé è
comprobantesÔÔè õ
[ÔÔõ ú
iÔÔú ù
]ÔÔù û
.ÔÔû ü
IdOrdenVentaÔÔü ´
,ÔÔ´ ¨
comprobantesÔÔ≠ π
[ÔÔπ ∫
iÔÔ∫ ª
]ÔÔª º
.ÔÔº Ω
	DarDeBajaÔÔΩ ∆
,ÔÔ∆ «
observacionÔÔ» ”
,ÔÔ” ‘
$numÔÔ’ ÷
,ÔÔ÷ ◊
sesionUsuarioÔÔÿ Â
)ÔÔÂ Ê
:ÔÔÁ Ë
(ÔÔÈ Í
comprobantesÔÔÍ ˆ
[ÔÔˆ ˜
iÔÔ˜ ¯
]ÔÔ¯ ˘
.ÔÔ˘ ˙
ImporteÔÔ˙ Å
==ÔÔÇ Ñ
comprobantesÔÔÖ ë
[ÔÔë í
iÔÔí ì
]ÔÔì î
.ÔÔî ï

MontoSolesÔÔï ü
?ÔÔ† ° 
_logicaOperacionÔÔ¢ ≤
.ÔÔ≤ ≥$
AnularOperacionVentaÔÔ≥ «
(ÔÔ« »
comprobantesÔÔ» ‘
[ÔÔ‘ ’
iÔÔ’ ÷
]ÔÔ÷ ◊
.ÔÔ◊ ÿ
IdOrdenVentaÔÔÿ ‰
,ÔÔ‰ Â
comprobantesÔÔÊ Ú
[ÔÔÚ Û
iÔÔÛ Ù
]ÔÔÙ ı
.ÔÔı ˆ
	DarDeBajaÔÔˆ ˇ
,ÔÔˇ Ä
observacionÔÔÅ å
,ÔÔå ç
$numÔÔé è
,ÔÔè ê
sesionUsuarioÔÔë û
)ÔÔû ü
:ÔÔ† ° 
_logicaOperacionÔÔ¢ ≤
.ÔÔ≤ ≥-
DescuentoGlobalOperacionVentaÔÔ≥ –
(ÔÔ– —
comprobantesÔÔ— ›
[ÔÔ› ﬁ
iÔÔﬁ ﬂ
]ÔÔﬂ ‡
.ÔÔ‡ ·
IdOrdenVentaÔÔ· Ì
,ÔÔÌ Ó
comprobantesÔÔÔ ˚
[ÔÔ˚ ¸
iÔÔ¸ ˝
]ÔÔ˝ ˛
.ÔÔ˛ ˇ

MontoSolesÔÔˇ â
,ÔÔâ ä
observacionÔÔã ñ
,ÔÔñ ó
$numÔÔò ô
,ÔÔô ö
sesionUsuarioÔÔõ ®
)ÔÔ® ©
)ÔÔ© ™
;ÔÔ™ ´
if
 
(
 
	resultado
 !
.
! "
code_result
" -
!=
. 0!
OperationResultEnum
1 D
.
D E
Success
E L
)
L M
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ !
LogicaException
ÚÚ" 1
(
ÚÚ1 2
$strÚÚ2 Ê
)ÚÚÊ Á
;ÚÚÁ Ë
}
ÛÛ 
}
ÙÙ 
return
ıı 
new
ıı 
OperationResult
ıı *
(
ıı* +!
OperationResultEnum
ıı+ >
.
ıı> ?
Success
ıı? F
)
ııF G
;
ııG H
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
e
˜˜ 
)
˜˜ 
{
¯¯ 
throw
˘˘ 
new
˘˘ 
LogicaException
˘˘ )
(
˘˘) *
$str
˘˘* d
,
˘˘d e
e
˘˘f g
)
˘˘g h
;
˘˘h i
}
˙˙ 
}
˚˚ 	
public
¸¸ 
List
¸¸ 
<
¸¸ !
ComprobanteAtencion
¸¸ '
>
¸¸' (+
ObtenerComprobantesDeAtencion
¸¸) F
(
¸¸F G
long
¸¸G K
idAtencionMacro
¸¸L [
,
¸¸[ \
long
¸¸] a

idAtencion
¸¸b l
)
¸¸l m
{
˝˝ 	
try
˛˛ 
{
ˇˇ 
List
ÄÄ 
<
ÄÄ !
ComprobanteAtencion
ÄÄ (
>
ÄÄ( )
comprobantes
ÄÄ* 6
=
ÄÄ7 8
new
ÄÄ9 <
List
ÄÄ= A
<
ÄÄA B!
ComprobanteAtencion
ÄÄB U
>
ÄÄU V
(
ÄÄV W
)
ÄÄW X
;
ÄÄX Y
var
ÅÅ 
atencion
ÅÅ 
=
ÅÅ %
_transaccionRepositorio
ÅÅ 6
.
ÅÅ6 7H
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
ÅÅ7 q
(
ÅÅq r

idAtencion
ÅÅr |
)
ÅÅ| }
;
ÅÅ} ~
if
ÇÇ 
(
ÇÇ 
atencion
ÇÇ 
.
ÇÇ 
enum1
ÇÇ "
!=
ÇÇ# %
(
ÇÇ& '
int
ÇÇ' *
)
ÇÇ* +"
ModoFacturacionHotel
ÇÇ+ ?
.
ÇÇ? @
NoEspecificado
ÇÇ@ N
)
ÇÇN O
{
ÉÉ 
var
ÑÑ $
idAtencionReferenciado
ÑÑ .
=
ÑÑ/ 0
atencion
ÑÑ1 9
.
ÑÑ9 :
enum1
ÑÑ: ?
==
ÑÑ@ B
(
ÑÑC D
int
ÑÑD G
)
ÑÑG H"
ModoFacturacionHotel
ÑÑH \
.
ÑÑ\ ]
Global
ÑÑ] c
?
ÑÑd e
idAtencionMacro
ÑÑf u
:
ÑÑv w

idAtencionÑÑx Ç
;ÑÑÇ É
var
ÖÖ $
idsOrdenVentaPrincipal
ÖÖ .
=
ÖÖ/ 0%
_transaccionRepositorio
ÖÖ1 H
.
ÖÖH I1
#ObtenerTransacciones11DeTransaccion
ÖÖI l
(
ÖÖl m%
idAtencionReferenciadoÖÖm É
)ÖÖÉ Ñ
.ÖÖÑ Ö
WhereÖÖÖ ä
(ÖÖä ã
tÖÖã å
=>ÖÖç è
tÖÖê ë
.ÖÖë í#
id_tipo_transaccionÖÖí •
==ÖÖ¶ ®#
TransaccionSettingsÖÖ© º
.ÖÖº Ω
DefaultÖÖΩ ƒ
.ÖÖƒ ≈-
IdTipoTransaccionOrdenDeVentaÖÖ≈ ‚
&&ÖÖ„ Â
tÖÖÊ Á
.ÖÖÁ Ë 
id_estado_actualÖÖË ¯
==ÖÖ˘ ˚
MaestroSettingsÖÖ¸ ã
.ÖÖã å
DefaultÖÖå ì
.ÖÖì î0
 IdDetalleMaestroEstadoConfirmadoÖÖî ¥
)ÖÖ¥ µ
.ÖÖµ ∂
SelectÖÖ∂ º
(ÖÖº Ω
ovÖÖΩ ø
=>ÖÖ¿ ¬
ovÖÖ√ ≈
.ÖÖ≈ ∆
idÖÖ∆ »
)ÖÖ» …
;ÖÖ…  
var
ÜÜ %
idsOrdenVentaSecundario
ÜÜ /
=
ÜÜ0 1%
_transaccionRepositorio
ÜÜ2 I
.
ÜÜI J?
1ObtenerTransacciones11DeTransaccion3DeTransaccion
ÜÜJ {
(
ÜÜ{ |%
idAtencionReferenciadoÜÜ| í
)ÜÜí ì
.ÜÜì î
WhereÜÜî ô
(ÜÜô ö
tÜÜö õ
=>ÜÜú û
tÜÜü †
.ÜÜ† °#
id_tipo_transaccionÜÜ° ¥
==ÜÜµ ∑#
TransaccionSettingsÜÜ∏ À
.ÜÜÀ Ã
DefaultÜÜÃ ”
.ÜÜ” ‘-
IdTipoTransaccionOrdenDeVentaÜÜ‘ Ò
&&ÜÜÚ Ù
tÜÜı ˆ
.ÜÜˆ ˜ 
id_estado_actualÜÜ˜ á
==ÜÜà ä
MaestroSettingsÜÜã ö
.ÜÜö õ
DefaultÜÜõ ¢
.ÜÜ¢ £0
 IdDetalleMaestroEstadoConfirmadoÜÜ£ √
)ÜÜ√ ƒ
.ÜÜƒ ≈
SelectÜÜ≈ À
(ÜÜÀ Ã
ovÜÜÃ Œ
=>ÜÜœ —
ovÜÜ“ ‘
.ÜÜ‘ ’
idÜÜ’ ◊
)ÜÜ◊ ÿ
;ÜÜÿ Ÿ
var
áá 
idsOrdenVenta
áá %
=
áá& '$
idsOrdenVentaPrincipal
áá( >
==
áá? A
null
ááB F
?
ááG H
(
ááI J%
idsOrdenVentaSecundario
ááJ a
??
ááb d
null
ááe i
)
áái j
:
áák l
(
áám n&
idsOrdenVentaSecundarioáán Ö
==ááÜ à
nullááâ ç
?ááé è&
idsOrdenVentaPrincipalááê ¶
:ááß ®&
idsOrdenVentaPrincipaláá© ø
.ááø ¿
Unionáá¿ ≈
(áá≈ ∆'
idsOrdenVentaSecundarioáá∆ ›
)áá› ﬁ
)ááﬁ ﬂ
;ááﬂ ‡
foreach
àà 
(
àà 
var
àà  
idOrdenVenta
àà! -
in
àà. 0
idsOrdenVenta
àà1 >
)
àà> ?
{
ââ 
OrdenDeVenta
ää $
ordenDeVenta
ää% 1
=
ää2 3
new
ää4 7
OrdenDeVenta
ää8 D
(
ääD E%
_transaccionRepositorio
ääE \
.
ää\ ]G
8ObtenerTransaccionInclusiveActoresYDetalleMaestroYEstadoää] ï
(ääï ñ
idOrdenVentaääñ ¢
)ää¢ £
)ää£ §
;ää§ •
var
ãã 
montoDescuento
ãã *
=
ãã+ ,%
_transaccionRepositorio
ãã- D
.
ããD E1
#ObtenerTransacciones11DeTransaccion
ããE h
(
ããh i
idOrdenVenta
ããi u
)
ããu v
.
ããv w
Where
ããw |
(
ãã| }
t
ãã} ~
=>ãã Å
DiccionarioããÇ ç
.ããç éW
GTiposDeTransaccionOrdenesDeOperacionesDeVentasSoloNotasDeCreditoYDebitoããé ’
.ãã’ ÷
Containsãã÷ ﬁ
(ããﬁ ﬂ
tããﬂ ‡
.ãã‡ ·#
id_tipo_transaccionãã· Ù
)ããÙ ı
)ããı ˆ
.ããˆ ˜
Sumãã˜ ˙
(ãã˙ ˚
tãã˚ ¸
=>ãã˝ ˇ
tããÄ Å
.ããÅ Ç
importe_totalããÇ è
)ããè ê
;ããê ë
var
åå 
montoHospedaje
åå *
=
åå+ ,
ordenDeVenta
åå- 9
.
åå9 :
Detalles
åå: B
(
ååB C
)
ååC D
.
ååD E
Where
ååE J
(
ååJ K
d
ååK L
=>
ååM O
d
ååP Q
.
ååQ R
Producto
ååR Z
.
ååZ [
IdConceptoBasico
åå[ k
==
åål n
HotelSettings
ååo |
.
åå| }
Defaultåå} Ñ
.ååÑ Ö1
!IdDetalleMaestroFamiliaHabitacionååÖ ¶
)åå¶ ß
.ååß ®
Sumåå® ´
(åå´ ¨
dåå¨ ≠
=>ååÆ ∞
dåå± ≤
.åå≤ ≥
Importeåå≥ ∫
)åå∫ ª
;ååª º
comprobantes
çç $
.
çç$ %
Add
çç% (
(
çç( )
new
çç) ,!
ComprobanteAtencion
çç- @
{
éé 

IdAtencion
èè &
=
èè' (

idAtencion
èè) 3
,
èè3 4
IdOrdenVenta
êê (
=
êê) *
ordenDeVenta
êê+ 7
.
êê7 8
Id
êê8 :
,
êê: ;%
SerieYNumeroComprobante
ëë 3
=
ëë4 5
ordenDeVenta
ëë6 B
.
ëëB C
Comprobante
ëëC N
(
ëëN O
)
ëëO P
.
ëëP Q
SerieYNumero
ëëQ ]
(
ëë] ^
)
ëë^ _
,
ëë_ `
Importe
íí #
=
íí$ %
ordenDeVenta
íí& 2
.
íí2 3
Total
íí3 8
,
íí8 9
MontoHospedaje
ìì *
=
ìì+ ,
montoHospedaje
ìì- ;
,
ìì; <
	Descuento
îî %
=
îî& '
montoDescuento
îî( 6
,
îî6 7
PuedeDarDeBaja
ïï *
=
ïï+ ,
ordenDeVenta
ïï- 9
.
ïï9 :
FechaEmision
ïï: F
.
ïïF G
AddDays
ïïG N
(
ïïN O,
FacturacionElectronicaSettings
ïïO m
.
ïïm n
Default
ïïn u
.
ïïu v=
.PlazoEnDiasParaInvalidarComprobanteElectronicoïïv §
)ïï§ •
>=ïï¶ ®
DateTimeUtilïï© µ
.ïïµ ∂
FechaActualïï∂ ¡
(ïï¡ ¬
)ïï¬ √
&&ïïƒ ∆
montoDescuentoïï« ’
==ïï÷ ÿ
$numïïŸ ⁄
&&ïï€ ›
ordenDeVentaïïﬁ Í
.ïïÍ Î
TotalïïÎ 
==ïïÒ Û
montoHospedajeïïÙ Ç
,ïïÇ É
IdTipoComprobante
ññ -
=
ññ. /
ordenDeVenta
ññ0 <
.
ññ< =
IdTipoComprobante
ññ= N
}
óó 
)
óó 
;
óó 
}
òò 
comprobantes
ôô  
.
ôô  !
	RemoveAll
ôô! *
(
ôô* +
c
ôô+ ,
=>
ôô- /
c
ôô0 1
.
ôô1 2

Diferencia
ôô2 <
==
ôô= ?
$num
ôô@ A
)
ôôA B
;
ôôB C
comprobantes
öö  
.
öö  !
ForEach
öö! (
(
öö( )
c
öö) *
=>
öö+ -
c
öö. /
.
öö/ 0
	DarDeBaja
öö0 9
=
öö: ;
c
öö< =
.
öö= >
PuedeDarDeBaja
öö> L
)
ööL M
;
ööM N
}
õõ 
return
úú 
comprobantes
úú #
;
úú# $
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
e
ûû 
)
ûû 
{
üü 
throw
†† 
new
†† 
LogicaException
†† )
(
††) *
$str
††* w
,
††w x
e
††y z
)
††z {
;
††{ |
}
°° 
}
¢¢ 	
public
££ 
OperationResult
££ (
RegistrarIncidenteAtencion
££ 9
(
££9 :
long
££: >

idAtencion
££? I
,
££I J
long
££K O
idAtencionMacro
££P _
,
££_ `
bool
££a e
esDevolucion
££f r
,
££r s
List
££t x
<
££x y"
ComprobanteAtencion££y å
>££å ç
comprobantes££é ö
,££ö õ
string££ú ¢
observacion£££ Æ
,££Æ Ø&
UserProfileSessionData££∞ ∆
sesionUsuario££« ‘
)££‘ ’
{
§§ 	
try
•• 
{
¶¶ 
var
ßß 
idsEstadosValidos
ßß %
=
ßß& '
new
ßß( +
List
ßß, 0
<
ßß0 1
int
ßß1 4
>
ßß4 5
(
ßß5 6
)
ßß6 7
{
ßß8 9
MaestroSettings
ßß: I
.
ßßI J
Default
ßßJ Q
.
ßßQ R-
IdDetalleMaestroEstadoCheckedIn
ßßR q
,
ßßq r
MaestroSettingsßßs Ç
.ßßÇ É
DefaultßßÉ ä
.ßßä ã5
%IdDetalleMaestroEstadoEntradaCambiadoßßã ∞
}ßß± ≤
;ßß≤ ≥
var
®® 
idNuevoEvento
®® !
=
®®" #
MaestroSettings
®®$ 3
.
®®3 4
Default
®®4 ;
.
®®; <-
IdDetalleMaestroEstadoIncidente
®®< [
;
®®[ \
DateTime
©© 
fechaActual
©© $
=
©©% &
DateTimeUtil
©©' 3
.
©©3 4
FechaActual
©©4 ?
(
©©? @
)
©©@ A
;
©©A B
var
™™ 
eventoIncidente
™™ #
=
™™$ %!
_maestroRepositorio
™™& 9
.
™™9 :
ObtenerDetalle
™™: H
(
™™H I
idNuevoEvento
™™I V
)
™™V W
;
™™W X
var
´´ 
atencionMacro
´´ !
=
´´" #%
_transaccionRepositorio
´´$ ;
.
´´; < 
ObtenerTransaccion
´´< N
(
´´N O
idAtencionMacro
´´O ^
)
´´^ _
;
´´_ `
var
¨¨ 
atencion
¨¨ 
=
¨¨ %
_transaccionRepositorio
¨¨ 6
.
¨¨6 7H
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
¨¨7 q
(
¨¨q r

idAtencion
¨¨r |
)
¨¨| }
;
¨¨} ~
if
≠≠ 
(
≠≠ 
!
≠≠ 
idsEstadosValidos
≠≠ &
.
≠≠& '
Contains
≠≠' /
(
≠≠/ 0
(
≠≠0 1
int
≠≠1 4
)
≠≠4 5
atencion
≠≠5 =
.
≠≠= >
id_estado_actual
≠≠> N
)
≠≠N O
)
≠≠O P
{
ÆÆ 
throw
ØØ 
new
ØØ 
LogicaException
ØØ -
(
ØØ- .
$str
ØØ. Y
)
ØØY Z
;
ØØZ [
}
∞∞ 
var
±± ,
estadoActualAtencionHabitacion
±± 2
=
±±3 4
new
±±5 8!
EstadoAtencionHotel
±±9 L
{
≤≤ 

IdAuxiliar
≥≥ 
=
≥≥  

idAtencion
≥≥! +
,
≥≥+ ,
Estados
¥¥ 
=
¥¥ 
new
¥¥ !
List
¥¥" &
<
¥¥& '

ItemEstado
¥¥' 1
>
¥¥1 2
(
¥¥2 3
)
¥¥3 4
{
¥¥5 6
new
¥¥7 :

ItemEstado
¥¥; E
(
¥¥E F
atencion
¥¥F N
.
¥¥N O 
Estado_transaccion
¥¥O a
.
¥¥a b
Last
¥¥b f
(
¥¥f g
)
¥¥g h
)
¥¥h i
}
¥¥j k
}
µµ 
;
µµ  
Evento_transaccion
∂∂ "
eventoTransaccion
∂∂# 4
=
∂∂5 6
new
∂∂7 : 
Evento_transaccion
∂∂; M
(
∂∂M N
atencion
∂∂N V
.
∂∂V W
id
∂∂W Y
,
∂∂Y Z
sesionUsuario
∂∂[ h
.
∂∂h i
Empleado
∂∂i q
.
∂∂q r
Id
∂∂r t
,
∂∂t u
idNuevoEvento∂∂v É
,∂∂É Ñ
fechaActual∂∂Ö ê
,∂∂ê ë
observacion∂∂í ù
)∂∂ù û
;∂∂û ü
var
∑∑ 
	resultado
∑∑ 
=
∑∑ %
_transaccionRepositorio
∑∑  7
.
∑∑7 8$
CrearEventoTransaccion
∑∑8 N
(
∑∑N O
eventoTransaccion
∑∑O `
)
∑∑` a
;
∑∑a b
if
∏∏ 
(
∏∏ 
	resultado
∏∏ 
.
∏∏ 
code_result
∏∏ )
==
∏∏* ,!
OperationResultEnum
∏∏- @
.
∏∏@ A
Success
∏∏A H
)
∏∏H I
{
ππ /
!ResolverRegistroIncidenteAtencion
∫∫ 5
(
∫∫5 6
(
∫∫6 7
int
∫∫7 :
)
∫∫: ;
	resultado
∫∫; D
.
∫∫D E
information
∫∫E P
,
∫∫P Q
esDevolucion
∫∫R ^
,
∫∫^ _
comprobantes
∫∫` l
,
∫∫l m
sesionUsuario
∫∫n {
)
∫∫{ |
;
∫∫| }
}
ªª 
eventoTransaccion
ºº !
.
ºº! "
Detalle_maestro
ºº" 1
=
ºº2 3
eventoIncidente
ºº4 C
;
ººC D,
estadoActualAtencionHabitacion
ΩΩ .
.
ΩΩ. /
Estados
ΩΩ/ 6
.
ΩΩ6 7
Add
ΩΩ7 :
(
ΩΩ: ;
new
ΩΩ; >

ItemEstado
ΩΩ? I
(
ΩΩI J
eventoTransaccion
ΩΩJ [
)
ΩΩ[ \
)
ΩΩ\ ]
;
ΩΩ] ^
	resultado
ææ 
.
ææ 
information
ææ %
=
ææ& ',
estadoActualAtencionHabitacion
ææ( F
;
ææF G
return
øø 
	resultado
øø  
;
øø  !
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* ]
,
√√] ^
e
√√_ `
)
√√` a
;
√√a b
}
ƒƒ 
}
≈≈ 	
public
∆∆ 
OperationResult
∆∆ /
!ResolverRegistroIncidenteAtencion
∆∆ @
(
∆∆@ A
int
∆∆A D!
idEventoTransaccion
∆∆E X
,
∆∆X Y
bool
∆∆Z ^
esDevolucion
∆∆_ k
,
∆∆k l
List
∆∆m q
<
∆∆q r"
ComprobanteAtencion∆∆r Ö
>∆∆Ö Ü
comprobantes∆∆á ì
,∆∆ì î&
UserProfileSessionData∆∆ï ´
sesionUsuario∆∆¨ π
)∆∆π ∫
{
«« 	
try
»» 
{
…… 
for
   
(
   
int
   
i
   
=
   
$num
   
;
   
i
    !
<
  " #
comprobantes
  $ 0
.
  0 1
Count
  1 6
;
  6 7
i
  8 9
++
  9 ;
)
  ; <
{
ÀÀ 
OperationResult
ÃÃ #
	resultado
ÃÃ$ -
=
ÃÃ. /
esDevolucion
ÃÃ0 <
?
ÃÃ= >
(
ÃÃ? @
(
ÃÃ@ A
comprobantes
ÃÃA M
[
ÃÃM N
i
ÃÃN O
]
ÃÃO P
.
ÃÃP Q
	Descuento
ÃÃQ Z
==
ÃÃ[ ]
$num
ÃÃ^ _
&&
ÃÃ` b
comprobantes
ÃÃc o
[
ÃÃo p
i
ÃÃp q
]
ÃÃq r
.
ÃÃr s
Importe
ÃÃs z
==
ÃÃ{ }
comprobantesÃÃ~ ä
[ÃÃä ã
iÃÃã å
]ÃÃå ç
.ÃÃç é
MontoHospedajeÃÃé ú
)ÃÃú ù
?ÃÃû ü 
_logicaOperacionÃÃ† ∞
.ÃÃ∞ ±$
AnularOperacionVentaÃÃ± ≈
(ÃÃ≈ ∆
comprobantesÃÃ∆ “
[ÃÃ“ ”
iÃÃ” ‘
]ÃÃ‘ ’
.ÃÃ’ ÷
IdOrdenVentaÃÃ÷ ‚
,ÃÃ‚ „
comprobantesÃÃ‰ 
[ÃÃ Ò
iÃÃÒ Ú
]ÃÃÚ Û
.ÃÃÛ Ù
	DarDeBajaÃÃÙ ˝
,ÃÃ˝ ˛
$strÃÃˇ ë
,ÃÃë í#
idEventoTransaccionÃÃì ¶
,ÃÃ¶ ß
sesionUsuarioÃÃ® µ
)ÃÃµ ∂
:ÃÃ∑ ∏ 
_logicaOperacionÃÃπ …
.ÃÃ…  -
DescuentoGlobalOperacionVentaÃÃ  Á
(ÃÃÁ Ë
comprobantesÃÃË Ù
[ÃÃÙ ı
iÃÃı ˆ
]ÃÃˆ ˜
.ÃÃ˜ ¯
IdOrdenVentaÃÃ¯ Ñ
,ÃÃÑ Ö
comprobantesÃÃÜ í
[ÃÃí ì
iÃÃì î
]ÃÃî ï
.ÃÃï ñ

DiferenciaÃÃñ †
,ÃÃ† °
$strÃÃ¢ ¥
,ÃÃ¥ µ#
idEventoTransaccionÃÃ∂ …
,ÃÃ…  
sesionUsuarioÃÃÀ ÿ
)ÃÃÿ Ÿ
)ÃÃŸ ⁄
:ÃÃ€ ‹ 
_logicaOperacionÃÃ› Ì
.ÃÃÌ Ó-
DescuentoGlobalOperacionVentaÃÃÓ ã
(ÃÃã å
comprobantesÃÃå ò
[ÃÃò ô
iÃÃô ö
]ÃÃö õ
.ÃÃõ ú
IdOrdenVentaÃÃú ®
,ÃÃ® ©
comprobantesÃÃ™ ∂
[ÃÃ∂ ∑
iÃÃ∑ ∏
]ÃÃ∏ π
.ÃÃπ ∫

MontoSolesÃÃ∫ ƒ
,ÃÃƒ ≈
$strÃÃ∆ —
,ÃÃ— “#
idEventoTransaccionÃÃ” Ê
,ÃÃÊ Á
sesionUsuarioÃÃË ı
)ÃÃı ˆ
;ÃÃˆ ˜
if
ÕÕ 
(
ÕÕ 
	resultado
ÕÕ !
.
ÕÕ! "
code_result
ÕÕ" -
!=
ÕÕ. 0!
OperationResultEnum
ÕÕ1 D
.
ÕÕD E
Success
ÕÕE L
)
ÕÕL M
{
ŒŒ 
throw
œœ 
new
œœ !
LogicaException
œœ" 1
(
œœ1 2
$strœœ2 Ú
)œœÚ Û
;œœÛ Ù
}
–– 
}
—— 
return
““ 
new
““ 
OperationResult
““ *
(
““* +!
OperationResultEnum
““+ >
.
““> ?
Success
““? F
)
““F G
;
““G H
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
e
‘‘ 
)
‘‘ 
{
’’ 
throw
÷÷ 
new
÷÷ 
LogicaException
÷÷ )
(
÷÷) *
$str
÷÷* k
,
÷÷k l
e
÷÷m n
)
÷÷n o
;
÷÷o p
}
◊◊ 
}
ÿÿ 	
}
ŸŸ 
}⁄⁄ ≠\
RD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelPlanificador_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public   
ReportePlanificador   "&
ObtenerReportePlanificador  # =
(  = >
int  > A
idEstablecimiento  B S
,  S T
int  U X)
idActorNegocioQueTienePrecios  Y v
)  v w
{!! 	
try"" 
{## 
DateTime$$ 
fechaActual$$ $
=$$% &
DateTimeUtil$$' 3
.$$3 4
FechaActual$$4 ?
($$? @
)$$@ A
;$$A B
var%% %
idsAmbientesSeleccionados%% -
=%%. /3
'ObtenerAmbientesHotelPorEstablecimiento%%0 W
(%%W X
idEstablecimiento%%X i
)%%i j
.%%j k
Select%%k q
(%%q r
a%%r s
=>%%t v
a%%w x
.%%x y
Id%%y {
)%%{ |
.%%| }
ToList	%%} É
(
%%É Ñ
)
%%Ñ Ö
;
%%Ö Ü
var&& +
idsTiposHabitacionSeleccionados&& 3
=&&4 5#
ObtenerTipoHabitaciones&&6 M
(&&M N
)&&N O
.&&O P
Select&&P V
(&&V W
a&&W X
=>&&Y [
a&&\ ]
.&&] ^
Id&&^ `
)&&` a
.&&a b
ToList&&b h
(&&h i
)&&i j
;&&j k
var'' %
habitacionesSeleccionadas'' -
=''. /
_hotelRepositorio''0 A
.''A B+
ObtenerHabitacionesPlanificador''B a
(''a b%
idsAmbientesSeleccionados''b {
.''{ |
ToArray	''| É
(
''É Ñ
)
''Ñ Ö
,
''Ö Ü-
idsTiposHabitacionSeleccionados
''á ¶
.
''¶ ß
ToArray
''ß Æ
(
''Æ Ø
)
''Ø ∞
,
''∞ ±+
idActorNegocioQueTienePrecios
''≤ œ
,
''œ –
fechaActual
''— ‹
)
''‹ ›
.
''› ﬁ
ToList
''ﬁ ‰
(
''‰ Â
)
''Â Ê
;
''Ê Á
ReportePlanificador(( #
reportePlanificador(($ 7
=((8 9
new((: =
ReportePlanificador((> Q
(((Q R
)((R S
;((S T
reportePlanificador)) #
.))# $
Disponibles))$ /
=))0 1%
habitacionesSeleccionadas))2 K
.))K L
Where))L Q
())Q R
hs))R T
=>))U W
hs))X Z
.))Z [

Disponible))[ e
)))e f
.))f g
Count))g l
())l m
)))m n
;))n o
reportePlanificador** #
.**# $
Ocupadas**$ ,
=**- .%
habitacionesSeleccionadas**/ H
.**H I
Where**I N
(**N O
hs**O Q
=>**R T
hs**U W
.**W X
Ocupada**X _
)**_ `
.**` a
Count**a f
(**f g
)**g h
;**h i
reportePlanificador++ #
.++# $
PorIngresar++$ /
=++0 1%
habitacionesSeleccionadas++2 K
.++K L
Where++L Q
(++Q R
hs++R T
=>++U W
hs++X Z
.++Z [
PorIngresar++[ f
)++f g
.++g h
Count++h m
(++m n
)++n o
;++o p
reportePlanificador,, #
.,,# $
PorSalir,,$ ,
=,,- .%
habitacionesSeleccionadas,,/ H
.,,H I
Where,,I N
(,,N O
hs,,O Q
=>,,R T
hs,,U W
.,,W X
PorSalir,,X `
),,` a
.,,a b
Count,,b g
(,,g h
),,h i
;,,i j
reportePlanificador-- #
.--# $

EnLimpieza--$ .
=--/ 0%
habitacionesSeleccionadas--1 J
.--J K
Where--K P
(--P Q
hs--Q S
=>--T V
hs--W Y
.--Y Z

EnLimpieza--Z d
)--d e
.--e f
Count--f k
(--k l
)--l m
;--m n
reportePlanificador.. #
...# $
FechaActual..$ /
=..0 1
fechaActual..2 =
;..= >
return// 
reportePlanificador// *
;//* +
}00 
catch11 
(11 
	Exception11 
e11 
)11 
{22 
throw33 
new33 
LogicaException33 )
(33) *
$str33* Z
,33Z [
e33\ ]
)33] ^
;33^ _
}44 
}55 	
public66 
Planificador66 +
ObtenerPlanificadorHabitaciones66 ;
(66; <
int66< ?
idEstablecimiento66@ Q
,66Q R
DateTime66S [

fechaDesde66\ f
,66f g
DateTime66h p

fechaHasta66q {
,66{ |
int	66} Ä

idAmbiente
66Å ã
,
66ã å
int
66ç ê
idTipoHabitacion
66ë °
,
66° ¢
int
66£ ¶+
idActorNegocioQueTienePrecios
66ß ƒ
)
66ƒ ≈
{77 	
try88 
{99 
Planificador:: $
planificadorHabitaciones:: 5
=::6 7
new::8 ;
Planificador::< H
(::H I
)::I J
;::J K
DateTime;; 
fechaActual;; $
=;;% &
DateTimeUtil;;' 3
.;;3 4
FechaActual;;4 ?
(;;? @
);;@ A
;;;A B
var<< %
idsAmbientesSeleccionados<< -
=<<. /
(<<0 1

idAmbiente<<1 ;
==<<< >
$num<<? @
)<<@ A
?<<B C3
'ObtenerAmbientesHotelPorEstablecimiento<<D k
(<<k l
idEstablecimiento<<l }
)<<} ~
.<<~ 
Select	<< Ö
(
<<Ö Ü
a
<<Ü á
=>
<<à ä
a
<<ã å
.
<<å ç
Id
<<ç è
)
<<è ê
.
<<ê ë
ToList
<<ë ó
(
<<ó ò
)
<<ò ô
:
<<ö õ
new
<<ú ü
List
<<† §
<
<<§ •
int
<<• ®
>
<<® ©
(
<<© ™
)
<<™ ´
{
<<¨ ≠

idAmbiente
<<Æ ∏
}
<<π ∫
;
<<∫ ª
var== +
idsTiposHabitacionSeleccionados== 3
===4 5
(==6 7
idTipoHabitacion==7 G
====H J
$num==K L
)==L M
?==N O#
ObtenerTipoHabitaciones==P g
(==g h
)==h i
.==i j
Select==j p
(==p q
a==q r
=>==s u
a==v w
.==w x
Id==x z
)==z {
.=={ |
ToList	==| Ç
(
==Ç É
)
==É Ñ
:
==Ö Ü
new
==á ä
List
==ã è
<
==è ê
int
==ê ì
>
==ì î
(
==î ï
)
==ï ñ
{
==ó ò
idTipoHabitacion
==ô ©
}
==™ ´
;
==´ ¨
var>> %
habitacionesSeleccionadas>> -
=>>. /
_hotelRepositorio>>0 A
.>>A B+
ObtenerHabitacionesPlanificador>>B a
(>>a b%
idsAmbientesSeleccionados>>b {
.>>{ |
ToArray	>>| É
(
>>É Ñ
)
>>Ñ Ö
,
>>Ö Ü-
idsTiposHabitacionSeleccionados
>>á ¶
.
>>¶ ß
ToArray
>>ß Æ
(
>>Æ Ø
)
>>Ø ∞
,
>>∞ ±+
idActorNegocioQueTienePrecios
>>≤ œ
,
>>œ –
fechaActual
>>— ‹
)
>>‹ ›
.
>>› ﬁ
ToList
>>ﬁ ‰
(
>>‰ Â
)
>>Â Ê
;
>>Ê Á%
habitacionesSeleccionadas?? )
=??* +%
habitacionesSeleccionadas??, E
.??E F
OrderBy??F M
(??M N
hs??N P
=>??Q S
hs??T V
.??V W
TipoHabitacion??W e
)??e f
.??f g
ToList??g m
(??m n
)??n o
;??o p
foreach@@ 
(@@ 
var@@ 

habitacion@@ '
in@@( *%
habitacionesSeleccionadas@@+ D
)@@D E
{AA 
varBB 
estadosHabitacionBB )
=BB* +&
ObtenerEstadosHabitacionesBB, F
(BBF G

fechaDesdeBBG Q
,BBQ R

fechaHastaBBS ]
,BB] ^

habitacionBB_ i
,BBi j
fechaActualBBk v
)BBv w
;BBw x$
planificadorHabitacionesCC ,
.CC, -&
HabitacionesEnPlanificadorCC- G
.CCG H
AddCCH K
(CCK L
estadosHabitacionCCL ]
)CC] ^
;CC^ _
}DD 
returnEE $
planificadorHabitacionesEE /
;EE/ 0
}FF 
catchGG 
(GG 
	ExceptionGG 
eGG 
)GG 
{HH 
throwII 
newII 
LogicaExceptionII )
(II) *
$strII* b
,IIb c
eIId e
)IIe f
;IIf g
}JJ 
}KK 	
publicLL $
HabitacionEnPlanificadorLL '&
ObtenerEstadosHabitacionesLL( B
(LLB C
DateTimeLLC K

fechaDesdeLLL V
,LLV W
DateTimeLLX `

fechaHastaLLa k
,LLk l%
HabitacionEnPlanificador	LLm Ö

habitacion
LLÜ ê
,
LLê ë
DateTime
LLí ö
fechaActual
LLõ ¶
)
LL¶ ß
{MM 	
tryNN 
{OO 
ListPP 
<PP *
EstadoHabitacionEnPlanificadorPP 3
>PP3 4
estadosHabitacionPP5 F
=PPG H
newPPI L
ListPPM Q
<PPQ R*
EstadoHabitacionEnPlanificadorPPR p
>PPp q
(PPq r
)PPr s
;PPs t
varQQ 
fechaConsultaQQ !
=QQ" #

fechaDesdeQQ$ .
;QQ. /
whileRR 
(RR 
fechaConsultaRR $
<=RR% '

fechaHastaRR( 2
)RR2 3
{SS 
estadosHabitacionTT %
.TT% &
AddTT& )
(TT) *
_hotelRepositorioTT* ;
.TT; </
#ObtenerEstadoHabitacionPlanificadorTT< _
(TT_ `
fechaConsultaTT` m
,TTm n

habitacionTTo y
.TTy z
IdTTz |
,TT| }
fechaActual	TT~ â
)
TTâ ä
)
TTä ã
;
TTã å
fechaConsultaUU !
=UU" #
fechaConsultaUU$ 1
.UU1 2
DateUU2 6
.UU6 7
AddDaysUU7 >
(UU> ?
$numUU? @
)UU@ A
;UUA B
}VV 

habitacionWW 
.WW 
EstadosHabitacionWW ,
=WW- .
estadosHabitacionWW/ @
;WW@ A
returnXX 

habitacionXX !
;XX! "
}YY 
catchZZ 
(ZZ 
	ExceptionZZ 
eZZ 
)ZZ 
{[[ 
throw\\ 
new\\ 
LogicaException\\ )
(\\) *
$str\\* ]
,\\] ^
e\\_ `
)\\` a
;\\a b
}]] 
}^^ 	
public`` 
OperationResult`` )
CambiarEnLimpiezaDeHabitacion`` <
(``< =
int``= @
idHabitacion``A M
)``M N
{aa 	
trybb 
{cc 
returndd 
_actor_Repositoriodd )
.dd) **
InvertirIndicador1ActorNegociodd* H
(ddH I
idHabitacionddI U
)ddU V
;ddV W
}ee 
catchff 
(ff 
	Exceptionff 
eff 
)ff 
{gg 
throwhh 
newhh 
LogicaExceptionhh )
(hh) *
$strhh* _
,hh_ `
ehha b
)hhb c
;hhc d
}ii 
}jj 	
}ll 
}mm ï®
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelReserva_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
List 
< 
ReservaBandeja "
>" #!
ObtenerReservaBandeja$ 9
(9 :
int: =
idEstablecimiento> O
,O P
DateTimeQ Y

fechaDesdeZ d
,d e
DateTimef n

fechaHastao y
)y z
{ 	
try 
{ 
List 
< 
ReservaBandeja #
># $
reservas% -
=. /
_hotelRepositorio0 A
.A B!
ObtenerReservaBandejaB W
(W X
idEstablecimientoX i
,i j

fechaDesdek u
,u v

fechaHasta	w Å
)
Å Ç
.
Ç É
ToList
É â
(
â ä
)
ä ã
;
ã å
reservas 
. 
ForEach  
(  !
r! "
=># %
r& '
.' (
Responsable( 3
=4 5
r6 7
.7 8
Responsable8 C
.C D
ReplaceD K
(K L
$strL O
,O P
$strQ T
)T U
)U V
;V W
return 
reservas 
;  
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* R
,R S
eT U
)U V
;V W
} 
} 	
public   
OperationResult   
ConfirmarReserva   /
(  / 0
AtencionMacroHotel  0 B
reserva  C J
,  J K"
UserProfileSessionData  L b
sesionUsuario  c p
)  p q
{!! 	
try"" 
{## 
OperationResult$$ 
	resultado$$  )
=$$* +
new$$, /
OperationResult$$0 ?
($$? @
)$$@ A
;$$A B
Transaccion%% 
atencionDeHotel%% +
=%%, -
reserva%%. 5
.%%5 6

Atenciones%%6 @
.%%@ A
Count%%A F
(%%F G
)%%G H
>%%I J
$num%%K L
?%%M N+
GenerarTransaccionAtencionMacro%%O n
(%%n o
reserva%%o v
,%%v w
sesionUsuario	%%x Ö
,
%%Ö Ü
MaestroSettings
%%á ñ
.
%%ñ ó
Default
%%ó û
.
%%û ü.
 IdDetalleMaestroEstadoConfirmado
%%ü ø
,
%%ø ¿
$str
%%¡ Ó
)
%%Ó Ô
:
%% Ò(
GenerarTransaccionAtencion
%%Ú å
(
%%å ç
reserva
%%ç î
,
%%î ï
sesionUsuario
%%ñ £
,
%%£ §
MaestroSettings
%%• ¥
.
%%¥ µ
Default
%%µ º
.
%%º Ω.
 IdDetalleMaestroEstadoConfirmado
%%Ω ›
,
%%› ﬁ
$str
%%ﬂ å
)
%%å ç
;
%%ç é
if&& 
(&& 
reserva&& 
.&& 
FacturadoGlobal&& +
)&&+ ,
{'' 
reserva(( 
.(( 
Comprobante(( '
.((' (
TransaccionCreacion((( ;
=((< =
atencionDeHotel((> M
;((M N*
CompletarDatosGeneralesDeVenta)) 2
())2 3
reserva))3 :
.)): ;
Comprobante)); F
,))F G
sesionUsuario))H U
)))U V
;))V W
reserva** 
.** 
Comprobante** '
.**' (
Orden**( -
.**- .
Detalles**. 6
=**7 8*
GenerarDetallesDeVentaAtencion**9 W
(**W X
reserva**X _
)**_ `
;**` a
	resultado++ 
=++ 
_logicaOperacion++  0
.++0 1#
ConfirmarVentaIntegrada++1 H
(++H I
ModoOperacionEnum++I Z
.++Z [
PorMostrador++[ g
,++g h
sesionUsuario++i v
,++v w
reserva++x 
.	++ Ä
Comprobante
++Ä ã
)
++ã å
;
++å ç
},, 
else-- 
{.. 
	resultado// 
=// #
_transaccionRepositorio//  7
.//7 8
CrearTransaccion//8 H
(//H I
atencionDeHotel//I X
)//X Y
;//Y Z
}00 
return11 
	resultado11  
;11  !
}22 
catch33 
(33 
	Exception33 
e33 
)33 
{44 
throw55 
new55 
LogicaException55 )
(55) *
$str55* P
,55P Q
e55R S
)55S T
;55T U
}66 
}77 	
public88 
OperationResult88 
CheckInReserva88 -
(88- .
AtencionMacroHotel88. @
reserva88A H
,88H I"
UserProfileSessionData88J `
sesionUsuario88a n
)88n o
{99 	
try:: 
{;; 
OperationResult<< 
	resultado<<  )
=<<* +
new<<, /
OperationResult<<0 ?
(<<? @
)<<@ A
;<<A B
Transaccion== 
atencionDeHotel== +
===, -
reserva==. 5
.==5 6

Atenciones==6 @
.==@ A
Count==A F
(==F G
)==G H
>==I J
$num==K L
?==M N+
GenerarTransaccionAtencionMacro==O n
(==n o
reserva==o v
,==v w
sesionUsuario	==x Ö
,
==Ö Ü
MaestroSettings
==á ñ
.
==ñ ó
Default
==ó û
.
==û ü-
IdDetalleMaestroEstadoCheckedIn
==ü æ
,
==æ ø
$str
==¿ Ì
)
==Ì Ó
:
==Ô (
GenerarTransaccionAtencion
==Ò ã
(
==ã å
reserva
==å ì
,
==ì î
sesionUsuario
==ï ¢
,
==¢ £
MaestroSettings
==§ ≥
.
==≥ ¥
Default
==¥ ª
.
==ª º-
IdDetalleMaestroEstadoCheckedIn
==º €
,
==€ ‹
$str
==› ä
)
==ä ã
;
==ã å
if>> 
(>> 
reserva>> 
.>> 
FacturadoGlobal>> +
)>>+ ,
{?? 
reserva@@ 
.@@ 
Comprobante@@ '
.@@' (
TransaccionCreacion@@( ;
=@@< =
atencionDeHotel@@> M
;@@M N*
CompletarDatosGeneralesDeVentaAA 2
(AA2 3
reservaAA3 :
.AA: ;
ComprobanteAA; F
,AAF G
sesionUsuarioAAH U
)AAU V
;AAV W
reservaBB 
.BB 
ComprobanteBB '
.BB' (
OrdenBB( -
.BB- .
DetallesBB. 6
=BB7 8*
GenerarDetallesDeVentaAtencionBB9 W
(BBW X
reservaBBX _
)BB_ `
;BB` a
	resultadoCC 
=CC 
_logicaOperacionCC  0
.CC0 1#
ConfirmarVentaIntegradaCC1 H
(CCH I
ModoOperacionEnumCCI Z
.CCZ [
PorMostradorCC[ g
,CCg h
sesionUsuarioCCi v
,CCv w
reservaCCx 
.	CC Ä
Comprobante
CCÄ ã
)
CCã å
;
CCå ç
}DD 
elseEE 
{FF 
	resultadoGG 
=GG #
_transaccionRepositorioGG  7
.GG7 8
CrearTransaccionGG8 H
(GGH I
atencionDeHotelGGI X
)GGX Y
;GGY Z
}HH 
returnII 
	resultadoII  
;II  !
}JJ 
catchKK 
(KK 
	ExceptionKK 
eKK 
)KK 
{LL 
throwMM 
newMM 
LogicaExceptionMM )
(MM) *
$strMM* P
,MMP Q
eMMR S
)MMS T
;MMT U
}NN 
}OO 	
publicPP 
voidPP *
CompletarDatosGeneralesDeVentaPP 2
(PP2 3
DatosVentaIntegradaPP3 F
comprobantePPG R
,PPR S"
UserProfileSessionDataPPT j
sesionUsuarioPPk x
)PPx y
{QQ 	
comprobanteSS 
.SS 
OrdenSS 
.SS 
PuntoDeVentaSS *
=SS+ ,
newSS- 0
ItemGenericoSS1 =
{SS> ?
IdSS@ B
=SSC D
sesionUsuarioSSE R
.SSR S*
IdCentroDeAtencionSeleccionadoSSS q
,SSq r
NombreSSs y
=SSz {
sesionUsuario	SS| â
.
SSâ ä*
CentroDeAtencionSeleccionado
SSä ¶
.
SS¶ ß
Nombre
SSß ≠
}
SSÆ Ø
;
SSØ ∞
comprobanteTT 
.TT 
OrdenTT 
.TT 
VendedorTT &
=TT' (
newTT) ,
ItemGenericoTT- 9
{TT: ;
IdTT< >
=TT? @
sesionUsuarioTTA N
.TTN O
EmpleadoTTO W
.TTW X
IdTTX Z
}TT[ \
;TT\ ]
comprobanteUU 
.UU 
OrdenUU 
.UU "
NumeroBolsasDePlasticoUU 4
=UU5 6
$numUU7 8
;UU8 9
comprobanteVV 
.VV 
MovimientoAlmacenVV )
=VV* +
newVV, /$
DatosMovimientoDeAlmacenVV0 H
{VVI J.
"HayComprobanteDeSalidaDeMercaderiaVVK m
=VVn o
falseVVp u
}VVv w
;VVw x
}WW 	
publicXX 
TransaccionXX +
GenerarTransaccionAtencionMacroXX :
(XX: ;
AtencionMacroHotelXX; M
atencionMacroXXN [
,XX[ \"
UserProfileSessionDataXX] s
sesionUsuario	XXt Å
,
XXÅ Ç
int
XXÉ Ü
idEstado
XXá è
,
XXè ê
string
XXë ó
observacionEstado
XXò ©
)
XX© ™
{YY 	
tryZZ 
{[[ 
var\\ 
fechaActual\\ 
=\\  !
DateTimeUtil\\" .
.\\. /
FechaActual\\/ :
(\\: ;
)\\; <
;\\< =
var]] 
atencionDeHotel]] #
=]]$ %/
#ConvertirAtencionMacroEnTransaccion]]& I
(]]I J
atencionMacro]]J W
,]]W X
sesionUsuario]]Y f
,]]f g
fechaActual]]h s
)]]s t
;]]t u
if^^ 
(^^ 
atencionMacro^^ !
.^^! "
FacturadoGlobal^^" 1
)^^1 2
{__ 
atencionDeHotel`` #
.``# $
Evento_transaccion``$ 6
.``6 7
Add``7 :
(``: ;
new``; >
Evento_transaccion``? Q
(``Q R
sesionUsuario``R _
.``_ `
Empleado``` h
.``h i
Id``i k
,``k l
MaestroSettings``m |
.``| }
Default	``} Ñ
.
``Ñ Ö-
IdDetalleMaestroEstadoFacturado
``Ö §
,
``§ •
fechaActual
``¶ ±
.
``± ≤

AddSeconds
``≤ º
(
``º Ω
$num
``Ω æ
)
``æ ø
,
``ø ¿
$str
``¡ Ÿ
)
``Ÿ ⁄
)
``⁄ €
;
``€ ‹
}aa 
foreachbb 
(bb 
varbb 
atencionbb %
inbb& (
atencionMacrobb) 6
.bb6 7

Atencionesbb7 A
)bbA B
{cc 
vardd  
atencionDeHabitaciondd ,
=dd- .*
ConvertirAtencionEnTransacciondd/ M
(ddM N
atencionMacroddN [
,dd[ \
atenciondd] e
,dde f
sesionUsuarioddg t
,ddt u
fechaActual	ddv Å
,
ddÅ Ç
atencionDeHotel
ddÉ í
)
ddí ì
;
ddì î
ifee 
(ee 
atencionee  
.ee  !
	Huespedesee! *
!=ee+ -
nullee. 2
)ee2 3
{ff 
foreachgg 
(gg  !
vargg! $
huespedgg% ,
ingg- /
atenciongg0 8
.gg8 9
	Huespedesgg9 B
)ggB C
{hh  
atencionDeHabitacionii 0
.ii0 1)
Actor_negocio_por_transaccionii1 N
.iiN O
AddiiO R
(iiR S
newiiS V)
Actor_negocio_por_transaccioniiW t
(iit u
)iiu v
{jj 
id_actor_negociokk  0
=kk1 2
huespedkk3 :
.kk: ;
Idkk; =
,kk= >
id_rolll  &
=ll' (
HotelSettingsll) 6
.ll6 7
Defaultll7 >
.ll> ?
IdRolHuespedll? K
,llK L
id_detalle_maestromm  2
=mm3 4
huespedmm5 <
.mm< =
MotivoDeViajemm= J
.mmJ K
IdmmK M
,mmM N
extension_jsonnn  .
=nn/ 0
$strnn1 B
+nnC D
huespednnE L
.nnL M
	EsTitularnnM V
.nnV W
ToStringnnW _
(nn_ `
)nn` a
.nna b
ToLowernnb i
(nni j
)nnj k
+nnl m
$strnnn t
}oo 
)oo 
;oo 
}pp 
}qq  
atencionDeHabitacionrr (
.rr( )
Estado_transaccionrr) ;
.rr; <
Addrr< ?
(rr? @
newrr@ C
Estado_transaccionrrD V
(rrV W
sesionUsuariorrW d
.rrd e
Empleadorre m
.rrm n
Idrrn p
,rrp q
idEstadorrr z
,rrz {
fechaActual	rr| á
,
rrá à
observacionEstado
rrâ ö
)
rrö õ
)
rrõ ú
;
rrú ù
atencionDeHotelss #
.ss# $
Transaccion1ss$ 0
.ss0 1
Addss1 4
(ss4 5 
atencionDeHabitacionss5 I
)ssI J
;ssJ K
}tt 
ifuu 
(uu 
atencionMacrouu !
.uu! "$
HayImagenVoucherExtranetuu" :
)uu: ;
{vv 
atencionDeHotelww #
.ww# $

Traza_pagoww$ .
.ww. /
Addww/ 2
(ww2 3
newww3 6

Traza_pagoww7 A
(wwA B
atencionMacrowwB O
.wwO P
IdMedioPagoExtranetwwP c
,wwc d
$str	wwe á
,
wwá à
MaestroSettings
wwâ ò
.
wwò ô
Default
wwô †
.
ww† °7
)IdDetalleMaestroEntidadBancariaPorDefecto
ww°  
)
ww  À
{xx 
extension_jsonyy &
=yy' (
$stryy) @
+yyA B
sesionUsuarioyyC P
.yyP Q
SedeyyQ U
.yyU V
DocumentoIdentidadyyV h
+yyi j
$stryyk n
+yyo p
atencionDeHotel	yyq Ä
.
yyÄ Å
codigo
yyÅ á
+
yyà â
$str
yyä î
}zz 
)zz 
;zz 
}{{ 
return|| 
atencionDeHotel|| &
;||& '
}}} 
catch~~ 
(~~ 
	Exception~~ 
e~~ 
)~~ 
{ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* P
,
ÄÄP Q
e
ÄÄR S
)
ÄÄS T
;
ÄÄT U
}
ÅÅ 
}
ÇÇ 	
public
ÉÉ 
Transaccion
ÉÉ (
GenerarTransaccionAtencion
ÉÉ 5
(
ÉÉ5 6 
AtencionMacroHotel
ÉÉ6 H
atencionMacro
ÉÉI V
,
ÉÉV W$
UserProfileSessionData
ÉÉX n
sesionUsuario
ÉÉo |
,
ÉÉ| }
intÉÉ~ Å
idEstadoÉÉÇ ä
,ÉÉä ã
stringÉÉå í!
observacionEstadoÉÉì §
)ÉÉ§ •
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
var
áá 
fechaActual
áá 
=
áá  !
DateTimeUtil
áá" .
.
áá. /
FechaActual
áá/ :
(
áá: ;
)
áá; <
;
áá< =
var
àà 
atencionDeHotel
àà #
=
àà$ %1
#ConvertirAtencionMacroEnTransaccion
àà& I
(
ààI J
atencionMacro
ààJ W
,
ààW X
sesionUsuario
ààY f
,
ààf g
fechaActual
ààh s
)
ààs t
;
ààt u
var
ââ "
atencionDeHabitacion
ââ (
=
ââ) *,
ConvertirAtencionEnTransaccion
ââ+ I
(
ââI J
atencionMacro
ââJ W
,
ââW X
atencionMacro
ââY f
.
ââf g

Atenciones
ââg q
.
ââq r
First
ââr w
(
ââw x
)
ââx y
,
âây z
sesionUsuarioââ{ à
,ââà â
fechaActualââä ï
,ââï ñ
atencionDeHotelââó ¶
)ââ¶ ß
;ââß ®
if
ää 
(
ää 
atencionMacro
ää !
.
ää! "
FacturadoGlobal
ää" 1
)
ää1 2
{
ãã "
atencionDeHabitacion
åå (
.
åå( ) 
Evento_transaccion
åå) ;
.
åå; <
Add
åå< ?
(
åå? @
new
åå@ C 
Evento_transaccion
ååD V
(
ååV W
sesionUsuario
ååW d
.
ååd e
Empleado
ååe m
.
ååm n
Id
åån p
,
ååp q
MaestroSettingsåår Å
.ååÅ Ç
DefaultååÇ â
.ååâ ä/
IdDetalleMaestroEstadoFacturadoååä ©
,åå© ™
fechaActualåå´ ∂
.åå∂ ∑

AddSecondsåå∑ ¡
(åå¡ ¬
$numåå¬ √
)åå√ ƒ
,ååƒ ≈
$stråå∆ ﬁ
)ååﬁ ﬂ
)ååﬂ ‡
;åå‡ ·
}
çç 
if
éé 
(
éé 
atencionMacro
éé !
.
éé! "

Atenciones
éé" ,
.
éé, -
First
éé- 2
(
éé2 3
)
éé3 4
.
éé4 5
	Huespedes
éé5 >
!=
éé? A
null
ééB F
)
ééF G
{
èè 
foreach
êê 
(
êê 
var
êê  
huesped
êê! (
in
êê) +
atencionMacro
êê, 9
.
êê9 :

Atenciones
êê: D
.
êêD E
First
êêE J
(
êêJ K
)
êêK L
.
êêL M
	Huespedes
êêM V
)
êêV W
{
ëë "
atencionDeHabitacion
íí ,
.
íí, -+
Actor_negocio_por_transaccion
íí- J
.
ííJ K
Add
ííK N
(
ííN O
new
ííO R+
Actor_negocio_por_transaccion
ííS p
(
ííp q
)
ííq r
{
ìì 
id_actor_negocio
îî ,
=
îî- .
huesped
îî/ 6
.
îî6 7
Id
îî7 9
,
îî9 :
id_rol
ïï "
=
ïï# $
HotelSettings
ïï% 2
.
ïï2 3
Default
ïï3 :
.
ïï: ;
IdRolHuesped
ïï; G
,
ïïG H 
id_detalle_maestro
ññ .
=
ññ/ 0
huesped
ññ1 8
.
ññ8 9
MotivoDeViaje
ññ9 F
.
ññF G
Id
ññG I
,
ññI J
extension_json
óó *
=
óó+ ,
$str
óó- >
+
óó? @
huesped
óóA H
.
óóH I
	EsTitular
óóI R
.
óóR S
ToString
óóS [
(
óó[ \
)
óó\ ]
.
óó] ^
ToLower
óó^ e
(
óóe f
)
óóf g
+
óóh i
$str
óój p
}
òò 
)
òò 
;
òò 
}
ôô 
}
öö "
atencionDeHabitacion
õõ $
.
õõ$ % 
Estado_transaccion
õõ% 7
.
õõ7 8
Add
õõ8 ;
(
õõ; <
new
õõ< ? 
Estado_transaccion
õõ@ R
(
õõR S
sesionUsuario
õõS `
.
õõ` a
Empleado
õõa i
.
õõi j
Id
õõj l
,
õõl m
idEstado
õõn v
,
õõv w
fechaActualõõx É
,õõÉ Ñ!
observacionEstadoõõÖ ñ
)õõñ ó
)õõó ò
;õõò ô
if
úú 
(
úú 
atencionMacro
úú !
.
úú! "&
HayImagenVoucherExtranet
úú" :
)
úú: ;
{
ùù 
atencionDeHotel
ûû #
.
ûû# $

Traza_pago
ûû$ .
.
ûû. /
Add
ûû/ 2
(
ûû2 3
new
ûû3 6

Traza_pago
ûû7 A
(
ûûA B
atencionMacro
ûûB O
.
ûûO P!
IdMedioPagoExtranet
ûûP c
,
ûûc d
$strûûe á
,ûûá à
MaestroSettingsûûâ ò
.ûûò ô
Defaultûûô †
.ûû† °9
)IdDetalleMaestroEntidadBancariaPorDefectoûû°  
)ûû  À
{
üü 
extension_json
†† &
=
††' (
$str
††) @
+
††A B
sesionUsuario
††C P
.
††P Q
Sede
††Q U
.
††U V 
DocumentoIdentidad
††V h
+
††i j
$str
††k n
+
††o p
atencionDeHotel††q Ä
.††Ä Å
codigo††Å á
+††à â
$str††ä î
}
°° 
)
°° 
;
°° 
}
¢¢ "
atencionDeHabitacion
££ $
.
££$ %
Transaccion2
££% 1
=
££2 3
atencionDeHotel
££4 C
;
££C D
return
§§ "
atencionDeHabitacion
§§ +
;
§§+ ,
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* P
,
®®P Q
e
®®R S
)
®®S T
;
®®T U
}
©© 
}
™™ 	
private
´´ 
List
´´ 
<
´´  
DetalleDeOperacion
´´ '
>
´´' (,
GenerarDetallesDeVentaAtencion
´´) G
(
´´G H 
AtencionMacroHotel
´´H Z
atencion
´´[ c
)
´´c d
{
¨¨ 	
try
≠≠ 
{
ÆÆ 
var
ØØ 
detallesVenta
ØØ !
=
ØØ" #
new
ØØ$ '
List
ØØ( ,
<
ØØ, - 
DetalleDeOperacion
ØØ- ?
>
ØØ? @
(
ØØ@ A
)
ØØA B
;
ØØB C
var
∞∞ 
idsTipoHabitacion
∞∞ %
=
∞∞& '
atencion
∞∞( 0
.
∞∞0 1

Atenciones
∞∞1 ;
.
∞∞; <
Select
∞∞< B
(
∞∞B C
a
∞∞C D
=>
∞∞E G
a
∞∞H I
.
∞∞I J

Habitacion
∞∞J T
.
∞∞T U
TipoHabitacion
∞∞U c
.
∞∞c d
Id
∞∞d f
)
∞∞f g
.
∞∞g h
GroupBy
∞∞h o
(
∞∞o p
i
∞∞p q
=>
∞∞r t
i
∞∞u v
)
∞∞v w
;
∞∞w x
foreach
±± 
(
±± 
var
±± 
idTipo
±± #
in
±±$ &
idsTipoHabitacion
±±' 8
)
±±8 9
{
≤≤ 
var
≥≥ 

atenciones
≥≥ "
=
≥≥# $
atencion
≥≥% -
.
≥≥- .

Atenciones
≥≥. 8
.
≥≥8 9
Where
≥≥9 >
(
≥≥> ?
a
≥≥? @
=>
≥≥A C
a
≥≥D E
.
≥≥E F

Habitacion
≥≥F P
.
≥≥P Q
TipoHabitacion
≥≥Q _
.
≥≥_ `
Id
≥≥` b
==
≥≥c e
idTipo
≥≥f l
.
≥≥l m
Key
≥≥m p
)
≥≥p q
;
≥≥q r
detallesVenta
¥¥ !
.
¥¥! "
Add
¥¥" %
(
¥¥% &
new
¥¥& ) 
DetalleDeOperacion
¥¥* <
(
¥¥< =
)
¥¥= >
{
µµ 
Producto
∂∂  
=
∂∂! "
new
∂∂# &(
Concepto_Negocio_Comercial
∂∂' A
{
∂∂B C
Id
∂∂D F
=
∂∂G H
idTipo
∂∂I O
.
∂∂O P
Key
∂∂P S
}
∂∂T U
,
∂∂U V
Cantidad
∑∑  
=
∑∑! "

atenciones
∑∑# -
.
∑∑- .
Sum
∑∑. 1
(
∑∑1 2
g
∑∑2 3
=>
∑∑4 6
g
∑∑7 8
.
∑∑8 9
Noches
∑∑9 ?
)
∑∑? @
,
∑∑@ A
PrecioUnitario
∏∏ &
=
∏∏' (

atenciones
∏∏) 3
.
∏∏3 4
First
∏∏4 9
(
∏∏9 :
)
∏∏: ;
.
∏∏; <
PrecioUnitario
∏∏< J
,
∏∏J K
Importe
ππ 
=
ππ  !

atenciones
ππ" ,
.
ππ, -
Sum
ππ- 0
(
ππ0 1
g
ππ1 2
=>
ππ3 5
g
ππ6 7
.
ππ7 8
Importe
ππ8 ?
)
ππ? @
,
ππ@ A
MascaraDeCalculo
∫∫ (
=
∫∫) *
VentasSettings
∫∫+ 9
.
∫∫9 :
Default
∫∫: A
.
∫∫A B5
'MascaraDeCalculoPrecioUnitarioCalculado
∫∫B i
}
ªª 
)
ªª 
;
ªª 
}
ºº 
return
ΩΩ 
detallesVenta
ΩΩ $
;
ΩΩ$ %
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
e
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ 
LogicaException
¡¡ )
(
¡¡) *
$str
¡¡* ^
,
¡¡^ _
e
¡¡` a
)
¡¡a b
;
¡¡b c
}
¬¬ 
}
√√ 	
public
ƒƒ 
Transaccion
ƒƒ 1
#ConvertirAtencionMacroEnTransaccion
ƒƒ >
(
ƒƒ> ? 
AtencionMacroHotel
ƒƒ? Q
atencionMacro
ƒƒR _
,
ƒƒ_ `$
UserProfileSessionData
ƒƒa w
sesionUsuarioƒƒx Ö
,ƒƒÖ Ü
DateTimeƒƒá è
fechaActualƒƒê õ
)ƒƒõ ú
{
≈≈ 	
Transaccion
∆∆ 
transaccion
∆∆ #
=
∆∆$ %
new
∆∆& )
Transaccion
∆∆* 5
(
∆∆5 6
)
∆∆6 7
{
«« 
codigo
»» 
=
»» /
!ObtenerSiguienteCodigoParaReserva
»» :
(
»»: ;
sesionUsuario
»»; H
)
»»H I
,
»»I J
id_comprobante
…… 
=
……  !
TransaccionSettings
……! 4
.
……4 5
Default
……5 <
.
……< =#
IdComprobanteGenerico
……= R
,
……R S
tipo_cambio
   
=
   
sesionUsuario
   +
.
  + ,
TipoDeCambio
  , 8
.
  8 9

ValorVenta
  9 C
,
  C D
importe_total
ÀÀ 
=
ÀÀ 
atencionMacro
ÀÀ  -
.
ÀÀ- .
Total
ÀÀ. 3
,
ÀÀ3 4&
id_actor_negocio_interno
ÃÃ (
=
ÃÃ) *
sesionUsuario
ÃÃ+ 8
.
ÃÃ8 9*
CentroDeAtencionSeleccionado
ÃÃ9 U
.
ÃÃU V
Id
ÃÃV X
,
ÃÃX Y&
id_actor_negocio_externo
ÕÕ (
=
ÕÕ) *
atencionMacro
ÕÕ+ 8
.
ÕÕ8 9
FacturadoGlobal
ÕÕ9 H
?
ÕÕI J
atencionMacro
ÕÕK X
.
ÕÕX Y
Comprobante
ÕÕY d
.
ÕÕd e
Orden
ÕÕe j
.
ÕÕj k
Cliente
ÕÕk r
.
ÕÕr s
Id
ÕÕs u
:
ÕÕv w
ActorSettingsÕÕx Ö
.ÕÕÖ Ü
DefaultÕÕÜ ç
.ÕÕç é!
IdClienteGenericoÕÕé ü
,ÕÕü †'
id_actor_negocio_externo1
ŒŒ )
=
ŒŒ* +
atencionMacro
ŒŒ, 9
.
ŒŒ9 :
Responsable
ŒŒ: E
.
ŒŒE F
Id
ŒŒF H
,
ŒŒH I
	id_moneda
œœ 
=
œœ 
MaestroSettings
œœ +
.
œœ+ ,
Default
œœ, 3
.
œœ3 4)
IdDetalleMaestroMonedaSoles
œœ4 O
,
œœO P
id_empleado
–– 
=
–– 
sesionUsuario
–– +
.
––+ ,
Empleado
––, 4
.
––4 5
Id
––5 7
,
––7 8
id
—— 
=
—— 
atencionMacro
—— "
.
——" #
Id
——# %
,
——% &!
id_tipo_transaccion
““ #
=
““$ %
HotelSettings
““& 3
.
““3 4
Default
““4 ;
.
““; <.
 IdTipoTransaccionAtencionDeHotel
““< \
,
““\ ]

comentario
”” 
=
”” 
$str
”” &
,
””& '
id_unidad_negocio
‘‘ !
=
‘‘" #
MaestroSettings
‘‘$ 3
.
‘‘3 4
Default
‘‘4 ;
.
‘‘; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
‘‘< f
,
‘‘f g
es_concreta
’’ 
=
’’ 
false
’’ #
,
’’# $
fecha_inicio
÷÷ 
=
÷÷ 
fechaActual
÷÷ *
,
÷÷* +
	fecha_fin
◊◊ 
=
◊◊ 
fechaActual
◊◊ '
,
◊◊' ($
fecha_registro_sistema
ÿÿ &
=
ÿÿ' (
fechaActual
ÿÿ) 4
,
ÿÿ4 5%
fecha_registro_contable
ŸŸ '
=
ŸŸ( )
fechaActual
ŸŸ* 5
,
ŸŸ5 6
enum1
⁄⁄ 
=
⁄⁄ 
atencionMacro
⁄⁄ %
.
⁄⁄% &
FacturadoGlobal
⁄⁄& 5
?
⁄⁄6 7
(
⁄⁄8 9
atencionMacro
⁄⁄9 F
.
⁄⁄F G

Atenciones
⁄⁄G Q
.
⁄⁄Q R
Count
⁄⁄R W
(
⁄⁄W X
)
⁄⁄X Y
>
⁄⁄Z [
$num
⁄⁄\ ]
?
⁄⁄^ _
(
⁄⁄` a
int
⁄⁄a d
)
⁄⁄d e"
ModoFacturacionHotel
⁄⁄e y
.
⁄⁄y z
Global⁄⁄z Ä
:⁄⁄Å Ç
(⁄⁄É Ñ
int⁄⁄Ñ á
)⁄⁄á à$
ModoFacturacionHotel⁄⁄à ú
.⁄⁄ú ù

Individual⁄⁄ù ß
)⁄⁄ß ®
:⁄⁄© ™
(⁄⁄´ ¨
int⁄⁄¨ Ø
)⁄⁄Ø ∞$
ModoFacturacionHotel⁄⁄∞ ƒ
.⁄⁄ƒ ≈
NoEspecificado⁄⁄≈ ”
,⁄⁄” ‘

indicador1
€€ 
=
€€ 
atencionMacro
€€ *
.
€€* +&
HayImagenVoucherExtranet
€€+ C
}
‹‹ 
;
‹‹ 
return
›› 
transaccion
›› 
;
›› 
}
ﬁﬁ 	
private
ﬂﬂ 
Transaccion
ﬂﬂ ,
ConvertirAtencionEnTransaccion
ﬂﬂ :
(
ﬂﬂ: ; 
AtencionMacroHotel
ﬂﬂ; M
atencionMacro
ﬂﬂN [
,
ﬂﬂ[ \
AtencionHotel
ﬂﬂ] j
atencion
ﬂﬂk s
,
ﬂﬂs t%
UserProfileSessionDataﬂﬂu ã
sesionUsuarioﬂﬂå ô
,ﬂﬂô ö
DateTimeﬂﬂõ £
fechaActualﬂﬂ§ Ø
,ﬂﬂØ ∞
Transaccionﬂﬂ± º
atencionHotelﬂﬂΩ  
)ﬂﬂ  À
{
‡‡ 	
Transaccion
·· 
transaccion
·· #
=
··$ %
new
··& )
Transaccion
··* 5
(
··5 6
)
··6 7
{
‚‚ 
codigo
„„ 
=
„„ 
atencionHotel
„„ &
.
„„& '
codigo
„„' -
,
„„- .
id_comprobante
‰‰ 
=
‰‰  !
TransaccionSettings
‰‰! 4
.
‰‰4 5
Default
‰‰5 <
.
‰‰< =#
IdComprobanteGenerico
‰‰= R
,
‰‰R S
tipo_cambio
ÂÂ 
=
ÂÂ 
sesionUsuario
ÂÂ +
.
ÂÂ+ ,
TipoDeCambio
ÂÂ, 8
.
ÂÂ8 9

ValorVenta
ÂÂ9 C
,
ÂÂC D
importe_total
ÊÊ 
=
ÊÊ 
atencion
ÊÊ  (
.
ÊÊ( )
Importe
ÊÊ) 0
,
ÊÊ0 1&
id_actor_negocio_interno
ÁÁ (
=
ÁÁ) *
atencion
ÁÁ+ 3
.
ÁÁ3 4

Habitacion
ÁÁ4 >
.
ÁÁ> ?
Id
ÁÁ? A
,
ÁÁA B&
id_actor_negocio_externo
ËË (
=
ËË) *
atencionMacro
ËË+ 8
.
ËË8 9
FacturadoGlobal
ËË9 H
?
ËËI J
atencionMacro
ËËK X
.
ËËX Y
Comprobante
ËËY d
.
ËËd e
Orden
ËËe j
.
ËËj k
Cliente
ËËk r
.
ËËr s
Id
ËËs u
:
ËËv w
ActorSettingsËËx Ö
.ËËÖ Ü
DefaultËËÜ ç
.ËËç é!
IdClienteGenericoËËé ü
,ËËü †'
id_actor_negocio_externo1
ÈÈ )
=
ÈÈ* +
atencionMacro
ÈÈ, 9
.
ÈÈ9 :
Responsable
ÈÈ: E
.
ÈÈE F
Id
ÈÈF H
,
ÈÈH I
fecha_inicio
ÍÍ 
=
ÍÍ 
DateTime
ÍÍ '
.
ÍÍ' (
Parse
ÍÍ( -
(
ÍÍ- .
atencion
ÍÍ. 6
.
ÍÍ6 7
FechaIngreso
ÍÍ7 C
.
ÍÍC D
ToString
ÍÍD L
(
ÍÍL M
$str
ÍÍM Y
)
ÍÍY Z
)
ÍÍZ [
,
ÍÍ[ \
	fecha_fin
ÎÎ 
=
ÎÎ 
DateTime
ÎÎ $
.
ÎÎ$ %
Parse
ÎÎ% *
(
ÎÎ* +
atencion
ÎÎ+ 3
.
ÎÎ3 4
FechaSalida
ÎÎ4 ?
.
ÎÎ? @
ToString
ÎÎ@ H
(
ÎÎH I
$str
ÎÎI U
)
ÎÎU V
)
ÎÎV W
,
ÎÎW X
	id_moneda
ÏÏ 
=
ÏÏ 
MaestroSettings
ÏÏ +
.
ÏÏ+ ,
Default
ÏÏ, 3
.
ÏÏ3 4)
IdDetalleMaestroMonedaSoles
ÏÏ4 O
,
ÏÏO P
id_empleado
ÌÌ 
=
ÌÌ 
sesionUsuario
ÌÌ +
.
ÌÌ+ ,
Empleado
ÌÌ, 4
.
ÌÌ4 5
Id
ÌÌ5 7
,
ÌÌ7 8
id
ÓÓ 
=
ÓÓ 
atencion
ÓÓ 
.
ÓÓ 
Id
ÓÓ  
,
ÓÓ  !!
id_tipo_transaccion
ÔÔ #
=
ÔÔ$ %
HotelSettings
ÔÔ& 3
.
ÔÔ3 4
Default
ÔÔ4 ;
.
ÔÔ; <3
%IdTipoTransaccionAtencionDeHabitacion
ÔÔ< a
,
ÔÔa b

comentario
 
=
 
atencion
 %
.
% &
	Anotacion
& /
!=
0 2
null
3 7
?
8 9
JsonConvert
: E
.
E F
SerializeObject
F U
(
U V
new
V Y
List
Z ^
<
^ _
	Anotacion
_ h
>
h i
(
i j
)
j k
{
l m
new
n q
	Anotacion
r {
(
{ |
fechaActual| á
.á à
ToStringà ê
(ê ë
$strë ¶
)¶ ß
,ß ®
atencion© ±
.± ≤
	Anotacion≤ ª
)ª º
}Ω æ
)æ ø
:¿ ¡
$str¬ ƒ
,ƒ ≈
id_unidad_negocio
ÒÒ !
=
ÒÒ" #
MaestroSettings
ÒÒ$ 3
.
ÒÒ3 4
Default
ÒÒ4 ;
.
ÒÒ; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
ÒÒ< f
,
ÒÒf g
es_concreta
ÚÚ 
=
ÚÚ 
false
ÚÚ #
,
ÚÚ# $
importe1
ÛÛ 
=
ÛÛ 
atencion
ÛÛ #
.
ÛÛ# $
PrecioUnitario
ÛÛ$ 2
,
ÛÛ2 3
	cantidad1
ÙÙ 
=
ÙÙ 
atencion
ÙÙ $
.
ÙÙ$ %
Noches
ÙÙ% +
,
ÙÙ+ ,$
fecha_registro_sistema
ıı &
=
ıı' (
fechaActual
ıı) 4
,
ıı4 5%
fecha_registro_contable
ˆˆ '
=
ˆˆ( )
fechaActual
ˆˆ* 5
,
ˆˆ5 6
enum1
˜˜ 
=
˜˜ 
atencionMacro
˜˜ %
.
˜˜% &
FacturadoGlobal
˜˜& 5
?
˜˜6 7
(
˜˜8 9
atencionMacro
˜˜9 F
.
˜˜F G

Atenciones
˜˜G Q
.
˜˜Q R
Count
˜˜R W
(
˜˜W X
)
˜˜X Y
>
˜˜Z [
$num
˜˜\ ]
?
˜˜^ _
(
˜˜` a
int
˜˜a d
)
˜˜d e"
ModoFacturacionHotel
˜˜e y
.
˜˜y z
Global˜˜z Ä
:˜˜Å Ç
(˜˜É Ñ
int˜˜Ñ á
)˜˜á à$
ModoFacturacionHotel˜˜à ú
.˜˜ú ù

Individual˜˜ù ß
)˜˜ß ®
:˜˜© ™
(˜˜´ ¨
int˜˜¨ Ø
)˜˜Ø ∞$
ModoFacturacionHotel˜˜∞ ƒ
.˜˜ƒ ≈
NoEspecificado˜˜≈ ”
,˜˜” ‘

indicador1
¯¯ 
=
¯¯ 
atencionMacro
¯¯ *
.
¯¯* +
FacturadoGlobal
¯¯+ :
,
¯¯: ;

indicador2
˘˘ 
=
˘˘ 
atencionMacro
˘˘ *
.
˘˘* +
FacturadoGlobal
˘˘+ :
}
˙˙ 
;
˙˙ 
return
˚˚ 
transaccion
˚˚ 
;
˚˚ 
}
¸¸ 	
public
˝˝ 
string
˝˝ /
!ObtenerSiguienteCodigoParaReserva
˝˝ 7
(
˝˝7 8$
UserProfileSessionData
˝˝8 N
sesionUsuario
˝˝O \
)
˝˝\ ]
{
˛˛ 	
try
ˇˇ 
{
ÄÄ 
Serie_comprobante
ÅÅ !
serie
ÅÅ" '
=
ÅÅ( )%
_transaccionRepositorio
ÅÅ* A
.
ÅÅA BN
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobanteÅÅB Å
(ÅÅÅ Ç
HotelSettingsÅÅÇ è
.ÅÅè ê
DefaultÅÅê ó
.ÅÅó ò8
(IdDetalleMaestroComprobanteCodigoReservaÅÅò ¿
,ÅÅ¿ ¡
sesionUsuarioÅÅ¬ œ
.ÅÅœ –.
IdCentroDeAtencionSeleccionadoÅÅ– Ó
)ÅÅÓ Ô
;ÅÅÔ 
if
ÇÇ 
(
ÇÇ 
serie
ÇÇ 
==
ÇÇ 
null
ÇÇ !
)
ÇÇ! "
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
LogicaException
ÑÑ -
(
ÑÑ- .
$str
ÑÑ. {
)
ÑÑ{ |
;
ÑÑ| }
}
ÖÖ 
string
ÜÜ 
codigoReserva
ÜÜ $
=
ÜÜ% &
serie
ÜÜ' ,
.
ÜÜ, -
proximo_numero
ÜÜ- ;
.
ÜÜ; <
ToString
ÜÜ< D
(
ÜÜD E
)
ÜÜE F
.
ÜÜF G
PadLeft
ÜÜG N
(
ÜÜN O
$num
ÜÜO P
,
ÜÜP Q
$char
ÜÜR U
)
ÜÜU V
;
ÜÜV W
_logicaOperacion
áá  
.
áá  !:
,AutoIncrementarSerieMarcandolaComoModificada
áá! M
(
ááM N
serie
ááN S
)
ááS T
;
ááT U
return
àà 
codigoReserva
àà $
;
àà$ %
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
e
åå 
;
åå 
}
çç 
}
éé 	
}
èè 
}êê ú≥
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelHabitacion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
OperationResult &
CambiarEsVigenteHabitacion 9
(9 :
int: =
id> @
)@ A
{ 	
try 
{ 
if 
( 
_hotelRepositorio %
.% &&
ExisteAtencionesHabitacion& @
(@ A
idA C
)C D
)D E
{ 
throw 
new 
LogicaException -
(- .
$str. }
)} ~
;~ 
} 
return 
_actor_Repositorio )
.) *)
InvertirEsVigenteActorNegocio* G
(G H
idH J
)J K
;K L
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* \
,\ ]
e^ _
)_ `
;` a
} 
}   	
public!! 

Habitacion!! 
ObtenerHabitacion!! +
(!!+ ,
int!!, /
id!!0 2
)!!2 3
{"" 	
try## 
{$$ 

Habitacion%% 

habitacion%% %
=%%& '
_hotelRepositorio%%( 9
.%%9 :
ObtenerHabitacion%%: K
(%%K L
id%%L N
)%%N O
;%%O P

habitacion&& 
.&& 
Camas&&  
=&&! "
JsonConvert&&# .
.&&. /
DeserializeObject&&/ @
<&&@ A
List&&A E
<&&E F
ItemGenerico&&F R
>&&R S
>&&S T
(&&T U

habitacion&&U _
.&&_ `
InformacionCamas&&` p
)&&p q
;&&q r
return'' 

habitacion'' !
;''! "
}(( 
catch)) 
()) 
	Exception)) 
e)) 
))) 
{** 
throw++ 
new++ 
LogicaException++ )
(++) *
$str++* R
,++R S
e++T U
)++U V
;++V W
},, 
}-- 	
public.. 
List.. 
<.. 
HabitacionBandeja.. %
>..% &&
ObtenerHabitacionesBandeja..' A
(..A B
int..B E
idestablecimiento..F W
)..W X
{// 	
try00 
{11 
return22 
_hotelRepositorio22 (
.22( )&
ObtenerHabitacionesBandeja22) C
(22C D
idestablecimiento22D U
)22U V
.22V W
ToList22W ]
(22] ^
)22^ _
;22_ `
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{55 
throw66 
new66 
LogicaException66 )
(66) *
$str66* R
,66R S
e66T U
)66U V
;66V W
}77 
}88 	
public99 
string99 
ConvertirCamaString99 )
(99) *
List99* .
<99. /
ItemGenerico99/ ;
>99; <
camas99= B
)99B C
{:: 	
string;; 
cadenaCamas;; 
=;;  
$str;;! #
;;;# $
foreach<< 
(<< 
var<< 
item<< 
in<<  
camas<<! &
)<<& '
{== 
cadenaCamas>> 
=>> 
$">>  
{>>  !
cadenaCamas>>! ,
}>>, -
{>>- .
item>>. 2
.>>2 3
Valor>>3 8
}>>8 9
$str>>9 :
{>>: ;
item>>; ?
.>>? @
Nombre>>@ F
}>>F G
$str>>G J
">>J K
;>>K L
}?? 
return@@ 
cadenaCamas@@ 
;@@ 
}AA 	
publicBB 
stringBB #
ConvertirCamasJsonArrayBB -
(BB- .
ListBB. 2
<BB2 3
ItemGenericoBB3 ?
>BB? @
camasBBA F
)BBF G
{CC 	
stringDD 
cadenaCamasDD 
=DD  
$strDD! #
;DD# $
foreachEE 
(EE 
varEE 
itemEE 
inEE  
camasEE! &
)EE& '
{FF 
cadenaCamasGG 
=GG 
cadenaCamasGG )
+GG* +
$strGG, 2
+GG3 4
itemGG5 9
.GG9 :
IdGG: <
+GG= >
$strGG? L
+GGM N
itemGGO S
.GGS T
NombreGGT Z
+GG[ \
$strGG] i
+GGj k
itemGGl p
.GGp q
ValorGGq v
+GGw x
$strGGy ~
;GG~ 
}HH 
returnII 
$strII 
+II 
cadenaCamasII $
+II% &
$strII' *
;II* +
}JJ 	
privateKK 
Actor_negocioKK 
GenerarActorNegocioKK 1
(KK1 2

HabitacionKK2 <

habitacionKK= G
)KKG H
{LL 	
tryMM 
{NN 
DateTimeOO 
fechaActualOO $
=OO% &
DateTimeUtilOO' 3
.OO3 4
FechaActualOO4 ?
(OO? @
)OO@ A
;OOA B
DateTimePP 
fechaFinPP !
=PP" #
fechaActualPP$ /
.PP/ 0
AddYearsPP0 8
(PP8 9
ActorSettingsPP9 F
.PPF G
DefaultPPG N
.PPN OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	PPO Ü
)
PPÜ á
;
PPá à
Actor_negocioRR #
_habitacionActorNegocioRR 5
=RR6 7
newRR8 ;
Actor_negocioRR< I
(RRI J
HotelSettingsRRJ W
.RRW X
DefaultRRX _
.RR_ `
IdRolHabitacionRR` o
,RRo p
fechaActualRRq |
,RR| }
fechaFin	RR~ Ü
,
RRÜ á
$str
RRà ä
,
RRä ã

habitacion
RRå ñ
.
RRñ ó
	EsVigente
RRó †
,
RR† °

habitacion
RR¢ ¨
.
RR¨ ≠
Ambiente
RR≠ µ
.
RRµ ∂
Id
RR∂ ∏
,
RR∏ π
true
RR∫ æ
,
RRæ ø
$str
RR¿ ¬
)
RR¬ √
{SS 
id_concepto_negocioTT '
=TT( )

habitacionTT* 4
.TT4 5
TipoHabitacionTT5 C
.TTC D
IdTTD F
}UU 
;UU 
ActorWW 
actorWW 
=WW 
newWW !
ActorWW" '
(WW' (
HotelSettingsWW( 5
.WW5 6
DefaultWW6 =
.WW= >8
,IdDetalleMaestroDocumentoIdentidadHabitacionWW> j
,WWj k
fechaActualWWl w
,WWw x

habitacion	WWy É
.
WWÉ Ñ
CodigoHabitacion
WWÑ î
,
WWî ï
$str
WWñ ò
,
WWò ô%
ConvertirCamasJsonArray
WWö ±
(
WW± ≤

habitacion
WW≤ º
.
WWº Ω
Camas
WWΩ ¬
)
WW¬ √
,
WW√ ƒ

habitacion
WW≈ œ
.
WWœ –
Anexo
WW– ’
,
WW’ ÷
HotelSettings
WW◊ ‰
.
WW‰ Â
Default
WWÂ Ï
.
WWÏ Ì#
IdTipoActorHabitacion
WWÌ Ç
,
WWÇ É
ActorSettingsXX !
.XX! "
DefaultXX" )
.XX) *!
IdFotoActorPorDefectoXX* ?
,XX? @
HotelSettingsXXA N
.XXN O
DefaultXXO V
.XXV W"
IdClaseActorHabitacionXXW m
,XXm n
HotelSettingsXXo |
.XX| }
Default	XX} Ñ
.
XXÑ Ö%
IdEstadoLegalHabitacion
XXÖ ú
,
XXú ù
$str
XXû †
,
XX† °
$str
XX¢ §
,
XX§ •
$str
XX¶ ®
)
XX® ©
;
XX© ™#
_habitacionActorNegocioZZ '
.ZZ' (
ActorZZ( -
=ZZ. /
actorZZ0 5
;ZZ5 6
return[[ #
_habitacionActorNegocio[[ .
;[[. /
}\\ 
catch]] 
(]] 
	Exception]] 
e]] 
)]] 
{^^ 
throw__ 
new__ 
LogicaException__ )
(__) *
$str__* ^
,__^ _
e__` a
)__a b
;__b c
}`` 
}aa 	
privatebb 
voidbb .
"EstablecerIdActorNegocioParaEditarbb 7
(bb7 8
Actor_negociobb8 E"
habitacionActorNegociobbF \
,bb\ ]

Habitacionbb^ h

habitacionbbi s
)bbs t
{cc 	
trydd 
{ee "
habitacionActorNegocioff &
.ff& '
idff' )
=ff* +

habitacionff, 6
.ff6 7
Idff7 9
;ff9 :"
habitacionActorNegociogg &
.gg& '
id_actorgg' /
=gg0 1

habitaciongg2 <
.gg< =
IdActorgg= D
;ggD E"
habitacionActorNegociohh &
.hh& '
Actorhh' ,
.hh, -
idhh- /
=hh0 1

habitacionhh2 <
.hh< =
IdActorhh= D
;hhD E
}ii 
catchjj 
(jj 
	Exceptionjj 
ejj 
)jj 
{kk 
throwll 
newll 
LogicaExceptionll )
(ll) *
$strll* k
,llk l
ellm n
)lln o
;llo p
}mm 
}nn 	
publicoo 
OperationResultoo 
CrearHabitacionoo .
(oo. /

Habitacionoo/ 9

habitacionoo: D
)ooD E
{pp 	
tryqq 
{rr 

habitacionss 
.ss 
	EsVigentess $
=ss% &
truess' +
;ss+ ,
iftt 
(tt 
_hotelRepositoriott %
.tt% &3
'ExisteCodigoHabitacionEnEstablecimientott& M
(ttM N

habitacionttN X
.ttX Y
CodigoHabitacionttY i
,tti j

habitacionttk u
.ttu v
Ambientettv ~
.tt~ 
Establecimiento	tt é
.
tté è
Id
ttè ë
)
ttë í
)
ttí ì
{uu 
throwvv 
newvv 
LogicaExceptionvv -
(vv- .
$strvv. y
)vvy z
;vvz {
}ww 
varxx "
habitacionActorNegocioxx *
=xx+ ,
GenerarActorNegocioxx- @
(xx@ A

habitacionxxA K
)xxK L
;xxL M
varyy 
	resultadoyy 
=yy 
_actor_Repositorioyy  2
.yy2 3
CrearActorNegocioyy3 D
(yyD E"
habitacionActorNegocioyyE [
)yy[ \
;yy\ ]

habitacion{{ 
.{{ 
Id{{ 
={{ "
habitacionActorNegocio{{  6
.{{6 7
id{{7 9
;{{9 :

habitacion|| 
.|| 
IdActor|| "
=||# $"
habitacionActorNegocio||% ;
.||; <
id_actor||< D
;||D E
	resultado}} 
.}} 
information}} %
=}}& '

habitacion}}( 2
;}}2 3
return~~ 
	resultado~~  
;~~  !
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* R
,
ÇÇR S
e
ÇÇT U
)
ÇÇU V
;
ÇÇV W
}
ÉÉ 
}
ÑÑ 	
public
ÖÖ 
OperationResult
ÖÖ 
EditarHabitacion
ÖÖ /
(
ÖÖ/ 0

Habitacion
ÖÖ0 :

habitacion
ÖÖ; E
)
ÖÖE F
{
ÜÜ 	
try
áá 
{
àà 
if
ââ 
(
ââ 
_hotelRepositorio
ââ %
.
ââ% &F
8ExisteCodigoHabitacionEnEstablecimientoExceptoHabitacion
ââ& ^
(
ââ^ _

habitacion
ââ_ i
.
ââi j
CodigoHabitacion
ââj z
,
ââz {

habitacionââ| Ü
.ââÜ á
Ambienteââá è
.ââè ê
Establecimientoââê ü
.ââü †
Idââ† ¢
,ââ¢ £

habitacionââ§ Æ
.ââÆ Ø
IdââØ ±
)ââ± ≤
)ââ≤ ≥
{
ää 
throw
ãã 
new
ãã 
LogicaException
ãã -
(
ãã- .
$str
ãã. z
)
ããz {
;
ãã{ |
}
åå 
var
çç $
habitacionActorNegocio
çç *
=
çç+ ,!
GenerarActorNegocio
çç- @
(
çç@ A

habitacion
ççA K
)
ççK L
;
ççL M0
"EstablecerIdActorNegocioParaEditar
éé 2
(
éé2 3$
habitacionActorNegocio
éé3 I
,
ééI J

habitacion
ééK U
)
ééU V
;
ééV W
var
èè 
	resultado
èè 
=
èè  
_actor_Repositorio
èè  2
.
èè2 31
#ActualizarActorNegocioIncluidoActor
èè3 V
(
èèV W$
habitacionActorNegocio
èèW m
)
èèm n
;
èèn o
	resultado
êê 
.
êê 
information
êê %
=
êê& '

habitacion
êê( 2
;
êê2 3
return
ëë 
	resultado
ëë  
;
ëë  !
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
îî 
throw
ïï 
new
ïï 
LogicaException
ïï )
(
ïï) *
$str
ïï* O
,
ïïO P
e
ïïQ R
)
ïïR S
;
ïïS T
}
ññ 
}
óó 	
public
òò 
List
òò 
<
òò 

Habitacion
òò 
>
òò ,
ObtenerHabitacionesDisponibles
òò  >
(
òò> ?
int
òò? B
idTipoHabitacion
òòC S
,
òòS T
DateTime
òòU ]

fechaDesde
òò^ h
,
òòh i
DateTime
òòj r

fechaHasta
òòs }
,
òò} ~
intòò Ç!
idEstablecimientoòòÉ î
,òòî ï
intòòñ ô

idAmbienteòòö §
,òò§ •
intòò¶ ©-
idActorNegocioQueTienePreciosòò™ «
)òò« »
{
ôô 	
try
öö 
{
õõ 
List
úú 
<
úú 

Habitacion
úú 
>
úú  %
habitacionesDisponibles
úú! 8
;
úú8 9
if
ùù 
(
ùù 

idAmbiente
ùù 
==
ùù !
$num
ùù" #
)
ùù# $
{
ûû %
habitacionesDisponibles
üü +
=
üü, -
_hotelRepositorio
üü. ?
.
üü? @E
7ObtenerHabitacionDisponiblesPorEstablecimientoConPrecio
üü@ w
(
üüw x
idTipoHabitacionüüx à
,üüà â

fechaDesdeüüä î
,üüî ï

fechaHastaüüñ †
,üü† °!
idEstablecimientoüü¢ ≥
,üü≥ ¥-
idActorNegocioQueTienePreciosüüµ “
)üü“ ”
.üü” ‘
ToListüü‘ ⁄
(üü⁄ €
)üü€ ‹
;üü‹ ›
}
†† 
else
°° 
{
¢¢ %
habitacionesDisponibles
££ +
=
££, -
_hotelRepositorio
££. ?
.
££? @*
ObtenerHabitacionDisponibles
££@ \
(
££\ ]
idTipoHabitacion
££] m
,
££m n

fechaDesde
££o y
,
££y z

fechaHasta££{ Ö
,££Ö Ü

idAmbiente££á ë
,££ë í-
idActorNegocioQueTienePrecios££ì ∞
)££∞ ±
.££± ≤
ToList££≤ ∏
(££∏ π
)££π ∫
;££∫ ª
}
§§ 
foreach
•• 
(
•• 
var
•• "
habitacionDisponible
•• 1
in
••2 4%
habitacionesDisponibles
••5 L
)
••L M
{
¶¶ 
if
ßß 
(
ßß "
habitacionDisponible
ßß ,
.
ßß, -
TipoHabitacion
ßß- ;
.
ßß; <
Precios
ßß< C
.
ßßC D
Count
ßßD I
(
ßßI J
)
ßßJ K
>
ßßL M
$num
ßßN O
)
ßßO P
{
®® 
var
©© 
precioNormal
©© (
=
©©) *"
habitacionDisponible
©©+ ?
.
©©? @
TipoHabitacion
©©@ N
.
©©N O
Precios
©©O V
.
©©V W
SingleOrDefault
©©W f
(
©©f g
p
©©g h
=>
©©i k
p
©©l m
.
©©m n
IdTarifa
©©n v
==
©©w y
MaestroSettings©©z â
.©©â ä
Default©©ä ë
.©©ë í,
IdDetalleMaestroTarifaNormal©©í Æ
)©©Æ Ø
;©©Ø ∞
if
™™ 
(
™™ 
precioNormal
™™ (
!=
™™) +
null
™™, 0
)
™™0 1
{
´´ 
var
¨¨ 
preciosHabitacion
¨¨  1
=
¨¨2 3"
habitacionDisponible
¨¨4 H
.
¨¨H I
TipoHabitacion
¨¨I W
.
¨¨W X
Precios
¨¨X _
.
¨¨_ `
ToList
¨¨` f
(
¨¨f g
)
¨¨g h
.
¨¨h i
Where
¨¨i n
(
¨¨n o
p
¨¨o p
=>
¨¨q s
p
¨¨t u
.
¨¨u v
Id
¨¨v x
!=
¨¨y {
precioNormal¨¨| à
.¨¨à â
Id¨¨â ã
)¨¨ã å
;¨¨å ç
var
≠≠ 
nuevosPrecios
≠≠  -
=
≠≠. /
new
≠≠0 3
List
≠≠4 8
<
≠≠8 9/
!Precio_Concepto_Negocio_Comercial
≠≠9 Z
>
≠≠Z [
(
≠≠[ \
)
≠≠\ ]
{
≠≠^ _
precioNormal
≠≠` l
}
≠≠m n
;
≠≠n o
nuevosPrecios
ÆÆ )
.
ÆÆ) *
AddRange
ÆÆ* 2
(
ÆÆ2 3
preciosHabitacion
ÆÆ3 D
)
ÆÆD E
;
ÆÆE F"
habitacionDisponible
ØØ 0
.
ØØ0 1
TipoHabitacion
ØØ1 ?
.
ØØ? @
Precios
ØØ@ G
=
ØØH I
nuevosPrecios
ØØJ W
;
ØØW X
}
∞∞ 
}
±± 
}
≤≤ 
return
≥≥ %
habitacionesDisponibles
≥≥ .
;
≥≥. /
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
LogicaException
∑∑ )
(
∑∑) *
$str
∑∑* R
,
∑∑R S
e
∑∑T U
)
∑∑U V
;
∑∑V W
}
∏∏ 
}
ππ 	
public
∫∫ 

Habitacion
∫∫ )
ObtenerHabitacionDisponible
∫∫ 5
(
∫∫5 6
int
∫∫6 9
idHabitacion
∫∫: F
,
∫∫F G
int
∫∫H K+
idActorNegocioQueTienePrecios
∫∫L i
)
∫∫i j
{
ªª 	
try
ºº 
{
ΩΩ 

Habitacion
ææ "
habitacionDisponible
ææ /
=
ææ0 1
_hotelRepositorio
ææ2 C
.
ææC D)
ObtenerHabitacionDisponible
ææD _
(
ææ_ `
idHabitacion
ææ` l
,
ææl m,
idActorNegocioQueTienePreciosææn ã
)ææã å
;ææå ç
return
øø "
habitacionDisponible
øø +
;
øø+ ,
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
e
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ )
(
√√) *
$str
√√* T
,
√√T U
e
√√V W
)
√√W X
;
√√X Y
}
ƒƒ 
}
≈≈ 	
public
∆∆ 
List
∆∆ 
<
∆∆ 

Habitacion
∆∆ 
>
∆∆ 4
&BuscarHabitacionesDisponiblesConPrecio
∆∆  F
(
∆∆F G
int
∆∆G J
idTipoHabitacion
∆∆K [
,
∆∆[ \
DateTime
∆∆] e

fechaDesde
∆∆f p
,
∆∆p q
DateTime
∆∆r z

fechaHasta∆∆{ Ö
,∆∆Ö Ü
int∆∆á ä!
idEstablecimiento∆∆ã ú
,∆∆ú ù
int∆∆û °-
idActorNegocioQueTienePrecios∆∆¢ ø
)∆∆ø ¿
{
«« 	
try
»» 
{
…… 
List
   
<
   

Habitacion
   
>
    %
habitacionesDisponibles
  ! 8
=
  9 :
_hotelRepositorio
  ; L
.
  L MF
7ObtenerHabitacionDisponiblesPorEstablecimientoConPrecio  M Ñ
(  Ñ Ö 
idTipoHabitacion  Ö ï
,  ï ñ

fechaDesde  ó °
,  ° ¢

fechaHasta  £ ≠
,  ≠ Æ!
idEstablecimiento  Ø ¿
,  ¿ ¡-
idActorNegocioQueTienePrecios  ¬ ﬂ
)  ﬂ ‡
.  ‡ ·
ToList  · Á
(  Á Ë
)  Ë È
;  È Í
return
ÀÀ %
habitacionesDisponibles
ÀÀ .
;
ÀÀ. /
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
e
ÕÕ 
)
ÕÕ 
{
ŒŒ 
throw
œœ 
new
œœ 
LogicaException
œœ )
(
œœ) *
$str
œœ* ]
,
œœ] ^
e
œœ_ `
)
œœ` a
;
œœa b
}
–– 
}
—— 	
public
““ 
List
““ 
<
““ 

Habitacion
““ 
>
““ +
BuscarHabitacionesDisponibles
““  =
(
““= >
int
““> A
idTipoHabitacion
““B R
,
““R S
DateTime
““T \

fechaDesde
““] g
,
““g h
DateTime
““i q

fechaHasta
““r |
,
““| }
int““~ Å!
idEstablecimiento““Ç ì
)““ì î
{
”” 	
try
‘‘ 
{
’’ 
List
÷÷ 
<
÷÷ 

Habitacion
÷÷ 
>
÷÷  %
habitacionesDisponibles
÷÷! 8
=
÷÷9 :
_hotelRepositorio
÷÷; L
.
÷÷L M<
.ObtenerHabitacionDisponiblesPorEstablecimiento
÷÷M {
(
÷÷{ |
idTipoHabitacion÷÷| å
,÷÷å ç

fechaDesde÷÷é ò
,÷÷ò ô

fechaHasta÷÷ö §
,÷÷§ •!
idEstablecimiento÷÷¶ ∑
)÷÷∑ ∏
.÷÷∏ π
ToList÷÷π ø
(÷÷ø ¿
)÷÷¿ ¡
;÷÷¡ ¬
return
◊◊ %
habitacionesDisponibles
◊◊ .
;
◊◊. /
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
throw
€€ 
new
€€ 
LogicaException
€€ )
(
€€) *
$str
€€* ]
,
€€] ^
e
€€_ `
)
€€` a
;
€€a b
}
‹‹ 
}
›› 	
}
ﬁﬁ 
}ﬂﬂ †û
QD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelFacturacion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
Atencion -
!ObtenerAtencionDesdeAtencionMacro 9
(9 :
long: >
idAtencionMacro? N
)N O
{ 	
try 
{ 
Atencion 
atencion !
=" #
_hotelRepositorio$ 5
.5 6-
!ObtenerAtencionDesdeAtencionMacro6 W
(W X
idAtencionMacroX g
)g h
;h i
atencion 
. 
Ordenes  
.  !
ToList! '
(' (
)( )
.) *
ForEach* 1
(1 2
or2 4
=>5 7
or8 :
.: ;
Codigo; A
=B C
orD F
.F G
CodigoG M
.M N
ReplaceN U
(U V
$strV Y
,Y Z
$str[ ^
)^ _
+` a
$strb g
+h i
orj l
.l m$
FechaHoraRegistroString	m Ñ
)
Ñ Ö
;
Ö Ü
atencion 
. 
Ordenes  
=! "
atencion# +
.+ ,
Ordenes, 3
.3 4
OrderBy4 ;
(; <
o< =
=>> @
oA B
.B C
TieneFacturacionC S
)S T
;T U
atencion 
. 
OrdenPrincipal '
.' (
Detalles( 0
=1 2
atencion3 ;
.; <
OrdenPrincipal< J
.J K
DetallesK S
.S T
WhereT Y
(Y Z
dZ [
=>\ ^
d_ `
.` a
Importea h
>i j
$numk l
)l m
;m n
var "
detallesOrdenPrincipal *
=+ ,
new- 0
List1 5
<5 6 
DetalleOrdenAtencion6 J
>J K
(K L
)L M
;M N
foreach 
( 
var 
detalle $
in% '
atencion( 0
.0 1
OrdenPrincipal1 ?
.? @
Detalles@ H
)H I
{ 
var 
cantidadDetalle '
=( )
detalle* 1
.1 2
Cantidad2 :
;: ;
for 
( 
int 
i 
=  
$num! "
;" #
i$ %
<=& (
cantidadDetalle) 8
;8 9
i: ;
++; =
)= >
{   
detalle!! 
.!!  
Cantidad!!  (
=!!) *
$num!!+ ,
;!!, -
detalle"" 
.""  
Importe""  '
=""( )
detalle""* 1
.""1 2
PrecioUnitario""2 @
;""@ A"
detallesOrdenPrincipal## .
.##. /
Add##/ 2
(##2 3
detalle##3 :
)##: ;
;##; <
}$$ 
}%% 
atencion&& 
.&& 
OrdenPrincipal&& '
.&&' (
Detalles&&( 0
=&&1 2"
detallesOrdenPrincipal&&3 I
;&&I J
foreach'' 
('' 
var'' 
orden'' "
in''# %
atencion''& .
.''. /
Ordenes''/ 6
.''6 7
ToList''7 =
(''= >
)''> ?
)''? @
{(( 
var)) 
detallesOrden)) %
=))& '
new))( +
List)), 0
<))0 1 
DetalleOrdenAtencion))1 E
>))E F
())F G
)))G H
;))H I
foreach** 
(** 
var**  
detalle**! (
in**) +
orden**, 1
.**1 2
Detalles**2 :
)**: ;
{++ 
var,, 
cantidadDetalle,, +
=,,, -
detalle,,. 5
.,,5 6
Cantidad,,6 >
;,,> ?
for-- 
(-- 
int--  
i--! "
=--# $
$num--% &
;--& '
i--( )
<=--* ,
cantidadDetalle--- <
;--< =
i--> ?
++--? A
)--A B
{.. 
detalle// #
.//# $
Cantidad//$ ,
=//- .
$num/// 0
;//0 1
detalle00 #
.00# $
Importe00$ +
=00, -
detalle00. 5
.005 6
PrecioUnitario006 D
;00D E
detallesOrden11 )
.11) *
Add11* -
(11- .
detalle11. 5
)115 6
;116 7
}22 
}33 
orden44 
.44 
Detalles44 "
=44# $
detallesOrden44% 2
;442 3
}55 
return66 
atencion66 
;66  
}77 
catch88 
(88 
	Exception88 
e88 
)88 
{99 
throw:: 
new:: 
LogicaException:: )
(::) *
$str::* j
,::j k
e::l m
)::m n
;::n o
};; 
}<< 	
public== 
Atencion== (
ObtenerAtencionDesdeAtencion== 4
(==4 5
long==5 9

idAtencion==: D
)==D E
{>> 	
try?? 
{@@ 
AtencionAA 
atencionAA !
=AA" #
_hotelRepositorioAA$ 5
.AA5 6(
ObtenerAtencionDesdeAtencionAA6 R
(AAR S

idAtencionAAS ]
)AA] ^
;AA^ _
atencionBB 
.BB 
OrdenesBB  
.BB  !
ToListBB! '
(BB' (
)BB( )
.BB) *
ForEachBB* 1
(BB1 2
orBB2 4
=>BB5 7
orBB8 :
.BB: ;
CodigoBB; A
=BBB C
orBBD F
.BBF G
CodigoBBG M
.BBM N
ReplaceBBN U
(BBU V
$strBBV Y
,BBY Z
$strBB[ ^
)BB^ _
+BB` a
$strBBb g
+BBh i
orBBj l
.BBl m$
FechaHoraRegistroString	BBm Ñ
)
BBÑ Ö
;
BBÖ Ü
atencionCC 
.CC 
OrdenesCC  
=CC! "
atencionCC# +
.CC+ ,
OrdenesCC, 3
.CC3 4
OrderByCC4 ;
(CC; <
oCC< =
=>CC> @
oCCA B
.CCB C
TieneFacturacionCCC S
)CCS T
;CCT U
atencionDD 
.DD 
OrdenPrincipalDD '
.DD' (
DetallesDD( 0
=DD1 2
atencionDD3 ;
.DD; <
OrdenPrincipalDD< J
.DDJ K
DetallesDDK S
.DDS T
WhereDDT Y
(DDY Z
dDDZ [
=>DD\ ^
dDD_ `
.DD` a
ImporteDDa h
>DDi j
$numDDk l
)DDl m
;DDm n
atencionEE 
.EE 
OrdenPrincipalEE '
.EE' (
ImporteEE( /
=EE0 1
atencionEE2 :
.EE: ;
OrdenPrincipalEE; I
.EEI J
ImporteEEJ Q
-EER S
atencionEET \
.EE\ ]
OrdenPrincipalEE] k
.EEk l
DetallesEEl t
.EEt u
WhereEEu z
(EEz {
dEE{ |
=>EE} 
d
EEÄ Å
.
EEÅ Ç
EstaAnulado
EEÇ ç
)
EEç é
.
EEé è
Sum
EEè í
(
EEí ì
d
EEì î
=>
EEï ó
d
EEò ô
.
EEô ö
Importe
EEö °
)
EE° ¢
;
EE¢ £
varFF "
detallesOrdenPrincipalFF *
=FF+ ,
newFF- 0
ListFF1 5
<FF5 6 
DetalleOrdenAtencionFF6 J
>FFJ K
(FFK L
)FFL M
;FFM N
foreachGG 
(GG 
varGG 
detalleGG $
inGG% '
atencionGG( 0
.GG0 1
OrdenPrincipalGG1 ?
.GG? @
DetallesGG@ H
)GGH I
{HH 
varII 
cantidadDetalleII '
=II( )
detalleII* 1
.II1 2
CantidadII2 :
;II: ;
forJJ 
(JJ 
intJJ 
iJJ 
=JJ  
$numJJ! "
;JJ" #
iJJ$ %
<=JJ& (
cantidadDetalleJJ) 8
;JJ8 9
iJJ: ;
++JJ; =
)JJ= >
{KK 
detalleLL 
.LL  
CantidadLL  (
=LL) *
$numLL+ ,
;LL, -
detalleMM 
.MM  
ImporteMM  '
=MM( )
detalleMM* 1
.MM1 2
PrecioUnitarioMM2 @
;MM@ A"
detallesOrdenPrincipalNN .
.NN. /
AddNN/ 2
(NN2 3
detalleNN3 :
)NN: ;
;NN; <
}OO 
}PP 
atencionQQ 
.QQ 
OrdenPrincipalQQ '
.QQ' (
DetallesQQ( 0
=QQ1 2"
detallesOrdenPrincipalQQ3 I
;QQI J
foreachRR 
(RR 
varRR 
ordenRR "
inRR# %
atencionRR& .
.RR. /
OrdenesRR/ 6
.RR6 7
ToListRR7 =
(RR= >
)RR> ?
)RR? @
{SS 
varTT 
detallesOrdenTT %
=TT& '
newTT( +
ListTT, 0
<TT0 1 
DetalleOrdenAtencionTT1 E
>TTE F
(TTF G
)TTG H
;TTH I
foreachUU 
(UU 
varUU  
detalleUU! (
inUU) +
ordenUU, 1
.UU1 2
DetallesUU2 :
)UU: ;
{VV 
varWW 
cantidadDetalleWW +
=WW, -
detalleWW. 5
.WW5 6
CantidadWW6 >
;WW> ?
forXX 
(XX 
intXX  
iXX! "
=XX# $
$numXX% &
;XX& '
iXX( )
<=XX* ,
cantidadDetalleXX- <
;XX< =
iXX> ?
++XX? A
)XXA B
{YY 
detalleZZ #
.ZZ# $
CantidadZZ$ ,
=ZZ- .
$numZZ/ 0
;ZZ0 1
detalle[[ #
.[[# $
Importe[[$ +
=[[, -
detalle[[. 5
.[[5 6
PrecioUnitario[[6 D
;[[D E
detallesOrden\\ )
.\\) *
Add\\* -
(\\- .
detalle\\. 5
)\\5 6
;\\6 7
}]] 
}^^ 
orden__ 
.__ 
Detalles__ "
=__# $
detallesOrden__% 2
;__2 3
}`` 
returnaa 
atencionaa 
;aa  
}bb 
catchcc 
(cc 
	Exceptioncc 
ecc 
)cc 
{dd 
throwee 
newee 
LogicaExceptionee )
(ee) *
$stree* R
,eeR S
eeeT U
)eeU V
;eeV W
}ff 
}gg 	
publichh 
OperationResulthh !
FacturarAtencionMacrohh 4
(hh4 5
Atencionhh5 =
atencionhh> F
,hhF G"
UserProfileSessionDatahhH ^
sesionUsuariohh_ l
)hhl m
{ii 	
tryjj 
{kk 
varll 
	resultadoll 
=ll 
newll  #
OperationResultll$ 3
(ll3 4
)ll4 5
;ll5 6
varmm -
!estadosActualesAtencionHabitacionmm 5
=mm6 7
newmm8 ;
Listmm< @
<mm@ A
EstadoAtencionHotelmmA T
>mmT U
(mmU V
)mmV W
;mmW X
varnn 
fechaActualnn 
=nn  !
DateTimeUtilnn" .
.nn. /
FechaActualnn/ :
(nn: ;
)nn; <
;nn< =
varoo 
idsEstadosValidosoo %
=oo& '
newoo( +
Listoo, 0
<oo0 1
intoo1 4
>oo4 5
(oo5 6
)oo6 7
{oo8 9
MaestroSettingsoo: I
.ooI J
DefaultooJ Q
.ooQ R,
 IdDetalleMaestroEstadoConfirmadoooR r
,oor s
MaestroSettings	oot É
.
ooÉ Ñ
Default
ooÑ ã
.
ooã å-
IdDetalleMaestroEstadoCheckedIn
ooå ´
,
oo´ ¨
MaestroSettings
oo≠ º
.
ooº Ω
Default
ooΩ ƒ
.
ooƒ ≈2
$IdDetalleMaestroEstadoSalidaCambiado
oo≈ È
,
ooÈ Í
MaestroSettings
ooÎ ˙
.
oo˙ ˚
Default
oo˚ Ç
.
ooÇ É3
%IdDetalleMaestroEstadoEntradaCambiado
ooÉ ®
}
oo© ™
;
oo™ ´
varpp 
atencionHotelpp !
=pp" ##
_transaccionRepositoriopp$ ;
.pp; <
ObtenerTransaccionpp< N
(ppN O
atencionppO W
.ppW X
IdppX Z
)ppZ [
;pp[ \
varqq  
atencionesHabitacionqq (
=qq) *#
_transaccionRepositorioqq+ B
.qqB CW
JObtenerTransacciones1DeTransaccionInclusiveEstadoTransaccionDetalleMaestro	qqC ç
(
qqç é
atencion
qqé ñ
.
qqñ ó
Id
qqó ô
)
qqô ö
.
qqö õ
ToList
qqõ °
(
qq° ¢
)
qq¢ £
;
qq£ §
varrr )
consumosPendientesFacturacionrr 1
=rr2 3#
_transaccionRepositoriorr4 K
.rrK L 
ObtenerTransaccionesrrL `
(rr` a
atencionrra i
.rri j
Ordenesrrj q
.rrq r
Whererrr w
(rrw x
orrx y
=>rrz |
orr} ~
.rr~ 
Id	rr Å
!=
rrÇ Ñ
atencion
rrÖ ç
.
rrç é
OrdenPrincipal
rré ú
.
rrú ù
Id
rrù ü
&&
rr† ¢
!
rr£ §
o
rr§ •
.
rr• ¶
TieneFacturacion
rr¶ ∂
)
rr∂ ∑
.
rr∑ ∏
Select
rr∏ æ
(
rræ ø
o
rrø ¿
=>
rr¡ √
o
rrƒ ≈
.
rr≈ ∆
Id
rr∆ »
)
rr» …
.
rr…  
ToArray
rr  —
(
rr— “
)
rr“ ”
)
rr” ‘
.
rr‘ ’
ToList
rr’ €
(
rr€ ‹
)
rr‹ ›
;
rr› ﬁ
varss &
numeroAtencionesPermitidasss .
=ss/ 0 
atencionesHabitacionss1 E
.ssE F
WheressF K
(ssK L
assL M
=>ssN P
idsEstadosValidosssQ b
.ssb c
Containsssc k
(ssk l
(ssl m
intssm p
)ssp q
assq r
.ssr s
id_estado_actual	sss É
)
ssÉ Ñ
)
ssÑ Ö
.
ssÖ Ü
Count
ssÜ ã
(
ssã å
)
sså ç
;
ssç é
iftt 
(tt  
atencionesHabitaciontt (
.tt( )
Counttt) .
(tt. /
)tt/ 0
!=tt1 3&
numeroAtencionesPermitidastt4 N
)ttN O
{uu 
throwvv 
newvv 
LogicaExceptionvv -
(vv- .
$strvv. ^
)vv^ _
;vv_ `
}ww 
ifxx 
(xx 
atencionHotelxx !
.xx! "
enum1xx" '
==xx( *
(xx+ ,
intxx, /
)xx/ 0 
ModoFacturacionHotelxx0 D
.xxD E
NoEspecificadoxxE S
)xxS T
{yy 
varzz 
eventoTransaccionzz )
=zz* +
newzz, /
Evento_transaccionzz0 B
(zzB C
atencionHotelzzC P
.zzP Q
idzzQ S
,zzS T
sesionUsuariozzU b
.zzb c
Empleadozzc k
.zzk l
Idzzl n
,zzn o
MaestroSettingszzp 
.	zz Ä
Default
zzÄ á
.
zzá à-
IdDetalleMaestroEstadoFacturado
zzà ß
,
zzß ®
fechaActual
zz© ¥
,
zz¥ µ
$str
zz∂ ø
)
zzø ¿
;
zz¿ ¡
atencionHotel{{ !
.{{! "
Evento_transaccion{{" 4
.{{4 5
Add{{5 8
({{8 9
eventoTransaccion{{9 J
){{J K
;{{K L
atencionHotel|| !
.||! "
enum1||" '
=||( )
(||* +
int||+ .
)||. / 
ModoFacturacionHotel||/ C
.||C D
Global||D J
;||J K
}}} 
var~~ 
eventoFacturado~~ #
=~~$ %
_maestroRepositorio~~& 9
.~~9 :
ObtenerDetalle~~: H
(~~H I
MaestroSettings~~I X
.~~X Y
Default~~Y `
.~~` a,
IdDetalleMaestroEstadoFacturado	~~a Ä
)
~~Ä Å
;
~~Å Ç
foreach 
( 
var 
atencionHabitacion /
in0 2 
atencionesHabitacion3 G
)G H
{
ÄÄ 
if
ÅÅ 
(
ÅÅ  
atencionHabitacion
ÅÅ *
.
ÅÅ* +
importe_total
ÅÅ+ 8
>
ÅÅ9 :
$num
ÅÅ; <
)
ÅÅ< =
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
atencion
ÉÉ %
.
ÉÉ% &
TieneFacturacion
ÉÉ& 6
)
ÉÉ6 7
{
ÑÑ 
var
ÖÖ ,
estadoActualAtencionHabitacion
ÖÖ  >
=
ÖÖ? @
new
ÖÖA D!
EstadoAtencionHotel
ÖÖE X
{
ÖÖY Z

IdAuxiliar
ÖÖ[ e
=
ÖÖf g 
atencionHabitacion
ÖÖh z
.
ÖÖz {
id
ÖÖ{ }
,
ÖÖ} ~
EstadosÖÖ Ü
=ÖÖá à
newÖÖâ å
ListÖÖç ë
<ÖÖë í

ItemEstadoÖÖí ú
>ÖÖú ù
{ÖÖû ü
newÖÖ† £

ItemEstadoÖÖ§ Æ
(ÖÖÆ Ø"
atencionHabitacionÖÖØ ¡
.ÖÖ¡ ¬"
Estado_transaccionÖÖ¬ ‘
.ÖÖ‘ ’
LastÖÖ’ Ÿ
(ÖÖŸ ⁄
)ÖÖ⁄ €
)ÖÖ€ ‹
}ÖÖ› ﬁ
}ÖÖﬂ ‡
;ÖÖ‡ · 
atencionHabitacion
ÜÜ .
.
ÜÜ. /
enum1
ÜÜ/ 4
=
ÜÜ5 6
(
ÜÜ7 8
int
ÜÜ8 ;
)
ÜÜ; <"
ModoFacturacionHotel
ÜÜ< P
.
ÜÜP Q
Global
ÜÜQ W
;
ÜÜW X,
estadoActualAtencionHabitacion
áá :
.
áá: ;
Estados
áá; B
.
ááB C
Add
ááC F
(
ááF G
new
ááG J

ItemEstado
ááK U
(
ááU V
new
ááV Y 
Evento_transaccion
ááZ l
(
áál m 
atencionHabitacion
áám 
.áá Ä
idááÄ Ç
,ááÇ É
sesionUsuarioááÑ ë
.ááë í
Empleadoááí ö
.ááö õ
Idááõ ù
,ááù û
MaestroSettingsááü Æ
.ááÆ Ø
DefaultááØ ∂
.áá∂ ∑/
IdDetalleMaestroEstadoFacturadoáá∑ ÷
,áá÷ ◊
fechaActualááÿ „
,áá„ ‰
$strááÂ Ó
)ááÓ Ô
{áá Ò
Detalle_maestroááÚ Å
=ááÇ É
eventoFacturadoááÑ ì
}ááî ï
)ááï ñ
)ááñ ó
;ááó ò/
!estadosActualesAtencionHabitacion
àà =
.
àà= >
Add
àà> A
(
ààA B,
estadoActualAtencionHabitacion
ààB `
)
àà` a
;
ààa b
}
ââ 
foreach
ää 
(
ää  !
var
ää! $
consumoHabitacion
ää% 6
in
ää7 9+
consumosPendientesFacturacion
ää: W
.
ääW X
Where
ääX ]
(
ää] ^
ch
ää^ `
=>
ääa c
ch
ääd f
.
ääf g(
id_transaccion_referenciaääg Ä
==ääÅ É"
atencionHabitacionääÑ ñ
.ääñ ó
idääó ô
)ääô ö
)ääö õ
{
ãã 
consumoHabitacion
åå -
.
åå- . 
Evento_transaccion
åå. @
.
åå@ A
Add
ååA D
(
ååD E
new
ååE H 
Evento_transaccion
ååI [
(
åå[ \
consumoHabitacion
åå\ m
.
ååm n
id
åån p
,
ååp q
sesionUsuario
åår 
.åå Ä
EmpleadoååÄ à
.ååà â
Idååâ ã
,ååã å
MaestroSettingsååç ú
.ååú ù
Defaultååù §
.åå§ •/
IdDetalleMaestroEstadoFacturadoåå• ƒ
,ååƒ ≈
fechaActualåå∆ —
,åå— “
$stråå” ‹
)åå‹ ›
)åå› ﬁ
;ååﬁ ﬂ
consumoHabitacion
çç -
.
çç- .

indicador1
çç. 8
=
çç9 :
true
çç; ?
;
çç? @ 
atencionHabitacion
éé .
.
éé. /
Transaccion11
éé/ <
.
éé< =
Add
éé= @
(
éé@ A
consumoHabitacion
ééA R
)
ééR S
;
ééS T
}
èè  
atencionHabitacion
êê *
.
êê* +

indicador1
êê+ 5
=
êê6 7
true
êê8 <
;
êê< = 
atencionHabitacion
ëë *
.
ëë* +

indicador2
ëë+ 5
=
ëë6 7
true
ëë8 <
;
ëë< =
atencionHotel
íí %
.
íí% &
Transaccion1
íí& 2
.
íí2 3
Add
íí3 6
(
íí6 7 
atencionHabitacion
íí7 I
)
ííI J
;
ííJ K
}
ìì 
}
îî 
if
ïï 
(
ïï 
!
ïï 
atencion
ïï 
.
ïï 
TieneFacturacion
ïï .
)
ïï. /
if
ññ 
(
ññ 
atencion
ññ  
.
ññ  !
Ordenes
ññ! (
==
ññ) +
null
ññ, 0
)
ññ0 1
atencion
ññ2 :
.
ññ: ;
Ordenes
ññ; B
=
ññC D
new
ññE H
List
ññI M
<
ññM N
OrdenAtencion
ññN [
>
ññ[ \
(
ññ\ ]
)
ññ] ^
{
ññ_ `
atencion
ñña i
.
ññi j
OrdenPrincipal
ññj x
}
ññy z
;
ññz {
else
óó 
atencion
óó !
.
óó! "
Ordenes
óó" )
.
óó) *
ToList
óó* 0
(
óó0 1
)
óó1 2
.
óó2 3
Add
óó3 6
(
óó6 7
atencion
óó7 ?
.
óó? @
OrdenPrincipal
óó@ N
)
óóN O
;
óóO P
switch
òò 
(
òò 
atencion
òò  
.
òò  !

TipoDePago
òò! +
)
òò+ ,
{
ôô 
case
öö 
(
öö 
int
öö 
)
öö 
TipoPagoAtencion
öö .
.
öö. /
General
öö/ 6
:
öö6 7
	resultado
õõ !
=
õõ" #0
"ResolverFacturacionTipoPagoGeneral
õõ$ F
(
õõF G
atencion
õõG O
,
õõO P
sesionUsuario
õõQ ^
,
õõ^ _
atencionHotel
õõ` m
)
õõm n
;
õõn o
break
õõp u
;
õõu v
case
úú 
(
úú 
int
úú 
)
úú 
TipoPagoAtencion
úú .
.
úú. /
Diferenciado
úú/ ;
:
úú; <
	resultado
ùù !
=
ùù" #5
'ResolverFacturacionTipoPagoDiferenciado
ùù$ K
(
ùùK L
atencion
ùùL T
,
ùùT U
sesionUsuario
ùùV c
,
ùùc d
atencionHotel
ùùe r
)
ùùr s
;
ùùs t
break
ùùu z
;
ùùz {
}
ûû /
!estadosActualesAtencionHabitacion
üü 1
.
üü1 2
ForEach
üü2 9
(
üü9 :
e
üü: ;
=>
üü< >
e
üü? @
.
üü@ A
	Facturado
üüA J
=
üüK L
true
üüM Q
)
üüQ R
;
üüR S/
!estadosActualesAtencionHabitacion
†† 1
.
††1 2
ForEach
††2 9
(
††9 :
e
††: ;
=>
††< >
e
††? @
.
††@ A
FacturadoGlobal
††A P
=
††Q R
true
††S W
)
††W X
;
††X Y/
!estadosActualesAtencionHabitacion
°° 1
.
°°1 2
ForEach
°°2 9
(
°°9 :
e
°°: ;
=>
°°< >
e
°°? @
.
°°@ A
TieneFacturacion
°°A Q
=
°°R S
true
°°T X
)
°°X Y
;
°°Y Z
	resultado
¢¢ 
.
¢¢ 
information
¢¢ %
=
¢¢& '/
!estadosActualesAtencionHabitacion
¢¢( I
;
¢¢I J
return
££ 
	resultado
££  
;
££  !
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
e
•• 
)
•• 
{
¶¶ 
throw
ßß 
new
ßß 
LogicaException
ßß )
(
ßß) *
$str
ßß* X
,
ßßX Y
e
ßßZ [
)
ßß[ \
;
ßß\ ]
}
®® 
}
©© 	
public
™™ 
OperationResult
™™ 
FacturarAtencion
™™ /
(
™™/ 0
Atencion
™™0 8
atencion
™™9 A
,
™™A B$
UserProfileSessionData
™™C Y
sesionUsuario
™™Z g
)
™™g h
{
´´ 	
try
¨¨ 
{
≠≠ 
OperationResult
ÆÆ 
	resultado
ÆÆ  )
=
ÆÆ* +
new
ÆÆ, /
OperationResult
ÆÆ0 ?
(
ÆÆ? @
)
ÆÆ@ A
;
ÆÆA B
DateTime
ØØ 
fechaActual
ØØ $
=
ØØ% &
DateTimeUtil
ØØ' 3
.
ØØ3 4
FechaActual
ØØ4 ?
(
ØØ? @
)
ØØ@ A
;
ØØA B
var
∞∞ 
idsEstadosValidos
∞∞ %
=
∞∞& '
new
∞∞( +
List
∞∞, 0
<
∞∞0 1
int
∞∞1 4
>
∞∞4 5
(
∞∞5 6
)
∞∞6 7
{
∞∞8 9
MaestroSettings
∞∞: I
.
∞∞I J
Default
∞∞J Q
.
∞∞Q R.
 IdDetalleMaestroEstadoConfirmado
∞∞R r
,
∞∞r s
MaestroSettings∞∞t É
.∞∞É Ñ
Default∞∞Ñ ã
.∞∞ã å/
IdDetalleMaestroEstadoCheckedIn∞∞å ´
,∞∞´ ¨
MaestroSettings∞∞≠ º
.∞∞º Ω
Default∞∞Ω ƒ
.∞∞ƒ ≈4
$IdDetalleMaestroEstadoSalidaCambiado∞∞≈ È
,∞∞È Í
MaestroSettings∞∞Î ˙
.∞∞˙ ˚
Default∞∞˚ Ç
.∞∞Ç É5
%IdDetalleMaestroEstadoEntradaCambiado∞∞É ®
}∞∞© ™
;∞∞™ ´
var
±± 
atencionHotel
±± !
=
±±" #%
_transaccionRepositorio
±±$ ;
.
±±; <%
ObtenerTransaccionPadre
±±< S
(
±±S T
atencion
±±T \
.
±±\ ]
Id
±±] _
)
±±_ `
;
±±` a
var
≤≤  
atencionHabitacion
≤≤ &
=
≤≤' (%
_transaccionRepositorio
≤≤) @
.
≤≤@ AH
:ObtenerTransaccionInclusiveEstadoTransaccionDetalleMaestro
≤≤A {
(
≤≤{ |
atencion≤≤| Ñ
.≤≤Ñ Ö
Id≤≤Ö á
)≤≤á à
;≤≤à â
var
≥≥ +
consumosPendientesFacturacion
≥≥ 1
=
≥≥2 3%
_transaccionRepositorio
≥≥4 K
.
≥≥K L"
ObtenerTransacciones
≥≥L `
(
≥≥` a
atencion
≥≥a i
.
≥≥i j
Ordenes
≥≥j q
.
≥≥q r
Where
≥≥r w
(
≥≥w x
o
≥≥x y
=>
≥≥z |
o
≥≥} ~
.
≥≥~ 
Id≥≥ Å
!=≥≥Ç Ñ
atencion≥≥Ö ç
.≥≥ç é
OrdenPrincipal≥≥é ú
.≥≥ú ù
Id≥≥ù ü
&&≥≥† ¢
!≥≥£ §
o≥≥§ •
.≥≥• ¶ 
TieneFacturacion≥≥¶ ∂
)≥≥∂ ∑
.≥≥∑ ∏
Select≥≥∏ æ
(≥≥æ ø
o≥≥ø ¿
=>≥≥¡ √
o≥≥ƒ ≈
.≥≥≈ ∆
Id≥≥∆ »
)≥≥» …
.≥≥…  
ToArray≥≥  —
(≥≥— “
)≥≥“ ”
)≥≥” ‘
.≥≥‘ ’
ToList≥≥’ €
(≥≥€ ‹
)≥≥‹ ›
;≥≥› ﬁ
if
¥¥ 
(
¥¥ 
!
¥¥ 
idsEstadosValidos
¥¥ &
.
¥¥& '
Contains
¥¥' /
(
¥¥/ 0
(
¥¥0 1
int
¥¥1 4
)
¥¥4 5 
atencionHabitacion
¥¥5 G
.
¥¥G H
id_estado_actual
¥¥H X
)
¥¥X Y
)
¥¥Y Z
{
µµ 
throw
∂∂ 
new
∂∂ 
LogicaException
∂∂ -
(
∂∂- .
$str
∂∂. Y
)
∂∂Y Z
;
∂∂Z [
}
∑∑ 
var
∏∏ ,
estadoActualAtencionHabitacion
∏∏ 2
=
∏∏3 4
new
∏∏5 8!
EstadoAtencionHotel
∏∏9 L
(
∏∏L M
)
∏∏M N
;
∏∏N O
var
ππ 
eventoFacturado
ππ #
=
ππ$ %!
_maestroRepositorio
ππ& 9
.
ππ9 :
ObtenerDetalle
ππ: H
(
ππH I
MaestroSettings
ππI X
.
ππX Y
Default
ππY `
.
ππ` a.
IdDetalleMaestroEstadoFacturadoππa Ä
)ππÄ Å
;ππÅ Ç
if
∫∫ 
(
∫∫ 
!
∫∫ 
atencion
∫∫ 
.
∫∫ 
TieneFacturacion
∫∫ .
)
∫∫. /
{
ªª ,
estadoActualAtencionHabitacion
ºº 2
.
ºº2 3

IdAuxiliar
ºº3 =
=
ºº> ? 
atencionHabitacion
ºº@ R
.
ººR S
id
ººS U
;
ººU V,
estadoActualAtencionHabitacion
ΩΩ 2
.
ΩΩ2 3
Estados
ΩΩ3 :
=
ΩΩ; <
new
ΩΩ= @
List
ΩΩA E
<
ΩΩE F

ItemEstado
ΩΩF P
>
ΩΩP Q
(
ΩΩQ R
)
ΩΩR S
{
ΩΩT U
new
ΩΩV Y

ItemEstado
ΩΩZ d
(
ΩΩd e 
atencionHabitacion
ΩΩe w
.
ΩΩw x!
Estado_transaccionΩΩx ä
.ΩΩä ã
LastΩΩã è
(ΩΩè ê
)ΩΩê ë
)ΩΩë í
}ΩΩì î
;ΩΩî ï
var
ææ 
eventoTransaccion
ææ )
=
ææ* +
new
ææ, / 
Evento_transaccion
ææ0 B
(
ææB C 
atencionHabitacion
ææC U
.
ææU V
id
ææV X
,
ææX Y
sesionUsuario
ææZ g
.
ææg h
Empleado
ææh p
.
ææp q
Id
ææq s
,
ææs t
MaestroSettingsææu Ñ
.ææÑ Ö
DefaultææÖ å
.ææå ç/
IdDetalleMaestroEstadoFacturadoææç ¨
,ææ¨ ≠
fechaActualææÆ π
,ææπ ∫
$strææª ƒ
)ææƒ ≈
;ææ≈ ∆ 
atencionHabitacion
øø &
.
øø& ' 
Evento_transaccion
øø' 9
.
øø9 :
Add
øø: =
(
øø= >
eventoTransaccion
øø> O
)
øøO P
;
øøP Q 
atencionHabitacion
¿¿ &
.
¿¿& '
enum1
¿¿' ,
=
¿¿- .
(
¿¿/ 0
int
¿¿0 3
)
¿¿3 4"
ModoFacturacionHotel
¿¿4 H
.
¿¿H I

Individual
¿¿I S
;
¿¿S T
atencionHotel
¡¡ !
.
¡¡! "
enum1
¡¡" '
=
¡¡( )
(
¡¡* +
int
¡¡+ .
)
¡¡. /"
ModoFacturacionHotel
¡¡/ C
.
¡¡C D

Individual
¡¡D N
;
¡¡N O,
estadoActualAtencionHabitacion
¬¬ 2
.
¬¬2 3
Estados
¬¬3 :
.
¬¬: ;
Add
¬¬; >
(
¬¬> ?
new
¬¬? B

ItemEstado
¬¬C M
(
¬¬M N
new
¬¬N Q 
Evento_transaccion
¬¬R d
(
¬¬d e 
atencionHabitacion
¬¬e w
.
¬¬w x
id
¬¬x z
,
¬¬z {
sesionUsuario¬¬| â
.¬¬â ä
Empleado¬¬ä í
.¬¬í ì
Id¬¬ì ï
,¬¬ï ñ
MaestroSettings¬¬ó ¶
.¬¬¶ ß
Default¬¬ß Æ
.¬¬Æ Ø/
IdDetalleMaestroEstadoFacturado¬¬Ø Œ
,¬¬Œ œ
fechaActual¬¬– €
,¬¬€ ‹
$str¬¬› Ê
)¬¬Ê Á
{¬¬Ë È
Detalle_maestro¬¬Í ˘
=¬¬˙ ˚
eventoFacturado¬¬¸ ã
}¬¬å ç
)¬¬ç é
)¬¬é è
;¬¬è ê
}
√√ 
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
consumoHabitacion
ƒƒ .
in
ƒƒ/ 1+
consumosPendientesFacturacion
ƒƒ2 O
.
ƒƒO P
Where
ƒƒP U
(
ƒƒU V
ch
ƒƒV X
=>
ƒƒY [
ch
ƒƒ\ ^
.
ƒƒ^ _'
id_transaccion_referencia
ƒƒ_ x
==
ƒƒy {!
atencionHabitacionƒƒ| é
.ƒƒé è
idƒƒè ë
)ƒƒë í
)ƒƒí ì
{
≈≈ 
consumoHabitacion
∆∆ %
.
∆∆% & 
Evento_transaccion
∆∆& 8
.
∆∆8 9
Add
∆∆9 <
(
∆∆< =
new
∆∆= @ 
Evento_transaccion
∆∆A S
(
∆∆S T
consumoHabitacion
∆∆T e
.
∆∆e f
id
∆∆f h
,
∆∆h i
sesionUsuario
∆∆j w
.
∆∆w x
Empleado∆∆x Ä
.∆∆Ä Å
Id∆∆Å É
,∆∆É Ñ
MaestroSettings∆∆Ö î
.∆∆î ï
Default∆∆ï ú
.∆∆ú ù/
IdDetalleMaestroEstadoFacturado∆∆ù º
,∆∆º Ω
fechaActual∆∆æ …
,∆∆…  
$str∆∆À ‘
)∆∆‘ ’
)∆∆’ ÷
;∆∆÷ ◊
consumoHabitacion
«« %
.
««% &

indicador1
««& 0
=
««1 2
true
««3 7
;
««7 8 
atencionHabitacion
»» &
.
»»& '
Transaccion11
»»' 4
.
»»4 5
Add
»»5 8
(
»»8 9
consumoHabitacion
»»9 J
)
»»J K
;
»»K L
}
……  
atencionHabitacion
   "
.
  " #

indicador1
  # -
=
  . /
true
  0 4
;
  4 5 
atencionHabitacion
ÀÀ "
.
ÀÀ" #

indicador2
ÀÀ# -
=
ÀÀ. /
true
ÀÀ0 4
;
ÀÀ4 5 
atencionHabitacion
ÃÃ "
.
ÃÃ" #
Transaccion2
ÃÃ# /
=
ÃÃ0 1
atencionHotel
ÃÃ2 ?
;
ÃÃ? @
if
ÕÕ 
(
ÕÕ 
!
ÕÕ 
atencion
ÕÕ 
.
ÕÕ 
TieneFacturacion
ÕÕ .
)
ÕÕ. /
if
ŒŒ 
(
ŒŒ 
atencion
ŒŒ  
.
ŒŒ  !
Ordenes
ŒŒ! (
==
ŒŒ) +
null
ŒŒ, 0
)
ŒŒ0 1
atencion
ŒŒ2 :
.
ŒŒ: ;
Ordenes
ŒŒ; B
=
ŒŒC D
new
ŒŒE H
List
ŒŒI M
<
ŒŒM N
OrdenAtencion
ŒŒN [
>
ŒŒ[ \
(
ŒŒ\ ]
)
ŒŒ] ^
{
ŒŒ_ `
atencion
ŒŒa i
.
ŒŒi j
OrdenPrincipal
ŒŒj x
}
ŒŒy z
;
ŒŒz {
else
œœ 
atencion
œœ !
.
œœ! "
Ordenes
œœ" )
.
œœ) *
ToList
œœ* 0
(
œœ0 1
)
œœ1 2
.
œœ2 3
Add
œœ3 6
(
œœ6 7
atencion
œœ7 ?
.
œœ? @
OrdenPrincipal
œœ@ N
)
œœN O
;
œœO P
switch
–– 
(
–– 
atencion
––  
.
––  !

TipoDePago
––! +
)
––+ ,
{
—— 
case
““ 
(
““ 
int
““ 
)
““ 
TipoPagoAtencion
““ .
.
““. /
General
““/ 6
:
““6 7
	resultado
”” !
=
””" #0
"ResolverFacturacionTipoPagoGeneral
””$ F
(
””F G
atencion
””G O
,
””O P
sesionUsuario
””Q ^
,
””^ _ 
atencionHabitacion
””` r
)
””r s
;
””s t
break
””u z
;
””z {
case
‘‘ 
(
‘‘ 
int
‘‘ 
)
‘‘ 
TipoPagoAtencion
‘‘ .
.
‘‘. /
Diferenciado
‘‘/ ;
:
‘‘; <
	resultado
’’ !
=
’’" #5
'ResolverFacturacionTipoPagoDiferenciado
’’$ K
(
’’K L
atencion
’’L T
,
’’T U
sesionUsuario
’’V c
,
’’c d 
atencionHabitacion
’’e w
)
’’w x
;
’’x y
break
’’z 
;’’ Ä
}
÷÷ ,
estadoActualAtencionHabitacion
◊◊ .
.
◊◊. /
	Facturado
◊◊/ 8
=
◊◊9 :
true
◊◊; ?
;
◊◊? @,
estadoActualAtencionHabitacion
ÿÿ .
.
ÿÿ. /
FacturadoGlobal
ÿÿ/ >
=
ÿÿ? @
false
ÿÿA F
;
ÿÿF G,
estadoActualAtencionHabitacion
ŸŸ .
.
ŸŸ. /
TieneFacturacion
ŸŸ/ ?
=
ŸŸ@ A
true
ŸŸB F
;
ŸŸF G
	resultado
⁄⁄ 
.
⁄⁄ 
information
⁄⁄ %
=
⁄⁄& ',
estadoActualAtencionHabitacion
⁄⁄( F
;
⁄⁄F G
return
€€ 
	resultado
€€  
;
€€  !
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› 
e
›› 
)
›› 
{
ﬁﬁ 
throw
ﬂﬂ 
new
ﬂﬂ 
LogicaException
ﬂﬂ )
(
ﬂﬂ) *
$str
ﬂﬂ* R
,
ﬂﬂR S
e
ﬂﬂT U
)
ﬂﬂU V
;
ﬂﬂV W
}
‡‡ 
}
·· 	
public
‚‚ 
OperationResult
‚‚ 0
"ResolverFacturacionTipoPagoGeneral
‚‚ A
(
‚‚A B
Atencion
‚‚B J
atencion
‚‚K S
,
‚‚S T$
UserProfileSessionData
‚‚U k
sesionUsuario
‚‚l y
,
‚‚y z
Transaccion‚‚{ Ü#
transaccionAtencion‚‚á ö
)‚‚ö õ
{
„„ 	
if
‰‰ 
(
‰‰ 
atencion
‰‰ 
.
‰‰ 
Importe
‰‰  
!=
‰‰! #
atencion
‰‰$ ,
.
‰‰, - 
NuevosComprobantes
‰‰- ?
.
‰‰? @
Sum
‰‰@ C
(
‰‰C D
c
‰‰D E
=>
‰‰F H
c
‰‰I J
.
‰‰J K
Orden
‰‰K P
.
‰‰P Q
Total
‰‰Q V
)
‰‰V W
)
‰‰W X
throw
ÂÂ 
new
ÂÂ 
LogicaException
ÂÂ )
(
ÂÂ) *
$strÂÂ* Æ
)ÂÂÆ Ø
;ÂÂØ ∞
var
ÊÊ 
datosVentas
ÊÊ 
=
ÊÊ 
atencion
ÊÊ &
.
ÊÊ& ' 
NuevosComprobantes
ÊÊ' 9
;
ÊÊ9 :
if
ÁÁ 
(
ÁÁ 
HotelSettings
ÁÁ 
.
ÁÁ 
Default
ÁÁ %
.
ÁÁ% &5
'MostrarInformacionHabitacionComprobante
ÁÁ& M
)
ÁÁM N
{
ËË 
if
ÈÈ 
(
ÈÈ 
datosVentas
ÈÈ 
.
ÈÈ  
Count
ÈÈ  %
==
ÈÈ& (
$num
ÈÈ) *
)
ÈÈ* +
datosVentas
ÍÍ 
.
ÍÍ  
First
ÍÍ  %
(
ÍÍ% &
)
ÍÍ& '
.
ÍÍ' (
Orden
ÍÍ( -
.
ÍÍ- .
Informacion
ÍÍ. 9
=
ÍÍ: ;(
ObtenerInformacionAtencion
ÍÍ< V
(
ÍÍV W
atencion
ÍÍW _
)
ÍÍ_ `
;
ÍÍ` a
else
ÎÎ 
datosVentas
ÏÏ 
.
ÏÏ  
ForEach
ÏÏ  '
(
ÏÏ' (
v
ÏÏ( )
=>
ÏÏ* ,
v
ÏÏ- .
.
ÏÏ. /
Orden
ÏÏ/ 4
.
ÏÏ4 5
Informacion
ÏÏ5 @
=
ÏÏA B:
,ObtenerInformacionAtencionVariosComprobantes
ÏÏC o
(
ÏÏo p
atencion
ÏÏp x
)
ÏÏx y
)
ÏÏy z
;
ÏÏz {
}
ÌÌ 
if
ÓÓ 
(
ÓÓ 
datosVentas
ÓÓ 
.
ÓÓ 
Count
ÓÓ !
>
ÓÓ" #
$num
ÓÓ$ %
)
ÓÓ% &
datosVentas
ÓÓ' 2
.
ÓÓ2 3
ForEach
ÓÓ3 :
(
ÓÓ: ;
v
ÓÓ; <
=>
ÓÓ= ?
v
ÓÓ@ A
.
ÓÓA B
Orden
ÓÓB G
.
ÓÓG H
UnificarDetalles
ÓÓH X
=
ÓÓY Z
true
ÓÓ[ _
)
ÓÓ_ `
;
ÓÓ` a
datosVentas
ÔÔ 
.
ÔÔ 
ForEach
ÔÔ 
(
ÔÔ  
v
ÔÔ  !
=>
ÔÔ" $
v
ÔÔ% &
.
ÔÔ& '
TransaccionOrigen
ÔÔ' 8
=
ÔÔ9 :!
transaccionAtencion
ÔÔ; N
)
ÔÔN O
;
ÔÔO P
datosVentas
 
.
 
ForEach
 
(
  
v
  !
=>
" $,
CompletarDatosGeneralesDeVenta
% C
(
C D
v
D E
,
E F
sesionUsuario
G T
)
T U
)
U V
;
V W
datosVentas
ÒÒ 
.
ÒÒ 
ForEach
ÒÒ 
(
ÒÒ  
v
ÒÒ  !
=>
ÒÒ" $
v
ÒÒ% &
.
ÒÒ& '
Orden
ÒÒ' ,
.
ÒÒ, -
Detalles
ÒÒ- 5
=
ÒÒ6 7(
GenerarDetallesDeOperacion
ÒÒ8 R
(
ÒÒR S
atencion
ÒÒS [
,
ÒÒ[ \
v
ÒÒ] ^
.
ÒÒ^ _
Orden
ÒÒ_ d
.
ÒÒd e
Total
ÒÒe j
)
ÒÒj k
)
ÒÒk l
;
ÒÒl m@
2RecalcularCantidadEImporteTipoPagoDivididoPorMonto
ÚÚ >
(
ÚÚ> ?
atencion
ÚÚ? G
,
ÚÚG H
datosVentas
ÚÚI T
)
ÚÚT U
;
ÚÚU V
OperationResult
ÛÛ 
	resultado
ÛÛ %
=
ÛÛ& '
_logicaOperacion
ÛÛ( 8
.
ÛÛ8 9'
ConfirmarVentasIntegradas
ÛÛ9 R
(
ÛÛR S
ModoOperacionEnum
ÛÛS d
.
ÛÛd e
PorMostrador
ÛÛe q
,
ÛÛq r
sesionUsuarioÛÛs Ä
,ÛÛÄ Å
datosVentasÛÛÇ ç
)ÛÛç é
;ÛÛé è
return
ÙÙ 
	resultado
ÙÙ 
;
ÙÙ 
}
ıı 	
private
˜˜ 
string
˜˜ (
ObtenerInformacionAtencion
˜˜ 1
(
˜˜1 2
Atencion
˜˜2 :
atencion
˜˜; C
)
˜˜C D
{
¯¯ 	
var
˘˘ 
informacion
˘˘ 
=
˘˘ 
$str
˘˘  
;
˘˘  !
var
˙˙ 
detallesDeOrden
˙˙ 
=
˙˙  !
atencion
˙˙" *
.
˙˙* +
Ordenes
˙˙+ 2
.
˙˙2 3
Where
˙˙3 8
(
˙˙8 9
o
˙˙9 :
=>
˙˙; =
!
˙˙> ?
o
˙˙? @
.
˙˙@ A
TieneFacturacion
˙˙A Q
)
˙˙Q R
.
˙˙R S

SelectMany
˙˙S ]
(
˙˙] ^
o
˙˙^ _
=>
˙˙` b
o
˙˙c d
.
˙˙d e
Detalles
˙˙e m
)
˙˙m n
.
˙˙n o
Where
˙˙o t
(
˙˙t u
d
˙˙u v
=>
˙˙w y
d
˙˙z {
.
˙˙{ |
	IdFamilia˙˙| Ö
==˙˙Ü à
HotelSettings˙˙â ñ
.˙˙ñ ó
Default˙˙ó û
.˙˙û ü1
!IdDetalleMaestroFamiliaHabitacion˙˙ü ¿
)˙˙¿ ¡
.˙˙¡ ¬
ToList˙˙¬ »
(˙˙» …
)˙˙…  
;˙˙  À
if
˚˚ 
(
˚˚ 
detallesDeOrden
˚˚ 
.
˚˚  
Count
˚˚  %
(
˚˚% &
)
˚˚& '
>
˚˚( )
$num
˚˚* +
)
˚˚+ ,
{
¸¸ 
var
˝˝ !
idAtencionDistintos
˝˝ '
=
˝˝( )
detallesDeOrden
˝˝* 9
.
˝˝9 :
Select
˝˝: @
(
˝˝@ A
d
˝˝A B
=>
˝˝C E
d
˝˝F G
.
˝˝G H
Id
˝˝H J
)
˝˝J K
.
˝˝K L
Distinct
˝˝L T
(
˝˝T U
)
˝˝U V
;
˝˝V W
foreach
˛˛ 
(
˛˛ 
var
˛˛ 

idAtencion
˛˛ '
in
˛˛( *!
idAtencionDistintos
˛˛+ >
)
˛˛> ?
{
ˇˇ 
var
ÄÄ 
detallesAtencion
ÄÄ (
=
ÄÄ) *
detallesDeOrden
ÄÄ+ :
.
ÄÄ: ;
Where
ÄÄ; @
(
ÄÄ@ A
h
ÄÄA B
=>
ÄÄC E
h
ÄÄF G
.
ÄÄG H
Id
ÄÄH J
==
ÄÄK M

idAtencion
ÄÄN X
)
ÄÄX Y
.
ÄÄY Z
ToList
ÄÄZ `
(
ÄÄ` a
)
ÄÄa b
;
ÄÄb c
var
ÅÅ 
found
ÅÅ 
=
ÅÅ 
detallesAtencion
ÅÅ  0
.
ÅÅ0 1
First
ÅÅ1 6
(
ÅÅ6 7
)
ÅÅ7 8
.
ÅÅ8 9
NombreConcepto
ÅÅ9 G
.
ÅÅG H
LastIndexOf
ÅÅH S
(
ÅÅS T
$str
ÅÅT Y
)
ÅÅY Z
;
ÅÅZ [
informacion
ÇÇ 
+=
ÇÇ  "
detallesAtencion
ÇÇ# 3
.
ÇÇ3 4
Count
ÇÇ4 9
(
ÇÇ9 :
)
ÇÇ: ;
.
ÇÇ; <
ToString
ÇÇ< D
(
ÇÇD E
)
ÇÇE F
+
ÇÇG H
$str
ÇÇI M
+
ÇÇN O
detallesAtencion
ÇÇP `
.
ÇÇ` a
First
ÇÇa f
(
ÇÇf g
)
ÇÇg h
.
ÇÇh i
NombreConcepto
ÇÇi w
.
ÇÇw x
	SubstringÇÇx Å
(ÇÇÅ Ç
foundÇÇÇ á
+ÇÇà â
$numÇÇä ã
)ÇÇã å
+ÇÇç é
$strÇÇè ì
;ÇÇì î
}
ÉÉ 
informacion
ÑÑ 
=
ÑÑ 
informacion
ÑÑ )
.
ÑÑ) *
	Substring
ÑÑ* 3
(
ÑÑ3 4
$num
ÑÑ4 5
,
ÑÑ5 6
informacion
ÑÑ7 B
.
ÑÑB C
Length
ÑÑC I
-
ÑÑJ K
$num
ÑÑL M
)
ÑÑM N
;
ÑÑN O
}
ÖÖ 
return
ÜÜ 
informacion
ÜÜ 
;
ÜÜ 
}
áá 	
private
àà 
string
àà :
,ObtenerInformacionAtencionVariosComprobantes
àà C
(
ààC D
Atencion
ààD L
atencion
ààM U
)
ààU V
{
ââ 	
var
ää 
informacion
ää 
=
ää 
$str
ää  
;
ää  !
var
ãã 
homogeneidad
ãã 
=
ãã 
true
ãã #
;
ãã# $
var
åå 
detallesDeOrden
åå 
=
åå  !
atencion
åå" *
.
åå* +
Ordenes
åå+ 2
.
åå2 3
Where
åå3 8
(
åå8 9
o
åå9 :
=>
åå; =
!
åå> ?
o
åå? @
.
åå@ A
TieneFacturacion
ååA Q
)
ååQ R
.
ååR S

SelectMany
ååS ]
(
åå] ^
o
åå^ _
=>
åå` b
o
ååc d
.
ååd e
Detalles
ååe m
)
ååm n
.
åån o
Where
ååo t
(
ååt u
d
ååu v
=>
ååw y
d
ååz {
.
åå{ |
	IdFamiliaåå| Ö
==ååÜ à
HotelSettingsååâ ñ
.ååñ ó
Defaultååó û
.ååû ü1
!IdDetalleMaestroFamiliaHabitacionååü ¿
)åå¿ ¡
.åå¡ ¬
ToListåå¬ »
(åå» …
)åå…  
;åå  À
if
çç 
(
çç 
detallesDeOrden
çç 
.
çç  
Count
çç  %
(
çç% &
)
çç& '
>
çç( )
$num
çç* +
)
çç+ ,
{
éé 
var
èè 
detallesAgrupados
èè %
=
èè& '
detallesDeOrden
èè( 7
.
èè7 8
GroupBy
èè8 ?
(
èè? @
d
èè@ A
=>
èèB D
d
èèE F
.
èèF G
Id
èèG I
)
èèI J
;
èèJ K
var
êê 
numeroNoches
êê  
=
êê! "
detallesAgrupados
êê# 4
.
êê4 5
First
êê5 :
(
êê: ;
)
êê; <
.
êê< =
Count
êê= B
(
êêB C
)
êêC D
;
êêD E
foreach
ëë 
(
ëë 
var
ëë 
detalles
ëë %
in
ëë& (
detallesAgrupados
ëë) :
)
ëë: ;
{
íí 
homogeneidad
ìì  
=
ìì! "
homogeneidad
ìì# /
&&
ìì0 2
numeroNoches
ìì3 ?
==
ìì@ B
detalles
ììC K
.
ììK L
Count
ììL Q
(
ììQ R
)
ììR S
;
ììS T
}
îî 
informacion
ïï 
=
ïï 
homogeneidad
ïï *
?
ïï+ ,
numeroNoches
ïï- 9
.
ïï9 :
ToString
ïï: B
(
ïïB C
)
ïïC D
+
ïïE F
(
ïïG H
numeroNoches
ïïH T
==
ïïU W
$num
ïïX Y
?
ïïZ [
$str
ïï\ d
:
ïïe f
$str
ïïg p
)
ïïp q
:
ïïr s
$str
ïït v
;
ïïv w
}
ññ 
return
óó 
informacion
óó 
;
óó 
}
òò 	
private
öö 
List
öö 
<
öö  
DetalleDeOperacion
öö '
>
öö' ((
GenerarDetallesDeOperacion
öö) C
(
ööC D
Atencion
ööD L
atencion
ööM U
,
ööU V
decimal
ööW ^
importeParcial
öö_ m
)
ööm n
{
õõ 	
try
úú 
{
ùù 
var
ûû 
detallesOperacion
ûû %
=
ûû& '
new
ûû( +
List
ûû, 0
<
ûû0 1 
DetalleDeOperacion
ûû1 C
>
ûûC D
(
ûûD E
)
ûûE F
;
ûûF G
var
üü $
detallesVentaAgrupados
üü *
=
üü+ ,(
GenerarDetallesDeOperacion
üü- G
(
üüG H
atencion
üüH P
)
üüP Q
;
üüQ R
var
†† 
porcentageDelPago
†† %
=
††& '
importeParcial
††( 6
/
††7 8
atencion
††9 A
.
††A B
Importe
††B I
;
††I J
foreach
°° 
(
°° 
var
°° 
detalle
°° $
in
°°% '$
detallesVentaAgrupados
°°( >
)
°°> ?
{
¢¢ 
detallesOperacion
££ %
.
££% &
Add
££& )
(
££) *
new
££* - 
DetalleDeOperacion
££. @
(
££@ A
)
££A B
{
§§ 
Producto
••  
=
••! "
new
••# &(
Concepto_Negocio_Comercial
••' A
{
••B C
Id
••D F
=
••G H
detalle
••I P
.
••P Q
Producto
••Q Y
.
••Y Z
Id
••Z \
}
••] ^
,
••^ _
Cantidad
¶¶  
=
¶¶! "
detalle
¶¶# *
.
¶¶* +
Cantidad
¶¶+ 3
*
¶¶4 5
porcentageDelPago
¶¶6 G
,
¶¶G H
PrecioUnitario
ßß &
=
ßß' (
detalle
ßß) 0
.
ßß0 1
PrecioUnitario
ßß1 ?
,
ßß? @
Importe
®® 
=
®®  !
Math
®®" &
.
®®& '
Round
®®' ,
(
®®, -
detalle
®®- 4
.
®®4 5
Importe
®®5 <
*
®®= >
porcentageDelPago
®®? P
,
®®P Q
$num
®®R S
)
®®S T
,
®®T U
MascaraDeCalculo
©© (
=
©©) *
VentasSettings
©©+ 9
.
©©9 :
Default
©©: A
.
©©A B4
&MascaraDeCalculoDeNingunValorCalculado
©©B h
}
™™ 
)
™™ 
;
™™ 
}
´´ 
return
¨¨ 
detallesOperacion
¨¨ (
;
¨¨( )
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ØØ 
throw
∞∞ 
new
∞∞ 
LogicaException
∞∞ )
(
∞∞) *
$str
∞∞* ^
,
∞∞^ _
e
∞∞` a
)
∞∞a b
;
∞∞b c
}
±± 
}
≤≤ 	
private
≥≥ 
List
≥≥ 
<
≥≥  
DetalleDeOperacion
≥≥ '
>
≥≥' ((
GenerarDetallesDeOperacion
≥≥) C
(
≥≥C D
Atencion
≥≥D L
atencion
≥≥M U
)
≥≥U V
{
¥¥ 	
try
µµ 
{
∂∂ 
var
∑∑ 
detallesOperacion
∑∑ %
=
∑∑& '
new
∑∑( +
List
∑∑, 0
<
∑∑0 1 
DetalleDeOperacion
∑∑1 C
>
∑∑C D
(
∑∑D E
)
∑∑E F
;
∑∑F G
var
∏∏ 
detallesAgrupados
∏∏ %
=
∏∏& '
atencion
∏∏( 0
.
∏∏0 1
Ordenes
∏∏1 8
.
∏∏8 9
Where
∏∏9 >
(
∏∏> ?
o
∏∏? @
=>
∏∏A C
!
∏∏D E
o
∏∏E F
.
∏∏F G
TieneFacturacion
∏∏G W
)
∏∏W X
.
∏∏X Y

SelectMany
∏∏Y c
(
∏∏c d
o
∏∏d e
=>
∏∏f h
o
∏∏i j
.
∏∏j k
Detalles
∏∏k s
)
∏∏s t
.
∏∏t u
GroupBy
∏∏u |
(
∏∏| }
d
∏∏} ~
=>∏∏ Å
new∏∏Ç Ö
{∏∏Ü á
d∏∏à â
.∏∏â ä

IdConcepto∏∏ä î
,∏∏î ï
d∏∏ñ ó
.∏∏ó ò
PrecioUnitario∏∏ò ¶
}∏∏ß ®
)∏∏® ©
;∏∏© ™
foreach
ππ 
(
ππ 
var
ππ 
grupo
ππ "
in
ππ# %
detallesAgrupados
ππ& 7
)
ππ7 8
{
∫∫ 
detallesOperacion
ªª %
.
ªª% &
Add
ªª& )
(
ªª) *
new
ªª* - 
DetalleDeOperacion
ªª. @
(
ªª@ A
)
ªªA B
{
ºº 
Producto
ΩΩ  
=
ΩΩ! "
new
ΩΩ# &(
Concepto_Negocio_Comercial
ΩΩ' A
{
ΩΩB C
Id
ΩΩD F
=
ΩΩG H
grupo
ΩΩI N
.
ΩΩN O
Key
ΩΩO R
.
ΩΩR S

IdConcepto
ΩΩS ]
}
ΩΩ^ _
,
ΩΩ_ `
Cantidad
ææ  
=
ææ! "
grupo
ææ# (
.
ææ( )
Sum
ææ) ,
(
ææ, -
g
ææ- .
=>
ææ/ 1
g
ææ2 3
.
ææ3 4
Cantidad
ææ4 <
)
ææ< =
,
ææ= >
PrecioUnitario
øø &
=
øø' (
grupo
øø) .
.
øø. /
Key
øø/ 2
.
øø2 3
PrecioUnitario
øø3 A
,
øøA B
Importe
¿¿ 
=
¿¿  !
grupo
¿¿" '
.
¿¿' (
Sum
¿¿( +
(
¿¿+ ,
g
¿¿, -
=>
¿¿. 0
g
¿¿1 2
.
¿¿2 3
Importe
¿¿3 :
)
¿¿: ;
,
¿¿; <
MascaraDeCalculo
¡¡ (
=
¡¡) *
VentasSettings
¡¡+ 9
.
¡¡9 :
Default
¡¡: A
.
¡¡A B/
!MascaraDeCalculoCantidadCalculada
¡¡B c
}
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 
return
ƒƒ 
detallesOperacion
ƒƒ (
;
ƒƒ( )
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* b
,
»»b c
e
»»d e
)
»»e f
;
»»f g
}
…… 
}
   	
public
ÀÀ 
OperationResult
ÀÀ 5
'ResolverFacturacionTipoPagoDiferenciado
ÀÀ F
(
ÀÀF G
Atencion
ÀÀG O
atencion
ÀÀP X
,
ÀÀX Y$
UserProfileSessionData
ÀÀZ p
sesionUsuario
ÀÀq ~
,
ÀÀ~ 
TransaccionÀÀÄ ã#
transaccionAtencionÀÀå ü
)ÀÀü †
{
ÃÃ 	
var
ÕÕ 
datosVentas
ÕÕ 
=
ÕÕ 
atencion
ÕÕ &
.
ÕÕ& ' 
NuevosComprobantes
ÕÕ' 9
;
ÕÕ9 :
var
ŒŒ 
detallesDeOrden
ŒŒ 
=
ŒŒ  !
atencion
ŒŒ" *
.
ŒŒ* +
Ordenes
ŒŒ+ 2
.
ŒŒ2 3
Where
ŒŒ3 8
(
ŒŒ8 9
o
ŒŒ9 :
=>
ŒŒ; =
!
ŒŒ> ?
o
ŒŒ? @
.
ŒŒ@ A
TieneFacturacion
ŒŒA Q
)
ŒŒQ R
.
ŒŒR S

SelectMany
ŒŒS ]
(
ŒŒ] ^
o
ŒŒ^ _
=>
ŒŒ` b
o
ŒŒc d
.
ŒŒd e
Detalles
ŒŒe m
)
ŒŒm n
.
ŒŒn o
ToList
ŒŒo u
(
ŒŒu v
)
ŒŒv w
;
ŒŒw x
foreach
œœ 
(
œœ 
var
œœ 
	datoVenta
œœ "
in
œœ# %
datosVentas
œœ& 1
)
œœ1 2
{
–– 
	datoVenta
—— 
.
—— 
Orden
—— 
.
——  
Detalles
——  (
=
——) *4
&ConvertirDetalleOrdenADetalleOperacion
——+ Q
(
——Q R
detallesDeOrden
——R a
,
——a b
	datoVenta
——c l
.
——l m
Orden
——m r
.
——r s
Detalles
——s {
.
——{ |
Select——| Ç
(——Ç É
d——É Ñ
=>——Ö á
d——à â
.——â ä
Id——ä å
)——å ç
.——ç é
ToList——é î
(——î ï
)——ï ñ
)——ñ ó
;——ó ò
}
““ 
if
”” 
(
”” 
HotelSettings
”” 
.
”” 
Default
”” %
.
””% &5
'MostrarInformacionHabitacionComprobante
””& M
)
””M N
{
‘‘ 
datosVentas
’’ 
.
’’ 
ForEach
’’ #
(
’’# $
v
’’$ %
=>
’’& (
v
’’) *
.
’’* +
Orden
’’+ 0
.
’’0 1
Informacion
’’1 <
=
’’= >4
&ObtenerInformacionAtencionDiferenciado
’’? e
(
’’e f
atencion
’’f n
,
’’n o
v
’’p q
)
’’q r
)
’’r s
;
’’s t
}
÷÷ 
datosVentas
◊◊ 
.
◊◊ 
ForEach
◊◊ 
(
◊◊  
v
◊◊  !
=>
◊◊" $
v
◊◊% &
.
◊◊& '
TransaccionOrigen
◊◊' 8
=
◊◊9 :!
transaccionAtencion
◊◊; N
)
◊◊N O
;
◊◊O P
datosVentas
ÿÿ 
.
ÿÿ 
ForEach
ÿÿ 
(
ÿÿ  
v
ÿÿ  !
=>
ÿÿ" $,
CompletarDatosGeneralesDeVenta
ÿÿ% C
(
ÿÿC D
v
ÿÿD E
,
ÿÿE F
sesionUsuario
ÿÿG T
)
ÿÿT U
)
ÿÿU V
;
ÿÿV W
datosVentas
ŸŸ 
.
ŸŸ 
ForEach
ŸŸ 
(
ŸŸ  
v
ŸŸ  !
=>
ŸŸ" $$
AgruparDetallesDeVenta
ŸŸ% ;
(
ŸŸ; <
v
ŸŸ< =
)
ŸŸ= >
)
ŸŸ> ?
;
ŸŸ? @
var
⁄⁄ 
	resultado
⁄⁄ 
=
⁄⁄ 
_logicaOperacion
⁄⁄ ,
.
⁄⁄, -'
ConfirmarVentasIntegradas
⁄⁄- F
(
⁄⁄F G
ModoOperacionEnum
⁄⁄G X
.
⁄⁄X Y
PorMostrador
⁄⁄Y e
,
⁄⁄e f
sesionUsuario
⁄⁄g t
,
⁄⁄t u
datosVentas⁄⁄v Å
)⁄⁄Å Ç
;⁄⁄Ç É
return
€€ 
	resultado
€€ 
;
€€ 
}
‹‹ 	
private
›› 
string
›› 4
&ObtenerInformacionAtencionDiferenciado
›› =
(
››= >
Atencion
››> F
atencion
››G O
,
››O P!
DatosVentaIntegrada
››Q d
venta
››e j
)
››j k
{
ﬁﬁ 	
var
ﬂﬂ 
informacion
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ  
;
ﬂﬂ  !
List
‡‡ 
<
‡‡ "
DetalleOrdenAtencion
‡‡ %
>
‡‡% &#
todosDetallesAtencion
‡‡' <
=
‡‡= >
new
‡‡? B
List
‡‡C G
<
‡‡G H"
DetalleOrdenAtencion
‡‡H \
>
‡‡\ ]
(
‡‡] ^
)
‡‡^ _
;
‡‡_ `
var
·· !
detallesPorFacturar
·· #
=
··$ %
atencion
··& .
.
··. /
Ordenes
··/ 6
.
··6 7
Where
··7 <
(
··< =
o
··= >
=>
··? A
!
··B C
o
··C D
.
··D E
TieneFacturacion
··E U
)
··U V
.
··V W

SelectMany
··W a
(
··a b
o
··b c
=>
··d f
o
··g h
.
··h i
Detalles
··i q
)
··q r
.
··r s
ToList
··s y
(
··y z
)
··z {
;
··{ |
foreach
‚‚ 
(
‚‚ 
var
‚‚ 
detalle
‚‚  
in
‚‚! #
venta
‚‚$ )
.
‚‚) *
Orden
‚‚* /
.
‚‚/ 0
Detalles
‚‚0 8
)
‚‚8 9
{
„„ #
todosDetallesAtencion
‰‰ %
.
‰‰% &
Add
‰‰& )
(
‰‰) *!
detallesPorFacturar
‰‰* =
.
‰‰= >
First
‰‰> C
(
‰‰C D
d
‰‰D E
=>
‰‰F H
d
‰‰I J
.
‰‰J K
Id
‰‰K M
==
‰‰N P
detalle
‰‰Q X
.
‰‰X Y
Id
‰‰Y [
)
‰‰[ \
)
‰‰\ ]
;
‰‰] ^
}
ÂÂ 
var
ÊÊ 
detallesDeOrden
ÊÊ 
=
ÊÊ  !#
todosDetallesAtencion
ÊÊ" 7
.
ÊÊ7 8
Where
ÊÊ8 =
(
ÊÊ= >
d
ÊÊ> ?
=>
ÊÊ@ B
d
ÊÊC D
.
ÊÊD E
	IdFamilia
ÊÊE N
==
ÊÊO Q
HotelSettings
ÊÊR _
.
ÊÊ_ `
Default
ÊÊ` g
.
ÊÊg h0
!IdDetalleMaestroFamiliaHabitacionÊÊh â
)ÊÊâ ä
.ÊÊä ã
ToListÊÊã ë
(ÊÊë í
)ÊÊí ì
;ÊÊì î
if
ÁÁ 
(
ÁÁ 
detallesDeOrden
ÁÁ 
.
ÁÁ  
Count
ÁÁ  %
(
ÁÁ% &
)
ÁÁ& '
>
ÁÁ( )
$num
ÁÁ* +
)
ÁÁ+ ,
{
ËË 
var
ÈÈ !
idAtencionDistintos
ÈÈ '
=
ÈÈ( )
detallesDeOrden
ÈÈ* 9
.
ÈÈ9 :
Select
ÈÈ: @
(
ÈÈ@ A
d
ÈÈA B
=>
ÈÈC E
d
ÈÈF G
.
ÈÈG H
Id
ÈÈH J
)
ÈÈJ K
.
ÈÈK L
Distinct
ÈÈL T
(
ÈÈT U
)
ÈÈU V
;
ÈÈV W
foreach
ÍÍ 
(
ÍÍ 
var
ÍÍ 

idAtencion
ÍÍ '
in
ÍÍ( *!
idAtencionDistintos
ÍÍ+ >
)
ÍÍ> ?
{
ÎÎ 
var
ÏÏ 
detallesAtencion
ÏÏ (
=
ÏÏ) *
detallesDeOrden
ÏÏ+ :
.
ÏÏ: ;
Where
ÏÏ; @
(
ÏÏ@ A
h
ÏÏA B
=>
ÏÏC E
h
ÏÏF G
.
ÏÏG H
Id
ÏÏH J
==
ÏÏK M

idAtencion
ÏÏN X
)
ÏÏX Y
.
ÏÏY Z
ToList
ÏÏZ `
(
ÏÏ` a
)
ÏÏa b
;
ÏÏb c
var
ÌÌ 
found
ÌÌ 
=
ÌÌ 
detallesAtencion
ÌÌ  0
.
ÌÌ0 1
First
ÌÌ1 6
(
ÌÌ6 7
)
ÌÌ7 8
.
ÌÌ8 9
NombreConcepto
ÌÌ9 G
.
ÌÌG H
LastIndexOf
ÌÌH S
(
ÌÌS T
$str
ÌÌT Y
)
ÌÌY Z
;
ÌÌZ [
informacion
ÓÓ 
+=
ÓÓ  "
detallesAtencion
ÓÓ# 3
.
ÓÓ3 4
Count
ÓÓ4 9
(
ÓÓ9 :
)
ÓÓ: ;
.
ÓÓ; <
ToString
ÓÓ< D
(
ÓÓD E
)
ÓÓE F
+
ÓÓG H
$str
ÓÓI M
+
ÓÓN O
detallesAtencion
ÓÓP `
.
ÓÓ` a
First
ÓÓa f
(
ÓÓf g
)
ÓÓg h
.
ÓÓh i
NombreConcepto
ÓÓi w
.
ÓÓw x
	SubstringÓÓx Å
(ÓÓÅ Ç
foundÓÓÇ á
+ÓÓà â
$numÓÓä ã
)ÓÓã å
+ÓÓç é
$strÓÓè ì
;ÓÓì î
}
ÔÔ 
informacion
 
=
 
informacion
 )
.
) *
	Substring
* 3
(
3 4
$num
4 5
,
5 6
informacion
7 B
.
B C
Length
C I
-
J K
$num
L M
)
M N
;
N O
}
ÒÒ 
return
ÚÚ 
informacion
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
public
ÙÙ 
List
ÙÙ 
<
ÙÙ  
DetalleDeOperacion
ÙÙ &
>
ÙÙ& '4
&ConvertirDetalleOrdenADetalleOperacion
ÙÙ( N
(
ÙÙN O
List
ÙÙO S
<
ÙÙS T"
DetalleOrdenAtencion
ÙÙT h
>
ÙÙh i
detallesDeOrden
ÙÙj y
,
ÙÙy z
List
ÙÙ{ 
<ÙÙ Ä
longÙÙÄ Ñ
>ÙÙÑ Ö

idsDetalleÙÙÜ ê
)ÙÙê ë
{
ıı 	
List
ˆˆ 
<
ˆˆ  
DetalleDeOperacion
ˆˆ #
>
ˆˆ# $
nuevosDetalles
ˆˆ% 3
=
ˆˆ4 5
new
ˆˆ6 9
List
ˆˆ: >
<
ˆˆ> ? 
DetalleDeOperacion
ˆˆ? Q
>
ˆˆQ R
(
ˆˆR S
)
ˆˆS T
;
ˆˆT U
foreach
˜˜ 
(
˜˜ 
var
˜˜ 
	idDetalle
˜˜ "
in
˜˜# %

idsDetalle
˜˜& 0
)
˜˜0 1
{
¯¯ 
var
˘˘ 
detalle
˘˘ 
=
˘˘ 
detallesDeOrden
˘˘ -
.
˘˘- .
First
˘˘. 3
(
˘˘3 4
d
˘˘4 5
=>
˘˘6 8
d
˘˘9 :
.
˘˘: ;
Id
˘˘; =
==
˘˘> @
	idDetalle
˘˘A J
)
˘˘J K
;
˘˘K L
nuevosDetalles
˙˙ 
.
˙˙ 
Add
˙˙ "
(
˙˙" #
new
˙˙# & 
DetalleDeOperacion
˙˙' 9
(
˙˙9 :
)
˙˙: ;
{
˚˚ 
Id
¸¸ 
=
¸¸ 
	idDetalle
¸¸ "
,
¸¸" #
Cantidad
˝˝ 
=
˝˝ 
detalle
˝˝ &
.
˝˝& '
Cantidad
˝˝' /
,
˝˝/ 0
PrecioUnitario
˛˛ "
=
˛˛# $
detalle
˛˛% ,
.
˛˛, -
PrecioUnitario
˛˛- ;
,
˛˛; <
Importe
ˇˇ 
=
ˇˇ 
detalle
ˇˇ %
.
ˇˇ% &
Importe
ˇˇ& -
,
ˇˇ- .
Producto
ÄÄ 
=
ÄÄ 
new
ÄÄ "(
Concepto_Negocio_Comercial
ÄÄ# =
(
ÄÄ= >
)
ÄÄ> ?
{
ÄÄ@ A
Id
ÄÄB D
=
ÄÄE F
detalle
ÄÄG N
.
ÄÄN O

IdConcepto
ÄÄO Y
}
ÄÄZ [
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
return
ÉÉ 
nuevosDetalles
ÉÉ !
;
ÉÉ! "
}
ÑÑ 	
private
ÖÖ 
void
ÖÖ $
AgruparDetallesDeVenta
ÖÖ +
(
ÖÖ+ ,!
DatosVentaIntegrada
ÖÖ, ?
venta
ÖÖ@ E
)
ÖÖE F
{
ÜÜ 	
try
áá 
{
àà 
var
ââ 
detallesVenta
ââ !
=
ââ" #
new
ââ$ '
List
ââ( ,
<
ââ, - 
DetalleDeOperacion
ââ- ?
>
ââ? @
(
ââ@ A
)
ââA B
;
ââB C
var
ää 
detallesAgrupados
ää %
=
ää& '
venta
ää( -
.
ää- .
Orden
ää. 3
.
ää3 4
Detalles
ää4 <
.
ää< =
GroupBy
ää= D
(
ääD E
d
ääE F
=>
ääG I
new
ääJ M
{
ääN O
d
ääP Q
.
ääQ R
Producto
ääR Z
.
ääZ [
Id
ää[ ]
,
ää] ^
d
ää_ `
.
ää` a
PrecioUnitario
ääa o
}
ääp q
)
ääq r
;
äär s
foreach
ãã 
(
ãã 
var
ãã 
grupo
ãã "
in
ãã# %
detallesAgrupados
ãã& 7
)
ãã7 8
{
åå 
detallesVenta
çç !
.
çç! "
Add
çç" %
(
çç% &
new
çç& ) 
DetalleDeOperacion
çç* <
(
çç< =
)
çç= >
{
éé 
Producto
èè  
=
èè! "
new
èè# &(
Concepto_Negocio_Comercial
èè' A
{
èèB C
Id
èèD F
=
èèG H
grupo
èèI N
.
èèN O
Key
èèO R
.
èèR S
Id
èèS U
}
èèV W
,
èèW X
Cantidad
êê  
=
êê! "
grupo
êê# (
.
êê( )
Sum
êê) ,
(
êê, -
g
êê- .
=>
êê/ 1
g
êê2 3
.
êê3 4
Cantidad
êê4 <
)
êê< =
,
êê= >
PrecioUnitario
ëë &
=
ëë' (
grupo
ëë) .
.
ëë. /
Key
ëë/ 2
.
ëë2 3
PrecioUnitario
ëë3 A
,
ëëA B
Importe
íí 
=
íí  !
grupo
íí" '
.
íí' (
Sum
íí( +
(
íí+ ,
g
íí, -
=>
íí. 0
g
íí1 2
.
íí2 3
Importe
íí3 :
)
íí: ;
,
íí; <
MascaraDeCalculo
ìì (
=
ìì) *
VentasSettings
ìì+ 9
.
ìì9 :
Default
ìì: A
.
ììA B/
!MascaraDeCalculoCantidadCalculada
ììB c
}
îî 
)
îî 
;
îî 
}
ïï 
venta
ññ 
.
ññ 
Orden
ññ 
.
ññ 
Detalles
ññ $
=
ññ% &
detallesVenta
ññ' 4
;
ññ4 5
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
throw
öö 
new
öö 
LogicaException
öö )
(
öö) *
$str
öö* b
,
ööb c
e
ööd e
)
ööe f
;
ööf g
}
õõ 
}
úú 	
private
ùù 
void
ùù @
2RecalcularCantidadEImporteTipoPagoDivididoPorMonto
ùù G
(
ùùG H
Atencion
ùùH P
atencion
ùùQ Y
,
ùùY Z
List
ùù[ _
<
ùù_ `!
DatosVentaIntegrada
ùù` s
>
ùùs t 
comprobantesVentaùùu Ü
)ùùÜ á
{
ûû 	
try
üü 
{
†† 
var
°° 
detallesAtencion
°° $
=
°°% &(
GenerarDetallesDeOperacion
°°' A
(
°°A B
atencion
°°B J
)
°°J K
;
°°K L
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
i
¢¢  !
<
¢¢" #
comprobantesVenta
¢¢$ 5
.
¢¢5 6
Count
¢¢6 ;
;
¢¢; <
i
¢¢= >
++
¢¢> @
)
¢¢@ A
{
££ 
var
§§ !
detallesComprobante
§§ +
=
§§, -)
AgruparDetallesComprobantes
§§. I
(
§§I J
comprobantesVenta
§§J [
)
§§[ \
;
§§\ ]
if
•• 
(
•• 
atencion
••  
.
••  ! 
NuevosComprobantes
••! 3
[
••3 4
i
••4 5
]
••5 6
.
••6 7
Orden
••7 <
.
••< =
Total
••= B
!=
••C E
comprobantesVenta
••F W
[
••W X
i
••X Y
]
••Y Z
.
••Z [
Orden
••[ `
.
••` a
ImporteTotal
••a m
)
••m n
{
¶¶ 
var
ßß 

diferencia
ßß &
=
ßß' (
atencion
ßß) 1
.
ßß1 2 
NuevosComprobantes
ßß2 D
[
ßßD E
i
ßßE F
]
ßßF G
.
ßßG H
Orden
ßßH M
.
ßßM N
Total
ßßN S
-
ßßT U
comprobantesVenta
ßßV g
[
ßßg h
i
ßßh i
]
ßßi j
.
ßßj k
Orden
ßßk p
.
ßßp q
ImporteTotal
ßßq }
;
ßß} ~
for
®® 
(
®® 
int
®®  
j
®®! "
=
®®# $
$num
®®% &
;
®®& '
j
®®( )
<
®®* +!
detallesComprobante
®®, ?
.
®®? @
Count
®®@ E
;
®®E F
j
®®G H
++
®®H J
)
®®J K
{
©© 
if
™™ 
(
™™  !
detallesComprobante
™™  3
[
™™3 4
j
™™4 5
]
™™5 6
.
™™6 7
Importe
™™7 >
!=
™™? A
detallesAtencion
™™B R
.
™™R S
Single
™™S Y
(
™™Y Z
d
™™Z [
=>
™™\ ^
d
™™_ `
.
™™` a
Producto
™™a i
.
™™i j
Id
™™j l
==
™™m o"
detallesComprobante™™p É
[™™É Ñ
j™™Ñ Ö
]™™Ö Ü
.™™Ü á
Producto™™á è
.™™è ê
Id™™ê í
&&™™ì ï
d™™ñ ó
.™™ó ò
PrecioUnitario™™ò ¶
==™™ß ©#
detallesComprobante™™™ Ω
[™™Ω æ
j™™æ ø
]™™ø ¿
.™™¿ ¡
PrecioUnitario™™¡ œ
)™™œ –
.™™– —
Importe™™— ÿ
)™™ÿ Ÿ
{
´´ 
comprobantesVenta
¨¨  1
[
¨¨1 2
i
¨¨2 3
]
¨¨3 4
.
¨¨4 5
Orden
¨¨5 :
.
¨¨: ;
Detalles
¨¨; C
.
¨¨C D
Single
¨¨D J
(
¨¨J K
d
¨¨K L
=>
¨¨M O
d
¨¨P Q
.
¨¨Q R
Producto
¨¨R Z
.
¨¨Z [
Id
¨¨[ ]
==
¨¨^ `!
detallesComprobante
¨¨a t
[
¨¨t u
j
¨¨u v
]
¨¨v w
.
¨¨w x
Producto¨¨x Ä
.¨¨Ä Å
Id¨¨Å É
&&¨¨Ñ Ü
d¨¨á à
.¨¨à â
PrecioUnitario¨¨â ó
==¨¨ò ö#
detallesComprobante¨¨õ Æ
[¨¨Æ Ø
j¨¨Ø ∞
]¨¨∞ ±
.¨¨± ≤
PrecioUnitario¨¨≤ ¿
)¨¨¿ ¡
.¨¨¡ ¬
Importe¨¨¬ …
+=¨¨  Ã

diferencia¨¨Õ ◊
;¨¨◊ ÿ
break
≠≠  %
;
≠≠% &
}
ÆÆ 
}
ØØ 
}
∞∞ 
for
±± 
(
±± 
int
±± 
j
±± 
=
±±  
$num
±±! "
;
±±" #
j
±±$ %
<
±±& '
detallesAtencion
±±( 8
.
±±8 9
Count
±±9 >
;
±±> ?
j
±±@ A
++
±±A C
)
±±C D
{
≤≤ 
var
≥≥ 

diferencia
≥≥ &
=
≥≥' (
detallesAtencion
≥≥) 9
[
≥≥9 :
j
≥≥: ;
]
≥≥; <
.
≥≥< =
Importe
≥≥= D
-
≥≥E F
comprobantesVenta
≥≥G X
.
≥≥X Y

SelectMany
≥≥Y c
(
≥≥c d
c
≥≥d e
=>
≥≥f h
c
≥≥i j
.
≥≥j k
Orden
≥≥k p
.
≥≥p q
Detalles
≥≥q y
)
≥≥y z
.
≥≥z {
Where≥≥{ Ä
(≥≥Ä Å
d≥≥Å Ç
=>≥≥É Ö
d≥≥Ü á
.≥≥á à
Producto≥≥à ê
.≥≥ê ë
Id≥≥ë ì
==≥≥î ñ 
detallesAtencion≥≥ó ß
[≥≥ß ®
j≥≥® ©
]≥≥© ™
.≥≥™ ´
Producto≥≥´ ≥
.≥≥≥ ¥
Id≥≥¥ ∂
&&≥≥∑ π
d≥≥∫ ª
.≥≥ª º
PrecioUnitario≥≥º  
==≥≥À Õ 
detallesAtencion≥≥Œ ﬁ
[≥≥ﬁ ﬂ
j≥≥ﬂ ‡
]≥≥‡ ·
.≥≥· ‚
PrecioUnitario≥≥‚ 
)≥≥ Ò
.≥≥Ò Ú
Sum≥≥Ú ı
(≥≥ı ˆ
d≥≥ˆ ˜
=>≥≥¯ ˙
d≥≥˚ ¸
.≥≥¸ ˝
Importe≥≥˝ Ñ
)≥≥Ñ Ö
;≥≥Ö Ü
if
¥¥ 
(
¥¥ 

diferencia
¥¥ &
!=
¥¥' )
$num
¥¥* +
)
¥¥+ ,
{
µµ 
comprobantesVenta
∂∂ -
[
∂∂- .
i
∂∂. /
]
∂∂/ 0
.
∂∂0 1
Orden
∂∂1 6
.
∂∂6 7
Detalles
∂∂7 ?
.
∂∂? @
First
∂∂@ E
(
∂∂E F
d
∂∂F G
=>
∂∂H J
d
∂∂K L
.
∂∂L M
Producto
∂∂M U
.
∂∂U V
Id
∂∂V X
==
∂∂Y [
detallesAtencion
∂∂\ l
[
∂∂l m
j
∂∂m n
]
∂∂n o
.
∂∂o p
Producto
∂∂p x
.
∂∂x y
Id
∂∂y {
&&
∂∂| ~
d∂∂ Ä
.∂∂Ä Å
PrecioUnitario∂∂Å è
==∂∂ê í 
detallesAtencion∂∂ì £
[∂∂£ §
j∂∂§ •
]∂∂• ¶
.∂∂¶ ß
PrecioUnitario∂∂ß µ
)∂∂µ ∂
.∂∂∂ ∑
Importe∂∂∑ æ
+=∂∂ø ¡

diferencia∂∂¬ Ã
;∂∂Ã Õ
}
∑∑ 
}
∏∏ 
}
ππ 
for
∫∫ 
(
∫∫ 
int
∫∫ 
i
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
i
∫∫  !
<
∫∫" #
detallesAtencion
∫∫$ 4
.
∫∫4 5
Count
∫∫5 :
;
∫∫: ;
i
∫∫< =
++
∫∫= ?
)
∫∫? @
{
ªª 
var
ºº 

diferencia
ºº "
=
ºº# $
detallesAtencion
ºº% 5
[
ºº5 6
i
ºº6 7
]
ºº7 8
.
ºº8 9
Cantidad
ºº9 A
-
ººB C
comprobantesVenta
ººD U
.
ººU V

SelectMany
ººV `
(
ºº` a
c
ººa b
=>
ººc e
c
ººf g
.
ººg h
Orden
ººh m
.
ººm n
Detalles
ººn v
)
ººv w
.
ººw x
Where
ººx }
(
ºº} ~
d
ºº~ 
=>ººÄ Ç
dººÉ Ñ
.ººÑ Ö
ProductoººÖ ç
.ººç é
Idººé ê
==ººë ì 
detallesAtencionººî §
[ºº§ •
iºº• ¶
]ºº¶ ß
.ººß ®
Productoºº® ∞
.ºº∞ ±
Idºº± ≥
&&ºº¥ ∂
dºº∑ ∏
.ºº∏ π
PrecioUnitarioººπ «
==ºº»   
detallesAtencionººÀ €
[ºº€ ‹
iºº‹ ›
]ºº› ﬁ
.ººﬁ ﬂ
PrecioUnitarioººﬂ Ì
)ººÌ Ó
.ººÓ Ô
SumººÔ Ú
(ººÚ Û
dººÛ Ù
=>ººı ˜
dºº¯ ˘
.ºº˘ ˙
Cantidadºº˙ Ç
)ººÇ É
;ººÉ Ñ
if
ΩΩ 
(
ΩΩ 

diferencia
ΩΩ "
!=
ΩΩ# %
$num
ΩΩ& '
)
ΩΩ' (
{
ææ 
comprobantesVenta
øø )
.
øø) *

SelectMany
øø* 4
(
øø4 5
c
øø5 6
=>
øø7 9
c
øø: ;
.
øø; <
Orden
øø< A
.
øøA B
Detalles
øøB J
)
øøJ K
.
øøK L
First
øøL Q
(
øøQ R
d
øøR S
=>
øøT V
d
øøW X
.
øøX Y
Producto
øøY a
.
øøa b
Id
øøb d
==
øøe g
detallesAtencion
øøh x
[
øøx y
i
øøy z
]
øøz {
.
øø{ |
Productoøø| Ñ
.øøÑ Ö
IdøøÖ á
&&øøà ä
døøã å
.øøå ç
PrecioUnitarioøøç õ
==øøú û 
detallesAtencionøøü Ø
[øøØ ∞
iøø∞ ±
]øø± ≤
.øø≤ ≥
PrecioUnitarioøø≥ ¡
)øø¡ ¬
.øø¬ √
Cantidadøø√ À
+=øøÃ Œ

diferenciaøøœ Ÿ
;øøŸ ⁄
}
¿¿ 
}
¡¡ 
foreach
¬¬ 
(
¬¬ 
var
¬¬ 
item
¬¬ !
in
¬¬" $
detallesAtencion
¬¬% 5
)
¬¬5 6
{
√√ 
if
ƒƒ 
(
ƒƒ 
detallesAtencion
ƒƒ (
.
ƒƒ( )
Single
ƒƒ) /
(
ƒƒ/ 0
i
ƒƒ0 1
=>
ƒƒ2 4
i
ƒƒ5 6
.
ƒƒ6 7
Producto
ƒƒ7 ?
.
ƒƒ? @
Id
ƒƒ@ B
==
ƒƒC E
item
ƒƒF J
.
ƒƒJ K
Producto
ƒƒK S
.
ƒƒS T
Id
ƒƒT V
&&
ƒƒW Y
i
ƒƒZ [
.
ƒƒ[ \
PrecioUnitario
ƒƒ\ j
==
ƒƒk m
item
ƒƒn r
.
ƒƒr s
PrecioUnitarioƒƒs Å
)ƒƒÅ Ç
.ƒƒÇ É
CantidadƒƒÉ ã
!=ƒƒå é!
comprobantesVentaƒƒè †
.ƒƒ† °

SelectManyƒƒ° ´
(ƒƒ´ ¨
dvƒƒ¨ Æ
=>ƒƒØ ±
dvƒƒ≤ ¥
.ƒƒ¥ µ
Ordenƒƒµ ∫
.ƒƒ∫ ª
Detallesƒƒª √
)ƒƒ√ ƒ
.ƒƒƒ ≈
Whereƒƒ≈  
(ƒƒ  À
dƒƒÀ Ã
=>ƒƒÕ œ
dƒƒ– —
.ƒƒ— “
Productoƒƒ“ ⁄
.ƒƒ⁄ €
Idƒƒ€ ›
==ƒƒﬁ ‡
itemƒƒ· Â
.ƒƒÂ Ê
ProductoƒƒÊ Ó
.ƒƒÓ Ô
IdƒƒÔ Ò
&&ƒƒÚ Ù
dƒƒı ˆ
.ƒƒˆ ˜
PrecioUnitarioƒƒ˜ Ö
==ƒƒÜ à
itemƒƒâ ç
.ƒƒç é
PrecioUnitarioƒƒé ú
)ƒƒú ù
.ƒƒù û
Sumƒƒû °
(ƒƒ° ¢
dƒƒ¢ £
=>ƒƒ§ ¶
dƒƒß ®
.ƒƒ® ©
Cantidadƒƒ© ±
)ƒƒ± ≤
)ƒƒ≤ ≥
{
≈≈ 
throw
∆∆ 
new
∆∆ !
LogicaException
∆∆" 1
(
∆∆1 2
$str∆∆2 ò
)∆∆ò ô
;∆∆ô ö
}
«« 
if
»» 
(
»» 
detallesAtencion
»» (
.
»»( )
Single
»») /
(
»»/ 0
i
»»0 1
=>
»»2 4
i
»»5 6
.
»»6 7
Producto
»»7 ?
.
»»? @
Id
»»@ B
==
»»C E
item
»»F J
.
»»J K
Producto
»»K S
.
»»S T
Id
»»T V
&&
»»W Y
i
»»Z [
.
»»[ \
PrecioUnitario
»»\ j
==
»»k m
item
»»n r
.
»»r s
PrecioUnitario»»s Å
)»»Å Ç
.»»Ç É
Importe»»É ä
!=»»ã ç!
comprobantesVenta»»é ü
.»»ü †

SelectMany»»† ™
(»»™ ´
dv»»´ ≠
=>»»Æ ∞
dv»»± ≥
.»»≥ ¥
Orden»»¥ π
.»»π ∫
Detalles»»∫ ¬
)»»¬ √
.»»√ ƒ
Where»»ƒ …
(»»…  
d»»  À
=>»»Ã Œ
d»»œ –
.»»– —
Producto»»— Ÿ
.»»Ÿ ⁄
Id»»⁄ ‹
==»»› ﬂ
item»»‡ ‰
.»»‰ Â
Producto»»Â Ì
.»»Ì Ó
Id»»Ó 
&&»»Ò Û
d»»Ù ı
.»»ı ˆ
PrecioUnitario»»ˆ Ñ
==»»Ö á
item»»à å
.»»å ç
PrecioUnitario»»ç õ
)»»õ ú
.»»ú ù
Sum»»ù †
(»»† °
d»»° ¢
=>»»£ •
d»»¶ ß
.»»ß ®
Importe»»® Ø
)»»Ø ∞
)»»∞ ±
{
…… 
throw
   
new
   !
LogicaException
  " 1
(
  1 2
$str  2 ñ
)  ñ ó
;  ó ò
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* o
,
––o p
e
––q r
)
––r s
;
––s t
}
—— 
}
““ 	
private
”” 
List
”” 
<
””  
DetalleDeOperacion
”” '
>
””' ()
AgruparDetallesComprobantes
””) D
(
””D E
List
””E I
<
””I J!
DatosVentaIntegrada
””J ]
>
””] ^#
comprobantesGenerados
””_ t
)
””t u
{
‘‘ 	
try
’’ 
{
÷÷ 
var
◊◊ %
nuevosDetallesAgrupados
◊◊ +
=
◊◊, -
new
◊◊. 1
List
◊◊2 6
<
◊◊6 7 
DetalleDeOperacion
◊◊7 I
>
◊◊I J
(
◊◊J K
)
◊◊K L
;
◊◊L M
var
ÿÿ 
detallesAgrupados
ÿÿ %
=
ÿÿ& '#
comprobantesGenerados
ÿÿ( =
.
ÿÿ= >
Select
ÿÿ> D
(
ÿÿD E
c
ÿÿE F
=>
ÿÿG I
c
ÿÿJ K
.
ÿÿK L
Orden
ÿÿL Q
)
ÿÿQ R
.
ÿÿR S

SelectMany
ÿÿS ]
(
ÿÿ] ^
o
ÿÿ^ _
=>
ÿÿ` b
o
ÿÿc d
.
ÿÿd e
Detalles
ÿÿe m
)
ÿÿm n
.
ÿÿn o
GroupBy
ÿÿo v
(
ÿÿv w
d
ÿÿw x
=>
ÿÿy {
new
ÿÿ| 
{ÿÿÄ Å
dÿÿÇ É
.ÿÿÉ Ñ
ProductoÿÿÑ å
.ÿÿå ç
Idÿÿç è
,ÿÿè ê
dÿÿë í
.ÿÿí ì
PrecioUnitarioÿÿì °
}ÿÿ¢ £
)ÿÿ£ §
;ÿÿ§ •
foreach
ŸŸ 
(
ŸŸ 
var
ŸŸ 
grupo
ŸŸ "
in
ŸŸ# %
detallesAgrupados
ŸŸ& 7
)
ŸŸ7 8
{
⁄⁄ %
nuevosDetallesAgrupados
€€ +
.
€€+ ,
Add
€€, /
(
€€/ 0
new
€€0 3 
DetalleDeOperacion
€€4 F
(
€€F G
)
€€G H
{
‹‹ 
Producto
››  
=
››! "
new
››# &(
Concepto_Negocio_Comercial
››' A
{
››B C
Id
››D F
=
››G H
grupo
››I N
.
››N O
Key
››O R
.
››R S
Id
››S U
}
››V W
,
››W X
Cantidad
ﬁﬁ  
=
ﬁﬁ! "
grupo
ﬁﬁ# (
.
ﬁﬁ( )
Sum
ﬁﬁ) ,
(
ﬁﬁ, -
g
ﬁﬁ- .
=>
ﬁﬁ/ 1
g
ﬁﬁ2 3
.
ﬁﬁ3 4
Cantidad
ﬁﬁ4 <
)
ﬁﬁ< =
,
ﬁﬁ= >
PrecioUnitario
ﬂﬂ &
=
ﬂﬂ' (
grupo
ﬂﬂ) .
.
ﬂﬂ. /
Key
ﬂﬂ/ 2
.
ﬂﬂ2 3
PrecioUnitario
ﬂﬂ3 A
,
ﬂﬂA B
Importe
‡‡ 
=
‡‡  !
grupo
‡‡" '
.
‡‡' (
Sum
‡‡( +
(
‡‡+ ,
g
‡‡, -
=>
‡‡. 0
g
‡‡1 2
.
‡‡2 3
Importe
‡‡3 :
)
‡‡: ;
,
‡‡; <
MascaraDeCalculo
·· (
=
··) *
VentasSettings
··+ 9
.
··9 :
Default
··: A
.
··A B/
!MascaraDeCalculoCantidadCalculada
··B c
}
‚‚ 
)
‚‚ 
;
‚‚ 
}
„„ 
return
‰‰ %
nuevosDetallesAgrupados
‰‰ .
;
‰‰. /
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
e
ÊÊ 
)
ÊÊ 
{
ÁÁ 
throw
ËË 
new
ËË 
LogicaException
ËË )
(
ËË) *
$str
ËË* ^
,
ËË^ _
e
ËË` a
)
ËËa b
;
ËËb c
}
ÈÈ 
}
ÍÍ 	
}
ÅÅ 
}ÇÇ ˜é
MD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelReporte_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

class 
HotelReporte_Logica $
:% & 
IHotelReporte_Logica' ;
{ 
	protected 
readonly 
IActorNegocioLogica .
_actorNegocioLogica/ B
;B C
	protected 
readonly 
IOperacionLogica +
_operacionLogica, <
;< =
	protected 
readonly 
IMaestroRepositorio .
_maestroDatos/ <
;< =
	protected 
readonly #
ITransaccionRepositorio 2
_transaccionDatos3 D
;D E
	protected 
readonly #
IEstablecimiento_Logica 2"
_establecimientoLogica3 I
;I J
	protected 
readonly %
IHotelReporte_Repositorio 4
_hotelReporte_Datos5 H
;H I
	protected   
readonly   #
IHotelUtilitario_Logica   2#
_hotelUtilitario_Logica  3 J
;  J K
	protected!! 
readonly!! 
IHotelLogica!! '
_hotelLogica!!( 4
;!!4 5
public## 
HotelReporte_Logica## "
(##" #
IActorNegocioLogica### 6
actorNegocioLogica##7 I
,##I J
IMaestroRepositorio##K ^
maestroDatos##_ k
,##k l
IOperacionLogica##m }
operacionLogica	##~ ç
,
##ç é%
ITransaccionRepositorio
##è ¶
transaccionDatos
##ß ∑
,
##∑ ∏%
IEstablecimiento_Logica
##π –#
establecimientoLogica
##— Ê
,
##Ê Á'
IHotelReporte_Repositorio
##Ë Å 
hotelReporte_Datos
##Ç î
,
##î ï%
IHotelUtilitario_Logica
##ñ ≠$
hotelUtilitario_Logica
##Æ ƒ
,
##ƒ ≈
IHotelLogica
##∆ “
hotelLogica
##” ﬁ
)
##ﬁ ﬂ
{$$ 	
_actorNegocioLogica%% 
=%%  !
actorNegocioLogica%%" 4
;%%4 5
_maestroDatos&& 
=&& 
maestroDatos&& (
;&&( )
_operacionLogica'' 
='' 
operacionLogica'' .
;''. /
_transaccionDatos(( 
=(( 
transaccionDatos((  0
;((0 1"
_establecimientoLogica)) "
=))# $!
establecimientoLogica))% :
;)): ;
_hotelReporte_Datos** 
=**  !
hotelReporte_Datos**" 4
;**4 5#
_hotelUtilitario_Logica++ #
=++$ %"
hotelUtilitario_Logica++& <
;++< =
_hotelLogica,, 
=,, 
hotelLogica,, &
;,,& '
}-- 	
public.. 
PrincipalReportData.. ",
 ObtenerDatosParaReportePrincipal..# C
(..C D"
UserProfileSessionData..D Z
profileData..[ f
)..f g
{// 	
var00 
establecimientos00  
=00! "
new00# &
List00' +
<00+ ,
Establecimiento00, ;
>00; <
(00< =
)00= >
;00> ?
var11 !
establecimientoSesion11 %
=11& '
profileData11( 3
.113 40
$EstablecimientoComercialSeleccionado114 X
.11X Y
ToEstablecimiento11Y j
(11j k
)11k l
;11l m
var22 *
TieneRolAdministradorDeNegocio22 .
=22/ 0
profileData221 <
.22< =
Empleado22= E
.22E F
TieneRol22F N
(22N O
ActorSettings22O \
.22\ ]
Default22] d
.22d e(
idRolAdministradorDeNegocio	22e Ä
)
22Ä Å
;
22Å Ç
if44 
(44 *
TieneRolAdministradorDeNegocio44 .
)44. /
{55 
establecimientos66  
=66! "
Establecimiento66# 2
.662 3
Convert663 :
(66: ;"
_establecimientoLogica66; Q
.66Q R6
*ObtenerEstablecimientosComercialesVigentes66R |
(66| }
)66} ~
)66~ 
;	66 Ä
}77 
var88 
tiposHabitacion88 
=88  !
_hotelLogica88" .
.88. /6
*ObtenerTiposHabitacionVigentesSimplificado88/ Y
(88Y Z
)88Z [
;88[ \
var99 
data99 
=99 
new99 
PrincipalReportData99 .
(99. /
)99/ 0
{:: 
FechaActual_;; 
=;; 
DateTimeUtil;; +
.;;+ ,
FechaActual;;, 7
(;;7 8
);;8 9
,;;9 :!
EstablecimientoSesion<< %
=<<& '!
establecimientoSesion<<( =
,<<= >
EsAdministrador== 
===  !*
TieneRolAdministradorDeNegocio==" @
,==@ A
Establecimientos>>  
=>>! "*
TieneRolAdministradorDeNegocio>># A
?>>B C
establecimientos>>D T
:>>U V
new>>W Z
List>>[ _
<>>_ `
Establecimiento>>` o
>>>o p
(>>p q
)>>q r
{>>s t"
establecimientoSesion	>>u ä
}
>>ã å
,
>>å ç
TiposHabitacion?? 
=??  !
tiposHabitacion??" 1
,??1 2
}@@ 
;@@ 
returnAA 
dataAA 
;AA 
}BB 	
publicCC 
ListCC 
<CC 
RegistroHuespedCC #
>CC# $$
ObtenerRegistroHuespedesCC% =
(CC= >
intCC> A
idEstablecimientoCCB S
,CCS T
DateTimeCCU ]

fechaDesdeCC^ h
,CCh i
DateTimeCCj r

fechaHastaCCs }
)CC} ~
{DD 	
tryEE 
{FF 
ListGG 
<GG 
RegistroHuespedGG $
>GG$ %
registroHuespedesGG& 7
=GG8 9
_hotelReporte_DatosGG: M
.GGM N$
ObtenerRegistroHuespedesGGN f
(GGf g
idEstablecimientoGGg x
,GGx y

fechaDesde	GGz Ñ
,
GGÑ Ö

fechaHasta
GGÜ ê
)
GGê ë
.
GGë í
ToList
GGí ò
(
GGò ô
)
GGô ö
;
GGö õ
registroHuespedesHH !
.HH! "
ForEachHH" )
(HH) *
rhHH* ,
=>HH- /
rhHH0 2
.HH2 3
NochesHH3 9
=HH: ;#
_hotelUtilitario_LogicaHH< S
.HHS T
ObtenerNumeroNochesHHT g
(HHg h
rhHHh j
.HHj k
FechaIngresoHHk w
,HHw x
rhHHy {
.HH{ |
FechaSalida	HH| á
)
HHá à
)
HHà â
;
HHâ ä
registroHuespedesII !
=II" #
registroHuespedesII$ 5
.II5 6
WhereII6 ;
(II; <
rhII< >
=>II? A
rhIIB D
.IID E
ImporteTotalIIE Q
>IIR S
$numIIT U
)IIU V
.IIV W
ToListIIW ]
(II] ^
)II^ _
;II_ `
registroHuespedesJJ !
.JJ! "
ForEachJJ" )
(JJ) *
rhJJ* ,
=>JJ- /
rhJJ0 2
.JJ2 3
TarifaJJ3 9
=JJ: ;
rhJJ< >
.JJ> ?
ImporteTotalJJ? K
/JJL M
rhJJN P
.JJP Q
NochesJJQ W
)JJW X
;JJX Y
returnKK 
registroHuespedesKK (
;KK( )
}LL 
catchMM 
(MM 
	ExceptionMM 
eMM 
)MM 
{NN 
throwOO 
newOO 
LogicaExceptionOO )
(OO) *
$strOO* N
,OON O
eOOP Q
)OOQ R
;OOR S
}PP 
}QQ 	
publicRR 
ListRR 
<RR 
IngresoRR 
>RR 
ObtenerIngresosRR ,
(RR, -
intRR- 0
idEstablecimientoRR1 B
,RRB C
DateTimeRRD L

fechaDesdeRRM W
,RRW X
DateTimeRRY a

fechaHastaRRb l
)RRl m
{SS 	
tryTT 
{UU 
ListVV 
<VV 
IngresoVV 
>VV 
ingresosVV &
=VV' (
_hotelReporte_DatosVV) <
.VV< =
ObtenerIngresosVV= L
(VVL M
idEstablecimientoVVM ^
,VV^ _

fechaDesdeVV` j
,VVj k

fechaHastaVVl v
)VVv w
.VVw x
ToListVVx ~
(VV~ 
)	VV Ä
;
VVÄ Å
returnXX 
ingresosXX 
;XX  
}YY 
catchZZ 
(ZZ 
	ExceptionZZ 
eZZ 
)ZZ 
{[[ 
throw\\ 
new\\ 
LogicaException\\ )
(\\) *
$str\\* N
,\\N O
e\\P Q
)\\Q R
;\\R S
}]] 
}^^ 	
public__ 
List__ 
<__ 
Salida__ 
>__ 
ObtenerSalidas__ *
(__* +
int__+ .
idEstablecimiento__/ @
,__@ A
DateTime__B J

fechaDesde__K U
,__U V
DateTime__W _

fechaHasta__` j
)__j k
{`` 	
tryaa 
{bb 
Listcc 
<cc 
Salidacc 
>cc 
salidascc $
=cc% &
_hotelReporte_Datoscc' :
.cc: ;
ObtenerSalidascc; I
(ccI J
idEstablecimientoccJ [
,cc[ \

fechaDesdecc] g
,ccg h

fechaHastacci s
)ccs t
.cct u
ToListccu {
(cc{ |
)cc| }
;cc} ~
returndd 
salidasdd 
;dd 
}ee 
catchff 
(ff 
	Exceptionff 
eff 
)ff 
{gg 
throwhh 
newhh 
LogicaExceptionhh )
(hh) *
$strhh* M
,hhM N
ehhO P
)hhP Q
;hhQ R
}ii 
}jj 	
publickk 
Listkk 
<kk 
Anuladakk 
>kk 
ObtenerAnuladaskk ,
(kk, -
intkk- 0
idEstablecimientokk1 B
,kkB C
DateTimekkD L

fechaDesdekkM W
,kkW X
DateTimekkY a

fechaHastakkb l
)kkl m
{ll 	
trymm 
{nn 
Listoo 
<oo 
Anuladaoo 
>oo 
anuladasoo &
=oo' (
_hotelReporte_Datosoo) <
.oo< =
ObtenerAnuladasoo= L
(ooL M
idEstablecimientoooM ^
,oo^ _

fechaDesdeoo` j
,ooj k

fechaHastaool v
)oov w
.oow x
ToListoox ~
(oo~ 
)	oo Ä
;
ooÄ Å
returnpp 
anuladaspp 
;pp  
}qq 
catchrr 
(rr 
	Exceptionrr 
err 
)rr 
{ss 
throwtt 
newtt 
LogicaExceptiontt )
(tt) *
$strtt* N
,ttN O
ettP Q
)ttQ R
;ttR S
}uu 
}vv 	
publicww 
FormularioT1ww 
ObtenerFormularioT1ww /
(ww/ 0
intww0 3
idEstablecimientoww4 E
,wwE F
DateTimewwG O

fechaDesdewwP Z
,wwZ [
DateTimeww\ d

fechaHastawwe o
)wwo p
{xx 	
tryyy 
{zz 
List{{ 
<{{ 
RegistroHuesped{{ $
>{{$ %
registroHuespedes{{& 7
={{8 9
_hotelReporte_Datos{{: M
.{{M N,
 ObtenerRegistroHuespedesCompleto{{N n
({{n o
idEstablecimiento	{{o Ä
,
{{Ä Å

fechaDesde
{{Ç å
,
{{å ç

fechaHasta
{{é ò
)
{{ò ô
.
{{ô ö
ToList
{{ö †
(
{{† °
)
{{° ¢
;
{{¢ £
registroHuespedes|| !
.||! "
ForEach||" )
(||) *
rh||* ,
=>||- /
rh||0 2
.||2 3
Noches||3 9
=||: ;#
_hotelUtilitario_Logica||< S
.||S T
ObtenerNumeroNoches||T g
(||g h
rh||h j
.||j k
FechaIngreso||k w
,||w x
rh||y {
.||{ |
FechaSalida	||| á
)
||á à
)
||à â
;
||â ä
registroHuespedes}} !
=}}" #
registroHuespedes}}$ 5
.}}5 6
Where}}6 ;
(}}; <
rh}}< >
=>}}? A
rh}}B D
.}}D E
ImporteTotal}}E Q
>}}R S
$num}}T U
)}}U V
.}}V W
ToList}}W ]
(}}] ^
)}}^ _
;}}_ `
registroHuespedes~~ !
.~~! "
ForEach~~" )
(~~) *
rh~~* ,
=>~~- /
rh~~0 2
.~~2 3
Tarifa~~3 9
=~~: ;
rh~~< >
.~~> ?
ImporteTotal~~? K
/~~L M
rh~~N P
.~~P Q
Noches~~Q W
)~~W X
;~~X Y
FormularioT1 
formularioT1 )
=* +
new, /
FormularioT10 <
(< =
)= >
;> ?
formularioT1
ÄÄ 
.
ÄÄ 
Dias1_8Arribos
ÄÄ +
=
ÄÄ, - 
ObtenerDiasArribos
ÄÄ. @
(
ÄÄ@ A
registroHuespedes
ÄÄA R
,
ÄÄR S
$num
ÄÄT U
,
ÄÄU V
$num
ÄÄW X
)
ÄÄX Y
;
ÄÄY Z
formularioT1
ÅÅ 
.
ÅÅ 
Dias9_16Arribos
ÅÅ ,
=
ÅÅ- . 
ObtenerDiasArribos
ÅÅ/ A
(
ÅÅA B
registroHuespedes
ÅÅB S
,
ÅÅS T
$num
ÅÅU V
,
ÅÅV W
$num
ÅÅX Z
)
ÅÅZ [
;
ÅÅ[ \
formularioT1
ÇÇ 
.
ÇÇ 
Dias17_24Arribos
ÇÇ -
=
ÇÇ. / 
ObtenerDiasArribos
ÇÇ0 B
(
ÇÇB C
registroHuespedes
ÇÇC T
,
ÇÇT U
$num
ÇÇV X
,
ÇÇX Y
$num
ÇÇZ \
)
ÇÇ\ ]
;
ÇÇ] ^
formularioT1
ÉÉ 
.
ÉÉ !
Dias25_TotalArribos
ÉÉ 0
=
ÉÉ1 2 
ObtenerDiasArribos
ÉÉ3 E
(
ÉÉE F
registroHuespedes
ÉÉF W
,
ÉÉW X
$num
ÉÉY [
,
ÉÉ[ \
$num
ÉÉ] _
)
ÉÉ_ `
;
ÉÉ` a
formularioT1
ÑÑ 
.
ÑÑ !
Dias25_TotalArribos
ÑÑ 0
.
ÑÑ0 1
Add
ÑÑ1 4
(
ÑÑ4 5
new
ÑÑ5 8
	DiaArribo
ÑÑ9 B
(
ÑÑB C
$str
ÑÑC J
,
ÑÑJ K
registroHuespedes
ÑÑL ]
.
ÑÑ] ^
Count
ÑÑ^ c
(
ÑÑc d
)
ÑÑd e
)
ÑÑe f
)
ÑÑf g
;
ÑÑg h
formularioT1
ÖÖ 
.
ÖÖ .
 ArribosPernoctacionesExtranjeros
ÖÖ =
=
ÖÖ> ?5
'ObtenerArribosPernoctacionesExtranjeros
ÖÖ@ g
(
ÖÖg h
registroHuespedes
ÖÖh y
)
ÖÖy z
;
ÖÖz {
formularioT1
ÜÜ 
.
ÜÜ -
ArribosPernoctacionesNacionales
ÜÜ <
=
ÜÜ= >4
&ObtenerArribosPernoctacionesNacionales
ÜÜ? e
(
ÜÜe f
registroHuespedes
ÜÜf w
)
ÜÜw x
;
ÜÜx y
formularioT1
áá 
.
áá 
MotivoViajes
áá )
=
áá* +
new
áá, /
List
áá0 4
<
áá4 5
MotivoViaje
áá5 @
>
áá@ A
{
àà  
ObtenerMotivoViaje
ââ &
(
ââ& '
$str
ââ' D
,
ââD E
registroHuespedes
ââF W
.
ââW X
Where
ââX ]
(
ââ] ^
rh
ââ^ `
=>
ââa c
rh
ââd f
.
ââf g
IdPais
ââg m
!=
âân p
MaestroSettingsââq Ä
.ââÄ Å
DefaultââÅ à
.ââà â*
IdDetalleMaestroNacionPeruâââ £
)ââ£ §
.ââ§ •
ToListââ• ´
(ââ´ ¨
)ââ¨ ≠
)ââ≠ Æ
,ââÆ Ø 
ObtenerMotivoViaje
ää &
(
ää& '
$str
ää' >
,
ää> ?
registroHuespedes
ää@ Q
.
ääQ R
Where
ääR W
(
ääW X
rh
ääX Z
=>
ää[ ]
rh
ää^ `
.
ää` a
IdPais
ääa g
==
ääh j
MaestroSettings
ääk z
.
ääz {
Defaultää{ Ç
.ääÇ É*
IdDetalleMaestroNacionPeruääÉ ù
)ääù û
.ääû ü
ToListääü •
(ää• ¶
)ää¶ ß
)ääß ®
}
ãã 
;
ãã 
return
åå 
formularioT1
åå #
;
åå# $
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
new
êê 
LogicaException
êê )
(
êê) *
$str
êê* V
,
êêV W
e
êêX Y
)
êêY Z
;
êêZ [
}
ëë 
}
íí 	
public
ìì 
List
ìì 
<
ìì 
	DiaArribo
ìì 
>
ìì  
ObtenerDiasArribos
ìì 1
(
ìì1 2
List
ìì2 6
<
ìì6 7
RegistroHuesped
ìì7 F
>
ììF G
registroHuespedes
ììH Y
,
ììY Z
int
ìì[ ^
	diaInicio
ìì_ h
,
ììh i
int
ììj m
diaFin
ììn t
)
ììt u
{
îî 	
List
ïï 
<
ïï 
	DiaArribo
ïï 
>
ïï 
diasArribos
ïï '
=
ïï( )
new
ïï* -
List
ïï. 2
<
ïï2 3
	DiaArribo
ïï3 <
>
ïï< =
(
ïï= >
)
ïï> ?
;
ïï? @
int
ññ 
diaIteracion
ññ 
=
ññ 
	diaInicio
ññ (
;
ññ( )
while
óó 
(
óó 
diaIteracion
óó 
<=
óó  "
diaFin
óó# )
)
óó) *
{
òò 
diasArribos
ôô 
.
ôô 
Add
ôô 
(
ôô  
new
ôô  #
	DiaArribo
ôô$ -
(
ôô- .
)
ôô. /
{
öö 
Nombre
õõ 
=
õõ 
$str
õõ #
+
õõ$ %
diaIteracion
õõ& 2
+
õõ3 4
$str
õõ5 9
,
õõ9 :
Arribo
úú 
=
úú 
registroHuespedes
úú .
.
úú. /
Where
úú/ 4
(
úú4 5
rh
úú5 7
=>
úú8 :
rh
úú; =
.
úú= >
FechaIngreso
úú> J
.
úúJ K
Day
úúK N
==
úúO Q
diaIteracion
úúR ^
)
úú^ _
.
úú_ `
Count
úú` e
(
úúe f
)
úúf g
}
ùù 
)
ùù 
;
ùù 
diaIteracion
ûû 
++
ûû 
;
ûû 
}
üü 
return
†† 
diasArribos
†† 
;
†† 
}
°° 	
public
¢¢ 
List
¢¢ 
<
¢¢  
ArriboPernoctacion
¢¢ &
>
¢¢& '5
'ObtenerArribosPernoctacionesExtranjeros
¢¢( O
(
¢¢O P
List
¢¢P T
<
¢¢T U
RegistroHuesped
¢¢U d
>
¢¢d e
registroHuespedes
¢¢f w
)
¢¢w x
{
££ 	
List
§§ 
<
§§  
ArriboPernoctacion
§§ #
>
§§# $
extranjeros
§§% 0
=
§§1 2
new
§§3 6
List
§§7 ;
<
§§; < 
ArriboPernoctacion
§§< N
>
§§N O
(
§§O P
)
§§P Q
;
§§Q R
var
•• "
detalleMaestroPaises
•• $
=
••% &
_maestroDatos
••' 4
.
••4 5
ObtenerDetalles
••5 D
(
••D E
MaestroSettings
••E T
.
••T U
Default
••U \
.
••\ ]
IdMaestroPaises
••] l
)
••l m
;
••m n
List
¶¶ 
<
¶¶ 
ItemGenerico
¶¶ 
>
¶¶ 
paisesExtranjeros
¶¶ 0
=
¶¶1 2
new
¶¶3 6
List
¶¶7 ;
<
¶¶; <
ItemGenerico
¶¶< H
>
¶¶H I
(
¶¶I J
)
¶¶J K
;
¶¶K L
foreach
ßß 
(
ßß 
var
ßß 

codigoPais
ßß #
in
ßß$ &
HotelSettings
ßß' 4
.
ßß4 5
Default
ßß5 <
.
ßß< =F
8CodigoPaisesExtranjerosArribosPernoctacionesFormularioT1
ßß= u
.
ßßu v
Split
ßßv {
(
ßß{ |
$char
ßß| 
)ßß Ä
)ßßÄ Å
{
®® 
paisesExtranjeros
©© !
.
©©! "
Add
©©" %
(
©©% &
new
©©& )
ItemGenerico
©©* 6
(
©©6 7"
detalleMaestroPaises
©©7 K
.
©©K L
Single
©©L R
(
©©R S
p
©©S T
=>
©©U W
p
©©X Y
.
©©Y Z
codigo
©©Z `
==
©©a c

codigoPais
©©d n
)
©©n o
)
©©o p
)
©©p q
;
©©q r
}
™™ 
foreach
´´ 
(
´´ 
var
´´ 
paisExtrajero
´´ &
in
´´' )
paisesExtranjeros
´´* ;
)
´´; <
{
¨¨ 
extranjeros
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠  
new
≠≠  # 
ArriboPernoctacion
≠≠$ 6
(
≠≠6 7
)
≠≠7 8
{
ÆÆ 
Nombre
ØØ 
=
ØØ 
paisExtrajero
ØØ *
.
ØØ* +
Nombre
ØØ+ 1
,
ØØ1 2
Arribo
∞∞ 
=
∞∞ 
registroHuespedes
∞∞ .
.
∞∞. /
Where
∞∞/ 4
(
∞∞4 5
rh
∞∞5 7
=>
∞∞8 :
rh
∞∞; =
.
∞∞= >
IdPais
∞∞> D
==
∞∞E G
paisExtrajero
∞∞H U
.
∞∞U V
Id
∞∞V X
)
∞∞X Y
.
∞∞Y Z
Sum
∞∞Z ]
(
∞∞] ^
rh
∞∞^ `
=>
∞∞a c
rh
∞∞d f
.
∞∞f g
Arribos
∞∞g n
)
∞∞n o
,
∞∞o p
Pernoctacion
±±  
=
±±! "
registroHuespedes
±±# 4
.
±±4 5
Where
±±5 :
(
±±: ;
rh
±±; =
=>
±±> @
rh
±±A C
.
±±C D
IdPais
±±D J
==
±±K M
paisExtrajero
±±N [
.
±±[ \
Id
±±\ ^
)
±±^ _
.
±±_ `
Sum
±±` c
(
±±c d
rh
±±d f
=>
±±g i
rh
±±j l
.
±±l m
Pernoctaciones
±±m {
)
±±{ |
,
±±| }
}
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 
extranjeros
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
new
¥¥  
ArriboPernoctacion
¥¥  2
(
¥¥2 3
$str
¥¥3 ;
,
¥¥; <
registroHuespedes
¥¥= N
.
¥¥N O
Where
¥¥O T
(
¥¥T U
rh
¥¥U W
=>
¥¥X Z
rh
¥¥[ ]
.
¥¥] ^

Continente
¥¥^ h
==
¥¥i k
$str
¥¥l t
)
¥¥t u
.
¥¥u v
Sum
¥¥v y
(
¥¥y z
rh
¥¥z |
=>
¥¥} 
rh¥¥Ä Ç
.¥¥Ç É
Arribos¥¥É ä
)¥¥ä ã
,¥¥ã å!
registroHuespedes¥¥ç û
.¥¥û ü
Where¥¥ü §
(¥¥§ •
rh¥¥• ß
=>¥¥® ™
rh¥¥´ ≠
.¥¥≠ Æ

Continente¥¥Æ ∏
==¥¥π ª
$str¥¥º ƒ
)¥¥ƒ ≈
.¥¥≈ ∆
Sum¥¥∆ …
(¥¥…  
rh¥¥  Ã
=>¥¥Õ œ
rh¥¥– “
.¥¥“ ”
Pernoctaciones¥¥” ·
)¥¥· ‚
)¥¥‚ „
)¥¥„ ‰
;¥¥‰ Â
extranjeros
µµ 
.
µµ 
Add
µµ 
(
µµ 
new
µµ  
ArriboPernoctacion
µµ  2
(
µµ2 3
$str
µµ3 <
,
µµ< =
registroHuespedes
µµ> O
.
µµO P
Where
µµP U
(
µµU V
rh
µµV X
=>
µµY [
rh
µµ\ ^
.
µµ^ _

Continente
µµ_ i
==
µµj l
$str
µµm v
)
µµv w
.
µµw x
Sum
µµx {
(
µµ{ |
rh
µµ| ~
=>µµ Å
rhµµÇ Ñ
.µµÑ Ö
ArribosµµÖ å
)µµå ç
,µµç é!
registroHuespedesµµè †
.µµ† °
Whereµµ° ¶
(µµ¶ ß
rhµµß ©
=>µµ™ ¨
rhµµ≠ Ø
.µµØ ∞

Continenteµµ∞ ∫
==µµª Ω
$strµµæ «
)µµ« »
.µµ» …
Sumµµ… Ã
(µµÃ Õ
rhµµÕ œ
=>µµ– “
rhµµ” ’
.µµ’ ÷
Pernoctacionesµµ÷ ‰
)µµ‰ Â
)µµÂ Ê
)µµÊ Á
;µµÁ Ë
extranjeros
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
new
∂∂  
ArriboPernoctacion
∂∂  2
(
∂∂2 3
$str
∂∂3 I
,
∂∂I J
registroHuespedes
∂∂K \
.
∂∂\ ]
Where
∂∂] b
(
∂∂b c
rh
∂∂c e
=>
∂∂f h
rh
∂∂i k
.
∂∂k l
IdPais
∂∂l r
!=
∂∂s u
MaestroSettings∂∂v Ö
.∂∂Ö Ü
Default∂∂Ü ç
.∂∂ç é*
IdDetalleMaestroNacionPeru∂∂é ®
&&∂∂© ´
rh∂∂¨ Æ
.∂∂Æ Ø

Continente∂∂Ø π
==∂∂∫ º
$str∂∂Ω ∆
&&∂∂« …
!∂∂  À!
paisesExtranjeros∂∂À ‹
.∂∂‹ ›
Select∂∂› „
(∂∂„ ‰
p∂∂‰ Â
=>∂∂Ê Ë
p∂∂È Í
.∂∂Í Î
Id∂∂Î Ì
)∂∂Ì Ó
.∂∂Ó Ô
Contains∂∂Ô ˜
(∂∂˜ ¯
rh∂∂¯ ˙
.∂∂˙ ˚
IdPais∂∂˚ Å
)∂∂Å Ç
)∂∂Ç É
.∂∂É Ñ
Sum∂∂Ñ á
(∂∂á à
rh∂∂à ä
=>∂∂ã ç
rh∂∂é ê
.∂∂ê ë
Arribos∂∂ë ò
)∂∂ò ô
,∂∂ô ö!
registroHuespedes∂∂õ ¨
.∂∂¨ ≠
Where∂∂≠ ≤
(∂∂≤ ≥
rh∂∂≥ µ
=>∂∂∂ ∏
rh∂∂π ª
.∂∂ª º
IdPais∂∂º ¬
!=∂∂√ ≈
MaestroSettings∂∂∆ ’
.∂∂’ ÷
Default∂∂÷ ›
.∂∂› ﬁ*
IdDetalleMaestroNacionPeru∂∂ﬁ ¯
&&∂∂˘ ˚
rh∂∂¸ ˛
.∂∂˛ ˇ

Continente∂∂ˇ â
==∂∂ä å
$str∂∂ç ñ
&&∂∂ó ô
!∂∂ö õ!
paisesExtranjeros∂∂õ ¨
.∂∂¨ ≠
Select∂∂≠ ≥
(∂∂≥ ¥
p∂∂¥ µ
=>∂∂∂ ∏
p∂∂π ∫
.∂∂∫ ª
Id∂∂ª Ω
)∂∂Ω æ
.∂∂æ ø
Contains∂∂ø «
(∂∂« »
rh∂∂»  
.∂∂  À
IdPais∂∂À —
)∂∂— “
)∂∂“ ”
.∂∂” ‘
Sum∂∂‘ ◊
(∂∂◊ ÿ
rh∂∂ÿ ⁄
=>∂∂€ ›
rh∂∂ﬁ ‡
.∂∂‡ ·
Pernoctaciones∂∂· Ô
)∂∂Ô 
)∂∂ Ò
)∂∂Ò Ú
;∂∂Ú Û
extranjeros
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
new
∑∑  
ArriboPernoctacion
∑∑  2
(
∑∑2 3
$str
∑∑3 F
,
∑∑F G
registroHuespedes
∑∑H Y
.
∑∑Y Z
Where
∑∑Z _
(
∑∑_ `
rh
∑∑` b
=>
∑∑c e
rh
∑∑f h
.
∑∑h i

Continente
∑∑i s
==
∑∑t v
$str
∑∑w }
&&∑∑~ Ä
!∑∑Å Ç!
paisesExtranjeros∑∑Ç ì
.∑∑ì î
Select∑∑î ö
(∑∑ö õ
p∑∑õ ú
=>∑∑ù ü
p∑∑† °
.∑∑° ¢
Id∑∑¢ §
)∑∑§ •
.∑∑• ¶
Contains∑∑¶ Æ
(∑∑Æ Ø
rh∑∑Ø ±
.∑∑± ≤
IdPais∑∑≤ ∏
)∑∑∏ π
)∑∑π ∫
.∑∑∫ ª
Sum∑∑ª æ
(∑∑æ ø
rh∑∑ø ¡
=>∑∑¬ ƒ
rh∑∑≈ «
.∑∑« »
Arribos∑∑» œ
)∑∑œ –
,∑∑– —!
registroHuespedes∑∑“ „
.∑∑„ ‰
Where∑∑‰ È
(∑∑È Í
rh∑∑Í Ï
=>∑∑Ì Ô
rh∑∑ Ú
.∑∑Ú Û

Continente∑∑Û ˝
==∑∑˛ Ä
$str∑∑Å á
&&∑∑à ä
!∑∑ã å!
paisesExtranjeros∑∑å ù
.∑∑ù û
Select∑∑û §
(∑∑§ •
p∑∑• ¶
=>∑∑ß ©
p∑∑™ ´
.∑∑´ ¨
Id∑∑¨ Æ
)∑∑Æ Ø
.∑∑Ø ∞
Contains∑∑∞ ∏
(∑∑∏ π
rh∑∑π ª
.∑∑ª º
IdPais∑∑º ¬
)∑∑¬ √
)∑∑√ ƒ
.∑∑ƒ ≈
Sum∑∑≈ »
(∑∑» …
rh∑∑… À
=>∑∑Ã Œ
rh∑∑œ —
.∑∑— “
Pernoctaciones∑∑“ ‡
)∑∑‡ ·
)∑∑· ‚
)∑∑‚ „
;∑∑„ ‰
extranjeros
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
new
∏∏  
ArriboPernoctacion
∏∏  2
(
∏∏2 3
$str
∏∏3 H
,
∏∏H I
registroHuespedes
∏∏J [
.
∏∏[ \
Where
∏∏\ a
(
∏∏a b
rh
∏∏b d
=>
∏∏e g
rh
∏∏h j
.
∏∏j k

Continente
∏∏k u
==
∏∏v x
$str∏∏y Å
&&∏∏Ç Ñ
!∏∏Ö Ü!
paisesExtranjeros∏∏Ü ó
.∏∏ó ò
Select∏∏ò û
(∏∏û ü
p∏∏ü †
=>∏∏° £
p∏∏§ •
.∏∏• ¶
Id∏∏¶ ®
)∏∏® ©
.∏∏© ™
Contains∏∏™ ≤
(∏∏≤ ≥
rh∏∏≥ µ
.∏∏µ ∂
IdPais∏∏∂ º
)∏∏º Ω
)∏∏Ω æ
.∏∏æ ø
Sum∏∏ø ¬
(∏∏¬ √
rh∏∏√ ≈
=>∏∏∆ »
rh∏∏… À
.∏∏À Ã
Arribos∏∏Ã ”
)∏∏” ‘
,∏∏‘ ’!
registroHuespedes∏∏÷ Á
.∏∏Á Ë
Where∏∏Ë Ì
(∏∏Ì Ó
rh∏∏Ó 
=>∏∏Ò Û
rh∏∏Ù ˆ
.∏∏ˆ ˜

Continente∏∏˜ Å
==∏∏Ç Ñ
$str∏∏Ö ç
&&∏∏é ê
!∏∏ë í!
paisesExtranjeros∏∏í £
.∏∏£ §
Select∏∏§ ™
(∏∏™ ´
p∏∏´ ¨
=>∏∏≠ Ø
p∏∏∞ ±
.∏∏± ≤
Id∏∏≤ ¥
)∏∏¥ µ
.∏∏µ ∂
Contains∏∏∂ æ
(∏∏æ ø
rh∏∏ø ¡
.∏∏¡ ¬
IdPais∏∏¬ »
)∏∏» …
)∏∏…  
.∏∏  À
Sum∏∏À Œ
(∏∏Œ œ
rh∏∏œ —
=>∏∏“ ‘
rh∏∏’ ◊
.∏∏◊ ÿ
Pernoctaciones∏∏ÿ Ê
)∏∏Ê Á
)∏∏Á Ë
)∏∏Ë È
;∏∏È Í
return
ππ 
extranjeros
ππ 
;
ππ 
}
∫∫ 	
public
ªª 
List
ªª 
<
ªª  
ArriboPernoctacion
ªª &
>
ªª& '4
&ObtenerArribosPernoctacionesNacionales
ªª( N
(
ªªN O
List
ªªO S
<
ªªS T
RegistroHuesped
ªªT c
>
ªªc d
registroHuespedes
ªªe v
)
ªªv w
{
ºº 	
List
ΩΩ 
<
ΩΩ  
ArriboPernoctacion
ΩΩ #
>
ΩΩ# $

nacionales
ΩΩ% /
=
ΩΩ0 1
new
ΩΩ2 5
List
ΩΩ6 :
<
ΩΩ: ; 
ArriboPernoctacion
ΩΩ; M
>
ΩΩM N
(
ΩΩN O
)
ΩΩO P
;
ΩΩP Q
var
ææ 
regiones
ææ 
=
ææ 
_maestroDatos
ææ (
.
ææ( )
ObtenerRegiones
ææ) 8
(
ææ8 9
)
ææ9 :
;
ææ: ;

nacionales
øø 
.
øø 
Add
øø 
(
øø 
new
øø  
ArriboPernoctacion
øø 1
(
øø1 2
$str
øø2 O
,
øøO P
registroHuespedes
øøQ b
.
øøb c
Where
øøc h
(
øøh i
rh
øøi k
=>
øøl n
rh
øøo q
.
øøq r
IdRegionUbigeoøør Ä
==øøÅ É
MaestroSettingsøøÑ ì
.øøì î
Defaultøøî õ
.øøõ ú"
IdRegionUbigeoLimaøøú Æ
&&øøØ ±
rhøø≤ ¥
.øø¥ µ!
IdProvinciaUbigeoøøµ ∆
==øø« …
MaestroSettingsøø  Ÿ
.øøŸ ⁄
Defaultøø⁄ ·
.øø· ‚%
IdProvinciaUbigeoLimaøø‚ ˜
)øø˜ ¯
.øø¯ ˘
Sumøø˘ ¸
(øø¸ ˝
rhøø˝ ˇ
=>øøÄ Ç
rhøøÉ Ö
.øøÖ Ü
ArribosøøÜ ç
)øøç é
+øøè ê!
registroHuespedesøøë ¢
.øø¢ £
Whereøø£ ®
(øø® ©
rhøø© ´
=>øø¨ Æ
rhøøØ ±
.øø± ≤
IdRegionUbigeoøø≤ ¿
==øø¡ √
MaestroSettingsøøƒ ”
.øø” ‘
Defaultøø‘ €
.øø€ ‹$
IdRegionUbigeoCallaoøø‹ 
)øø Ò
.øøÒ Ú
SumøøÚ ı
(øøı ˆ
rhøøˆ ¯
=>øø˘ ˚
rhøø¸ ˛
.øø˛ ˇ
Arribosøøˇ Ü
)øøÜ á
,øøá à!
registroHuespedesøøâ ö
.øøö õ
Whereøøõ †
(øø† °
rhøø° £
=>øø§ ¶
rhøøß ©
.øø© ™
IdRegionUbigeoøø™ ∏
==øøπ ª
MaestroSettingsøøº À
.øøÀ Ã
DefaultøøÃ ”
.øø” ‘"
IdRegionUbigeoLimaøø‘ Ê
&&øøÁ È
rhøøÍ Ï
.øøÏ Ì!
IdProvinciaUbigeoøøÌ ˛
==øøˇ Å
MaestroSettingsøøÇ ë
.øøë í
Defaultøøí ô
.øøô ö%
IdProvinciaUbigeoLimaøøö Ø
)øøØ ∞
.øø∞ ±
Sumøø± ¥
(øø¥ µ
rhøøµ ∑
=>øø∏ ∫
rhøøª Ω
.øøΩ æ
Pernoctacionesøøæ Ã
)øøÃ Õ
+øøŒ œ!
registroHuespedesøø– ·
.øø· ‚
Whereøø‚ Á
(øøÁ Ë
rhøøË Í
=>øøÎ Ì
rhøøÓ 
.øø Ò
IdRegionUbigeoøøÒ ˇ
==øøÄ Ç
MaestroSettingsøøÉ í
.øøí ì
Defaultøøì ö
.øøö õ$
IdRegionUbigeoCallaoøøõ Ø
)øøØ ∞
.øø∞ ±
Sumøø± ¥
(øø¥ µ
rhøøµ ∑
=>øø∏ ∫
rhøøª Ω
.øøΩ æ
Pernoctacionesøøæ Ã
)øøÃ Õ
)øøÕ Œ
)øøŒ œ
;øøœ –

nacionales
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
new
¿¿  
ArriboPernoctacion
¿¿ 1
(
¿¿1 2
$str
¿¿2 C
,
¿¿C D
registroHuespedes
¿¿E V
.
¿¿V W
Where
¿¿W \
(
¿¿\ ]
rh
¿¿] _
=>
¿¿` b
rh
¿¿c e
.
¿¿e f
IdRegionUbigeo
¿¿f t
==
¿¿u w
MaestroSettings¿¿x á
.¿¿á à
Default¿¿à è
.¿¿è ê"
IdRegionUbigeoLima¿¿ê ¢
&&¿¿£ •
rh¿¿¶ ®
.¿¿® ©!
IdProvinciaUbigeo¿¿© ∫
!=¿¿ª Ω
MaestroSettings¿¿æ Õ
.¿¿Õ Œ
Default¿¿Œ ’
.¿¿’ ÷%
IdProvinciaUbigeoLima¿¿÷ Î
)¿¿Î Ï
.¿¿Ï Ì
Sum¿¿Ì 
(¿¿ Ò
rh¿¿Ò Û
=>¿¿Ù ˆ
rh¿¿˜ ˘
.¿¿˘ ˙
Arribos¿¿˙ Å
)¿¿Å Ç
,¿¿Ç É!
registroHuespedes¿¿Ñ ï
.¿¿ï ñ
Where¿¿ñ õ
(¿¿õ ú
rh¿¿ú û
=>¿¿ü °
rh¿¿¢ §
.¿¿§ •
IdRegionUbigeo¿¿• ≥
==¿¿¥ ∂
MaestroSettings¿¿∑ ∆
.¿¿∆ «
Default¿¿« Œ
.¿¿Œ œ"
IdRegionUbigeoLima¿¿œ ·
&&¿¿‚ ‰
rh¿¿Â Á
.¿¿Á Ë!
IdProvinciaUbigeo¿¿Ë ˘
!=¿¿˙ ¸
MaestroSettings¿¿˝ å
.¿¿å ç
Default¿¿ç î
.¿¿î ï%
IdProvinciaUbigeoLima¿¿ï ™
)¿¿™ ´
.¿¿´ ¨
Sum¿¿¨ Ø
(¿¿Ø ∞
rh¿¿∞ ≤
=>¿¿≥ µ
rh¿¿∂ ∏
.¿¿∏ π
Pernoctaciones¿¿π «
)¿¿« »
)¿¿» …
)¿¿…  
;¿¿  À
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
item
¡¡ 
in
¡¡  
regiones
¡¡! )
.
¡¡) *
Where
¡¡* /
(
¡¡/ 0
r
¡¡0 1
=>
¡¡2 4
r
¡¡5 6
.
¡¡6 7
	id_region
¡¡7 @
!=
¡¡A C
MaestroSettings
¡¡D S
.
¡¡S T
Default
¡¡T [
.
¡¡[ \ 
IdRegionUbigeoLima
¡¡\ n
||
¡¡o q
r
¡¡r s
.
¡¡s t
	id_region
¡¡t }
!=¡¡~ Ä
MaestroSettings¡¡Å ê
.¡¡ê ë
Default¡¡ë ò
.¡¡ò ô$
IdRegionUbigeoCallao¡¡ô ≠
)¡¡≠ Æ
)¡¡Æ Ø
{
¬¬ 

nacionales
√√ 
.
√√ 
Add
√√ 
(
√√ 
new
√√ " 
ArriboPernoctacion
√√# 5
(
√√5 6
)
√√6 7
{
ƒƒ 
Nombre
≈≈ 
=
≈≈ 
CultureInfo
≈≈ (
.
≈≈( )
CurrentCulture
≈≈) 7
.
≈≈7 8
TextInfo
≈≈8 @
.
≈≈@ A
ToTitleCase
≈≈A L
(
≈≈L M
item
≈≈M Q
.
≈≈Q R
descripcion_corta
≈≈R c
.
≈≈c d
ToLower
≈≈d k
(
≈≈k l
)
≈≈l m
)
≈≈m n
,
≈≈n o
Arribo
∆∆ 
=
∆∆ 
registroHuespedes
∆∆ .
.
∆∆. /
Where
∆∆/ 4
(
∆∆4 5
rh
∆∆5 7
=>
∆∆8 :
rh
∆∆; =
.
∆∆= >
IdRegionUbigeo
∆∆> L
==
∆∆M O
item
∆∆P T
.
∆∆T U
	id_region
∆∆U ^
)
∆∆^ _
.
∆∆_ `
Sum
∆∆` c
(
∆∆c d
rh
∆∆d f
=>
∆∆g i
rh
∆∆j l
.
∆∆l m
Arribos
∆∆m t
)
∆∆t u
,
∆∆u v
Pernoctacion
««  
=
««! "
registroHuespedes
««# 4
.
««4 5
Where
««5 :
(
««: ;
rh
««; =
=>
««> @
rh
««A C
.
««C D
IdRegionUbigeo
««D R
==
««S U
item
««V Z
.
««Z [
	id_region
««[ d
)
««d e
.
««e f
Sum
««f i
(
««i j
rh
««j l
=>
««m o
rh
««p r
.
««r s
Pernoctaciones««s Å
)««Å Ç
}
»» 
)
»» 
;
»» 
}
…… 
return
   

nacionales
   
;
   
}
ÀÀ 	
public
ÃÃ 
MotivoViaje
ÃÃ  
ObtenerMotivoViaje
ÃÃ -
(
ÃÃ- .
string
ÃÃ. 4
detalle
ÃÃ5 <
,
ÃÃ< =
List
ÃÃ> B
<
ÃÃB C
RegistroHuesped
ÃÃC R
>
ÃÃR S
registroHuespedes
ÃÃT e
)
ÃÃe f
{
ÕÕ 	
MotivoViaje
ŒŒ 
motivoViaje
ŒŒ #
=
ŒŒ$ %
new
ŒŒ& )
MotivoViaje
ŒŒ* 5
(
ŒŒ5 6
)
ŒŒ6 7
{
œœ 
Nombre
–– 
=
–– 
detalle
––  
,
––  !
Total
—— 
=
—— 
registroHuespedes
—— )
.
——) *
Sum
——* -
(
——- .
rh
——. 0
=>
——1 3
rh
——4 6
.
——6 7
Arribos
——7 >
)
——> ?
,
——? @

Vacaciones
““ 
=
““ 
registroHuespedes
““ .
.
““. /
Where
““/ 4
(
““4 5
rh
““5 7
=>
““8 :
rh
““; =
.
““= >
IdMotivoViaje
““> K
==
““L N
HotelSettings
““O \
.
““\ ]
Default
““] d
.
““d e6
'IdDetalleMaestroMotivoDeViajeVacaciones““e å
)““å ç
.““ç é
Sum““é ë
(““ë í
rh““í î
=>““ï ó
rh““ò ö
.““ö õ
Arribos““õ ¢
)““¢ £
,““£ §
Visita
”” 
=
”” 
registroHuespedes
”” *
.
””* +
Where
””+ 0
(
””0 1
rh
””1 3
=>
””4 6
rh
””7 9
.
””9 :
IdMotivoViaje
””: G
==
””H J
HotelSettings
””K X
.
””X Y
Default
””Y `
.
””` a2
#IdDetalleMaestroMotivoDeViajeVisita””a Ñ
)””Ñ Ö
.””Ö Ü
Sum””Ü â
(””â ä
rh””ä å
=>””ç è
rh””ê í
.””í ì
Arribos””ì ö
)””ö õ
,””õ ú
	Educacion
‘‘ 
=
‘‘ 
registroHuespedes
‘‘ -
.
‘‘- .
Where
‘‘. 3
(
‘‘3 4
rh
‘‘4 6
=>
‘‘7 9
rh
‘‘: <
.
‘‘< =
IdMotivoViaje
‘‘= J
==
‘‘K M
HotelSettings
‘‘N [
.
‘‘[ \
Default
‘‘\ c
.
‘‘c d5
&IdDetalleMaestroMotivoDeViajeEducacion‘‘d ä
)‘‘ä ã
.‘‘ã å
Sum‘‘å è
(‘‘è ê
rh‘‘ê í
=>‘‘ì ï
rh‘‘ñ ò
.‘‘ò ô
Arribos‘‘ô †
)‘‘† °
,‘‘° ¢
Salud
’’ 
=
’’ 
registroHuespedes
’’ )
.
’’) *
Where
’’* /
(
’’/ 0
rh
’’0 2
=>
’’3 5
rh
’’6 8
.
’’8 9
IdMotivoViaje
’’9 F
==
’’G I
HotelSettings
’’J W
.
’’W X
Default
’’X _
.
’’_ `1
"IdDetalleMaestroMotivoDeViajeSalud’’` Ç
)’’Ç É
.’’É Ñ
Sum’’Ñ á
(’’á à
rh’’à ä
=>’’ã ç
rh’’é ê
.’’ê ë
Arribos’’ë ò
)’’ò ô
,’’ô ö
Religion
÷÷ 
=
÷÷ 
registroHuespedes
÷÷ ,
.
÷÷, -
Where
÷÷- 2
(
÷÷2 3
rh
÷÷3 5
=>
÷÷6 8
rh
÷÷9 ;
.
÷÷; <
IdMotivoViaje
÷÷< I
==
÷÷J L
HotelSettings
÷÷M Z
.
÷÷Z [
Default
÷÷[ b
.
÷÷b c4
%IdDetalleMaestroMotivoDeViajeReligion÷÷c à
)÷÷à â
.÷÷â ä
Sum÷÷ä ç
(÷÷ç é
rh÷÷é ê
=>÷÷ë ì
rh÷÷î ñ
.÷÷ñ ó
Arribos÷÷ó û
)÷÷û ü
,÷÷ü †
Compras
◊◊ 
=
◊◊ 
registroHuespedes
◊◊ +
.
◊◊+ ,
Where
◊◊, 1
(
◊◊1 2
rh
◊◊2 4
=>
◊◊5 7
rh
◊◊8 :
.
◊◊: ;
IdMotivoViaje
◊◊; H
==
◊◊I K
HotelSettings
◊◊L Y
.
◊◊Y Z
Default
◊◊Z a
.
◊◊a b3
$IdDetalleMaestroMotivoDeViajeCompras◊◊b Ü
)◊◊Ü á
.◊◊á à
Sum◊◊à ã
(◊◊ã å
rh◊◊å é
=>◊◊è ë
rh◊◊í î
.◊◊î ï
Arribos◊◊ï ú
)◊◊ú ù
,◊◊ù û
Negocios
ÿÿ 
=
ÿÿ 
registroHuespedes
ÿÿ ,
.
ÿÿ, -
Where
ÿÿ- 2
(
ÿÿ2 3
rh
ÿÿ3 5
=>
ÿÿ6 8
rh
ÿÿ9 ;
.
ÿÿ; <
IdMotivoViaje
ÿÿ< I
==
ÿÿJ L
HotelSettings
ÿÿM Z
.
ÿÿZ [
Default
ÿÿ[ b
.
ÿÿb c4
%IdDetalleMaestroMotivoDeViajeNegociosÿÿc à
)ÿÿà â
.ÿÿâ ä
Sumÿÿä ç
(ÿÿç é
rhÿÿé ê
=>ÿÿë ì
rhÿÿî ñ
.ÿÿñ ó
Arribosÿÿó û
)ÿÿû ü
,ÿÿü †
Otros
ŸŸ 
=
ŸŸ 
registroHuespedes
ŸŸ )
.
ŸŸ) *
Where
ŸŸ* /
(
ŸŸ/ 0
rh
ŸŸ0 2
=>
ŸŸ3 5
rh
ŸŸ6 8
.
ŸŸ8 9
IdMotivoViaje
ŸŸ9 F
==
ŸŸG I
HotelSettings
ŸŸJ W
.
ŸŸW X
Default
ŸŸX _
.
ŸŸ_ `1
"IdDetalleMaestroMotivoDeViajeOtrosŸŸ` Ç
)ŸŸÇ É
.ŸŸÉ Ñ
SumŸŸÑ á
(ŸŸá à
rhŸŸà ä
=>ŸŸã ç
rhŸŸé ê
.ŸŸê ë
ArribosŸŸë ò
)ŸŸò ô
,ŸŸô ö
}
⁄⁄ 
;
⁄⁄ 
return
€€ 
motivoViaje
€€ 
;
€€ 
}
‹‹ 	
public
›› 
List
›› 
<
›› 
	Facturada
›› 
>
›› 
ObtenerFacturadas
›› 0
(
››0 1
int
››1 4
idEstablecimiento
››5 F
,
››F G
DateTime
››H P

fechaDesde
››Q [
,
››[ \
DateTime
››] e

fechaHasta
››f p
)
››p q
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
List
·· 
<
·· 
	Facturada
·· 
>
·· 

facturadas
··  *
=
··+ ,!
_hotelReporte_Datos
··- @
.
··@ A
ObtenerFacturadas
··A R
(
··R S
idEstablecimiento
··S d
,
··d e

fechaDesde
··f p
,
··p q

fechaHasta
··r |
)
··| }
.
··} ~
ToList··~ Ñ
(··Ñ Ö
)··Ö Ü
;··Ü á
return
‚‚ 

facturadas
‚‚ !
;
‚‚! "
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
e
‰‰ 
)
‰‰ 
{
ÂÂ 
throw
ÊÊ 
new
ÊÊ 
LogicaException
ÊÊ )
(
ÊÊ) *
$str
ÊÊ* P
,
ÊÊP Q
e
ÊÊR S
)
ÊÊS T
;
ÊÊT U
}
ÁÁ 
}
ËË 	
public
ÈÈ 
List
ÈÈ 
<
ÈÈ 
NoFacturada
ÈÈ 
>
ÈÈ  !
ObtenerNoFacturadas
ÈÈ! 4
(
ÈÈ4 5
int
ÈÈ5 8
idEstablecimiento
ÈÈ9 J
,
ÈÈJ K
DateTime
ÈÈL T

fechaDesde
ÈÈU _
,
ÈÈ_ `
DateTime
ÈÈa i

fechaHasta
ÈÈj t
)
ÈÈt u
{
ÍÍ 	
try
ÎÎ 
{
ÏÏ 
List
ÌÌ 
<
ÌÌ 
NoFacturada
ÌÌ  
>
ÌÌ  !
noFacturadas
ÌÌ" .
=
ÌÌ/ 0!
_hotelReporte_Datos
ÌÌ1 D
.
ÌÌD E!
ObtenerNoFacturadas
ÌÌE X
(
ÌÌX Y
idEstablecimiento
ÌÌY j
,
ÌÌj k

fechaDesde
ÌÌl v
,
ÌÌv w

fechaHastaÌÌx Ç
)ÌÌÇ É
.ÌÌÉ Ñ
ToListÌÌÑ ä
(ÌÌä ã
)ÌÌã å
;ÌÌå ç
return
ÓÓ 
noFacturadas
ÓÓ #
;
ÓÓ# $
}
ÔÔ 
catch
 
(
 
	Exception
 
e
 
)
 
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ 
LogicaException
ÚÚ )
(
ÚÚ) *
$str
ÚÚ* S
,
ÚÚS T
e
ÚÚU V
)
ÚÚV W
;
ÚÚW X
}
ÛÛ 
}
ÙÙ 	
public
ıı 
List
ıı 
<
ıı 
	Incidente
ıı 
>
ıı 
ObtenerIncidentes
ıı 0
(
ıı0 1
int
ıı1 4
idEstablecimiento
ıı5 F
,
ııF G
DateTime
ııH P

fechaDesde
ııQ [
,
ıı[ \
DateTime
ıı] e

fechaHasta
ııf p
)
ııp q
{
ˆˆ 	
try
˜˜ 
{
¯¯ 
List
˘˘ 
<
˘˘ 
	Incidente
˘˘ 
>
˘˘ 

incidentes
˘˘  *
=
˘˘+ ,!
_hotelReporte_Datos
˘˘- @
.
˘˘@ A
ObtenerIncidentes
˘˘A R
(
˘˘R S
idEstablecimiento
˘˘S d
,
˘˘d e

fechaDesde
˘˘f p
,
˘˘p q

fechaHasta
˘˘r |
)
˘˘| }
.
˘˘} ~
ToList˘˘~ Ñ
(˘˘Ñ Ö
)˘˘Ö Ü
;˘˘Ü á
return
˙˙ 

incidentes
˙˙ !
;
˙˙! "
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
e
¸¸ 
)
¸¸ 
{
˝˝ 
throw
˛˛ 
new
˛˛ 
LogicaException
˛˛ )
(
˛˛) *
$str
˛˛* P
,
˛˛P Q
e
˛˛R S
)
˛˛S T
;
˛˛T U
}
ˇˇ 
}
ÄÄ 	
public
ÅÅ 
List
ÅÅ 
<
ÅÅ 
Reserva
ÅÅ 
>
ÅÅ (
ObtenerReservasConfirmadas
ÅÅ 7
(
ÅÅ7 8
int
ÅÅ8 ;
idEstablecimiento
ÅÅ< M
,
ÅÅM N
DateTime
ÅÅO W

fechaDesde
ÅÅX b
,
ÅÅb c
DateTime
ÅÅd l

fechaHasta
ÅÅm w
,
ÅÅw x
bool
ÅÅy }#
todosTiposHabitacionÅÅ~ í
,ÅÅí ì
intÅÅî ó
[ÅÅó ò
]ÅÅò ô"
idsTiposHabitacionÅÅö ¨
)ÅÅ¨ ≠
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
List
ÖÖ 
<
ÖÖ 
Reserva
ÖÖ 
>
ÖÖ !
reservasConfirmadas
ÖÖ 1
=
ÖÖ2 3"
todosTiposHabitacion
ÖÖ4 H
?
ÖÖI J!
_hotelReporte_Datos
ÖÖK ^
.
ÖÖ^ _(
ObtenerReservasConfirmadas
ÖÖ_ y
(
ÖÖy z 
idEstablecimientoÖÖz ã
,ÖÖã å

fechaDesdeÖÖç ó
,ÖÖó ò

fechaHastaÖÖô £
)ÖÖ£ §
.ÖÖ§ •
ToListÖÖ• ´
(ÖÖ´ ¨
)ÖÖ¨ ≠
:ÖÖÆ Ø#
_hotelReporte_DatosÖÖ∞ √
.ÖÖ√ ƒ;
+ObtenerReservasConfirmadasPorTipoHabitacionÖÖƒ Ô
(ÖÖÔ !
idEstablecimientoÖÖ Å
,ÖÖÅ Ç

fechaDesdeÖÖÉ ç
,ÖÖç é

fechaHastaÖÖè ô
,ÖÖô ö"
idsTiposHabitacionÖÖõ ≠
)ÖÖ≠ Æ
.ÖÖÆ Ø
ToListÖÖØ µ
(ÖÖµ ∂
)ÖÖ∂ ∑
;ÖÖ∑ ∏
return
ÜÜ !
reservasConfirmadas
ÜÜ *
;
ÜÜ* +
}
áá 
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 
throw
ää 
new
ää 
LogicaException
ää )
(
ää) *
$str
ää* P
,
ääP Q
e
ääR S
)
ääS T
;
ääT U
}
ãã 
}
åå 	
}
‡‡ 
}·· ‚n
ED:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
private 
readonly 
IHotelRepositorio *
_hotelRepositorio+ <
;< =
private 
readonly 
IActor_Repositorio +
_actor_Repositorio, >
;> ?
private 
readonly 
IMaestroRepositorio ,
_maestroRepositorio- @
;@ A
private 
readonly  
IConceptoRepositorio - 
_conceptoRepositorio. B
;B C
private 
readonly #
ITransaccionRepositorio 0#
_transaccionRepositorio1 H
;H I
private 
readonly 
IConceptoLogica (
_logicaConcepto) 8
;8 9
private 
readonly 
IOperacionLogica )
_logicaOperacion* :
;: ;
private   
readonly   
IActorNegocioLogica   ,
_logicaActorNegocio  - @
;  @ A
private!! 
readonly!! 
IPermisos_Logica!! )
_permisos_Logica!!* :
;!!: ;
private"" 
readonly"" $
ICodigosOperacion_Logica"" 1$
_codigosOperacion_Logica""2 J
;""J K
private## 
readonly## (
IEstablecimiento_Repositorio## 5!
_establecimientoDatos##6 K
;##K L
private$$ 
readonly$$ $
ICentroDeAtencion_Logica$$ 1#
_centroDeAtencionLogica$$2 I
;$$I J
private%% 
readonly%% 
IPrecioRepositorio%% +
_precioRepositorio%%, >
;%%> ?
private&& 
readonly&& $
IInventarioActual_Logica&& 1#
_inventarioActualLogica&&2 I
;&&I J
public)) 
HotelLogica)) 
()) 
IHotelRepositorio)) ,
hotelRepositorio))- =
,))= >
IMaestroRepositorio))? R
maestroRepositorio))S e
,))e f 
IConceptoRepositorio))g { 
conceptoRepositorio	))| è
,
))è ê%
ITransaccionRepositorio
))ë ®$
transaccionRepositorio
))© ø
,
))ø ¿%
IFacturacionRepositorio
))¡ ÿ$
facturacionRepositorio
))Ÿ Ô
,
))Ô  
IPrecioRepositorio
))Ò É
precioRepositorio
))Ñ ï
,
))ï ñ&
ICodigosOperacion_Logica
))ó Ø%
codigosOperacion_Logica
))∞ «
,
))« »
IPermisos_Logica
))… Ÿ
permisos_Logica
))⁄ È
,
))È Í!
IActorNegocioLogica
))Î ˛ 
logicaActorNegocio
))ˇ ë
,
))ë í*
IEstablecimiento_Repositorio
))ì Ø"
establecimientoDatos
))∞ ƒ
,
))ƒ ≈&
ICentroDeAtencion_Logica
))∆ ﬁ$
centroDeAtencionLogica
))ﬂ ı
,
))ı ˆ 
IActor_Repositorio
))˜ â
actor_Repositorio
))ä õ
,
))õ ú
IActorRepositorio
))ù Æ
actorRepositorio
))Ø ø
,
))ø ¿&
IInventarioActual_Logica
))¡ Ÿ$
inventarioActualLogica
))⁄ 
)
)) Ò
{** 	#
_transaccionRepositorio++ #
=++$ %"
transaccionRepositorio++& <
;++< = 
_conceptoRepositorio,,  
=,,! "
conceptoRepositorio,,# 6
;,,6 7
_maestroRepositorio-- 
=--  !
maestroRepositorio--" 4
;--4 5
_hotelRepositorio.. 
=.. 
hotelRepositorio..  0
;..0 1
_precioRepositorio// 
=//  
precioRepositorio//! 2
;//2 3$
_codigosOperacion_Logica00 $
=00% &#
codigosOperacion_Logica00' >
;00> ?
_logicaOperacion11 
=11 
new11 "
OperacionLogica11# 2
(112 3#
_transaccionRepositorio113 J
,11J K
_maestroRepositorio11L _
,11_ `
actorRepositorio11a q
,11q r!
_conceptoRepositorio	11s á
,
11á à$
facturacionRepositorio
11â ü
,
11ü †&
_codigosOperacion_Logica
11° π
,
11π ∫
permisos_Logica
11ª  
,
11  À
null
11Ã –
,
11– —
actor_Repositorio
11“ „
,
11„ ‰
null
11Â È
,
11È Í
null
11Î Ô
)
11Ô 
;
11 Ò
_logicaActorNegocio22 
=22  !
logicaActorNegocio22" 4
;224 5
_logicaConcepto33 
=33 
new33 !
ConceptoLogica33" 0
(330 1#
_transaccionRepositorio331 H
,33H I 
_conceptoRepositorio33J ^
,33^ _
_maestroRepositorio33` s
,33s t
_precioRepositorio	33u á
,
33á à
actorRepositorio
33â ô
,
33ô ö!
_logicaActorNegocio
33õ Æ
,
33Æ Ø$
inventarioActualLogica
33∞ ∆
)
33∆ «
;
33« »
_permisos_Logica44 
=44 
permisos_Logica44 .
;44. /!
_establecimientoDatos55 !
=55" # 
establecimientoDatos55$ 8
;558 9#
_centroDeAtencionLogica66 #
=66$ %"
centroDeAtencionLogica66& <
;66< =
_actor_Repositorio77 
=77  
actor_Repositorio77! 2
;772 3#
_inventarioActualLogica88 #
=88$ %"
inventarioActualLogica88& <
;88< =
}99 	
public<< 
List<< 
<<< 
ItemGenerico<<  
><<  !
ObtenerTipoCamas<<" 2
(<<2 3
)<<3 4
{== 	
try>> 
{?? 
return@@ 
_hotelRepositorio@@ (
.@@( )
ObtenerTiposCama@@) 9
(@@9 :
)@@: ;
.@@; <
ToList@@< B
(@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
	ExceptionBB 
eBB 
)BB 
{CC 
throwDD 
newDD 
LogicaExceptionDD )
(DD) *
$strDD* Z
,DDZ [
eDD\ ]
)DD] ^
;DD^ _
}EE 
}FF 	
publicJJ 
OperationResultJJ !
ActualizarComplementoJJ 4
(JJ4 5
ComplementoJJ5 @
complementoJJA L
)JJL M
{KK 	
tryLL 
{MM 
returnNN 
nullNN 
;NN 
}OO 
catchPP 
(PP 
	ExceptionPP 
ePP 
)PP 
{QQ 
throwRR 
eRR 
;RR 
}SS 
}TT 	
publicUU 
OperationResultUU 
GuardarComplementoUU 1
(UU1 2
ComplementoUU2 =
complementoUU> I
)UUI J
{VV 	
tryWW 
{XX 
Detalle_maestroYY 
nuevoComplementoYY  0
=YY1 2
newYY3 6
Detalle_maestroYY7 F
(YYF G
)YYG H
{ZZ 
nombre[[ 
=[[ 
complemento[[ (
.[[( )
Nombre[[) /
,[[/ 0
codigo\\ 
=\\ 
complemento\\ (
.\\( )
Nombre\\) /
,\\/ 0
valor]] 
=]] 
complemento]] '
.]]' (
Nombre]]( .
}^^ 
;^^ 
foreach__ 
(__ 
var__ 
valor__ "
in__# %
complemento__& 1
.__1 2
Valores__2 9
)__9 :
{`` 
varaa !
nuevoValorComplementoaa -
=aa. /
newaa0 3
Detalle_maestroaa4 C
(aaC D
)aaD E
{bb 
nombrecc 
=cc  
valorcc! &
.cc& '
Nombrecc' -
,cc- .
codigodd 
=dd  
valordd! &
.dd& '
Nombredd' -
,dd- .
valoree 
=ee 
valoree  %
.ee% &
Nombreee& ,
,ee, -
}ff 
;ff 
nuevoComplementogg $
.gg$ %$
Detalle_detalle_maestro1gg% =
.gg= >
Addgg> A
(ggA B
newggB E#
Detalle_detalle_maestroggF ]
(gg] ^
)gg^ _
{gg` a
Detalle_maestro1ggb r
=ggs t"
nuevoValorComplemento	ggu ä
}
ggã å
)
ggå ç
;
ggç é
}ii 
returnjj 
nulljj 
;jj 
}kk 
catchll 
(ll 
	Exceptionll 
ell 
)ll 
{mm 
thrownn 
enn 
;nn 
}oo 
}pp 	
publictt 
ItemGenericott +
ObtenerUltimoMotivoViajeHuespedtt ;
(tt; <
inttt< ?
	idHuespedtt@ I
)ttI J
{uu 	
tryvv 
{ww 
ItemGenericoxx 
motivoViajexx (
=xx) *
nullxx+ /
;xx/ 0
ifyy 
(yy 
	idHuespedyy 
!=yy  
ActorSettingsyy! .
.yy. /
Defaultyy/ 6
.yy6 7
IdClienteGenericoyy7 H
)yyH I
{zz 
motivoViaje{{ 
={{  !
_hotelRepositorio{{" 3
.{{3 4+
ObtenerUltimoMotivoViajeHuesped{{4 S
({{S T
	idHuesped{{T ]
){{] ^
;{{^ _
}|| 
return}} 
motivoViaje}} "
;}}" #
}~~ 
catch 
( 
	Exception 
e 
) 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* R
,
ÅÅR S
e
ÅÅT U
)
ÅÅU V
;
ÅÅV W
}
ÇÇ 
}
ÉÉ 	
public
ÑÑ 
OperationResult
ÑÑ 
AgregarHuesped
ÑÑ -
(
ÑÑ- .
long
ÑÑ. 2

idAtencion
ÑÑ3 =
,
ÑÑ= >
int
ÑÑ? B
idActorComercial
ÑÑC S
,
ÑÑS T
int
ÑÑU X
idMotivoViaje
ÑÑY f
,
ÑÑf g
bool
ÑÑh l
	esTitular
ÑÑm v
)
ÑÑv w
{
ÖÖ 	
try
ÜÜ 
{
áá 
OperationResult
àà 
	resultado
àà  )
=
àà* +
new
àà, /
OperationResult
àà0 ?
(
àà? @
)
àà@ A
;
ààA B+
Actor_negocio_por_transaccion
ââ -*
actorComercialPorTransaccion
ââ. J
=
ââK L
new
ââM P+
Actor_negocio_por_transaccion
ââQ n
(
âân o
)
ââo p
{
ää 
id_transaccion
ãã "
=
ãã# $

idAtencion
ãã% /
,
ãã/ 0
id_actor_negocio
åå $
=
åå% &
idActorComercial
åå' 7
,
åå7 8
id_rol
çç 
=
çç 
HotelSettings
çç *
.
çç* +
Default
çç+ 2
.
çç2 3
IdRolHuesped
çç3 ?
,
çç? @ 
id_detalle_maestro
éé &
=
éé' (
idMotivoViaje
éé) 6
,
éé6 7
extension_json
èè "
=
èè# $
$str
èè% 6
+
èè7 8
	esTitular
èè9 B
.
èèB C
ToString
èèC K
(
èèK L
)
èèL M
.
èèM N
ToLower
èèN U
(
èèU V
)
èèV W
+
èèX Y
$str
èèZ `
}
êê 
;
êê 
	resultado
ëë 
=
ëë 
_hotelRepositorio
ëë -
.
ëë- .-
CrearActorNegocioPorTransaccion
ëë. M
(
ëëM N*
actorComercialPorTransaccion
ëëN j
)
ëëj k
;
ëëk l
return
íí 
	resultado
íí  
;
íí  !
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ )
(
ññ) *
$str
ññ* V
,
ññV W
e
ññX Y
)
ññY Z
;
ññZ [
}
óó 
}
òò 	
public
ôô 
OperationResult
ôô #
CambiarTitularHuesped
ôô 4
(
ôô4 5
int
ôô5 8
idHuespedCambiado
ôô9 J
,
ôôJ K
int
ôôL O#
idHuespedNuevoTitular
ôôP e
)
ôôe f
{
öö 	
try
õõ 
{
úú 
OperationResult
ùù 
	resultado
ùù  )
=
ùù* +
_hotelRepositorio
ùù, =
.
ùù= >#
CambiarTitularHuesped
ùù> S
(
ùùS T
idHuespedCambiado
ùùT e
,
ùùe f#
idHuespedNuevoTitular
ùùg |
)
ùù| }
;
ùù} ~
return
ûû 
	resultado
ûû  
;
ûû  !
}
üü 
catch
†† 
(
†† 
	Exception
†† 
e
†† 
)
†† 
{
°° 
throw
¢¢ 
new
¢¢ 
LogicaException
¢¢ )
(
¢¢) *
$str
¢¢* V
,
¢¢V W
e
¢¢X Y
)
¢¢Y Z
;
¢¢Z [
}
££ 
}
§§ 	
public
•• 
OperationResult
•• 
EliminarHuesped
•• .
(
••. /
int
••/ 2
	idHuesped
••3 <
)
••< =
{
¶¶ 	
try
ßß 
{
®® 
OperationResult
©© 
	resultado
©©  )
=
©©* +
_hotelRepositorio
©©, =
.
©©= >0
"EliminarActorNegocioPorTransaccion
©©> `
(
©©` a
	idHuesped
©©a j
)
©©j k
;
©©k l
return
™™ 
	resultado
™™  
;
™™  !
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
e
¨¨ 
)
¨¨ 
{
≠≠ 
throw
ÆÆ 
new
ÆÆ 
LogicaException
ÆÆ )
(
ÆÆ) *
$str
ÆÆ* V
,
ÆÆV W
e
ÆÆX Y
)
ÆÆY Z
;
ÆÆZ [
}
ØØ 
}
∞∞ 	
}
¥¥ 
}µµ îW
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelAmbiente_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
List 
< 
ItemGenerico  
>  !B
6ObtenerAmbientesVigentesPorEstablecimientoSimplificado" X
(X Y
intY \
idEstablecimiento] n
)n o
{ 	
try 
{ 
return 
_hotelRepositorio (
.( )B
6ObtenerAmbientesVigentesPorEstablecimientoSimplificado) _
(_ `
idEstablecimiento` q
)q r
.r s
ToLists y
(y z
)z {
;{ |
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* X
,X Y
eZ [
)[ \
;\ ]
} 
} 	
public 
List 
< 
AmbienteHotel !
>! "3
'ObtenerAmbientesHotelPorEstablecimiento# J
(J K
intK N
idEstablecimientoO `
)` a
{ 	
try 
{ 
return 
_hotelRepositorio (
.( )3
'ObtenerAmbientesHotelPorEstablecimiento) P
(P Q
idEstablecimientoQ b
)b c
.c d
ToListd j
(j k
)k l
;l m
} 
catch   
(   
	Exception   
e   
)   
{!! 
throw"" 
new"" 
LogicaException"" )
("") *
$str""* O
,""O P
e""Q R
)""R S
;""S T
}## 
}$$ 	
private%% 
Actor_negocio%% '
GenerarAmbienteActorNegocio%% 9
(%%9 :
AmbienteHotel%%: G
ambiente%%H P
)%%P Q
{&& 	
try'' 
{(( 
DateTime)) 
fechaActual)) $
=))% &
DateTimeUtil))' 3
.))3 4
FechaActual))4 ?
())? @
)))@ A
;))A B
DateTime** 
fechaFin** !
=**" #
fechaActual**$ /
.**/ 0
AddYears**0 8
(**8 9
ActorSettings**9 F
.**F G
Default**G N
.**N OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	**O Ü
)
**Ü á
;
**á à
Actor_negocio,, #
_habitacionActorNegocio,, 5
=,,6 7
new,,8 ;
Actor_negocio,,< I
(,,I J
HotelSettings,,J W
.,,W X
Default,,X _
.,,_ `
IdRolAmbienteHotel,,` r
,,,r s
fechaActual,,t 
,	,, Ä
fechaFin
,,Å â
,
,,â ä
$str
,,ã ç
,
,,ç é
ambiente
,,è ó
.
,,ó ò
	EsVigente
,,ò °
,
,,° ¢
ambiente
,,£ ´
.
,,´ ¨
Establecimiento
,,¨ ª
.
,,ª º
Id
,,º æ
,
,,æ ø
false
,,¿ ≈
,
,,≈ ∆
$str
,,« …
)
,,…  
;
,,  À
Actor// 
actor// 
=// 
new// !
Actor//" '
(//' (
HotelSettings//( 5
.//5 6
Default//6 =
.//= >;
/IdDetalleMaestroDocumentoIdentidadAmbienteHotel//> m
,//m n
fechaActual//o z
,//z {
ambiente	//| Ñ
.
//Ñ Ö
Codigo
//Ö ã
,
//ã å
ambiente
//ç ï
.
//ï ñ
Nombre
//ñ ú
,
//ú ù
$str
//û †
,
//† °
$str
//¢ §
,
//§ •
HotelSettings
//¶ ≥
.
//≥ ¥
Default
//¥ ª
.
//ª º&
IdTipoActorAmbienteHotel
//º ‘
,
//‘ ’
ActorSettings
//÷ „
.
//„ ‰
Default
//‰ Î
.
//Î Ï#
IdFotoActorPorDefecto
//Ï Å
,
//Å Ç
HotelSettings
//É ê
.
//ê ë
Default
//ë ò
.
//ò ô'
IdClaseActorAmbienteHotel
//ô ≤
,
//≤ ≥
HotelSettings
//¥ ¡
.
//¡ ¬
Default
//¬ …
.
//…  (
IdEstadoLegalAmbienteHotel
//  ‰
,
//‰ Â
$str
//Ê Ë
,
//Ë È
$str
//Í Ï
,
//Ï Ì
$str
//Ó 
)
// Ò
;
//Ò Ú#
_habitacionActorNegocio11 '
.11' (
Actor11( -
=11. /
actor110 5
;115 6
return22 #
_habitacionActorNegocio22 .
;22. /
}33 
catch44 
(44 
	Exception44 
e44 
)44 
{55 
throw77 
new77 
LogicaException77 )
(77) *
$str77* ^
,77^ _
e77` a
)77a b
;77b c
}88 
}99 	
private:: 
void:: .
"EstablecerIdActorNegocioParaEditar:: 7
(::7 8
Actor_negocio::8 E 
ambienteActorNegocio::F Z
,::Z [
AmbienteHotel::\ i
ambiente::j r
)::r s
{;; 	
try<< 
{==  
ambienteActorNegocio>> $
.>>$ %
id>>% '
=>>( )
ambiente>>* 2
.>>2 3
Id>>3 5
;>>5 6 
ambienteActorNegocio?? $
.??$ %
id_actor??% -
=??. /
ambiente??0 8
.??8 9
IdActor??9 @
;??@ A 
ambienteActorNegocio@@ $
.@@$ %
Actor@@% *
.@@* +
id@@+ -
=@@. /
ambiente@@0 8
.@@8 9
IdActor@@9 @
;@@@ A
}AA 
catchBB 
(BB 
	ExceptionBB 
eBB 
)BB 
{CC 
throwDD 
newDD 
LogicaExceptionDD )
(DD) *
$strDD* k
,DDk l
eDDm n
)DDn o
;DDo p
}EE 
}FF 	
publicGG 
OperationResultGG 
CrearAmbienteGG ,
(GG, -
AmbienteHotelGG- :
ambienteGG; C
)GGC D
{HH 	
tryII 
{JJ 
ifKK 
(KK 
_hotelRepositorioKK %
.KK% &1
%ExisteNombreAmbienteEnEstablecimientoKK& K
(KKK L
ambienteKKL T
.KKT U
NombreKKU [
,KK[ \
ambienteKK] e
.KKe f
EstablecimientoKKf u
.KKu v
IdKKv x
)KKx y
)KKy z
{LL 
throwMM 
newMM 
LogicaExceptionMM -
(MM- .
$strMM. u
)MMu v
;MMv w
}NN 
varOO  
ambienteActorNegocioOO (
=OO) *'
GenerarAmbienteActorNegocioOO+ F
(OOF G
ambienteOOG O
)OOO P
;OOP Q
varPP 
	resultadoPP 
=PP 
_actor_RepositorioPP  2
.PP2 3
CrearActorNegocioPP3 D
(PPD E 
ambienteActorNegocioPPE Y
)PPY Z
;PPZ [
ambienteRR 
.RR 
IdRR 
=RR  
ambienteActorNegocioRR 2
.RR2 3
idRR3 5
;RR5 6
ambienteSS 
.SS 
IdActorSS  
=SS! " 
ambienteActorNegocioSS# 7
.SS7 8
id_actorSS8 @
;SS@ A
	resultadoTT 
.TT 
informationTT %
=TT& '
ambienteTT( 0
;TT0 1
returnUU 
	resultadoUU  
;UU  !
}VV 
catchWW 
(WW 
	ExceptionWW 
eWW 
)WW 
{XX 
throwYY 
newYY 
LogicaExceptionYY )
(YY) *
$strYY* P
,YYP Q
eYYR S
)YYS T
;YYT U
}ZZ 
}[[ 	
public\\ 
OperationResult\\ 
EditarAmbiente\\ -
(\\- .
AmbienteHotel\\. ;
ambiente\\< D
)\\D E
{]] 	
try^^ 
{__ 
if`` 
(`` 
_hotelRepositorio`` %
.``% &@
4ExisteNombreAmbienteEnEstablecimientoExceptoAmbiente``& Z
(``Z [
ambiente``[ c
.``c d
Nombre``d j
,``j k
ambiente``l t
.``t u
Establecimiento	``u Ñ
.
``Ñ Ö
Id
``Ö á
,
``á à
ambiente
``â ë
.
``ë í
Id
``í î
)
``î ï
)
``ï ñ
{aa 
throwbb 
newbb 
LogicaExceptionbb -
(bb- .
$strbb. v
)bbv w
;bbw x
}cc 
vardd "
habitacionActorNegociodd *
=dd+ ,'
GenerarAmbienteActorNegociodd- H
(ddH I
ambienteddI Q
)ddQ R
;ddR S.
"EstablecerIdActorNegocioParaEditaree 2
(ee2 3"
habitacionActorNegocioee3 I
,eeI J
ambienteeeK S
)eeS T
;eeT U
varff 
	resultadoff 
=ff 
_actor_Repositorioff  2
.ff2 36
*ActualizarActorNegocioYIdActorNegocioPadreff3 ]
(ff] ^"
habitacionActorNegocioff^ t
)fft u
;ffu v
	resultadogg 
.gg 
informationgg %
=gg& '
ambientegg( 0
;gg0 1
returnhh 
	resultadohh  
;hh  !
}ii 
catchjj 
(jj 
	Exceptionjj 
ejj 
)jj 
{kk 
throwll 
newll 
LogicaExceptionll )
(ll) *
$strll* P
,llP Q
ellR S
)llS T
;llT U
}mm 
}nn 	
publicoo 
OperationResultoo +
CambiarVigenciaDelAmbienteHoteloo >
(oo> ?
intoo? B

idAmbienteooC M
)ooM N
{pp 	
tryqq 
{rr 
ifss 
(ss 
_hotelRepositorioss %
.ss% &.
"ExisteHabitacionesVigentesAmbientess& H
(ssH I

idAmbientessI S
)ssS T
)ssT U
{tt 
throwuu 
newuu 
LogicaExceptionuu -
(uu- .
$struu. b
)uub c
;uuc d
}vv 
elseww 
{xx 
returnyy 
_actor_Repositorioyy -
.yy- .)
InvertirEsVigenteActorNegocioyy. K
(yyK L

idAmbienteyyL V
)yyV W
;yyW X
}zz 
}{{ 
catch|| 
(|| 
	Exception|| 
e|| 
)|| 
{}} 
throw~~ 
new~~ 
LogicaException~~ )
(~~) *
$str~~* \
,~~\ ]
e~~^ _
)~~_ `
;~~` a
} 
}
ÄÄ 	
}
ÅÅ 
}ÇÇ ã
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelUtilitario_Logica.cs
	namespace		 	
Tsp		
 
.		 
Sigescom		 
.		 
Logica		 
.		 

SigesHotel		 (
{

 
public 

class "
HotelUtilitario_Logica '
:( )#
IHotelUtilitario_Logica* A
{ 
public 
int 
ObtenerNumeroNoches &
(& '
DateTime' /
fechaInicio0 ;
,; <
DateTime= E
fechaFinF N
)N O
{ 	
int 
numeroNoches 
= 
(  
fechaFin  (
.( )
Date) -
-. /
fechaInicio0 ;
.; <
Date< @
)@ A
.A B
DaysB F
;F G
DateTime 
fechaHoteleraInicio (
=) *
fechaInicio+ 6
.6 7
Date7 ;
.; <
AddHours< D
(D E
$numE G
)G H
;H I
DateTime 
fechaHoteleraFin %
=& '
fechaFin( 0
.0 1
Date1 5
.5 6
AddHours6 >
(> ?
$num? A
)A B
;B C
if 
( 
( 
fechaInicio 
- 
fechaHoteleraInicio 2
)2 3
.3 4
TotalMinutes4 @
+A B
HotelSettingsC P
.P Q
DefaultQ X
.X Y+
ToleranciaEnMinutosParaCheckingY x
<y z
$num{ |
)| }
{ 
numeroNoches 
++ 
; 
} 
if 
( 
( 
fechaFin 
- 
fechaHoteleraFin ,
), -
.- .
TotalMinutes. :
-; <
HotelSettings= J
.J K
DefaultK R
.R S+
ToleranciaEnMinutosParaCheckingS r
>s t
$numu v
)v w
{ 
numeroNoches 
++ 
; 
} 
return 
numeroNoches 
;  
} 	
} 
} ≥Ü
TD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesHotel\HotelTipoHabitacion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Logica 
. 

SigesHotel (
{ 
public 

partial 
class 
HotelLogica $
:% &
IHotelLogica' 3
{ 
public 
List 
< 
ItemGenerico  
>  !6
*ObtenerTiposHabitacionVigentesSimplificado" L
(L M
)M N
{ 	
try 
{ 
return 
_hotelRepositorio (
.( )6
*ObtenerTiposHabitacionVigentesSimplificado) S
(S T
)T U
.U V
ToListV \
(\ ]
)] ^
;^ _
} 
catch 
( 
	Exception 
e 
) 
{ 
throw 
new 
LogicaException )
() *
$str* `
,` a
eb c
)c d
;d e
} 
} 	
public 
OperationResult ,
 CambiarVigenciaDelTipoHabitacion ?
(? @
int@ C
idTipoHabitacionD T
)T U
{ 	
try   
{!! 
if"" 
("" 
_hotelRepositorio"" %
.""% &4
(ExisteHabitacionesVigentesTipoHabitacion""& N
(""N O
idTipoHabitacion""O _
)""_ `
)""` a
{## 
throw$$ 
new$$ 
LogicaException$$ -
($$- .
$str$$. l
)$$l m
;$$m n
}%% 
else&& 
{'' 
return((  
_conceptoRepositorio(( /
.((/ 0,
 InvertirEsVigenteConceptoNegocio((0 P
(((P Q
idTipoHabitacion((Q a
)((a b
;((b c
})) 
}** 
catch++ 
(++ 
	Exception++ 
e++ 
)++ 
{,, 
throw-- 
new-- 
LogicaException-- )
(--) *
$str	--* ®
,
--® ©
e
--™ ´
)
--´ ¨
;
--¨ ≠
}.. 
}// 	
public00 
TipoHabitacion00 !
ObtenerTipoHabitacion00 3
(003 4
int004 7
id008 :
,00: ;"
UserProfileSessionData00< R
sesionUsuario00S `
)00` a
{11 	
try22 
{33 
List44 
<44 (
Precio_Compra_Venta_Concepto44 1
>441 2
precios443 :
=44; <
_logicaConcepto44= L
.44L M6
*ObtenerPreciosCompraVentaDeConceptoNegocio44M w
(44w x
id44x z
)44z {
;44{ |
Concepto_negocio55  
concepto_Negocio55! 1
=552 3 
_conceptoRepositorio554 H
.55H Iu
hObtenerConceptoNegocioIncluyendoValorCaracteristicaConceptoNegocioYDetalleMaestroYCaracteristicaConcepto	55I ±
(
55± ≤
id
55≤ ¥
)
55¥ µ
;
55µ ∂
TipoHabitacion66 
tipoHabitacion66 -
=66. /
new660 3
TipoHabitacion664 B
{77 
Id88 
=88 
concepto_Negocio88 )
.88) *
id88* ,
,88, -
Nombre99 
=99 
concepto_Negocio99 -
.99- .
sufijo99. 4
,994 5
Descripcion:: 
=::  !
concepto_Negocio::" 2
.::2 3
propiedades::3 >
,::> ?
Precios;; 
=;; 
precios;; %
,;;% &
	EsVigente<< 
=<< 
concepto_Negocio<<  0
.<<0 1

es_vigente<<1 ;
,<<; <
}== 
;== 
var>>  
valorCaracteristicas>> (
=>>) *
concepto_Negocio>>+ ;
.>>; <1
%Valor_caracteristica_concepto_negocio>>< a
.>>a b
Select>>b h
(>>h i
vc>>i k
=>>>l n
vc>>o q
.>>q r!
Valor_caracteristica	>>r Ü
)
>>Ü á
.
>>á à
ToList
>>à é
(
>>é è
)
>>è ê
;
>>ê ë
tipoHabitacion?? 
.?? 
Caracteristicas?? .
=??/ 0
new??1 4
List??5 9
<??9 :
ItemGenerico??: F
>??F G
(??G H
)??H I
;??I J
foreach@@ 
(@@ 
var@@ 
valor@@ "
in@@# % 
valorCaracteristicas@@& :
)@@: ;
{AA 
ifBB 
(BB 
valorBB 
.BB 
id_caracteristicaBB /
==BB0 2
HotelSettingsBB3 @
.BB@ A
DefaultBBA H
.BBH I(
IdCaracteristicaAforoAdultosBBI e
)BBe f
{CC 
tipoHabitacionDD &
.DD& '
AforoAdultosDD' 3
=DD4 5
newDD6 9
ItemGenericoDD: F
{DDG H
IdDDI K
=DDL M
valorDDN S
.DDS T
idDDT V
,DDV W
NombreDDX ^
=DD_ `
valorDDa f
.DDf g
valorDDg l
}DDm n
;DDn o
}EE 
elseFF 
{GG 
ifHH 
(HH 
valorHH !
.HH! "
id_caracteristicaHH" 3
==HH4 6
HotelSettingsHH7 D
.HHD E
DefaultHHE L
.HHL M&
IdCaracteristicaAforoNinosHHM g
)HHg h
{II 
tipoHabitacionJJ *
.JJ* +

AforoNinosJJ+ 5
=JJ6 7
newJJ8 ;
ItemGenericoJJ< H
{JJI J
IdJJK M
=JJN O
valorJJP U
.JJU V
idJJV X
,JJX Y
NombreJJZ `
=JJa b
valorJJc h
.JJh i
valorJJi n
}JJo p
;JJp q
}KK 
elseLL 
{MM 
tipoHabitacionNN *
.NN* +
CaracteristicasNN+ :
.NN: ;
AddNN; >
(NN> ?
newNN? B
ItemGenericoNNC O
{NNP Q
IdNNR T
=NNU V
valorNNW \
.NN\ ]
idNN] _
,NN_ `
NombreNNa g
=NNh i
valorNNj o
.NNo p
valorNNp u
}NNv w
)NNw x
;NNx y
}OO 
}PP 
}QQ &
ObtenerFotosTipoHabitacionRR *
(RR* +
tipoHabitacionRR+ 9
,RR9 :
sesionUsuarioRR; H
)RRH I
;RRI J
returnSS 
tipoHabitacionSS %
;SS% &
}TT 
catchUU 
(UU 
	ExceptionUU 
eUU 
)UU 
{VV 
throwWW 
newWW 
LogicaExceptionWW )
(WW) *
$strWW* R
,WWR S
eWWT U
)WWU V
;WWV W
}XX 
}YY 	
publicZZ 
ListZZ 
<ZZ #
TipoHabitacionesBandejaZZ +
>ZZ+ ,#
ObtenerTipoHabitacionesZZ- D
(ZZD E
)ZZE F
{[[ 	
try\\ 
{]] 
List^^ 
<^^ 
Concepto_negocio^^ %
>^^% &
concepto_Negocios^^' 8
=^^9 : 
_conceptoRepositorio^^; O
.^^O P9
-ObtenerConceptosDeNegocioConPreciosPorFamilia^^P }
(^^} ~
HotelSettings	^^~ ã
.
^^ã å
Default
^^å ì
.
^^ì î/
!IdDetalleMaestroFamiliaHabitacion
^^î µ
)
^^µ ∂
.
^^∂ ∑
ToList
^^∑ Ω
(
^^Ω æ
)
^^æ ø
;
^^ø ¿
List__ 
<__ #
TipoHabitacionesBandeja__ ,
>__, -
tipoHabitaciones__. >
=__? @
new__A D
List__E I
<__I J#
TipoHabitacionesBandeja__J a
>__a b
(__b c
)__c d
;__d e
foreach`` 
(`` 
var`` 
concepto_negocio`` -
in``. 0
concepto_Negocios``1 B
)``B C
{aa 
varbb 
tipoHabitacionbb &
=bb' (
newbb) ,#
TipoHabitacionesBandejabb- D
{cc 
Iddd 
=dd 
concepto_negociodd -
.dd- .
iddd. 0
,dd0 1
Nombreee 
=ee  
concepto_negocioee! 1
.ee1 2
nombreee2 8
,ee8 9
Preciosff 
=ff  !
concepto_negocioff" 2
.ff2 3
Precio1ff3 :
.ff: ;
Whereff; @
(ff@ A
pffA B
=>ffC E
pffF G
.ffG H

es_vigenteffH R
)ffR S
.ffS T
ToListffT Z
(ffZ [
)ff[ \
,ff\ ]
CapacidadNiniogg &
=gg' (
concepto_negociogg) 9
.gg9 :1
%Valor_caracteristica_concepto_negociogg: _
.gg_ `
Singlegg` f
(ggf g
vggg h
=>ggi k
vggl m
.ggm n!
Valor_caracteristica	ggn Ç
.
ggÇ É
id_caracteristica
ggÉ î
==
ggï ó
HotelSettings
ggò •
.
gg• ¶
Default
gg¶ ≠
.
gg≠ Æ(
IdCaracteristicaAforoNinos
ggÆ »
)
gg» …
.
gg…  "
Valor_caracteristica
gg  ﬁ
.
ggﬁ ﬂ
valor
ggﬂ ‰
,
gg‰ Â
CapacidadAdultohh '
=hh( )
concepto_negociohh* :
.hh: ;1
%Valor_caracteristica_concepto_negociohh; `
.hh` a
Singlehha g
(hhg h
vhhh i
=>hhj l
vhhm n
.hhn o!
Valor_caracteristica	hho É
.
hhÉ Ñ
id_caracteristica
hhÑ ï
==
hhñ ò
HotelSettings
hhô ¶
.
hh¶ ß
Default
hhß Æ
.
hhÆ Ø*
IdCaracteristicaAforoAdultos
hhØ À
)
hhÀ Ã
.
hhÃ Õ"
Valor_caracteristica
hhÕ ·
.
hh· ‚
valor
hh‚ Á
,
hhÁ Ë
	EsVigenteii !
=ii" #
concepto_negocioii$ 4
.ii4 5

es_vigenteii5 ?
}jj 
;jj 
tipoHabitacioneskk $
.kk$ %
Addkk% (
(kk( )
tipoHabitacionkk) 7
)kk7 8
;kk8 9
}ll 
returnmm 
tipoHabitacionesmm '
;mm' (
}nn 
catchoo 
(oo 
	Exceptionoo 
eoo 
)oo 
{pp 
throwqq 
newqq 
LogicaExceptionqq )
(qq) *
$strqq* `
,qq` a
eqqb c
)qqc d
;qqd e
}rr 
}ss 	
publictt 
OperationResulttt 
CrearTipoHabitaciontt 2
(tt2 3
TipoHabitaciontt3 A
tipoHabitacionttB P
,ttP Q"
UserProfileSessionDatattR h
sesionUsuariotti v
)ttv w
{uu 	
tryvv 
{ww 
intxx 
idRolxx 
=xx 
HotelSettingsxx )
.xx) *
Defaultxx* 1
.xx1 2
IdRolConceptoHotelxx2 D
;xxD E
intyy 
	idFamiliayy 
=yy 
HotelSettingsyy  -
.yy- .
Defaultyy. 5
.yy5 6-
!IdDetalleMaestroFamiliaHabitacionyy6 W
;yyW X
varzz 
familiaHabitacionzz %
=zz& '
_maestroRepositoriozz( ;
.zz; <
ObtenerDetallezz< J
(zzJ K
	idFamiliazzK T
)zzT U
;zzU V
var{{  
nombreTipoHabitacion{{ (
={{) *
familiaHabitacion{{+ <
.{{< =
nombre{{= C
+{{D E
$str{{F I
+{{J K
tipoHabitacion{{L Z
.{{Z [
Nombre{{[ a
;{{a b
if|| 
(|| 
_hotelRepositorio|| %
.||% &&
ExisteNombreTipoHabitacion||& @
(||@ A 
nombreTipoHabitacion||A U
)||U V
)||V W
{}} 
throw~~ 
new~~ 
LogicaException~~ -
(~~- .
$str	~~. ä
)
~~ä ã
;
~~ã å
} 
DateTime
ÄÄ 
fechaActual
ÄÄ $
=
ÄÄ% &
DateTimeUtil
ÄÄ' 3
.
ÄÄ3 4
FechaActual
ÄÄ4 ?
(
ÄÄ? @
)
ÄÄ@ A
;
ÄÄA B
var
ÅÅ 
codigo
ÅÅ 
=
ÅÅ 
	idFamilia
ÅÅ &
+
ÅÅ' (
$str
ÅÅ) ,
+
ÅÅ- .
_logicaConcepto
ÅÅ/ >
.
ÅÅ> ?2
$ObtenerSiguienteCodigoParaMercaderia
ÅÅ? c
(
ÅÅc d
idRol
ÅÅd i
,
ÅÅi j
	idFamilia
ÅÅk t
)
ÅÅt u
;
ÅÅu v
Concepto_negocio
ÇÇ  +
conceptoNegocioTipoHabitacion
ÇÇ! >
=
ÇÇ? @
new
ÇÇA D
Concepto_negocio
ÇÇE U
{
ÉÉ 
id
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
codigo
ÖÖ 
=
ÖÖ 
codigo
ÖÖ #
,
ÖÖ# $
nombre
ÜÜ 
=
ÜÜ "
nombreTipoHabitacion
ÜÜ 1
,
ÜÜ1 2
sufijo
áá 
=
áá 
tipoHabitacion
áá +
.
áá+ ,
Nombre
áá, 2
,
áá2 3
propiedades
àà 
=
àà  !
tipoHabitacion
àà" 0
.
àà0 1
Descripcion
àà1 <
,
àà< ='
id_unidad_medida_primaria
ââ -
=
ââ. /
ConceptoSettings
ââ0 @
.
ââ@ A
Default
ââA H
.
ââH I&
idUnidadMedidaPorDefecto
ââI a
,
ââa b
id_presentacion
ää #
=
ää$ %
ConceptoSettings
ää& 6
.
ää6 7
Default
ää7 >
.
ää> ?&
idPresentacionPorDefecto
ää? W
,
ääW X
	contenido
ãã 
=
ãã 
$num
ãã  !
,
ãã! "

es_vigente
åå 
=
åå  
true
åå! %
,
åå% &)
id_unidad_medida_secundaria
çç /
=
çç0 1
ConceptoSettings
çç2 B
.
ççB C
Default
ççC J
.
ççJ K&
idUnidadMedidaPorDefecto
ççK c
,
ççc d 
id_concepto_basico
éé &
=
éé' (
	idFamilia
éé) 2
,
éé2 3
codigo_negocio1
èè #
=
èè$ %
$str
èè& (
}
êê 
;
êê +
conceptoNegocioTipoHabitacion
ëë -
.
ëë- ."
Concepto_negocio_rol
ëë. B
.
ëëB C
Add
ëëC F
(
ëëF G
new
ëëG J"
Concepto_negocio_rol
ëëK _
(
ëë_ `
)
ëë` a
{
ëëb c
id_rol
ëëd j
=
ëëk l
idRol
ëëm r
}
ëës t
)
ëët u
;
ëëu v
_logicaConcepto
íí 
.
íí  $
AgregarCaracteristicas
íí  6
(
íí6 7
tipoHabitacion
íí7 E
.
ííE F'
IdsValoresCaracteristicas
ííF _
.
íí_ `
ToArray
íí` g
(
ííg h
)
ííh i
,
ííi j,
conceptoNegocioTipoHabitacioníík à
)ííà â
;ííâ ä+
conceptoNegocioTipoHabitacion
ìì -
.
ìì- .
Precio
ìì. 4
=
ìì5 6
_logicaConcepto
ìì7 F
.
ììF G
GenerarPrecios
ììG U
(
ììU V
tipoHabitacion
ììV d
.
ììd e
Precios
ììe l
,
ììl m
fechaActual
ììn y
,
ììy z
$num
ìì{ |
,
ìì| }
sesionUsuarioìì~ ã
.ììã å
Empleadoììå î
.ììî ï
Idììï ó
)ììó ò
;ììò ô
var
îî 
	resultado
îî 
=
îî "
_conceptoRepositorio
îî  4
.
îî4 5$
CrearConceptoDeNegocio
îî5 K
(
îîK L+
conceptoNegocioTipoHabitacion
îîL i
)
îîi j
;
îîj k
tipoHabitacion
ïï 
.
ïï 
Id
ïï !
=
ïï" #
(
ïï$ %
int
ïï% (
)
ïï( )
	resultado
ïï) 2
.
ïï2 3
data
ïï3 7
;
ïï7 8
if
ññ 
(
ññ 
	resultado
ññ 
.
ññ 
code_result
ññ )
==
ññ* ,!
OperationResultEnum
ññ- @
.
ññ@ A
Success
ññA H
)
ññH I
{
óó 
if
òò 
(
òò 
tipoHabitacion
òò &
.
òò& '
Fotos
òò' ,
!=
òò- /
null
òò0 4
)
òò4 5(
AgregarFotosTipoHabitacion
ôô 2
(
ôô2 3
tipoHabitacion
ôô3 A
,
ôôA B
sesionUsuario
ôôC P
,
ôôP Q
$num
ôôR S
)
ôôS T
;
ôôT U
}
öö 
return
õõ 
	resultado
õõ  
;
õõ  !
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
e
ùù 
)
ùù 
{
ûû 
throw
üü 
new
üü 
LogicaException
üü )
(
üü) *
$str
üü* R
,
üüR S
e
üüT U
)
üüU V
;
üüV W
}
†† 
}
°° 	
public
¢¢ 
OperationResult
¢¢ "
EditarTipoHabitacion
¢¢ 3
(
¢¢3 4
TipoHabitacion
¢¢4 B
tipoHabitacion
¢¢C Q
,
¢¢Q R$
UserProfileSessionData
¢¢S i
sesionUsuario
¢¢j w
)
¢¢w x
{
££ 	
try
§§ 
{
•• 
int
¶¶ 
idRol
¶¶ 
=
¶¶ 
HotelSettings
¶¶ )
.
¶¶) *
Default
¶¶* 1
.
¶¶1 2 
IdRolConceptoHotel
¶¶2 D
;
¶¶D E
int
ßß 
	idFamilia
ßß 
=
ßß 
HotelSettings
ßß  -
.
ßß- .
Default
ßß. 5
.
ßß5 6/
!IdDetalleMaestroFamiliaHabitacion
ßß6 W
;
ßßW X
var
®® 
familiaHabitacion
®® %
=
®®& '!
_maestroRepositorio
®®( ;
.
®®; <
ObtenerDetalle
®®< J
(
®®J K
	idFamilia
®®K T
)
®®T U
;
®®U V
var
©© "
nombreTipoHabitacion
©© (
=
©©) *
familiaHabitacion
©©+ <
.
©©< =
nombre
©©= C
+
©©D E
$str
©©F I
+
©©J K
tipoHabitacion
©©L Z
.
©©Z [
Nombre
©©[ a
;
©©a b
if
™™ 
(
™™ 
_hotelRepositorio
™™ %
.
™™% &=
/ExisteNombreTipoHabitacionExceptoTipoHabitacion
™™& U
(
™™U V"
nombreTipoHabitacion
™™V j
,
™™j k
tipoHabitacion
™™l z
.
™™z {
Id
™™{ }
)
™™} ~
)
™™~ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ -
(
¨¨- .
$str¨¨. ã
)¨¨ã å
;¨¨å ç
}
≠≠ 
DateTime
ÆÆ 
fechaActual
ÆÆ $
=
ÆÆ% &
DateTimeUtil
ÆÆ' 3
.
ÆÆ3 4
FechaActual
ÆÆ4 ?
(
ÆÆ? @
)
ÆÆ@ A
;
ÆÆA B
var
ØØ 
codigo
ØØ 
=
ØØ 
	idFamilia
ØØ &
+
ØØ' (
$str
ØØ) ,
+
ØØ- .
_logicaConcepto
ØØ/ >
.
ØØ> ?2
$ObtenerSiguienteCodigoParaMercaderia
ØØ? c
(
ØØc d
idRol
ØØd i
,
ØØi j
	idFamilia
ØØk t
)
ØØt u
;
ØØu v
Concepto_negocio
∞∞  +
conceptoNegocioTipoHabitacion
∞∞! >
=
∞∞? @
new
∞∞A D
Concepto_negocio
∞∞E U
{
±± 
id
≤≤ 
=
≤≤ 
tipoHabitacion
≤≤ '
.
≤≤' (
Id
≤≤( *
,
≤≤* +
codigo
≥≥ 
=
≥≥ 
codigo
≥≥ #
,
≥≥# $
nombre
¥¥ 
=
¥¥ "
nombreTipoHabitacion
¥¥ 1
,
¥¥1 2
sufijo
µµ 
=
µµ 
tipoHabitacion
µµ +
.
µµ+ ,
Nombre
µµ, 2
,
µµ2 3
propiedades
∂∂ 
=
∂∂  !
tipoHabitacion
∂∂" 0
.
∂∂0 1
Descripcion
∂∂1 <
,
∂∂< ='
id_unidad_medida_primaria
∑∑ -
=
∑∑. /
ConceptoSettings
∑∑0 @
.
∑∑@ A
Default
∑∑A H
.
∑∑H I&
idUnidadMedidaPorDefecto
∑∑I a
,
∑∑a b
id_presentacion
∏∏ #
=
∏∏$ %
ConceptoSettings
∏∏& 6
.
∏∏6 7
Default
∏∏7 >
.
∏∏> ?&
idPresentacionPorDefecto
∏∏? W
,
∏∏W X
	contenido
ππ 
=
ππ 
$num
ππ  !
,
ππ! "

es_vigente
∫∫ 
=
∫∫  
true
∫∫! %
,
∫∫% &)
id_unidad_medida_secundaria
ªª /
=
ªª0 1
ConceptoSettings
ªª2 B
.
ªªB C
Default
ªªC J
.
ªªJ K&
idUnidadMedidaPorDefecto
ªªK c
,
ªªc d 
id_concepto_basico
ºº &
=
ºº' (
	idFamilia
ºº) 2
,
ºº2 3
codigo_negocio1
ΩΩ #
=
ΩΩ$ %
$str
ΩΩ& (
}
ææ 
;
ææ +
conceptoNegocioTipoHabitacion
øø -
.
øø- ."
Concepto_negocio_rol
øø. B
.
øøB C
Add
øøC F
(
øøF G
new
øøG J"
Concepto_negocio_rol
øøK _
(
øø_ `
)
øø` a
{
øøb c
id_rol
øød j
=
øøk l
idRol
øøm r
}
øøs t
)
øøt u
;
øøu v
_logicaConcepto
¿¿ 
.
¿¿  $
AgregarCaracteristicas
¿¿  6
(
¿¿6 7
tipoHabitacion
¿¿7 E
.
¿¿E F'
IdsValoresCaracteristicas
¿¿F _
.
¿¿_ `
ToArray
¿¿` g
(
¿¿g h
)
¿¿h i
,
¿¿i j,
conceptoNegocioTipoHabitacion¿¿k à
)¿¿à â
;¿¿â ä+
conceptoNegocioTipoHabitacion
¡¡ -
.
¡¡- .
Precio
¡¡. 4
=
¡¡5 6
_logicaConcepto
¡¡7 F
.
¡¡F G
GenerarPrecios
¡¡G U
(
¡¡U V
tipoHabitacion
¡¡V d
.
¡¡d e
Precios
¡¡e l
,
¡¡l m
fechaActual
¡¡n y
,
¡¡y z
$num
¡¡{ |
,
¡¡| }
sesionUsuario¡¡~ ã
.¡¡ã å
Empleado¡¡å î
.¡¡î ï
Id¡¡ï ó
)¡¡ó ò
;¡¡ò ô
var
¬¬ 
	resultado
¬¬ 
=
¬¬ "
_conceptoRepositorio
¬¬  4
.
¬¬4 5'
ActualizarConceptoNegocio
¬¬5 N
(
¬¬N O+
conceptoNegocioTipoHabitacion
¬¬O l
)
¬¬l m
;
¬¬m n
if
√√ 
(
√√ 
	resultado
√√ 
.
√√ 
code_result
√√ )
==
√√* ,!
OperationResultEnum
√√- @
.
√√@ A
Success
√√A H
)
√√H I
{
ƒƒ 
if
≈≈ 
(
≈≈ 
tipoHabitacion
≈≈ &
.
≈≈& ' 
HayFotosEliminadas
≈≈' 9
)
≈≈9 :)
EliminarFotosTipoHabitacion
∆∆ 3
(
∆∆3 4
tipoHabitacion
∆∆4 B
,
∆∆B C
sesionUsuario
∆∆D Q
)
∆∆Q R
;
∆∆R S
int
«« 
	indicador
«« !
=
««" #
(
««$ %
tipoHabitacion
««% 3
.
««3 4 
HayFotosEliminadas
««4 F
&&
««G I
tipoHabitacion
««J X
.
««X Y
HayFotos
««Y a
)
««a b
?
««c d+
RenombrarFotosTipoHabitacion««e Å
(««Å Ç
tipoHabitacion««Ç ê
,««ê ë
sesionUsuario««í ü
)««ü †
:««° ¢
(««£ §
tipoHabitacion««§ ≤
.««≤ ≥
HayFotos««≥ ª
?««º Ω
tipoHabitacion««æ Ã
.««Ã Õ
Fotos««Õ “
.««“ ”
Where««” ÿ
(««ÿ Ÿ
f««Ÿ ⁄
=>««€ ›
!««ﬁ ﬂ
string««ﬂ Â
.««Â Ê
IsNullOrEmpty««Ê Û
(««Û Ù
f««Ù ı
.««ı ˆ
Nombre««ˆ ¸
)««¸ ˝
)««˝ ˛
.««˛ ˇ
Count««ˇ Ñ
(««Ñ Ö
)««Ö Ü
+««á à
$num««â ä
:««ã å
$num««ç é
)««é è
;««è ê
if
»» 
(
»» 
tipoHabitacion
»» &
.
»»& '
HayFotos
»»' /
)
»»/ 0(
AgregarFotosTipoHabitacion
…… 2
(
……2 3
tipoHabitacion
……3 A
,
……A B
sesionUsuario
……C P
,
……P Q
	indicador
……R [
)
……[ \
;
……\ ]
var
ÀÀ 
resultadoPrecios
ÀÀ (
=
ÀÀ) *+
ResolverPreciosTipoHabitacion
ÀÀ+ H
(
ÀÀH I
tipoHabitacion
ÀÀI W
,
ÀÀW X
sesionUsuario
ÀÀY f
,
ÀÀf g
fechaActual
ÀÀh s
)
ÀÀs t
;
ÀÀt u
if
ÃÃ 
(
ÃÃ 
resultadoPrecios
ÃÃ (
.
ÃÃ( )
code_result
ÃÃ) 4
!=
ÃÃ5 7!
OperationResultEnum
ÃÃ8 K
.
ÃÃK L
Success
ÃÃL S
)
ÃÃS T
return
ÕÕ 
new
ÕÕ "
OperationResult
ÕÕ# 2
(
ÕÕ2 3!
OperationResultEnum
ÕÕ3 F
.
ÕÕF G
Warning
ÕÕG N
,
ÕÕN O
$strÕÕP ¶
+ÕÕß ® 
resultadoPreciosÕÕ© π
.ÕÕπ ∫
messageÕÕ∫ ¡
)ÕÕ¡ ¬
;ÕÕ¬ √
}
ŒŒ 
return
œœ 
	resultado
œœ  
;
œœ  !
}
–– 
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
““ 
throw
”” 
new
”” 
LogicaException
”” )
(
””) *
$str
””* O
,
””O P
e
””Q R
)
””R S
;
””S T
}
‘‘ 
}
’’ 	
private
÷÷ 
void
÷÷ (
AgregarFotosTipoHabitacion
÷÷ /
(
÷÷/ 0
TipoHabitacion
÷÷0 >
tipoHabitacion
÷÷? M
,
÷÷M N$
UserProfileSessionData
÷÷O e
sesionUsuario
÷÷f s
,
÷÷s t
int
÷÷u x
	indicador÷÷y Ç
)÷÷Ç É
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
string
⁄⁄ 
downloadUrl
⁄⁄ "
=
⁄⁄# $
HotelSettings
⁄⁄% 2
.
⁄⁄2 3
Default
⁄⁄3 :
.
⁄⁄: ;'
ServidorFptTipoHabitacion
⁄⁄; T
.
⁄⁄T U
Split
⁄⁄U Z
(
⁄⁄Z [
$char
⁄⁄[ ^
)
⁄⁄^ _
[
⁄⁄_ `
$num
⁄⁄` a
]
⁄⁄a b
;
⁄⁄b c
string
€€ 
usuario
€€ 
=
€€  
HotelSettings
€€! .
.
€€. /
Default
€€/ 6
.
€€6 7'
ServidorFptTipoHabitacion
€€7 P
.
€€P Q
Split
€€Q V
(
€€V W
$char
€€W Z
)
€€Z [
[
€€[ \
$num
€€\ ]
]
€€] ^
;
€€^ _
string
‹‹ 
password
‹‹ 
=
‹‹  !
HotelSettings
‹‹" /
.
‹‹/ 0
Default
‹‹0 7
.
‹‹7 8'
ServidorFptTipoHabitacion
‹‹8 Q
.
‹‹Q R
Split
‹‹R W
(
‹‹W X
$char
‹‹X [
)
‹‹[ \
[
‹‹\ ]
$num
‹‹] ^
]
‹‹^ _
;
‹‹_ `
foreach
›› 
(
›› 
var
›› 
foto
›› !
in
››" $
tipoHabitacion
››% 3
.
››3 4
Fotos
››4 9
.
››9 :
Where
››: ?
(
››? @
f
››@ A
=>
››B D
string
››E K
.
››K L
IsNullOrEmpty
››L Y
(
››Y Z
f
››Z [
.
››[ \
Nombre
››\ b
)
››b c
)
››c d
)
››d e
{
ﬁﬁ 
FtpWebRequest
ﬂﬂ !
request
ﬂﬂ" )
=
ﬂﬂ* +
(
ﬂﬂ, -
FtpWebRequest
ﬂﬂ- :
)
ﬂﬂ: ;

WebRequest
ﬂﬂ; E
.
ﬂﬂE F
Create
ﬂﬂF L
(
ﬂﬂL M
downloadUrl
ﬂﬂM X
+
ﬂﬂY Z
$str
ﬂﬂ[ ^
+
ﬂﬂ_ `
sesionUsuario
ﬂﬂa n
.
ﬂﬂn o
Sede
ﬂﬂo s
.
ﬂﬂs t!
DocumentoIdentidadﬂﬂt Ü
+ﬂﬂá à
$strﬂﬂâ å
+ﬂﬂç é
tipoHabitacionﬂﬂè ù
.ﬂﬂù û
Idﬂﬂû †
+ﬂﬂ° ¢
$strﬂﬂ£ ¶
+ﬂﬂß ®
	indicadorﬂﬂ© ≤
+ﬂﬂ≥ ¥
$strﬂﬂµ ª
)ﬂﬂª º
;ﬂﬂº Ω
request
‡‡ 
.
‡‡ 
Credentials
‡‡ '
=
‡‡( )
new
‡‡* -
NetworkCredential
‡‡. ?
(
‡‡? @
usuario
‡‡@ G
,
‡‡G H
password
‡‡I Q
)
‡‡Q R
;
‡‡R S
request
·· 
.
·· 
Method
·· "
=
··# $
WebRequestMethods
··% 6
.
··6 7
Ftp
··7 :
.
··: ;

UploadFile
··; E
;
··E F
byte
„„ 
[
„„ 
]
„„ 
	fileBytes
„„ $
=
„„% &
Convert
„„' .
.
„„. /
FromBase64String
„„/ ?
(
„„? @
foto
„„@ D
.
„„D E
Foto
„„E I
.
„„I J
Remove
„„J P
(
„„P Q
$num
„„Q R
,
„„R S
$num
„„S U
)
„„U V
)
„„V W
;
„„W X
using
ÂÂ 
(
ÂÂ 
Stream
ÂÂ !

fileStream
ÂÂ" ,
=
ÂÂ- .
new
ÂÂ/ 2
MemoryStream
ÂÂ3 ?
(
ÂÂ? @
	fileBytes
ÂÂ@ I
)
ÂÂI J
)
ÂÂJ K
using
ÊÊ 
(
ÊÊ 
Stream
ÊÊ !
	ftpStream
ÊÊ" +
=
ÊÊ, -
request
ÊÊ. 5
.
ÊÊ5 6
GetRequestStream
ÊÊ6 F
(
ÊÊF G
)
ÊÊG H
)
ÊÊH I
{
ÁÁ 

fileStream
ËË "
.
ËË" #
CopyTo
ËË# )
(
ËË) *
	ftpStream
ËË* 3
)
ËË3 4
;
ËË4 5
}
ÈÈ 
++
ÍÍ 
	indicador
ÍÍ 
;
ÍÍ  
}
ÎÎ 
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* \
,
ÔÔ\ ]
e
ÔÔ^ _
)
ÔÔ_ `
;
ÔÔ` a
}
 
}
ÒÒ 	
private
ÚÚ 
OperationResult
ÚÚ +
ResolverPreciosTipoHabitacion
ÚÚ  =
(
ÚÚ= >
TipoHabitacion
ÚÚ> L
tipoHabitacion
ÚÚM [
,
ÚÚ[ \$
UserProfileSessionData
ÚÚ] s
sesionUsuarioÚÚt Å
,ÚÚÅ Ç
DateTimeÚÚÉ ã
fechaActualÚÚå ó
)ÚÚó ò
{
ÛÛ 	
List
ÙÙ 
<
ÙÙ 
Precio
ÙÙ 
>
ÙÙ 
nuevosPrecios
ÙÙ &
=
ÙÙ' (
new
ÙÙ) ,
List
ÙÙ- 1
<
ÙÙ1 2
Precio
ÙÙ2 8
>
ÙÙ8 9
(
ÙÙ9 :
)
ÙÙ: ;
;
ÙÙ; <
List
ıı 
<
ıı 
Precio
ıı 
>
ıı 
preciosCaducos
ıı '
=
ıı( )
new
ıı* -
List
ıı. 2
<
ıı2 3
Precio
ıı3 9
>
ıı9 :
(
ıı: ;
)
ıı; <
;
ıı< =
foreach
ˆˆ 
(
ˆˆ 
var
ˆˆ 
item
ˆˆ 
in
ˆˆ  
tipoHabitacion
ˆˆ! /
.
ˆˆ/ 0
Precios
ˆˆ0 7
)
ˆˆ7 8
{
˜˜ 
if
¯¯ 
(
¯¯ 
item
¯¯ 
.
¯¯ 
Seleccionado
¯¯ %
)
¯¯% &
{
˘˘ 
Precio
˙˙ 
precio
˙˙ !
=
˙˙" #
new
˙˙$ '
Precio
˙˙( .
(
˙˙. /
item
˙˙/ 3
.
˙˙3 4
IdPrecio
˙˙4 <
,
˙˙< =
item
˙˙> B
.
˙˙B C
IdPuntoPrecio
˙˙C P
,
˙˙P Q
MaestroSettings
˙˙R a
.
˙˙a b
Default
˙˙b i
.
˙˙i j9
*IdDetalleMaestroUnidadDeNegocioTransversal˙˙j î
,˙˙î ï
tipoHabitacion˙˙ñ §
.˙˙§ •
Id˙˙• ß
,˙˙ß ®
item˙˙© ≠
.˙˙≠ Æ
Valor˙˙Æ ≥
,˙˙≥ ¥
item˙˙µ π
.˙˙π ∫
IdTarifa˙˙∫ ¬
,˙˙¬ √
MaestroSettings˙˙ƒ ”
.˙˙” ‘
Default˙˙‘ €
.˙˙€ ‹+
IdDetalleMaestroMonedaSoles˙˙‹ ˜
,˙˙˜ ¯
item˙˙˘ ˝
.˙˙˝ ˛
FechaInicio˙˙˛ â
,˙˙â ä
item˙˙ã è
.˙˙è ê
FechaFin˙˙ê ò
,˙˙ò ô
fechaActual˙˙ö •
,˙˙• ¶
true˙˙ß ´
,˙˙´ ¨
true˙˙≠ ±
,˙˙± ≤
false˙˙≥ ∏
,˙˙∏ π
$num˙˙∫ ª
,˙˙ª º
$num˙˙Ω æ
,˙˙æ ø
MaestroSettings˙˙¿ œ
.˙˙œ –
Default˙˙– ◊
.˙˙◊ ÿ0
 IdDetalleMaestroTipoPrecioPrecio˙˙ÿ ¯
,˙˙¯ ˘
item˙˙˙ ˛
.˙˙˛ ˇ
Descripcion˙˙ˇ ä
,˙˙ä ã
sesionUsuario˙˙å ô
.˙˙ô ö
Empleado˙˙ö ¢
.˙˙¢ £
Id˙˙£ •
)˙˙• ¶
;˙˙¶ ß
nuevosPrecios
˚˚ !
.
˚˚! "
Add
˚˚" %
(
˚˚% &
precio
˚˚& ,
)
˚˚, -
;
˚˚- .
}
¸¸ 
else
˝˝ 
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
item
ˇˇ 
.
ˇˇ 
IdPrecio
ˇˇ %
!=
ˇˇ& (
$num
ˇˇ) *
)
ˇˇ* +
{
ÄÄ 
Precio
ÅÅ 
precio
ÅÅ %
=
ÅÅ& ' 
_precioRepositorio
ÅÅ( :
.
ÅÅ: ;
obtenerPrecio
ÅÅ; H
(
ÅÅH I
item
ÅÅI M
.
ÅÅM N
IdPrecio
ÅÅN V
)
ÅÅV W
;
ÅÅW X
precio
ÇÇ 
.
ÇÇ 
	fecha_fin
ÇÇ (
=
ÇÇ) *
fechaActual
ÇÇ+ 6
;
ÇÇ6 7
precio
ÉÉ 
.
ÉÉ  
fecha_modificacion
ÉÉ 1
=
ÉÉ2 3
fechaActual
ÉÉ4 ?
;
ÉÉ? @
precio
ÑÑ 
.
ÑÑ 

es_vigente
ÑÑ )
=
ÑÑ* +
false
ÑÑ, 1
;
ÑÑ1 2
preciosCaducos
ÖÖ &
.
ÖÖ& '
Add
ÖÖ' *
(
ÖÖ* +
precio
ÖÖ+ 1
)
ÖÖ1 2
;
ÖÖ2 3
}
ÜÜ 
}
áá 
}
àà 
var
ââ 
resultadoPrecios
ââ  
=
ââ! " 
_precioRepositorio
ââ# 5
.
ââ5 6
ResolverPrecios
ââ6 E
(
ââE F
nuevosPrecios
ââF S
,
ââS T
preciosCaducos
ââU c
)
ââc d
;
ââd e
return
ää 
resultadoPrecios
ää #
;
ää# $
}
ãã 	
private
åå 
void
åå (
ObtenerFotosTipoHabitacion
åå /
(
åå/ 0
TipoHabitacion
åå0 >
tipoHabitacion
åå? M
,
ååM N$
UserProfileSessionData
ååO e
sesionUsuario
ååf s
)
åås t
{
çç 	
try
éé 
{
èè 
tipoHabitacion
êê 
.
êê 
Fotos
êê $
=
êê% &
new
êê' *
List
êê+ /
<
êê/ 0 
FotoTipoHabitacion
êê0 B
>
êêB C
(
êêC D
)
êêD E
;
êêE F
string
ëë 
downloadUrl
ëë "
=
ëë# $
HotelSettings
ëë% 2
.
ëë2 3
Default
ëë3 :
.
ëë: ;'
ServidorFptTipoHabitacion
ëë; T
.
ëëT U
Split
ëëU Z
(
ëëZ [
$char
ëë[ ^
)
ëë^ _
[
ëë_ `
$num
ëë` a
]
ëëa b
;
ëëb c
string
íí 
usuario
íí 
=
íí  
HotelSettings
íí! .
.
íí. /
Default
íí/ 6
.
íí6 7'
ServidorFptTipoHabitacion
íí7 P
.
ííP Q
Split
ííQ V
(
ííV W
$char
ííW Z
)
ííZ [
[
íí[ \
$num
íí\ ]
]
íí] ^
;
íí^ _
string
ìì 
password
ìì 
=
ìì  !
HotelSettings
ìì" /
.
ìì/ 0
Default
ìì0 7
.
ìì7 8'
ServidorFptTipoHabitacion
ìì8 Q
.
ììQ R
Split
ììR W
(
ììW X
$char
ììX [
)
ìì[ \
[
ìì\ ]
$num
ìì] ^
]
ìì^ _
;
ìì_ `
List
îî 
<
îî 
byte
îî 
[
îî 
]
îî 
>
îî %
imagenesTiposHabitacion
îî 4
=
îî5 6
new
îî7 :
List
îî; ?
<
îî? @
byte
îî@ D
[
îîD E
]
îîE F
>
îîF G
(
îîG H
)
îîH I
;
îîI J
bool
ïï (
hayImagenesTiposHabitacion
ïï /
=
ïï0 1
true
ïï2 6
;
ïï6 7
int
ññ 
	indicador
ññ 
=
ññ 
$num
ññ  !
;
ññ! "
do
óó 
{
òò 
var
ôô 
nombreArchivo
ôô %
=
ôô& '
tipoHabitacion
ôô( 6
.
ôô6 7
Id
ôô7 9
.
ôô9 :
ToString
ôô: B
(
ôôB C
)
ôôC D
+
ôôE F
$str
ôôG J
+
ôôK L
	indicador
ôôM V
+
ôôW X
$str
ôôY _
;
ôô_ `
FtpWebRequest
öö !
request
öö" )
=
öö* +
(
öö, -
FtpWebRequest
öö- :
)
öö: ;

WebRequest
öö; E
.
ööE F
Create
ööF L
(
ööL M
downloadUrl
ööM X
+
ööY Z
$str
öö[ ^
+
öö_ `
sesionUsuario
ööa n
.
öön o
Sede
ööo s
.
öös t!
DocumentoIdentidadööt Ü
+ööá à
$strööâ å
+ööç é
nombreArchivoööè ú
)ööú ù
;ööù û
request
õõ 
.
õõ 
Credentials
õõ '
=
õõ( )
new
õõ* -
NetworkCredential
õõ. ?
(
õõ? @
usuario
õõ@ G
,
õõG H
password
õõI Q
)
õõQ R
;
õõR S
request
úú 
.
úú 
Method
úú "
=
úú# $
WebRequestMethods
úú% 6
.
úú6 7
Ftp
úú7 :
.
úú: ;
DownloadFile
úú; G
;
úúG H
request
ùù 
.
ùù 
	UseBinary
ùù %
=
ùù& '
true
ùù( ,
;
ùù, -
request
ûû 
.
ûû 
Proxy
ûû !
=
ûû" #
null
ûû$ (
;
ûû( )
try
üü 
{
†† 
FtpWebResponse
°° &
response
°°' /
=
°°0 1
(
°°2 3
FtpWebResponse
°°3 A
)
°°A B
request
°°B I
.
°°I J
GetResponse
°°J U
(
°°U V
)
°°V W
;
°°W X
Stream
¢¢ 
stream
¢¢ %
=
¢¢& '
response
¢¢( 0
.
¢¢0 1
GetResponseStream
¢¢1 B
(
¢¢B C
)
¢¢C D
;
¢¢D E
MemoryStream
££ $
memoryStream
££% 1
=
££2 3
new
££4 7
MemoryStream
££8 D
(
££D E
)
££E F
;
££F G
byte
§§ 
[
§§ 
]
§§ 
chunk
§§ $
=
§§% &
new
§§' *
byte
§§+ /
[
§§/ 0
$num
§§0 4
]
§§4 5
;
§§5 6
int
•• 
	bytesRead
•• %
;
••% &
while
¶¶ 
(
¶¶ 
(
¶¶  
	bytesRead
¶¶  )
=
¶¶* +
stream
¶¶, 2
.
¶¶2 3
Read
¶¶3 7
(
¶¶7 8
chunk
¶¶8 =
,
¶¶= >
$num
¶¶? @
,
¶¶@ A
chunk
¶¶B G
.
¶¶G H
Length
¶¶H N
)
¶¶N O
)
¶¶O P
>
¶¶Q R
$num
¶¶S T
)
¶¶T U
{
ßß 
memoryStream
®® (
.
®®( )
Write
®®) .
(
®®. /
chunk
®®/ 4
,
®®4 5
$num
®®6 7
,
®®7 8
	bytesRead
®®9 B
)
®®B C
;
®®C D
}
©© 
response
™™  
.
™™  !
Close
™™! &
(
™™& '
)
™™' (
;
™™( )
stream
´´ 
.
´´ 
Close
´´ $
(
´´$ %
)
´´% &
;
´´& '
tipoHabitacion
¨¨ &
.
¨¨& '
Fotos
¨¨' ,
.
¨¨, -
Add
¨¨- 0
(
¨¨0 1
new
¨¨1 4 
FotoTipoHabitacion
¨¨5 G
{
≠≠ 
Nombre
ÆÆ "
=
ÆÆ# $
nombreArchivo
ÆÆ% 2
,
ÆÆ2 3
Foto
ØØ  
=
ØØ! "
Convert
ØØ# *
.
ØØ* +
ToBase64String
ØØ+ 9
(
ØØ9 :
memoryStream
ØØ: F
.
ØØF G
ToArray
ØØG N
(
ØØN O
)
ØØO P
)
ØØP Q
}
∞∞ 
)
∞∞ 
;
∞∞ 
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ $
)
≤≤$ %
{
≥≥ (
hayImagenesTiposHabitacion
¥¥ 2
=
¥¥3 4
false
¥¥5 :
;
¥¥: ;
}
µµ 
++
∂∂ 
	indicador
∂∂ 
;
∂∂  
}
∑∑ 
while
∑∑ 
(
∑∑ (
hayImagenesTiposHabitacion
∑∑ 3
)
∑∑3 4
;
∑∑4 5
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
e
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª 
LogicaException
ªª )
(
ªª) *
$str
ªª* \
,
ªª\ ]
e
ªª^ _
)
ªª_ `
;
ªª` a
}
ºº 
}
ΩΩ 	
private
ææ 
void
ææ )
EliminarFotosTipoHabitacion
ææ 0
(
ææ0 1
TipoHabitacion
ææ1 ?
tipoHabitacion
ææ@ N
,
ææN O$
UserProfileSessionData
ææP f
sesionUsuario
ææg t
)
ææt u
{
øø 	
try
¿¿ 
{
¡¡ 
string
¬¬ 
downloadUrl
¬¬ "
=
¬¬# $
HotelSettings
¬¬% 2
.
¬¬2 3
Default
¬¬3 :
.
¬¬: ;'
ServidorFptTipoHabitacion
¬¬; T
.
¬¬T U
Split
¬¬U Z
(
¬¬Z [
$char
¬¬[ ^
)
¬¬^ _
[
¬¬_ `
$num
¬¬` a
]
¬¬a b
;
¬¬b c
string
√√ 
usuario
√√ 
=
√√  
HotelSettings
√√! .
.
√√. /
Default
√√/ 6
.
√√6 7'
ServidorFptTipoHabitacion
√√7 P
.
√√P Q
Split
√√Q V
(
√√V W
$char
√√W Z
)
√√Z [
[
√√[ \
$num
√√\ ]
]
√√] ^
;
√√^ _
string
ƒƒ 
password
ƒƒ 
=
ƒƒ  !
HotelSettings
ƒƒ" /
.
ƒƒ/ 0
Default
ƒƒ0 7
.
ƒƒ7 8'
ServidorFptTipoHabitacion
ƒƒ8 Q
.
ƒƒQ R
Split
ƒƒR W
(
ƒƒW X
$char
ƒƒX [
)
ƒƒ[ \
[
ƒƒ\ ]
$num
ƒƒ] ^
]
ƒƒ^ _
;
ƒƒ_ `
List
≈≈ 
<
≈≈ 
string
≈≈ 
>
≈≈  
statusDescriptions
≈≈ /
=
≈≈0 1
new
≈≈2 5
List
≈≈6 :
<
≈≈: ;
string
≈≈; A
>
≈≈A B
(
≈≈B C
)
≈≈C D
;
≈≈D E
foreach
∆∆ 
(
∆∆ 
var
∆∆ $
nombrearchivoEliminado
∆∆ 3
in
∆∆4 6
tipoHabitacion
∆∆7 E
.
∆∆E F
FotosEliminadas
∆∆F U
)
∆∆U V
{
«« 
FtpWebRequest
»» !
request
»»" )
=
»»* +
(
»», -
FtpWebRequest
»»- :
)
»»: ;

WebRequest
»»; E
.
»»E F
Create
»»F L
(
»»L M
downloadUrl
»»M X
+
»»Y Z
$str
»»[ ^
+
»»_ `
sesionUsuario
»»a n
.
»»n o
Sede
»»o s
.
»»s t!
DocumentoIdentidad»»t Ü
+»»á à
$str»»â å
+»»ç é&
nombrearchivoEliminado»»è •
)»»• ¶
;»»¶ ß
request
…… 
.
…… 
Method
…… "
=
……# $
WebRequestMethods
……% 6
.
……6 7
Ftp
……7 :
.
……: ;

DeleteFile
……; E
;
……E F
request
   
.
   
Credentials
   '
=
  ( )
new
  * -
NetworkCredential
  . ?
(
  ? @
usuario
  @ G
,
  G H
password
  I Q
)
  Q R
;
  R S
using
ÀÀ 
(
ÀÀ 
FtpWebResponse
ÀÀ )
response
ÀÀ* 2
=
ÀÀ3 4
(
ÀÀ5 6
FtpWebResponse
ÀÀ6 D
)
ÀÀD E
request
ÀÀE L
.
ÀÀL M
GetResponse
ÀÀM X
(
ÀÀX Y
)
ÀÀY Z
)
ÀÀZ [
{
ÃÃ  
statusDescriptions
ÕÕ *
.
ÕÕ* +
Add
ÕÕ+ .
(
ÕÕ. /
response
ÕÕ/ 7
.
ÕÕ7 8
StatusDescription
ÕÕ8 I
)
ÕÕI J
;
ÕÕJ K
}
ŒŒ 
}
œœ 
}
–– 
catch
—— 
(
—— 
	Exception
—— 
e
—— 
)
—— 
{
““ 
throw
”” 
new
”” 
LogicaException
”” )
(
””) *
$str
””* \
,
””\ ]
e
””^ _
)
””_ `
;
””` a
}
‘‘ 
}
’’ 	
private
÷÷ 
int
÷÷ *
RenombrarFotosTipoHabitacion
÷÷ 0
(
÷÷0 1
TipoHabitacion
÷÷1 ?
tipoHabitacion
÷÷@ N
,
÷÷N O$
UserProfileSessionData
÷÷P f
sesionUsuario
÷÷g t
)
÷÷t u
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
string
⁄⁄ 
downloadUrl
⁄⁄ "
=
⁄⁄# $
HotelSettings
⁄⁄% 2
.
⁄⁄2 3
Default
⁄⁄3 :
.
⁄⁄: ;'
ServidorFptTipoHabitacion
⁄⁄; T
.
⁄⁄T U
Split
⁄⁄U Z
(
⁄⁄Z [
$char
⁄⁄[ ^
)
⁄⁄^ _
[
⁄⁄_ `
$num
⁄⁄` a
]
⁄⁄a b
;
⁄⁄b c
string
€€ 
usuario
€€ 
=
€€  
HotelSettings
€€! .
.
€€. /
Default
€€/ 6
.
€€6 7'
ServidorFptTipoHabitacion
€€7 P
.
€€P Q
Split
€€Q V
(
€€V W
$char
€€W Z
)
€€Z [
[
€€[ \
$num
€€\ ]
]
€€] ^
;
€€^ _
string
‹‹ 
password
‹‹ 
=
‹‹  !
HotelSettings
‹‹" /
.
‹‹/ 0
Default
‹‹0 7
.
‹‹7 8'
ServidorFptTipoHabitacion
‹‹8 Q
.
‹‹Q R
Split
‹‹R W
(
‹‹W X
$char
‹‹X [
)
‹‹[ \
[
‹‹\ ]
$num
‹‹] ^
]
‹‹^ _
;
‹‹_ `
int
›› 
	indicador
›› 
=
›› 
$num
››  !
;
››! "
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
archivoFoto
ﬁﬁ (
in
ﬁﬁ) +
tipoHabitacion
ﬁﬁ, :
.
ﬁﬁ: ;
Fotos
ﬁﬁ; @
.
ﬁﬁ@ A
Where
ﬁﬁA F
(
ﬁﬁF G
th
ﬁﬁG I
=>
ﬁﬁJ L
th
ﬁﬁM O
.
ﬁﬁO P
Nombre
ﬁﬁP V
!=
ﬁﬁW Y
null
ﬁﬁZ ^
)
ﬁﬁ^ _
)
ﬁﬁ_ `
{
ﬂﬂ 
FtpWebRequest
‡‡ !
request
‡‡" )
=
‡‡* +
(
‡‡, -
FtpWebRequest
‡‡- :
)
‡‡: ;

WebRequest
‡‡; E
.
‡‡E F
Create
‡‡F L
(
‡‡L M
downloadUrl
‡‡M X
+
‡‡Y Z
$str
‡‡[ ^
+
‡‡_ `
sesionUsuario
‡‡a n
.
‡‡n o
Sede
‡‡o s
.
‡‡s t!
DocumentoIdentidad‡‡t Ü
+‡‡á à
$str‡‡â å
+‡‡ç é
archivoFoto‡‡è ö
.‡‡ö õ
Nombre‡‡õ °
)‡‡° ¢
;‡‡¢ £
request
·· 
.
·· 
Method
·· "
=
··# $
WebRequestMethods
··% 6
.
··6 7
Ftp
··7 :
.
··: ;
Rename
··; A
;
··A B
request
‚‚ 
.
‚‚ 
Credentials
‚‚ '
=
‚‚( )
new
‚‚* -
NetworkCredential
‚‚. ?
(
‚‚? @
usuario
‚‚@ G
,
‚‚G H
password
‚‚I Q
)
‚‚Q R
;
‚‚R S
request
„„ 
.
„„ 
RenameTo
„„ $
=
„„% &
tipoHabitacion
„„' 5
.
„„5 6
Id
„„6 8
+
„„9 :
$str
„„; >
+
„„? @
	indicador
„„A J
+
„„K L
$str
„„M S
;
„„S T
request
‰‰ 
.
‰‰ 
	UseBinary
‰‰ %
=
‰‰& '
true
‰‰( ,
;
‰‰, -
FtpWebResponse
ÂÂ "
response
ÂÂ# +
=
ÂÂ, -
(
ÂÂ. /
FtpWebResponse
ÂÂ/ =
)
ÂÂ= >
request
ÂÂ> E
.
ÂÂE F
GetResponse
ÂÂF Q
(
ÂÂQ R
)
ÂÂR S
;
ÂÂS T
Stream
ÊÊ 
	ftpStream
ÊÊ $
=
ÊÊ% &
response
ÊÊ' /
.
ÊÊ/ 0
GetResponseStream
ÊÊ0 A
(
ÊÊA B
)
ÊÊB C
;
ÊÊC D
	ftpStream
ÁÁ 
.
ÁÁ 
Close
ÁÁ #
(
ÁÁ# $
)
ÁÁ$ %
;
ÁÁ% &
response
ËË 
.
ËË 
Close
ËË "
(
ËË" #
)
ËË# $
;
ËË$ %
++
ÈÈ 
	indicador
ÈÈ 
;
ÈÈ  
}
ÍÍ 
return
ÎÎ 
	indicador
ÎÎ  
;
ÎÎ  !
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
e
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ 
LogicaException
ÔÔ )
(
ÔÔ) *
$str
ÔÔ* \
,
ÔÔ\ ]
e
ÔÔ^ _
)
ÔÔ_ `
;
ÔÔ` a
}
 
}
ÚÚ 	
}
ÛÛ 
}ÙÙ È‡
ID:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesParking\CocheraLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
public 

class 
CocheraLogica 
:  
ICocheraLogica! /
{ 
private 
readonly 
IActorRepositorio *
_actorRepositorio+ <
;< =
private 
readonly 
IActor_Repositorio +
_actor_Repositorio, >
;> ?
private 
readonly 
IMaestroRepositorio ,
_maestroRepositorio- @
;@ A
private 
readonly  
IConceptoRepositorio - 
_conceptoRepositorio. B
;B C
private 
readonly 
ICocheraRepositorio ,
_cocheraRepositorio- @
;@ A
private   
readonly   #
ITransaccionRepositorio   0#
_transaccionRepositorio  1 H
;  H I
private!! 
readonly!! 
IPrecioRepositorio!! +
_precioRepositorio!!, >
;!!> ?
private"" 
readonly"" 
IOperacionLogica"" )
_operacionLogica""* :
;"": ;
private## 
readonly## 
IBarCodeUtil## %
_barCodeUtil##& 2
;##2 3
private%% 
readonly%% %
IVinculoActor_Repositorio%% 2
_vinculoActorDatos%%3 E
;%%E F
private&& 
readonly&& )
ICentroDeAtencion_Repositorio&& 6"
_centroDeAtencionDatos&&7 M
;&&M N
public)) 
CocheraLogica)) 
()) 
IActorRepositorio)) .
actorRepositorio))/ ?
,))? @#
ITransaccionRepositorio))A X"
transaccionRepositorio))Y o
,))o p 
IMaestroRepositorio	))q Ñ 
maestroRepositorio
))Ö ó
,
))ó ò"
IConceptoRepositorio
))ô ≠!
conceptoRepositorio
))Æ ¡
,
))¡ ¬!
ICocheraRepositorio
))√ ÷ 
cocheraRepositorio
))◊ È
,
))È Í 
IPrecioRepositorio
))Î ˝
precioRepositorio
))˛ è
,
))è ê
IBarCodeUtil
))ë ù
barCodeUtil
))û ©
,
))© ™%
IFacturacionRepositorio
))´ ¬$
facturacionRepositorio
))√ Ÿ
,
))Ÿ ⁄&
ICodigosOperacion_Logica
))‹ Ù$
codigosOperacionLogica
))ı ã
,
))ã å
IPermisos_Logica
))ç ù
permisosLogica
))û ¨
,
))¨ ≠ 
IActor_Repositorio
))Æ ¿
actor_Repositorio
))¡ “
,
))“ ”'
IVinculoActor_Repositorio
))‘ Ì
vinculoActorDatos
))Ó ˇ
,
))ˇ Ä+
ICentroDeAtencion_Repositorio
))Å û#
centroDeAtencionDatos
))ü ¥
)
))¥ µ
{** 	
_actorRepositorio++ 
=++ 
actorRepositorio++  0
;++0 1#
_transaccionRepositorio,, #
=,,$ %"
transaccionRepositorio,,& <
;,,< = 
_conceptoRepositorio--  
=--! "
conceptoRepositorio--# 6
;--6 7
_maestroRepositorio.. 
=..  !
maestroRepositorio.." 4
;..4 5
_cocheraRepositorio// 
=//  !
cocheraRepositorio//" 4
;//4 5
_precioRepositorio00 
=00  
precioRepositorio00! 2
;002 3
_barCodeUtil11 
=11 
barCodeUtil11 &
;11& '
_operacionLogica22 
=22 
new22 "
OperacionLogica22# 2
(222 3#
_transaccionRepositorio223 J
,22J K
_maestroRepositorio22L _
,22_ `
_actorRepositorio22a r
,22r s!
_conceptoRepositorio	22t à
,
22à â$
facturacionRepositorio
22ä †
,
22† °$
codigosOperacionLogica
22¢ ∏
,
22∏ π
permisosLogica
22∫ »
,
22» …
null
22  Œ
,
22Œ œ
null
22œ ”
,
22” ‘
null
22‘ ÿ
,
22ÿ Ÿ
null
22⁄ ﬁ
)
22ﬁ ﬂ
;
22ﬂ ‡
_actor_Repositorio33 
=33  
actor_Repositorio33! 2
;332 3
_vinculoActorDatos44 
=44  
vinculoActorDatos44! 2
;442 3"
_centroDeAtencionDatos55 "
=55# $!
centroDeAtencionDatos55% :
;55: ;
}66 	
public88 
Actor_negocio88 !
GenerarActorDeNegocio88 2
(882 3
Vehiculo883 ;
vehiculo88< D
)88D E
{99 	
try:: 
{;; 
DateTime<< 
fechaActual<< $
=<<% &
DateTimeUtil<<' 3
.<<3 4
FechaActual<<4 ?
(<<? @
)<<@ A
;<<A B
DateTime== 
fechaFin== !
===" #
fechaActual==$ /
.==/ 0
AddYears==0 8
(==8 9
ActorSettings==9 F
.==F G
Default==G N
.==N OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	==O Ü
)
==Ü á
;
==á à
Actor_negocio?? #
_vehiculoActorDeNegocio?? 5
=??6 7
new??8 ;
Actor_negocio??< I
(??I J
CocheraSettings??J Y
.??Y Z
Default??Z a
.??a b
IdRolVehiculo??b o
,??o p
fechaActual??q |
,??| }
fechaFin	??~ Ü
,
??Ü á
$str
??à ä
,
??ä ã
true
??å ê
,
??ê ë
false
??í ó
,
??ó ò
$str
??ô õ
)
??õ ú
;
??ú ù
ActorAA 
actorAA 
=AA 
newAA !
ActorAA" '
(AA' (
CocheraSettingsAA( 7
.AA7 8
DefaultAA8 ?
.AA? @)
IdTipoDocumentoIdentidadPlacaAA@ ]
,AA] ^
fechaActualAA_ j
,AAj k
vehiculoAAl t
.AAt u
PlacaAAu z
,AAz {
vehiculo	AA| Ñ
.
AAÑ Ö
TipoDeVehiculo
AAÖ ì
.
AAì î
Nombre
AAî ö
,
AAö õ
vehiculo
AAú §
.
AA§ •
Marca
AA• ™
.
AA™ ´
Nombre
AA´ ±
,
AA± ≤
$str
AA≥ µ
,
AAµ ∂
CocheraSettings
AA∑ ∆
.
AA∆ «
Default
AA« Œ
.
AAŒ œ!
IdTipoActorVehiculo
AAœ ‚
,
AA‚ „
ActorSettingsBB !
.BB! "
DefaultBB" )
.BB) *!
IdFotoActorPorDefectoBB* ?
,BB? @
vehiculoBBA I
.BBI J
TipoDeVehiculoBBJ X
.BBX Y
IdBBY [
,BB[ \
CocheraSettingsBB] l
.BBl m
DefaultBBm t
.BBt u;
.IdEstadoLegalNoEspecificadoDeTipoActorVehiculo	BBu £
,
BB£ §
$str
BB• ß
,
BBß ®
vehiculo
BB© ±
.
BB± ≤
Color
BB≤ ∑
,
BB∑ ∏
$str
BBπ ª
)
BBª º
{CC %
id_detalle_multipropositoDD -
=DD. /
vehiculoDD0 8
.DD8 9
MarcaDD9 >
.DD> ?
IdDD? A
}EE 
;EE #
_vehiculoActorDeNegocioGG '
.GG' (
ActorGG( -
=GG. /
actorGG0 5
;GG5 6
returnHH #
_vehiculoActorDeNegocioHH .
;HH. /
}II 
catchJJ 
(JJ 
	ExceptionJJ 
eJJ 
)JJ 
{KK 
throwLL 
newLL 
LogicaExceptionLL )
(LL) *
$strLL* j
,LLj k
eLLl m
)LLm n
;LLn o
}MM 
}NN 	
publicOO 
OperationResultOO 
RegistrarVehiculoOO 0
(OO0 1
VehiculoOO1 9
vehiculoOO: B
)OOB C
{PP 	
tryQQ 
{RR 
varSS "
vehiculoActorDeNegocioSS *
=SS+ ,!
GenerarActorDeNegocioSS- B
(SSB C
vehiculoSSC K
)SSK L
;SSL M
varTT 
	resultadoTT 
=TT 
_actor_RepositorioTT  2
.TT2 3
CrearActorNegocioTT3 D
(TTD E"
vehiculoActorDeNegocioTTE [
)TT[ \
;TT\ ]
vehiculoVV 
.VV 
IdVV 
=VV "
vehiculoActorDeNegocioVV 4
.VV4 5
idVV5 7
;VV7 8
vehiculoWW 
.WW 
IdActorWW  
=WW! ""
vehiculoActorDeNegocioWW# 9
.WW9 :
id_actorWW: B
;WWB C
	resultadoXX 
.XX 
informationXX %
=XX& '
vehiculoXX( 0
;XX0 1
returnYY 
	resultadoYY  
;YY  !
}ZZ 
catch[[ 
([[ 
	Exception[[ 
e[[ 
)[[ 
{\\ 
throw]] 
new]] 
LogicaException]] )
(]]) *
$str]]* P
,]]P Q
e]]R S
)]]S T
;]]T U
}^^ 
}__ 	
publicaa 
OperationResultaa 
EditarVehiculoaa -
(aa- .
Vehiculoaa. 6
vehiculoaa7 ?
)aa? @
{bb 	
trycc 
{dd 
DateTimeee 
fechaActualee $
=ee% &
DateTimeUtilee' 3
.ee3 4
FechaActualee4 ?
(ee? @
)ee@ A
;eeA B
DateTimeff 
fechaFinff !
=ff" #
fechaActualff$ /
.ff/ 0
AddYearsff0 8
(ff8 9
ActorSettingsff9 F
.ffF G
DefaultffG N
.ffN OD
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInterna	ffO Ü
)
ffÜ á
;
ffá à
Actor_negociohh #
_vehiculoActorDeNegociohh 5
=hh6 7
newhh8 ;
Actor_negociohh< I
(hhI J
vehiculohhJ R
.hhR S
IdhhS U
,hhU V
vehiculohhW _
.hh_ `
IdActorhh` g
,hhg h
CocheraSettingshhi x
.hhx y
Default	hhy Ä
.
hhÄ Å
IdRolVehiculo
hhÅ é
,
hhé è
fechaActual
hhê õ
,
hhõ ú
fechaFin
hhù •
,
hh• ¶
$str
hhß ©
,
hh© ™
true
hh´ Ø
,
hhØ ∞
false
hh± ∂
,
hh∂ ∑
$str
hh∏ ∫
)
hh∫ ª
;
hhª º
Actorjj 
actorjj 
=jj 
newjj !
Actorjj" '
(jj' (
vehiculojj( 0
.jj0 1
IdActorjj1 8
,jj8 9
CocheraSettingsjj: I
.jjI J
DefaultjjJ Q
.jjQ R)
IdTipoDocumentoIdentidadPlacajjR o
,jjo p
fechaActualjjq |
,jj| }
vehiculo	jj~ Ü
.
jjÜ á
Placa
jjá å
,
jjå ç
vehiculo
jjé ñ
.
jjñ ó
TipoDeVehiculo
jjó •
.
jj• ¶
Nombre
jj¶ ¨
,
jj¨ ≠
vehiculo
jjÆ ∂
.
jj∂ ∑
Marca
jj∑ º
.
jjº Ω
Nombre
jjΩ √
,
jj√ ƒ
$str
jj≈ «
,
jj« »
CocheraSettings
jj… ÿ
.
jjÿ Ÿ
Default
jjŸ ‡
.
jj‡ ·!
IdTipoActorVehiculo
jj· Ù
,
jjÙ ı
ActorSettings
jjˆ É
.
jjÉ Ñ
Default
jjÑ ã
.
jjã å#
IdFotoActorPorDefecto
jjå °
,
jj° ¢
vehiculo
jj£ ´
.
jj´ ¨
TipoDeVehiculo
jj¨ ∫
.
jj∫ ª
Id
jjª Ω
,
jjΩ æ
CocheraSettings
jjø Œ
.
jjŒ œ
Default
jjœ ÷
.
jj÷ ◊<
.IdEstadoLegalNoEspecificadoDeTipoActorVehiculo
jj◊ Ö
,
jjÖ Ü
$str
jjá â
,
jjâ ä
vehiculo
jjã ì
.
jjì î
Color
jjî ô
,
jjô ö
$str
jjõ ù
)
jjù û
{kk %
id_detalle_multipropositoll -
=ll. /
vehiculoll0 8
.ll8 9
Marcall9 >
.ll> ?
Idll? A
}mm 
;mm #
_vehiculoActorDeNegociooo '
.oo' (
Actoroo( -
=oo. /
actoroo0 5
;oo5 6
varpp 
	resultadopp 
=pp 
_actor_Repositoriopp  2
.pp2 3"
ActualizarActorNegociopp3 I
(ppI J#
_vehiculoActorDeNegocioppJ a
)ppa b
;ppb c
	resultadoqq 
.qq 
informationqq %
=qq& '
vehiculoqq( 0
;qq0 1
returnrr 
	resultadorr  
;rr  !
}ss 
catchtt 
(tt 
	Exceptiontt 
ett 
)tt 
{uu 
throwvv 
newvv 
LogicaExceptionvv )
(vv) *
$strvv* P
,vvP Q
evvR S
)vvS T
;vvT U
}ww 
}xx 	
publiczz 
OperationResultzz 
ExonerarVehiculozz /
(zz/ 0
Vehiculozz0 8
vehiculozz9 A
,zzA B
intzzC F
	idCocherazzG P
)zzP Q
{{{ 	
try|| 
{}} 
DateTime 
fechaActual $
=% &
DateTimeUtil' 3
.3 4
FechaActual4 ?
(? @
)@ A
;A B
if
ÅÅ 
(
ÅÅ  
_vinculoActorDatos
ÅÅ &
.
ÅÅ& '"
ExisteVinculoVigente
ÅÅ' ;
(
ÅÅ; <
vehiculo
ÅÅ< D
.
ÅÅD E
Id
ÅÅE G
,
ÅÅG H
	idCochera
ÅÅI R
)
ÅÅR S
)
ÅÅS T
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
LogicaException
ÉÉ -
(
ÉÉ- .
$str
ÉÉ. U
)
ÉÉU V
;
ÉÉV W
}
ÑÑ 
else
ÖÖ 
{
ÜÜ #
Vinculo_Actor_Negocio
àà )
vinculo
àà* 1
=
àà2 3
new
àà4 7#
Vinculo_Actor_Negocio
àà8 M
{
ààN O(
id_actor_negocio_vinculado
ààP j
=
ààk l
vehiculo
ààm u
.
ààu v
Id
ààv x
,
ààx y)
id_actor_negocio_principalààz î
=ààï ñ
	idCocheraààó †
,àà† °
tipo_vinculoàà¢ Æ
=ààØ ∞
(àà± ≤
intàà≤ µ
)ààµ ∂
TipoVinculoàà∂ ¡
.àà¡ ¬*
VehiculoExoneradoEnCocheraàà¬ ‹
,àà‹ ›
desdeààﬁ „
=àà‰ Â
fechaActualààÊ Ò
,ààÒ Ú
hastaààÛ ¯
=àà˘ ˙
fechaActualàà˚ Ü
.ààÜ á
AddDaysààá é
(ààé è
CocheraSettingsààè û
.ààû ü
Defaultààü ¶
.àà¶ ß2
"DiasDeExoneracionDelPagoPorDefectoààß …
)àà…  
,àà  À
descripcionààÃ ◊
=ààÿ Ÿ
$stràà⁄ ‹
,àà‹ ›

es_vigenteààﬁ Ë
=ààÈ Í
trueààÎ Ô
}àà Ò
;ààÒ Ú
return
ââ  
_vinculoActorDatos
ââ -
.
ââ- .&
CrearVinculoActorNegocio
ââ. F
(
ââF G
vinculo
ââG N
)
ââN O
;
ââO P
}
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
LogicaException
éé )
(
éé) *
$str
éé* P
+
ééQ R
vehiculo
ééS [
.
éé[ \
Placa
éé\ a
,
ééa b
e
ééc d
)
ééd e
;
éée f
}
èè 
}
êê 	
public
ëë 
OperationResult
ëë (
QuitarExoneracionAVehiculo
ëë 9
(
ëë9 :#
ExoneracionDeVehiculo
ëë: O
vehiculoExonerado
ëëP a
)
ëëa b
{
íí 	
try
ìì 
{
îî 
DateTime
ññ 
fechaActual
ññ $
=
ññ% &
DateTimeUtil
ññ' 3
.
ññ3 4
FechaActual
ññ4 ?
(
ññ? @
)
ññ@ A
;
ññA B
return
òò  
_vinculoActorDatos
òò )
.
òò) *(
CaducarVinculoActorNegocio
òò* D
(
òòD E
vehiculoExonerado
òòE V
.
òòV W
Id
òòW Y
,
òòY Z
fechaActual
òò[ f
)
òòf g
;
òòg h
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
õõ 
throw
úú 
new
úú 
LogicaException
úú )
(
úú) *
$str
úú* a
+
úúb c
vehiculoExonerado
úúd u
.
úúu v
Vehiculo
úúv ~
.
úú~ 
Placaúú Ñ
,úúÑ Ö
eúúÜ á
)úúá à
;úúà â
}
ùù 
}
ûû 	
public
†† 
List
†† 
<
†† #
ExoneracionDeVehiculo
†† )
>
††) *(
ObtenerVehiculosExonerados
††+ E
(
††E F
int
††F I
	idCochera
††J S
)
††S T
{
°° 	
try
¢¢ 
{
££ 
return
§§ !
_cocheraRepositorio
§§ *
.
§§* +"
ObtenerExoneraciones
§§+ ?
(
§§? @
	idCochera
§§@ I
)
§§I J
;
§§J K
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* Z
,
®®Z [
e
®®\ ]
)
®®] ^
;
®®^ _
}
©© 
}
™™ 	
public
¨¨ 
List
¨¨ 
<
¨¨ #
ExoneracionDeVehiculo
¨¨ )
>
¨¨) *0
"ObtenerVehiculosExoneradosVigentes
¨¨+ M
(
¨¨M N
int
¨¨N Q
	idCochera
¨¨R [
)
¨¨[ \
{
≠≠ 	
try
ÆÆ 
{
ØØ 
return
∞∞ !
_cocheraRepositorio
∞∞ *
.
∞∞* +*
ObtenerExoneracionesVigentes
∞∞+ G
(
∞∞G H
	idCochera
∞∞H Q
)
∞∞Q R
;
∞∞R S
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
e
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ 
LogicaException
¥¥ )
(
¥¥) *
$str
¥¥* c
,
¥¥c d
e
¥¥e f
)
¥¥f g
;
¥¥g h
}
µµ 
}
∂∂ 	
public
∏∏ 
List
∏∏ 
<
∏∏ 
ItemGenerico
∏∏  
>
∏∏  !
ObtenerCocheras
∏∏" 1
(
∏∏1 2
)
∏∏2 3
{
ππ 	
try
∫∫ 
{
ªª 
return
ºº $
_centroDeAtencionDatos
ºº -
.
ºº- .D
6ObtenerCentrosDeAtencionComoItemsGenericosSegunRolHijo
ºº. d
(
ººd e
CocheraSettings
ººe t
.
ººt u
Default
ººu |
.
ºº| }
IdRolCocheraºº} â
,ººâ ä
trueººä é
)ººé è
.ººè ê
ToListººê ñ
(ººñ ó
)ººó ò
;ººò ô
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
e
¿¿ 
)
¿¿ 
{
¡¡ 
throw
¬¬ 
new
¬¬ 
LogicaException
¬¬ )
(
¬¬) *
$str
¬¬* N
,
¬¬N O
e
¬¬P Q
)
¬¬Q R
;
¬¬R S
}
√√ 
}
ƒƒ 	
public
∆∆ 
bool
∆∆ *
VehiculoSeEncuentraIngresado
∆∆ 0
(
∆∆0 1
Vehiculo
∆∆1 9
vehiculo
∆∆: B
,
∆∆B C
SesionCochera
∆∆D Q
sesionCochera
∆∆R _
)
∆∆_ `
{
«« 	
return
»» %
_transaccionRepositorio
»» *
.
»»* +
ExisteTransaccion
»»+ <
(
»»< =
CocheraSettings
»»= L
.
»»L M
Default
»»M T
.
»»T U2
$IdTipoTransaccionMovimientoDeCochera
»»U y
,
»»y z
sesionCochera»»{ à
.»»à â
	IdCochera»»â í
,»»í ì
vehiculo»»î ú
.»»ú ù
Id»»ù ü
,»»ü †
MaestroSettings»»° ∞
.»»∞ ±
Default»»± ∏
.»»∏ π/
IdDetalleMaestroEstadoIngresado»»π ÿ
)»»ÿ Ÿ
;»»Ÿ ⁄
}
…… 	
public
   
Modelo
   
.
   
	Entidades
   
.
    
Comprobante
    + 
GenerarComprobante
  , >
(
  > ?
SesionCochera
  ? L
sesionCochera
  M Z
)
  Z [
{
ÀÀ 	
Serie_comprobante
ÕÕ 
serie
ÕÕ #
=
ÕÕ$ %%
_transaccionRepositorio
ÕÕ& =
.
ÕÕ= >M
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante
ÕÕ> }
(
ÕÕ} ~
CocheraSettingsÕÕ~ ç
.ÕÕç é
DefaultÕÕé ï
.ÕÕï ñD
4IdDetalleMaestroComprobanteNotaDeMovimientoDeCocheraÕÕñ  
,ÕÕ  À
sesionCocheraÕÕÃ Ÿ
.ÕÕŸ ⁄
SesionDeUsuarioÕÕ⁄ È
.ÕÕÈ Í.
IdCentroDeAtencionSeleccionadoÕÕÍ à
)ÕÕà â
;ÕÕâ ä
if
ŒŒ 
(
ŒŒ 
serie
ŒŒ 
==
ŒŒ 
null
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– 
LogicaException
–– )
(
––) *
$str
––* w
)
––w x
;
––x y
}
—— 
Modelo
”” 
.
”” 
	Entidades
”” 
.
”” 
Comprobante
”” (
comprobante
””) 4
=
””5 6
_operacionLogica
””7 G
.
””G HO
@GenerarComprobantePropioAutonumerableMarcandoSerieComoModificada””H à
(””à â
serie””â é
)””é è
;””è ê
return
‘‘ 
comprobante
‘‘ 
;
‘‘ 
}
’’ 	
public
◊◊ 
Transaccion
◊◊ '
GenerarTransaccionIngreso
◊◊ 4
(
◊◊4 5
SesionCochera
◊◊5 B
sesionCochera
◊◊C P
,
◊◊P Q
Ingreso
◊◊R Y
ingreso
◊◊Z a
,
◊◊a b
DateTime
◊◊c k
fecha
◊◊l q
)
◊◊q r
{
ÿÿ 	
Transaccion
⁄⁄  
transaccionIngreso
⁄⁄ *
=
⁄⁄+ ,
ingreso
⁄⁄- 4
.
⁄⁄4 5
Convert
⁄⁄5 <
(
⁄⁄< =
sesionCochera
⁄⁄= J
.
⁄⁄J K
SesionDeUsuario
⁄⁄K Z
,
⁄⁄Z [
fecha
⁄⁄\ a
)
⁄⁄a b
;
⁄⁄b c
ingreso
€€ 
.
€€ 
	FechaHora
€€ 
=
€€ 
fecha
€€  %
;
€€% & 
transaccionIngreso
›› 
.
›› 
Comprobante
›› *
=
››+ , 
GenerarComprobante
››- ?
(
››? @
sesionCochera
››@ M
)
››M N
;
››N O 
Estado_transaccion
ﬂﬂ 
estadoIngresado
ﬂﬂ .
=
ﬂﬂ/ 0
new
ﬂﬂ1 4 
Estado_transaccion
ﬂﬂ5 G
(
ﬂﬂG H
sesionCochera
ﬂﬂH U
.
ﬂﬂU V
SesionDeUsuario
ﬂﬂV e
.
ﬂﬂe f-
IdCentroDeAtencionSeleccionadoﬂﬂf Ñ
,ﬂﬂÑ Ö
MaestroSettingsﬂﬂÜ ï
.ﬂﬂï ñ
Defaultﬂﬂñ ù
.ﬂﬂù û/
IdDetalleMaestroEstadoIngresadoﬂﬂû Ω
,ﬂﬂΩ æ
fechaﬂﬂø ƒ
,ﬂﬂƒ ≈
$strﬂﬂ∆ ¯
)ﬂﬂ¯ ˘
;ﬂﬂ˘ ˙ 
transaccionIngreso
·· 
.
··  
Estado_transaccion
·· 1
.
··1 2
Add
··2 5
(
··5 6
estadoIngresado
··6 E
)
··E F
;
··F G
return
‚‚  
transaccionIngreso
‚‚ %
;
‚‚% &
}
„„ 	
public
ÂÂ 
OperationResult
ÂÂ 
RegistrarIngreso
ÂÂ /
(
ÂÂ/ 0
SesionCochera
ÂÂ0 =
sesionCochera
ÂÂ> K
,
ÂÂK L
Ingreso
ÂÂM T
ingreso
ÂÂU \
)
ÂÂ\ ]
{
ÊÊ 	
try
ÁÁ 
{
ËË 
if
ÎÎ 
(
ÎÎ *
VehiculoSeEncuentraIngresado
ÎÎ 0
(
ÎÎ0 1
ingreso
ÎÎ1 8
.
ÎÎ8 9
Vehiculo
ÎÎ9 A
,
ÎÎA B
sesionCochera
ÎÎC P
)
ÎÎP Q
)
ÎÎQ R
{
ÏÏ 
throw
ÌÌ 
new
ÌÌ *
VehiculoYaIngresadoException
ÌÌ :
(
ÌÌ: ;
ingreso
ÌÌ; B
.
ÌÌB C
Vehiculo
ÌÌC K
.
ÌÌK L
Placa
ÌÌL Q
)
ÌÌQ R
;
ÌÌR S
}
ÓÓ 
DateTime
ÔÔ 
fechaActual
ÔÔ $
=
ÔÔ% &
DateTimeUtil
ÔÔ' 3
.
ÔÔ3 4
FechaActual
ÔÔ4 ?
(
ÔÔ? @
)
ÔÔ@ A
;
ÔÔA B
var
ÒÒ  
transaccionIngreso
ÒÒ &
=
ÒÒ' ('
GenerarTransaccionIngreso
ÒÒ) B
(
ÒÒB C
sesionCochera
ÒÒC P
,
ÒÒP Q
ingreso
ÒÒR Y
,
ÒÒY Z
fechaActual
ÒÒ[ f
)
ÒÒf g
;
ÒÒg h
var
ÚÚ 
	resultado
ÚÚ 
=
ÚÚ 
GuardarIngreso
ÚÚ  .
(
ÚÚ. / 
transaccionIngreso
ÚÚ/ A
)
ÚÚA B
;
ÚÚB C
ingreso
ÙÙ 
.
ÙÙ 
EsValido
ÙÙ  
=
ÙÙ! "
true
ÙÙ# '
;
ÙÙ' (
	resultado
ıı 
.
ıı 
information
ıı %
=
ıı& '
new
ıı( +"
TicketIngresoCochera
ıı, @
(
ıı@ A
sesionCochera
ııA N
.
ııN O
SesionDeUsuario
ııO ^
.
ıı^ _
Sede
ıı_ c
,
ııc d
sesionCochera
ııe r
.
ıır s
SesionDeUsuarioııs Ç
.ııÇ É4
$EstablecimientoComercialSeleccionadoııÉ ß
,ııß ®
ingresoıı© ∞
,ıı∞ ±"
transaccionIngresoıı≤ ƒ
.ııƒ ≈
Comprobanteıı≈ –
.ıı– —
numero_serieıı— ›
,ıı› ﬁ"
transaccionIngresoııﬂ Ò
.ııÒ Ú
ComprobanteııÚ ˝
.ıı˝ ˛
numeroıı˛ Ñ
,ııÑ Ö
_barCodeUtilııÜ í
.ııí ì#
ObtenerCodigoBarrasııì ¶
(ıı¶ ß
ingresoııß Æ
.ııÆ Ø
VehiculoııØ ∑
.ıı∑ ∏
Placaıı∏ Ω
)ııΩ æ
)ııæ ø
;ııø ¿
return
ˆˆ 
	resultado
ˆˆ  
;
ˆˆ  !
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
e
¯¯ 
)
¯¯ 
{
˘˘ 
throw
˙˙ 
new
˙˙ 
LogicaException
˙˙ )
(
˙˙) *
$str
˙˙* [
,
˙˙[ \
e
˙˙] ^
)
˙˙^ _
;
˙˙_ `
}
˚˚ 
}
¸¸ 	
public
˛˛ 
OperationResult
˛˛ 
GuardarIngreso
˛˛ -
(
˛˛- .
Transaccion
˛˛. 9 
transaccionIngreso
˛˛: L
)
˛˛L M
{
ˇˇ 	
OperationResult
ÄÄ 
	resultado
ÄÄ %
=
ÄÄ& '
null
ÄÄ( ,
;
ÄÄ, -
bool
ÅÅ 7
)hayProblemaDeConcurrenciaSerieComprobante
ÅÅ :
;
ÅÅ: ;
do
ÇÇ 
{
ÉÉ 7
)hayProblemaDeConcurrenciaSerieComprobante
ÑÑ 9
=
ÑÑ: ;
false
ÑÑ< A
;
ÑÑA B
try
ÖÖ 
{
ÜÜ 
	resultado
àà 
=
àà %
_transaccionRepositorio
àà  7
.
àà7 8
CrearTransaccion
àà8 H
(
ààH I 
transaccionIngreso
ààI [
)
àà[ \
;
àà\ ]
}
ââ 
catch
ää 
(
ää '
SerieComprobanteException
ää 0
e
ää1 2
)
ää2 3
{
ãã %
_transaccionRepositorio
åå +
.
åå+ ,
RefreshEntity
åå, 9
(
åå9 :
e
åå: ;
.
åå; <
serieComprobante
åå< L
)
ååL M
;
ååM N
_operacionLogica
éé $
.
éé$ %?
1RegenerarNumeracionComprobantePropioAutonumerable
éé% V
(
ééV W 
transaccionIngreso
ééW i
.
ééi j
Comprobante
ééj u
,
ééu v
e
ééw x
.
ééx y
serieComprobanteééy â
)ééâ ä
;ééä ã7
)hayProblemaDeConcurrenciaSerieComprobante
èè =
=
èè> ?
true
èè@ D
;
èèD E
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë  
)
ëë  !
{
íí 
throw
îî 
;
îî 
}
ïï 
return
ññ 
	resultado
ññ  
;
ññ  !
}
óó 
while
òò 
(
òò 7
)hayProblemaDeConcurrenciaSerieComprobante
òò <
)
òò< =
;
òò= >
}
ôô 	
public
õõ 
SesionCochera
õõ 
ObtenerSesion
õõ *
(
õõ* +$
UserProfileSessionData
õõ+ A
sesionDeUsuario
õõB Q
)
õõQ R
{
úú 	
var
ùù 
configuracion
ùù 
=
ùù "
ObtenerConfiguracion
ùù  4
(
ùù4 5
sesionDeUsuario
ùù5 D
.
ùùD E*
CentroDeAtencionSeleccionado
ùùE a
.
ùùa b
Id
ùùb d
)
ùùd e
;
ùùe f
var
ûû 
turnos
ûû 
=
ûû 
TurnoCochera
ûû %
.
ûû% &
Convert
ûû& -
(
ûû- .!
_maestroRepositorio
ûû. A
.
ûûA B
ObtenerTurnos
ûûB O
(
ûûO P
configuracion
ûûP ]
.
ûû] ^
IdTipoDeTurno
ûû^ k
)
ûûk l
)
ûûl m
;
ûûm n
var
†† 
idsConceptos
†† 
=
†† 
(
††  
turnos
††  &
.
††& '
Select
††' -
(
††- .
t
††. /
=>
††0 2
t
††3 4
.
††4 5
Configuracion
††5 B
.
††B C
IdConceptoExceso
††C S
)
††S T
.
††T U
Union
††U Z
(
††Z [
turnos
††[ a
.
††a b
Select
††b h
(
††h i
t
††i j
=>
††k m
t
††n o
.
††o p
Configuracion
††p }
.
††} ~(
IdConceptoServicioCochera††~ ó
)††ó ò
)††ò ô
)††ô ö
.††ö õ
Distinct††õ £
(††£ §
)††§ •
.††• ¶
ToList††¶ ¨
(††¨ ≠
)††≠ Æ
;††Æ Ø
idsConceptos
¢¢ 
.
¢¢ 
AddRange
¢¢ !
(
¢¢! "
new
¢¢" %
int
¢¢& )
[
¢¢) *
]
¢¢* +
{
¢¢, -
configuracion
¢¢. ;
.
¢¢; <'
IdConceptoPerdidaDeTicket
¢¢< U
,
¢¢U V
configuracion
¢¢W d
.
¢¢d e>
/IdConceptoServicioCocheraEnSistemaDePagoPorHora¢¢e î
}¢¢ï ñ
)¢¢ñ ó
;¢¢ó ò
var
§§ 
precios
§§ 
=
§§ 
ImporteConcepto
§§ )
.
§§) *
Convert
§§* 1
(
§§1 2 
_precioRepositorio
§§2 D
.
§§D E$
ObtenerPreciosVigentes
§§E [
(
§§[ \
idsConceptos
§§\ h
.
§§h i
ToArray
§§i p
(
§§p q
)
§§q r
,
§§r s
MaestroSettings§§t É
.§§É Ñ
Default§§Ñ ã
.§§ã å,
IdDetalleMaestroTarifaNormal§§å ®
)§§® ©
.§§© ™
ToList§§™ ∞
(§§∞ ±
)§§± ≤
)§§≤ ≥
;§§≥ ¥
return
¶¶ 
new
¶¶ 
SesionCochera
¶¶ $
{
ßß 
Configuracion
®® 
=
®® 
configuracion
®®  -
,
®®- .
Turnos
©© 
=
©© 
turnos
©© 
,
©©  
SesionDeUsuario
™™ 
=
™™  !
sesionDeUsuario
™™" 1
,
™™1 2
Precios
´´ 
=
´´ 
precios
´´ !
}
¨¨ 
;
¨¨ 
}
≠≠ 	
	protected
ØØ "
ConfiguracionCochera
ØØ &"
ObtenerConfiguracion
ØØ' ;
(
ØØ; <
int
ØØ< ?
	idCochera
ØØ@ I
)
ØØI J
{
∞∞ 	
if
±± 
(
±± 
CocheraSettings
±± 
.
±±  
Default
±±  '
.
±±' (!
TipoDeConfiguracion
±±( ;
==
±±< >
(
±±? @
int
±±@ C
)
±±C D
TipoConfiguracion
±±D U
.
±±U V
GENERAL
±±V ]
)
±±] ^
{
≤≤ 
return
≥≥ 
new
≥≥ "
ConfiguracionCochera
≥≥ /
{
¥¥ '
IdConceptoPerdidaDeTicket
µµ -
=
µµ. /
CocheraSettings
µµ0 ?
.
µµ? @
Default
µµ@ G
.
µµG H-
IdConceptoNegocioPerdidaTickect
µµH g
,
µµg h=
/IdConceptoServicioCocheraEnSistemaDePagoPorHora
∂∂ C
=
∂∂D E
CocheraSettings
∂∂F U
.
∂∂U V
Default
∂∂V ]
.
∂∂] ^E
6IdConceptoNegocioServicioCocheraEnSistemaDePagoPorHora∂∂^ î
,∂∂î ï7
)MinutosDeToleranciaEnSistemaDePagoPorHora
∑∑ =
=
∑∑> ?
CocheraSettings
∑∑@ O
.
∑∑O P
Default
∑∑P W
.
∑∑W X5
'ToleranciaEnMinutosSistemaDePagoPorHora
∑∑X 
,∑∑ ÄD
6MinutosDeToleranciaExcesoEnSistemaDePagoPlanaPorTurnos
∏∏ J
=
∏∏K L
CocheraSettings
∏∏M \
.
∏∏\ ]
Default
∏∏] d
.
∏∏d eC
4ToleranciaExcesoEnMinutosSistemaDePagoPlanaPorTurnos∏∏e ô
,∏∏ô ö
IdTipoDeTurno
ππ !
=
ππ" #
CocheraSettings
ππ$ 3
.
ππ3 4
Default
ππ4 ;
.
ππ; <.
 IdDetalleMaestroTipoTurnoCochera
ππ< \
,
ππ\ ]9
+PeriodosHabilitadosEnSistemasDePagoAbonados
∫∫ ?
=
∫∫@ A
	Convertir
∫∫B K
.
∫∫K L
Periodos
∫∫L T
(
∫∫T U
CocheraSettings
∫∫U d
.
∫∫d e
Default
∫∫e l
.
∫∫l m:
+PeriodosHabilitadosEnSistemasDePagoAbonados∫∫m ò
)∫∫ò ô
,∫∫ô ö'
SistemasDePagoHabilitados
ªª -
=
ªª. /
	Convertir
ªª0 9
.
ªª9 :#
SistemasDePagoCochera
ªª: O
(
ªªO P
CocheraSettings
ªªP _
.
ªª_ `
Default
ªª` g
.
ªªg h(
SistemasDePagoHabilitadosªªh Å
)ªªÅ Ç
}
ºº 
;
ºº 
}
ΩΩ 
else
ææ 
{
øø 
return
¿¿ !
_cocheraRepositorio
¿¿ *
.
¿¿* +"
ObtenerConfiguracion
¿¿+ ?
(
¿¿? @
	idCochera
¿¿@ I
)
¿¿I J
;
¿¿J K
}
¡¡ 
}
√√ 	
public
≈≈ 
void
≈≈ &
DeterminarTiempoDeExceso
≈≈ ,
(
≈≈, -
MovimientoCochera
≈≈- >

movimiento
≈≈? I
,
≈≈I J
SesionCochera
≈≈K X
sesionCochera
≈≈Y f
)
≈≈f g
{
∆∆ 	
var
«« !
toleranciaEnMinutos
«« #
=
««$ %
sesionCochera
««& 3
.
««3 4
Configuracion
««4 A
.
««A BD
6MinutosDeToleranciaExcesoEnSistemaDePagoPlanaPorTurnos
««B x
;
««x y
var
»» 
	hayExceso
»» 
=
»» 
DateTime
»» $
.
»»$ %
Compare
»»% ,
(
»», -

movimiento
»»- 7
.
»»7 8
Salida
»»8 >
,
»»> ?

movimiento
»»@ J
.
»»J K
Turno
»»K P
.
»»P Q
Fin
»»Q T
(
»»T U

movimiento
»»U _
.
»»_ `
Ingreso
»»` g
)
»»g h
.
»»h i

AddMinutes
»»i s
(
»»s t"
toleranciaEnMinutos»»t á
)»»á à
)»»à â
>»»ä ã
$num»»å ç
;»»ç é
var
…… $
horasExcesoSinRedondeo
…… &
=
……' (
	hayExceso
……) 2
?
……3 4

movimiento
……5 ?
.
……? @
Salida
……@ F
.
……F G
Subtract
……G O
(
……O P

movimiento
……P Z
.
……Z [
Turno
……[ `
.
……` a
Fin
……a d
(
……d e

movimiento
……e o
.
……o p
Ingreso
……p w
.
……w x

AddMinutes……x Ç
(……Ç É#
toleranciaEnMinutos……É ñ
)……ñ ó
)……ó ò
)……ò ô
.……ô ö

TotalHours……ö §
:……• ¶
$num……ß ®
;……® ©

movimiento
   
.
   /
!TiempoExcesoSistemaPlanaPorTurnos
   8
=
  9 :
new
  ; >
TiempoHoras
  ? J
(
  J K
)
  K L
;
  L M

movimiento
ÀÀ 
.
ÀÀ /
!TiempoExcesoSistemaPlanaPorTurnos
ÀÀ 8
.
ÀÀ8 9
Horas
ÀÀ9 >
=
ÀÀ? @
(
ÀÀA B
decimal
ÀÀB I
)
ÀÀI J$
horasExcesoSinRedondeo
ÀÀJ `
;
ÀÀ` a

movimiento
ÃÃ 
.
ÃÃ /
!TiempoExcesoSistemaPlanaPorTurnos
ÃÃ 8
.
ÃÃ8 9
HorasString
ÃÃ9 D
=
ÃÃE F
Math
ÃÃG K
.
ÃÃK L
Floor
ÃÃL Q
(
ÃÃQ R$
horasExcesoSinRedondeo
ÃÃR h
)
ÃÃh i
.
ÃÃi j
ToString
ÃÃj r
(
ÃÃr s
)
ÃÃs t
+
ÃÃu v
$str
ÃÃw }
+
ÃÃ~ 
MathÃÃÄ Ñ
.ÃÃÑ Ö
CeilingÃÃÖ å
(ÃÃå ç
(ÃÃç é&
horasExcesoSinRedondeoÃÃé §
-ÃÃ• ¶
MathÃÃß ´
.ÃÃ´ ¨
FloorÃÃ¨ ±
(ÃÃ± ≤&
horasExcesoSinRedondeoÃÃ≤ »
)ÃÃ» …
)ÃÃ…  
*ÃÃÀ Ã
$numÃÃÕ œ
)ÃÃœ –
.ÃÃ– —
ToStringÃÃ— Ÿ
(ÃÃŸ ⁄
)ÃÃ⁄ €
+ÃÃ‹ ›
$strÃÃﬁ „
;ÃÃ„ ‰
}
ÕÕ 	
public
ŒŒ 
MovimientoCochera
ŒŒ  )
ObtenerMovimientoParaSalida
ŒŒ! <
(
ŒŒ< =
string
ŒŒ= C
placaVehiculo
ŒŒD Q
,
ŒŒQ R
SesionCochera
ŒŒS `
sesionCochera
ŒŒa n
)
ŒŒn o
{
œœ 	
try
–– 
{
—— 
if
““ 
(
““ 
!
““ !
_cocheraRepositorio
““ (
.
““( )
ExisteVehiculo
““) 7
(
““7 8
placaVehiculo
““8 E
)
““E F
)
““F G
{
”” 
throw
‘‘ 
new
‘‘ '
VehiculoNoExisteException
‘‘ 7
(
‘‘7 8
placaVehiculo
‘‘8 E
)
‘‘E F
;
‘‘F G
}
’’ 
MovimientoCochera
÷÷ !

movimiento
÷÷" ,
=
÷÷- .!
_cocheraRepositorio
÷÷/ B
.
÷÷B C2
$ObtenerTransaccion_MovimientoCochera
÷÷C g
(
÷÷g h
placaVehiculo
÷÷h u
,
÷÷u v
sesionCochera÷÷w Ñ
.÷÷Ñ Ö
SesionDeUsuario÷÷Ö î
.÷÷î ï,
CentroDeAtencionSeleccionado÷÷ï ±
.÷÷± ≤
Id÷÷≤ ¥
,÷÷¥ µ
MaestroSettings÷÷∂ ≈
.÷÷≈ ∆
Default÷÷∆ Õ
.÷÷Õ Œ/
IdDetalleMaestroEstadoIngresado÷÷Œ Ì
)÷÷Ì Ó
;÷÷Ó Ô
if
ÿÿ 
(
ÿÿ 

movimiento
ÿÿ 
==
ÿÿ !
null
ÿÿ" &
)
ÿÿ& '
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ *
VehiculoNoIngresadoException
⁄⁄ :
(
⁄⁄: ;
placaVehiculo
⁄⁄; H
)
⁄⁄H I
;
⁄⁄I J
}
€€ 
DateTime
‹‹ 
fechaActual
‹‹ $
=
‹‹% &
DateTimeUtil
‹‹' 3
.
‹‹3 4
FechaActual
‹‹4 ?
(
‹‹? @
)
‹‹@ A
;
‹‹A B

movimiento
ﬁﬁ 
.
ﬁﬁ 
Salida
ﬁﬁ !
=
ﬁﬁ" #
fechaActual
ﬁﬁ$ /
;
ﬁﬁ/ 0
if
‡‡ 
(
‡‡ 

movimiento
‡‡ 
.
‡‡ 
SistemaDePago
‡‡ ,
.
‡‡, -
Id
‡‡- /
==
‡‡0 2
(
‡‡3 4
int
‡‡4 7
)
‡‡7 8 
SistemaPagoCochera
‡‡8 J
.
‡‡J K
PLN
‡‡K N
)
‡‡N O
{
·· 

movimiento
‚‚ 
.
‚‚ 
Turno
‚‚ $
=
‚‚% &
sesionCochera
‚‚' 4
.
‚‚4 5
ObtenerTurno
‚‚5 A
(
‚‚A B

movimiento
‚‚B L
.
‚‚L M
Ingreso
‚‚M T
)
‚‚T U
;
‚‚U V&
DeterminarTiempoDeExceso
„„ ,
(
„„, -

movimiento
„„- 7
,
„„7 8
sesionCochera
„„9 F
)
„„F G
;
„„G H
}
‰‰ 

movimiento
ÊÊ 
.
ÊÊ 
DetallesACobrar
ÊÊ *
=
ÊÊ+ ,
this
ÊÊ- 1
.
ÊÊ1 2
DetallesACobrar
ÊÊ2 A
(
ÊÊA B

movimiento
ÊÊB L
,
ÊÊL M
sesionCochera
ÊÊN [
)
ÊÊ[ \
;
ÊÊ\ ]
return
ËË 

movimiento
ËË !
;
ËË! "
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
e
ÍÍ 
)
ÍÍ 
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ 
LogicaException
ÏÏ )
(
ÏÏ) *
$str
ÏÏ* e
,
ÏÏe f
e
ÏÏg h
)
ÏÏh i
;
ÏÏi j
}
ÌÌ 
}
ÓÓ 	
private
 
DetallesACobrar
 8
*DetallesACobrarSistemaDePagoPlanaPorTurnos
  J
(
J K
MovimientoCochera
K \

movimiento
] g
,
g h
SesionCochera
i v
sesion
w }
)
} ~
{
ÒÒ 	
try
ÚÚ 
{
ÛÛ 
DetallesACobrar
ÙÙ 
detalles
ÙÙ  (
=
ÙÙ) *
new
ÙÙ+ .
DetallesACobrar
ÙÙ/ >
(
ÙÙ> ?
)
ÙÙ? @
;
ÙÙ@ A
var
ˆˆ #
precioServicioCochera
ˆˆ )
=
ˆˆ* +
sesion
ˆˆ, 2
.
ˆˆ2 3
Precio
ˆˆ3 9
(
ˆˆ9 :

movimiento
ˆˆ: D
.
ˆˆD E
Turno
ˆˆE J
.
ˆˆJ K
Configuracion
ˆˆK X
.
ˆˆX Y'
IdConceptoServicioCochera
ˆˆY r
)
ˆˆr s
;
ˆˆs t
var
˜˜ 
precioExceso
˜˜  
=
˜˜! "
sesion
˜˜# )
.
˜˜) *
Precio
˜˜* 0
(
˜˜0 1

movimiento
˜˜1 ;
.
˜˜; <
Turno
˜˜< A
.
˜˜A B
Configuracion
˜˜B O
.
˜˜O P
IdConceptoExceso
˜˜P `
)
˜˜` a
;
˜˜a b
detalles
¯¯ 
.
¯¯ 
	Principal
¯¯ "
=
¯¯# $#
precioServicioCochera
¯¯% :
.
¯¯: ;
Importe
¯¯; B
;
¯¯B C
detalles
˘˘ 
.
˘˘ 
Exceso
˘˘ 
=
˘˘  !
(
˘˘" #
decimal
˘˘# *
)
˘˘* +
(
˘˘+ ,

movimiento
˘˘, 6
.
˘˘6 7/
!TiempoExcesoSistemaPlanaPorTurnos
˘˘7 X
.
˘˘X Y
HorasACobrar
˘˘Y e
*
˘˘f g
precioExceso
˘˘h t
.
˘˘t u
Importe
˘˘u |
)
˘˘| }
;
˘˘} ~
return
˙˙ 
detalles
˙˙ 
;
˙˙  
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
e
¸¸ 
)
¸¸ 
{
˝˝ 
throw
˛˛ 
new
˛˛ 
LogicaException
˛˛ )
(
˛˛) *
$str˛˛* á
,˛˛á à
e˛˛â ä
)˛˛ä ã
;˛˛ã å
}
ˇˇ 
}
ÄÄ 	
private
ÇÇ 
DetallesACobrar
ÇÇ 1
#DetallesACobrarSistemaDePagoPorHora
ÇÇ  C
(
ÇÇC D
MovimientoCochera
ÇÇD U

movimiento
ÇÇV `
,
ÇÇ` a
SesionCochera
ÇÇb o
sesion
ÇÇp v
)
ÇÇv w
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
DetallesACobrar
ÜÜ 
detalles
ÜÜ  (
=
ÜÜ) *
new
ÜÜ+ .
DetallesACobrar
ÜÜ/ >
(
ÜÜ> ?
)
ÜÜ? @
;
ÜÜ@ A
var
áá #
precioServicioCochera
áá )
=
áá* +
sesion
áá, 2
.
áá2 3
Precio
áá3 9
(
áá9 :
sesion
áá: @
.
áá@ A
Configuracion
ááA N
.
ááN O=
/IdConceptoServicioCocheraEnSistemaDePagoPorHora
ááO ~
)
áá~ 
;áá Ä
var
àà !
toleranciaEnMinutos
àà '
=
àà( )
sesion
àà* 0
.
àà0 1
Configuracion
àà1 >
.
àà> ?7
)MinutosDeToleranciaEnSistemaDePagoPorHora
àà? h
;
ààh i
detalles
ââ 
.
ââ 
	Principal
ââ "
=
ââ# $#
precioServicioCochera
ââ% :
.
ââ: ;
Importe
ââ; B
*
ââC D
Math
ââE I
.
ââI J
Ceiling
ââJ Q
(
ââQ R
(
ââR S
decimal
ââS Z
)
ââZ [

movimiento
ââ[ e
.
ââe f
Salida
ââf l
.
ââl m
Subtract
ââm u
(
ââu v

movimientoââv Ä
.ââÄ Å
IngresoââÅ à
.ââà â

AddMinutesâââ ì
(ââì î#
toleranciaEnMinutosââî ß
)ââß ®
)ââ® ©
.ââ© ™

TotalHoursââ™ ¥
)ââ¥ µ
;ââµ ∂
detalles
ää 
.
ää 
Exceso
ää 
=
ää  !
$num
ää" #
;
ää# $
return
ãã 
detalles
ãã 
;
ãã  
}
åå 
catch
çç 
(
çç 
	Exception
çç 
e
çç 
)
çç 
{
éé 
throw
èè 
new
èè 
LogicaException
èè )
(
èè) *
$str
èè* ^
,
èè^ _
e
èè` a
)
èèa b
;
èèb c
}
êê 
}
ëë 	
private
íí 
DetallesACobrar
íí 
DetallesACobrar
íí  /
(
íí/ 0
MovimientoCochera
íí0 A

movimiento
ííB L
,
ííL M
SesionCochera
ííN [
sesion
íí\ b
)
ííb c
{
ìì 	
try
îî 
{
ïï 
DetallesACobrar
ññ 
detalles
ññ  (
=
ññ) *
new
ññ+ .
DetallesACobrar
ññ/ >
(
ññ> ?
)
ññ? @
;
ññ@ A
if
óó 
(
óó 

movimiento
óó 
.
óó 
Vehiculo
óó '
.
óó' (
ExoneradoDePagos
óó( 8
||
óó9 ;

movimiento
óó< F
.
óóF G
SistemaDePago
óóG T
.
óóT U
Id
óóU W
==
óóX Z
(
óó[ \
int
óó\ _
)
óó_ ` 
SistemaPagoCochera
óó` r
.
óór s
ABN
óós v
)
óóv w
{
òò 
detalles
ôô 
=
ôô 
new
ôô "
DetallesACobrar
ôô# 2
{
ôô3 4
	Principal
ôô5 >
=
ôô? @
$num
ôôA B
,
ôôB C
Ticket
ôôD J
=
ôôK L
$num
ôôM N
,
ôôN O
Exceso
ôôP V
=
ôôW X
$num
ôôY Z
}
ôô[ \
;
ôô\ ]
}
öö 
else
õõ 
{
úú 
if
ùù 
(
ùù 

movimiento
ùù "
.
ùù" #
SistemaDePago
ùù# 0
.
ùù0 1
Id
ùù1 3
==
ùù4 6
(
ùù7 8
int
ùù8 ;
)
ùù; < 
SistemaPagoCochera
ùù< N
.
ùùN O
PLN
ùùO R
)
ùùR S
{
ûû 
detalles
üü  
=
üü! "8
*DetallesACobrarSistemaDePagoPlanaPorTurnos
üü# M
(
üüM N

movimiento
üüN X
,
üüX Y
sesion
üüZ `
)
üü` a
;
üüa b
}
†† 
else
°° 
if
°° 
(
°° 

movimiento
°° '
.
°°' (
SistemaDePago
°°( 5
.
°°5 6
Id
°°6 8
==
°°9 ;
(
°°< =
int
°°= @
)
°°@ A 
SistemaPagoCochera
°°A S
.
°°S T
HOR
°°T W
)
°°W X
{
¢¢ 
detalles
££  
=
££! "1
#DetallesACobrarSistemaDePagoPorHora
££# F
(
££F G

movimiento
££G Q
,
££Q R
sesion
££S Y
)
££Y Z
;
££Z [
}
§§ 
var
•• #
precioPerdidaDeTicket
•• -
=
••. /
sesion
••0 6
.
••6 7
Precio
••7 =
(
••= >
sesion
••> D
.
••D E
Configuracion
••E R
.
••R S'
IdConceptoPerdidaDeTicket
••S l
)
••l m
;
••m n
detalles
¶¶ 
.
¶¶ 
Ticket
¶¶ #
=
¶¶$ %

movimiento
¶¶& 0
.
¶¶0 1
PerdidaTicket
¶¶1 >
?
¶¶? @#
precioPerdidaDeTicket
¶¶A V
.
¶¶V W
Importe
¶¶W ^
:
¶¶_ `
$num
¶¶a b
;
¶¶b c
}
ßß 
return
®® 
detalles
®® 
;
®®  
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ )
(
¨¨) *
$str
¨¨* ^
,
¨¨^ _
e
¨¨` a
)
¨¨a b
;
¨¨b c
}
≠≠ 
}
ÆÆ 	
private
±± 
List
±± 
<
±±  
DetalleDeOperacion
±± '
>
±±' (7
)DetallesDeVentaSistemaDePagoPlanaPorHoras
±±) R
(
±±R S
MovimientoCochera
±±S d

movimiento
±±e o
,
±±o p
SesionCochera
±±q ~
sesionCochera±± å
)±±å ç
{
≤≤ 	
try
≥≥ 
{
¥¥ 
List
µµ 
<
µµ  
DetalleDeOperacion
µµ '
>
µµ' (
detalles
µµ) 1
=
µµ2 3
new
µµ4 7
List
µµ8 <
<
µµ< = 
DetalleDeOperacion
µµ= O
>
µµO P
{
∂∂ 
new
∏∏  
DetalleDeOperacion
∏∏ *
(
∏∏* +
)
∏∏+ ,
{
ππ 
Producto
∫∫  
=
∫∫! "
new
∫∫# &(
Concepto_Negocio_Comercial
∫∫' A
{
∫∫B C
Id
∫∫D F
=
∫∫G H
sesionCochera
∫∫I V
.
∫∫V W
Configuracion
∫∫W d
.
∫∫d e>
/IdConceptoServicioCocheraEnSistemaDePagoPorHora∫∫e î
}∫∫ï ñ
,∫∫ñ ó
Cantidad
ªª  
=
ªª! "

movimiento
ªª# -
.
ªª- .#
TiempoSistemaPorHoras
ªª. C
.
ªªC D
HorasACobrar
ªªD P
,
ªªP Q
PrecioUnitario
ºº &
=
ºº' (
sesionCochera
ºº) 6
.
ºº6 7
Precio
ºº7 =
(
ºº= >
sesionCochera
ºº> K
.
ººK L
Configuracion
ººL Y
.
ººY Z>
/IdConceptoServicioCocheraEnSistemaDePagoPorHoraººZ â
)ººâ ä
.ººä ã
Importeººã í
,ººí ì
Importe
ΩΩ 
=
ΩΩ  !

movimiento
ΩΩ" ,
.
ΩΩ, -
DetallesACobrar
ΩΩ- <
.
ΩΩ< =
Exceso
ΩΩ= C
,
ΩΩC D
MascaraDeCalculo
ææ (
=
ææ) *
VentasSettings
ææ+ 9
.
ææ9 :
Default
ææ: A
.
ææA B0
"MascaraDeCalculoPorDefectoEnVentas
ææB d
}
¿¿ 
}
¡¡ 
;
¡¡ 
return
¬¬ 
detalles
¬¬ 
;
¬¬  
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
e
ƒƒ 
)
ƒƒ 
{
≈≈ 
throw
∆∆ 
new
∆∆ 
LogicaException
∆∆ )
(
∆∆) *
$str
∆∆* ^
,
∆∆^ _
e
∆∆` a
)
∆∆a b
;
∆∆b c
}
«« 
}
»» 	
private
…… 
List
…… 
<
……  
DetalleDeOperacion
…… '
>
……' (8
*DetallesDeVentaSistemaDePagoPlanaPorTurnos
……) S
(
……S T
MovimientoCochera
……T e

movimiento
……f p
,
……p q
SesionCochera
……r 
sesionCochera……Ä ç
)……ç é
{
   	
try
ÀÀ 
{
ÃÃ 
List
ÕÕ 
<
ÕÕ  
DetalleDeOperacion
ÕÕ '
>
ÕÕ' (
detalles
ÕÕ) 1
=
ÕÕ2 3
new
ÕÕ4 7
List
ÕÕ8 <
<
ÕÕ< = 
DetalleDeOperacion
ÕÕ= O
>
ÕÕO P
(
ÕÕP Q
)
ÕÕQ R
;
ÕÕR S
detalles
œœ 
.
œœ 
Add
œœ 
(
œœ 
new
œœ   
DetalleDeOperacion
œœ! 3
(
œœ3 4
)
œœ4 5
{
–– 
Producto
—— 
=
—— 
new
—— "(
Concepto_Negocio_Comercial
——# =
{
——> ?
Id
——@ B
=
——C D

movimiento
——E O
.
——O P
Turno
——P U
.
——U V
Configuracion
——V c
.
——c d'
IdConceptoServicioCochera
——d }
}
——~ 
,—— Ä
Cantidad
““ 
=
““ 
$num
““  
,
““  !
PrecioUnitario
”” "
=
””# $
sesionCochera
””% 2
.
””2 3
Precio
””3 9
(
””9 :

movimiento
””: D
.
””D E
Turno
””E J
.
””J K
Configuracion
””K X
.
””X Y'
IdConceptoServicioCochera
””Y r
)
””r s
.
””s t
Importe
””t {
,
””{ |
Importe
‘‘ 
=
‘‘ 

movimiento
‘‘ (
.
‘‘( )
DetallesACobrar
‘‘) 8
.
‘‘8 9
	Principal
‘‘9 B
,
‘‘B C
MascaraDeCalculo
’’ $
=
’’% &
VentasSettings
’’' 5
.
’’5 6
Default
’’6 =
.
’’= >0
"MascaraDeCalculoPorDefectoEnVentas
’’> `
}
ÿÿ 
)
ÿÿ 
;
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 

movimiento
⁄⁄ 
.
⁄⁄ 
DetallesACobrar
⁄⁄ .
.
⁄⁄. /
Exceso
⁄⁄/ 5
>
⁄⁄6 7
$num
⁄⁄8 9
)
⁄⁄9 :
{
€€ 
detalles
‹‹ 
.
‹‹ 
Add
‹‹  
(
‹‹  !
new
‹‹! $ 
DetalleDeOperacion
‹‹% 7
(
‹‹7 8
)
‹‹8 9
{
›› 
Producto
ﬁﬁ  
=
ﬁﬁ! "
new
ﬁﬁ# &(
Concepto_Negocio_Comercial
ﬁﬁ' A
{
ﬁﬁB C
Id
ﬁﬁD F
=
ﬁﬁG H

movimiento
ﬁﬁI S
.
ﬁﬁS T
Turno
ﬁﬁT Y
.
ﬁﬁY Z
Configuracion
ﬁﬁZ g
.
ﬁﬁg h
IdConceptoExceso
ﬁﬁh x
}
ﬁﬁy z
,
ﬁﬁz {
Cantidad
ﬂﬂ  
=
ﬂﬂ! "

movimiento
ﬂﬂ# -
.
ﬂﬂ- ./
!TiempoExcesoSistemaPlanaPorTurnos
ﬂﬂ. O
.
ﬂﬂO P
HorasACobrar
ﬂﬂP \
,
ﬂﬂ\ ]
PrecioUnitario
‡‡ &
=
‡‡' (
sesionCochera
‡‡) 6
.
‡‡6 7
Precio
‡‡7 =
(
‡‡= >

movimiento
‡‡> H
.
‡‡H I
Turno
‡‡I N
.
‡‡N O
Configuracion
‡‡O \
.
‡‡\ ]
IdConceptoExceso
‡‡] m
)
‡‡m n
.
‡‡n o
Importe
‡‡o v
,
‡‡v w
Importe
·· 
=
··  !

movimiento
··" ,
.
··, -
DetallesACobrar
··- <
.
··< =
Exceso
··= C
,
··C D
MascaraDeCalculo
‚‚ (
=
‚‚) *
VentasSettings
‚‚+ 9
.
‚‚9 :
Default
‚‚: A
.
‚‚A B0
"MascaraDeCalculoPorDefectoEnVentas
‚‚B d
}
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 
return
ÁÁ 
detalles
ÁÁ 
;
ÁÁ  
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
throw
ÎÎ 
new
ÎÎ 
LogicaException
ÎÎ )
(
ÎÎ) *
$str
ÎÎ* ^
,
ÎÎ^ _
e
ÎÎ` a
)
ÎÎa b
;
ÎÎb c
}
ÏÏ 
}
ÌÌ 	
private
ÓÓ 
List
ÓÓ 
<
ÓÓ  
DetalleDeOperacion
ÓÓ '
>
ÓÓ' (
DetallesDeVenta
ÓÓ) 8
(
ÓÓ8 9
MovimientoCochera
ÓÓ9 J

movimiento
ÓÓK U
,
ÓÓU V
SesionCochera
ÓÓW d
sesion
ÓÓe k
)
ÓÓk l
{
ÔÔ 	
try
 
{
ÒÒ 
List
ÚÚ 
<
ÚÚ  
DetalleDeOperacion
ÚÚ '
>
ÚÚ' (
detalles
ÚÚ) 1
=
ÚÚ2 3
new
ÚÚ4 7
List
ÚÚ8 <
<
ÚÚ< = 
DetalleDeOperacion
ÚÚ= O
>
ÚÚO P
(
ÚÚP Q
)
ÚÚQ R
;
ÚÚR S
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 

movimiento
ÛÛ 
.
ÛÛ  
Vehiculo
ÛÛ  (
.
ÛÛ( )
ExoneradoDePagos
ÛÛ) 9
&&
ÛÛ: <
!
ÛÛ= >
(
ÛÛ> ?

movimiento
ÛÛ? I
.
ÛÛI J
SistemaDePago
ÛÛJ W
.
ÛÛW X
Id
ÛÛX Z
==
ÛÛ[ ]
(
ÛÛ^ _
int
ÛÛ_ b
)
ÛÛb c 
SistemaPagoCochera
ÛÛc u
.
ÛÛu v
ABN
ÛÛv y
)
ÛÛy z
)
ÛÛz {
{
ÙÙ 
if
ıı 
(
ıı 

movimiento
ıı "
.
ıı" #
SistemaDePago
ıı# 0
.
ıı0 1
Id
ıı1 3
==
ıı4 6
(
ıı7 8
int
ıı8 ;
)
ıı; < 
SistemaPagoCochera
ıı< N
.
ııN O
PLN
ııO R
)
ııR S
{
ˆˆ 
detalles
˜˜  
=
˜˜! "8
*DetallesDeVentaSistemaDePagoPlanaPorTurnos
˜˜# M
(
˜˜M N

movimiento
˜˜N X
,
˜˜X Y
sesion
˜˜Z `
)
˜˜` a
;
˜˜a b
}
¯¯ 
else
˘˘ 
if
˘˘ 
(
˘˘ 

movimiento
˘˘ '
.
˘˘' (
SistemaDePago
˘˘( 5
.
˘˘5 6
Id
˘˘6 8
==
˘˘9 ;
(
˘˘< =
int
˘˘= @
)
˘˘@ A 
SistemaPagoCochera
˘˘A S
.
˘˘S T
HOR
˘˘T W
)
˘˘W X
{
˙˙ 
detalles
˚˚  
=
˚˚! "7
)DetallesDeVentaSistemaDePagoPlanaPorHoras
˚˚# L
(
˚˚L M

movimiento
˚˚M W
,
˚˚W X
sesion
˚˚Y _
)
˚˚_ `
;
˚˚` a
}
¸¸ 
if
˝˝ 
(
˝˝ 

movimiento
˝˝ "
.
˝˝" #
PerdidaTicket
˝˝# 0
)
˝˝0 1
{
˛˛ 
detalles
ˇˇ  
.
ˇˇ  !
Add
ˇˇ! $
(
ˇˇ$ %
new
ˇˇ% ( 
DetalleDeOperacion
ˇˇ) ;
(
ˇˇ; <
)
ˇˇ< =
{
ÄÄ 
Producto
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *(
Concepto_Negocio_Comercial
ÅÅ+ E
{
ÅÅF G
Id
ÅÅH J
=
ÅÅK L
sesion
ÅÅM S
.
ÅÅS T
Configuracion
ÅÅT a
.
ÅÅa b'
IdConceptoPerdidaDeTicket
ÅÅb {
}
ÅÅ| }
,
ÅÅ} ~
Cantidad
ÇÇ $
=
ÇÇ% &
$num
ÇÇ' (
,
ÇÇ( )
PrecioUnitario
ÉÉ *
=
ÉÉ+ ,
sesion
ÉÉ- 3
.
ÉÉ3 4
Precio
ÉÉ4 :
(
ÉÉ: ;
sesion
ÉÉ; A
.
ÉÉA B
Configuracion
ÉÉB O
.
ÉÉO P'
IdConceptoPerdidaDeTicket
ÉÉP i
)
ÉÉi j
.
ÉÉj k
Importe
ÉÉk r
,
ÉÉr s
Importe
ÑÑ #
=
ÑÑ$ %
sesion
ÑÑ& ,
.
ÑÑ, -
Precio
ÑÑ- 3
(
ÑÑ3 4
sesion
ÑÑ4 :
.
ÑÑ: ;
Configuracion
ÑÑ; H
.
ÑÑH I'
IdConceptoPerdidaDeTicket
ÑÑI b
)
ÑÑb c
.
ÑÑc d
Importe
ÑÑd k
,
ÑÑk l
MascaraDeCalculo
ÖÖ ,
=
ÖÖ- .
VentasSettings
ÖÖ/ =
.
ÖÖ= >
Default
ÖÖ> E
.
ÖÖE F0
"MascaraDeCalculoPorDefectoEnVentas
ÖÖF h
}
áá 
)
áá 
;
áá 
}
àà 
if
ââ 
(
ââ 

movimiento
ââ "
.
ââ" #
VentaConsolidada
ââ# 3
)
ââ3 4
{
ää 
detalles
ãã  
=
ãã! "
new
ãã# &
List
ãã' +
<
ãã+ , 
DetalleDeOperacion
ãã, >
>
ãã> ?
{
åå 
new
çç  
DetalleDeOperacion
çç  2
(
çç2 3
)
çç3 4
{
éé 
Producto
èè $
=
èè% &
new
èè' *(
Concepto_Negocio_Comercial
èè+ E
{
èèF G
Id
èèH J
=
èèK L

movimiento
èèM W
.
èèW X
Turno
èèX ]
.
èè] ^
Configuracion
èè^ k
.
èèk l(
IdConceptoServicioCocheraèèl Ö
}èèÜ á
,èèá à
Cantidad
êê $
=
êê% &
$num
êê' (
,
êê( )
PrecioUnitario
ëë *
=
ëë+ ,

movimiento
ëë- 7
.
ëë7 8
DetallesACobrar
ëë8 G
.
ëëG H
Total
ëëH M
,
ëëM N
Importe
íí #
=
íí$ %

movimiento
íí& 0
.
íí0 1
DetallesACobrar
íí1 @
.
íí@ A
Total
ííA F
,
ííF G
MascaraDeCalculo
ìì ,
=
ìì- .
VentasSettings
ìì/ =
.
ìì= >
Default
ìì> E
.
ììE F0
"MascaraDeCalculoPorDefectoEnVentas
ììF h
}
ïï 
}
ññ 
;
ññ 
}
óó 
}
òò 
return
ôô 
detalles
ôô 
;
ôô  
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* ^
,
ùù^ _
e
ùù` a
)
ùùa b
;
ùùb c
}
ûû 
}
üü 	
public
®® 0
"ResultadoRegistroMovimientoCochera
®® 1
RegistrarSalida
®®2 A
(
®®A B
MovimientoCochera
®®B S

movimiento
®®T ^
,
®®^ _!
DatosVentaIntegrada
®®` s

datosVenta
®®t ~
,
®®~ 
SesionCochera®®Ä ç
sesionCochera®®é õ
)®®õ ú
{
©© 	
OperationResult
™™ 
	resultado
™™ %
=
™™& '
null
™™( ,
;
™™, -
try
´´ 
{
¨¨ 
Transaccion
ØØ 
transaccionOrigen
ØØ -
=
ØØ. /%
_transaccionRepositorio
ØØ0 G
.
ØØG H 
ObtenerTransaccion
ØØH Z
(
ØØZ [

movimiento
ØØ[ e
.
ØØe f
Id
ØØf h
)
ØØh i
;
ØØi j

movimiento
∞∞ 
.
∞∞ 
Salida
∞∞ !
=
∞∞" #
DateTimeUtil
∞∞$ 0
.
∞∞0 1
FechaActual
∞∞1 <
(
∞∞< =
)
∞∞= >
;
∞∞> ?

movimiento
≤≤ 
.
≤≤ %
EstablecerDatosDeSalida
≤≤ 2
(
≤≤2 3
transaccionOrigen
≤≤3 D
)
≤≤D E
;
≤≤E F 
Estado_transaccion
¥¥ "
estadoFinalizado
¥¥# 3
=
¥¥4 5
new
¥¥6 9 
Estado_transaccion
¥¥: L
(
¥¥L M
sesionCochera
¥¥M Z
.
¥¥Z [
SesionDeUsuario
¥¥[ j
.
¥¥j k-
IdCentroDeAtencionSeleccionado¥¥k â
,¥¥â ä
MaestroSettings¥¥ã ö
.¥¥ö õ
Default¥¥õ ¢
.¥¥¢ £0
 IdDetalleMaestroEstadoFinalizado¥¥£ √
,¥¥√ ƒ

movimiento¥¥≈ œ
.¥¥œ –
Salida¥¥– ÷
,¥¥÷ ◊
$str¥¥ÿ ä
)¥¥ä ã
;¥¥ã å
transaccionOrigen
∂∂ !
.
∂∂! " 
Estado_transaccion
∂∂" 4
.
∂∂4 5
Add
∂∂5 8
(
∂∂8 9
estadoFinalizado
∂∂9 I
)
∂∂I J
;
∂∂J K

datosVenta
∏∏ 
.
∏∏ 
TransaccionOrigen
∏∏ ,
=
∏∏- .
transaccionOrigen
∏∏/ @
;
∏∏@ A
if
ππ 
(
ππ 

movimiento
ππ 
.
ππ 
Vehiculo
ππ '
.
ππ' (
ExoneradoDePagos
ππ( 8
)
ππ8 9
{
∫∫ 
	resultado
ªª 
=
ªª %
_transaccionRepositorio
ªª  7
.
ªª7 8
ActualizarYCrear
ªª8 H
(
ªªH I
transaccionOrigen
ªªI Z
,
ªªZ [
null
ªª\ `
,
ªª` a
new
ªªb e
List
ªªf j
<
ªªj k 
Estado_transaccion
ªªk }
>
ªª} ~
(
ªª~ 
)ªª Ä
{ªªÅ Ç 
estadoFinalizadoªªÉ ì
}ªªî ï
,ªªï ñ
nullªªó õ
)ªªõ ú
;ªªú ù
}
ºº 
else
ΩΩ 
{
ææ #
CompletarDatosDeVenta
øø )
(
øø) *

datosVenta
øø* 4
,
øø4 5

movimiento
øø6 @
,
øø@ A
sesionCochera
øøB O
)
øøO P
;
øøP Q
	resultado
¿¿ 
=
¿¿ 
_operacionLogica
¿¿  0
.
¿¿0 1%
ConfirmarVentaIntegrada
¿¿1 H
(
¿¿H I
ModoOperacionEnum
¿¿I Z
.
¿¿Z [
PorMostrador
¿¿[ g
,
¿¿g h
sesionCochera
¿¿i v
.
¿¿v w
SesionDeUsuario¿¿w Ü
,¿¿Ü á

datosVenta¿¿à í
)¿¿í ì
;¿¿ì î
}
¡¡ 0
"ResultadoRegistroMovimientoCochera
¬¬ 2
resultadoFinal
¬¬3 A
=
¬¬B C
new
¬¬D G0
"ResultadoRegistroMovimientoCochera
¬¬H j
(
¬¬j k
)
¬¬k l
{
¬¬m n

Movimiento
¬¬o y
=
¬¬z {

movimiento¬¬| Ü
,¬¬Ü á
OrdenDeVenta¬¬à î
=¬¬ï ñ

movimiento¬¬ó °
.¬¬° ¢
Vehiculo¬¬¢ ™
.¬¬™ ´ 
ExoneradoDePagos¬¬´ ª
?¬¬º Ω
null¬¬æ ¬
:¬¬√ ƒ
(¬¬≈ ∆
OrdenDeVenta¬¬∆ “
)¬¬“ ”
	resultado¬¬” ‹
.¬¬‹ ›
objeto¬¬› „
}¬¬‰ Â
;¬¬Â Ê
return
≈≈ 
resultadoFinal
≈≈ %
;
≈≈% &
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
throw
…… 
new
…… 
LogicaException
…… )
(
……) *
$str
……* d
,
……d e
e
……f g
)
……g h
;
……h i
}
   
}
ÀÀ 	
public
““ 
void
““ #
CompletarDatosDeVenta
““ )
(
““) *!
DatosVentaIntegrada
““* =

datosVenta
““> H
,
““H I
MovimientoCochera
““J [

movimiento
““\ f
,
““f g
SesionCochera
““h u
sesionCochera““v É
)““É Ñ
{
”” 	

datosVenta
‘‘ 
.
‘‘ 
Orden
‘‘ 
.
‘‘ 
PuntoDeVenta
‘‘ )
=
‘‘* +
new
‘‘, /
ItemGenerico
‘‘0 <
{
‘‘= >
Id
‘‘? A
=
‘‘B C
sesionCochera
‘‘D Q
.
‘‘Q R
	IdCochera
‘‘R [
,
‘‘[ \
Nombre
‘‘] c
=
‘‘d e
sesionCochera
‘‘f s
.
‘‘s t
SesionDeUsuario‘‘t É
.‘‘É Ñ,
CentroDeAtencionSeleccionado‘‘Ñ †
.‘‘† °
Nombre‘‘° ß
}‘‘® ©
;‘‘© ™

datosVenta
’’ 
.
’’ 
Orden
’’ 
.
’’ 
Vendedor
’’ %
=
’’& '
new
’’( +
ItemGenerico
’’, 8
{
’’9 :
Id
’’; =
=
’’> ?
sesionCochera
’’@ M
.
’’M N
SesionDeUsuario
’’N ]
.
’’] ^
Empleado
’’^ f
.
’’f g
Id
’’g i
}
’’j k
;
’’k l

datosVenta
÷÷ 
.
÷÷ 
Orden
÷÷ 
.
÷÷ $
NumeroBolsasDePlastico
÷÷ 3
=
÷÷4 5
$num
÷÷6 7
;
÷÷7 8

datosVenta
◊◊ 
.
◊◊ 
Orden
◊◊ 
.
◊◊ 
Detalles
◊◊ %
=
◊◊& '
DetallesDeVenta
◊◊( 7
(
◊◊7 8

movimiento
◊◊8 B
,
◊◊B C
sesionCochera
◊◊D Q
)
◊◊Q R
;
◊◊R S

datosVenta
ÿÿ 
.
ÿÿ 
Pago
ÿÿ 
.
ÿÿ 
Caja
ÿÿ  
=
ÿÿ! "

datosVenta
ÿÿ# -
.
ÿÿ- .
Orden
ÿÿ. 3
.
ÿÿ3 4
PuntoDeVenta
ÿÿ4 @
;
ÿÿ@ A

datosVenta
ŸŸ 
.
ŸŸ 
Pago
ŸŸ 
.
ŸŸ 
Cajero
ŸŸ "
=
ŸŸ# $

datosVenta
ŸŸ% /
.
ŸŸ/ 0
Orden
ŸŸ0 5
.
ŸŸ5 6
Vendedor
ŸŸ6 >
;
ŸŸ> ?

datosVenta
⁄⁄ 
.
⁄⁄ 
Pago
⁄⁄ 
.
⁄⁄ 

ModoDePago
⁄⁄ &
=
⁄⁄' (
ModoPago
⁄⁄) 1
.
⁄⁄1 2
Contado
⁄⁄2 9
;
⁄⁄9 :

datosVenta
€€ 
.
€€ 
MovimientoAlmacen
€€ (
=
€€) *
new
€€+ .&
DatosMovimientoDeAlmacen
€€/ G
{
€€H I0
"HayComprobanteDeSalidaDeMercaderia
€€J l
=
€€m n
false
€€o t
}
€€u v
;
€€v w
}
‹‹ 	
public
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ %
MovimientoCocheraBasico
ﬂﬂ +
>
ﬂﬂ+ ,,
ObtenerMovimientosDatosBasicos
ﬂﬂ- K
(
ﬂﬂK L
DateTime
ﬂﬂL T

fechaDesde
ﬂﬂU _
,
ﬂﬂ_ `
DateTime
ﬂﬂa i

fechaHasta
ﬂﬂj t
,
ﬂﬂt u
int
ﬂﬂv y
idCentroAtencionﬂﬂz ä
)ﬂﬂä ã
{
‡‡ 	
try
·· 
{
‚‚ 
List
„„ 
<
„„ %
MovimientoCocheraBasico
„„ ,
>
„„, -
lista
„„. 3
=
„„4 5
new
„„6 9
List
„„: >
<
„„> ?%
MovimientoCocheraBasico
„„? V
>
„„V W
(
„„W X
)
„„X Y
;
„„Y Z
lista
ÂÂ 
=
ÂÂ !
_cocheraRepositorio
ÂÂ +
.
ÂÂ+ ,5
'ObtenerTransacciones_MovimientosCochera
ÂÂ, S
(
ÂÂS T
idCentroAtencion
ÂÂT d
,
ÂÂd e

fechaDesde
ÂÂf p
,
ÂÂp q

fechaHasta
ÂÂr |
)
ÂÂ| }
.
ÂÂ} ~
ToListÂÂ~ Ñ
(ÂÂÑ Ö
)ÂÂÖ Ü
;ÂÂÜ á
return
ÊÊ 
lista
ÊÊ 
;
ÊÊ 
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ 
LogicaException
ÍÍ )
(
ÍÍ) *
$str
ÍÍ* W
,
ÍÍW X
e
ÍÍY Z
)
ÍÍZ [
;
ÍÍ[ \
}
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
List
ÓÓ 
<
ÓÓ "
EntradaSalidaUsuario
ÓÓ (
>
ÓÓ( )(
ObtenerVehiculosIngresados
ÓÓ* D
(
ÓÓD E
int
ÓÓE H
	idCochera
ÓÓI R
)
ÓÓR S
{
ÔÔ 	
try
 
{
ÒÒ 
return
ÚÚ !
_cocheraRepositorio
ÚÚ *
.
ÚÚ* + 
ObtenerMovimientos
ÚÚ+ =
(
ÚÚ= >
	idCochera
ÚÚ> G
,
ÚÚG H
MaestroSettings
ÚÚI X
.
ÚÚX Y
Default
ÚÚY `
.
ÚÚ` a.
IdDetalleMaestroEstadoIngresadoÚÚa Ä
)ÚÚÄ Å
.ÚÚÅ Ç!
OrderByDescendingÚÚÇ ì
(ÚÚì î
viÚÚî ñ
=>ÚÚó ô
viÚÚö ú
.ÚÚú ù
	FechaHoraÚÚù ¶
)ÚÚ¶ ß
.ÚÚß ®
ToListÚÚ® Æ
(ÚÚÆ Ø
)ÚÚØ ∞
;ÚÚ∞ ±
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
e
ÙÙ 
)
ÙÙ 
{
ıı 
throw
ˆˆ 
new
ˆˆ 
LogicaException
ˆˆ )
(
ˆˆ) *
$str
ˆˆ* U
,
ˆˆU V
e
ˆˆW X
)
ˆˆX Y
;
ˆˆY Z
}
˜˜ 
}
¯¯ 	
public
˙˙ 
List
˙˙ 
<
˙˙ 
EntradaSalida
˙˙ !
>
˙˙! "%
ObtenerEntradasYSalidas
˙˙# :
(
˙˙: ;
int
˙˙; >
	idCochera
˙˙? H
,
˙˙H I
DateTime
˙˙J R
desde
˙˙S X
,
˙˙X Y
DateTime
˙˙Z b
hasta
˙˙c h
)
˙˙h i
{
˚˚ 	
try
¸¸ 
{
˝˝ 
return
˛˛ !
_cocheraRepositorio
˛˛ *
.
˛˛* + 
ObtenerMovimientos
˛˛+ =
(
˛˛= >
	idCochera
˛˛> G
,
˛˛G H
desde
˛˛I N
,
˛˛N O
hasta
˛˛P U
)
˛˛U V
.
˛˛V W
ToList
˛˛W ]
(
˛˛] ^
)
˛˛^ _
;
˛˛_ `
}
ˇˇ 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
e
ÄÄ 
)
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
LogicaException
ÇÇ )
(
ÇÇ) *
$str
ÇÇ* ^
,
ÇÇ^ _
e
ÇÇ` a
)
ÇÇa b
;
ÇÇb c
}
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
Vehiculo
ÜÜ %
ObtenerVehiculoPorPlaca
ÜÜ /
(
ÜÜ/ 0
string
ÜÜ0 6
placa
ÜÜ7 <
)
ÜÜ< =
{
áá 	
try
àà 
{
ââ 
return
ää !
_cocheraRepositorio
ää *
.
ää* +
ObtenerVehiculo
ää+ :
(
ää: ;
placa
ää; @
)
ää@ A
;
ääA B
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
throw
éé 
new
éé 
	Exception
éé #
(
éé# $
$str
éé$ R
,
ééR S
e
ééT U
)
ééU V
;
ééV W
}
èè 
}
êê 	
public
íí 
List
íí 
<
íí 
ItemGenerico
íí  
>
íí  !$
ObtenerTiposDeVehiculo
íí" 8
(
íí8 9
)
íí9 :
{
ìì 	
try
îî 
{
ïï 
return
ññ 
ItemGenerico
ññ #
.
ññ# $
Convert
ññ$ +
(
ññ+ ,
_actorRepositorio
ññ, =
.
ññ= >"
obtenerClasesDeActor
ññ> R
(
ññR S
CocheraSettings
ññS b
.
ññb c
Default
ññc j
.
ññj k!
IdTipoActorVehiculo
ññk ~
)
ññ~ 
.ññ Ä
ToListññÄ Ü
(ññÜ á
)ññá à
)ññà â
;ññâ ä
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
throw
öö 
e
öö 
;
öö 
}
õõ 
}
úú 	
public
ùù 
List
ùù 
<
ùù 
ItemGenerico
ùù  
>
ùù  !#
ObtenerSistemasDePago
ùù" 7
(
ùù7 8
)
ùù8 9
{
ûû 	
try
üü 
{
†† 
List
°° 
<
°° 
ItemGenerico
°° !
>
°°! "
items
°°# (
=
°°) *
new
°°+ .
List
°°/ 3
<
°°3 4
ItemGenerico
°°4 @
>
°°@ A
(
°°A B
)
°°B C
;
°°C D
items
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
new
¢¢ 
ItemGenerico
¢¢ *
(
¢¢* +
)
¢¢+ ,
{
¢¢- .
Id
¢¢/ 1
=
¢¢2 3
(
¢¢4 5
int
¢¢5 8
)
¢¢8 9 
SistemaPagoCochera
¢¢9 K
.
¢¢K L
PLN
¢¢L O
,
¢¢O P
Nombre
¢¢Q W
=
¢¢X Y 
SistemaPagoCochera
¢¢Z l
.
¢¢l m
PLN
¢¢m p
.
¢¢p q
ToString
¢¢q y
(
¢¢y z
)
¢¢z {
}
¢¢| }
)
¢¢} ~
;
¢¢~ 
items
££ 
.
££ 
Add
££ 
(
££ 
new
££ 
ItemGenerico
££ *
(
££* +
)
££+ ,
{
££- .
Id
££/ 1
=
££2 3
(
££4 5
int
££5 8
)
££8 9 
SistemaPagoCochera
££9 K
.
££K L
HOR
££L O
,
££O P
Nombre
££Q W
=
££X Y 
SistemaPagoCochera
££Z l
.
££l m
HOR
££m p
.
££p q
ToString
££q y
(
££y z
)
££z {
}
££| }
)
££} ~
;
££~ 
return
§§ 
items
§§ 
;
§§ 
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
ßß 
throw
®® 
new
®® 
LogicaException
®® )
(
®®) *
$str
®®* P
,
®®P Q
e
®®R S
)
®®S T
;
®®T U
}
©© 
}
™™ 	
public
¨¨ 
List
¨¨ 
<
¨¨ 
ItemGenerico
¨¨  
>
¨¨  !%
ObtenerMarcasDeVehiculo
¨¨" 9
(
¨¨9 :
)
¨¨: ;
{
≠≠ 	
try
ÆÆ 
{
ØØ 
return
∞∞ !
_maestroRepositorio
∞∞ *
.
∞∞* +/
!ObtenerDetallesComoItemsGenericos
∞∞+ L
(
∞∞L M
CocheraSettings
∞∞M \
.
∞∞\ ]
Default
∞∞] d
.
∞∞d e&
IdMaestroMarcaDeVehiculo
∞∞e }
)
∞∞} ~
.
∞∞~ 
ToList∞∞ Ö
(∞∞Ö Ü
)∞∞Ü á
;∞∞á à
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
e
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ 
LogicaException
¥¥ )
(
¥¥) *
$str
¥¥* P
,
¥¥P Q
e
¥¥R S
)
¥¥S T
;
¥¥T U
}
µµ 
}
∂∂ 	
}
∏∏ 
}ππ ¶
JD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesRestaurant\Caja_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
public 

partial 
class 
Caja_Logica $
:% &
ICaja_Logica' 3
{ 
private 
readonly !
IAtencion_Repositorio . 
_atencionRepositorio/ C
;C D
private 
readonly 
IMesa_Repositorio *
_mesaRepositorio+ ;
;; <
private 
readonly #
IEstablecimiento_Logica 0"
_establecimientoLogica1 G
;G H
public%% 
Caja_Logica%% 
(%% !
IAtencion_Repositorio%% 0
atencionRepositorio%%1 D
,%%D E
IMesa_Repositorio%%F W
mesaRepositorio%%X g
,%%g h$
IEstablecimiento_Logica	%%i Ä#
establecimientoLogica
%%Å ñ
)
%%ñ ó
{&& 	 
_atencionRepositorio''  
=''! "
atencionRepositorio''# 6
;''6 7
_mesaRepositorio(( 
=(( 
mesaRepositorio(( .
;((. /"
_establecimientoLogica)) "
=))# $!
establecimientoLogica))% :
;)): ;
}** 	
public,, (
ConfiguracionRestauranteCaja,, +(
ObtenerConfiguracionParaCaja,,, H
(,,H I
SesionRestaurante,,I Z
sesion,,[ a
),,a b
{-- 	
var.. 
fechaActual.. 
=.. 
DateTimeUtil.. *
...* +
FechaActual..+ 6
(..6 7
)..7 8
;..8 9
var// 
configuracion// 
=// 
new//  #(
ConfiguracionRestauranteCaja//$ @
(//@ A
)//A B
{00 !
UsuarioTieneRolCajero11 %
=11& '
sesion11( .
.11. /
SesionDeUsuario11/ >
.11> ?
Empleado11? G
.11G H
TieneRol11H P
(11P Q
ActorSettings11Q ^
.11^ _
Default11_ f
.11f g
IdRolCajero11g r
)11r s
,11s t

FechaDesde22 
=22 
fechaActual22 (
.22( )
Date22) -
.22- .
AddDays22. 5
(225 6
-226 7
RestauranteSettings227 J
.22J K
Default22K R
.22R S(
MaximoDiasConsultaAtenciones22S o
)22o p
,22p q

FechaHasta33 
=33 
fechaActual33 (
.33( )
Date33) -
.33- .
AddDays33. 5
(335 6
$num336 7
)337 8
.338 9
AddTicks339 A
(33A B
-33B C
$num33C D
)33D E
}44 
;44 
return55 
configuracion55  
;55  !
}66 	
}77 
}88 ˘
KD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesRestaurant\Orden_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
} ™V
ND:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesRestaurant\Atencion_Logica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
public 

partial 
class 
Atencion_Logica (
:) *
IAtencion_Logica+ ;
{ 
private 
readonly !
IAtencion_Repositorio . 
_atencionRepositorio/ C
;C D
private 
readonly 
IMesa_Repositorio *
_mesaRepositorio+ ;
;; <
private 
readonly #
IEstablecimiento_Logica 0"
_establecimientoLogica1 G
;G H
public 
Atencion_Logica 
( !
IAtencion_Repositorio 4
atencionRepositorio5 H
,H I
IMesa_RepositorioJ [
mesaRepositorio\ k
,k l$
IEstablecimiento_Logica	m Ñ#
establecimientoLogica
Ö ö
)
ö õ
{ 	 
_atencionRepositorio    
=  ! "
atencionRepositorio  # 6
;  6 7
_mesaRepositorio!! 
=!! 
mesaRepositorio!! .
;!!. /"
_establecimientoLogica"" "
=""# $!
establecimientoLogica""% :
;"": ;
}## 	
public&& 
OperationResult&& 
CambiarDeMesa&& ,
(&&, -
AtencionRestaurante&&- @
atencion&&A I
,&&I J
int&&K N
idNuevaMesa&&O Z
,&&Z [
SesionRestaurante&&\ m
sesion&&n t
)&&t u
{'' 	
try(( 
{)) 
Mesa** 
	nuevaMesa** 
=**  
new**! $
Mesa**% )
(**) *
_mesaRepositorio*** :
.**: ;
ObtenerMesa**; F
(**F G
idNuevaMesa**G R
)**R S
)**S T
;**T U
if++ 
(++ 
	nuevaMesa++ 
.++ 
EstadoOcupado++ +
)+++ ,
{,, 
throw-- 
new-- 
LogicaException-- -
(--- .
$str--. w
)--w x
;--x y
}.. 
return//  
_atencionRepositorio// +
.//+ ,
GuardarCambioDeMesa//, ?
(//? @
atencion//@ H
,//H I
	nuevaMesa//J S
)//S T
;//T U
}00 
catch11 
(11 
	Exception11 
e11 
)11 
{22 
throw33 
e33 
;33 
}44 
}66 	
public88 ,
 ConfiguracionRestauranteAtencion88 /,
 ObtenerConfiguracionParaAtencion880 P
(88P Q
SesionRestaurante88Q b
sesion88c i
)88i j
{99 	
var:: *
tieneRolAdministradorDeNegocio:: .
=::/ 0
sesion::1 7
.::7 8
SesionDeUsuario::8 G
.::G H
Empleado::H P
.::P Q
TieneRol::Q Y
(::Y Z
ActorSettings::Z g
.::g h
Default::h o
.::o p(
idRolAdministradorDeNegocio	::p ã
)
::ã å
;
::å ç
var;; !
establecimientoSesion;; %
=;;& '
sesion;;( .
.;;. /
SesionDeUsuario;;/ >
.;;> ?0
$EstablecimientoComercialSeleccionado;;? c
.;;c d
ToItemGenerico;;d r
(;;r s
);;s t
;;;t u
var<< 
configuracion<< 
=<< 
new<<  #,
 ConfiguracionRestauranteAtencion<<$ D
(<<D E
)<<E F
{== 
NombreRolCliente>>  
=>>! "
$str>># ,
,>>, -

IdEmpleado?? 
=?? 
sesion?? #
.??# $
SesionDeUsuario??$ 3
.??3 4
Empleado??4 <
.??< =
Id??= ?
,??? @!
UsuarioTieneRolCajero@@ %
=@@& '
sesion@@( .
.@@. /
SesionDeUsuario@@/ >
.@@> ?
Empleado@@? G
.@@G H
TieneRol@@H P
(@@P Q
ActorSettings@@Q ^
.@@^ _
Default@@_ f
.@@f g
IdRolCajero@@g r
)@@r s
,@@s t!
EstablecimientoSesionAA %
=AA& '!
establecimientoSesionAA( =
,AA= >
PermitirVentaEnMesaBB #
=BB$ %
RestauranteSettingsBB& 9
.BB9 :
DefaultBB: A
.BBA B
PermitirVentaEnMesaBBB U
,BBU V$
PermitirVentaPorDeliveryCC (
=CC) *
RestauranteSettingsCC+ >
.CC> ?
DefaultCC? F
.CCF G$
PermitirVentaPorDeliveryCCG _
,CC_ `
PermitirVentaAlPasoDD #
=DD$ %
RestauranteSettingsDD& 9
.DD9 :
DefaultDD: A
.DDA B
PermitirVentaAlPasoDDB U
,DDU V1
%UsuarioTieneRolAdministradorDeNegocioEE 5
=EE6 7*
tieneRolAdministradorDeNegocioEE8 V
,EEV W&
UsuarioTieneRolCajeroYMozoFF *
=FF+ ,
sesionFF- 3
.FF3 4
SesionDeUsuarioFF4 C
.FFC D
EmpleadoFFD L
.FFL M
TieneRolFFM U
(FFU V
ActorSettingsFFV c
.FFc d
DefaultFFd k
.FFk l
IdRolCajeroFFl w
)FFw x
&&FFy {
sesion	FF| Ç
.
FFÇ É
SesionDeUsuario
FFÉ í
.
FFí ì
Empleado
FFì õ
.
FFõ ú
TieneRol
FFú §
(
FF§ •!
RestauranteSettings
FF• ∏
.
FF∏ π
Default
FFπ ¿
.
FF¿ ¡
	IdRolMozo
FF¡  
)
FF  À
,
FFÀ Ã
EstablecimientosGG  
=GG! "*
tieneRolAdministradorDeNegocioGG# A
?GGB C"
_establecimientoLogicaGGD Z
.GGZ [I
<ObtenerEstablecimientosComercialesVigentesComoItemsGenericos	GG[ ó
(
GGó ò
)
GGò ô
:
GGö õ
new
GGú ü
List
GG† §
<
GG§ •
ItemGenerico
GG• ±
>
GG± ≤
(
GG≤ ≥
)
GG≥ ¥
{
GGµ ∂#
establecimientoSesion
GG∑ Ã
}
GGÕ Œ
,
GGŒ œ
}HH 
;HH 
returnII 
configuracionII  
;II  !
}JJ 	
publicLL 
OperationResultLL 7
+CerrarAtencionYSusOrdenesAtendiendoDetallesLL J
(LLJ K
longLLK O

idAtencionLLP Z
,LLZ [
intLL\ _

idEmpleadoLL` j
)LLj k
{MM 	
tryNN 
{OO 
OperationResultPP 
resultPP  &
=PP' (
newPP) ,
OperationResultPP- <
(PP< =
)PP= >
;PP> ?
varQQ 
fechaActualQQ 
=QQ  !
DateTimeUtilQQ" .
.QQ. /
FechaActualQQ/ :
(QQ: ;
)QQ; <
;QQ< =
AtencionRestauranteRR #
atencionRR$ ,
=RR- . 
_atencionRepositorioRR/ C
.RRC DK
>ObtenerAtencionConDatosMinimosDeOrdenYDetallesSoloParaCerrarla	RRD Ç
(
RRÇ É

idAtencion
RRÉ ç
)
RRç é
;
RRé è
ifSS 
(SS 
atencionSS 
.SS 
EstadoSS #
!=SS$ &
MaestroSettingsSS' 6
.SS6 7
DefaultSS7 >
.SS> ?,
 IdDetalleMaestroEstadoRegistradoSS? _
)SS_ `
{TT 
throwUU 
newUU 
LogicaExceptionUU -
(UU- .
$strUU. 
)	UU Ä
;
UUÄ Å
}VV 
varWW 
idsOrdenesACerrarWW %
=WW& '
atencionWW( 0
.WW0 1
OrdenesWW1 8
.WW8 9
WhereWW9 >
(WW> ?
oWW? @
=>WWA C
oWWD E
.WWE F
EstadoWWF L
!=WWM O
MaestroSettingsWWP _
.WW_ `
DefaultWW` g
.WWg h*
IdDetalleMaestroEstadoCerrado	WWh Ö
)
WWÖ Ü
.
WWÜ á
Select
WWá ç
(
WWç é
o
WWé è
=>
WWè ë
o
WWë í
.
WWí ì
Id
WWì ï
)
WWï ñ
.
WWñ ó
ToArray
WWó û
(
WWû ü
)
WWü †
;
WW† °
varXX &
idsEstadosDetallesAExcluirXX .
=XX/ 0
newXX1 4
intXX5 8
[XX8 9
]XX9 :
{XX: ;
(XX< =
intXX= @
)XX@ A"
EstadoDeDetalleDeOrdenXXA W
.XXW X
AtendidoXXX `
,XX` a
(XXb c
intXXc f
)XXf g"
EstadoDeDetalleDeOrdenXXg }
.XX} ~
Devuelto	XX~ Ü
,
XXÜ á
(
XXà â
int
XXâ å
)
XXå ç$
EstadoDeDetalleDeOrden
XXç £
.
XX£ §
Anulado
XX§ ´
}
XX´ ¨
;
XX¨ ≠
varYY 
idsDetallesAAtenderYY '
=YY( )
atencionYY* 2
.YY2 3
OrdenesYY3 :
.YY: ;

SelectManyYY; E
(YYE F
oYYF G
=>YYH J
oYYK L
.YYL M
DetallesDeOrdenYYM \
)YY\ ]
.YY] ^
WhereYY^ c
(YYc d
dYYd e
=>YYf h
!YYi j'
idsEstadosDetallesAExcluir	YYj Ñ
.
YYÑ Ö
Contains
YYÖ ç
(
YYç é
d
YYé è
.
YYè ê
Estado
YYê ñ
)
YYñ ó
)
YYó ò
.
YYò ô
Select
YYô ü
(
YYü †
d
YY† °
=>
YY° £
d
YY£ §
.
YY§ •
Id
YY• ß
)
YYß ®
.
YY® ©
ToArray
YY© ∞
(
YY∞ ±
)
YY± ≤
;
YY≤ ≥
varZZ 
liberarMesaZZ 
=ZZ  !
atencionZZ" *
.ZZ* +
ImporteAtencionZZ+ :
==ZZ; =
$numZZ> ?
;ZZ? @
result[[ 
=[[  
_atencionRepositorio[[ -
.[[- .2
&CerrarAtencionYOrdenesYAtenderDetalles[[. T
([[T U

idAtencion[[U _
,[[_ `
idsOrdenesACerrar[[a r
,[[r s 
idsDetallesAAtender	[[t á
,
[[á à
atencion
[[à ê
.
[[ê ë
Mesa
[[ë ï
.
[[ï ñ
Id
[[ñ ò
,
[[ò ô
liberarMesa
[[ö •
,
[[• ¶

idEmpleado
[[ß ±
)
[[± ≤
;
[[≤ ≥
result]] 
.]] 
information]] "
=]]# $
MaestroSettings]]% 4
.]]4 5
Default]]5 <
.]]< =)
IdDetalleMaestroEstadoCerrado]]= Z
;]]Z [
result^^ 
.^^ 
objeto^^ 
=^^ 
atencion^^  (
.^^( )
ImporteAtencion^^) 8
==^^8 :
$num^^; <
;^^< =
return__ 
result__ 
;__ 
}`` 
catchaa 
(aa 
	Exceptionaa 
eaa 
)aa 
{bb 
throwcc 
ecc 
;cc 
}dd 
}ff 	
}hh 
}ii ¶£
WD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesRestaurant\RestauranteLogicaPartial.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
public 

partial 
class 
RestauranteLogica *
:+ ,
IRestauranteLogica- ?
{ 
public 
IEnumerable 
< 
Object !
>! "&
ObtenerAtencionesPorCObrar# =
(= >
AtencionRestaurante> Q
atencionR Z
,Z [
SesionRestaurante\ m
sesionRestauranten 
)	 Ä
{ 	
return 
null 
; 
} 	
public.. 
OperationResult..  
ConfirmarFacturacion.. 3
(..3 4
AtencionRestaurante..4 G
atencion..H P
,..P Q
SesionRestaurante..R c
sesionRestaurante..d u
)..u v
{// 	
try00 
{11 
OperationResult22 
result22  &
=22' (
null22) -
;22- .
Transaccion33 
transaccionAtencion33 /
=330 1#
_transaccionRepositorio332 I
.33I J
ObtenerTransaccion33J \
(33\ ]
atencion33] e
.33e f
Id33f h
)33h i
;33i j
if55 
(55 
transaccionAtencion55 '
.55' (
id_estado_actual55( 8
!=559 ;
MaestroSettings55< K
.55K L
Default55L S
.55S T)
IdDetalleMaestroEstadoCerrado55T q
)55q r
{66 
throw77 
new77 
LogicaException77 -
(77- .
$str	77. à
)
77à â
;
77â ä
}88 
if:: 
(:: 
transaccionAtencion:: '
.::' (
enum1::( -
!=::. 0
(::1 2
int::2 5
)::5 6
TipoPago::6 >
.::> ?
Ninguno::? F
)::F G
{;; 
throw<< 
new<< 
LogicaException<< -
(<<- .
$str	<<. ä
)
<<ä ã
;
<<ã å
}== -
!AgregarEventosTransaccionAtencion?? 1
(??1 2
transaccionAtencion??2 E
,??E F
sesionRestaurante??G X
)??X Y
;??Y Z
varAA 
ordenesFiltradasAA $
=AA% &
atencionAA' /
.AA/ 0
OrdenesAA0 7
.AA7 8
ToListAA8 >
(AA> ?
)AA? @
;AA@ A
ordenesFiltradasBB  
.BB  !
ForEachBB! (
(BB( )
oBB) *
=>BB+ -
{BB. /
oBB0 1
.BB1 2
DetallesDeOrdenBB2 A
=BBB C
oBBD E
.BBE F
DetallesDeOrdenBBF U
.BBU V
WhereBBV [
(BB[ \
dorBB\ _
=>BB` b
dorBBc f
.BBf g
EstadoBBg m
!=BBn p
(BBq r
intBBr u
)BBu v#
EstadoDeDetalleDeOrden	BBv å
.
BBå ç
Devuelto
BBç ï
&&
BBñ ò
dor
BBô ú
.
BBú ù
Estado
BBù £
!=
BB§ ¶
(
BBß ®
int
BB® ´
)
BB´ ¨$
EstadoDeDetalleDeOrden
BB¨ ¬
.
BB¬ √
Anulado
BB√  
)
BB  À
.
BBÀ Ã
ToList
BBÃ “
(
BB“ ”
)
BB” ‘
;
BB‘ ’
}
BB÷ ◊
)
BB◊ ÿ
;
BBÿ Ÿ
ordenesFiltradasCC  
=CC! "
ordenesFiltradasCC# 3
.CC3 4
WhereCC4 9
(CC9 :
oCC: ;
=>CC< >
oCC? @
.CC@ A
DetallesDeOrdenCCA P
.CCP Q
CountCCQ V
(CCV W
)CCW X
>CCY Z
$numCC[ \
)CC\ ]
.CC] ^
ToListCC^ d
(CCd e
)CCe f
;CCf g
atencionDD 
.DD 
OrdenesDD  
=DD! "
ordenesFiltradasDD# 3
;DD3 4
transaccionAtencionFF #
.FF# $
enum1FF$ )
=FF* +
atencionFF, 4
.FF4 5

TipoDePagoFF5 ?
;FF? @
switchGG 
(GG 
atencionGG  
.GG  !

TipoDePagoGG! +
)GG+ ,
{HH 
caseII 
(II 
intII 
)II 
TipoPagoII &
.II& '
SimpleII' -
:II- .
resultJJ 
=JJ  '
ResolverVentaTipoPagoSimpleJJ! <
(JJ< =
atencionJJ= E
,JJE F
sesionRestauranteJJG X
,JJX Y
transaccionAtencionJJZ m
)JJm n
;JJn o
breakJJp u
;JJu v
caseKK 
(KK 
intKK 
)KK 
TipoPagoKK &
.KK& '
DivididoPorMontoKK' 7
:KK7 8
resultLL 
=LL  1
%ResolverVentaTipoPagoDivididoPorMontoLL! F
(LLF G
atencionLLG O
,LLO P
sesionRestauranteLLQ b
,LLb c
transaccionAtencionLLd w
)LLw x
;LLx y
breakLLz 
;	LL Ä
caseMM 
(MM 
intMM 
)MM 
TipoPagoMM &
.MM& '
DivididoPorItemMM' 6
:MM6 7
resultNN 
=NN  0
$ResolverVentaTipoPagoDivididoPorItemNN! E
(NNE F
atencionNNF N
,NNN O
sesionRestauranteNNP a
,NNa b
transaccionAtencionNNc v
)NNv w
;NNw x
breakNNy ~
;NN~ 
}OO 
returnPP 
resultPP 
;PP 
}QQ 
catchRR 
(RR 
	ExceptionRR 
eRR 
)RR 
{SS 
throwTT 
newTT 
LogicaExceptionTT )
(TT) *
$strTT* V
,TTV W
eTTX Y
)TTY Z
;TTZ [
}UU 
}VV 	
privateXX 
voidXX -
!AgregarEventosTransaccionAtencionXX 6
(XX6 7
TransaccionXX7 B
transaccionAtencionXXC V
,XXV W
SesionRestauranteXXX i
sesionRestauranteXXj {
)XX{ |
{YY 	
transaccionAtencion[[ 
.[[  
Evento_transaccion[[  2
.[[2 3
Add[[3 6
([[6 7
new[[7 :
Evento_transaccion[[; M
{\\ 
id_empleado]] 
=]] 
sesionRestaurante]] /
.]]/ 0
SesionDeUsuario]]0 ?
.]]? @
Empleado]]@ H
.]]H I
Id]]I K
,]]K L
id_transaccion^^ 
=^^  
transaccionAtencion^^! 4
.^^4 5
id^^5 7
,^^7 8
	id_evento__ 
=__ 
MaestroSettings__ +
.__+ ,
Default__, 3
.__3 4+
IdDetalleMaestroEstadoFacturado__4 S
,__S T
fecha`` 
=`` 
DateTimeUtil`` $
.``$ %
FechaActual``% 0
(``0 1
)``1 2
,``2 3

comentarioaa 
=aa 
$straa S
}bb 
)bb 
;bb 
ifcc 
(cc 
sesionRestaurantecc !
.cc! "
SesionDeUsuariocc" 1
.cc1 2
Empleadocc2 :
.cc: ;
TieneRolcc; C
(ccC D
ActorSettingsccD Q
.ccQ R
DefaultccR Y
.ccY Z
IdRolCajeroccZ e
)cce f
)ccf g
{dd 
transaccionAtencionee #
.ee# $
Evento_transaccionee$ 6
.ee6 7
Addee7 :
(ee: ;
newee; >
Evento_transaccionee? Q
{ff 
id_empleadogg 
=gg  !
sesionRestaurantegg" 3
.gg3 4
SesionDeUsuariogg4 C
.ggC D
EmpleadoggD L
.ggL M
IdggM O
,ggO P
id_transaccionhh "
=hh# $
transaccionAtencionhh% 8
.hh8 9
idhh9 ;
,hh; <
	id_eventoii 
=ii 
MaestroSettingsii  /
.ii/ 0
Defaultii0 7
.ii7 8,
 IdDetalleMaestroEstadoConfirmadoii8 X
,iiX Y
fechajj 
=jj 
DateTimeUtiljj (
.jj( )
FechaActualjj) 4
(jj4 5
)jj5 6
,jj6 7

comentariokk 
=kk  
$strkk! W
}ll 
)ll 
;ll 
}mm 
}nn 	
publicpp 
Actor_negociopp -
!ObtenerYDesocuparActorNegocioMesapp >
(pp> ?
AtencionRestaurantepp? R
atencionppS [
,pp[ \
SesionRestaurantepp] n
sesionRestaurante	ppo Ä
,
ppÄ Å
Transaccion
ppÇ ç!
transaccionAtencion
ppé °
)
pp° ¢
{qq 	
Actor_negociorr 
actorNegocioMesarr *
=rr+ ,
transaccionAtencionrr- @
.rr@ A
Actor_negocio4rrA O
;rrO P
actorNegocioMesass 
.ss 

indicador1ss '
=ss( )
falsess* /
;ss/ 0
vartt 
ambienteMesatt 
=tt 
sesionRestaurantett 0
.tt0 1
	Ambientestt1 :
.tt: ;
SingleOrDefaulttt; J
(ttJ K
attK L
=>ttM O
attP Q
.ttQ R
IdttR T
==ttU W
atencionttX `
.tt` a
Mesatta e
.tte f

IdAmbientettf p
)ttp q
;ttq r
ifuu 
(uu 
(uu 
ambienteMesauu 
!=uu  
nulluu! %
&&uu& (
ambienteMesauu) 5
.uu5 6
MesasTemporalesuu6 E
)uuE F
||uuG I
!uuJ K
atencionuuK S
.uuS T
EsAtencionConMesauuT e
)uue f
{vv 
actorNegocioMesaww  
.ww  !

es_vigenteww! +
=ww, -
falseww. 3
;ww3 4
}xx 
returnyy 
actorNegocioMesayy #
;yy# $
}zz 	
public
ÉÉ 
OperationResult
ÉÉ )
ResolverVentaTipoPagoSimple
ÉÉ :
(
ÉÉ: ;!
AtencionRestaurante
ÉÉ; N
atencion
ÉÉO W
,
ÉÉW X
SesionRestaurante
ÉÉY j
sesionRestaurante
ÉÉk |
,
ÉÉ| }
TransaccionÉÉ~ â#
transaccionAtencionÉÉä ù
)ÉÉù û
{
ÑÑ 	
var
ÖÖ 

datosVenta
ÖÖ 
=
ÖÖ 
atencion
ÖÖ %
.
ÖÖ% &
Comprobantes
ÖÖ& 2
.
ÖÖ2 3
Single
ÖÖ3 9
(
ÖÖ9 :
)
ÖÖ: ;
;
ÖÖ; <

datosVenta
ÜÜ 
.
ÜÜ 
TransaccionOrigen
ÜÜ (
=
ÜÜ) *!
transaccionAtencion
ÜÜ+ >
;
ÜÜ> ?

datosVenta
áá 
.
áá 
ActorReferencia
áá &
=
áá' (/
!ObtenerYDesocuparActorNegocioMesa
áá) J
(
ááJ K
atencion
ááK S
,
ááS T
sesionRestaurante
ááU f
,
ááf g!
transaccionAtencion
ááh {
)
áá{ |
;
áá| },
CompletarDatosGeneralesDeVenta
àà *
(
àà* +

datosVenta
àà+ 5
,
àà5 6
atencion
àà7 ?
,
àà? @
sesionRestaurante
ààA R
.
ààR S
SesionDeUsuario
ààS b
)
ààb c
;
ààc d

datosVenta
ââ 
.
ââ 
Orden
ââ 
.
ââ 
Detalles
ââ %
=
ââ& '$
GenerarDetallesDeVenta
ââ( >
(
ââ> ?
atencion
ââ? G
)
ââG H
;
ââH I
var
ää 
	resultado
ää 
=
ää 
_operacionLogica
ää ,
.
ää, -%
ConfirmarVentaIntegrada
ää- D
(
ääD E
ModoOperacionEnum
ääE V
.
ääV W
PorMostrador
ääW c
,
ääc d
sesionRestaurante
ääe v
.
ääv w
SesionDeUsuarioääw Ü
,ääÜ á

datosVentaääà í
)ääí ì
;ääì î

Dictionary
ãã 
<
ãã 
long
ãã 
,
ãã 
long
ãã !
>
ãã! "3
%mapeoIdsDatosVentasIntegradasIdsOrden
ãã# H
=
ããI J
new
ããK N

Dictionary
ããO Y
<
ããY Z
long
ããZ ^
,
ãã^ _
long
ãã` d
>
ããd e
(
ããe f
)
ããf g
;
ããg h3
%mapeoIdsDatosVentasIntegradasIdsOrden
åå 1
.
åå1 2
Add
åå2 5
(
åå5 6
$num
åå6 7
,
åå7 8
(
åå9 :
long
åå: >
)
åå> ?
	resultado
åå? H
.
ååH I
information
ååI T
)
ååT U
;
ååU V
	resultado
çç 
.
çç 
objeto
çç 
=
çç 3
%mapeoIdsDatosVentasIntegradasIdsOrden
çç D
;
ççD E
return
éé 
	resultado
éé 
;
éé 
}
èè 	
public
òò 
OperationResult
òò 3
%ResolverVentaTipoPagoDivididoPorMonto
òò D
(
òòD E!
AtencionRestaurante
òòE X
atencion
òòY a
,
òòa b
SesionRestaurante
òòc t 
sesionRestauranteòòu Ü
,òòÜ á
Transaccionòòà ì#
transaccionAtencionòòî ß
)òòß ®
{
ôô 	
if
öö 
(
öö 
atencion
öö 
.
öö 
ImporteAtencion
öö (
!=
öö) +
atencion
öö, 4
.
öö4 5
Comprobantes
öö5 A
.
ööA B
Sum
ööB E
(
ööE F
c
ööF G
=>
ööH J
c
ööK L
.
ööL M
Orden
ööM R
.
ööR S
Total
ööS X
)
ööX Y
)
ööY Z
throw
õõ 
new
õõ 
LogicaException
õõ )
(
õõ) *
$strõõ* Ø
)õõØ ∞
;õõ∞ ±
var
úú 
datosVentas
úú 
=
úú 
atencion
úú &
.
úú& '
Comprobantes
úú' 3
;
úú3 4
datosVentas
ùù 
.
ùù 
ForEach
ùù 
(
ùù  
v
ùù  !
=>
ùù" $
v
ùù% &
.
ùù& '
Orden
ùù' ,
.
ùù, -
UnificarDetalles
ùù- =
=
ùù> ?
true
ùù@ D
)
ùùD E
;
ùùE F
datosVentas
ûû 
.
ûû 
ForEach
ûû 
(
ûû  
v
ûû  !
=>
ûû" $
v
ûû% &
.
ûû& '
TransaccionOrigen
ûû' 8
=
ûû9 :!
transaccionAtencion
ûû; N
)
ûûN O
;
ûûO P
datosVentas
üü 
.
üü 
ForEach
üü 
(
üü  
v
üü  !
=>
üü" $
v
üü% &
.
üü& '
ActorReferencia
üü' 6
=
üü7 8/
!ObtenerYDesocuparActorNegocioMesa
üü9 Z
(
üüZ [
atencion
üü[ c
,
üüc d
sesionRestaurante
üüe v
,
üüv w"
transaccionAtencionüüx ã
)üüã å
)üüå ç
;üüç é
datosVentas
†† 
.
†† 
ForEach
†† 
(
††  
v
††  !
=>
††" $,
CompletarDatosGeneralesDeVenta
††% C
(
††C D
v
††D E
,
††E F
atencion
††G O
,
††O P
sesionRestaurante
††Q b
.
††b c
SesionDeUsuario
††c r
)
††r s
)
††s t
;
††t u
datosVentas
°° 
.
°° 
ForEach
°° 
(
°°  
v
°°  !
=>
°°" $
v
°°% &
.
°°& '
Orden
°°' ,
.
°°, -
Detalles
°°- 5
=
°°6 7$
GenerarDetallesDeVenta
°°8 N
(
°°N O
atencion
°°O W
,
°°W X
v
°°Y Z
.
°°Z [
Orden
°°[ `
.
°°` a
Total
°°a f
)
°°f g
)
°°g h
;
°°h i@
2RecalcularCantidadEImporteTipoPagoDivididoPorMonto
¢¢ >
(
¢¢> ?
atencion
¢¢? G
,
¢¢G H
datosVentas
¢¢I T
)
¢¢T U
;
¢¢U V
OperationResult
££ 
	resultado
££ %
=
££& '
_operacionLogica
££( 8
.
££8 9'
ConfirmarVentasIntegradas
££9 R
(
££R S
ModoOperacionEnum
££S d
.
££d e
PorMostrador
££e q
,
££q r 
sesionRestaurante££s Ñ
.££Ñ Ö
SesionDeUsuario££Ö î
,££î ï
datosVentas££ñ °
)££° ¢
;££¢ £
return
§§ 
	resultado
§§ 
;
§§ 
}
•• 	
public
ÆÆ 
OperationResult
ÆÆ 2
$ResolverVentaTipoPagoDivididoPorItem
ÆÆ C
(
ÆÆC D!
AtencionRestaurante
ÆÆD W
atencion
ÆÆX `
,
ÆÆ` a
SesionRestaurante
ÆÆb s 
sesionRestauranteÆÆt Ö
,ÆÆÖ Ü
TransaccionÆÆá í#
transaccionAtencionÆÆì ¶
)ÆÆ¶ ß
{
ØØ 	
var
∞∞ 
datosVentas
∞∞ 
=
∞∞ 
atencion
∞∞ &
.
∞∞& '
Comprobantes
∞∞' 3
;
∞∞3 4
var
±± 
detallesDeOrden
±± 
=
±±  !
atencion
±±" *
.
±±* +
Ordenes
±±+ 2
.
±±2 3

SelectMany
±±3 =
(
±±= >
o
±±> ?
=>
±±@ B
o
±±C D
.
±±D E
DetallesDeOrden
±±E T
)
±±T U
.
±±U V
ToList
±±V \
(
±±\ ]
)
±±] ^
;
±±^ _
foreach
≤≤ 
(
≤≤ 
var
≤≤ 
	datoVenta
≤≤ "
in
≤≤# %
datosVentas
≤≤& 1
)
≤≤1 2
{
≥≥ 
	datoVenta
¥¥ 
.
¥¥ 
Orden
¥¥ 
.
¥¥  
Detalles
¥¥  (
=
¥¥) *4
&ConvertirDetalleOrdenADetalleOperacion
¥¥+ Q
(
¥¥Q R
detallesDeOrden
¥¥R a
,
¥¥a b
	datoVenta
¥¥c l
.
¥¥l m
Orden
¥¥m r
.
¥¥r s
Detalles
¥¥s {
.
¥¥{ |
Select¥¥| Ç
(¥¥Ç É
d¥¥É Ñ
=>¥¥Ö á
d¥¥à â
.¥¥â ä
Id¥¥ä å
)¥¥å ç
.¥¥ç é
ToList¥¥é î
(¥¥î ï
)¥¥ï ñ
)¥¥ñ ó
;¥¥ó ò
}
µµ 
datosVentas
∑∑ 
.
∑∑ 
ForEach
∑∑ 
(
∑∑  
v
∑∑  !
=>
∑∑" $
v
∑∑% &
.
∑∑& '
TransaccionOrigen
∑∑' 8
=
∑∑9 :!
transaccionAtencion
∑∑; N
)
∑∑N O
;
∑∑O P
datosVentas
∏∏ 
.
∏∏ 
ForEach
∏∏ 
(
∏∏  
v
∏∏  !
=>
∏∏" $
v
∏∏% &
.
∏∏& '
ActorReferencia
∏∏' 6
=
∏∏7 8/
!ObtenerYDesocuparActorNegocioMesa
∏∏9 Z
(
∏∏Z [
atencion
∏∏[ c
,
∏∏c d
sesionRestaurante
∏∏e v
,
∏∏v w"
transaccionAtencion∏∏x ã
)∏∏ã å
)∏∏å ç
;∏∏ç é
datosVentas
ππ 
.
ππ 
ForEach
ππ 
(
ππ  
v
ππ  !
=>
ππ" $,
CompletarDatosGeneralesDeVenta
ππ% C
(
ππC D
v
ππD E
,
ππE F
atencion
ππG O
,
ππO P
sesionRestaurante
ππQ b
.
ππb c
SesionDeUsuario
ππc r
)
ππr s
)
ππs t
;
ππt u
datosVentas
∫∫ 
.
∫∫ 
ForEach
∫∫ 
(
∫∫  
v
∫∫  !
=>
∫∫" $$
AgruparDetallesDeVenta
∫∫% ;
(
∫∫; <
v
∫∫< =
)
∫∫= >
)
∫∫> ?
;
∫∫? @
var
ªª 
	resultado
ªª 
=
ªª 
_operacionLogica
ªª ,
.
ªª, -'
ConfirmarVentasIntegradas
ªª- F
(
ªªF G
ModoOperacionEnum
ªªG X
.
ªªX Y
PorMostrador
ªªY e
,
ªªe f
sesionRestaurante
ªªg x
.
ªªx y
SesionDeUsuarioªªy à
,ªªà â
datosVentasªªä ï
)ªªï ñ
;ªªñ ó
return
ºº 
	resultado
ºº 
;
ºº 
}
ΩΩ 	
public
øø 
List
øø 
<
øø  
DetalleDeOperacion
øø &
>
øø& '4
&ConvertirDetalleOrdenADetalleOperacion
øø( N
(
øøN O
List
øøO S
<
øøS T
DetalleOrden
øøT `
>
øø` a
detallesDeOrden
øøb q
,
øøq r
List
øøs w
<
øøw x
long
øøx |
>
øø| }

idsDetalleøø~ à
)øøà â
{
¿¿ 	
List
¡¡ 
<
¡¡  
DetalleDeOperacion
¡¡ #
>
¡¡# $
nuevosDetalles
¡¡% 3
=
¡¡4 5
new
¡¡6 9
List
¡¡: >
<
¡¡> ? 
DetalleDeOperacion
¡¡? Q
>
¡¡Q R
(
¡¡R S
)
¡¡S T
;
¡¡T U
foreach
¬¬ 
(
¬¬ 
var
¬¬ 
	idDetalle
¬¬ "
in
¬¬# %

idsDetalle
¬¬& 0
)
¬¬0 1
{
√√ 
var
ƒƒ 
detalle
ƒƒ 
=
ƒƒ 
detallesDeOrden
ƒƒ -
.
ƒƒ- .
First
ƒƒ. 3
(
ƒƒ3 4
d
ƒƒ4 5
=>
ƒƒ6 8
d
ƒƒ9 :
.
ƒƒ: ;
Id
ƒƒ; =
==
ƒƒ> @
	idDetalle
ƒƒA J
)
ƒƒJ K
;
ƒƒK L
nuevosDetalles
≈≈ 
.
≈≈ 
Add
≈≈ "
(
≈≈" #
new
≈≈# & 
DetalleDeOperacion
≈≈' 9
(
≈≈9 :
)
≈≈: ;
{
∆∆ 
Id
«« 
=
«« 
	idDetalle
«« "
,
««" #
Cantidad
»» 
=
»» 
detalle
»» &
.
»»& '
Cantidad
»»' /
,
»»/ 0
PrecioUnitario
…… "
=
……# $
detalle
……% ,
.
……, -
Precio
……- 3
,
……3 4
Importe
   
=
   
detalle
   %
.
  % &
Importe
  & -
,
  - .
Producto
ÀÀ 
=
ÀÀ 
new
ÀÀ "(
Concepto_Negocio_Comercial
ÀÀ# =
(
ÀÀ= >
)
ÀÀ> ?
{
ÀÀ@ A
Id
ÀÀB D
=
ÀÀE F
detalle
ÀÀG N
.
ÀÀN O
IdItem
ÀÀO U
,
ÀÀU V
EsBien
ÀÀW ]
=
ÀÀ^ _
detalle
ÀÀ` g
.
ÀÀg h
EsBien
ÀÀh n
}
ÀÀo p
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 
return
ŒŒ 
nuevosDetalles
ŒŒ !
;
ŒŒ! "
}
œœ 	
public
◊◊ 
void
◊◊ ,
CompletarDatosGeneralesDeVenta
◊◊ 2
(
◊◊2 3!
DatosVentaIntegrada
◊◊3 F

datosVenta
◊◊G Q
,
◊◊Q R!
AtencionRestaurante
◊◊S f
atencion
◊◊g o
,
◊◊o p%
UserProfileSessionData◊◊q á
sesionUsuario◊◊à ï
)◊◊ï ñ
{
ÿÿ 	

datosVenta
⁄⁄ 
.
⁄⁄ 
Orden
⁄⁄ 
.
⁄⁄ 
PuntoDeVenta
⁄⁄ )
=
⁄⁄* +
new
⁄⁄, /
ItemGenerico
⁄⁄0 <
{
⁄⁄= >
Id
⁄⁄? A
=
⁄⁄B C
sesionUsuario
⁄⁄D Q
.
⁄⁄Q R,
IdCentroDeAtencionSeleccionado
⁄⁄R p
,
⁄⁄p q
Nombre
⁄⁄r x
=
⁄⁄y z
sesionUsuario⁄⁄{ à
.⁄⁄à â,
CentroDeAtencionSeleccionado⁄⁄â •
.⁄⁄• ¶
Nombre⁄⁄¶ ¨
}⁄⁄≠ Æ
;⁄⁄Æ Ø

datosVenta
€€ 
.
€€ 
Orden
€€ 
.
€€ 
Vendedor
€€ %
=
€€& '
new
€€( +
ItemGenerico
€€, 8
{
€€9 :
Id
€€; =
=
€€> ?
sesionUsuario
€€@ M
.
€€M N
Empleado
€€N V
.
€€V W
Id
€€W Y
}
€€Z [
;
€€[ \

datosVenta
‹‹ 
.
‹‹ 
Orden
‹‹ 
.
‹‹ $
NumeroBolsasDePlastico
‹‹ 3
=
‹‹4 5
$num
‹‹6 7
;
‹‹7 8

datosVenta
›› 
.
›› 
MovimientoAlmacen
›› (
=
››) *
new
››+ .&
DatosMovimientoDeAlmacen
››/ G
{
››H I0
"HayComprobanteDeSalidaDeMercaderia
››J l
=
››m n
false
››o t
}
››u v
;
››v w
}
ﬁﬁ 	
private
ÁÁ 
List
ÁÁ 
<
ÁÁ  
DetalleDeOperacion
ÁÁ '
>
ÁÁ' ($
GenerarDetallesDeVenta
ÁÁ) ?
(
ÁÁ? @!
AtencionRestaurante
ÁÁ@ S
atencion
ÁÁT \
)
ÁÁ\ ]
{
ËË 	
try
ÈÈ 
{
ÍÍ 
var
ÎÎ 
detallesVenta
ÎÎ !
=
ÎÎ" #
new
ÎÎ$ '
List
ÎÎ( ,
<
ÎÎ, - 
DetalleDeOperacion
ÎÎ- ?
>
ÎÎ? @
(
ÎÎ@ A
)
ÎÎA B
;
ÎÎB C
var
ÏÏ 
detallesAgrupados
ÏÏ %
=
ÏÏ& '
atencion
ÏÏ( 0
.
ÏÏ0 1
Ordenes
ÏÏ1 8
.
ÏÏ8 9

SelectMany
ÏÏ9 C
(
ÏÏC D
o
ÏÏD E
=>
ÏÏF H
o
ÏÏI J
.
ÏÏJ K
DetallesDeOrden
ÏÏK Z
)
ÏÏZ [
.
ÏÏ[ \
GroupBy
ÏÏ\ c
(
ÏÏc d
d
ÏÏd e
=>
ÏÏf h
new
ÏÏi l
{
ÏÏm n
d
ÏÏo p
.
ÏÏp q
IdItem
ÏÏq w
,
ÏÏw x
d
ÏÏy z
.
ÏÏz {
PrecioÏÏ{ Å
}ÏÏÇ É
)ÏÏÉ Ñ
;ÏÏÑ Ö
foreach
ÌÌ 
(
ÌÌ 
var
ÌÌ 
grupo
ÌÌ "
in
ÌÌ# %
detallesAgrupados
ÌÌ& 7
)
ÌÌ7 8
{
ÓÓ 
detallesVenta
ÔÔ !
.
ÔÔ! "
Add
ÔÔ" %
(
ÔÔ% &
new
ÔÔ& ) 
DetalleDeOperacion
ÔÔ* <
(
ÔÔ< =
)
ÔÔ= >
{
 
Producto
ÒÒ  
=
ÒÒ! "
new
ÒÒ# &(
Concepto_Negocio_Comercial
ÒÒ' A
{
ÒÒB C
Id
ÒÒD F
=
ÒÒG H
grupo
ÒÒI N
.
ÒÒN O
Key
ÒÒO R
.
ÒÒR S
IdItem
ÒÒS Y
,
ÒÒY Z
EsBien
ÒÒ[ a
=
ÒÒb c
grupo
ÒÒd i
.
ÒÒi j
First
ÒÒj o
(
ÒÒo p
)
ÒÒp q
.
ÒÒq r
EsBien
ÒÒr x
}
ÒÒy z
,
ÒÒz {
Cantidad
ÚÚ  
=
ÚÚ! "
grupo
ÚÚ# (
.
ÚÚ( )
Sum
ÚÚ) ,
(
ÚÚ, -
g
ÚÚ- .
=>
ÚÚ/ 1
g
ÚÚ2 3
.
ÚÚ3 4
Cantidad
ÚÚ4 <
)
ÚÚ< =
,
ÚÚ= >
PrecioUnitario
ÛÛ &
=
ÛÛ' (
grupo
ÛÛ) .
.
ÛÛ. /
Key
ÛÛ/ 2
.
ÛÛ2 3
Precio
ÛÛ3 9
,
ÛÛ9 :
Importe
ÙÙ 
=
ÙÙ  !
grupo
ÙÙ" '
.
ÙÙ' (
Sum
ÙÙ( +
(
ÙÙ+ ,
g
ÙÙ, -
=>
ÙÙ. 0
g
ÙÙ1 2
.
ÙÙ2 3
Importe
ÙÙ3 :
)
ÙÙ: ;
,
ÙÙ; <
MascaraDeCalculo
ıı (
=
ıı) *
VentasSettings
ıı+ 9
.
ıı9 :
Default
ıı: A
.
ııA B/
!MascaraDeCalculoCantidadCalculada
ııB c
}
ˆˆ 
)
ˆˆ 
;
ˆˆ 
}
˜˜ 
return
¯¯ 
detallesVenta
¯¯ $
;
¯¯$ %
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
new
¸¸ 
LogicaException
¸¸ )
(
¸¸) *
$str
¸¸* ^
,
¸¸^ _
e
¸¸` a
)
¸¸a b
;
¸¸b c
}
˝˝ 
}
˛˛ 	
private
áá 
List
áá 
<
áá  
DetalleDeOperacion
áá '
>
áá' ($
GenerarDetallesDeVenta
áá) ?
(
áá? @!
AtencionRestaurante
áá@ S
atencion
ááT \
,
áá\ ]
decimal
áá^ e
importeParcial
ááf t
)
áát u
{
àà 	
try
ââ 
{
ää 
var
ãã 
detallesVenta
ãã !
=
ãã" #
new
ãã$ '
List
ãã( ,
<
ãã, - 
DetalleDeOperacion
ãã- ?
>
ãã? @
(
ãã@ A
)
ããA B
;
ããB C
var
åå $
detallesVentaAgrupados
åå *
=
åå+ ,$
GenerarDetallesDeVenta
åå- C
(
ååC D
atencion
ååD L
)
ååL M
;
ååM N
var
çç 
porcentageDelPago
çç %
=
çç& '
importeParcial
çç( 6
/
çç7 8
atencion
çç9 A
.
ççA B
ImporteAtencion
ççB Q
;
ççQ R
foreach
éé 
(
éé 
var
éé 
detalle
éé $
in
éé% '$
detallesVentaAgrupados
éé( >
)
éé> ?
{
èè 
detallesVenta
êê !
.
êê! "
Add
êê" %
(
êê% &
new
êê& ) 
DetalleDeOperacion
êê* <
(
êê< =
)
êê= >
{
ëë 
Producto
íí  
=
íí! "
new
íí# &(
Concepto_Negocio_Comercial
íí' A
{
ííB C
Id
ííD F
=
ííG H
detalle
ííI P
.
ííP Q
Producto
ííQ Y
.
ííY Z
Id
ííZ \
,
íí\ ]
EsBien
íí^ d
=
ííe f
detalle
ííg n
.
íín o
Producto
íío w
.
ííw x
EsBien
ííx ~
}íí Ä
,ííÄ Å
Cantidad
ìì  
=
ìì! "
detalle
ìì# *
.
ìì* +
Cantidad
ìì+ 3
*
ìì4 5
porcentageDelPago
ìì6 G
,
ììG H
PrecioUnitario
îî &
=
îî' (
detalle
îî) 0
.
îî0 1
PrecioUnitario
îî1 ?
,
îî? @
Importe
ïï 
=
ïï  !
Math
ïï" &
.
ïï& '
Round
ïï' ,
(
ïï, -
detalle
ïï- 4
.
ïï4 5
Importe
ïï5 <
*
ïï= >
porcentageDelPago
ïï? P
,
ïïP Q
$num
ïïR S
)
ïïS T
,
ïïT U
MascaraDeCalculo
ññ (
=
ññ) *
VentasSettings
ññ+ 9
.
ññ9 :
Default
ññ: A
.
ññA B4
&MascaraDeCalculoDeNingunValorCalculado
ññB h
}
óó 
)
óó 
;
óó 
}
òò 
return
ôô 
detallesVenta
ôô $
;
ôô$ %
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
new
ùù 
LogicaException
ùù )
(
ùù) *
$str
ùù* ^
,
ùù^ _
e
ùù` a
)
ùùa b
;
ùùb c
}
ûû 
}
üü 	
private
°° 
void
°° $
AgruparDetallesDeVenta
°° +
(
°°+ ,!
DatosVentaIntegrada
°°, ?
venta
°°@ E
)
°°E F
{
¢¢ 	
try
££ 
{
§§ 
var
¶¶ 
detallesVenta
¶¶ !
=
¶¶" #
new
¶¶$ '
List
¶¶( ,
<
¶¶, - 
DetalleDeOperacion
¶¶- ?
>
¶¶? @
(
¶¶@ A
)
¶¶A B
;
¶¶B C
var
ßß 
detallesAgrupados
ßß %
=
ßß& '
venta
ßß( -
.
ßß- .
Orden
ßß. 3
.
ßß3 4
Detalles
ßß4 <
.
ßß< =
GroupBy
ßß= D
(
ßßD E
d
ßßE F
=>
ßßG I
new
ßßJ M
{
ßßN O
d
ßßP Q
.
ßßQ R
Producto
ßßR Z
.
ßßZ [
Id
ßß[ ]
,
ßß] ^
d
ßß_ `
.
ßß` a
PrecioUnitario
ßßa o
}
ßßp q
)
ßßq r
;
ßßr s
foreach
®® 
(
®® 
var
®® 
grupo
®® "
in
®®# %
detallesAgrupados
®®& 7
)
®®7 8
{
©© 
detallesVenta
™™ !
.
™™! "
Add
™™" %
(
™™% &
new
™™& ) 
DetalleDeOperacion
™™* <
(
™™< =
)
™™= >
{
´´ 
Producto
¨¨  
=
¨¨! "
new
¨¨# &(
Concepto_Negocio_Comercial
¨¨' A
{
¨¨B C
Id
¨¨D F
=
¨¨G H
grupo
¨¨I N
.
¨¨N O
Key
¨¨O R
.
¨¨R S
Id
¨¨S U
,
¨¨U V
EsBien
¨¨W ]
=
¨¨^ _
grupo
¨¨` e
.
¨¨e f
First
¨¨f k
(
¨¨k l
)
¨¨l m
.
¨¨m n
Producto
¨¨n v
.
¨¨v w
EsBien
¨¨w }
}
¨¨~ 
,¨¨ Ä
Cantidad
≠≠  
=
≠≠! "
grupo
≠≠# (
.
≠≠( )
Sum
≠≠) ,
(
≠≠, -
g
≠≠- .
=>
≠≠/ 1
g
≠≠2 3
.
≠≠3 4
Cantidad
≠≠4 <
)
≠≠< =
,
≠≠= >
PrecioUnitario
ÆÆ &
=
ÆÆ' (
grupo
ÆÆ) .
.
ÆÆ. /
Key
ÆÆ/ 2
.
ÆÆ2 3
PrecioUnitario
ÆÆ3 A
,
ÆÆA B
Importe
ØØ 
=
ØØ  !
grupo
ØØ" '
.
ØØ' (
Sum
ØØ( +
(
ØØ+ ,
g
ØØ, -
=>
ØØ. 0
g
ØØ1 2
.
ØØ2 3
Importe
ØØ3 :
)
ØØ: ;
,
ØØ; <
MascaraDeCalculo
∞∞ (
=
∞∞) *
VentasSettings
∞∞+ 9
.
∞∞9 :
Default
∞∞: A
.
∞∞A B/
!MascaraDeCalculoCantidadCalculada
∞∞B c
}
±± 
)
±± 
;
±± 
}
≤≤ 
venta
≥≥ 
.
≥≥ 
Orden
≥≥ 
.
≥≥ 
Detalles
≥≥ $
=
≥≥% &
detallesVenta
≥≥' 4
;
≥≥4 5
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
LogicaException
∑∑ )
(
∑∑) *
$str
∑∑* ^
,
∑∑^ _
e
∑∑` a
)
∑∑a b
;
∑∑b c
}
∏∏ 
}
ππ 	
private
ªª 
void
ªª @
2RecalcularCantidadEImporteTipoPagoDivididoPorMonto
ªª G
(
ªªG H!
AtencionRestaurante
ªªH [
atencion
ªª\ d
,
ªªd e
List
ªªf j
<
ªªj k!
DatosVentaIntegrada
ªªk ~
>
ªª~ !
comprobantesVentaªªÄ ë
)ªªë í
{
ºº 	
try
ΩΩ 
{
ææ 
var
øø 
detallesAtencion
øø $
=
øø% &$
GenerarDetallesDeVenta
øø' =
(
øø= >
atencion
øø> F
)
øøF G
;
øøG H
for
¿¿ 
(
¿¿ 
int
¿¿ 
i
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
i
¿¿  !
<
¿¿" #
comprobantesVenta
¿¿$ 5
.
¿¿5 6
Count
¿¿6 ;
;
¿¿; <
i
¿¿= >
++
¿¿> @
)
¿¿@ A
{
¡¡ 
var
¬¬ !
detallesComprobante
¬¬ +
=
¬¬, -)
AgruparDetallesComprobantes
¬¬. I
(
¬¬I J
comprobantesVenta
¬¬J [
)
¬¬[ \
;
¬¬\ ]
if
√√ 
(
√√ 
atencion
√√  
.
√√  !
Comprobantes
√√! -
[
√√- .
i
√√. /
]
√√/ 0
.
√√0 1
Orden
√√1 6
.
√√6 7
Total
√√7 <
!=
√√= ?
comprobantesVenta
√√@ Q
[
√√Q R
i
√√R S
]
√√S T
.
√√T U
Orden
√√U Z
.
√√Z [
ImporteTotal
√√[ g
)
√√g h
{
ƒƒ 
var
≈≈ 

diferencia
≈≈ &
=
≈≈' (
atencion
≈≈) 1
.
≈≈1 2
Comprobantes
≈≈2 >
[
≈≈> ?
i
≈≈? @
]
≈≈@ A
.
≈≈A B
Orden
≈≈B G
.
≈≈G H
Total
≈≈H M
-
≈≈N O
comprobantesVenta
≈≈P a
[
≈≈a b
i
≈≈b c
]
≈≈c d
.
≈≈d e
Orden
≈≈e j
.
≈≈j k
ImporteTotal
≈≈k w
;
≈≈w x
for
∆∆ 
(
∆∆ 
int
∆∆  
j
∆∆! "
=
∆∆# $
$num
∆∆% &
;
∆∆& '
j
∆∆( )
<
∆∆* +!
detallesComprobante
∆∆, ?
.
∆∆? @
Count
∆∆@ E
;
∆∆E F
j
∆∆G H
++
∆∆H J
)
∆∆J K
{
«« 
if
»» 
(
»»  !
detallesComprobante
»»  3
[
»»3 4
j
»»4 5
]
»»5 6
.
»»6 7
Importe
»»7 >
!=
»»? A
detallesAtencion
»»B R
.
»»R S
Single
»»S Y
(
»»Y Z
d
»»Z [
=>
»»\ ^
d
»»_ `
.
»»` a
Producto
»»a i
.
»»i j
Id
»»j l
==
»»m o"
detallesComprobante»»p É
[»»É Ñ
j»»Ñ Ö
]»»Ö Ü
.»»Ü á
Producto»»á è
.»»è ê
Id»»ê í
&&»»ì ï
d»»ñ ó
.»»ó ò
PrecioUnitario»»ò ¶
==»»ß ©#
detallesComprobante»»™ Ω
[»»Ω æ
j»»æ ø
]»»ø ¿
.»»¿ ¡
PrecioUnitario»»¡ œ
)»»œ –
.»»– —
Importe»»— ÿ
)»»ÿ Ÿ
{
…… 
comprobantesVenta
    1
[
  1 2
i
  2 3
]
  3 4
.
  4 5
Orden
  5 :
.
  : ;
Detalles
  ; C
.
  C D
Single
  D J
(
  J K
d
  K L
=>
  M O
d
  P Q
.
  Q R
Producto
  R Z
.
  Z [
Id
  [ ]
==
  ^ `!
detallesComprobante
  a t
[
  t u
j
  u v
]
  v w
.
  w x
Producto  x Ä
.  Ä Å
Id  Å É
&&  Ñ Ü
d  á à
.  à â
PrecioUnitario  â ó
==  ò ö#
detallesComprobante  õ Æ
[  Æ Ø
j  Ø ∞
]  ∞ ±
.  ± ≤
PrecioUnitario  ≤ ¿
)  ¿ ¡
.  ¡ ¬
Importe  ¬ …
+=    Ã

diferencia  Õ ◊
;  ◊ ÿ
break
ÀÀ  %
;
ÀÀ% &
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 
for
œœ 
(
œœ 
int
œœ 
j
œœ 
=
œœ  
$num
œœ! "
;
œœ" #
j
œœ$ %
<
œœ& '
detallesAtencion
œœ( 8
.
œœ8 9
Count
œœ9 >
;
œœ> ?
j
œœ@ A
++
œœA C
)
œœC D
{
–– 
var
—— 

diferencia
—— &
=
——' (
detallesAtencion
——) 9
[
——9 :
j
——: ;
]
——; <
.
——< =
Importe
——= D
-
——E F
comprobantesVenta
——G X
.
——X Y

SelectMany
——Y c
(
——c d
c
——d e
=>
——f h
c
——i j
.
——j k
Orden
——k p
.
——p q
Detalles
——q y
)
——y z
.
——z {
Where——{ Ä
(——Ä Å
d——Å Ç
=>——É Ö
d——Ü á
.——á à
Producto——à ê
.——ê ë
Id——ë ì
==——î ñ 
detallesAtencion——ó ß
[——ß ®
j——® ©
]——© ™
.——™ ´
Producto——´ ≥
.——≥ ¥
Id——¥ ∂
&&——∑ π
d——∫ ª
.——ª º
PrecioUnitario——º  
==——À Õ 
detallesAtencion——Œ ﬁ
[——ﬁ ﬂ
j——ﬂ ‡
]——‡ ·
.——· ‚
PrecioUnitario——‚ 
)—— Ò
.——Ò Ú
Sum——Ú ı
(——ı ˆ
d——ˆ ˜
=>——¯ ˙
d——˚ ¸
.——¸ ˝
Importe——˝ Ñ
)——Ñ Ö
;——Ö Ü
if
““ 
(
““ 

diferencia
““ &
!=
““' )
$num
““* +
)
““+ ,
{
”” 
comprobantesVenta
‘‘ -
[
‘‘- .
i
‘‘. /
]
‘‘/ 0
.
‘‘0 1
Orden
‘‘1 6
.
‘‘6 7
Detalles
‘‘7 ?
.
‘‘? @
First
‘‘@ E
(
‘‘E F
d
‘‘F G
=>
‘‘H J
d
‘‘K L
.
‘‘L M
Producto
‘‘M U
.
‘‘U V
Id
‘‘V X
==
‘‘Y [
detallesAtencion
‘‘\ l
[
‘‘l m
j
‘‘m n
]
‘‘n o
.
‘‘o p
Producto
‘‘p x
.
‘‘x y
Id
‘‘y {
&&
‘‘| ~
d‘‘ Ä
.‘‘Ä Å
PrecioUnitario‘‘Å è
==‘‘ê í 
detallesAtencion‘‘ì £
[‘‘£ §
j‘‘§ •
]‘‘• ¶
.‘‘¶ ß
PrecioUnitario‘‘ß µ
)‘‘µ ∂
.‘‘∂ ∑
Importe‘‘∑ æ
+=‘‘ø ¡

diferencia‘‘¬ Ã
;‘‘Ã Õ
}
’’ 
}
÷÷ 
}
◊◊ 
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
i
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
i
ÿÿ  !
<
ÿÿ" #
detallesAtencion
ÿÿ$ 4
.
ÿÿ4 5
Count
ÿÿ5 :
;
ÿÿ: ;
i
ÿÿ< =
++
ÿÿ= ?
)
ÿÿ? @
{
ŸŸ 
var
⁄⁄ 

diferencia
⁄⁄ "
=
⁄⁄# $
detallesAtencion
⁄⁄% 5
[
⁄⁄5 6
i
⁄⁄6 7
]
⁄⁄7 8
.
⁄⁄8 9
Cantidad
⁄⁄9 A
-
⁄⁄B C
comprobantesVenta
⁄⁄D U
.
⁄⁄U V

SelectMany
⁄⁄V `
(
⁄⁄` a
c
⁄⁄a b
=>
⁄⁄c e
c
⁄⁄f g
.
⁄⁄g h
Orden
⁄⁄h m
.
⁄⁄m n
Detalles
⁄⁄n v
)
⁄⁄v w
.
⁄⁄w x
Where
⁄⁄x }
(
⁄⁄} ~
d
⁄⁄~ 
=>⁄⁄Ä Ç
d⁄⁄É Ñ
.⁄⁄Ñ Ö
Producto⁄⁄Ö ç
.⁄⁄ç é
Id⁄⁄é ê
==⁄⁄ë ì 
detallesAtencion⁄⁄î §
[⁄⁄§ •
i⁄⁄• ¶
]⁄⁄¶ ß
.⁄⁄ß ®
Producto⁄⁄® ∞
.⁄⁄∞ ±
Id⁄⁄± ≥
&&⁄⁄¥ ∂
d⁄⁄∑ ∏
.⁄⁄∏ π
PrecioUnitario⁄⁄π «
==⁄⁄»   
detallesAtencion⁄⁄À €
[⁄⁄€ ‹
i⁄⁄‹ ›
]⁄⁄› ﬁ
.⁄⁄ﬁ ﬂ
PrecioUnitario⁄⁄ﬂ Ì
)⁄⁄Ì Ó
.⁄⁄Ó Ô
Sum⁄⁄Ô Ú
(⁄⁄Ú Û
d⁄⁄Û Ù
=>⁄⁄ı ˜
d⁄⁄¯ ˘
.⁄⁄˘ ˙
Cantidad⁄⁄˙ Ç
)⁄⁄Ç É
;⁄⁄É Ñ
if
€€ 
(
€€ 

diferencia
€€ "
!=
€€# %
$num
€€& '
)
€€' (
{
‹‹ 
comprobantesVenta
›› )
.
››) *

SelectMany
››* 4
(
››4 5
c
››5 6
=>
››7 9
c
››: ;
.
››; <
Orden
››< A
.
››A B
Detalles
››B J
)
››J K
.
››K L
First
››L Q
(
››Q R
d
››R S
=>
››T V
d
››W X
.
››X Y
Producto
››Y a
.
››a b
Id
››b d
==
››e g
detallesAtencion
››h x
[
››x y
i
››y z
]
››z {
.
››{ |
Producto››| Ñ
.››Ñ Ö
Id››Ö á
&&››à ä
d››ã å
.››å ç
PrecioUnitario››ç õ
==››ú û 
detallesAtencion››ü Ø
[››Ø ∞
i››∞ ±
]››± ≤
.››≤ ≥
PrecioUnitario››≥ ¡
)››¡ ¬
.››¬ √
Cantidad››√ À
+=››Ã Œ

diferencia››œ Ÿ
;››Ÿ ⁄
}
ﬁﬁ 
}
ﬂﬂ 
foreach
‡‡ 
(
‡‡ 
var
‡‡ 
item
‡‡ !
in
‡‡" $
detallesAtencion
‡‡% 5
)
‡‡5 6
{
·· 
if
‚‚ 
(
‚‚ 
detallesAtencion
‚‚ (
.
‚‚( )
Single
‚‚) /
(
‚‚/ 0
i
‚‚0 1
=>
‚‚2 4
i
‚‚5 6
.
‚‚6 7
Producto
‚‚7 ?
.
‚‚? @
Id
‚‚@ B
==
‚‚C E
item
‚‚F J
.
‚‚J K
Producto
‚‚K S
.
‚‚S T
Id
‚‚T V
&&
‚‚W Y
i
‚‚Z [
.
‚‚[ \
PrecioUnitario
‚‚\ j
==
‚‚k m
item
‚‚n r
.
‚‚r s
PrecioUnitario‚‚s Å
)‚‚Å Ç
.‚‚Ç É
Cantidad‚‚É ã
!=‚‚å é!
comprobantesVenta‚‚è †
.‚‚† °

SelectMany‚‚° ´
(‚‚´ ¨
dv‚‚¨ Æ
=>‚‚Ø ±
dv‚‚≤ ¥
.‚‚¥ µ
Orden‚‚µ ∫
.‚‚∫ ª
Detalles‚‚ª √
)‚‚√ ƒ
.‚‚ƒ ≈
Where‚‚≈  
(‚‚  À
d‚‚À Ã
=>‚‚Õ œ
d‚‚– —
.‚‚— “
Producto‚‚“ ⁄
.‚‚⁄ €
Id‚‚€ ›
==‚‚ﬁ ‡
item‚‚· Â
.‚‚Â Ê
Producto‚‚Ê Ó
.‚‚Ó Ô
Id‚‚Ô Ò
&&‚‚Ú Ù
d‚‚ı ˆ
.‚‚ˆ ˜
PrecioUnitario‚‚˜ Ö
==‚‚Ü à
item‚‚â ç
.‚‚ç é
PrecioUnitario‚‚é ú
)‚‚ú ù
.‚‚ù û
Sum‚‚û °
(‚‚° ¢
d‚‚¢ £
=>‚‚§ ¶
d‚‚ß ®
.‚‚® ©
Cantidad‚‚© ±
)‚‚± ≤
)‚‚≤ ≥
{
„„ 
throw
‰‰ 
new
‰‰ !
LogicaException
‰‰" 1
(
‰‰1 2
$str‰‰2 ò
)‰‰ò ô
;‰‰ô ö
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
detallesAtencion
ÊÊ (
.
ÊÊ( )
Single
ÊÊ) /
(
ÊÊ/ 0
i
ÊÊ0 1
=>
ÊÊ2 4
i
ÊÊ5 6
.
ÊÊ6 7
Producto
ÊÊ7 ?
.
ÊÊ? @
Id
ÊÊ@ B
==
ÊÊC E
item
ÊÊF J
.
ÊÊJ K
Producto
ÊÊK S
.
ÊÊS T
Id
ÊÊT V
&&
ÊÊW Y
i
ÊÊZ [
.
ÊÊ[ \
PrecioUnitario
ÊÊ\ j
==
ÊÊk m
item
ÊÊn r
.
ÊÊr s
PrecioUnitarioÊÊs Å
)ÊÊÅ Ç
.ÊÊÇ É
ImporteÊÊÉ ä
!=ÊÊã ç!
comprobantesVentaÊÊé ü
.ÊÊü †

SelectManyÊÊ† ™
(ÊÊ™ ´
dvÊÊ´ ≠
=>ÊÊÆ ∞
dvÊÊ± ≥
.ÊÊ≥ ¥
OrdenÊÊ¥ π
.ÊÊπ ∫
DetallesÊÊ∫ ¬
)ÊÊ¬ √
.ÊÊ√ ƒ
WhereÊÊƒ …
(ÊÊ…  
dÊÊ  À
=>ÊÊÃ Œ
dÊÊœ –
.ÊÊ– —
ProductoÊÊ— Ÿ
.ÊÊŸ ⁄
IdÊÊ⁄ ‹
==ÊÊ› ﬂ
itemÊÊ‡ ‰
.ÊÊ‰ Â
ProductoÊÊÂ Ì
.ÊÊÌ Ó
IdÊÊÓ 
&&ÊÊÒ Û
dÊÊÙ ı
.ÊÊı ˆ
PrecioUnitarioÊÊˆ Ñ
==ÊÊÖ á
itemÊÊà å
.ÊÊå ç
PrecioUnitarioÊÊç õ
)ÊÊõ ú
.ÊÊú ù
SumÊÊù †
(ÊÊ† °
dÊÊ° ¢
=>ÊÊ£ •
dÊÊ¶ ß
.ÊÊß ®
ImporteÊÊ® Ø
)ÊÊØ ∞
)ÊÊ∞ ±
{
ÁÁ 
throw
ËË 
new
ËË !
LogicaException
ËË" 1
(
ËË1 2
$strËË2 ñ
)ËËñ ó
;ËËó ò
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
e
ÏÏ 
)
ÏÏ 
{
ÌÌ 
throw
ÓÓ 
new
ÓÓ 
LogicaException
ÓÓ )
(
ÓÓ) *
$str
ÓÓ* z
,
ÓÓz {
e
ÓÓ| }
)
ÓÓ} ~
;
ÓÓ~ 
}
ÔÔ 
}
 	
private
ÚÚ 
List
ÚÚ 
<
ÚÚ  
DetalleDeOperacion
ÚÚ '
>
ÚÚ' ()
AgruparDetallesComprobantes
ÚÚ) D
(
ÚÚD E
List
ÚÚE I
<
ÚÚI J!
DatosVentaIntegrada
ÚÚJ ]
>
ÚÚ] ^#
comprobantesGenerados
ÚÚ_ t
)
ÚÚt u
{
ÛÛ 	
try
ÙÙ 
{
ıı 
var
ˆˆ 
detallesVenta
ˆˆ !
=
ˆˆ" #
new
ˆˆ$ '
List
ˆˆ( ,
<
ˆˆ, - 
DetalleDeOperacion
ˆˆ- ?
>
ˆˆ? @
(
ˆˆ@ A
)
ˆˆA B
;
ˆˆB C
var
˜˜ 
detallesAgrupados
˜˜ %
=
˜˜& '#
comprobantesGenerados
˜˜( =
.
˜˜= >
Select
˜˜> D
(
˜˜D E
c
˜˜E F
=>
˜˜G I
c
˜˜J K
.
˜˜K L
Orden
˜˜L Q
)
˜˜Q R
.
˜˜R S

SelectMany
˜˜S ]
(
˜˜] ^
o
˜˜^ _
=>
˜˜` b
o
˜˜c d
.
˜˜d e
Detalles
˜˜e m
)
˜˜m n
.
˜˜n o
GroupBy
˜˜o v
(
˜˜v w
d
˜˜w x
=>
˜˜y {
new
˜˜| 
{˜˜Ä Å
d˜˜Ç É
.˜˜É Ñ
Producto˜˜Ñ å
.˜˜å ç
Id˜˜ç è
,˜˜è ê
d˜˜ë í
.˜˜í ì
PrecioUnitario˜˜ì °
}˜˜¢ £
)˜˜£ §
;˜˜§ •
foreach
¯¯ 
(
¯¯ 
var
¯¯ 
grupo
¯¯ "
in
¯¯# %
detallesAgrupados
¯¯& 7
)
¯¯7 8
{
˘˘ 
detallesVenta
˙˙ !
.
˙˙! "
Add
˙˙" %
(
˙˙% &
new
˙˙& ) 
DetalleDeOperacion
˙˙* <
(
˙˙< =
)
˙˙= >
{
˚˚ 
Producto
¸¸  
=
¸¸! "
new
¸¸# &(
Concepto_Negocio_Comercial
¸¸' A
{
¸¸B C
Id
¸¸D F
=
¸¸G H
grupo
¸¸I N
.
¸¸N O
Key
¸¸O R
.
¸¸R S
Id
¸¸S U
}
¸¸V W
,
¸¸W X
Cantidad
˝˝  
=
˝˝! "
grupo
˝˝# (
.
˝˝( )
Sum
˝˝) ,
(
˝˝, -
g
˝˝- .
=>
˝˝/ 1
g
˝˝2 3
.
˝˝3 4
Cantidad
˝˝4 <
)
˝˝< =
,
˝˝= >
PrecioUnitario
˛˛ &
=
˛˛' (
grupo
˛˛) .
.
˛˛. /
Key
˛˛/ 2
.
˛˛2 3
PrecioUnitario
˛˛3 A
,
˛˛A B
Importe
ˇˇ 
=
ˇˇ  !
grupo
ˇˇ" '
.
ˇˇ' (
Sum
ˇˇ( +
(
ˇˇ+ ,
g
ˇˇ, -
=>
ˇˇ. 0
g
ˇˇ1 2
.
ˇˇ2 3
Importe
ˇˇ3 :
)
ˇˇ: ;
,
ˇˇ; <
MascaraDeCalculo
ÄÄ (
=
ÄÄ) *
VentasSettings
ÄÄ+ 9
.
ÄÄ9 :
Default
ÄÄ: A
.
ÄÄA B/
!MascaraDeCalculoCantidadCalculada
ÄÄB c
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
return
ÉÉ 
detallesVenta
ÉÉ $
;
ÉÉ$ %
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
ÜÜ 
throw
áá 
new
áá 
LogicaException
áá )
(
áá) *
$str
áá* ^
,
áá^ _
e
áá` a
)
ááa b
;
ááb c
}
àà 
}
ââ 	
public
ãã 
OperationResult
ãã #
ConfirmarPagoAtencion
ãã 4
(
ãã4 5
long
ãã5 9

idAtencion
ãã: D
,
ããD E
SesionRestaurante
ããF W
sesionRestaurante
ããX i
)
ããi j
{
åå 	
try
çç 
{
éé 
var
èè 
atencion
èè 
=
èè "
_atencionRepositorio
èè 3
.
èè3 4L
>ObtenerAtencionConDatosMinimosDeOrdenYDetallesSoloParaCerrarla
èè4 r
(
èèr s

idAtencion
èès }
)
èè} ~
;
èè~ 
if
êê 
(
êê 
atencion
êê 
.
êê 

Confirmado
êê '
)
êê' (
{
ëë 
throw
íí 
new
íí 
LogicaException
íí -
(
íí- .
$stríí. Ä
)ííÄ Å
;ííÅ Ç
}
ìì 
var
îî )
eventoTransaccionConfirmado
îî /
=
îî0 1
new
îî2 5 
Evento_transaccion
îî6 H
{
ïï 
id_empleado
ññ 
=
ññ  !
sesionRestaurante
ññ" 3
.
ññ3 4
SesionDeUsuario
ññ4 C
.
ññC D
Empleado
ññD L
.
ññL M
Id
ññM O
,
ññO P
id_transaccion
óó "
=
óó# $

idAtencion
óó% /
,
óó/ 0
	id_evento
òò 
=
òò 
MaestroSettings
òò  /
.
òò/ 0
Default
òò0 7
.
òò7 8.
 IdDetalleMaestroEstadoConfirmado
òò8 X
,
òòX Y
fecha
ôô 
=
ôô 
DateTimeUtil
ôô (
.
ôô( )
FechaActual
ôô) 4
(
ôô4 5
)
ôô5 6
,
ôô6 7

comentario
öö 
=
öö  
$str
öö! W
}
õõ 
;
õõ 
OperationResult
úú 
result
úú  &
=
úú' (%
_transaccionRepositorio
úú) @
.
úú@ A$
CrearEventoTransaccion
úúA W
(
úúW X)
eventoTransaccionConfirmado
úúX s
)
úús t
;
úút u
return
ùù 
result
ùù 
;
ùù 
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* V
,
°°V W
e
°°X Y
)
°°Y Z
;
°°Z [
}
¢¢ 
}
££ 	
}
§§ 
}•• «–	
PD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\SigesRestaurant\RestauranteLogica.cs
	namespace 	
Tsp
 
. 
Sigescom 
. 
Parking 
. 
Logica %
{ 
public 

partial 
class 
RestauranteLogica *
:+ ,
IRestauranteLogica- ?
{ 
private 
readonly 
IOperacionLogica )
_operacionLogica* :
;: ;
private 
readonly 
IMaestroRepositorio ,
_maestroRepositorio- @
;@ A
private 
readonly 
IActorRepositorio *
_actorRepositorio+ <
;< =
private 
readonly 
IActor_Repositorio +
_actor_Repositorio, >
;> ?
private   
readonly   $
ICentroDeAtencion_Logica   1#
_centroDeAtencionLogica  2 I
;  I J
private"" 
readonly"" #
IRestauranteRepositorio"" 0#
_restauranteRepositorio""1 H
;""H I
private## 
readonly## #
ITransaccionRepositorio## 0#
_transaccionRepositorio##1 H
;##H I
private%% 
readonly%% 
IActorNegocioLogica%% ,
_actorlogica%%- 9
;%%9 :
private'' 
readonly'' 
IMesa_Repositorio'' *
_mesaRepositorio''+ ;
;''; <
private(( 
readonly(( !
IAtencion_Repositorio(( . 
_atencionRepositorio((/ C
;((C D
private)) 
readonly)) (
IEstablecimiento_Repositorio)) 5'
_establecimientoRepositorio))6 Q
;))Q R
public.. 
RestauranteLogica..  
(..  ! 
IConceptoRepositorio..! 5
conceptoRepositorio..6 I
,..I J#
ITransaccionRepositorio..K b"
transaccionRepositorio..c y
,..y z 
IMaestroRepositorio	..{ é 
maestroRepositorio
..è °
,
..° ¢
IActorRepositorio
..£ ¥
actorRepositorio
..µ ≈
,
..≈ ∆%
IRestauranteRepositorio
..« ﬁ$
restauranteRepositorio
..ﬂ ı
,
..ı ˆ 
IPrecioRepositorio
..˜ â
precioRepositorio
..ä õ
,
..õ ú%
IFacturacionRepositorio
..ù ¥$
facturacionRepositorio
..µ À
,
..À Ã!
IActorNegocioLogica
..Õ ‡
actorlogica
..· Ï
,
..Ï Ì&
ICodigosOperacion_Logica
..Ó Ü$
codigosOperacionLogica
..á ù
,
..ù û
IPermisos_Logica
..ü Ø
permisosLogica
..∞ æ
,
..æ ø
IMesa_Repositorio
..¿ —
mesaRepositorio
..“ ·
,
..· ‚#
IAtencion_Repositorio
..„ ¯!
atencionRepositorio
..˘ å
,
..å ç 
IActor_Repositorio
..é †
actor_Repositorio
..° ≤
,
..≤ ≥&
ICentroDeAtencion_Logica
..¥ Ã$
centroDeAtencionLogica
..Õ „
,
..„ ‰*
IEstablecimiento_Repositorio
..Â Å(
establecimientoRepositorio
..Ç ú
)
..ú ù
{// 	#
_transaccionRepositorio00 #
=00$ %"
transaccionRepositorio00& <
;00< =
_maestroRepositorio11 
=11  !
maestroRepositorio11" 4
;114 5
_actorRepositorio22 
=22 
actorRepositorio22  0
;220 1#
_restauranteRepositorio33 #
=33$ %"
restauranteRepositorio33& <
;33< =
_mesaRepositorio44 
=44 
mesaRepositorio44 .
;44. / 
_atencionRepositorio55  
=55! "
atencionRepositorio55# 6
;556 7
_operacionLogica66 
=66 
new66 "
OperacionLogica66# 2
(662 3#
_transaccionRepositorio663 J
,66J K
_maestroRepositorio66L _
,66_ `
_actorRepositorio66a r
,66r s
null66t x
,66x y#
facturacionRepositorio	66z ê
,
66ê ë$
codigosOperacionLogica
66í ®
,
66® ©
permisosLogica
66™ ∏
,
66∏ π
null
66∫ æ
,
66æ ø
actor_Repositorio
66¿ —
,
66— “
null
66” ◊
,
66◊ ÿ
null
66Ÿ ›
)
66› ﬁ
;
66ﬁ ﬂ
_actorlogica77 
=77 
actorlogica77 &
;77& '
_actor_Repositorio88 
=88  
actor_Repositorio88! 2
;882 3#
_centroDeAtencionLogica99 #
=99$ %"
centroDeAtencionLogica99& <
;99< ='
_establecimientoRepositorio:: '
=::( )&
establecimientoRepositorio::* D
;::D E
}<< 	
public== 
AtencionRestaurante== "!
ObtenerAtencionDeMesa==# 8
(==8 9
int==9 <
idMesa=== C
)==C D
{>> 	
try?? 
{@@ 
AtencionRestauranteAA #
atencionAA$ ,
;AA, -
MesaBB 
mesaBB 
=BB 
newBB 
MesaBB  $
(BB$ %
_mesaRepositorioBB% 5
.BB5 6
ObtenerMesaBB6 A
(BBA B
idMesaBBB H
)BBH I
)BBI J
;BBJ K
ifCC 
(CC 
mesaCC 
.CC 
EstadoOcupadoCC &
)CC& '
{DD 
atencionEE 
=EE  
_atencionRepositorioEE 3
.EE3 4(
ObtenerAtencionDeMesaOcupadaEE4 P
(EEP Q
idMesaEEQ W
)EEW X
;EEX Y
}FF 
elseGG 
{HH 
atencionII 
=II 
newII "
AtencionRestauranteII# 6
(II6 7
mesaII7 ;
)II; <
;II< =
}JJ 
returnKK 
atencionKK 
;KK  
}LL 
catchMM 
(MM 
	ExceptionMM 
eMM 
)MM 
{NN 
throwOO 
newOO 
LogicaExceptionOO )
(OO) *
$strOO* M
,OOM N
eOOO P
)OOP Q
;OOQ R
}PP 
}QQ 	
publicRR 
asyncRR 
TaskRR 
<RR 
ListRR 
<RR 
ItemJerarquicoRR -
>RR- .
>RR. /
ObtenerCategoriasRR0 A
(RRA B
)RRB C
{SS 	
tryTT 
{UU 
returnVV 
(VV 
awaitVV 
_maestroRepositorioVV 1
.VV1 2&
ObtenerDetallesJerarquicosVV2 L
(VVL M
MaestroSettingsVVM \
.VV\ ]
DefaultVV] d
.VVd e&
IdMaestroCategoriaConceptoVVe 
)	VV Ä
)
VVÄ Å
.
VVÅ Ç
ToList
VVÇ à
(
VVà â
)
VVâ ä
;
VVä ã
}WW 
catchXX 
(XX 
	ExceptionXX 
eXX 
)XX 
{YY 
throwZZ 
newZZ 
LogicaExceptionZZ )
(ZZ) *
$strZZ* P
,ZZP Q
eZZR S
)ZZS T
;ZZT U
}[[ 
}\\ 	
public^^ 
List^^ 
<^^ 
ItemJerarquico^^ "
>^^" #(
ObtenerCategoriasRestaurante^^$ @
(^^@ A
)^^A B
{__ 	
try`` 
{aa 
varbb 

categoriasbb 
=bb  
_maestroRepositoriobb! 4
.bb4 5;
/ObtenerDetallesJerarquicosPorRolConceptoNegociobb5 d
(bbd e
RestauranteSettingsbbe x
.bbx y
Default	bby Ä
.
bbÄ Å&
IdRolConceptoRestaurante
bbÅ ô
)
bbô ö
.
bbö õ
ToList
bbõ °
(
bb° ¢
)
bb¢ £
;
bb£ §
returncc 

categoriascc !
;cc! "
}dd 
catchee 
(ee 
	Exceptionee 
eee 
)ee 
{ff 
throwgg 
newgg 
LogicaExceptiongg )
(gg) *
$strgg* _
,gg_ `
egga b
)ggb c
;ggc d
}hh 
}ii 	
publickk 
asynckk 
Taskkk 
<kk 
Listkk 
<kk 
Mesakk #
>kk# $
>kk$ %"
ObtenerMesasDeAmbientekk& <
(kk< =
intkk= @

idAmbientekkA K
)kkK L
{ll 	
trymm 
{nn 
Listoo 
<oo 
Actor_negociooo "
>oo" #
actoresDeNegociooo$ 4
=oo5 6
(oo7 8
awaitoo8 =
_actorRepositoriooo> O
.ooO PB
5ObtenerActoresDeNegocioVigentesPorIdActorNegocioPadre	ooP Ö
(
ooÖ Ü

idAmbiente
ooÜ ê
)
ooê ë
)
ooë í
.
ooí ì
ToList
ooì ô
(
ooô ö
)
ooö õ
;
ooõ ú
Listpp 
<pp 
Mesapp 
>pp 
mesaspp  
=pp! "
Mesapp# '
.pp' (
Convertpp( /
(pp/ 0
actoresDeNegociopp0 @
)pp@ A
;ppA B
returnqq 
mesasqq 
;qq 
}rr 
catchss 
(ss 
	Exceptionss 
ess 
)ss 
{tt 
throwuu 
newuu 
LogicaExceptionuu )
(uu) *
$struu* W
,uuW X
euuY Z
)uuZ [
;uu[ \
}vv 
}ww 	
publicxx 
asyncxx 
Taskxx 
<xx 
Listxx 
<xx 
Ambientexx '
>xx' (
>xx( )
ObtenerAmbientesxx* :
(xx: ;
)xx; <
{yy 	
tryzz 
{{{ 
List|| 
<|| 
Actor_negocio|| "
>||" #
actoresDeNegocio||$ 4
=||5 6
(||7 8
await||8 =
_actorRepositorio||> O
.||O P1
%ObtenerActoresDeNegocioPorRolVigentes||P u
(||u v 
RestauranteSettings	||v â
.
||â ä
Default
||ä ë
.
||ë í
IdRolAmbiente
||í ü
)
||ü †
)
||† °
.
||° ¢
ToList
||¢ ®
(
||® ©
)
||© ™
;
||™ ´
List}} 
<}} 
Ambiente}} 
>}} 
	ambientes}} (
=}}) *
Ambiente}}+ 3
.}}3 4
Convert}}4 ;
(}}; <
actoresDeNegocio}}< L
)}}L M
;}}M N
return 
	ambientes  
;  !
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
e
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
LogicaException
ÉÉ )
(
ÉÉ) *
$str
ÉÉ* O
,
ÉÉO P
e
ÉÉQ R
)
ÉÉR S
;
ÉÉS T
}
ÑÑ 
}
ÖÖ 	
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
List
ÜÜ 
<
ÜÜ 
Ambiente
ÜÜ '
>
ÜÜ' (
>
ÜÜ( )
ObtenerAmbientes
ÜÜ* :
(
ÜÜ: ;
int
ÜÜ; >
IdEstablecimiento
ÜÜ? P
)
ÜÜP Q
{
áá 	
try
àà 
{
ââ 
List
ää 
<
ää 
Actor_negocio
ää "
>
ää" #
actoresDeNegocio
ää$ 4
=
ää5 6
(
ää7 8
await
ää8 =
_actorRepositorio
ää> O
.
ääO P3
%ObtenerActoresDeNegocioPorRolVigentes
ääP u
(
ääu v"
RestauranteSettingsääv â
.ääâ ä
Defaultäää ë
.ääë í
IdRolAmbienteääí ü
,ääü †!
IdEstablecimientoää° ≤
)ää≤ ≥
)ää≥ ¥
.ää¥ µ
ToListääµ ª
(ääª º
)ääº Ω
;ääΩ æ
List
ãã 
<
ãã 
Ambiente
ãã 
>
ãã 
	ambientes
ãã (
=
ãã) *
Ambiente
ãã+ 3
.
ãã3 4
Convert
ãã4 ;
(
ãã; <
actoresDeNegocio
ãã< L
)
ããL M
;
ããM N
return
çç 
	ambientes
çç  
;
çç  !
}
éé 
catch
èè 
(
èè 
	Exception
èè 
e
èè 
)
èè 
{
êê 
throw
ëë 
new
ëë 
LogicaException
ëë )
(
ëë) *
$str
ëë* O
,
ëëO P
e
ëëQ R
)
ëëR S
;
ëëS T
}
íí 
}
ìì 	
public
ïï 
List
ïï 
<
ïï '
CentroAtencionRestaurante
ïï -
>
ïï- .7
)ObtenerPuntoDeVeliveryPuntoAlPasoVigentes
ïï/ X
(
ïïX Y
int
ïïY \
IdEstablecimiento
ïï] n
)
ïïn o
{
ññ 	
List
óó 
<
óó '
CentroAtencionRestaurante
óó *
>
óó* +(
centrosAtencionRestaurante
óó, F
=
óóG H
new
óóI L
List
óóM Q
<
óóQ R'
CentroAtencionRestaurante
óóR k
>
óók l
(
óól m
)
óóm n
;
óón o
List
òò 
<
òò 
int
òò 
>
òò 
idRoles
òò 
=
òò 
new
òò  #
List
òò$ (
<
òò( )
int
òò) ,
>
òò, -
(
òò- .
)
òò. /
;
òò/ 0
if
ôô 
(
ôô !
RestauranteSettings
ôô #
.
ôô# $
Default
ôô$ +
.
ôô+ ,&
PermitirVentaPorDelivery
ôô, D
)
ôôD E
idRoles
ôôF M
.
ôôM N
Add
ôôN Q
(
ôôQ R
ActorSettings
ôôR _
.
ôô_ `
Default
ôô` g
.
ôôg h 
IdRolPuntoDelivery
ôôh z
)
ôôz {
;
ôô{ |
if
öö 
(
öö !
RestauranteSettings
öö #
.
öö# $
Default
öö$ +
.
öö+ ,!
PermitirVentaAlPaso
öö, ?
)
öö? @
idRoles
ööA H
.
ööH I
Add
ööI L
(
ööL M
ActorSettings
ööM Z
.
ööZ [
Default
öö[ b
.
ööb c
IdRolPuntoAlPaso
ööc s
)
öös t
;
ööt u
var
õõ 
centrosAtencion
õõ 
=
õõ  !%
_centroDeAtencionLogica
õõ" 9
.
õõ9 :I
;ObtenerCentrosDeAtencionVigentesPorEstablecimientoComercial
õõ: u
(
õõu v 
IdEstablecimientoõõv á
)õõá à
.õõà â
ToListõõâ è
(õõè ê
)õõê ë
;õõë í
centrosAtencion
úú 
=
úú 
centrosAtencion
úú -
.
úú- .
Where
úú. 3
(
úú3 4
c
úú4 5
=>
úú6 8
c
úú9 :
.
úú: ; 
RolesHijosVigentes
úú; M
.
úúM N
Select
úúN T
(
úúT U
r
úúU V
=>
úúW Y
r
úúZ [
.
úú[ \
Id
úú\ ^
)
úú^ _
.
úú_ `
Any
úú` c
(
úúc d
i
úúd e
=>
úúf h
idRoles
úúi p
.
úúp q
Contains
úúq y
(
úúy z
i
úúz {
)
úú{ |
)
úú| }
)
úú} ~
.
úú~ 
ToListúú Ö
(úúÖ Ü
)úúÜ á
;úúá à
foreach
ùù 
(
ùù 
var
ùù 
centroAtencion
ùù '
in
ùù( *
centrosAtencion
ùù+ :
)
ùù: ;
{
ûû (
centrosAtencionRestaurante
üü *
.
üü* +
Add
üü+ .
(
üü. /
new
üü/ 2'
CentroAtencionRestaurante
üü3 L
{
†† 
Id
°° 
=
°° 
centroAtencion
°° '
.
°°' (
Id
°°( *
,
°°* +
Nombre
¢¢ 
=
¢¢ 
centroAtencion
¢¢ +
.
¢¢+ ,
Nombre
¢¢, 2
,
¢¢2 3
EsPuntoDelivery
££ #
=
££$ %!
RestauranteSettings
££& 9
.
££9 :
Default
££: A
.
££A B&
PermitirVentaPorDelivery
££B Z
?
££[ \
centroAtencion
££] k
.
££k l 
RolesHijosVigentes
££l ~
.
££~ 
SingleOrDefault££ é
(££é è
r££è ê
=>££ë ì
r££î ï
.££ï ñ
Id££ñ ò
==££ô õ
ActorSettings££ú ©
.££© ™
Default££™ ±
.££± ≤"
IdRolPuntoDelivery££≤ ƒ
)££ƒ ≈
!=££∆ »
null££… Õ
:££Œ œ
false££– ’
,££’ ÷
EsPuntoAlPaso
§§ !
=
§§" #!
RestauranteSettings
§§$ 7
.
§§7 8
Default
§§8 ?
.
§§? @!
PermitirVentaAlPaso
§§@ S
?
§§T U
centroAtencion
§§V d
.
§§d e 
RolesHijosVigentes
§§e w
.
§§w x
SingleOrDefault§§x á
(§§á à
r§§à â
=>§§ä å
r§§ç é
.§§é è
Id§§è ë
==§§í î
ActorSettings§§ï ¢
.§§¢ £
Default§§£ ™
.§§™ ´ 
IdRolPuntoAlPaso§§´ ª
)§§ª º
!=§§Ω ø
null§§¿ ƒ
:§§≈ ∆
false§§« Ã
,§§Ã Õ
}
•• 
)
•• 
;
•• 
}
¶¶ 
return
ßß (
centrosAtencionRestaurante
ßß -
;
ßß- .
}
®® 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
List
™™ 
<
™™ 
ItemGenerico
™™ +
>
™™+ ,
>
™™, -"
ObtenerMozosVigentes
™™. B
(
™™B C
)
™™C D
{
´´ 	
try
¨¨ 
{
≠≠ 
var
ÆÆ 
mozos
ÆÆ 
=
ÆÆ 
(
ÆÆ 
await
ÆÆ "
_actorRepositorio
ÆÆ# 4
.
ÆÆ4 5J
<ObtenerActoresDeNegocioPrincipalesVigentesComoItemsGenericos
ÆÆ5 q
(
ÆÆq r
ActorSettings
ÆÆr 
.ÆÆ Ä
DefaultÆÆÄ á
.ÆÆá à
IdRolEmpleadoÆÆà ï
,ÆÆï ñ#
RestauranteSettingsÆÆó ™
.ÆÆ™ ´
DefaultÆÆ´ ≤
.ÆÆ≤ ≥
	IdRolMozoÆÆ≥ º
)ÆÆº Ω
)ÆÆΩ æ
.ÆÆæ ø
ToListÆÆø ≈
(ÆÆ≈ ∆
)ÆÆ∆ «
;ÆÆ« »
mozos
ØØ 
.
ØØ 
ForEach
ØØ 
(
ØØ 
m
ØØ 
=>
ØØ  "
{
ØØ# $
var
ØØ% (
nombreArray
ØØ) 4
=
ØØ5 6
m
ØØ7 8
.
ØØ8 9
Nombre
ØØ9 ?
.
ØØ? @
Split
ØØ@ E
(
ØØE F
$char
ØØF I
)
ØØI J
;
ØØJ K
m
ØØL M
.
ØØM N
Nombre
ØØN T
=
ØØU V
nombreArray
ØØW b
[
ØØb c
$num
ØØc d
]
ØØd e
+
ØØf g
$str
ØØh k
+
ØØl m
nombreArray
ØØn y
[
ØØy z
$num
ØØz {
]
ØØ{ |
+
ØØ} ~
$strØØ Ç
+ØØÉ Ñ
nombreArrayØØÖ ê
[ØØê ë
$numØØë í
]ØØí ì
;ØØì î
}ØØï ñ
)ØØñ ó
;ØØó ò
return
∞∞ 
mozos
∞∞ 
;
∞∞ 
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
e
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ 
LogicaException
¥¥ )
(
¥¥) *
$str
¥¥* O
,
¥¥O P
e
¥¥Q R
)
¥¥R S
;
¥¥S T
}
µµ 
}
∂∂ 	
public
∏∏ 
OperationResult
∏∏ #
AtenderDetalleDeOrden
∏∏ 4
(
∏∏4 5
int
∏∏5 8
idDetalleDeOrden
∏∏9 I
)
∏∏I J
{
ππ 	
Orden_Atencion
∫∫ 
ordenAtencion
∫∫ (
=
∫∫) *%
_restauranteRepositorio
∫∫+ B
.
∫∫B C2
$ObtenerOrdenDeAtencionDeDetalleOrden
∫∫C g
(
∫∫g h
idDetalleDeOrden
∫∫h x
)
∫∫x y
;
∫∫y z
if
ªª 
(
ªª 
ordenAtencion
ªª 
.
ªª 
Estado
ªª $
!=
ªª% '
MaestroSettings
ªª( 7
.
ªª7 8
Default
ªª8 ?
.
ªª? @.
 IdDetalleMaestroEstadoConfirmado
ªª@ `
)
ªª` a
{
ºº 
throw
ΩΩ 
new
ΩΩ 
LogicaException
ΩΩ )
(
ΩΩ) *
$str
ΩΩ* x
)
ΩΩx y
;
ΩΩy z
}
ææ 
OperationResult
øø 
result
øø "
=
øø# $%
_restauranteRepositorio
øø% <
.
øø< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
øø= |
(
øø| }
idDetalleDeOrdenøø} ç
,øøç é&
EstadoDeDetalleDeOrdenøøè •
.øø• ¶
Atendidoøø¶ Æ
)øøÆ Ø
;øøØ ∞
return
¿¿ 
result
¿¿ 
;
¿¿ 
}
¡¡ 	
public
√√ 
OperationResult
√√ $
ObservarDetalleDeOrden
√√ 5
(
√√5 6
int
√√6 9
idDetalleDeOrden
√√: J
)
√√J K
{
ƒƒ 	
Orden_Atencion
≈≈ 
ordenAtencion
≈≈ (
=
≈≈) *%
_restauranteRepositorio
≈≈+ B
.
≈≈B C2
$ObtenerOrdenDeAtencionDeDetalleOrden
≈≈C g
(
≈≈g h
idDetalleDeOrden
≈≈h x
)
≈≈x y
;
≈≈y z
if
∆∆ 
(
∆∆ 
ordenAtencion
∆∆ 
.
∆∆ 
Estado
∆∆ $
!=
∆∆% '
MaestroSettings
∆∆( 7
.
∆∆7 8
Default
∆∆8 ?
.
∆∆? @.
 IdDetalleMaestroEstadoConfirmado
∆∆@ `
)
∆∆` a
{
«« 
throw
»» 
new
»» 
LogicaException
»» )
(
»») *
$str
»»* x
)
»»x y
;
»»y z
}
…… 
OperationResult
   
result
   "
=
  # $%
_restauranteRepositorio
  % <
.
  < =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
  = |
(
  | }
idDetalleDeOrden  } ç
,  ç é&
EstadoDeDetalleDeOrden  è •
.  • ¶
	Observado  ¶ Ø
)  Ø ∞
;  ∞ ±
return
ÀÀ 
result
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
OperationResult
ŒŒ $
DevolverDetalleDeOrden
ŒŒ 5
(
ŒŒ5 6
int
ŒŒ6 9
idDetalleDeOrden
ŒŒ: J
)
ŒŒJ K
{
œœ 	
Orden_Atencion
–– 
ordenAtencion
–– (
=
––) *%
_restauranteRepositorio
––+ B
.
––B C2
$ObtenerOrdenDeAtencionDeDetalleOrden
––C g
(
––g h
idDetalleDeOrden
––h x
)
––x y
;
––y z
if
—— 
(
—— 
ordenAtencion
—— 
.
—— 
Estado
—— $
!=
——% '
MaestroSettings
——( 7
.
——7 8
Default
——8 ?
.
——? @.
 IdDetalleMaestroEstadoConfirmado
——@ `
)
——` a
{
““ 
throw
”” 
new
”” 
LogicaException
”” )
(
””) *
$str
””* x
)
””x y
;
””y z
}
‘‘ 
OperationResult
’’ 
result
’’ "
=
’’# $%
_restauranteRepositorio
’’% <
.
’’< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
’’= |
(
’’| }
idDetalleDeOrden’’} ç
,’’ç é&
EstadoDeDetalleDeOrden’’è •
.’’• ¶
Devuelto’’¶ Æ
)’’Æ Ø
;’’Ø ∞
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 	
public
ŸŸ 
OperationResult
ŸŸ "
AnularDetalleDeOrden
ŸŸ 3
(
ŸŸ3 4
int
ŸŸ4 7
idDetalleDeOrden
ŸŸ8 H
)
ŸŸH I
{
⁄⁄ 	
Orden_Atencion
€€ 
ordenAtencion
€€ (
=
€€) *%
_restauranteRepositorio
€€+ B
.
€€B C2
$ObtenerOrdenDeAtencionDeDetalleOrden
€€C g
(
€€g h
idDetalleDeOrden
€€h x
)
€€x y
;
€€y z
if
‹‹ 
(
‹‹ 
ordenAtencion
‹‹ 
.
‹‹ 
Estado
‹‹ $
!=
‹‹% '
MaestroSettings
‹‹( 7
.
‹‹7 8
Default
‹‹8 ?
.
‹‹? @.
 IdDetalleMaestroEstadoConfirmado
‹‹@ `
)
‹‹` a
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
LogicaException
ﬁﬁ )
(
ﬁﬁ) *
$str
ﬁﬁ* x
)
ﬁﬁx y
;
ﬁﬁy z
}
ﬂﬂ 
OperationResult
‡‡ 
result
‡‡ "
=
‡‡# $%
_restauranteRepositorio
‡‡% <
.
‡‡< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
‡‡= |
(
‡‡| }
idDetalleDeOrden‡‡} ç
,‡‡ç é&
EstadoDeDetalleDeOrden‡‡è •
.‡‡• ¶
Anulado‡‡¶ ≠
)‡‡≠ Æ
;‡‡Æ Ø
return
·· 
result
·· 
;
·· 
}
‚‚ 	
public
‰‰ 
OperationResult
‰‰ $
ReanudarDetalleDeOrden
‰‰ 5
(
‰‰5 6
int
‰‰6 9
idDetalleDeOrden
‰‰: J
)
‰‰J K
{
ÂÂ 	
Orden_Atencion
ÊÊ 
ordenAtencion
ÊÊ (
=
ÊÊ) *%
_restauranteRepositorio
ÊÊ+ B
.
ÊÊB C2
$ObtenerOrdenDeAtencionDeDetalleOrden
ÊÊC g
(
ÊÊg h
idDetalleDeOrden
ÊÊh x
)
ÊÊx y
;
ÊÊy z
if
ÁÁ 
(
ÁÁ 
ordenAtencion
ÁÁ 
.
ÁÁ 
Estado
ÁÁ $
!=
ÁÁ% '
MaestroSettings
ÁÁ( 7
.
ÁÁ7 8
Default
ÁÁ8 ?
.
ÁÁ? @.
 IdDetalleMaestroEstadoConfirmado
ÁÁ@ `
)
ÁÁ` a
{
ËË 
throw
ÈÈ 
new
ÈÈ 
LogicaException
ÈÈ )
(
ÈÈ) *
$str
ÈÈ* x
)
ÈÈx y
;
ÈÈy z
}
ÍÍ 
OperationResult
ÎÎ 
result
ÎÎ "
=
ÎÎ# $%
_restauranteRepositorio
ÎÎ% <
.
ÎÎ< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
ÎÎ= |
(
ÎÎ| }
idDetalleDeOrdenÎÎ} ç
,ÎÎç é&
EstadoDeDetalleDeOrdenÎÎè •
.ÎÎ• ¶

RegistradoÎÎ¶ ∞
)ÎÎ∞ ±
;ÎÎ± ≤
return
ÏÏ 
result
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
OperationResult
ÔÔ $
PrepararDetalleDeOrden
ÔÔ 5
(
ÔÔ5 6
int
ÔÔ6 9
idDetalleDeOrden
ÔÔ: J
)
ÔÔJ K
{
 	
OperationResult
ÒÒ 
result
ÒÒ "
=
ÒÒ# $%
_restauranteRepositorio
ÒÒ% <
.
ÒÒ< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
ÒÒ= |
(
ÒÒ| }
idDetalleDeOrdenÒÒ} ç
,ÒÒç é&
EstadoDeDetalleDeOrdenÒÒè •
.ÒÒ• ¶
PreparacionÒÒ¶ ±
)ÒÒ± ≤
;ÒÒ≤ ≥
return
ÚÚ 
result
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
public
ÙÙ 
OperationResult
ÙÙ "
ServirDetalleDeOrden
ÙÙ 3
(
ÙÙ3 4
int
ÙÙ4 7
idDetalleDeOrden
ÙÙ8 H
)
ÙÙH I
{
ıı 	
OperationResult
ˆˆ 
result
ˆˆ "
=
ˆˆ# $%
_restauranteRepositorio
ˆˆ% <
.
ˆˆ< =M
?ActualizarEstadoDeDetalleDeOrden_CalcularOrden_CalcularAtencion
ˆˆ= |
(
ˆˆ| }
idDetalleDeOrdenˆˆ} ç
,ˆˆç é&
EstadoDeDetalleDeOrdenˆˆè •
.ˆˆ• ¶
Servidoˆˆ¶ ≠
)ˆˆ≠ Æ
;ˆˆÆ Ø
return
˜˜ 
result
˜˜ 
;
˜˜ 
}
¯¯ 	
public
˙˙ 
OperationResult
˙˙ -
ReanudarTodosLosDetallesDeOrden
˙˙ >
(
˙˙> ?
long
˙˙? C
idOrden
˙˙D K
)
˙˙K L
{
˚˚ 	
try
¸¸ 
{
˝˝ 
Orden_Atencion
˛˛ 
ordenAtencion
˛˛ ,
=
˛˛- .%
_restauranteRepositorio
˛˛/ F
.
˛˛F G$
ObtenerOrdenDeAtencion
˛˛G ]
(
˛˛] ^
idOrden
˛˛^ e
)
˛˛e f
;
˛˛f g
if
ˇˇ 
(
ˇˇ 
ordenAtencion
ˇˇ !
.
ˇˇ! "
Estado
ˇˇ" (
!=
ˇˇ) +
MaestroSettings
ˇˇ, ;
.
ˇˇ; <
Default
ˇˇ< C
.
ˇˇC D.
 IdDetalleMaestroEstadoConfirmado
ˇˇD d
)
ˇˇd e
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
LogicaException
ÅÅ -
(
ÅÅ- .
$str
ÅÅ. |
)
ÅÅ| }
;
ÅÅ} ~
}
ÇÇ 
OperationResult
ÉÉ 
result
ÉÉ  &
=
ÉÉ' (%
_restauranteRepositorio
ÉÉ) @
.
ÉÉ@ AP
AActualizarEstadosDeDetallesDeOrden_CalcularOrden_CalcularAtencionÉÉA Ç
(ÉÉÇ É
idOrdenÉÉÉ ä
,ÉÉä ã&
EstadoDeDetalleDeOrdenÉÉå ¢
.ÉÉ¢ £

RegistradoÉÉ£ ≠
)ÉÉ≠ Æ
;ÉÉÆ Ø
return
ÑÑ 
result
ÑÑ 
;
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
e
ÜÜ 
)
ÜÜ 
{
áá 
throw
àà 
new
àà 
LogicaException
àà )
(
àà) *
$str
àà* e
,
ààe f
e
ààg h
)
ààh i
;
àài j
}
ââ 
}
ää 	
public
ãã 
OperationResult
ãã +
AnularTodosLosDetallesDeOrden
ãã <
(
ãã< =
long
ãã= A
idOrden
ããB I
)
ããI J
{
åå 	
try
çç 
{
éé 
Orden_Atencion
èè 
ordenAtencion
èè ,
=
èè- .%
_restauranteRepositorio
èè/ F
.
èèF G$
ObtenerOrdenDeAtencion
èèG ]
(
èè] ^
idOrden
èè^ e
)
èèe f
;
èèf g
if
êê 
(
êê 
ordenAtencion
êê !
.
êê! "
Estado
êê" (
!=
êê) +
MaestroSettings
êê, ;
.
êê; <
Default
êê< C
.
êêC D.
 IdDetalleMaestroEstadoConfirmado
êêD d
)
êêd e
{
ëë 
throw
íí 
new
íí 
LogicaException
íí -
(
íí- .
$str
íí. |
)
íí| }
;
íí} ~
}
ìì 
OperationResult
îî 
result
îî  &
=
îî' (%
_restauranteRepositorio
îî) @
.
îî@ AP
AActualizarEstadosDeDetallesDeOrden_CalcularOrden_CalcularAtencionîîA Ç
(îîÇ É
idOrdenîîÉ ä
,îîä ã&
EstadoDeDetalleDeOrdenîîå ¢
.îî¢ £
Anuladoîî£ ™
)îî™ ´
;îî´ ¨
return
ïï 
result
ïï 
;
ïï 
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
e
óó 
)
óó 
{
òò 
throw
ôô 
new
ôô 
LogicaException
ôô )
(
ôô) *
$str
ôô* c
,
ôôc d
e
ôôe f
)
ôôf g
;
ôôg h
}
öö 
}
õõ 	
public
ùù 
OperationResult
ùù ,
AtenderTodosLosDetallesDeOrden
ùù =
(
ùù= >
long
ùù> B
idOrden
ùùC J
)
ùùJ K
{
ûû 	
try
üü 
{
†† 
Orden_Atencion
°° 
ordenAtencion
°° ,
=
°°- .%
_restauranteRepositorio
°°/ F
.
°°F G$
ObtenerOrdenDeAtencion
°°G ]
(
°°] ^
idOrden
°°^ e
)
°°e f
;
°°f g
if
¢¢ 
(
¢¢ 
ordenAtencion
¢¢ !
.
¢¢! "
Estado
¢¢" (
!=
¢¢) +
MaestroSettings
¢¢, ;
.
¢¢; <
Default
¢¢< C
.
¢¢C D.
 IdDetalleMaestroEstadoConfirmado
¢¢D d
)
¢¢d e
{
££ 
throw
§§ 
new
§§ 
LogicaException
§§ -
(
§§- .
$str
§§. |
)
§§| }
;
§§} ~
}
•• 
OperationResult
¶¶ 
result
¶¶  &
=
¶¶' (%
_restauranteRepositorio
¶¶) @
.
¶¶@ AP
AActualizarEstadosDeDetallesDeOrden_CalcularOrden_CalcularAtencion¶¶A Ç
(¶¶Ç É
idOrden¶¶É ä
,¶¶ä ã&
EstadoDeDetalleDeOrden¶¶å ¢
.¶¶¢ £
Atendido¶¶£ ´
)¶¶´ ¨
;¶¶¨ ≠
return
ßß 
result
ßß 
;
ßß 
}
®® 
catch
©© 
(
©© 
	Exception
©© 
e
©© 
)
©© 
{
™™ 
throw
´´ 
new
´´ 
LogicaException
´´ )
(
´´) *
$str
´´* d
,
´´d e
e
´´f g
)
´´g h
;
´´h i
}
¨¨ 
}
≠≠ 	
public
ØØ 
OperationResult
ØØ '
PrepararDetallesDeOrdenes
ØØ 8
(
ØØ8 9
long
ØØ9 =
[
ØØ= >
]
ØØ> ?"
idsDetallesDeOrdenes
ØØ@ T
)
ØØT U
{
∞∞ 	
OperationResult
±± 
result
±± "
=
±±# $%
_restauranteRepositorio
±±% <
.
±±< =2
$ActualizarEstadosDeDetallesDeOrdenes
±±= a
(
±±a b"
idsDetallesDeOrdenes
±±b v
,
±±v w%
EstadoDeDetalleDeOrden±±x é
.±±é è
Preparacion±±è ö
)±±ö õ
;±±õ ú
return
≤≤ 
result
≤≤ 
;
≤≤ 
}
≥≥ 	
public
¥¥ 
OperationResult
¥¥ %
ServirDetallesDeOrdenes
¥¥ 6
(
¥¥6 7
long
¥¥7 ;
[
¥¥; <
]
¥¥< ="
idsDetallesDeOrdenes
¥¥> R
)
¥¥R S
{
µµ 	
OperationResult
∂∂ 
result
∂∂ "
=
∂∂# $%
_restauranteRepositorio
∂∂% <
.
∂∂< =2
$ActualizarEstadosDeDetallesDeOrdenes
∂∂= a
(
∂∂a b"
idsDetallesDeOrdenes
∂∂b v
,
∂∂v w%
EstadoDeDetalleDeOrden∂∂x é
.∂∂é è
Servido∂∂è ñ
)∂∂ñ ó
;∂∂ó ò
return
∑∑ 
result
∑∑ 
;
∑∑ 
}
∏∏ 	
public
∫∫ 
OperationResult
∫∫ %
FinalizarAtencionCocina
∫∫ 6
(
∫∫6 7
long
∫∫7 ;

idAtencion
∫∫< F
)
∫∫F G
{
ªª 	
Transaccion
ºº 
dbtransaccion
ºº %
=
ºº& '%
_transaccionRepositorio
ºº( ?
.
ºº? @ 
ObtenerTransaccion
ºº@ R
(
ººR S

idAtencion
ººS ]
)
ºº] ^
;
ºº^ _
dbtransaccion
ΩΩ 
.
ΩΩ 
id_estado_actual
ΩΩ *
=
ΩΩ+ ,
MaestroSettings
ΩΩ- <
.
ΩΩ< =
Default
ΩΩ= D
.
ΩΩD E,
IdDetalleMaestroEstadoCanjeado
ΩΩE c
;
ΩΩc d
OperationResult
ææ 
result
ææ "
=
ææ# $%
_transaccionRepositorio
ææ% <
.
ææ< =#
ActualizarTransaccion
ææ= R
(
ææR S
dbtransaccion
ææS `
)
ææ` a
;
ææa b
return
øø 
result
øø 
;
øø 
}
¿¿ 	
public
ƒƒ 
List
ƒƒ 
<
ƒƒ !
AtencionRestaurante
ƒƒ '
>
ƒƒ' (*
ObtenerAtencionesConfirmadas
ƒƒ) E
(
ƒƒE F
)
ƒƒF G
{
≈≈ 	
var
««  
estadoRegistradoId
«« "
=
««# $
MaestroSettings
««% 4
.
««4 5
Default
««5 <
.
««< =.
 IdDetalleMaestroEstadoRegistrado
««= ]
;
««] ^
List
»» 
<
»» !
AtencionRestaurante
»» $
>
»»$ %

atenciones
»»& 0
=
»»1 2%
_restauranteRepositorio
»»3 J
.
»»J K(
ObtenerAtencionesPorEstado
»»K e
(
»»e f 
estadoRegistradoId
»»f x
)
»»x y
.
»»y z
ToList»»z Ä
(»»Ä Å
)»»Å Ç
;»»Ç É
return
…… 

atenciones
…… 
;
…… 
}
   	
public
ÃÃ 
List
ÃÃ 
<
ÃÃ 
AtencionSinMesa
ÃÃ #
>
ÃÃ# $&
ObtenerAtencionesSinMesa
ÃÃ% =
(
ÃÃ= >
int
ÃÃ> A
idCentroAtencion
ÃÃB R
)
ÃÃR S
{
ÕÕ 	
var
ŒŒ 

idsEstados
ŒŒ 
=
ŒŒ 
new
ŒŒ  
int
ŒŒ! $
[
ŒŒ$ %
]
ŒŒ% &
{
ŒŒ' (
MaestroSettings
ŒŒ) 8
.
ŒŒ8 9
Default
ŒŒ9 @
.
ŒŒ@ A.
 IdDetalleMaestroEstadoRegistrado
ŒŒA a
,
ŒŒa b
MaestroSettings
ŒŒc r
.
ŒŒr s
Default
ŒŒs z
.
ŒŒz {,
IdDetalleMaestroEstadoCerradoŒŒ{ ò
}ŒŒô ö
;ŒŒö õ
List
œœ 
<
œœ 
AtencionSinMesa
œœ  
>
œœ  !

atenciones
œœ" ,
=
œœ- .%
_restauranteRepositorio
œœ/ F
.
œœF G0
"ObtenerAtencionesSinMesaPorEstados
œœG i
(
œœi j

idsEstados
œœj t
,
œœt u
idCentroAtencionœœv Ü
)œœÜ á
.œœá à!
OrderByDescendingœœà ô
(œœô ö
aœœö õ
=>œœú û
aœœü †
.œœ† °
Fechaœœ° ¶
)œœ¶ ß
.œœß ®
ToListœœ® Æ
(œœÆ Ø
)œœØ ∞
;œœ∞ ±
return
–– 

atenciones
–– 
;
–– 
}
—— 	
public
‘‘ 
List
‘‘ 
<
‘‘ 
ResumenAtencion
‘‘ #
>
‘‘# $.
 ObtenerResumenAtencionesCerradas
‘‘% E
(
‘‘E F
DateTime
‘‘F N

fechaDesde
‘‘O Y
,
‘‘Y Z
DateTime
‘‘[ c

fechaHasta
‘‘d n
,
‘‘n o 
SesionRestaurante‘‘p Å
sesion‘‘Ç à
)‘‘à â
{
’’ 	
var
÷÷ 
idEstadoCerrado
÷÷ 
=
÷÷  !
MaestroSettings
÷÷" 1
.
÷÷1 2
Default
÷÷2 9
.
÷÷9 :+
IdDetalleMaestroEstadoCerrado
÷÷: W
;
÷÷W X
var
◊◊ "
idsCentrosDeAtencion
◊◊ $
=
◊◊% &%
_centroDeAtencionLogica
◊◊' >
.
◊◊> ?7
)ObtenerIdsCentrosAtencionConRolPuntoVenta
◊◊? h
(
◊◊h i
sesion
◊◊i o
.
◊◊o p
SesionDeUsuario
◊◊p 
.◊◊ Ä4
$EstablecimientoComercialSeleccionado◊◊Ä §
.◊◊§ •
Id◊◊• ß
)◊◊ß ®
;◊◊® ©
List
ÿÿ 
<
ÿÿ 
ResumenAtencion
ÿÿ  
>
ÿÿ  !

atenciones
ÿÿ" ,
=
ÿÿ- .%
_restauranteRepositorio
ÿÿ/ F
.
ÿÿF G1
#ObtenerResumenDeAtencionesPorEstado
ÿÿG j
(
ÿÿj k

fechaDesde
ÿÿk u
,
ÿÿu v

fechaHastaÿÿw Å
,ÿÿÅ Ç
idEstadoCerradoÿÿÉ í
,ÿÿí ì$
idsCentrosDeAtencionÿÿî ®
)ÿÿ® ©
.ÿÿ© ™
OrderByÿÿ™ ±
(ÿÿ± ≤
aÿÿ≤ ≥
=>ÿÿ¥ ∂
aÿÿ∑ ∏
.ÿÿ∏ π 
ImporteTotalCeroÿÿπ …
)ÿÿ…  
.ÿÿ  À
ThenByÿÿÀ —
(ÿÿ— “
aÿÿ“ ”
=>ÿÿ‘ ÷
aÿÿ◊ ÿ
.ÿÿÿ Ÿ
	FacturadoÿÿŸ ‚
)ÿÿ‚ „
.ÿÿ„ ‰
ThenByÿÿ‰ Í
(ÿÿÍ Î
aÿÿÎ Ï
=>ÿÿÌ Ô
aÿÿ Ò
.ÿÿÒ Ú

ConfirmadoÿÿÚ ¸
)ÿÿ¸ ˝
.ÿÿ˝ ˛ 
ThenByDescendingÿÿ˛ é
(ÿÿé è
aÿÿè ê
=>ÿÿë ì
aÿÿî ï
.ÿÿï ñ
FechaAtencionÿÿñ £
)ÿÿ£ §
.ÿÿ§ •
ToListÿÿ• ´
(ÿÿ´ ¨
)ÿÿ¨ ≠
;ÿÿ≠ Æ
return
⁄⁄ 

atenciones
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
‹‹ 
List
‹‹ 
<
‹‹ 
Orden_Atencion
‹‹ "
>
‹‹" #4
&ObtenerOrdenesPorEstadoDesdeUnAmbiente
‹‹$ J
(
‹‹J K
int
‹‹K N
	numEstado
‹‹O X
,
‹‹X Y
int
‹‹Z ]

idAmbiente
‹‹^ h
)
‹‹h i
{
›› 	
List
ﬁﬁ 
<
ﬁﬁ 
Orden_Atencion
ﬁﬁ 
>
ﬁﬁ  
ordenes
ﬁﬁ! (
=
ﬁﬁ) *%
_restauranteRepositorio
ﬁﬁ+ B
.
ﬁﬁB C1
#ObtenerOrdenesPorEstadoDeUnAmbiente
ﬁﬁC f
(
ﬁﬁf g
	numEstado
ﬁﬁg p
,
ﬁﬁp q

idAmbiente
ﬁﬁr |
)
ﬁﬁ| }
.
ﬁﬁ} ~
ToListﬁﬁ~ Ñ
(ﬁﬁÑ Ö
)ﬁﬁÖ Ü
;ﬁﬁÜ á
return
‡‡ 
ordenes
‡‡ 
;
‡‡ 
}
‚‚ 	
public
‰‰ 
List
‰‰ 
<
‰‰ 
Orden_Atencion
‰‰ "
>
‰‰" #%
ObtenerOrdenesPorEstado
‰‰$ ;
(
‰‰; <
int
‰‰< ?
	numEstado
‰‰@ I
)
‰‰I J
{
ÂÂ 	
List
ÊÊ 
<
ÊÊ 
Orden_Atencion
ÊÊ 
>
ÊÊ  
ordenes
ÊÊ! (
=
ÊÊ) *%
_restauranteRepositorio
ÊÊ+ B
.
ÊÊB C%
ObtenerOrdenesPorEstado
ÊÊC Z
(
ÊÊZ [
	numEstado
ÊÊ[ d
)
ÊÊd e
.
ÊÊe f
ToList
ÊÊf l
(
ÊÊl m
)
ÊÊm n
;
ÊÊn o
return
ËË 
ordenes
ËË 
;
ËË 
}
ÍÍ 	
public
ÏÏ 
List
ÏÏ 
<
ÏÏ $
OrdenAtencion_Consulta
ÏÏ *
>
ÏÏ* +$
ObtenerOrdenesAtencion
ÏÏ, B
(
ÏÏB C
DateTime
ÏÏC K
desde
ÏÏL Q
,
ÏÏQ R
DateTime
ÏÏS [
hasta
ÏÏ\ a
,
ÏÏa b
int
ÏÏc f
idEstablecimiento
ÏÏg x
)
ÏÏx y
{
ÌÌ 	
var
ÓÓ 
ordenes
ÓÓ 
=
ÓÓ %
_restauranteRepositorio
ÓÓ 1
.
ÓÓ1 2$
ObtenerOrdenesAtencion
ÓÓ2 H
(
ÓÓH I
desde
ÓÓI N
,
ÓÓN O
hasta
ÓÓP U
,
ÓÓU V
idEstablecimiento
ÓÓW h
)
ÓÓh i
.
ÓÓi j
ToList
ÓÓj p
(
ÓÓp q
)
ÓÓq r
;
ÓÓr s
var
ÔÔ 

atenciones
ÔÔ 
=
ÔÔ 
ordenes
ÔÔ $
.
ÔÔ$ %
GroupBy
ÔÔ% ,
(
ÔÔ, -
o
ÔÔ- .
=>
ÔÔ/ 1
o
ÔÔ2 3
.
ÔÔ3 4

IdAtencion
ÔÔ4 >
)
ÔÔ> ?
.
ÔÔ? @
ToList
ÔÔ@ F
(
ÔÔF G
)
ÔÔG H
;
ÔÔH I

atenciones
 
.
 
ForEach
 
(
 
a
  
=>
! #
{
$ %
if
& (
(
) *
a
* +
.
+ ,
Sum
, /
(
/ 0
oa
0 2
=>
3 5
oa
6 8
.
8 9
Importe
9 @
)
@ A
==
B D
$num
E F
)
F G
{
H I
a
J K
.
K L
ToList
L R
(
R S
)
S T
.
T U
ForEach
U \
(
\ ]
o
] ^
=>
_ a
o
b c
.
c d
Estado
d j
=
k l
$str
m r
)
r s
;
s t
}
u v
}
w x
)
x y
;
y z
ordenes
ÒÒ 
.
ÒÒ 
ForEach
ÒÒ 
(
ÒÒ 
o
ÒÒ 
=>
ÒÒ  
o
ÒÒ! "
.
ÒÒ" #
Estado
ÒÒ# )
=
ÒÒ* +
o
ÒÒ, -
.
ÒÒ- .
Estado
ÒÒ. 4
!=
ÒÒ5 7
$str
ÒÒ8 =
?
ÒÒ> ?
(
ÒÒ@ A
o
ÒÒA B
.
ÒÒB C
	Facturado
ÒÒC L
?
ÒÒM N
$str
ÒÒO Z
:
ÒÒ[ \
$str
ÒÒ] h
)
ÒÒh i
:
ÒÒj k
$str
ÒÒl q
)
ÒÒq r
;
ÒÒr s
ordenes
ÚÚ 
.
ÚÚ 
ForEach
ÚÚ 
(
ÚÚ 
o
ÚÚ 
=>
ÚÚ  
o
ÚÚ! "
.
ÚÚ" #
Mesa
ÚÚ# '
=
ÚÚ( )
o
ÚÚ* +
.
ÚÚ+ ,
EsAtencionEnSalon
ÚÚ, =
?
ÚÚ> ?
$str
ÚÚ@ G
+
ÚÚH I
o
ÚÚJ K
.
ÚÚK L
Mesa
ÚÚL P
:
ÚÚQ R
o
ÚÚS T
.
ÚÚT U
Mesa
ÚÚU Y
)
ÚÚY Z
;
ÚÚZ [
ordenes
ÛÛ 
=
ÛÛ 
ordenes
ÛÛ 
.
ÛÛ 
OrderByDescending
ÛÛ /
(
ÛÛ/ 0
o
ÛÛ0 1
=>
ÛÛ2 4
o
ÛÛ5 6
.
ÛÛ6 7
FechaHoraAtencion
ÛÛ7 H
)
ÛÛH I
.
ÛÛI J
ToList
ÛÛJ P
(
ÛÛP Q
)
ÛÛQ R
;
ÛÛR S
return
ÙÙ 
ordenes
ÙÙ 
;
ÙÙ 
}
ıı 	
public
˜˜ 
List
˜˜ 
<
˜˜ +
OrdenPorModoAtencion_Consulta
˜˜ 1
>
˜˜1 2+
ObtenerOrdenesPorModoAtencion
˜˜3 P
(
˜˜P Q
DateTime
˜˜Q Y
desde
˜˜Z _
,
˜˜_ `
DateTime
˜˜a i
hasta
˜˜j o
,
˜˜o p
int
˜˜q t 
idEstablecimiento˜˜u Ü
)˜˜Ü á
{
¯¯ 	
var
˘˘ 
ordenes
˘˘ 
=
˘˘ %
_restauranteRepositorio
˘˘ 1
.
˘˘1 2+
ObtenerOrdenesPorModoAtencion
˘˘2 O
(
˘˘O P
desde
˘˘P U
,
˘˘U V
hasta
˘˘W \
,
˘˘\ ]
idEstablecimiento
˘˘^ o
)
˘˘o p
.
˘˘p q
ToList
˘˘q w
(
˘˘w x
)
˘˘x y
;
˘˘y z
var
˙˙ 

atenciones
˙˙ 
=
˙˙ 
ordenes
˙˙ $
.
˙˙$ %
GroupBy
˙˙% ,
(
˙˙, -
o
˙˙- .
=>
˙˙/ 1
o
˙˙2 3
.
˙˙3 4

IdAtencion
˙˙4 >
)
˙˙> ?
.
˙˙? @
ToList
˙˙@ F
(
˙˙F G
)
˙˙G H
;
˙˙H I

atenciones
˚˚ 
.
˚˚ 
ForEach
˚˚ 
(
˚˚ 
a
˚˚  
=>
˚˚! #
{
˚˚$ %
if
˚˚& (
(
˚˚) *
a
˚˚* +
.
˚˚+ ,
Sum
˚˚, /
(
˚˚/ 0
oa
˚˚0 2
=>
˚˚3 5
oa
˚˚6 8
.
˚˚8 9
Importe
˚˚9 @
)
˚˚@ A
==
˚˚B D
$num
˚˚E F
)
˚˚F G
{
˚˚H I
a
˚˚J K
.
˚˚K L
ToList
˚˚L R
(
˚˚R S
)
˚˚S T
.
˚˚T U
ForEach
˚˚U \
(
˚˚\ ]
o
˚˚] ^
=>
˚˚_ a
o
˚˚b c
.
˚˚c d
Estado
˚˚d j
=
˚˚k l
$str
˚˚m r
)
˚˚r s
;
˚˚s t
}
˚˚u v
}
˚˚w x
)
˚˚x y
;
˚˚y z
ordenes
¸¸ 
.
¸¸ 
ForEach
¸¸ 
(
¸¸ 
o
¸¸ 
=>
¸¸  
o
¸¸! "
.
¸¸" #
Estado
¸¸# )
=
¸¸* +
o
¸¸, -
.
¸¸- .
Estado
¸¸. 4
!=
¸¸5 7
$str
¸¸8 =
?
¸¸> ?
(
¸¸@ A
o
¸¸A B
.
¸¸B C
	Facturado
¸¸C L
?
¸¸M N
$str
¸¸O Z
:
¸¸[ \
$str
¸¸] h
)
¸¸h i
:
¸¸j k
$str
¸¸l q
)
¸¸q r
;
¸¸r s
ordenes
˝˝ 
.
˝˝ 
ForEach
˝˝ 
(
˝˝ 
o
˝˝ 
=>
˝˝  
o
˝˝! "
.
˝˝" #
Mesa
˝˝# '
=
˝˝( )
o
˝˝* +
.
˝˝+ ,
EsAtencionEnSalon
˝˝, =
?
˝˝> ?
$str
˝˝@ G
+
˝˝H I
o
˝˝J K
.
˝˝K L
Mesa
˝˝L P
:
˝˝Q R
o
˝˝S T
.
˝˝T U
Mesa
˝˝U Y
)
˝˝Y Z
;
˝˝Z [
ordenes
˛˛ 
.
˛˛ 
ForEach
˛˛ 
(
˛˛ 
o
˛˛ 
=>
˛˛  
o
˛˛! "
.
˛˛" #
Ambiente
˛˛# +
=
˛˛, -
o
˛˛. /
.
˛˛/ 0
ModoAtencion
˛˛0 <
+
˛˛= >
$str
˛˛? D
+
˛˛E F
o
˛˛G H
.
˛˛H I
Ambiente
˛˛I Q
)
˛˛Q R
;
˛˛R S
ordenes
ˇˇ 
=
ˇˇ 
ordenes
ˇˇ 
.
ˇˇ 
OrderByDescending
ˇˇ /
(
ˇˇ/ 0
o
ˇˇ0 1
=>
ˇˇ2 4
o
ˇˇ5 6
.
ˇˇ6 7
FechaHoraAtencion
ˇˇ7 H
)
ˇˇH I
.
ˇˇI J
ToList
ˇˇJ P
(
ˇˇP Q
)
ˇˇQ R
;
ˇˇR S
return
ÄÄ 
ordenes
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ÉÉ 
List
ÉÉ 
<
ÉÉ 
DetalleOrden
ÉÉ  
>
ÉÉ  !$
ObtenerDetallesDeOrden
ÉÉ" 8
(
ÉÉ8 9
int
ÉÉ9 <
idOrden
ÉÉ= D
)
ÉÉD E
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
return
áá %
_restauranteRepositorio
áá .
.
áá. /$
ObtenerDetallesDeOrden
áá/ E
(
ááE F
idOrden
ááF M
)
ááM N
.
ááN O
ToList
ááO U
(
ááU V
)
ááV W
;
ááW X
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
ãã 
throw
åå 
new
åå 
LogicaException
åå )
(
åå) *
$str
åå* ^
,
åå^ _
e
åå` a
)
ååa b
;
ååb c
}
çç 
}
éé 	
public
èè 
async
èè 
Task
èè 
<
èè 
OperationResult
èè )
>
èè) *
CrearAmbiente
èè+ 8
(
èè8 9
Ambiente
èè9 A
ambiente
èèB J
)
èèJ K
{
êê 	
try
ëë 
{
íí 
List
ìì 
<
ìì 
Actor_negocio
ìì "
>
ìì" #
actoresDeNegocio
ìì$ 4
=
ìì5 6
(
ìì7 8
await
ìì8 =
_actorRepositorio
ìì> O
.
ììO P3
%ObtenerActoresDeNegocioPorRolVigentes
ììP u
(
ììu v"
RestauranteSettingsììv â
.ììâ ä
Defaultììä ë
.ììë í
IdRolAmbienteììí ü
,ììü †
ambienteìì° ©
.ìì© ™
Establecimientoìì™ π
.ììπ ∫
Idìì∫ º
)ììº Ω
)ììΩ æ
.ììæ ø
ToListììø ≈
(ìì≈ ∆
)ìì∆ «
;ìì« »
if
îî 
(
îî 
actoresDeNegocio
îî $
.
îî$ %
Select
îî% +
(
îî+ ,
an
îî, .
=>
îî/ 1
an
îî2 4
.
îî4 5
Actor
îî5 :
.
îî: ;
primer_nombre
îî; H
)
îîH I
.
îîI J
Contains
îîJ R
(
îîR S
ambiente
îîS [
.
îî[ \
Nombre
îî\ b
)
îîb c
)
îîc d
{
ïï 
throw
ññ 
new
ññ 
LogicaException
ññ -
(
ññ- .
$str
ññ. |
)
ññ| }
;
ññ} ~
}
óó 
Actor_negocio
òò "
actorNegocioAmbiente
òò 2
=
òò3 40
"GenerarActorDeNegocioDesdeAmbiente
òò5 W
(
òòW X
ambiente
òòX `
)
òò` a
;
òòa b
var
öö 
	resultado
öö 
=
öö  
_actor_Repositorio
öö  2
.
öö2 3
CrearActorNegocio
öö3 D
(
ööD E"
actorNegocioAmbiente
ööE Y
)
ööY Z
;
ööZ [
	resultado
úú 
.
úú 
information
úú %
=
úú& '
$str
úú( ,
;
úú, -
return
ùù 
	resultado
ùù  
;
ùù  !
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
e
üü 
)
üü 
{
†† 
throw
°° 
new
°° 
LogicaException
°° )
(
°°) *
$str
°°* O
,
°°O P
e
°°Q R
)
°°R S
;
°°S T
}
¢¢ 
}
££ 	
public
§§ 
async
§§ 
Task
§§ 
<
§§ 
OperationResult
§§ )
>
§§) * 
ActualizarAmbiente
§§+ =
(
§§= >
Ambiente
§§> F
ambiente
§§G O
)
§§O P
{
•• 	
try
¶¶ 
{
ßß 
List
®® 
<
®® 
Actor_negocio
®® "
>
®®" #
actoresDeNegocio
®®$ 4
=
®®5 6
(
®®7 8
await
®®8 =
_actorRepositorio
®®> O
.
®®O P3
%ObtenerActoresDeNegocioPorRolVigentes
®®P u
(
®®u v"
RestauranteSettings®®v â
.®®â ä
Default®®ä ë
.®®ë í
IdRolAmbiente®®í ü
,®®ü †
ambiente®®° ©
.®®© ™
Establecimiento®®™ π
.®®π ∫
Id®®∫ º
)®®º Ω
)®®Ω æ
.®®æ ø
ToList®®ø ≈
(®®≈ ∆
)®®∆ «
;®®« »
actoresDeNegocio
©©  
.
©©  !
Remove
©©! '
(
©©' (
actoresDeNegocio
©©( 8
.
©©8 9
Single
©©9 ?
(
©©? @
a
©©@ A
=>
©©B D
a
©©E F
.
©©F G
id
©©G I
==
©©J L
ambiente
©©M U
.
©©U V
Id
©©V X
)
©©X Y
)
©©Y Z
;
©©Z [
if
™™ 
(
™™ 
actoresDeNegocio
™™ $
.
™™$ %
Select
™™% +
(
™™+ ,
an
™™, .
=>
™™/ 1
an
™™2 4
.
™™4 5
Actor
™™5 :
.
™™: ;
primer_nombre
™™; H
.
™™H I
ToUpper
™™I P
(
™™P Q
)
™™Q R
)
™™R S
.
™™S T
Contains
™™T \
(
™™\ ]
ambiente
™™] e
.
™™e f
Nombre
™™f l
.
™™l m
ToUpper
™™m t
(
™™t u
)
™™u v
)
™™v w
)
™™w x
{
´´ 
throw
¨¨ 
new
¨¨ 
LogicaException
¨¨ -
(
¨¨- .
$str
¨¨. |
)
¨¨| }
;
¨¨} ~
}
≠≠ 
Actor_negocio
ÆÆ 
ActorAmbiente
ÆÆ +
=
ÆÆ, - 
_actor_Repositorio
ÆÆ. @
.
ÆÆ@ A#
ObtenerActorDeNegocio
ÆÆA V
(
ÆÆV W
ambiente
ÆÆW _
.
ÆÆ_ `
Id
ÆÆ` b
)
ÆÆb c
;
ÆÆc d
ActorAmbiente
∞∞ 
.
∞∞ 
extension_json
∞∞ ,
=
∞∞- .
$str
∞∞/ <
+
∞∞= >
ambiente
∞∞? G
.
∞∞G H
Nombre
∞∞H N
+
∞∞O P
$str
∞∞Q ^
+
∞∞_ `
ambiente
∞∞a i
.
∞∞i j
Filas
∞∞j o
+
∞∞p q
$str∞∞r Ä
+∞∞Å Ç
ambiente∞∞É ã
.∞∞ã å
Columnas∞∞å î
+∞∞ï ñ
$str∞∞ó ¨
+∞∞≠ Æ
ambiente∞∞Ø ∑
.∞∞∑ ∏
MesasTemporales∞∞∏ «
.∞∞« »
ToString∞∞» –
(∞∞– —
)∞∞— “
.∞∞“ ”
ToLower∞∞” ⁄
(∞∞⁄ €
)∞∞€ ‹
+∞∞› ﬁ
$str∞∞ﬂ ‚
;∞∞‚ „
ActorAmbiente
±± 
.
±± 
Actor
±± #
.
±±# $
primer_nombre
±±$ 1
=
±±2 3
ambiente
±±4 <
.
±±< =
Nombre
±±= C
;
±±C D
var
≥≥ 
result
≥≥ 
=
≥≥  
_actor_Repositorio
≥≥ /
.
≥≥/ 01
#ActualizarActorNegocioIncluidoActor
≥≥0 S
(
≥≥S T
ActorAmbiente
≥≥T a
)
≥≥a b
;
≥≥b c
return
¥¥ 
result
¥¥ 
;
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
throw
∏∏ 
new
∏∏ 
LogicaException
∏∏ )
(
∏∏) *
$str
∏∏* T
,
∏∏T U
e
∏∏V W
)
∏∏W X
;
∏∏X Y
}
ππ 
}
∫∫ 	
public
ºº 
async
ºº 
Task
ºº 
<
ºº 
OperationResult
ºº )
>
ºº) *
EliminarAmbiente
ºº+ ;
(
ºº; <
int
ºº< ?

idAmbiente
ºº@ J
)
ººJ K
{
ΩΩ 	
try
ææ 
{
øø 
List
¿¿ 
<
¿¿ 
Actor_negocio
¿¿ "
>
¿¿" #
actoresDeNegocio
¿¿$ 4
=
¿¿5 6
(
¿¿7 8
await
¿¿8 =
_actorRepositorio
¿¿> O
.
¿¿O PD
5ObtenerActoresDeNegocioVigentesPorIdActorNegocioPadre¿¿P Ö
(¿¿Ö Ü

idAmbiente¿¿Ü ê
)¿¿ê ë
)¿¿ë í
.¿¿í ì
ToList¿¿ì ô
(¿¿ô ö
)¿¿ö õ
;¿¿õ ú
if
¡¡ 
(
¡¡ 
actoresDeNegocio
¡¡ $
.
¡¡$ %
Count
¡¡% *
(
¡¡* +
)
¡¡+ ,
>
¡¡- .
$num
¡¡/ 0
)
¡¡0 1
{
¬¬ 
throw
√√ 
new
√√ 
LogicaException
√√ -
(
√√- .
$str
√√. t
)
√√t u
;
√√u v
}
ƒƒ 
Actor_negocio
≈≈ 
ActorAmbiente
≈≈ +
=
≈≈, - 
_actor_Repositorio
≈≈. @
.
≈≈@ A#
ObtenerActorDeNegocio
≈≈A V
(
≈≈V W

idAmbiente
≈≈W a
)
≈≈a b
;
≈≈b c
ActorAmbiente
∆∆ 
.
∆∆ 

es_vigente
∆∆ (
=
∆∆) *
false
∆∆+ 0
;
∆∆0 1
ActorAmbiente
«« 
.
«« 
	fecha_fin
«« '
=
««( )
DateTimeUtil
««* 6
.
««6 7
FechaActual
««7 B
(
««B C
)
««C D
;
««D E
var
»» 
result
»» 
=
»»  
_actor_Repositorio
»» /
.
»»/ 01
#ActualizarActorNegocioIncluidoActor
»»0 S
(
»»S T
ActorAmbiente
»»T a
)
»»a b
;
»»b c
return
…… 
result
…… 
;
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
e
ÀÀ 
)
ÀÀ 
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ 
LogicaException
ÕÕ )
(
ÕÕ) *
$str
ÕÕ* R
,
ÕÕR S
e
ÕÕT U
)
ÕÕU V
;
ÕÕV W
}
ŒŒ 
}
œœ 	
public
–– 
OperationResult
–– 
	CrearMesa
–– (
(
––( )
Mesa
––) -
mesa
––. 2
)
––2 3
{
—— 	
try
““ 
{
”” 
Actor_negocio
‘‘ 
	mesaActor
‘‘ '
=
‘‘( ),
GenerarActorDeNegocioDesdeMesa
‘‘* H
(
‘‘H I
mesa
‘‘I M
)
‘‘M N
;
‘‘N O
OperationResult
’’ 
	resultado
’’  )
=
’’* + 
_actor_Repositorio
’’, >
.
’’> ?
CrearActorNegocio
’’? P
(
’’P Q
	mesaActor
’’Q Z
)
’’Z [
;
’’[ \
return
÷÷ 
	resultado
÷÷  
;
÷÷  !
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
e
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
public
›› 
Actor
›› '
GenerarActorDesdeAmbiente
›› .
(
››. /
Ambiente
››/ 7
ambiente
››8 @
)
››@ A
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
Actor
·· 
actor
·· 
=
·· 
new
·· !
Actor
··" '
(
··' (
)
··( )
{
‚‚ $
id_documento_identidad
„„ *
=
„„+ ,!
RestauranteSettings
„„- @
.
„„@ A
Default
„„A H
.
„„H I8
*IdDetalleMaestroDocumentoIdentidadAmbiente
„„I s
,
„„s t(
numero_documento_identidad
‰‰ .
=
‰‰/ 0
$str
‰‰1 3
,
‰‰3 4
primer_nombre
ÂÂ !
=
ÂÂ" #
ambiente
ÂÂ$ ,
.
ÂÂ, -
Nombre
ÂÂ- 3
,
ÂÂ3 4
segundo_nombre
ÊÊ "
=
ÊÊ# $
$str
ÊÊ% '
,
ÊÊ' (
fecha_nacimiento
ÁÁ $
=
ÁÁ% &
DateTimeUtil
ÁÁ' 3
.
ÁÁ3 4
FechaActual
ÁÁ4 ?
(
ÁÁ? @
)
ÁÁ@ A
,
ÁÁA B
telefono
ËË 
=
ËË 
$str
ËË !
,
ËË! "
id_tipo_actor
ÈÈ !
=
ÈÈ" #!
RestauranteSettings
ÈÈ$ 7
.
ÈÈ7 8
Default
ÈÈ8 ?
.
ÈÈ? @,
IdTipoActorRestauranteAmbiente
ÈÈ@ ^
,
ÈÈ^ _
id_foto
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
,
ÍÍ  
id_clase_actor
ÎÎ "
=
ÎÎ# $!
RestauranteSettings
ÎÎ% 8
.
ÎÎ8 9
Default
ÎÎ9 @
.
ÎÎ@ A-
IdClaseActorRestauranteAmbiente
ÎÎA `
,
ÎÎ` a
id_estado_legal
ÏÏ #
=
ÏÏ$ %
$num
ÏÏ& '
,
ÏÏ' (
correo
ÌÌ 
=
ÌÌ 
$str
ÌÌ 
,
ÌÌ  
tercer_nombre
ÓÓ !
=
ÓÓ" #
$str
ÓÓ$ &
,
ÓÓ& '

pagina_web
ÔÔ 
=
ÔÔ  
$str
ÔÔ! #
,
ÔÔ# $(
informacion_multiproposito
 .
=
/ 0
null
1 5
,
5 6'
id_detalle_multiproposito
ÒÒ -
=
ÒÒ. /
null
ÒÒ0 4
,
ÒÒ4 5(
id_detalle_multiproposito1
ÚÚ .
=
ÚÚ/ 0
null
ÚÚ1 5
}
ÛÛ 
;
ÛÛ 
return
ÙÙ 
actor
ÙÙ 
;
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
e
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
public
˚˚ 
Actor_negocio
˚˚ 0
"GenerarActorDeNegocioDesdeAmbiente
˚˚ ?
(
˚˚? @
Ambiente
˚˚@ H
ambiente
˚˚I Q
)
˚˚Q R
{
¸¸ 	
try
˝˝ 
{
˛˛ 
Actor_negocio
ˇˇ 
actor
ˇˇ #
=
ˇˇ$ %
new
ˇˇ& )
Actor_negocio
ˇˇ* 7
(
ˇˇ7 8
)
ˇˇ8 9
{
ÄÄ 
id_rol
ÅÅ 
=
ÅÅ !
RestauranteSettings
ÅÅ 0
.
ÅÅ0 1
Default
ÅÅ1 8
.
ÅÅ8 9
IdRolAmbiente
ÅÅ9 F
,
ÅÅF G$
id_actor_negocio_padre
ÇÇ *
=
ÇÇ+ ,
ambiente
ÇÇ- 5
.
ÇÇ5 6
Establecimiento
ÇÇ6 E
.
ÇÇE F
Id
ÇÇF H
,
ÇÇH I
fecha_inicio
ÉÉ  
=
ÉÉ! "
DateTimeUtil
ÉÉ# /
.
ÉÉ/ 0
FechaActual
ÉÉ0 ;
(
ÉÉ; <
)
ÉÉ< =
,
ÉÉ= >
	fecha_fin
ÑÑ 
=
ÑÑ 
DateTimeUtil
ÑÑ  ,
.
ÑÑ, -
FechaActual
ÑÑ- 8
(
ÑÑ8 9
)
ÑÑ9 :
.
ÑÑ: ;
AddYears
ÑÑ; C
(
ÑÑC D
ActorSettings
ÑÑD Q
.
ÑÑQ R
Default
ÑÑR Y
.
ÑÑY ZF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaÑÑZ ë
)ÑÑë í
,ÑÑí ì
codigo_negocio
ÖÖ "
=
ÖÖ# $
$str
ÖÖ% '
,
ÖÖ' (

es_vigente
ÜÜ 
=
ÜÜ  
true
ÜÜ! %
,
ÜÜ% &
extension_json
áá "
=
áá# $
$str
áá% 2
+
áá3 4
ambiente
áá5 =
.
áá= >
Nombre
áá> D
+
ááE F
$str
ááG T
+
ááU V
ambiente
ááW _
.
áá_ `
Filas
áá` e
+
ááf g
$str
ááh v
+
ááw x
ambienteááy Å
.ááÅ Ç
ColumnasááÇ ä
+ááã å
$strááç ¢
+áá£ §
ambienteáá• ≠
.áá≠ Æ
MesasTemporalesááÆ Ω
.ááΩ æ
ToStringááæ ∆
(áá∆ «
)áá« »
.áá» …
ToLoweráá… –
(áá– —
)áá— “
+áá” ‘
$stráá’ ÿ
,ááÿ Ÿ

indicador1
àà 
=
àà  
false
àà! &
,
àà& '/
!id_detalle_maestro_multiproposito
ââ 5
=
ââ6 7
null
ââ8 <
,
ââ< =
Actor
ää 
=
ää '
GenerarActorDesdeAmbiente
ää 5
(
ää5 6
ambiente
ää6 >
)
ää> ?
}
åå 
;
åå 
return
éé 
actor
éé 
;
éé 
}
èè 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
throw
íí 
e
íí 
;
íí 
}
ìì 
}
ïï 	
public
ññ 
Actor
ññ #
GenerarActorDesdeMesa
ññ *
(
ññ* +
Mesa
ññ+ /
mesa
ññ0 4
)
ññ4 5
{
óó 	
try
òò 
{
ôô 
return
öö 
new
öö 
Actor
öö  
(
öö  !
)
öö! "
{
õõ $
id_documento_identidad
úú *
=
úú+ ,!
RestauranteSettings
úú- @
.
úú@ A
Default
úúA H
.
úúH I4
&IdDetalleMaestroDocumentoIdentidadMesa
úúI o
,
úúo p(
numero_documento_identidad
ùù .
=
ùù/ 0
$str
ùù1 3
,
ùù3 4
primer_nombre
ûû !
=
ûû" #
mesa
ûû$ (
.
ûû( )
Nombre
ûû) /
,
ûû/ 0
segundo_nombre
üü "
=
üü# $
$str
üü% '
,
üü' (
fecha_nacimiento
†† $
=
††% &
DateTimeUtil
††' 3
.
††3 4
FechaActual
††4 ?
(
††? @
)
††@ A
,
††A B
telefono
°° 
=
°° 
$str
°° !
,
°°! "
id_tipo_actor
¢¢ !
=
¢¢" #!
RestauranteSettings
¢¢$ 7
.
¢¢7 8
Default
¢¢8 ?
.
¢¢? @(
IdTipoActorRestauranteMesa
¢¢@ Z
,
¢¢Z [
id_foto
££ 
=
££ 
$num
££ 
,
££  
id_clase_actor
§§ "
=
§§# $!
RestauranteSettings
§§% 8
.
§§8 9
Default
§§9 @
.
§§@ A)
IdClaseActorRestauranteMesa
§§A \
,
§§\ ]
id_estado_legal
•• #
=
••$ %
$num
••& '
,
••' (
correo
¶¶ 
=
¶¶ 
$str
¶¶ 
,
¶¶  
tercer_nombre
ßß !
=
ßß" #
$str
ßß$ &
,
ßß& '

pagina_web
®® 
=
®®  
$str
®®! #
,
®®# $(
informacion_multiproposito
©© .
=
©©/ 0
null
©©1 5
,
©©5 6'
id_detalle_multiproposito
™™ -
=
™™. /
null
™™0 4
,
™™4 5(
id_detalle_multiproposito1
´´ .
=
´´/ 0
null
´´1 5
}
¨¨ 
;
¨¨ 
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
e
ÆÆ 
)
ÆÆ 
{
ØØ 
throw
∞∞ 
e
∞∞ 
;
∞∞ 
}
±± 
}
≥≥ 	
public
¥¥ 
Actor_negocio
¥¥ ,
GenerarActorDeNegocioDesdeMesa
¥¥ ;
(
¥¥; <
Mesa
¥¥< @
mesa
¥¥A E
)
¥¥E F
{
µµ 	
try
∂∂ 
{
∑∑ 
return
∏∏ 
new
∏∏ 
Actor_negocio
∏∏ (
(
∏∏( )
)
∏∏) *
{
ππ 
id_rol
∫∫ 
=
∫∫ !
RestauranteSettings
∫∫ 0
.
∫∫0 1
Default
∫∫1 8
.
∫∫8 9
	IdRolMesa
∫∫9 B
,
∫∫B C
fecha_inicio
ªª  
=
ªª! "
DateTimeUtil
ªª# /
.
ªª/ 0
FechaActual
ªª0 ;
(
ªª; <
)
ªª< =
,
ªª= >
	fecha_fin
ºº 
=
ºº 
DateTimeUtil
ºº  ,
.
ºº, -
FechaActual
ºº- 8
(
ºº8 9
)
ºº9 :
.
ºº: ;
AddYears
ºº; C
(
ººC D
ActorSettings
ººD Q
.
ººQ R
Default
ººR Y
.
ººY ZF
7vigenciaEnAnyosPorDefectoDeActorDeNegocioEntidadInternaººZ ë
)ººë í
,ººí ì
codigo_negocio
ΩΩ "
=
ΩΩ# $
$str
ΩΩ% '
,
ΩΩ' (

es_vigente
ææ 
=
ææ  
true
ææ! %
,
ææ% &
extension_json
øø "
=
øø# $
$str
øø% 2
+
øø3 4
mesa
øø5 9
.
øø9 :
Nombre
øø: @
+
øøA B
$str
øøC O
+
øøP Q
mesa
øøR V
.
øøV W
Fila
øøW [
+
øø\ ]
$str
øø^ k
+
øøl m
mesa
øøn r
.
øør s
Columna
øøs z
+
øø{ |
$strøø} Ä
,øøÄ Å

indicador1
¿¿ 
=
¿¿  
mesa
¿¿! %
.
¿¿% &
EstadoOcupado
¿¿& 3
,
¿¿3 4/
!id_detalle_maestro_multiproposito
¡¡ 5
=
¡¡6 7
null
¡¡8 <
,
¡¡< =
Actor
¬¬ 
=
¬¬ #
GenerarActorDesdeMesa
¬¬ 1
(
¬¬1 2
mesa
¬¬2 6
)
¬¬6 7
,
¬¬7 8$
id_actor_negocio_padre
√√ *
=
√√+ ,
mesa
√√- 1
.
√√1 2

IdAmbiente
√√2 <
}
ƒƒ 
;
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
e
∆∆ 
)
∆∆ 
{
«« 
throw
»» 
e
»» 
;
»» 
}
…… 
}
ÀÀ 	
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ 
List
ÃÃ 
<
ÃÃ 
ItemRestaurante
ÃÃ .
>
ÃÃ. /
>
ÃÃ/ 0'
ObtenerItemsDeRestaurante
ÃÃ1 J
(
ÃÃJ K
)
ÃÃK L
{
ÕÕ 	
try
ŒŒ 
{
œœ 
var
–– 
itemsRestaurante
–– $
=
––% &
(
––' (
await
––( -%
_restauranteRepositorio
––. E
.
––E F'
ObtenerItemsDeRestaurante
––F _
(
––_ `
)
––` a
)
––a b
.
––b c
ToList
––c i
(
––i j
)
––j k
;
––k l
return
—— 
itemsRestaurante
—— '
;
——' (
}
““ 
catch
”” 
(
”” 
	Exception
”” 
e
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ 
LogicaException
’’ )
(
’’) *
$str
’’* ^
,
’’^ _
e
’’` a
)
’’a b
;
’’b c
}
÷÷ 
}
◊◊ 	
public
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
List
ÿÿ 
<
ÿÿ 
ItemRestaurante
ÿÿ .
>
ÿÿ. /
>
ÿÿ/ 03
%ObtenerItemsDeRestaurantePorCategoria
ÿÿ1 V
(
ÿÿV W
int
ÿÿW Z
idCategoria
ÿÿ[ f
)
ÿÿf g
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
var
‹‹ !
categoriasPadreHijo
‹‹ '
=
‹‹( )
(
‹‹* +
await
‹‹+ 0%
_restauranteRepositorio
‹‹1 H
.
‹‹H I(
ObtenerDetallesJerarquicos
‹‹I c
(
‹‹c d
MaestroSettings
‹‹d s
.
‹‹s t
Default
‹‹t {
.
‹‹{ |)
IdMaestroCategoriaConcepto‹‹| ñ
)‹‹ñ ó
)‹‹ó ò
.‹‹ò ô
ToList‹‹ô ü
(‹‹ü †
)‹‹† °
;‹‹° ¢
List
›› 
<
›› 
ItemJerarquico
›› #
>
››# $!
idsCategoriaABuscar
››% 8
=
››9 :
new
››; >
List
››? C
<
››C D
ItemJerarquico
››D R
>
››R S
(
››S T
)
››T U
{
››V W!
categoriasPadreHijo
››X k
.
››k l
Single
››l r
(
››r s
c
››s t
=>
››u w
c
››x y
.
››y z
Id
››z |
==
››} 
idCategoria››Ä ã
)››ã å
}››ç é
;››é è
List
ﬁﬁ 
<
ﬁﬁ 
ItemJerarquico
ﬁﬁ #
>
ﬁﬁ# $!
idsCategoriaRepetir
ﬁﬁ% 8
=
ﬁﬁ9 :
new
ﬁﬁ; >
List
ﬁﬁ? C
<
ﬁﬁC D
ItemJerarquico
ﬁﬁD R
>
ﬁﬁR S
(
ﬁﬁS T
)
ﬁﬁT U
{
ﬁﬁV W!
categoriasPadreHijo
ﬁﬁX k
.
ﬁﬁk l
Single
ﬁﬁl r
(
ﬁﬁr s
c
ﬁﬁs t
=>
ﬁﬁu w
c
ﬁﬁx y
.
ﬁﬁy z
Id
ﬁﬁz |
==
ﬁﬁ} 
idCategoriaﬁﬁÄ ã
)ﬁﬁã å
}ﬁﬁç é
;ﬁﬁé è
do
ﬂﬂ 
{
‡‡ 
var
·· 
idCategoriaActual
·· )
=
··* +!
idsCategoriaRepetir
··, ?
.
··? @
First
··@ E
(
··E F
)
··F G
;
··G H!
idsCategoriaRepetir
‚‚ '
.
‚‚' (
AddRange
‚‚( 0
(
‚‚0 1!
categoriasPadreHijo
‚‚1 D
.
‚‚D E
Where
‚‚E J
(
‚‚J K
cph
‚‚K N
=>
‚‚O Q
cph
‚‚R U
.
‚‚U V
IdPadre
‚‚V ]
==
‚‚^ `
idCategoriaActual
‚‚a r
.
‚‚r s
Id
‚‚s u
)
‚‚u v
)
‚‚v w
;
‚‚w x!
idsCategoriaABuscar
„„ '
.
„„' (
AddRange
„„( 0
(
„„0 1!
categoriasPadreHijo
„„1 D
.
„„D E
Where
„„E J
(
„„J K
cph
„„K N
=>
„„O Q
cph
„„R U
.
„„U V
IdPadre
„„V ]
==
„„^ `
idCategoriaActual
„„a r
.
„„r s
Id
„„s u
)
„„u v
)
„„v w
;
„„w x!
idsCategoriaRepetir
‰‰ '
.
‰‰' (
Remove
‰‰( .
(
‰‰. /
idCategoriaActual
‰‰/ @
)
‰‰@ A
;
‰‰A B
}
ÂÂ 
while
ÂÂ 
(
ÂÂ !
idsCategoriaRepetir
ÂÂ ,
.
ÂÂ, -
Count
ÂÂ- 2
(
ÂÂ2 3
)
ÂÂ3 4
>
ÂÂ5 6
$num
ÂÂ7 8
)
ÂÂ8 9
;
ÂÂ9 :
return
ÊÊ %
_restauranteRepositorio
ÊÊ .
.
ÊÊ. /4
&ObtenerItemsDeRestaurantePorCategorias
ÊÊ/ U
(
ÊÊU V!
idsCategoriaABuscar
ÊÊV i
.
ÊÊi j
Select
ÊÊj p
(
ÊÊp q
c
ÊÊq r
=>
ÊÊs u
c
ÊÊv w
.
ÊÊw x
Id
ÊÊx z
)
ÊÊz {
.
ÊÊ{ |
ToListÊÊ| Ç
(ÊÊÇ É
)ÊÊÉ Ñ
)ÊÊÑ Ö
.ÊÊÖ Ü
ToListÊÊÜ å
(ÊÊå ç
)ÊÊç é
;ÊÊé è
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
e
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ 
LogicaException
ÍÍ )
(
ÍÍ) *
$str
ÍÍ* ^
,
ÍÍ^ _
e
ÍÍ` a
)
ÍÍa b
;
ÍÍb c
}
ÎÎ 
}
ÏÏ 	
public
ÌÌ 
List
ÌÌ 
<
ÌÌ 
int
ÌÌ 
>
ÌÌ %
ObtenerIdsCategoriaHijo
ÌÌ 0
(
ÌÌ0 1
List
ÌÌ1 5
<
ÌÌ5 6
ItemJerarquico
ÌÌ6 D
>
ÌÌD E!
categoriasPadreHijo
ÌÌF Y
,
ÌÌY Z
long
ÌÌ[ _
idCategoriaPadre
ÌÌ` p
)
ÌÌp q
{
ÓÓ 	
try
ÔÔ 
{
 
return
ÒÒ 
null
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
throw
ıı 
new
ıı 
LogicaException
ıı )
(
ıı) *
$str
ıı* P
,
ııP Q
e
ııR S
)
ııS T
;
ııT U
}
ˆˆ 
}
˜˜ 	
public
¯¯ 
long
¯¯ 
[
¯¯ 
]
¯¯ +
ObtenerIdsDeitemsPorCategoria
¯¯ 3
(
¯¯3 4
long
¯¯4 8
idCategoria
¯¯9 D
)
¯¯D E
{
˘˘ 	
try
˙˙ 
{
˚˚ 
return
¸¸ %
_restauranteRepositorio
¸¸ .
.
¸¸. /8
*ObtenerIdsDeItemsDeRestaurantePorCategoria
¸¸/ Y
(
¸¸Y Z
(
¸¸Z [
int
¸¸[ ^
)
¸¸^ _
idCategoria
¸¸_ j
)
¸¸j k
;
¸¸k l
;
¸¸m n
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
e
˛˛ 
)
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
LogicaException
ÄÄ )
(
ÄÄ) *
$str
ÄÄ* P
,
ÄÄP Q
e
ÄÄR S
)
ÄÄS T
;
ÄÄT U
}
ÅÅ 
}
ÇÇ 	
public
ÉÉ 
ItemRestaurante
ÉÉ E
7ObtenerItemDeRestauranteIncluyendoComplementosDeFamilia
ÉÉ V
(
ÉÉV W
int
ÉÉW Z
idItem
ÉÉ[ a
)
ÉÉa b
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
var
áá 
item
áá 
=
áá %
_restauranteRepositorio
áá 2
.
áá2 3/
!ObtenerItemDeRestauranteConPrecio
áá3 T
(
ááT U
idItem
ááU [
)
áá[ \
;
áá\ ]
if
àà 
(
àà 
item
àà 
!=
àà 
null
àà  
)
àà  !
{
ââ 
item
ää 
.
ää #
ComplementosDeFamilia
ää .
=
ää/ 0%
_restauranteRepositorio
ää1 H
.
ääH I+
ObtenerComplementosPorFamilia
ääI f
(
ääf g
item
ääg k
.
ääk l
	IdFamilia
ääl u
)
ääu v
.
ääv w
ToList
ääw }
(
ää} ~
)
ää~ 
;ää Ä
}
ãã 
return
åå 
item
åå 
;
åå 
}
çç 
catch
éé 
(
éé 
	Exception
éé 
e
éé 
)
éé 
{
èè 
throw
êê 
new
êê 
LogicaException
êê )
(
êê) *
$str
êê* J
,
êêJ K
e
êêL M
)
êêM N
;
êêN O
;
êêP Q
}
ëë 
}
íí 	
public
ìì 
OperationResult
ìì 1
#ActualizarJsonDetalleDeDetalleOrden
ìì B
(
ììB C
long
ììC G
	idDetalle
ììH Q
,
ììQ R
string
ììS Y
stringJsonDetalle
ììZ k
)
ììk l
{
îî 	
try
ïï 
{
ññ 
OperationResult
óó 
result
óó  &
=
óó' (
new
óó) ,
OperationResult
óó- <
(
óó< =
)
óó= >
;
óó> ?
result
òò 
=
òò %
_restauranteRepositorio
òò 0
.
òò0 13
%ActualizarDetalleDeDetalleTransaccion
òò1 V
(
òòV W
	idDetalle
òòW `
,
òò` a
stringJsonDetalle
òòb s
)
òòs t
;
òòt u
return
ôô 
result
ôô 
;
ôô 
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
e
õõ 
)
õõ 
{
úú 
throw
ùù 
e
ùù 
;
ùù 
}
ûû 
}
üü 	
public
†† 
async
†† 
Task
†† 
<
†† 
SesionRestaurante
†† +
>
††+ ,
ObtenerSesion
††- :
(
††: ;$
UserProfileSessionData
††; Q$
userProfileSessionData
††R h
)
††h i
{
°° 	
try
¢¢ 
{
££ 
return
§§ 
new
§§ 
SesionRestaurante
§§ ,
(
§§, -
)
§§- .
{
•• 
SesionDeUsuario
¶¶ #
=
¶¶$ %$
userProfileSessionData
¶¶& <
,
¶¶< =
	Ambientes
ßß 
=
ßß 
await
ßß  %
ObtenerAmbientes
ßß& 6
(
ßß6 7
)
ßß7 8
}
®® 
;
®® 
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
e
™™ 
)
™™ 
{
´´ 
throw
¨¨ 
e
¨¨ 
;
¨¨ 
}
≠≠ 
}
ØØ 	
public
∞∞ 
OperationResult
∞∞ #
CrearAtencionConOrden
∞∞ 4
(
∞∞4 5!
AtencionRestaurante
∞∞5 H
atencion
∞∞I Q
,
∞∞Q R
SesionRestaurante
∞∞S d
sesion
∞∞e k
)
∞∞k l
{
±± 	
try
≤≤ 
{
≥≥ 
if
¥¥ 
(
¥¥ 
atencion
¥¥ 
.
¥¥ 
Ordenes
¥¥ $
.
¥¥$ %
Count
¥¥% *
(
¥¥* +
)
¥¥+ ,
<=
¥¥- /
$num
¥¥0 1
)
¥¥1 2
{
µµ 
throw
∂∂ 
new
∂∂ 
LogicaException
∂∂ -
(
∂∂- .
$str
∂∂. m
)
∂∂m n
;
∂∂n o
}
∑∑ 
foreach
∏∏ 
(
∏∏ 
var
∏∏ 
detalle
∏∏ $
in
∏∏% '
atencion
∏∏( 0
.
∏∏0 1
Ordenes
∏∏1 8
.
∏∏8 9

SelectMany
∏∏9 C
(
∏∏C D
o
∏∏D E
=>
∏∏F H
o
∏∏I J
.
∏∏J K
DetallesDeOrden
∏∏K Z
)
∏∏Z [
)
∏∏[ \
{
ππ 
if
∫∫ 
(
∫∫ 
detalle
∫∫ 
.
∫∫  
Importe
∫∫  '
==
∫∫( *
$num
∫∫+ ,
)
∫∫, -
{
ªª 
throw
ºº 
new
ºº !
LogicaException
ºº" 1
(
ºº1 2
$str
ºº2 t
)
ººt u
;
ººu v
}
ΩΩ 
}
ææ 
OperationResult
øø 
result
øø  &
=
øø' (
new
øø) ,
OperationResult
øø- <
(
øø< =
)
øø= >
;
øø> ?
if
¿¿ 
(
¿¿ 
atencion
¿¿ 
.
¿¿ 
EsAtencionConMesa
¿¿ .
)
¿¿. /
{
¡¡ 
Mesa
¬¬ 
mesa
¬¬ 
=
¬¬ 
new
¬¬  #
Mesa
¬¬$ (
(
¬¬( )
_mesaRepositorio
¬¬) 9
.
¬¬9 :
ObtenerMesa
¬¬: E
(
¬¬E F
atencion
¬¬F N
.
¬¬N O
Mesa
¬¬O S
.
¬¬S T
Id
¬¬T V
)
¬¬V W
)
¬¬W X
;
¬¬X Y
if
√√ 
(
√√ 
mesa
√√ 
.
√√ 
EstadoOcupado
√√ *
)
√√* +
{
ƒƒ 
throw
≈≈ 
new
≈≈ !
LogicaException
≈≈" 1
(
≈≈1 2
$str
≈≈2 |
)
≈≈| }
;
≈≈} ~
}
∆∆ 
var
«« 
ordenConAtencion
«« (
=
««) *%
GenerarOrdenConAtencion
««+ B
(
««B C
atencion
««C K
,
««K L
sesion
««M S
)
««S T
;
««T U
Actor_negocio
…… !
mesaActorNegocio
……" 2
=
……3 4
_actorRepositorio
……5 F
.
……F G#
obtenerActorDeNegocio
……G \
(
……\ ]
atencion
……] e
.
……e f
Mesa
……f j
.
……j k
Id
……k m
,
……m n"
RestauranteSettings……o Ç
.……Ç É
Default……É ä
.……ä ã
	IdRolMesa……ã î
)……î ï
;……ï ñ
mesaActorNegocio
   $
.
  $ %

indicador1
  % /
=
  0 1
true
  2 6
;
  6 7
result
ÃÃ 
=
ÃÃ ,
GuardarAtencionYActualizarMesa
ÃÃ ;
(
ÃÃ; <
ordenConAtencion
ÃÃ< L
,
ÃÃL M
mesaActorNegocio
ÃÃN ^
)
ÃÃ^ _
;
ÃÃ_ `
var
ÕÕ 
orden
ÕÕ 
=
ÕÕ 
atencion
ÕÕ  (
.
ÕÕ( )
Ordenes
ÕÕ) 0
=
ÕÕ1 2
new
ÕÕ3 6
List
ÕÕ7 ;
<
ÕÕ; <
Orden_Atencion
ÕÕ< J
>
ÕÕJ K
(
ÕÕK L
)
ÕÕL M
{
ÕÕN O%
_restauranteRepositorio
ÕÕP g
.
ÕÕg hd
UObtenerOrdenDeAtencionIncluidoDetallesDeOrdenItemsDeRestauranteYDetallesDeComplementoÕÕh Ω
(ÕÕΩ æ 
ordenConAtencionÕÕæ Œ
.ÕÕŒ œ
idÕÕœ —
)ÕÕ— “
}ÕÕ” ‘
;ÕÕ‘ ’
atencion
ŒŒ 
.
ŒŒ 
Id
ŒŒ 
=
ŒŒ  !
ordenConAtencion
ŒŒ" 2
.
ŒŒ2 3
Transaccion2
ŒŒ3 ?
.
ŒŒ? @
id
ŒŒ@ B
;
ŒŒB C
atencion
œœ 
.
œœ 
Estado
œœ #
=
œœ$ %
MaestroSettings
œœ& 5
.
œœ5 6
Default
œœ6 =
.
œœ= >.
 IdDetalleMaestroEstadoRegistrado
œœ> ^
;
œœ^ _
result
–– 
.
–– 
information
–– &
=
––' (
atencion
––) 1
;
––1 2
}
—— 
else
““ 
{
”” 
var
‘‘ 
mesaActorNegocio
‘‘ (
=
‘‘) *,
GenerarActorDeNegocioDesdeMesa
‘‘+ I
(
‘‘I J
new
‘‘J M
Mesa
‘‘N R
{
’’ 
Nombre
÷÷ 
=
÷÷  
atencion
÷÷! )
.
÷÷) *
Cliente
÷÷* 1
,
÷÷1 2
Columna
◊◊ 
=
◊◊  !
$num
◊◊" #
,
◊◊# $
Fila
ÿÿ 
=
ÿÿ 
$num
ÿÿ  
,
ÿÿ  !
EstadoOcupado
ŸŸ %
=
ŸŸ& '
true
ŸŸ( ,
,
ŸŸ, -

IdAmbiente
⁄⁄ "
=
⁄⁄# $
atencion
⁄⁄% -
.
⁄⁄- .
Mesa
⁄⁄. 2
.
⁄⁄2 3

IdAmbiente
⁄⁄3 =
}
€€ 
)
€€ 
;
€€ 
var
‹‹ 
ordenConAtencion
‹‹ (
=
‹‹) *%
GenerarOrdenConAtencion
‹‹+ B
(
‹‹B C
atencion
‹‹C K
,
‹‹K L
sesion
‹‹M S
)
‹‹S T
;
‹‹T U
ordenConAtencion
›› $
.
››$ %
Transaccion2
››% 1
.
››1 2

indicador1
››2 <
=
››= >
!
››? @
atencion
››@ H
.
››H I
EsAtencionConMesa
››I Z
;
››Z [
ordenConAtencion
ﬁﬁ $
.
ﬁﬁ$ %
Transaccion2
ﬁﬁ% 1
.
ﬁﬁ1 2

indicador2
ﬁﬁ2 <
=
ﬁﬁ= >
atencion
ﬁﬁ? G
.
ﬁﬁG H#
EsAtencionPorDelivery
ﬁﬁH ]
;
ﬁﬁ] ^
result
‡‡ 
=
‡‡ '
GuardarAtencionYCrearMesa
‡‡ 6
(
‡‡6 7
ordenConAtencion
‡‡7 G
,
‡‡G H
mesaActorNegocio
‡‡I Y
)
‡‡Y Z
;
‡‡Z [
var
·· 
orden
·· 
=
·· 
atencion
··  (
.
··( )
Ordenes
··) 0
=
··1 2
new
··3 6
List
··7 ;
<
··; <
Orden_Atencion
··< J
>
··J K
(
··K L
)
··L M
{
··N O%
_restauranteRepositorio
··P g
.
··g hd
UObtenerOrdenDeAtencionIncluidoDetallesDeOrdenItemsDeRestauranteYDetallesDeComplemento··h Ω
(··Ω æ 
ordenConAtencion··æ Œ
.··Œ œ
id··œ —
)··— “
}··” ‘
;··‘ ’
atencion
‚‚ 
.
‚‚ 
Id
‚‚ 
=
‚‚  !
ordenConAtencion
‚‚" 2
.
‚‚2 3
Transaccion2
‚‚3 ?
.
‚‚? @
id
‚‚@ B
;
‚‚B C
atencion
„„ 
.
„„ 
Mesa
„„ !
.
„„! "
Id
„„" $
=
„„% &
mesaActorNegocio
„„' 7
.
„„7 8
id
„„8 :
;
„„: ;
atencion
‰‰ 
.
‰‰ 
Mesa
‰‰ !
.
‰‰! "
Nombre
‰‰" (
=
‰‰) *
mesaActorNegocio
‰‰+ ;
.
‰‰; <
Actor
‰‰< A
.
‰‰A B
primer_nombre
‰‰B O
;
‰‰O P
atencion
ÂÂ 
.
ÂÂ 
Mesa
ÂÂ !
.
ÂÂ! "
JsonData
ÂÂ" *
=
ÂÂ+ ,
mesaActorNegocio
ÂÂ- =
.
ÂÂ= >
extension_json
ÂÂ> L
;
ÂÂL M
atencion
ÊÊ 
.
ÊÊ 
Estado
ÊÊ #
=
ÊÊ$ %
MaestroSettings
ÊÊ& 5
.
ÊÊ5 6
Default
ÊÊ6 =
.
ÊÊ= >.
 IdDetalleMaestroEstadoRegistrado
ÊÊ> ^
;
ÊÊ^ _
result
ÁÁ 
.
ÁÁ 
information
ÁÁ &
=
ÁÁ' (
atencion
ÁÁ) 1
;
ÁÁ1 2
}
ËË 
return
ÈÈ 
result
ÈÈ 
;
ÈÈ 
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
e
ÎÎ 
)
ÎÎ 
{
ÏÏ 
throw
ÌÌ 
e
ÌÌ 
;
ÌÌ 
}
ÓÓ 
}
 	
public
ÒÒ 
Transaccion
ÒÒ %
GenerarOrdenConAtencion
ÒÒ 2
(
ÒÒ2 3!
AtencionRestaurante
ÒÒ3 F
atencion
ÒÒG O
,
ÒÒO P
SesionRestaurante
ÒÒQ b
sesion
ÒÒc i
)
ÒÒi j
{
ÚÚ 	
var
ÛÛ 
fechaActual
ÛÛ 
=
ÛÛ 
DateTimeUtil
ÛÛ *
.
ÛÛ* +
FechaActual
ÛÛ+ 6
(
ÛÛ6 7
)
ÛÛ7 8
;
ÛÛ8 9
Transaccion
ÙÙ !
atencionTransaccion
ÙÙ +
=
ÙÙ, -,
ConvertirAtencionEnTransaccion
ÙÙ. L
(
ÙÙL M
atencion
ÙÙM U
,
ÙÙU V
sesion
ÙÙW ]
)
ÙÙ] ^
;
ÙÙ^ _!
atencionTransaccion
ıı 
.
ıı  
fecha_inicio
ıı  ,
=
ıı- .
fechaActual
ıı/ :
;
ıı: ;!
atencionTransaccion
ˆˆ 
.
ˆˆ  
	fecha_fin
ˆˆ  )
=
ˆˆ* +
fechaActual
ˆˆ, 7
;
ˆˆ7 8!
atencionTransaccion
˜˜ 
.
˜˜  $
fecha_registro_sistema
˜˜  6
=
˜˜7 8
fechaActual
˜˜9 D
;
˜˜D E!
atencionTransaccion
¯¯ 
.
¯¯  %
fecha_registro_contable
¯¯  7
=
¯¯8 9
fechaActual
¯¯: E
;
¯¯E F!
atencionTransaccion
˙˙ 
.
˙˙   
Estado_transaccion
˙˙  2
.
˙˙2 3
Add
˙˙3 6
(
˙˙6 7
new
˙˙7 : 
Estado_transaccion
˙˙; M
(
˙˙M N
)
˙˙N O
{
˚˚ 
	id_estado
¸¸ 
=
¸¸ 
MaestroSettings
¸¸ +
.
¸¸+ ,
Default
¸¸, 3
.
¸¸3 4.
 IdDetalleMaestroEstadoRegistrado
¸¸4 T
,
¸¸T U
fecha
˝˝ 
=
˝˝ 
fechaActual
˝˝ #
,
˝˝# $
id_empleado
˛˛ 
=
˛˛ 
sesion
˛˛ $
.
˛˛$ %
SesionDeUsuario
˛˛% 4
.
˛˛4 5
Empleado
˛˛5 =
.
˛˛= >
Id
˛˛> @
,
˛˛@ A

comentario
ˇˇ 
=
ˇˇ 
$str
ˇˇ O
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
Transaccion
ÇÇ 
ordenTransaccion
ÇÇ (
=
ÇÇ) *(
ConvertirOrdenATransaccion
ÇÇ+ E
(
ÇÇE F
atencion
ÇÇF N
.
ÇÇN O
Ordenes
ÇÇO V
.
ÇÇV W 
ElementAtOrDefault
ÇÇW i
(
ÇÇi j
$num
ÇÇj k
)
ÇÇk l
,
ÇÇl m
sesion
ÇÇn t
)
ÇÇt u
;
ÇÇu v
Comprobante
ÉÉ 
comprobante
ÉÉ #
=
ÉÉ$ % 
GenerarComprobante
ÉÉ& 8
(
ÉÉ8 9
sesion
ÉÉ9 ?
)
ÉÉ? @
;
ÉÉ@ A
ordenTransaccion
ÑÑ 
.
ÑÑ 
codigo
ÑÑ #
=
ÑÑ$ %
comprobante
ÑÑ& 1
.
ÑÑ1 2
numero_serie
ÑÑ2 >
+
ÑÑ? @
$str
ÑÑA F
+
ÑÑG H
comprobante
ÑÑI T
.
ÑÑT U
numero
ÑÑU [
;
ÑÑ[ \
ordenTransaccion
ÖÖ 
.
ÖÖ 
Comprobante
ÖÖ (
=
ÖÖ) *
comprobante
ÖÖ+ 6
;
ÖÖ6 7
ordenTransaccion
ÜÜ 
.
ÜÜ 
Transaccion2
ÜÜ )
=
ÜÜ* +!
atencionTransaccion
ÜÜ, ?
;
ÜÜ? @
ordenTransaccion
áá 
.
áá 
fecha_inicio
áá )
=
áá* +
fechaActual
áá, 7
;
áá7 8
ordenTransaccion
àà 
.
àà 
	fecha_fin
àà &
=
àà' (
fechaActual
àà) 4
;
àà4 5
ordenTransaccion
ââ 
.
ââ %
fecha_registro_contable
ââ 4
=
ââ5 6
fechaActual
ââ7 B
;
ââB C
ordenTransaccion
ää 
.
ää $
fecha_registro_sistema
ää 3
=
ää4 5
fechaActual
ää6 A
;
ääA B
return
ãã 
ordenTransaccion
ãã #
;
ãã# $
}
åå 	
public
éé 
OperationResult
éé ,
GuardarAtencionYActualizarMesa
éé =
(
éé= >
Transaccion
éé> I
orden
ééJ O
,
ééO P
Actor_negocio
ééQ ^
mesa
éé_ c
)
ééc d
{
èè 	
OperationResult
êê 
	resultado
êê %
=
êê& '
null
êê( ,
;
êê, -
bool
ëë 7
)hayProblemaDeConcurrenciaSerieComprobante
ëë :
;
ëë: ;
do
íí 
{
ìì 
try
îî 
{
ïï 
	resultado
ññ 
=
ññ %
_transaccionRepositorio
ññ  7
.
ññ7 86
(CrearTransaccionYModificarActorDeNegocio
ññ8 `
(
ññ` a
orden
ñña f
,
ññf g
mesa
ññh l
)
ññl m
;
ññm n
}
óó 
catch
òò 
(
òò '
SerieComprobanteException
òò 0
e
òò1 2
)
òò2 3
{
ôô %
_transaccionRepositorio
öö +
.
öö+ ,
RefreshEntity
öö, 9
(
öö9 :
e
öö: ;
.
öö; <
serieComprobante
öö< L
)
ööL M
;
ööM N
_operacionLogica
úú $
.
úú$ %?
1RegenerarNumeracionComprobantePropioAutonumerable
úú% V
(
úúV W
orden
úúW \
.
úú\ ]
Comprobante
úú] h
,
úúh i
e
úúj k
.
úúk l
serieComprobante
úúl |
)
úú| }
;
úú} ~7
)hayProblemaDeConcurrenciaSerieComprobante
ùù =
=
ùù> ?
true
ùù@ D
;
ùùD E
}
ûû 
catch
üü 
(
üü 
	Exception
üü  
ex
üü! #
)
üü# $
{
†† 
throw
°° 
ex
°° 
;
°° 
}
¢¢ 
return
££ 
	resultado
££  
;
££  !
}
§§ 
while
•• 
(
•• 7
)hayProblemaDeConcurrenciaSerieComprobante
•• <
)
••< =
;
••= >
}
¶¶ 	
public
®® 
OperationResult
®® '
GuardarAtencionYCrearMesa
®® 8
(
®®8 9
Transaccion
®®9 D
orden
®®E J
,
®®J K
Actor_negocio
®®L Y
mesa
®®Z ^
)
®®^ _
{
©© 	
OperationResult
™™ 
	resultado
™™ %
=
™™& '
null
™™( ,
;
™™, -
bool
´´ 7
)hayProblemaDeConcurrenciaSerieComprobante
´´ :
;
´´: ;
do
¨¨ 
{
≠≠ 
try
ÆÆ 
{
ØØ 
	resultado
∞∞ 
=
∞∞ %
_transaccionRepositorio
∞∞  7
.
∞∞7 82
$CrearTransaccionYCrearActorDeNegocio
∞∞8 \
(
∞∞\ ]
orden
∞∞] b
,
∞∞b c
mesa
∞∞d h
)
∞∞h i
;
∞∞i j
}
±± 
catch
≤≤ 
(
≤≤ '
SerieComprobanteException
≤≤ 0
e
≤≤1 2
)
≤≤2 3
{
≥≥ %
_transaccionRepositorio
¥¥ +
.
¥¥+ ,
RefreshEntity
¥¥, 9
(
¥¥9 :
e
¥¥: ;
.
¥¥; <
serieComprobante
¥¥< L
)
¥¥L M
;
¥¥M N
_operacionLogica
∂∂ $
.
∂∂$ %?
1RegenerarNumeracionComprobantePropioAutonumerable
∂∂% V
(
∂∂V W
orden
∂∂W \
.
∂∂\ ]
Comprobante
∂∂] h
,
∂∂h i
e
∂∂j k
.
∂∂k l
serieComprobante
∂∂l |
)
∂∂| }
;
∂∂} ~7
)hayProblemaDeConcurrenciaSerieComprobante
∑∑ =
=
∑∑> ?
true
∑∑@ D
;
∑∑D E
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ  
ex
ππ! #
)
ππ# $
{
∫∫ 
throw
ªª 
ex
ªª 
;
ªª 
}
ºº 
return
ΩΩ 
	resultado
ΩΩ  
;
ΩΩ  !
}
ææ 
while
øø 
(
øø 7
)hayProblemaDeConcurrenciaSerieComprobante
øø <
)
øø< =
;
øø= >
}
¿¿ 	
public
¡¡ 
OperationResult
¡¡ $
AgregarOrdenDeAtencion
¡¡ 5
(
¡¡5 6
Orden_Atencion
¡¡6 D
orden
¡¡E J
,
¡¡J K
SesionRestaurante
¡¡L ]
sesion
¡¡^ d
)
¡¡d e
{
¬¬ 	
try
√√ 
{
ƒƒ !
AtencionRestaurante
≈≈ #
atencion
≈≈$ ,
=
≈≈- ."
_atencionRepositorio
≈≈/ C
.
≈≈C DM
>ObtenerAtencionConDatosMinimosDeOrdenYDetallesSoloParaCerrarla≈≈D Ç
(≈≈Ç É
orden≈≈É à
.≈≈à â

IdAtencion≈≈â ì
)≈≈ì î
;≈≈î ï
if
∆∆ 
(
∆∆ 
atencion
∆∆ 
.
∆∆ 
Estado
∆∆ #
!=
∆∆$ &
MaestroSettings
∆∆' 6
.
∆∆6 7
Default
∆∆7 >
.
∆∆> ?.
 IdDetalleMaestroEstadoRegistrado
∆∆? _
)
∆∆_ `
{
«« 
throw
»» 
new
»» 
LogicaException
»» -
(
»»- .
$str»». ó
)»»ó ò
;»»ò ô
}
…… 
foreach
   
(
   
var
   
detalle
   $
in
  % '
orden
  ( -
.
  - .
DetallesDeOrden
  . =
)
  = >
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
detalle
ÃÃ 
.
ÃÃ  
Importe
ÃÃ  '
==
ÃÃ( *
$num
ÃÃ+ ,
)
ÃÃ, -
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ !
LogicaException
ŒŒ" 1
(
ŒŒ1 2
$strŒŒ2 Ä
)ŒŒÄ Å
;ŒŒÅ Ç
}
œœ 
}
–– 
Transaccion
—— 
ordenTransaccion
—— ,
=
——- .(
ConvertirOrdenATransaccion
——/ I
(
——I J
orden
——J O
,
——O P
sesion
——Q W
)
——W X
;
——X Y
OperationResult
““ 
result
““  &
=
““' (
new
““) ,
OperationResult
““- <
(
““< =
)
““= >
;
““> ?
bool
”” 7
)hayProblemaDeConcurrenciaSerieComprobante
”” >
;
””> ?
do
‘‘ 
{
’’ 7
)hayProblemaDeConcurrenciaSerieComprobante
÷÷ =
=
÷÷> ?
false
÷÷@ E
;
÷÷E F
try
◊◊ 
{
ÿÿ 
var
ŸŸ 
fechaActual
ŸŸ '
=
ŸŸ( )
DateTimeUtil
ŸŸ* 6
.
ŸŸ6 7
FechaActual
ŸŸ7 B
(
ŸŸB C
)
ŸŸC D
;
ŸŸD E
Modelo
⁄⁄ 
.
⁄⁄ 
	Entidades
⁄⁄ (
.
⁄⁄( )
Comprobante
⁄⁄) 4
comprobante
⁄⁄5 @
=
⁄⁄A B 
GenerarComprobante
⁄⁄C U
(
⁄⁄U V
sesion
⁄⁄V \
)
⁄⁄\ ]
;
⁄⁄] ^
ordenTransaccion
€€ (
.
€€( )
codigo
€€) /
=
€€0 1
comprobante
€€2 =
.
€€= >
numero_serie
€€> J
+
€€K L
$str
€€M R
+
€€S T
comprobante
€€U `
.
€€` a
numero
€€a g
;
€€g h
ordenTransaccion
‹‹ (
.
‹‹( )
Comprobante
‹‹) 4
=
‹‹5 6
comprobante
‹‹7 B
;
‹‹B C
ordenTransaccion
›› (
.
››( )"
id_transaccion_padre
››) =
=
››> ?
orden
››@ E
.
››E F

IdAtencion
››F P
;
››P Q
ordenTransaccion
ﬁﬁ (
.
ﬁﬁ( )
fecha_inicio
ﬁﬁ) 5
=
ﬁﬁ6 7
fechaActual
ﬁﬁ8 C
;
ﬁﬁC D
ordenTransaccion
ﬂﬂ (
.
ﬂﬂ( )
	fecha_fin
ﬂﬂ) 2
=
ﬂﬂ3 4
fechaActual
ﬂﬂ5 @
;
ﬂﬂ@ A
ordenTransaccion
‡‡ (
.
‡‡( )%
fecha_registro_contable
‡‡) @
=
‡‡A B
fechaActual
‡‡C N
;
‡‡N O
ordenTransaccion
·· (
.
··( )$
fecha_registro_sistema
··) ?
=
··@ A
fechaActual
··B M
;
··M N
result
„„ 
=
„„  %
_transaccionRepositorio
„„! 8
.
„„8 9
CrearTransaccion
„„9 I
(
„„I J
ordenTransaccion
„„J Z
)
„„Z [
;
„„[ \
var
‰‰ 
result2
‰‰ #
=
‰‰$ %%
_restauranteRepositorio
‰‰& =
.
‰‰= >
CalcularAtencion
‰‰> N
(
‰‰N O
orden
‰‰O T
.
‰‰T U

IdAtencion
‰‰U _
)
‰‰_ `
;
‰‰` a
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ '
SerieComprobanteException
ÊÊ 4
e
ÊÊ5 6
)
ÊÊ6 7
{
ÁÁ %
_transaccionRepositorio
ËË /
.
ËË/ 0
RefreshEntity
ËË0 =
(
ËË= >
e
ËË> ?
.
ËË? @
serieComprobante
ËË@ P
)
ËËP Q
;
ËËQ R
_operacionLogica
ÍÍ (
.
ÍÍ( )?
1RegenerarNumeracionComprobantePropioAutonumerable
ÍÍ) Z
(
ÍÍZ [
ordenTransaccion
ÍÍ[ k
.
ÍÍk l
Comprobante
ÍÍl w
,
ÍÍw x
e
ÍÍy z
.
ÍÍz {
serieComprobanteÍÍ{ ã
)ÍÍã å
;ÍÍå ç7
)hayProblemaDeConcurrenciaSerieComprobante
ÎÎ A
=
ÎÎB C
true
ÎÎD H
;
ÎÎH I
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ $
ex
ÌÌ% '
)
ÌÌ' (
{
ÓÓ 
throw
ÔÔ 
ex
ÔÔ  
;
ÔÔ  !
}
 
orden
ÒÒ 
=
ÒÒ %
_restauranteRepositorio
ÒÒ 3
.
ÒÒ3 4d
UObtenerOrdenDeAtencionIncluidoDetallesDeOrdenItemsDeRestauranteYDetallesDeComplementoÒÒ4 â
(ÒÒâ ä 
ordenTransaccionÒÒä ö
.ÒÒö õ
idÒÒõ ù
)ÒÒù û
;ÒÒû ü
result
ÛÛ 
.
ÛÛ 
information
ÛÛ &
=
ÛÛ' (
orden
ÛÛ) .
;
ÛÛ. /
return
ÙÙ 
result
ÙÙ !
;
ÙÙ! "
}
ıı 
while
ˆˆ 
(
ˆˆ 7
)hayProblemaDeConcurrenciaSerieComprobante
ˆˆ @
)
ˆˆ@ A
;
ˆˆA B
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
e
˙˙ 
)
˙˙ 
{
˚˚ 
throw
¸¸ 
new
¸¸ 
LogicaException
¸¸ )
(
¸¸) *
$str
¸¸* K
,
¸¸K L
e
¸¸M N
)
¸¸N O
;
¸¸O P
}
˝˝ 
}
ˇˇ 	
public
ÉÉ 
Modelo
ÉÉ 
.
ÉÉ 
	Entidades
ÉÉ 
.
ÉÉ  
Comprobante
ÉÉ  + 
GenerarComprobante
ÉÉ, >
(
ÉÉ> ?
SesionRestaurante
ÉÉ? P
sesionRestaurante
ÉÉQ b
)
ÉÉb c
{
ÑÑ 	
Serie_comprobante
ÜÜ 
serie
ÜÜ #
=
ÜÜ$ %%
_transaccionRepositorio
ÜÜ& =
.
ÜÜ= >M
?ObtenerPrimeraSerieDeComprobantePorCentroDeAtencionYComprobante
ÜÜ> }
(
ÜÜ} ~"
RestauranteSettingsÜÜ~ ë
.ÜÜë í
DefaultÜÜí ô
.ÜÜô ö4
$IdDetalleMaestroTipoComprobanteOrdenÜÜö æ
,ÜÜæ ø!
sesionRestauranteÜÜ¿ —
.ÜÜ— “
SesionDeUsuarioÜÜ“ ·
.ÜÜ· ‚.
IdCentroDeAtencionSeleccionadoÜÜ‚ Ä
)ÜÜÄ Å
;ÜÜÅ Ç
if
áá 
(
áá 
serie
áá 
==
áá 
null
áá 
)
áá 
{
àà 
throw
ââ 
new
ââ 
LogicaException
ââ )
(
ââ) *
$str
ââ* w
)
ââw x
;
ââx y
}
ää 
Modelo
åå 
.
åå 
	Entidades
åå 
.
åå 
Comprobante
åå (
comprobante
åå) 4
=
åå5 6
_operacionLogica
åå7 G
.
ååG H3
%GenerarComprobantePropioAutonumerable
ååH m
(
ååm n
serie
åån s
.
åås t
id
ååt v
)
ååv w
;
ååw x
return
çç 
comprobante
çç 
;
çç 
}
éé 	
public
ëë 
Transaccion
ëë ,
ConvertirAtencionEnTransaccion
ëë 9
(
ëë9 :!
AtencionRestaurante
ëë: M
atencion
ëëN V
,
ëëV W
SesionRestaurante
ëëX i
sesion
ëëj p
)
ëëp q
{
íí 	
Transaccion
îî 
transaccion
îî #
=
îî$ %
new
îî& )
Transaccion
îî* 5
(
îî5 6
)
îî6 7
{
ïï 
codigo
ññ 
=
ññ 
$str
ññ 
,
ññ 
id_comprobante
óó 
=
óó  !
TransaccionSettings
óó! 4
.
óó4 5
Default
óó5 <
.
óó< =#
IdComprobanteGenerico
óó= R
,
óóR S
tipo_cambio
òò 
=
òò 
sesion
òò $
.
òò$ %
SesionDeUsuario
òò% 4
.
òò4 5
TipoDeCambio
òò5 A
.
òòA B

ValorVenta
òòB L
,
òòL M
importe_total
ôô 
=
ôô 
atencion
ôô  (
.
ôô( )
ImporteAtencion
ôô) 8
,
ôô8 9&
id_actor_negocio_interno
öö (
=
öö) *
sesion
öö+ 1
.
öö1 2
IdCentroAtencion
öö2 B
,
ööB C'
id_actor_negocio_interno1
õõ )
=
õõ* +
atencion
õõ, 4
.
õõ4 5
Mesa
õõ5 9
.
õõ9 :
Id
õõ: <
,
õõ< =&
id_actor_negocio_externo
úú (
=
úú) *
ActorSettings
úú+ 8
.
úú8 9
Default
úú9 @
.
úú@ A
IdClienteGenerico
úúA R
,
úúR S
	id_moneda
ùù 
=
ùù 
MaestroSettings
ùù +
.
ùù+ ,
Default
ùù, 3
.
ùù3 4)
IdDetalleMaestroMonedaSoles
ùù4 O
,
ùùO P
id_empleado
ûû 
=
ûû 
sesion
ûû $
.
ûû$ %
SesionDeUsuario
ûû% 4
.
ûû4 5
Empleado
ûû5 =
.
ûû= >
Id
ûû> @
,
ûû@ A
id
üü 
=
üü 
atencion
üü 
.
üü 
Id
üü  
,
üü  !!
id_tipo_transaccion
†† #
=
††$ %!
RestauranteSettings
††& 9
.
††9 :
Default
††: A
.
††A B4
&IdTipoTransaccionAtencionDeRestaurante
††B h
,
††h i

comentario
°° 
=
°° 
atencion
°° %
.
°°% &

TipoDePago
°°& 0
.
°°0 1
ToString
°°1 9
(
°°9 :
)
°°: ;
,
°°; <
id_unidad_negocio
¢¢ !
=
¢¢" #
MaestroSettings
¢¢$ 3
.
¢¢3 4
Default
¢¢4 ;
.
¢¢; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
¢¢< f
,
¢¢f g
es_concreta
££ 
=
££ 
false
££ #
,
££# $
enum1
§§ 
=
§§ 
(
§§ 
int
§§ 
)
§§ 
TipoPago
§§ %
.
§§% &
Ninguno
§§& -
}
•• 
;
•• 
return
ßß 
transaccion
ßß 
;
ßß 
}
®® 	
private
©© 
Transaccion
©© (
ConvertirOrdenATransaccion
©© 6
(
©©6 7
Orden_Atencion
©©7 E
orden
©©F K
,
©©K L
SesionRestaurante
©©M ^
sesion
©©_ e
)
©©e f
{
™™ 	
Transaccion
´´ 
transaccion
´´ #
=
´´$ %
new
´´& )
Transaccion
´´* 5
(
´´5 6
)
´´6 7
{
¨¨ 
codigo
≠≠ 
=
≠≠ 
orden
≠≠ 
.
≠≠ 
Codigo
≠≠ %
,
≠≠% &"
id_transaccion_padre
ÆÆ $
=
ÆÆ% &
orden
ÆÆ' ,
.
ÆÆ, -

IdAtencion
ÆÆ- 7
,
ÆÆ7 8
importe_total
ØØ 
=
ØØ 
orden
ØØ  %
.
ØØ% &
ImporteOrden
ØØ& 2
,
ØØ2 3
id
∞∞ 
=
∞∞ 
orden
∞∞ 
.
∞∞ 
Id
∞∞ 
,
∞∞ &
id_actor_negocio_interno
±± (
=
±±) *
sesion
±±+ 1
.
±±1 2
SesionDeUsuario
±±2 A
.
±±A B
Empleado
±±B J
.
±±J K
TieneRol
±±K S
(
±±S T
ActorSettings
±±T a
.
±±a b
Default
±±b i
.
±±i j
IdRolCajero
±±j u
)
±±u v
?
±±w x
orden
±±y ~
.
±±~ 
Mozo±± É
.±±É Ñ
Id±±Ñ Ü
:±±á à
sesion±±â è
.±±è ê
SesionDeUsuario±±ê ü
.±±ü †
Empleado±±† ®
.±±® ©
Id±±© ´
,±±´ ¨&
id_actor_negocio_externo
≤≤ (
=
≤≤) *
ActorSettings
≤≤+ 8
.
≤≤8 9
Default
≤≤9 @
.
≤≤@ A
IdClienteGenerico
≤≤A R
,
≤≤R S
id_empleado
≥≥ 
=
≥≥ 
sesion
≥≥ $
.
≥≥$ %
SesionDeUsuario
≥≥% 4
.
≥≥4 5
Empleado
≥≥5 =
.
≥≥= >
Id
≥≥> @
,
≥≥@ A
id_estado_actual
¥¥  
=
¥¥! "
orden
¥¥# (
.
¥¥( )
Estado
¥¥) /
,
¥¥/ 0
tipo_cambio
µµ 
=
µµ 
sesion
µµ $
.
µµ$ %
SesionDeUsuario
µµ% 4
.
µµ4 5
TipoDeCambio
µµ5 A
.
µµA B

ValorVenta
µµB L
,
µµL M
	id_moneda
∂∂ 
=
∂∂ 
MaestroSettings
∂∂ +
.
∂∂+ ,
Default
∂∂, 3
.
∂∂3 4)
IdDetalleMaestroMonedaSoles
∂∂4 O
,
∂∂O P!
Detalle_transaccion
∑∑ #
=
∑∑$ %
orden
∑∑& +
.
∑∑+ ,
DetallesDeOrden
∑∑, ;
.
∑∑; <
Select
∑∑< B
(
∑∑B C
ddo
∑∑C F
=>
∑∑G I:
,ConvertirDetalleDeOrdenADetalleDeTransaccion
∑∑J v
(
∑∑v w
ddo
∑∑w z
)
∑∑z {
)
∑∑{ |
.
∑∑| }
ToList∑∑} É
(∑∑É Ñ
)∑∑Ñ Ö
,∑∑Ö Ü!
id_tipo_transaccion
∏∏ #
=
∏∏$ %!
RestauranteSettings
∏∏& 9
.
∏∏9 :
Default
∏∏: A
.
∏∏A B1
#IdTipoTransaccionOrdenDeRestaurante
∏∏B e
,
∏∏e f
id_unidad_negocio
ππ !
=
ππ" #
MaestroSettings
ππ$ 3
.
ππ3 4
Default
ππ4 ;
.
ππ; <8
*IdDetalleMaestroUnidadDeNegocioTransversal
ππ< f
,
ππf g
es_concreta
∫∫ 
=
∫∫ 
false
∫∫ #
,
∫∫# $

comentario
ªª 
=
ªª 
$str
ªª 
}
ºº 
;
ºº 
return
ææ 
transaccion
ææ 
;
ææ 
}
øø 	
private
¿¿ !
Detalle_transaccion
¿¿ #:
,ConvertirDetalleDeOrdenADetalleDeTransaccion
¿¿$ P
(
¿¿P Q
DetalleOrden
¿¿Q ]
detalleOrden
¿¿^ j
)
¿¿j k
{
¡¡ 	!
Detalle_transaccion
¬¬ 
detalle
¬¬  '
=
¬¬( )
new
¬¬* -!
Detalle_transaccion
¬¬. A
(
¬¬A B
)
¬¬B C
{
√√ 
id
ƒƒ 
=
ƒƒ 
detalleOrden
ƒƒ !
.
ƒƒ! "
Id
ƒƒ" $
,
ƒƒ$ %
cantidad
≈≈ 
=
≈≈ 
detalleOrden
≈≈ '
.
≈≈' (
Cantidad
≈≈( 0
,
≈≈0 1!
id_concepto_negocio
∆∆ #
=
∆∆$ %
detalleOrden
∆∆& 2
.
∆∆2 3
IdItem
∆∆3 9
,
∆∆9 :
precio_unitario
«« 
=
««  !
detalleOrden
««" .
.
««. /
Precio
««/ 5
,
««5 6%
indicadorMultiproposito
»» '
=
»»( )
detalleOrden
»»* 6
.
»»6 7
Estado
»»7 =
,
»»= >
total
…… 
=
…… 
detalleOrden
…… $
.
……$ %
Importe
……% ,
,
……, -
detalle
   
=
   
detalleOrden
   &
.
  & '(
DetalleItemRestauranteJson
  ' A
,
  A B
id_transaccion
ÀÀ 
=
ÀÀ  
detalleOrden
ÀÀ! -
.
ÀÀ- .
IdTransaccion
ÀÀ. ;
}
ÃÃ 
;
ÃÃ 
return
ÕÕ 
detalle
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
public
–– 
OperationResult
–– 
ActualizarMesa
–– -
(
––- .
Mesa
––. 2
mesa
––3 7
)
––7 8
{
—— 	
try
““ 
{
”” 
Mesa
‘‘ 

mesaActual
‘‘ 
=
‘‘  !
new
‘‘" %
Mesa
‘‘& *
(
‘‘* +
_mesaRepositorio
‘‘+ ;
.
‘‘; <
ObtenerMesa
‘‘< G
(
‘‘G H
mesa
‘‘H L
.
‘‘L M
Id
‘‘M O
)
‘‘O P
)
‘‘P Q
;
‘‘Q R
if
’’ 
(
’’ 

mesaActual
’’ 
.
’’ 
EstadoOcupado
’’ ,
)
’’, -
{
÷÷ 
throw
◊◊ 
new
◊◊ 
LogicaException
◊◊ -
(
◊◊- .
$str
◊◊. z
)
◊◊z {
;
◊◊{ |
}
ÿÿ 
Actor_negocio
ŸŸ 
	ActorMesa
ŸŸ '
=
ŸŸ( ) 
_actor_Repositorio
ŸŸ* <
.
ŸŸ< =#
ObtenerActorDeNegocio
ŸŸ= R
(
ŸŸR S
mesa
ŸŸS W
.
ŸŸW X
Id
ŸŸX Z
)
ŸŸZ [
;
ŸŸ[ \
	ActorMesa
€€ 
.
€€ 

indicador1
€€ $
=
€€% &
mesa
€€' +
.
€€+ ,
EstadoOcupado
€€, 9
;
€€9 :
	ActorMesa
‹‹ 
.
‹‹ 
extension_json
‹‹ (
=
‹‹) *
$str
‹‹+ 9
+
‹‹: ;
mesa
‹‹< @
.
‹‹@ A
Nombre
‹‹A G
+
‹‹H I
$str
‹‹J V
+
‹‹W X
mesa
‹‹Y ]
.
‹‹] ^
Fila
‹‹^ b
+
‹‹c d
$str
‹‹e q
+
‹‹r s
mesa
‹‹t x
.
‹‹x y
Columna‹‹y Ä
+‹‹Å Ç
$str‹‹É á
;‹‹á à
	ActorMesa
›› 
.
›› 
Actor
›› 
.
››  
primer_nombre
››  -
=
››. /
mesa
››0 4
.
››4 5
Nombre
››5 ;
;
››; <
var
ﬂﬂ 
result
ﬂﬂ 
=
ﬂﬂ  
_actor_Repositorio
ﬂﬂ /
.
ﬂﬂ/ 01
#ActualizarActorNegocioIncluidoActor
ﬂﬂ0 S
(
ﬂﬂS T
	ActorMesa
ﬂﬂT ]
)
ﬂﬂ] ^
;
ﬂﬂ^ _
return
‡‡ 
result
‡‡ 
;
‡‡ 
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
e
‚‚ 
)
‚‚ 
{
„„ 
throw
‰‰ 
new
‰‰ 
LogicaException
‰‰ )
(
‰‰) *
$str
‰‰* P
,
‰‰P Q
e
‰‰R S
)
‰‰S T
;
‰‰T U
}
ÂÂ 
}
ÊÊ 	
public
ÁÁ 
OperationResult
ÁÁ 
EliminarMesa
ÁÁ +
(
ÁÁ+ ,
int
ÁÁ, /
idMesa
ÁÁ0 6
)
ÁÁ6 7
{
ËË 	
try
ÈÈ 
{
ÍÍ 
Mesa
ÎÎ 
mesa
ÎÎ 
=
ÎÎ 
new
ÎÎ 
Mesa
ÎÎ  $
(
ÎÎ$ %
_mesaRepositorio
ÎÎ% 5
.
ÎÎ5 6
ObtenerMesa
ÎÎ6 A
(
ÎÎA B
idMesa
ÎÎB H
)
ÎÎH I
)
ÎÎI J
;
ÎÎJ K
if
ÏÏ 
(
ÏÏ 
mesa
ÏÏ 
.
ÏÏ 
EstadoOcupado
ÏÏ &
)
ÏÏ& '
{
ÌÌ 
throw
ÓÓ 
new
ÓÓ 
LogicaException
ÓÓ -
(
ÓÓ- .
$str
ÓÓ. x
)
ÓÓx y
;
ÓÓy z
}
ÔÔ 
Actor_negocio
 
	ActorMesa
 '
=
( ) 
_actor_Repositorio
* <
.
< =#
ObtenerActorDeNegocio
= R
(
R S
idMesa
S Y
)
Y Z
;
Z [
	ActorMesa
ÒÒ 
.
ÒÒ 

es_vigente
ÒÒ $
=
ÒÒ% &
false
ÒÒ' ,
;
ÒÒ, -
	ActorMesa
ÚÚ 
.
ÚÚ 
	fecha_fin
ÚÚ #
=
ÚÚ$ %
DateTimeUtil
ÚÚ& 2
.
ÚÚ2 3
FechaActual
ÚÚ3 >
(
ÚÚ> ?
)
ÚÚ? @
;
ÚÚ@ A
var
ÛÛ 
result
ÛÛ 
=
ÛÛ  
_actor_Repositorio
ÛÛ /
.
ÛÛ/ 01
#ActualizarActorNegocioIncluidoActor
ÛÛ0 S
(
ÛÛS T
	ActorMesa
ÛÛT ]
)
ÛÛ] ^
;
ÛÛ^ _
return
ÙÙ 
result
ÙÙ 
;
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
e
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
new
¯¯ 
LogicaException
¯¯ )
(
¯¯) *
$str
¯¯* N
,
¯¯N O
e
¯¯P Q
)
¯¯Q R
;
¯¯R S
}
˘˘ 
}
˙˙ 	
public
¸¸ 
OperationResult
¸¸ "
CambiarEstadoDeOrden
¸¸ 3
(
¸¸3 4
long
¸¸4 8
idOrden
¸¸9 @
,
¸¸@ A
int
¸¸B E
estado
¸¸F L
)
¸¸L M
{
˝˝ 	
try
˛˛ 
{
ˇˇ 
OperationResult
ÅÅ 
result
ÅÅ  &
=
ÅÅ' (
new
ÅÅ) ,
OperationResult
ÅÅ- <
(
ÅÅ< =
)
ÅÅ= >
;
ÅÅ> ?
Transaccion
ÇÇ 
orden
ÇÇ !
=
ÇÇ" #%
_transaccionRepositorio
ÇÇ$ ;
.
ÇÇ; < 
ObtenerTransaccion
ÇÇ< N
(
ÇÇN O
idOrden
ÇÇO V
)
ÇÇV W
;
ÇÇW X
orden
ÉÉ 
.
ÉÉ 
id_estado_actual
ÉÉ &
=
ÉÉ' (
estado
ÉÉ) /
;
ÉÉ/ 0
result
ÑÑ 
=
ÑÑ %
_transaccionRepositorio
ÑÑ 0
.
ÑÑ0 1#
ActualizarTransaccion
ÑÑ1 F
(
ÑÑF G
orden
ÑÑG L
)
ÑÑL M
;
ÑÑM N
return
ÖÖ 
result
ÖÖ 
;
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
e
áá 
)
áá 
{
àà 
throw
ââ 
e
ââ 
;
ââ 
}
ää 
}
åå 	
public
éé 
OperationResult
éé -
ActualizarImportesDeTransaccion
éé >
(
éé> ?
List
éé? C
<
ééC D
ItemGenerico
ééD P
>
ééP Q
nuevosImportes
ééR `
)
éé` a
{
èè 	
try
êê 
{
ëë 
OperationResult
íí 
result
íí  &
=
íí' (
new
íí) ,
OperationResult
íí- <
(
íí< =
)
íí= >
;
íí> ?
long
îî 
[
îî 
]
îî 
Ids
îî 
=
îî 
(
îî 
long
îî "
[
îî" #
]
îî# $
)
îî$ %
nuevosImportes
îî% 3
.
îî3 4
Select
îî4 :
(
îî: ;
ni
îî; =
=>
îî> @
(
îîA B
long
îîB F
)
îîF G
ni
îîG I
.
îîI J
Id
îîJ L
)
îîL M
;
îîM N
long
ïï 
[
ïï 
]
ïï 
Importes
ïï 
=
ïï  !
(
ïï" #
long
ïï# '
[
ïï' (
]
ïï( )
)
ïï) *
nuevosImportes
ïï* 8
.
ïï8 9
Select
ïï9 ?
(
ïï? @
ni
ïï@ B
=>
ïïC E
long
ïïF J
.
ïïJ K
Parse
ïïK P
(
ïïP Q
ni
ïïQ S
.
ïïS T
Valor
ïïT Y
)
ïïY Z
)
ïïZ [
;
ïï[ \
IEnumerable
ññ 
<
ññ 
Transaccion
ññ '
>
ññ' (
transacciones
ññ) 6
=
ññ7 8%
_transaccionRepositorio
ññ9 P
.
ññP Q"
ObtenerTransacciones
ññQ e
(
ññe f
Ids
ññf i
)
ññi j
.
ññj k
ToList
ññk q
(
ññq r
)
ññr s
;
ññs t
var
òò 
count
òò 
=
òò 
$num
òò 
;
òò 
foreach
ôô 
(
ôô 
var
ôô 
transaccion
ôô (
in
ôô) +
transacciones
ôô, 9
)
ôô9 :
{
öö 
transaccion
õõ 
.
õõ  
importe_total
õõ  -
=
õõ. /
Importes
õõ0 8
[
õõ8 9
count
õõ9 >
]
õõ> ?
;
õõ? @%
_transaccionRepositorio
úú +
.
úú+ ,#
ActualizarTransaccion
úú, A
(
úúA B
transaccion
úúB M
)
úúM N
;
úúN O
count
ùù 
++
ùù 
;
ùù 
}
ûû 
return
†† 
result
†† 
;
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
e
¢¢ 
)
¢¢ 
{
££ 
throw
§§ 
e
§§ 
;
§§ 
}
•• 
}
¶¶ 	
public
©© 
OperationResult
©© 
CerrarOrden
©© *
(
©©* +
long
©©+ /
idOrden
©©0 7
)
©©7 8
{
™™ 	
try
´´ 
{
¨¨ 
Orden_Atencion
≠≠ 
ordenAtencion
≠≠ ,
=
≠≠- .%
_restauranteRepositorio
≠≠/ F
.
≠≠F G$
ObtenerOrdenDeAtencion
≠≠G ]
(
≠≠] ^
idOrden
≠≠^ e
)
≠≠e f
;
≠≠f g
if
ÆÆ 
(
ÆÆ 
ordenAtencion
ÆÆ !
.
ÆÆ! "
Estado
ÆÆ" (
!=
ÆÆ) +
MaestroSettings
ÆÆ, ;
.
ÆÆ; <
Default
ÆÆ< C
.
ÆÆC D.
 IdDetalleMaestroEstadoConfirmado
ÆÆD d
)
ÆÆd e
{
ØØ 
throw
∞∞ 
new
∞∞ 
LogicaException
∞∞ -
(
∞∞- .
$str
∞∞. |
)
∞∞| }
;
∞∞} ~
}
±± 
OperationResult
≤≤ 
result
≤≤  &
=
≤≤' (
new
≤≤) ,
OperationResult
≤≤- <
(
≤≤< =
)
≤≤= >
;
≤≤> ?
Transaccion
≥≥ 
orden
≥≥ !
=
≥≥" #%
_transaccionRepositorio
≥≥$ ;
.
≥≥; < 
ObtenerTransaccion
≥≥< N
(
≥≥N O
idOrden
≥≥O V
)
≥≥V W
;
≥≥W X
orden
¥¥ 
.
¥¥ 
id_estado_actual
¥¥ &
=
¥¥' (
MaestroSettings
¥¥) 8
.
¥¥8 9
Default
¥¥9 @
.
¥¥@ A+
IdDetalleMaestroEstadoCerrado
¥¥A ^
;
¥¥^ _
result
µµ 
=
µµ %
_transaccionRepositorio
µµ 0
.
µµ0 1#
ActualizarTransaccion
µµ1 F
(
µµF G
orden
µµG L
)
µµL M
;
µµM N
return
∂∂ 
result
∂∂ 
;
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
	Exception
∏∏ 
e
∏∏ 
)
∏∏ 
{
ππ 
throw
∫∫ 
e
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
public
ææ 
OperationResult
ææ 
CerrarAtencion
ææ -
(
ææ- .
long
ææ. 2

idAtencion
ææ3 =
,
ææ= >
SesionRestaurante
ææ? P
sesion
ææQ W
)
ææW X
{
øø 	
try
¿¿ 
{
¡¡ 
OperationResult
¬¬ 
result
¬¬  &
=
¬¬' (
new
¬¬) ,
OperationResult
¬¬- <
(
¬¬< =
)
¬¬= >
;
¬¬> ?
var
√√ 
fechaActual
√√ 
=
√√  !
DateTimeUtil
√√" .
.
√√. /
FechaActual
√√/ :
(
√√: ;
)
√√; <
;
√√< =
Transaccion
ƒƒ !
transaccionAtencion
ƒƒ /
=
ƒƒ0 1%
_transaccionRepositorio
ƒƒ2 I
.
ƒƒI J 
ObtenerTransaccion
ƒƒJ \
(
ƒƒ\ ]

idAtencion
ƒƒ] g
)
ƒƒg h
;
ƒƒh i
Actor_negocio
≈≈ 
actorNegocioMesa
≈≈ .
=
≈≈/ 0
null
≈≈1 5
;
≈≈5 6
if
∆∆ 
(
∆∆ !
transaccionAtencion
∆∆ '
.
∆∆' (
importe_total
∆∆( 5
==
∆∆6 8
$num
∆∆9 :
)
∆∆: ;
{
«« 
actorNegocioMesa
»» $
=
»»% &!
transaccionAtencion
»»' :
.
»»: ;
Actor_negocio4
»»; I
;
»»I J
actorNegocioMesa
…… $
.
……$ %

indicador1
……% /
=
……0 1
false
……2 7
;
……7 8
}
    
Estado_transaccion
ÀÀ "
estadoCerrado
ÀÀ# 0
=
ÀÀ1 2
new
ÀÀ3 6 
Estado_transaccion
ÀÀ7 I
(
ÀÀI J
)
ÀÀJ K
{
ÃÃ 
id_transaccion
ÕÕ "
=
ÕÕ# $

idAtencion
ÕÕ% /
,
ÕÕ/ 0
	id_estado
ŒŒ 
=
ŒŒ 
MaestroSettings
ŒŒ  /
.
ŒŒ/ 0
Default
ŒŒ0 7
.
ŒŒ7 8+
IdDetalleMaestroEstadoCerrado
ŒŒ8 U
,
ŒŒU V
fecha
œœ 
=
œœ 
fechaActual
œœ '
,
œœ' (
id_empleado
–– 
=
––  !
sesion
––" (
.
––( )
SesionDeUsuario
––) 8
.
––8 9
Empleado
––9 A
.
––A B
Id
––B D
,
––D E

comentario
—— 
=
——  
$str
——! S
}
““ 
;
““ 
result
”” 
=
”” 
actorNegocioMesa
”” )
==
””* ,
null
””- 1
?
””2 3%
_transaccionRepositorio
””4 K
.
””K L+
CrearEstadoDeTransaccionAhora
””L i
(
””i j
estadoCerrado
””j w
)
””w x
:
””y z&
_transaccionRepositorio””{ í
.””í ì<
,CrearEstadoTransaccionActualizarActorNegocio””ì ø
(””ø ¿
estadoCerrado””¿ Õ
,””Õ Œ 
actorNegocioMesa””œ ﬂ
)””ﬂ ‡
;””‡ ·
result
‘‘ 
.
‘‘ 
information
‘‘ "
=
‘‘# $
estadoCerrado
‘‘% 2
.
‘‘2 3
	id_estado
‘‘3 <
;
‘‘< =
result
’’ 
.
’’ 
objeto
’’ 
=
’’ 
actorNegocioMesa
’’  0
!=
’’1 3
null
’’4 8
;
’’8 9
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
e
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
e
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
›› 	
public
·· 
OperationResult
·· 
AnularAtencion
·· -
(
··- .
long
··. 2

idAtencion
··3 =
)
··= >
{
‚‚ 	
try
„„ 
{
‰‰ 
OperationResult
ÂÂ 
result
ÂÂ  &
=
ÂÂ' (
new
ÂÂ) ,
OperationResult
ÂÂ- <
(
ÂÂ< =
)
ÂÂ= >
;
ÂÂ> ?
Transaccion
ÊÊ 
atencion
ÊÊ $
=
ÊÊ% &%
_transaccionRepositorio
ÊÊ' >
.
ÊÊ> ? 
ObtenerTransaccion
ÊÊ? Q
(
ÊÊQ R

idAtencion
ÊÊR \
)
ÊÊ\ ]
;
ÊÊ] ^
if
ËË 
(
ËË 
atencion
ËË 
!=
ËË 
null
ËË  $
)
ËË$ %
{
ÈÈ 
atencion
ÍÍ 
.
ÍÍ 
id_estado_actual
ÍÍ -
=
ÍÍ. /
MaestroSettings
ÍÍ0 ?
.
ÍÍ? @
Default
ÍÍ@ G
.
ÍÍG H+
IdDetalleMaestroEstadoAnulado
ÍÍH e
;
ÍÍe f
atencion
ÏÏ 
.
ÏÏ 
Actor_negocio1
ÏÏ +
.
ÏÏ+ ,

indicador1
ÏÏ, 6
=
ÏÏ7 8
false
ÏÏ9 >
;
ÏÏ> ?
result
ÓÓ 
=
ÓÓ %
_transaccionRepositorio
ÓÓ 4
.
ÓÓ4 5#
ActualizarTransaccion
ÓÓ5 J
(
ÓÓJ K
atencion
ÓÓK S
)
ÓÓS T
;
ÓÓT U
}
ÔÔ 
return
 
result
 
;
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
e
ÚÚ 
)
ÚÚ 
{
ÛÛ 
throw
ÙÙ 
e
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 	
public
¯¯ 
OperationResult
¯¯ $
CambiarEstadoDeOrdenes
¯¯ 5
(
¯¯5 6
long
¯¯6 :
[
¯¯: ;
]
¯¯; <
ids
¯¯= @
,
¯¯@ A
int
¯¯B E
estado
¯¯F L
)
¯¯L M
{
˘˘ 	
try
˙˙ 
{
˚˚ 
OperationResult
¸¸ 
result
¸¸  &
=
¸¸' (%
_restauranteRepositorio
¸¸) @
.
¸¸@ A'
ActualizarEstadoDeOrdenes
¸¸A Z
(
¸¸Z [
ids
¸¸[ ^
,
¸¸^ _
estado
¸¸` f
)
¸¸f g
;
¸¸g h
return
˝˝ 
result
˝˝ 
;
˝˝ 
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
	Exception
ˇˇ 
e
ˇˇ 
)
ˇˇ 
{
Ä	Ä	 
throw
Å	Å	 
e
Å	Å	 
;
Å	Å	 
}
Ç	Ç	 
}
É	É	 	
public
Ö	Ö	 
List
Ö	Ö	 
<
Ö	Ö	 #
ResumenOrden_Consulta
Ö	Ö	 )
>
Ö	Ö	) *.
 ObtenerReporteDeResumenDeOrdenes
Ö	Ö	+ K
(
Ö	Ö	K L
DateTime
Ö	Ö	L T
Desde
Ö	Ö	U Z
,
Ö	Ö	Z [
DateTime
Ö	Ö	\ d
Hasta
Ö	Ö	e j
)
Ö	Ö	j k
{
Ü	Ü	 	
List
á	á	 
<
á	á	 #
ResumenOrden_Consulta
á	á	 &
>
á	á	& '
InfoReporte
á	á	( 3
=
á	á	4 5%
_restauranteRepositorio
á	á	6 M
.
á	á	M N1
#ObtenerReporteOrdenesIncluyendoMozo
á	á	N q
(
á	á	q r
Desde
á	á	r w
,
á	á	w x
Hasta
á	á	y ~
)
á	á	~ 
.á	á	 Ä
ToListá	á	Ä Ü
(á	á	Ü á
)á	á	á à
;á	á	à â
return
à	à	 
InfoReporte
à	à	 
;
à	à	 
}
â	â	 	
public
ã	ã	 
List
ã	ã	 
<
ã	ã	 ,
ResumenOrdenesPorMozo_Consulta
ã	ã	 2
>
ã	ã	2 3,
ObtenerReporteDeResumenDeMozos
ã	ã	4 R
(
ã	ã	R S
DateTime
ã	ã	S [
desde
ã	ã	\ a
,
ã	ã	a b
DateTime
ã	ã	c k
hasta
ã	ã	l q
)
ã	ã	q r
{
å	å	 	
List
ç	ç	 
<
ç	ç	 ,
ResumenOrdenesPorMozo_Consulta
ç	ç	 /
>
ç	ç	/ 0
InfoReporte
ç	ç	1 <
=
ç	ç	= >%
_restauranteRepositorio
ç	ç	? V
.
ç	ç	V W<
-ObtenerReporteMozoIncluyendoCantidadDeOrdenesç	ç	W Ñ
(ç	ç	Ñ Ö
desdeç	ç	Ö ä
,ç	ç	ä ã
hastaç	ç	å ë
)ç	ç	ë í
.ç	ç	í ì
ToListç	ç	ì ô
(ç	ç	ô ö
)ç	ç	ö õ
;ç	ç	õ ú
return
é	é	 
InfoReporte
é	é	 
;
é	é	 
}
è	è	 	
public
ë	ë	 
List
ë	ë	 
<
ë	ë	 &
ItemRestaurante_Consulta
ë	ë	 ,
>
ë	ë	, -0
"ObtenerReporteDeItemsDeRestaurante
ë	ë	. P
(
ë	ë	P Q
DateTime
ë	ë	Q Y
desde
ë	ë	Z _
,
ë	ë	_ `
DateTime
ë	ë	a i
hasta
ë	ë	j o
)
ë	ë	o p
{
í	í	 	
List
ì	ì	 
<
ì	ì	 &
ItemRestaurante_Consulta
ì	ì	 )
>
ì	ì	) *
InfoReporte
ì	ì	+ 6
=
ì	ì	7 8%
_restauranteRepositorio
ì	ì	9 P
.
ì	ì	P Q:
,ObtenerOrdenesInclusiveItemsYDetallesDeOrden
ì	ì	Q }
(
ì	ì	} ~
desdeì	ì	~ É
,ì	ì	É Ñ
hastaì	ì	Ö ä
)ì	ì	ä ã
.ì	ì	ã å
ToListì	ì	å í
(ì	ì	í ì
)ì	ì	ì î
;ì	ì	î ï
return
î	î	 
InfoReporte
î	î	 
;
î	î	 
}
ï	ï	 	
public
ñ	ñ	 
List
ñ	ñ	 
<
ñ	ñ	 #
DetalleOrden_Consulta
ñ	ñ	 )
>
ñ	ñ	) *6
(ObtenerReporteDetallesAtendidosEnOrdenes
ñ	ñ	+ S
(
ñ	ñ	S T
DateTime
ñ	ñ	T \
desde
ñ	ñ	] b
,
ñ	ñ	b c
DateTime
ñ	ñ	d l
hasta
ñ	ñ	m r
)
ñ	ñ	r s
{
ó	ó	 	
List
ò	ò	 
<
ò	ò	 #
DetalleOrden_Consulta
ò	ò	 &
>
ò	ò	& '
InfoReporte
ò	ò	( 3
=
ò	ò	4 5%
_restauranteRepositorio
ò	ò	6 M
.
ò	ò	M ND
5ObtenerOrdenesDetalladasIncluyendoMozoyDetalleDeOrdenò	ò	N É
(ò	ò	É Ñ
desdeò	ò	Ñ â
,ò	ò	â ä
hastaò	ò	ã ê
,ò	ò	ê ë&
EstadoDeDetalleDeOrdenò	ò	í ®
.ò	ò	® ©
Atendidoò	ò	© ±
)ò	ò	± ≤
.ò	ò	≤ ≥
ToListò	ò	≥ π
(ò	ò	π ∫
)ò	ò	∫ ª
;ò	ò	ª º
return
ô	ô	 
InfoReporte
ô	ô	 
;
ô	ô	 
}
ö	ö	 	
public
ú	ú	 
List
ú	ú	 
<
ú	ú	 #
DetalleOrden_Consulta
ú	ú	 )
>
ú	ú	) *6
(ObtenerReporteDetallesDevueltosEnOrdenes
ú	ú	+ S
(
ú	ú	S T
DateTime
ú	ú	T \
desde
ú	ú	] b
,
ú	ú	b c
DateTime
ú	ú	d l
hasta
ú	ú	m r
)
ú	ú	r s
{
ù	ù	 	
List
û	û	 
<
û	û	 #
DetalleOrden_Consulta
û	û	 &
>
û	û	& '
InfoReporte
û	û	( 3
=
û	û	4 5%
_restauranteRepositorio
û	û	6 M
.
û	û	M ND
5ObtenerOrdenesDetalladasIncluyendoMozoyDetalleDeOrdenû	û	N É
(û	û	É Ñ
desdeû	û	Ñ â
,û	û	â ä
hastaû	û	ã ê
,û	û	ê ë&
EstadoDeDetalleDeOrdenû	û	í ®
.û	û	® ©
Devueltoû	û	© ±
)û	û	± ≤
.û	û	≤ ≥
ToListû	û	≥ π
(û	û	π ∫
)û	û	∫ ª
;û	û	ª º
return
ü	ü	 
InfoReporte
ü	ü	 
;
ü	ü	 
}
†	†	 	
public
¢	¢	 !
AtencionRestaurante
¢	¢	 "'
ObtenerAtencionEspecifica
¢	¢	# <
(
¢	¢	< =
long
¢	¢	= A
id
¢	¢	B D
)
¢	¢	D E
{
£	£	 	!
AtencionRestaurante
§	§	 
atencion
§	§	  (
=
§	§	) *%
_restauranteRepositorio
§	§	+ B
.
§	§	B C'
ObtenerAtencionEspecifica
§	§	C \
(
§	§	\ ]
id
§	§	] _
)
§	§	_ `
;
§	§	` a
atencion
•	•	 
.
•	•	 
Comprobantes
•	•	 !
=
•	•	" #
_operacionLogica
•	•	$ 4
.
•	•	4 58
*ObtenerOrdenesDeVenta_SegunOperacionOrigen
•	•	5 _
(
•	•	_ `
id
•	•	` b
)
•	•	b c
.
•	•	c d
ToList
•	•	d j
(
•	•	j k
)
•	•	k l
;
•	•	l m
return
¶	¶	 
atencion
¶	¶	 
;
¶	¶	 
}
ß	ß	 	
public
©	©	 

Dictionary
©	©	 
<
©	©	 
long
©	©	 
,
©	©	 
long
©	©	  $
>
©	©	$ %.
 ObtenerIdsOrdenDeVentaDeAtencion
©	©	& F
(
©	©	F G
long
©	©	G K

idAtencion
©	©	L V
)
©	©	V W
{
™	™	 	
var
´	´	 
idsTransaccion
´	´	 
=
´	´	  %
_restauranteRepositorio
´	´	! 8
.
´	´	8 9:
,ObtenerIdsTransaccionDeTransaccionReferencia
´	´	9 e
(
´	´	e f

idAtencion
´	´	f p
)
´	´	p q
.
´	´	q r
ToArray
´	´	r y
(
´	´	y z
)
´	´	z {
;
´	´	{ |

Dictionary
¨	¨	 
<
¨	¨	 
long
¨	¨	 
,
¨	¨	 
long
¨	¨	 !
>
¨	¨	! "
diccionario
¨	¨	# .
=
¨	¨	/ 0
new
¨	¨	1 4

Dictionary
¨	¨	5 ?
<
¨	¨	? @
long
¨	¨	@ D
,
¨	¨	D E
long
¨	¨	F J
>
¨	¨	J K
(
¨	¨	K L
)
¨	¨	L M
;
¨	¨	M N
for
≠	≠	 
(
≠	≠	 
int
≠	≠	 
i
≠	≠	 
=
≠	≠	 
$num
≠	≠	 
;
≠	≠	 
i
≠	≠	 
<
≠	≠	 
idsTransaccion
≠	≠	  .
.
≠	≠	. /
Count
≠	≠	/ 4
(
≠	≠	4 5
)
≠	≠	5 6
;
≠	≠	6 7
i
≠	≠	8 9
++
≠	≠	9 ;
)
≠	≠	; <
{
Æ	Æ	 
diccionario
Ø	Ø	 
.
Ø	Ø	 
Add
Ø	Ø	 
(
Ø	Ø	  
i
Ø	Ø	  !
,
Ø	Ø	! "
idsTransaccion
Ø	Ø	# 1
[
Ø	Ø	1 2
i
Ø	Ø	2 3
]
Ø	Ø	3 4
)
Ø	Ø	4 5
;
Ø	Ø	5 6
}
∞	∞	 
return
±	±	 
diccionario
±	±	 
;
±	±	 
}
≤	≤	 	
public
¥	¥	 
List
¥	¥	 
<
¥	¥	 M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
¥	¥	 S
>
¥	¥	S TG
8ObtenerOrdenesDeVentaPorConceptoTransferidasYConfirmadas¥	¥	U ç
(¥	¥	ç é
int¥	¥	é ë
[¥	¥	ë í
]¥	¥	í ì 
idsPuntosDeVenta¥	¥	î §
,¥	¥	§ •
DateTime¥	¥	¶ Æ

fechaDesde¥	¥	Ø π
,¥	¥	π ∫
DateTime¥	¥	ª √

fechaHasta¥	¥	ƒ Œ
)¥	¥	Œ œ
{
µ	µ	 	
var
∂	∂	 
	resultado
∂	∂	 
=
∂	∂	 
new
∂	∂	 
List
∂	∂	  $
<
∂	∂	$ %M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
∂	∂	% d
>
∂	∂	d e
(
∂	∂	e f
)
∂	∂	f g
;
∂	∂	g h
var
π	π	 =
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
π	π	 ?
=
π	π	@ A%
_transaccionRepositorio
π	π	B Y
.
π	π	Y ZJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadosπ	π	Z ï
(π	π	ï ñ 
idsPuntosDeVentaπ	π	ñ ¶
,π	π	¶ ß
Diccionarioπ	π	® ≥
.π	π	≥ ¥\
LTiposDeTransaccionOrdenesDeOperacionesDeVentasDondeIngresaDineroYSalenBienesπ	π	¥ Ä
,π	π	Ä Å

fechaDesdeπ	π	Ç å
,π	π	å ç

fechaHastaπ	π	é ò
,π	π	ò ô
MaestroSettingsπ	π	ö ©
.π	π	© ™
Defaultπ	π	™ ±
.π	π	± ≤0
 IdDetalleMaestroEstadoConfirmadoπ	π	≤ “
)π	π	“ ”
.π	π	” ‘
ToListπ	π	‘ ⁄
(π	π	⁄ €
)π	π	€ ‹
;π	π	‹ ›
var
ª	ª	 =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
ª	ª	 ?
=
ª	ª	@ A%
_transaccionRepositorio
ª	ª	B Y
.
ª	ª	Y ZJ
;ObtenerTransaccionesInclusiveActoresYDetalleMaestroYEstadosª	ª	Z ï
(ª	ª	ï ñ 
idsPuntosDeVentaª	ª	ñ ¶
,ª	ª	¶ ß
Diccionarioª	ª	® ≥
.ª	ª	≥ ¥q
aTiposDeTransaccionOrdenesDeOperacionesDeVentasDondeSaleDineroEIngresanBienesExceptoInvalidacionesª	ª	¥ ï
,ª	ª	ï ñ
MaestroSettingsª	ª	ó ¶
.ª	ª	¶ ß
Defaultª	ª	ß Æ
.ª	ª	Æ Ø0
 IdDetalleMaestroEstadoInvalidadoª	ª	Ø œ
,ª	ª	œ –

fechaDesdeª	ª	— €
,ª	ª	€ ‹

fechaHastaª	ª	› Á
)ª	ª	Á Ë
.ª	ª	Ë È
ToListª	ª	È Ô
(ª	ª	Ô 
)ª	ª	 Ò
;ª	ª	Ò Ú
foreach
æ	æ	 
(
æ	æ	 
var
æ	æ	 
item
æ	æ	 
in
æ	æ	  =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
æ	æ	! P
)
æ	æ	P Q
{
ø	ø	 
item
¿	¿	 
.
¿	¿	 
Cantidad
¿	¿	 
*=
¿	¿	  
-
¿	¿	! "
$num
¿	¿	" #
;
¿	¿	# $
item
¡	¡	 
.
¡	¡	 
Importe
¡	¡	 
*=
¡	¡	 
-
¡	¡	  !
$num
¡	¡	! "
;
¡	¡	" #
}
¬	¬	 
int
≈	≈	 
[
≈	≈	 
]
≈	≈	 *
idsConceptosDeNegocioComunes
≈	≈	 .
=
≈	≈	/ 0=
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
≈	≈	1 `
.
≈	≈	` a
Select
≈	≈	a g
(
≈	≈	g h
o
≈	≈	h i
=>
≈	≈	j l
o
≈	≈	m n
.
≈	≈	n o 
IdConceptoNegocio≈	≈	o Ä
)≈	≈	Ä Å
.≈	≈	Å Ç
	Intersect≈	≈	Ç ã
(≈	≈	ã å?
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes≈	≈	å ª
.≈	≈	ª º
Select≈	≈	º ¬
(≈	≈	¬ √
o≈	≈	√ ƒ
=>≈	≈	≈ «
o≈	≈	» …
.≈	≈	…  !
IdConceptoNegocio≈	≈	  €
)≈	≈	€ ‹
)≈	≈	‹ ›
.≈	≈	› ﬁ
Distinct≈	≈	ﬁ Ê
(≈	≈	Ê Á
)≈	≈	Á Ë
.≈	≈	Ë È
ToArray≈	≈	È 
(≈	≈	 Ò
)≈	≈	Ò Ú
;≈	≈	Ú Û
	resultado
«	«	 
.
«	«	 
AddRange
«	«	 
(
«	«	 =
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
«	«	 N
.
«	«	N O
Where
«	«	O T
(
«	«	T U
o
«	«	U V
=>
«	«	W Y
!
«	«	Z [*
idsConceptosDeNegocioComunes
«	«	[ w
.
«	«	w x
Contains«	«	x Ä
(«	«	Ä Å
o«	«	Å Ç
.«	«	Ç É!
IdConceptoNegocio«	«	É î
)«	«	î ï
)«	«	ï ñ
)«	«	ñ ó
;«	«	ó ò
	resultado
…	…	 
.
…	…	 
AddRange
…	…	 
(
…	…	 =
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
…	…	 N
.
…	…	N O
Where
…	…	O T
(
…	…	T U
o
…	…	U V
=>
…	…	W Y
!
…	…	Z [*
idsConceptosDeNegocioComunes
…	…	[ w
.
…	…	w x
Contains…	…	x Ä
(…	…	Ä Å
o…	…	Å Ç
.…	…	Ç É!
IdConceptoNegocio…	…	É î
)…	…	î ï
)…	…	ï ñ
)…	…	ñ ó
;…	…	ó ò
foreach
Ã	Ã	 
(
Ã	Ã	 
var
Ã	Ã	 
idConceptoNegocio
Ã	Ã	 *
in
Ã	Ã	+ -*
idsConceptosDeNegocioComunes
Ã	Ã	. J
)
Ã	Ã	J K
{
Õ	Õ	 
var
Œ	Œ	 
itemPositivo
Œ	Œ	  
=
Œ	Œ	! "=
/resumenOrdenesEnLAsQueIngresaDineroYSalenBienes
Œ	Œ	# R
.
Œ	Œ	R S
SingleOrDefault
Œ	Œ	S b
(
Œ	Œ	b c
o
Œ	Œ	c d
=>
Œ	Œ	e g
o
Œ	Œ	h i
.
Œ	Œ	i j
IdConceptoNegocio
Œ	Œ	j {
==
Œ	Œ	| ~ 
idConceptoNegocioŒ	Œ	 ê
)Œ	Œ	ê ë
;Œ	Œ	ë í
var
œ	œ	 
itemNegativo
œ	œ	  
=
œ	œ	! "=
/resumenOrdenesEnLAsQueSaleDineroEIngresanBienes
œ	œ	# R
.
œ	œ	R S
SingleOrDefault
œ	œ	S b
(
œ	œ	b c
o
œ	œ	c d
=>
œ	œ	e g
o
œ	œ	h i
.
œ	œ	i j
IdConceptoNegocio
œ	œ	j {
==
œ	œ	| ~ 
idConceptoNegocioœ	œ	 ê
)œ	œ	ê ë
;œ	œ	ë í
	resultado
—	—	 
.
—	—	 
Add
—	—	 
(
—	—	 
new
—	—	 !M
?Resumen_Transaccion_Venta_PorConceptoBasico_Y_ConceptoDeNegocio
—	—	" a
(
—	—	a b
)
—	—	b c
{
—	—	d e
IdConceptoNegocio
—	—	f w
=
—	—	x y 
idConceptoNegocio—	—	z ã
,—	—	ã å
CodigoBarra—	—	ç ò
=—	—	ô ö
itemPositivo—	—	õ ß
.—	—	ß ®
CodigoBarra—	—	® ≥
,—	—	≥ ¥
ConceptoNegocio—	—	µ ƒ
=—	—	≈ ∆
itemPositivo—	—	« ”
.—	—	” ‘
ConceptoNegocio—	—	‘ „
,—	—	„ ‰
NombreBasico—	—	Â Ò
=—	—	Ú Û
itemPositivo—	—	Ù Ä
.—	—	Ä Å
NombreBasico—	—	Å ç
,—	—	ç é
Cantidad—	—	è ó
=—	—	ò ô
itemPositivo—	—	ö ¶
.—	—	¶ ß
Cantidad—	—	ß Ø
+—	—	∞ ±
itemNegativo—	—	≤ æ
.—	—	æ ø
Cantidad—	—	ø «
,—	—	« »
Importe—	—	… –
=—	—	— “
itemPositivo—	—	” ﬂ
.—	—	ﬂ ‡
Importe—	—	‡ Á
+—	—	Ë È
itemNegativo—	—	Í ˆ
.—	—	ˆ ˜
Importe—	—	˜ ˛
}—	—	ˇ Ä
)—	—	Ä Å
;—	—	Å Ç
}
“	“	 
return
”	”	 
	resultado
”	”	 
.
”	”	 
OrderBy
”	”	 $
(
”	”	$ %
r
”	”	% &
=>
”	”	' )
r
”	”	* +
.
”	”	+ ,
CodigoBarra
”	”	, 7
??
”	”	8 :
r
”	”	; <
.
”	”	< =
ConceptoNegocio
”	”	= L
)
”	”	L M
.
”	”	M N
ToList
”	”	N T
(
”	”	T U
)
”	”	U V
;
”	”	V W
}
‘	‘	 	
public
›	›	 '
ComprobanteCuentaAtencion
›	›	 (.
 ObtenerComprobanteCuentaAtencion
›	›	) I
(
›	›	I J
long
›	›	J N

idAtencion
›	›	O Y
)
›	›	Y Z
{
ﬁ	ﬁ	 	
var
ﬂ	ﬂ	 
atencion
ﬂ	ﬂ	 
=
ﬂ	ﬂ	 %
_restauranteRepositorio
ﬂ	ﬂ	 2
.
ﬂ	ﬂ	2 3'
ObtenerAtencionEspecifica
ﬂ	ﬂ	3 L
(
ﬂ	ﬂ	L M

idAtencion
ﬂ	ﬂ	M W
)
ﬂ	ﬂ	W X
;
ﬂ	ﬂ	X Y
var
‡	‡	 
idEstablecimiento
‡	‡	 !
=
‡	‡	" #
_mesaRepositorio
‡	‡	$ 4
.
‡	‡	4 5&
ObtenerIdEstablecimiento
‡	‡	5 M
(
‡	‡	M N
atencion
‡	‡	N V
.
‡	‡	V W
Mesa
‡	‡	W [
.
‡	‡	[ \
Id
‡	‡	\ ^
)
‡	‡	^ _
;
‡	‡	_ `
var
·	·	 
establecimiento
·	·	 
=
·	·	  !)
_establecimientoRepositorio
·	·	" =
.
·	·	= >=
/ObtenerEstablecimientoComercialComoItemGenerico
·	·	> m
(
·	·	m n
idEstablecimiento
·	·	n 
)·	·	 Ä
;·	·	Ä Å
var
‚	‚	 #
nombreEstablecimiento
‚	‚	 %
=
‚	‚	& '
establecimiento
‚	‚	( 7
.
‚	‚	7 8
Nombre
‚	‚	8 >
;
‚	‚	> ?
var
„	„	 
ordenesFiltradas
„	„	  
=
„	„	! "
atencion
„	„	# +
.
„	„	+ ,
Ordenes
„	„	, 3
.
„	„	3 4
ToList
„	„	4 :
(
„	„	: ;
)
„	„	; <
;
„	„	< =
ordenesFiltradas
‰	‰	 
.
‰	‰	 
ForEach
‰	‰	 $
(
‰	‰	$ %
o
‰	‰	% &
=>
‰	‰	' )
{
‰	‰	* +
o
‰	‰	, -
.
‰	‰	- .
DetallesDeOrden
‰	‰	. =
=
‰	‰	> ?
o
‰	‰	@ A
.
‰	‰	A B
DetallesDeOrden
‰	‰	B Q
.
‰	‰	Q R
Where
‰	‰	R W
(
‰	‰	W X
dor
‰	‰	X [
=>
‰	‰	\ ^
dor
‰	‰	_ b
.
‰	‰	b c
Estado
‰	‰	c i
!=
‰	‰	j l
(
‰	‰	m n
int
‰	‰	n q
)
‰	‰	q r%
EstadoDeDetalleDeOrden‰	‰	r à
.‰	‰	à â
Devuelto‰	‰	â ë
&&‰	‰	í î
dor‰	‰	ï ò
.‰	‰	ò ô
Estado‰	‰	ô ü
!=‰	‰	† ¢
(‰	‰	£ §
int‰	‰	§ ß
)‰	‰	ß ®&
EstadoDeDetalleDeOrden‰	‰	® æ
.‰	‰	æ ø
Anulado‰	‰	ø ∆
)‰	‰	∆ «
.‰	‰	« »
ToList‰	‰	» Œ
(‰	‰	Œ œ
)‰	‰	œ –
;‰	‰	– —
}‰	‰	“ ”
)‰	‰	” ‘
;‰	‰	‘ ’
ordenesFiltradas
Â	Â	 
=
Â	Â	 
ordenesFiltradas
Â	Â	 /
.
Â	Â	/ 0
Where
Â	Â	0 5
(
Â	Â	5 6
o
Â	Â	6 7
=>
Â	Â	8 :
o
Â	Â	; <
.
Â	Â	< =
DetallesDeOrden
Â	Â	= L
.
Â	Â	L M
Count
Â	Â	M R
(
Â	Â	R S
)
Â	Â	S T
>
Â	Â	U V
$num
Â	Â	W X
)
Â	Â	X Y
.
Â	Â	Y Z
ToList
Â	Â	Z `
(
Â	Â	` a
)
Â	Â	a b
;
Â	Â	b c
atencion
Ê	Ê	 
.
Ê	Ê	 
Ordenes
Ê	Ê	 
=
Ê	Ê	 
ordenesFiltradas
Ê	Ê	 /
;
Ê	Ê	/ 00
"AgruparDetallesPorIdPrecioUnitario
Á	Á	 .
(
Á	Á	. /
atencion
Á	Á	/ 7
)
Á	Á	7 8
;
Á	Á	8 9
return
Ë	Ë	 
new
Ë	Ë	 '
ComprobanteCuentaAtencion
Ë	Ë	 0
(
Ë	Ë	0 1
atencion
Ë	Ë	1 9
,
Ë	Ë	9 :#
nombreEstablecimiento
Ë	Ë	; P
,
Ë	Ë	P Q
DateTimeUtil
Ë	Ë	R ^
.
Ë	Ë	^ _
FechaActual
Ë	Ë	_ j
(
Ë	Ë	j k
)
Ë	Ë	k l
)
Ë	Ë	l m
;
Ë	Ë	m n
}
È	È	 	
private
Î	Î	 
void
Î	Î	 0
"AgruparDetallesPorIdPrecioUnitario
Î	Î	 7
(
Î	Î	7 8!
AtencionRestaurante
Î	Î	8 K
atencion
Î	Î	L T
)
Î	Î	T U
{
Ï	Ï	 	
try
Ì	Ì	 
{
Ó	Ó	 
foreach
Ô	Ô	 
(
Ô	Ô	 
var
Ô	Ô	 
orden
Ô	Ô	 "
in
Ô	Ô	# %
atencion
Ô	Ô	& .
.
Ô	Ô	. /
Ordenes
Ô	Ô	/ 6
)
Ô	Ô	6 7
{
		 
var
Ò	Ò	 
nuevosDetalles
Ò	Ò	 &
=
Ò	Ò	' (
new
Ò	Ò	) ,
List
Ò	Ò	- 1
<
Ò	Ò	1 2
DetalleOrden
Ò	Ò	2 >
>
Ò	Ò	> ?
(
Ò	Ò	? @
)
Ò	Ò	@ A
;
Ò	Ò	A B
var
Ú	Ú	 $
detallesOrdenAgrupados
Ú	Ú	 .
=
Ú	Ú	/ 0
orden
Ú	Ú	1 6
.
Ú	Ú	6 7
DetallesDeOrden
Ú	Ú	7 F
.
Ú	Ú	F G
GroupBy
Ú	Ú	G N
(
Ú	Ú	N O
d
Ú	Ú	O P
=>
Ú	Ú	Q S
new
Ú	Ú	T W
{
Ú	Ú	X Y
d
Ú	Ú	Z [
.
Ú	Ú	[ \
IdItem
Ú	Ú	\ b
,
Ú	Ú	b c
d
Ú	Ú	d e
.
Ú	Ú	e f
Precio
Ú	Ú	f l
}
Ú	Ú	m n
)
Ú	Ú	n o
;
Ú	Ú	o p
foreach
Û	Û	 
(
Û	Û	 
var
Û	Û	  
grupo
Û	Û	! &
in
Û	Û	' )$
detallesOrdenAgrupados
Û	Û	* @
)
Û	Û	@ A
{
Ù	Ù	 
nuevosDetalles
ı	ı	 &
.
ı	ı	& '
Add
ı	ı	' *
(
ı	ı	* +
new
ı	ı	+ .
DetalleOrden
ı	ı	/ ;
(
ı	ı	; <
)
ı	ı	< =
{
ˆ	ˆ	 
Id
˜	˜	 
=
˜	˜	  
grupo
˜	˜	! &
.
˜	˜	& '
Key
˜	˜	' *
.
˜	˜	* +
IdItem
˜	˜	+ 1
,
˜	˜	1 2
Cantidad
¯	¯	 $
=
¯	¯	% &
grupo
¯	¯	' ,
.
¯	¯	, -
Sum
¯	¯	- 0
(
¯	¯	0 1
g
¯	¯	1 2
=>
¯	¯	3 5
g
¯	¯	6 7
.
¯	¯	7 8
Cantidad
¯	¯	8 @
)
¯	¯	@ A
,
¯	¯	A B
Precio
˘	˘	 "
=
˘	˘	# $
grupo
˘	˘	% *
.
˘	˘	* +
Key
˘	˘	+ .
.
˘	˘	. /
Precio
˘	˘	/ 5
,
˘	˘	5 6
Importe
˙	˙	 #
=
˙	˙	$ %
grupo
˙	˙	& +
.
˙	˙	+ ,
Sum
˙	˙	, /
(
˙	˙	/ 0
g
˙	˙	0 1
=>
˙	˙	2 4
g
˙	˙	5 6
.
˙	˙	6 7
Importe
˙	˙	7 >
)
˙	˙	> ?
,
˙	˙	? @

NombreItem
˚	˚	 &
=
˚	˚	' (
grupo
˚	˚	) .
.
˚	˚	. /
First
˚	˚	/ 4
(
˚	˚	4 5
)
˚	˚	5 6
.
˚	˚	6 7

NombreItem
˚	˚	7 A
}
¸	¸	 
)
¸	¸	 
;
¸	¸	 
}
˝	˝	 
orden
˛	˛	 
.
˛	˛	 
DetallesDeOrden
˛	˛	 )
=
˛	˛	* +
nuevosDetalles
˛	˛	, :
;
˛	˛	: ;
}
ˇ	ˇ	 
}
Ä
Ä
 
catch
Å
Å
 
(
Å
Å
 
	Exception
Å
Å
 
e
Å
Å
 
)
Å
Å
 
{
Ç
Ç
 
throw
É
É
 
new
É
É
 
LogicaException
É
É
 )
(
É
É
) *
$str
É
É
* ^
,
É
É
^ _
e
É
É
` a
)
É
É
a b
;
É
É
b c
}
Ñ
Ñ
 
}
Ö
Ö
 	
public
Ü
Ü
 
ComprobanteOrden
Ü
Ü
 5
'ObtenerComprobanteOrdenSinItemsAnulados
Ü
Ü
  G
(
Ü
Ü
G H
long
Ü
Ü
H L
idOrden
Ü
Ü
M T
)
Ü
Ü
T U
{
á
á
 	
var
à
à
 
orden
à
à
 
=
à
à
 %
_restauranteRepositorio
à
à
 /
.
à
à
/ 0d
UObtenerOrdenDeAtencionIncluidoDetallesDeOrdenItemsDeRestauranteYDetallesDeComplementoà
à
0 Ö
(à
à
Ö Ü
idOrdenà
à
Ü ç
)à
à
ç é
;à
à
é è
var
â
â
 !
detallesSinAnulados
â
â
 #
=
â
â
$ %
orden
â
â
& +
.
â
â
+ ,
DetallesDeOrden
â
â
, ;
.
â
â
; <
ToList
â
â
< B
(
â
â
B C
)
â
â
C D
.
â
â
D E
Where
â
â
E J
(
â
â
J K
d
â
â
K L
=>
â
â
M O
d
â
â
P Q
.
â
â
Q R
Estado
â
â
R X
!=
â
â
Y [
(
â
â
\ ]
int
â
â
] `
)
â
â
` a$
EstadoDeDetalleDeOrden
â
â
a w
.
â
â
w x
Anulado
â
â
x 
)â
â
 Ä
;â
â
Ä Å
orden
ä
ä
 
.
ä
ä
 
DetallesDeOrden
ä
ä
 !
=
ä
ä
" #!
detallesSinAnulados
ä
ä
$ 7
;
ä
ä
7 8
orden
ã
ã
 
.
ã
ã
 
Mesa
ã
ã
 
=
ã
ã
 
new
ã
ã
 
Mesa
ã
ã
 !
(
ã
ã
! "
_mesaRepositorio
ã
ã
" 2
.
ã
ã
2 3
ObtenerMesa
ã
ã
3 >
(
ã
ã
> ?
orden
ã
ã
? D
.
ã
ã
D E
IdMesa
ã
ã
E K
)
ã
ã
K L
)
ã
ã
L M
;
ã
ã
M N
var
å
å
 
idEstablecimiento
å
å
 !
=
å
å
" #
_mesaRepositorio
å
å
$ 4
.
å
å
4 5&
ObtenerIdEstablecimiento
å
å
5 M
(
å
å
M N
orden
å
å
N S
.
å
å
S T
IdMesa
å
å
T Z
)
å
å
Z [
;
å
å
[ \
var
ç
ç
 
establecimiento
ç
ç
 
=
ç
ç
  !)
_establecimientoRepositorio
ç
ç
" =
.
ç
ç
= >=
/ObtenerEstablecimientoComercialComoItemGenerico
ç
ç
> m
(
ç
ç
m n
idEstablecimiento
ç
ç
n 
)ç
ç
 Ä
;ç
ç
Ä Å
var
é
é
 #
nombreEstablecimiento
é
é
 %
=
é
é
& '
establecimiento
é
é
( 7
.
é
é
7 8
Nombre
é
é
8 >
;
é
é
> ?
return
è
è
 
new
è
è
 
ComprobanteOrden
è
è
 '
(
è
è
' (
orden
è
è
( -
,
è
è
- .#
nombreEstablecimiento
è
è
/ D
)
è
è
D E
;
è
è
E F
}
ê
ê
 	
public
í
í
 
List
í
í
 
<
í
í
 
Complemento
í
í
 
>
í
í
  *
ObtenerComplementosDeFamilia
í
í
! =
(
í
í
= >
int
í
í
> A
	idFamilia
í
í
B K
)
í
í
K L
{
ì
ì
 	
try
î
î
 
{
ï
ï
 
List
ñ
ñ
 
<
ñ
ñ
 
Complemento
ñ
ñ
  
>
ñ
ñ
  !
complementos
ñ
ñ
" .
=
ñ
ñ
/ 0%
_restauranteRepositorio
ñ
ñ
1 H
.
ñ
ñ
H I+
ObtenerComplementosPorFamilia
ñ
ñ
I f
(
ñ
ñ
f g
	idFamilia
ñ
ñ
g p
)
ñ
ñ
p q
.
ñ
ñ
q r
ToList
ñ
ñ
r x
(
ñ
ñ
x y
)
ñ
ñ
y z
;
ñ
ñ
z {
return
ó
ó
 
complementos
ó
ó
 #
;
ó
ó
# $
}
ô
ô
 
catch
ö
ö
 
(
ö
ö
 
	Exception
ö
ö
 
e
ö
ö
 
)
ö
ö
 
{
õ
õ
 
throw
ú
ú
 
new
ú
ú
 
LogicaException
ú
ú
 )
(
ú
ú
) *
$str
ú
ú
* ]
,
ú
ú
] ^
e
ú
ú
_ `
)
ú
ú
` a
;
ú
ú
a b
}
ù
ù
 
}
û
û
 	
public
†
†
 
List
†
†
 
<
†
†
 
Complemento
†
†
 
>
†
†
  !
ObtenerComplementos
†
†
! 4
(
†
†
4 5
)
†
†
5 6
{
°
°
 	
try
¢
¢
 
{
£
£
 
List
§
§
 
<
§
§
 
Complemento
§
§
  
>
§
§
  !
complementos
§
§
" .
=
§
§
/ 0%
_restauranteRepositorio
§
§
1 H
.
§
§
H I!
ObtenerComplementos
§
§
I \
(
§
§
\ ]
)
§
§
] ^
.
§
§
^ _
ToList
§
§
_ e
(
§
§
e f
)
§
§
f g
;
§
§
g h
complementos
•
•
 
.
•
•
 
OrderBy
•
•
 $
(
•
•
$ %
c
•
•
% &
=>
•
•
' )
c
•
•
* +
.
•
•
+ ,
Familia
•
•
, 3
)
•
•
3 4
.
•
•
4 5
ThenBy
•
•
5 ;
(
•
•
; <
c
•
•
< =
=>
•
•
> @
c
•
•
A B
.
•
•
B C
Nombre
•
•
C I
)
•
•
I J
;
•
•
J K
List
¶
¶
 
<
¶
¶
 
Complemento
¶
¶
  
>
¶
¶
  ! 
complementosResult
¶
¶
" 4
=
¶
¶
5 6
new
¶
¶
7 :
List
¶
¶
; ?
<
¶
¶
? @
Complemento
¶
¶
@ K
>
¶
¶
K L
(
¶
¶
L M
)
¶
¶
M N
;
¶
¶
N O
foreach
ß
ß
 
(
ß
ß
 
var
ß
ß
 
complemento
ß
ß
 (
in
ß
ß
) +
complementos
ß
ß
, 8
)
ß
ß
8 9
{
®
®
 
complemento
©
©
 
.
©
©
  
MostrarFamilia
©
©
  .
=
©
©
/ 0
!
©
©
1 2 
complementosResult
©
©
2 D
.
©
©
D E
Select
©
©
E K
(
©
©
K L
c
©
©
L M
=>
©
©
N P
c
©
©
Q R
.
©
©
R S
Familia
©
©
S Z
)
©
©
Z [
.
©
©
[ \
Contains
©
©
\ d
(
©
©
d e
complemento
©
©
e p
.
©
©
p q
Familia
©
©
q x
)
©
©
x y
;
©
©
y z
complemento
™
™
 
.
™
™
   
NumeroComplementos
™
™
  2
=
™
™
3 4
complementos
™
™
5 A
.
™
™
A B
Where
™
™
B G
(
™
™
G H
c
™
™
H I
=>
™
™
J L
c
™
™
M N
.
™
™
N O
Familia
™
™
O V
==
™
™
W Y
complemento
™
™
Z e
.
™
™
e f
Familia
™
™
f m
)
™
™
m n
.
™
™
n o
Count
™
™
o t
(
™
™
t u
)
™
™
u v
;
™
™
v w 
complementosResult
´
´
 &
.
´
´
& '
Add
´
´
' *
(
´
´
* +
complemento
´
´
+ 6
)
´
´
6 7
;
´
´
7 8
}
¨
¨
 
return
≠
≠
  
complementosResult
≠
≠
 )
;
≠
≠
) *
}
Æ
Æ
 
catch
Ø
Ø
 
(
Ø
Ø
 
	Exception
Ø
Ø
 
e
Ø
Ø
 
)
Ø
Ø
 
{
∞
∞
 
throw
±
±
 
new
±
±
 
LogicaException
±
±
 )
(
±
±
) *
$str
±
±
* ]
,
±
±
] ^
e
±
±
_ `
)
±
±
` a
;
±
±
a b
}
≤
≤
 
}
≥
≥
 	
public
¥
¥
 
OperationResult
¥
¥
 #
ActualizarComplemento
¥
¥
 4
(
¥
¥
4 5
Complemento
¥
¥
5 @
complemento
¥
¥
A L
)
¥
¥
L M
{
µ
µ
 	
try
∂
∂
 
{
∑
∑
 
return
∏
∏
 %
_restauranteRepositorio
∏
∏
 .
.
∏
∏
. /#
ActualizarComplemento
∏
∏
/ D
(
∏
∏
D E
complemento
∏
∏
E P
)
∏
∏
P Q
;
∏
∏
Q R
}
π
π
 
catch
∫
∫
 
(
∫
∫
 
	Exception
∫
∫
 
e
∫
∫
 
)
∫
∫
 
{
ª
ª
 
throw
º
º
 
new
º
º
 
LogicaException
º
º
 )
(
º
º
) *
$str
º
º
* W
,
º
º
W X
e
º
º
Y Z
)
º
º
Z [
;
º
º
[ \
}
Ω
Ω
 
}
æ
æ
 	
}
ø
ø
 
}¿
¿
 Ò
FD:\Tsp.Sigescom2.3-Back\Tsp.Sigescom.Logica\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str .
). /
]/ 0
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *